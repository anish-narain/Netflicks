
controller_final.elf:     file format elf32-littlenios2
controller_final.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00020228

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x00010d54 memsz 0x00010d54 flags r-x
    LOAD off    0x00011d74 vaddr 0x00030d74 paddr 0x000329ac align 2**12
         filesz 0x00001c38 memsz 0x00001c38 flags rw-
    LOAD off    0x000145e4 vaddr 0x000345e4 paddr 0x000345e4 align 2**12
         filesz 0x00000000 memsz 0x0000017c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000208  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000104c8  00020228  00020228  00001228  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000684  000306f0  000306f0  000116f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c38  00030d74  000329ac  00011d74  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000017c  000345e4  000345e4  000145e4  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory 00000000  00034760  00034760  000139ac  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  000139ac  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001088  00000000  00000000  000139e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   0002ed47  00000000  00000000  00014a68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000b800  00000000  00000000  000437af  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   000173af  00000000  00000000  0004efaf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  00002634  00000000  00000000  00066360  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    0000406d  00000000  00000000  00068994  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0001e4ac  00000000  00000000  0006ca01  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000010  00000000  00000000  0008aeb0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00002478  00000000  00000000  0008aec0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  000909af  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  000909b2  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000909b5  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000909b6  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000909b7  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000909bb  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000909bf  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  000909c3  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  000909cc  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  000909d5  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000f  00000000  00000000  000909de  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000027  00000000  00000000  000909ed  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
00020228 l    d  .text	00000000 .text
000306f0 l    d  .rodata	00000000 .rodata
00030d74 l    d  .rwdata	00000000 .rwdata
000345e4 l    d  .bss	00000000 .bss
00034760 l    d  .onchip_memory	00000000 .onchip_memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 c:/Users/andre/IP/Coursework/Golden_Top/software/controller_final_bsp//obj/HAL/src/crt0.o
00020260 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 action_detection_display.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 vfprintf.c
00022a90 l     F .text	000000c0 __sbprintf
00030764 l     O .rodata	00000010 blanks.1
00030754 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00022cb4 l     F .text	00000220 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00024928 l     F .text	00000008 __fp_lock
0002493c l     F .text	00000008 __fp_unlock
00024944 l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00030d98 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00030818 l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00027500 l     F .text	000000f4 __sprint_r.part.0
0002896c l     F .text	000000c0 __sbprintf
0003094c l     O .rodata	00000010 blanks.1
0003093c l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00028d84 l     F .text	000000c0 _fclose_r.part.0
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0002dbec l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0002dd04 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0002dd68 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0002e000 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0002e0ec l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0002e254 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0002e340 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0002e520 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000329a0 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0002e78c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0002e8cc l     F .text	00000034 alt_dev_reg
000318d8 l     O .rwdata	00001060 jtag_uart
00032938 l     O .rwdata	0000002c accelerometer_spi
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0002ebc4 l     F .text	00000210 altera_avalon_jtag_uart_irq
0002edd4 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0002f418 l     F .text	00000080 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_accelerometer_spi.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0002fa34 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0002fc90 l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
0002fde0 l     F .text	0000003c alt_get_errno
0002fe1c l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0003461c g     O .bss	00000004 alt_instruction_exception_handler
00020958 g     F .text	00000018 putchar
00026fd8 g     F .text	00000070 _mprec_log10
000270c4 g     F .text	00000060 __any_on
000296a4 g     F .text	00000058 _isatty_r
00030824 g     O .rodata	00000028 __mprec_tinytens
0002e45c g     F .text	0000007c alt_main
00034660 g     O .bss	00000100 alt_irq
000297f0 g     F .text	00000064 _lseek_r
0003296c g     O .rwdata	00000004 en_f
000329ac g       *ABS*	00000000 __flash_rwdata_start
0002c6cc g     F .text	00000080 .hidden __eqdf2
00034760 g       *ABS*	00000000 __alt_heap_start
0002a688 g     F .text	00000060 _kill_r
00020918 g     F .text	00000038 printf
0002a054 g     F .text	0000006c _wcrtomb_r
0002a1f8 g     F .text	00000098 _signal_r
00027404 g     F .text	0000005c __sseek
00024c8c g     F .text	00000010 __sinit
00028a2c g     F .text	00000148 __swbuf_r
000296fc g     F .text	00000074 _setlocale_r
00024aac g     F .text	00000078 __sfmoreglue
0002e4fc g     F .text	00000024 __malloc_unlock
000298a4 g     F .text	0000012c memmove
00024c78 g     F .text	00000014 _cleanup
00025f34 g     F .text	000000a4 _Balloc
000202e0 g     F .text	00000034 sys_timer_isr
00030d8c g     O .rwdata	0000000c inact_thresh_coef
0002c74c g     F .text	000000e8 .hidden __gtdf2
00030204 g     F .text	00000024 altera_nios2_gen2_irq_init
00020000 g     F .entry	0000000c __reset
0002522c g     F .text	00000008 __localeconv_l
0002f664 g     F .text	000000d4 alt_up_accelerometer_spi_read_x_axis
00020020 g       *ABS*	00000000 __flash_exceptions_start
0002917c g     F .text	00000060 _fstat_r
000345fc g     O .bss	00000004 errno
0002737c g     F .text	00000008 __seofread
0003460c g     O .bss	00000004 alt_argv
0003a964 g       *ABS*	00000000 _gp
0002de60 g     F .text	00000020 getpid
00032964 g     O .rwdata	00000006 output
00034620 g     O .bss	0000000c xyz
00031758 g     O .rwdata	00000180 alt_fd_list
00020950 g     F .text	00000008 _putchar_r
0002fbe0 g     F .text	00000090 alt_find_dev
00025d44 g     F .text	00000100 memcpy
00024930 g     F .text	0000000c _cleanup_r
0002da50 g     F .text	000000b8 .hidden __floatsidf
0002fd64 g     F .text	0000007c alt_io_redirect
0002c834 g     F .text	000000e8 .hidden __ltdf2
000306f0 g       *ABS*	00000000 __DTOR_END__
000303e8 g     F .text	00000098 alt_exception_cause_generated_bad_addr
00030d74 g     O .rwdata	00000018 act_thresh_coef
00026f34 g     F .text	000000a4 __ratio
00028950 g     F .text	0000001c __vfiprintf_internal
00032970 g     O .rwdata	00000004 nox
0002efd0 g     F .text	00000220 altera_avalon_jtag_uart_read
000208e8 g     F .text	00000030 _printf_r
0002b3c4 g     F .text	00000064 .hidden __udivsi3
0002e03c g     F .text	000000b0 isatty
0002a290 g     F .text	000000c4 _raise_r
00028c48 g     F .text	00000064 __assert_func
00030874 g     O .rodata	000000c8 __mprec_tens
00020380 g     F .text	0000006c read_accelerometer
000345f8 g     O .bss	00000004 __malloc_top_pad
0002a6e8 g     F .text	00000004 _getpid_r
00025234 g     F .text	0000000c _localeconv_r
000291dc g     F .text	000004c8 __sfvwrite_r
000263a4 g     F .text	000000b0 __i2b
0002a354 g     F .text	000000bc __sigtramp_r
000272d0 g     F .text	00000058 _sbrk_r
000299d0 g     F .text	00000064 _read_r
00032994 g     O .rwdata	00000004 alt_max_fd
00028e44 g     F .text	00000070 _fclose_r
000248a4 g     F .text	00000084 fflush
000345f4 g     O .bss	00000004 __malloc_max_sbrked_mem
0002de80 g     F .text	00000180 alt_irq_register
0002b4ac g     F .text	000008f0 .hidden __adddf3
00026cc8 g     F .text	00000108 __b2d
0002ad0c g     F .text	000005c4 .hidden __umoddi3
0002e37c g     F .text	000000e0 lseek
00032974 g     O .rwdata	00000004 _global_impure_ptr
00029a34 g     F .text	00000564 _realloc_r
00034760 g       *ABS*	00000000 __bss_end
000300fc g     F .text	00000108 alt_tick
0002a6ec g     F .text	00000620 .hidden __udivdi3
000290e0 g     F .text	00000024 _fputwc_r
0003084c g     O .rodata	00000028 __mprec_bigtens
00026158 g     F .text	00000138 __s2b
0002a184 g     F .text	00000018 abort
0002db08 g     F .text	00000090 .hidden __floatunsidf
000269e8 g     F .text	00000058 __mcmp
00024cac g     F .text	00000014 __fp_lock_all
00030058 g     F .text	000000a4 alt_alarm_stop
00034604 g     O .bss	00000004 alt_irq_active
000200fc g     F .exceptions	000000cc alt_irq_handler
00031730 g     O .rwdata	00000028 alt_dev_null
000206b4 g     F .text	00000084 detect_INACT
0002fa14 g     F .text	00000020 alt_dcache_flush_all
00026290 g     F .text	00000064 __hi0bits
0002d9d0 g     F .text	00000080 .hidden __fixdfsi
000329ac g       *ABS*	00000000 __ram_rwdata_end
00020264 g     F .text	0000007c timer_init
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory
0003298c g     O .rwdata	00000008 alt_dev_list
0002e7c8 g     F .text	00000104 write
00027124 g     F .text	000000cc _putc_r
00030d74 g       *ABS*	00000000 __ram_rodata_end
0002dda4 g     F .text	000000bc fstat
00020314 g     F .text	0000006c shift_xyz
0002e128 g     F .text	0000012c kill
0002c834 g     F .text	000000e8 .hidden __ledf2
00026718 g     F .text	00000148 __pow5mult
0003296a g     O .rwdata	00000001 led
0002760c g     F .text	00001344 ___vfiprintf_internal_r
0002b428 g     F .text	0000005c .hidden __umodsi3
00034760 g       *ABS*	00000000 end
0002eb10 g     F .text	000000b4 altera_avalon_jtag_uart_init
000201c8 g     F .exceptions	00000060 alt_instruction_exception_entry
000306f0 g       *ABS*	00000000 __CTOR_LIST__
00040000 g       *ABS*	00000000 __alt_stack_pointer
0002f498 g     F .text	0000007c alt_avalon_timer_sc_init
0002db98 g     F .text	00000054 .hidden __clzsi2
0002f1f0 g     F .text	00000228 altera_avalon_jtag_uart_write
00024c9c g     F .text	00000004 __sfp_lock_acquire
00025c74 g     F .text	000000d0 memchr
00020970 g     F .text	00002104 ___vfprintf_internal_r
00024df0 g     F .text	000002fc _free_r
00030ab0 g     O .rodata	00000180 _ctype_b
00029770 g     F .text	0000000c __locale_mb_cur_max
000305d0 g     F .text	00000120 __call_exitprocs
0003297c g     O .rwdata	00000004 __malloc_sbrk_base
00020228 g     F .text	0000003c _start
00034614 g     O .bss	00000004 _alt_tick_rate
00026860 g     F .text	00000188 __lshift
00034618 g     O .bss	00000004 _alt_nticks
0002a4cc g     F .text	000000a0 signal
0002e55c g     F .text	00000108 read
0002e93c g     F .text	00000070 alt_sys_init
0002f550 g     F .text	00000044 alt_up_accelerometer_spi_read_address_register
00030540 g     F .text	00000090 __register_exitproc
00026454 g     F .text	000002c4 __multiply
0002ee74 g     F .text	00000068 altera_avalon_jtag_uart_close
0002b484 g     F .text	00000028 .hidden __mulsi3
00030d74 g       *ABS*	00000000 __ram_rwdata_start
000306f0 g       *ABS*	00000000 __ram_rodata_start
00034638 g     O .bss	00000028 __malloc_current_mallinfo
00026dd0 g     F .text	00000164 __d2b
0002e9ac g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00030330 g     F .text	000000b8 alt_get_fd
0002f738 g     F .text	000000d4 alt_up_accelerometer_spi_read_y_axis
00028bf0 g     F .text	00000058 _close_r
000203ec g     F .text	000000bc max
000304c8 g     F .text	00000078 memcmp
0002ea6c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00034760 g       *ABS*	00000000 __alt_stack_base
0002eabc g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00022b50 g     F .text	00000164 __swsetup_r
0002bd9c g     F .text	00000930 .hidden __divdf3
00024b24 g     F .text	00000154 __sfp
00027048 g     F .text	0000007c __copybits
000311bc g     O .rwdata	00000408 __malloc_av_
00024ca8 g     F .text	00000004 __sinit_lock_release
0002c91c g     F .text	000007ac .hidden __muldf3
00027328 g     F .text	00000054 __sread
00030228 g     F .text	00000108 alt_find_file
0002fa70 g     F .text	000000a8 alt_dev_llist_insert
0002e4d8 g     F .text	00000024 __malloc_lock
0002e6d4 g     F .text	000000b8 sbrk
00024844 g     F .text	00000060 _fflush_r
00028cc0 g     F .text	000000c4 _calloc_r
000345e4 g       *ABS*	00000000 __bss_start
00025e44 g     F .text	000000f0 memset
000207a0 g     F .text	00000148 main
00034610 g     O .bss	00000004 alt_envp
000345f0 g     O .bss	00000004 __malloc_max_total_mem
0002ea0c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00028b74 g     F .text	00000018 __swbuf
00027460 g     F .text	00000008 __sclose
00040000 g       *ABS*	00000000 __alt_heap_limit
00028eb4 g     F .text	00000070 fclose
00022ed4 g     F .text	00001748 _dtoa_r
00025494 g     F .text	000007e0 _malloc_r
0002a154 g     F .text	00000030 __ascii_wctomb
00032998 g     O .rwdata	00000004 alt_errno
00028f24 g     F .text	00000020 _fiprintf_r
0002a56c g     F .text	00000060 _init_signal
000250ec g     F .text	00000098 _fwalk
00029854 g     F .text	0000000c _mbtowc_r
000271f0 g     F .text	000000e0 putc
0002b2d0 g     F .text	00000080 .hidden __divsi3
00024cd4 g     F .text	0000011c _malloc_trim_r
000306f0 g       *ABS*	00000000 __CTOR_END__
00029f98 g     F .text	000000b8 strcmp
000306f0 g       *ABS*	00000000 __flash_rodata_start
000306f0 g       *ABS*	00000000 __DTOR_LIST__
000204a8 g     F .text	000000bc min
0002c6cc g     F .text	00000080 .hidden __nedf2
000345e8 g     O .bss	00000004 inact_counter
0002e900 g     F .text	0000003c alt_irq_init
0002e664 g     F .text	00000070 alt_release_fd
00030c30 g     O .rodata	00000100 .hidden __clz_tab
00034600 g     O .bss	00000004 _PathLocale
00030480 g     F .text	00000014 atexit
00020564 g     F .text	00000150 detect_ACT
00028b8c g     F .text	00000064 _write_r
0002977c g     F .text	00000074 setlocale
00032978 g     O .rwdata	00000004 _impure_ptr
00034608 g     O .bss	00000004 alt_argc
0002461c g     F .text	00000228 __sflush_r
0002fb7c g     F .text	00000064 _do_dtors
00020020 g       .exceptions	00000000 alt_irq_entry
00029860 g     F .text	00000044 __ascii_mbtowc
00026c6c g     F .text	0000005c __ulp
00024cc0 g     F .text	00000014 __fp_unlock_all
00032984 g     O .rwdata	00000008 alt_fs_list
00020020 g       *ABS*	00000000 __ram_exceptions_start
0002f514 g     F .text	0000003c alt_up_accelerometer_spi_open_dev
00025240 g     F .text	0000000c localeconv
000253fc g     F .text	00000098 __swhatbuf_r
0003462c g     O .bss	0000000c xyz_prev
000329ac g       *ABS*	00000000 _edata
00034760 g       *ABS*	00000000 _end
00028f7c g     F .text	00000164 __fputwc
00020228 g       *ABS*	00000000 __ram_exceptions_end
0002eedc g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
00027384 g     F .text	00000080 __swrite
00032980 g     O .rwdata	00000004 __malloc_trim_threshold
00030494 g     F .text	00000034 exit
00028f44 g     F .text	00000038 fiprintf
0002a050 g     F .text	00000004 _vfiprintf_r
00025184 g     F .text	000000a8 _fwalk_reent
00026a40 g     F .text	0000022c __mdiff
0002b350 g     F .text	00000074 .hidden __modsi3
0002f80c g     F .text	000000d4 alt_up_accelerometer_spi_read_z_axis
00040000 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
00024ca0 g     F .text	00000004 __sfp_lock_release
000345e4 g     O .bss	00000004 timer_f
000309ac g     O .rodata	00000101 _ctype_
00020738 g     F .text	00000068 wait_INACT
0002d97c g     F .text	00000054 .hidden __unorddf2
0002dd30 g     F .text	00000038 _exit
0002f8e0 g     F .text	00000134 alt_alarm_start
0002f594 g     F .text	00000068 alt_up_accelerometer_spi_read
0002f5fc g     F .text	00000068 alt_up_accelerometer_spi_write
0002524c g     F .text	000001b0 __smakebuf_r
00027468 g     F .text	00000098 strlen
0002a19c g     F .text	0000005c _init_signal_r
0002fef8 g     F .text	00000160 open
0002c74c g     F .text	000000e8 .hidden __gedf2
00028cac g     F .text	00000014 __assert
000275f4 g     F .text	00000018 __sprint_r
0002fc70 g     F .text	00000020 alt_icache_flush_all
0003299c g     O .rwdata	00000004 alt_priority_mask
00022a74 g     F .text	0000001c __vfprintf_internal
0002a148 g     F .text	0000000c _wctomb_r
0002d0c8 g     F .text	000008b4 .hidden __subdf3
000345ec g     O .bss	00000004 acc_dev
000262f4 g     F .text	000000b0 __lo0bits
000329a4 g     O .rwdata	00000008 alt_alarm_list
0002fb18 g     F .text	00000064 _do_ctors
0002a5cc g     F .text	000000bc __sigtramp
0002a0c0 g     F .text	00000088 wcrtomb
0002dc28 g     F .text	000000dc close
000315c4 g     O .rwdata	0000016c __global_locale
0002e2bc g     F .text	00000084 alt_load
00029104 g     F .text	00000078 fputwc
0002a410 g     F .text	000000bc raise
00024ca4 g     F .text	00000004 __sinit_lock_acquire
00025ffc g     F .text	0000015c __multadd
00025fd8 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20000:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20004:	08408a14 	ori	at,at,552
    jmp r1
   20008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201c80 	call	201c8 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffc15 	stw	r2,-16(fp)

  return active;
   20118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0ffff17 	ldw	r3,-4(fp)
   20130:	e0bffe17 	ldw	r2,-8(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001226 	beq	r2,zero,20184 <alt_irq_handler+0x88>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
   2013c:	e0bffd17 	ldw	r2,-12(fp)
   20140:	100690fa 	slli	r3,r2,3
   20144:	008000f4 	movhi	r2,3
   20148:	1885883a 	add	r2,r3,r2
   2014c:	10d19817 	ldw	r3,18016(r2)
   20150:	e0bffd17 	ldw	r2,-12(fp)
   20154:	100890fa 	slli	r4,r2,3
   20158:	008000f4 	movhi	r2,3
   2015c:	2085883a 	add	r2,r4,r2
   20160:	10919917 	ldw	r2,18020(r2)
   20164:	e17ffd17 	ldw	r5,-12(fp)
   20168:	1009883a 	mov	r4,r2
   2016c:	183ee83a 	callr	r3
#endif
        break;
   20170:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
   20174:	0005313a 	rdctl	r2,ipending
   20178:	e0bffb15 	stw	r2,-20(fp)
  return active;
   2017c:	e0bffb17 	ldw	r2,-20(fp)
   20180:	00000706 	br	201a0 <alt_irq_handler+0xa4>
      }
      mask <<= 1;
   20184:	e0bffe17 	ldw	r2,-8(fp)
   20188:	1085883a 	add	r2,r2,r2
   2018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
   20190:	e0bffd17 	ldw	r2,-12(fp)
   20194:	10800044 	addi	r2,r2,1
   20198:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
   2019c:	003fe306 	br	2012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
   201a0:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   201a4:	e0bfff17 	ldw	r2,-4(fp)
   201a8:	103fdd1e 	bne	r2,zero,20120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201ac:	0001883a 	nop
}
   201b0:	0001883a 	nop
   201b4:	e037883a 	mov	sp,fp
   201b8:	dfc00117 	ldw	ra,4(sp)
   201bc:	df000017 	ldw	fp,0(sp)
   201c0:	dec00204 	addi	sp,sp,8
   201c4:	f800283a 	ret

000201c8 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201c8:	defffb04 	addi	sp,sp,-20
   201cc:	dfc00415 	stw	ra,16(sp)
   201d0:	df000315 	stw	fp,12(sp)
   201d4:	df000304 	addi	fp,sp,12
   201d8:	e13ffd15 	stw	r4,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
   201dc:	00bfffc4 	movi	r2,-1
   201e0:	e0bfff15 	stw	r2,-4(fp)
  badaddr = 0;
   201e4:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   201e8:	d0a72e17 	ldw	r2,-25416(gp)
   201ec:	10000726 	beq	r2,zero,2020c <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   201f0:	d0a72e17 	ldw	r2,-25416(gp)
   201f4:	e0ffff17 	ldw	r3,-4(fp)
   201f8:	e1bffe17 	ldw	r6,-8(fp)
   201fc:	e17ffd17 	ldw	r5,-12(fp)
   20200:	1809883a 	mov	r4,r3
   20204:	103ee83a 	callr	r2
   20208:	00000206 	br	20214 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   2020c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   20210:	0005883a 	mov	r2,zero
}
   20214:	e037883a 	mov	sp,fp
   20218:	dfc00117 	ldw	ra,4(sp)
   2021c:	df000017 	ldw	fp,0(sp)
   20220:	dec00204 	addi	sp,sp,8
   20224:	f800283a 	ret

Disassembly of section .text:

00020228 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   20228:	06c00134 	movhi	sp,4
    ori sp, sp, %lo(__alt_stack_pointer)
   2022c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   20230:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   20234:	d6aa5914 	ori	gp,gp,43364
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   20238:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   2023c:	10917914 	ori	r2,r2,17892

    movhi r3, %hi(__bss_end)
   20240:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20244:	18d1d814 	ori	r3,r3,18272

    beq r2, r3, 1f
   20248:	10c00326 	beq	r2,r3,20258 <_start+0x30>

0:
    stw zero, (r2)
   2024c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   20250:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20254:	10fffd36 	bltu	r2,r3,2024c <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   20258:	002e2bc0 	call	2e2bc <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   2025c:	002e45c0 	call	2e45c <alt_main>

00020260 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   20260:	003fff06 	br	20260 <alt_after_alt_main>

00020264 <timer_init>:
int inact_counter = 0;
int nox = 1; //flag to exclude F/B from detection
alt_up_accelerometer_spi_dev * acc_dev;

//Timer is used to regulate the maximum rate of data input to the game.
void timer_init(void * isr) { //initialises timer and specifies interrupt service routine
   20264:	defffd04 	addi	sp,sp,-12
   20268:	dfc00215 	stw	ra,8(sp)
   2026c:	df000115 	stw	fp,4(sp)
   20270:	df000104 	addi	fp,sp,4
   20274:	e13fff15 	stw	r4,-4(fp)
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0003);
   20278:	00c000c4 	movi	r3,3
   2027c:	00800134 	movhi	r2,4
   20280:	10c40135 	stwio	r3,4100(r2)
    IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_BASE, 0);
   20284:	0007883a 	mov	r3,zero
   20288:	00800134 	movhi	r2,4
   2028c:	10c40035 	stwio	r3,4096(r2)
    IOWR_ALTERA_AVALON_TIMER_PERIODL(TIMER_BASE, 0x0000); //change period of timer with these two registers
   20290:	0007883a 	mov	r3,zero
   20294:	00800134 	movhi	r2,4
   20298:	10c40235 	stwio	r3,4104(r2)
    IOWR_ALTERA_AVALON_TIMER_PERIODH(TIMER_BASE, 0x0008); // PERIOD = {PERIODH,PERIODL} (concatenated)
   2029c:	00c00204 	movi	r3,8
   202a0:	00800134 	movhi	r2,4
   202a4:	10c40335 	stwio	r3,4108(r2)
    alt_irq_register(TIMER_IRQ, 0, isr);
   202a8:	e0bfff17 	ldw	r2,-4(fp)
   202ac:	100d883a 	mov	r6,r2
   202b0:	000b883a 	mov	r5,zero
   202b4:	0009883a 	mov	r4,zero
   202b8:	002de800 	call	2de80 <alt_irq_register>
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0007);
   202bc:	00c001c4 	movi	r3,7
   202c0:	00800134 	movhi	r2,4
   202c4:	10c40135 	stwio	r3,4100(r2)
}
   202c8:	0001883a 	nop
   202cc:	e037883a 	mov	sp,fp
   202d0:	dfc00117 	ldw	ra,4(sp)
   202d4:	df000017 	ldw	fp,0(sp)
   202d8:	dec00204 	addi	sp,sp,8
   202dc:	f800283a 	ret

000202e0 <sys_timer_isr>:

void sys_timer_isr() { //interrupt service routine
   202e0:	deffff04 	addi	sp,sp,-4
   202e4:	df000015 	stw	fp,0(sp)
   202e8:	d839883a 	mov	fp,sp
	IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_BASE, 0);
   202ec:	0007883a 	mov	r3,zero
   202f0:	00800134 	movhi	r2,4
   202f4:	10c40035 	stwio	r3,4096(r2)
	timer_f = 1;
   202f8:	00800044 	movi	r2,1
   202fc:	d0a72015 	stw	r2,-25472(gp)
}
   20300:	0001883a 	nop
   20304:	e037883a 	mov	sp,fp
   20308:	df000017 	ldw	fp,0(sp)
   2030c:	dec00104 	addi	sp,sp,4
   20310:	f800283a 	ret

00020314 <shift_xyz>:

void shift_xyz() {
   20314:	defffe04 	addi	sp,sp,-8
   20318:	df000115 	stw	fp,4(sp)
   2031c:	df000104 	addi	fp,sp,4
	//SHIFT SAMPLE
	for (int i=0; i<3; i++) {
   20320:	e03fff15 	stw	zero,-4(fp)
   20324:	00000d06 	br	2035c <shift_xyz+0x48>
		xyz_prev[i] = xyz[i];
   20328:	e0bfff17 	ldw	r2,-4(fp)
   2032c:	100690ba 	slli	r3,r2,2
   20330:	008000f4 	movhi	r2,3
   20334:	1885883a 	add	r2,r3,r2
   20338:	10d18817 	ldw	r3,17952(r2)
   2033c:	e0bfff17 	ldw	r2,-4(fp)
   20340:	100890ba 	slli	r4,r2,2
   20344:	008000f4 	movhi	r2,3
   20348:	2085883a 	add	r2,r4,r2
   2034c:	10d18b15 	stw	r3,17964(r2)
	for (int i=0; i<3; i++) {
   20350:	e0bfff17 	ldw	r2,-4(fp)
   20354:	10800044 	addi	r2,r2,1
   20358:	e0bfff15 	stw	r2,-4(fp)
   2035c:	e0bfff17 	ldw	r2,-4(fp)
   20360:	108000d0 	cmplti	r2,r2,3
   20364:	103ff01e 	bne	r2,zero,20328 <shift_xyz+0x14>
	}
}
   20368:	0001883a 	nop
   2036c:	0001883a 	nop
   20370:	e037883a 	mov	sp,fp
   20374:	df000017 	ldw	fp,0(sp)
   20378:	dec00104 	addi	sp,sp,4
   2037c:	f800283a 	ret

00020380 <read_accelerometer>:

void read_accelerometer(alt_32* xyz) {
   20380:	defffd04 	addi	sp,sp,-12
   20384:	dfc00215 	stw	ra,8(sp)
   20388:	df000115 	stw	fp,4(sp)
   2038c:	df000104 	addi	fp,sp,4
   20390:	e13fff15 	stw	r4,-4(fp)
	//readings for all axes
	alt_up_accelerometer_spi_read_x_axis(acc_dev, xyz);
   20394:	d0a72217 	ldw	r2,-25464(gp)
   20398:	e17fff17 	ldw	r5,-4(fp)
   2039c:	1009883a 	mov	r4,r2
   203a0:	002f6640 	call	2f664 <alt_up_accelerometer_spi_read_x_axis>
	alt_up_accelerometer_spi_read_y_axis(acc_dev, xyz+1);
   203a4:	d0e72217 	ldw	r3,-25464(gp)
   203a8:	e0bfff17 	ldw	r2,-4(fp)
   203ac:	10800104 	addi	r2,r2,4
   203b0:	100b883a 	mov	r5,r2
   203b4:	1809883a 	mov	r4,r3
   203b8:	002f7380 	call	2f738 <alt_up_accelerometer_spi_read_y_axis>
	alt_up_accelerometer_spi_read_z_axis(acc_dev, xyz+2);
   203bc:	d0e72217 	ldw	r3,-25464(gp)
   203c0:	e0bfff17 	ldw	r2,-4(fp)
   203c4:	10800204 	addi	r2,r2,8
   203c8:	100b883a 	mov	r5,r2
   203cc:	1809883a 	mov	r4,r3
   203d0:	002f80c0 	call	2f80c <alt_up_accelerometer_spi_read_z_axis>
}
   203d4:	0001883a 	nop
   203d8:	e037883a 	mov	sp,fp
   203dc:	dfc00117 	ldw	ra,4(sp)
   203e0:	df000017 	ldw	fp,0(sp)
   203e4:	dec00204 	addi	sp,sp,8
   203e8:	f800283a 	ret

000203ec <max>:

int max() { //returns index of the maximum reading out of the 3 axes (current sample)
   203ec:	defffc04 	addi	sp,sp,-16
   203f0:	df000315 	stw	fp,12(sp)
   203f4:	df000304 	addi	fp,sp,12
	int max = abs(xyz[nox]);
   203f8:	d0a00317 	ldw	r2,-32756(gp)
   203fc:	100690ba 	slli	r3,r2,2
   20400:	008000f4 	movhi	r2,3
   20404:	1885883a 	add	r2,r3,r2
   20408:	10918817 	ldw	r2,17952(r2)
   2040c:	1000010e 	bge	r2,zero,20414 <max+0x28>
   20410:	0085c83a 	sub	r2,zero,r2
   20414:	e0bfff15 	stw	r2,-4(fp)
	int index = nox;
   20418:	d0a00317 	ldw	r2,-32756(gp)
   2041c:	e0bffe15 	stw	r2,-8(fp)
	for (int i=1; i<3; i++) {
   20420:	00800044 	movi	r2,1
   20424:	e0bffd15 	stw	r2,-12(fp)
   20428:	00001706 	br	20488 <max+0x9c>
		if (abs(xyz[i]) > max) {
   2042c:	e0bffd17 	ldw	r2,-12(fp)
   20430:	100690ba 	slli	r3,r2,2
   20434:	008000f4 	movhi	r2,3
   20438:	1885883a 	add	r2,r3,r2
   2043c:	10918817 	ldw	r2,17952(r2)
   20440:	1000010e 	bge	r2,zero,20448 <max+0x5c>
   20444:	0085c83a 	sub	r2,zero,r2
   20448:	1007883a 	mov	r3,r2
   2044c:	e0bfff17 	ldw	r2,-4(fp)
   20450:	10c00a0e 	bge	r2,r3,2047c <max+0x90>
			max = abs(xyz[i]);
   20454:	e0bffd17 	ldw	r2,-12(fp)
   20458:	100690ba 	slli	r3,r2,2
   2045c:	008000f4 	movhi	r2,3
   20460:	1885883a 	add	r2,r3,r2
   20464:	10918817 	ldw	r2,17952(r2)
   20468:	1000010e 	bge	r2,zero,20470 <max+0x84>
   2046c:	0085c83a 	sub	r2,zero,r2
   20470:	e0bfff15 	stw	r2,-4(fp)
			index = i;
   20474:	e0bffd17 	ldw	r2,-12(fp)
   20478:	e0bffe15 	stw	r2,-8(fp)
	for (int i=1; i<3; i++) {
   2047c:	e0bffd17 	ldw	r2,-12(fp)
   20480:	10800044 	addi	r2,r2,1
   20484:	e0bffd15 	stw	r2,-12(fp)
   20488:	e0bffd17 	ldw	r2,-12(fp)
   2048c:	108000d0 	cmplti	r2,r2,3
   20490:	103fe61e 	bne	r2,zero,2042c <max+0x40>
		}
	}
	return index;
   20494:	e0bffe17 	ldw	r2,-8(fp)
}
   20498:	e037883a 	mov	sp,fp
   2049c:	df000017 	ldw	fp,0(sp)
   204a0:	dec00104 	addi	sp,sp,4
   204a4:	f800283a 	ret

000204a8 <min>:

int min() { //returns index of the maximum reading out of the 3 axes (current sample)
   204a8:	defffc04 	addi	sp,sp,-16
   204ac:	df000315 	stw	fp,12(sp)
   204b0:	df000304 	addi	fp,sp,12
	int min = abs(xyz[nox]);
   204b4:	d0a00317 	ldw	r2,-32756(gp)
   204b8:	100690ba 	slli	r3,r2,2
   204bc:	008000f4 	movhi	r2,3
   204c0:	1885883a 	add	r2,r3,r2
   204c4:	10918817 	ldw	r2,17952(r2)
   204c8:	1000010e 	bge	r2,zero,204d0 <min+0x28>
   204cc:	0085c83a 	sub	r2,zero,r2
   204d0:	e0bfff15 	stw	r2,-4(fp)
	int index = nox;
   204d4:	d0a00317 	ldw	r2,-32756(gp)
   204d8:	e0bffe15 	stw	r2,-8(fp)
	for (int i=1; i<3; i++) {
   204dc:	00800044 	movi	r2,1
   204e0:	e0bffd15 	stw	r2,-12(fp)
   204e4:	00001706 	br	20544 <min+0x9c>
		if (abs(xyz[i]) < min) {
   204e8:	e0bffd17 	ldw	r2,-12(fp)
   204ec:	100690ba 	slli	r3,r2,2
   204f0:	008000f4 	movhi	r2,3
   204f4:	1885883a 	add	r2,r3,r2
   204f8:	10918817 	ldw	r2,17952(r2)
   204fc:	1000010e 	bge	r2,zero,20504 <min+0x5c>
   20500:	0085c83a 	sub	r2,zero,r2
   20504:	1007883a 	mov	r3,r2
   20508:	e0bfff17 	ldw	r2,-4(fp)
   2050c:	18800a0e 	bge	r3,r2,20538 <min+0x90>
			min = abs(xyz[i]);
   20510:	e0bffd17 	ldw	r2,-12(fp)
   20514:	100690ba 	slli	r3,r2,2
   20518:	008000f4 	movhi	r2,3
   2051c:	1885883a 	add	r2,r3,r2
   20520:	10918817 	ldw	r2,17952(r2)
   20524:	1000010e 	bge	r2,zero,2052c <min+0x84>
   20528:	0085c83a 	sub	r2,zero,r2
   2052c:	e0bfff15 	stw	r2,-4(fp)
			index = i;
   20530:	e0bffd17 	ldw	r2,-12(fp)
   20534:	e0bffe15 	stw	r2,-8(fp)
	for (int i=1; i<3; i++) {
   20538:	e0bffd17 	ldw	r2,-12(fp)
   2053c:	10800044 	addi	r2,r2,1
   20540:	e0bffd15 	stw	r2,-12(fp)
   20544:	e0bffd17 	ldw	r2,-12(fp)
   20548:	108000d0 	cmplti	r2,r2,3
   2054c:	103fe61e 	bne	r2,zero,204e8 <min+0x40>
		}
	}
	return index;
   20550:	e0bffe17 	ldw	r2,-8(fp)
}
   20554:	e037883a 	mov	sp,fp
   20558:	df000017 	ldw	fp,0(sp)
   2055c:	dec00104 	addi	sp,sp,4
   20560:	f800283a 	ret

00020564 <detect_ACT>:

int detect_ACT() {
   20564:	defffd04 	addi	sp,sp,-12
   20568:	dfc00215 	stw	ra,8(sp)
   2056c:	df000115 	stw	fp,4(sp)
   20570:	df000104 	addi	fp,sp,4
	int i = max();
   20574:	00203ec0 	call	203ec <max>
   20578:	e0bfff15 	stw	r2,-4(fp)

	//output char if the |acceleration|>threshold and gradient has same polarity
	if (xyz[i]*10 > (act_thresh_coef[i][0]*THRESHOLD_1G)) { //multiplied by 10 to fine-tune threshold
   2057c:	e0bfff17 	ldw	r2,-4(fp)
   20580:	100690ba 	slli	r3,r2,2
   20584:	008000f4 	movhi	r2,3
   20588:	1885883a 	add	r2,r3,r2
   2058c:	10d18817 	ldw	r3,17952(r2)
   20590:	1805883a 	mov	r2,r3
   20594:	100490ba 	slli	r2,r2,2
   20598:	10c5883a 	add	r2,r2,r3
   2059c:	1085883a 	add	r2,r2,r2
   205a0:	1009883a 	mov	r4,r2
   205a4:	e0bfff17 	ldw	r2,-4(fp)
   205a8:	100690fa 	slli	r3,r2,3
   205ac:	008000f4 	movhi	r2,3
   205b0:	1885883a 	add	r2,r3,r2
   205b4:	10c35d17 	ldw	r3,3444(r2)
   205b8:	1805883a 	mov	r2,r3
   205bc:	1004923a 	slli	r2,r2,8
   205c0:	10c5c83a 	sub	r2,r2,r3
   205c4:	1100110e 	bge	r2,r4,2060c <detect_ACT+0xa8>
		putchar(output[i][0]);
   205c8:	e0bfff17 	ldw	r2,-4(fp)
   205cc:	1087883a 	add	r3,r2,r2
   205d0:	d0a00004 	addi	r2,gp,-32768
   205d4:	1885883a 	add	r2,r3,r2
   205d8:	10800003 	ldbu	r2,0(r2)
   205dc:	10803fcc 	andi	r2,r2,255
   205e0:	1080201c 	xori	r2,r2,128
   205e4:	10bfe004 	addi	r2,r2,-128
   205e8:	1009883a 	mov	r4,r2
   205ec:	00209580 	call	20958 <putchar>
		printf("\n");
   205f0:	01000284 	movi	r4,10
   205f4:	00209580 	call	20958 <putchar>
		led++;
   205f8:	d0a00183 	ldbu	r2,-32762(gp)
   205fc:	10800044 	addi	r2,r2,1
   20600:	d0a00185 	stb	r2,-32762(gp)
		return 1;
   20604:	00800044 	movi	r2,1
   20608:	00002506 	br	206a0 <detect_ACT+0x13c>
	} else if ((xyz[i]*10 < -(act_thresh_coef[i][1]*THRESHOLD_1G))) { //Threshold cannot be below 255 as tilting the controller can cause reading abs(255) in any axis
   2060c:	e0bfff17 	ldw	r2,-4(fp)
   20610:	100690ba 	slli	r3,r2,2
   20614:	008000f4 	movhi	r2,3
   20618:	1885883a 	add	r2,r3,r2
   2061c:	10d18817 	ldw	r3,17952(r2)
   20620:	1805883a 	mov	r2,r3
   20624:	100490ba 	slli	r2,r2,2
   20628:	10c5883a 	add	r2,r2,r3
   2062c:	1085883a 	add	r2,r2,r2
   20630:	1009883a 	mov	r4,r2
   20634:	e0bfff17 	ldw	r2,-4(fp)
   20638:	100690fa 	slli	r3,r2,3
   2063c:	008000f4 	movhi	r2,3
   20640:	1885883a 	add	r2,r3,r2
   20644:	10835e17 	ldw	r2,3448(r2)
   20648:	1007883a 	mov	r3,r2
   2064c:	1004923a 	slli	r2,r2,8
   20650:	1885c83a 	sub	r2,r3,r2
   20654:	2080110e 	bge	r4,r2,2069c <detect_ACT+0x138>
		putchar(output[i][1]);
   20658:	e0bfff17 	ldw	r2,-4(fp)
   2065c:	1087883a 	add	r3,r2,r2
   20660:	d0a00044 	addi	r2,gp,-32767
   20664:	1885883a 	add	r2,r3,r2
   20668:	10800003 	ldbu	r2,0(r2)
   2066c:	10803fcc 	andi	r2,r2,255
   20670:	1080201c 	xori	r2,r2,128
   20674:	10bfe004 	addi	r2,r2,-128
   20678:	1009883a 	mov	r4,r2
   2067c:	00209580 	call	20958 <putchar>
		printf("\n");
   20680:	01000284 	movi	r4,10
   20684:	00209580 	call	20958 <putchar>
		led++;
   20688:	d0a00183 	ldbu	r2,-32762(gp)
   2068c:	10800044 	addi	r2,r2,1
   20690:	d0a00185 	stb	r2,-32762(gp)
		return 1;
   20694:	00800044 	movi	r2,1
   20698:	00000106 	br	206a0 <detect_ACT+0x13c>
	} else {
//		putchar('0');
//		printf("\n");
		return 0; //return 0 if reading magnitude too small
   2069c:	0005883a 	mov	r2,zero
	}
}
   206a0:	e037883a 	mov	sp,fp
   206a4:	dfc00117 	ldw	ra,4(sp)
   206a8:	df000017 	ldw	fp,0(sp)
   206ac:	dec00204 	addi	sp,sp,8
   206b0:	f800283a 	ret

000206b4 <detect_INACT>:

int detect_INACT(int i){
   206b4:	defffe04 	addi	sp,sp,-8
   206b8:	df000115 	stw	fp,4(sp)
   206bc:	df000104 	addi	fp,sp,4
   206c0:	e13fff15 	stw	r4,-4(fp)
	if ((abs(xyz[i])*10) < (inact_thresh_coef[i]*THRESHOLD_1G)) { //multiplied by 10 to fine-tune threshold
   206c4:	e0bfff17 	ldw	r2,-4(fp)
   206c8:	100690ba 	slli	r3,r2,2
   206cc:	008000f4 	movhi	r2,3
   206d0:	1885883a 	add	r2,r3,r2
   206d4:	10918817 	ldw	r2,17952(r2)
   206d8:	1000010e 	bge	r2,zero,206e0 <detect_INACT+0x2c>
   206dc:	0085c83a 	sub	r2,zero,r2
   206e0:	1007883a 	mov	r3,r2
   206e4:	1805883a 	mov	r2,r3
   206e8:	100490ba 	slli	r2,r2,2
   206ec:	10c5883a 	add	r2,r2,r3
   206f0:	1085883a 	add	r2,r2,r2
   206f4:	1009883a 	mov	r4,r2
   206f8:	e0bfff17 	ldw	r2,-4(fp)
   206fc:	100690ba 	slli	r3,r2,2
   20700:	008000f4 	movhi	r2,3
   20704:	1885883a 	add	r2,r3,r2
   20708:	10c36317 	ldw	r3,3468(r2)
   2070c:	1805883a 	mov	r2,r3
   20710:	1004923a 	slli	r2,r2,8
   20714:	10c5c83a 	sub	r2,r2,r3
   20718:	2080020e 	bge	r4,r2,20724 <detect_INACT+0x70>
		return 1;
   2071c:	00800044 	movi	r2,1
   20720:	00000106 	br	20728 <detect_INACT+0x74>
	} else {
		return 0; //return 0 if reading magnitude too large
   20724:	0005883a 	mov	r2,zero
	}
}
   20728:	e037883a 	mov	sp,fp
   2072c:	df000017 	ldw	fp,0(sp)
   20730:	dec00104 	addi	sp,sp,4
   20734:	f800283a 	ret

00020738 <wait_INACT>:

int wait_INACT() {
   20738:	defffd04 	addi	sp,sp,-12
   2073c:	dfc00215 	stw	ra,8(sp)
   20740:	df000115 	stw	fp,4(sp)
   20744:	df000104 	addi	fp,sp,4
	int i = min();
   20748:	00204a80 	call	204a8 <min>
   2074c:	e0bfff15 	stw	r2,-4(fp)
	if (inact_counter < INACT_SAMPLES) {
   20750:	d0a72117 	ldw	r2,-25468(gp)
   20754:	1080fa08 	cmpgei	r2,r2,1000
   20758:	10000a1e 	bne	r2,zero,20784 <wait_INACT+0x4c>
		if (detect_INACT(i)) {
   2075c:	e13fff17 	ldw	r4,-4(fp)
   20760:	00206b40 	call	206b4 <detect_INACT>
   20764:	10000426 	beq	r2,zero,20778 <wait_INACT+0x40>
			inact_counter++;
   20768:	d0a72117 	ldw	r2,-25468(gp)
   2076c:	10800044 	addi	r2,r2,1
   20770:	d0a72115 	stw	r2,-25468(gp)
   20774:	00000106 	br	2077c <wait_INACT+0x44>
		} else {
			inact_counter = 0;
   20778:	d0272115 	stw	zero,-25468(gp)
		}
		return 0;
   2077c:	0005883a 	mov	r2,zero
   20780:	00000206 	br	2078c <wait_INACT+0x54>
	} else {
		inact_counter = 0;
   20784:	d0272115 	stw	zero,-25468(gp)
		return 1;
   20788:	00800044 	movi	r2,1
	}

}
   2078c:	e037883a 	mov	sp,fp
   20790:	dfc00117 	ldw	ra,4(sp)
   20794:	df000017 	ldw	fp,0(sp)
   20798:	dec00204 	addi	sp,sp,8
   2079c:	f800283a 	ret

000207a0 <main>:

int main(){
   207a0:	defffb04 	addi	sp,sp,-20
   207a4:	dfc00415 	stw	ra,16(sp)
   207a8:	df000315 	stw	fp,12(sp)
   207ac:	df000304 	addi	fp,sp,12

	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
   207b0:	010000f4 	movhi	r4,3
   207b4:	2101bc04 	addi	r4,r4,1776
   207b8:	002f5140 	call	2f514 <alt_up_accelerometer_spi_open_dev>
   207bc:	d0a72215 	stw	r2,-25464(gp)
	if (acc_dev == NULL) { // if return 1, check if the spi ip name is "accelerometer_spi"
   207c0:	d0a72217 	ldw	r2,-25464(gp)
   207c4:	1000021e 	bne	r2,zero,207d0 <main+0x30>
		return 1;
   207c8:	00800044 	movi	r2,1
   207cc:	00004106 	br	208d4 <main+0x134>
	}
	alt_up_accelerometer_spi_write(acc_dev, 0x1F, -63);
   207d0:	d0a72217 	ldw	r2,-25464(gp)
   207d4:	01803044 	movi	r6,193
   207d8:	014007c4 	movi	r5,31
   207dc:	1009883a 	mov	r4,r2
   207e0:	002f5fc0 	call	2f5fc <alt_up_accelerometer_spi_write>
	//By default accelerometer reads 0g,0g,1g
	//writing to Z OFFSET register on accelerometer, accounting for 1g caused by gravity.
	//The offset is scaled by a factor of 2 so (127 - 2*-63=0)(127=1G according to datasheet)
	//The output is scaled to 8 bits (255=1G), difference is confusing but worked.

	printf("hello");
   207e4:	010000f4 	movhi	r4,3
   207e8:	2101c204 	addi	r4,r4,1800
   207ec:	00209180 	call	20918 <printf>

	timer_init(sys_timer_isr); //initialising timer with isr
   207f0:	010000b4 	movhi	r4,2
   207f4:	2100b804 	addi	r4,r4,736
   207f8:	00202640 	call	20264 <timer_init>

	while(1){
		//READ DATA
		alt_32 xyz_raw[] = {0,0,0};
   207fc:	e03ffd15 	stw	zero,-12(fp)
   20800:	e03ffe15 	stw	zero,-8(fp)
   20804:	e03fff15 	stw	zero,-4(fp)
		read_accelerometer(xyz_raw);
   20808:	e0bffd04 	addi	r2,fp,-12
   2080c:	1009883a 	mov	r4,r2
   20810:	00203800 	call	20380 <read_accelerometer>

		//FILTER DATA
		IOWR_ALTERA_AVALON_PIO_DATA(FILTER_X_IN_BASE, xyz_raw[0]);
   20814:	e0fffd17 	ldw	r3,-12(fp)
   20818:	00800134 	movhi	r2,4
   2081c:	10c41835 	stwio	r3,4192(r2)
		IOWR_ALTERA_AVALON_PIO_DATA(FILTER_Y_IN_BASE, xyz_raw[1]);
   20820:	e0fffe17 	ldw	r3,-8(fp)
   20824:	00800134 	movhi	r2,4
   20828:	10c41435 	stwio	r3,4176(r2)
		IOWR_ALTERA_AVALON_PIO_DATA(FILTER_Z_IN_BASE, xyz_raw[2]);
   2082c:	e0ffff17 	ldw	r3,-4(fp)
   20830:	00800134 	movhi	r2,4
   20834:	10c40c35 	stwio	r3,4144(r2)

		xyz[0] = IORD_ALTERA_AVALON_PIO_DATA(FILTER_X_OUT_BASE);
   20838:	00800134 	movhi	r2,4
   2083c:	10c41c37 	ldwio	r3,4208(r2)
   20840:	008000f4 	movhi	r2,3
   20844:	10d18815 	stw	r3,17952(r2)
		xyz[1] = IORD_ALTERA_AVALON_PIO_DATA(FILTER_Y_OUT_BASE);
   20848:	00800134 	movhi	r2,4
   2084c:	10c41037 	ldwio	r3,4160(r2)
   20850:	008000f4 	movhi	r2,3
   20854:	10d18915 	stw	r3,17956(r2)
		xyz[2] = IORD_ALTERA_AVALON_PIO_DATA(FILTER_Z_OUT_BASE);
   20858:	00800134 	movhi	r2,4
   2085c:	10c40837 	ldwio	r3,4128(r2)
   20860:	008000f4 	movhi	r2,3
   20864:	10d18a15 	stw	r3,17960(r2)

		//SUBROUTINE TRIGGERED BY TIMER
		if (timer_f & en_f) {
   20868:	d0e72017 	ldw	r3,-25472(gp)
   2086c:	d0a00217 	ldw	r2,-32760(gp)
   20870:	1884703a 	and	r2,r3,r2
   20874:	10000726 	beq	r2,zero,20894 <main+0xf4>
			en_f = !detect_ACT();
   20878:	00205640 	call	20564 <detect_ACT>
   2087c:	1005003a 	cmpeq	r2,r2,zero
   20880:	10803fcc 	andi	r2,r2,255
   20884:	d0a00215 	stw	r2,-32760(gp)
			shift_xyz();
   20888:	00203140 	call	20314 <shift_xyz>
			timer_f = 0;
   2088c:	d0272015 	stw	zero,-25472(gp)
   20890:	00000406 	br	208a4 <main+0x104>
		} else if (!en_f) {
   20894:	d0a00217 	ldw	r2,-32760(gp)
   20898:	1000021e 	bne	r2,zero,208a4 <main+0x104>
			en_f = wait_INACT();
   2089c:	00207380 	call	20738 <wait_INACT>
   208a0:	d0a00215 	stw	r2,-32760(gp)
		}



		//TESTING HEX OUTPUTS
		IOWR_ALTERA_AVALON_PIO_DATA(HEX_DISPLAY_BASE, abs(xyz[2]));
   208a4:	008000f4 	movhi	r2,3
   208a8:	10918a17 	ldw	r2,17960(r2)
   208ac:	1000010e 	bge	r2,zero,208b4 <main+0x114>
   208b0:	0085c83a 	sub	r2,zero,r2
   208b4:	1007883a 	mov	r3,r2
   208b8:	00800134 	movhi	r2,4
   208bc:	10c42035 	stwio	r3,4224(r2)
		IOWR_ALTERA_AVALON_PIO_DATA(LED_BASE, led);
   208c0:	d0a00183 	ldbu	r2,-32762(gp)
   208c4:	10c03fcc 	andi	r3,r2,255
   208c8:	00800134 	movhi	r2,4
   208cc:	10c42435 	stwio	r3,4240(r2)
	while(1){
   208d0:	003fca06 	br	207fc <main+0x5c>

	}

	return 0;
}
   208d4:	e037883a 	mov	sp,fp
   208d8:	dfc00117 	ldw	ra,4(sp)
   208dc:	df000017 	ldw	fp,0(sp)
   208e0:	dec00204 	addi	sp,sp,8
   208e4:	f800283a 	ret

000208e8 <_printf_r>:
   208e8:	defffd04 	addi	sp,sp,-12
   208ec:	2805883a 	mov	r2,r5
   208f0:	dfc00015 	stw	ra,0(sp)
   208f4:	d9800115 	stw	r6,4(sp)
   208f8:	d9c00215 	stw	r7,8(sp)
   208fc:	21400217 	ldw	r5,8(r4)
   20900:	d9c00104 	addi	r7,sp,4
   20904:	100d883a 	mov	r6,r2
   20908:	00209700 	call	20970 <___vfprintf_internal_r>
   2090c:	dfc00017 	ldw	ra,0(sp)
   20910:	dec00304 	addi	sp,sp,12
   20914:	f800283a 	ret

00020918 <printf>:
   20918:	defffc04 	addi	sp,sp,-16
   2091c:	dfc00015 	stw	ra,0(sp)
   20920:	d9400115 	stw	r5,4(sp)
   20924:	d9800215 	stw	r6,8(sp)
   20928:	d9c00315 	stw	r7,12(sp)
   2092c:	008000f4 	movhi	r2,3
   20930:	108a5e17 	ldw	r2,10616(r2)
   20934:	200b883a 	mov	r5,r4
   20938:	d9800104 	addi	r6,sp,4
   2093c:	11000217 	ldw	r4,8(r2)
   20940:	0022a740 	call	22a74 <__vfprintf_internal>
   20944:	dfc00017 	ldw	ra,0(sp)
   20948:	dec00404 	addi	sp,sp,16
   2094c:	f800283a 	ret

00020950 <_putchar_r>:
   20950:	21800217 	ldw	r6,8(r4)
   20954:	00271241 	jmpi	27124 <_putc_r>

00020958 <putchar>:
   20958:	008000f4 	movhi	r2,3
   2095c:	108a5e17 	ldw	r2,10616(r2)
   20960:	200b883a 	mov	r5,r4
   20964:	11800217 	ldw	r6,8(r2)
   20968:	1009883a 	mov	r4,r2
   2096c:	00271241 	jmpi	27124 <_putc_r>

00020970 <___vfprintf_internal_r>:
   20970:	deffbf04 	addi	sp,sp,-260
   20974:	dfc04015 	stw	ra,256(sp)
   20978:	dd803d15 	stw	r22,244(sp)
   2097c:	dcc03a15 	stw	r19,232(sp)
   20980:	dc803915 	stw	r18,228(sp)
   20984:	2027883a 	mov	r19,r4
   20988:	2825883a 	mov	r18,r5
   2098c:	302d883a 	mov	r22,r6
   20990:	d9c00615 	stw	r7,24(sp)
   20994:	df003f15 	stw	fp,252(sp)
   20998:	ddc03e15 	stw	r23,248(sp)
   2099c:	dd403c15 	stw	r21,240(sp)
   209a0:	dd003b15 	stw	r20,236(sp)
   209a4:	dc403815 	stw	r17,224(sp)
   209a8:	dc003715 	stw	r16,220(sp)
   209ac:	00252340 	call	25234 <_localeconv_r>
   209b0:	10800017 	ldw	r2,0(r2)
   209b4:	1009883a 	mov	r4,r2
   209b8:	d8800d15 	stw	r2,52(sp)
   209bc:	00274680 	call	27468 <strlen>
   209c0:	d8800b15 	stw	r2,44(sp)
   209c4:	98000226 	beq	r19,zero,209d0 <___vfprintf_internal_r+0x60>
   209c8:	98800e17 	ldw	r2,56(r19)
   209cc:	1001e026 	beq	r2,zero,21150 <___vfprintf_internal_r+0x7e0>
   209d0:	9080030b 	ldhu	r2,12(r18)
   209d4:	10c8000c 	andi	r3,r2,8192
   209d8:	1800061e 	bne	r3,zero,209f4 <___vfprintf_internal_r+0x84>
   209dc:	90c01917 	ldw	r3,100(r18)
   209e0:	0137ffc4 	movi	r4,-8193
   209e4:	10880014 	ori	r2,r2,8192
   209e8:	1906703a 	and	r3,r3,r4
   209ec:	9080030d 	sth	r2,12(r18)
   209f0:	90c01915 	stw	r3,100(r18)
   209f4:	10c0020c 	andi	r3,r2,8
   209f8:	1800fc26 	beq	r3,zero,20dec <___vfprintf_internal_r+0x47c>
   209fc:	90c00417 	ldw	r3,16(r18)
   20a00:	1800fa26 	beq	r3,zero,20dec <___vfprintf_internal_r+0x47c>
   20a04:	1080068c 	andi	r2,r2,26
   20a08:	10800298 	cmpnei	r2,r2,10
   20a0c:	1000ff26 	beq	r2,zero,20e0c <___vfprintf_internal_r+0x49c>
   20a10:	d8802704 	addi	r2,sp,156
   20a14:	b02f883a 	mov	r23,r22
   20a18:	d8801a15 	stw	r2,104(sp)
   20a1c:	d8001c15 	stw	zero,112(sp)
   20a20:	d8001b15 	stw	zero,108(sp)
   20a24:	d8000815 	stw	zero,32(sp)
   20a28:	d8000915 	stw	zero,36(sp)
   20a2c:	d8000a15 	stw	zero,40(sp)
   20a30:	d8000c15 	stw	zero,48(sp)
   20a34:	d8001015 	stw	zero,64(sp)
   20a38:	d8000515 	stw	zero,20(sp)
   20a3c:	102d883a 	mov	r22,r2
   20a40:	b8800007 	ldb	r2,0(r23)
   20a44:	1000d726 	beq	r2,zero,20da4 <___vfprintf_internal_r+0x434>
   20a48:	b821883a 	mov	r16,r23
   20a4c:	00000306 	br	20a5c <___vfprintf_internal_r+0xec>
   20a50:	80800047 	ldb	r2,1(r16)
   20a54:	84000044 	addi	r16,r16,1
   20a58:	10012226 	beq	r2,zero,20ee4 <___vfprintf_internal_r+0x574>
   20a5c:	10800958 	cmpnei	r2,r2,37
   20a60:	103ffb1e 	bne	r2,zero,20a50 <___vfprintf_internal_r+0xe0>
   20a64:	85e3c83a 	sub	r17,r16,r23
   20a68:	85c1201e 	bne	r16,r23,20eec <___vfprintf_internal_r+0x57c>
   20a6c:	80800003 	ldbu	r2,0(r16)
   20a70:	10803fcc 	andi	r2,r2,255
   20a74:	1080201c 	xori	r2,r2,128
   20a78:	10bfe004 	addi	r2,r2,-128
   20a7c:	1000c926 	beq	r2,zero,20da4 <___vfprintf_internal_r+0x434>
   20a80:	82c00047 	ldb	r11,1(r16)
   20a84:	85c00044 	addi	r23,r16,1
   20a88:	d8001345 	stb	zero,77(sp)
   20a8c:	0009883a 	mov	r4,zero
   20a90:	000b883a 	mov	r5,zero
   20a94:	023fffc4 	movi	r8,-1
   20a98:	0021883a 	mov	r16,zero
   20a9c:	0019883a 	mov	r12,zero
   20aa0:	bdc00044 	addi	r23,r23,1
   20aa4:	5839883a 	mov	fp,r11
   20aa8:	e0bff804 	addi	r2,fp,-32
   20aac:	10c01668 	cmpgeui	r3,r2,89
   20ab0:	18006c1e 	bne	r3,zero,20c64 <___vfprintf_internal_r+0x2f4>
   20ab4:	100490ba 	slli	r2,r2,2
   20ab8:	00c000b4 	movhi	r3,2
   20abc:	10c7883a 	add	r3,r2,r3
   20ac0:	1882b217 	ldw	r2,2760(r3)
   20ac4:	1000683a 	jmp	r2
   20ac8:	00021418 	cmpnei	zero,zero,2128
   20acc:	00020c64 	muli	zero,zero,2097
   20ad0:	00020c64 	muli	zero,zero,2097
   20ad4:	0002140c 	andi	zero,zero,2128
   20ad8:	00020c64 	muli	zero,zero,2097
   20adc:	00020c64 	muli	zero,zero,2097
   20ae0:	00020c64 	muli	zero,zero,2097
   20ae4:	00020c64 	muli	zero,zero,2097
   20ae8:	00020c64 	muli	zero,zero,2097
   20aec:	00020c64 	muli	zero,zero,2097
   20af0:	000213e4 	muli	zero,zero,2127
   20af4:	000213d4 	movui	zero,2127
   20af8:	00020c64 	muli	zero,zero,2097
   20afc:	000213bc 	xorhi	zero,zero,2126
   20b00:	00021370 	cmpltui	zero,zero,2125
   20b04:	00020c64 	muli	zero,zero,2097
   20b08:	00021364 	muli	zero,zero,2125
   20b0c:	00020c2c 	andhi	zero,zero,2096
   20b10:	00020c2c 	andhi	zero,zero,2096
   20b14:	00020c2c 	andhi	zero,zero,2096
   20b18:	00020c2c 	andhi	zero,zero,2096
   20b1c:	00020c2c 	andhi	zero,zero,2096
   20b20:	00020c2c 	andhi	zero,zero,2096
   20b24:	00020c2c 	andhi	zero,zero,2096
   20b28:	00020c2c 	andhi	zero,zero,2096
   20b2c:	00020c2c 	andhi	zero,zero,2096
   20b30:	00020c64 	muli	zero,zero,2097
   20b34:	00020c64 	muli	zero,zero,2097
   20b38:	00020c64 	muli	zero,zero,2097
   20b3c:	00020c64 	muli	zero,zero,2097
   20b40:	00020c64 	muli	zero,zero,2097
   20b44:	00020c64 	muli	zero,zero,2097
   20b48:	00020c64 	muli	zero,zero,2097
   20b4c:	00020c64 	muli	zero,zero,2097
   20b50:	00020c64 	muli	zero,zero,2097
   20b54:	00020c64 	muli	zero,zero,2097
   20b58:	0002127c 	xorhi	zero,zero,2121
   20b5c:	00020f48 	cmpgei	zero,zero,2109
   20b60:	00020c64 	muli	zero,zero,2097
   20b64:	00020f48 	cmpgei	zero,zero,2109
   20b68:	00020c64 	muli	zero,zero,2097
   20b6c:	00020c64 	muli	zero,zero,2097
   20b70:	00020c64 	muli	zero,zero,2097
   20b74:	00020c64 	muli	zero,zero,2097
   20b78:	00021270 	cmpltui	zero,zero,2121
   20b7c:	00020c64 	muli	zero,zero,2097
   20b80:	00020c64 	muli	zero,zero,2097
   20b84:	00020e7c 	xorhi	zero,zero,2105
   20b88:	00020c64 	muli	zero,zero,2097
   20b8c:	00020c64 	muli	zero,zero,2097
   20b90:	00020c64 	muli	zero,zero,2097
   20b94:	00020c64 	muli	zero,zero,2097
   20b98:	00020c64 	muli	zero,zero,2097
   20b9c:	00020e54 	movui	zero,2105
   20ba0:	00020c64 	muli	zero,zero,2097
   20ba4:	00020c64 	muli	zero,zero,2097
   20ba8:	00021228 	cmpgeui	zero,zero,2120
   20bac:	00020c64 	muli	zero,zero,2097
   20bb0:	00020c64 	muli	zero,zero,2097
   20bb4:	00020c64 	muli	zero,zero,2097
   20bb8:	00020c64 	muli	zero,zero,2097
   20bbc:	00020c64 	muli	zero,zero,2097
   20bc0:	00020c64 	muli	zero,zero,2097
   20bc4:	00020c64 	muli	zero,zero,2097
   20bc8:	00020c64 	muli	zero,zero,2097
   20bcc:	00020c64 	muli	zero,zero,2097
   20bd0:	00020c64 	muli	zero,zero,2097
   20bd4:	00021200 	call	2120 <__alt_mem_onchip_memory-0x1dee0>
   20bd8:	0002115c 	xori	zero,zero,2117
   20bdc:	00020f48 	cmpgei	zero,zero,2109
   20be0:	00020f48 	cmpgei	zero,zero,2109
   20be4:	00020f48 	cmpgei	zero,zero,2109
   20be8:	000211f4 	movhi	zero,2119
   20bec:	0002115c 	xori	zero,zero,2117
   20bf0:	00020c64 	muli	zero,zero,2097
   20bf4:	00020c64 	muli	zero,zero,2097
   20bf8:	0002156c 	andhi	zero,zero,2133
   20bfc:	00020c64 	muli	zero,zero,2097
   20c00:	00021530 	cmpltui	zero,zero,2132
   20c04:	00020e80 	call	20e8 <__alt_mem_onchip_memory-0x1df18>
   20c08:	000214f0 	cmpltui	zero,zero,2131
   20c0c:	000214e4 	muli	zero,zero,2131
   20c10:	00020c64 	muli	zero,zero,2097
   20c14:	0002148c 	andi	zero,zero,2130
   20c18:	00020c64 	muli	zero,zero,2097
   20c1c:	00020e58 	cmpnei	zero,zero,2105
   20c20:	00020c64 	muli	zero,zero,2097
   20c24:	00020c64 	muli	zero,zero,2097
   20c28:	00021444 	movi	zero,2129
   20c2c:	0021883a 	mov	r16,zero
   20c30:	e0fff404 	addi	r3,fp,-48
   20c34:	800490ba 	slli	r2,r16,2
   20c38:	bf000007 	ldb	fp,0(r23)
   20c3c:	bdc00044 	addi	r23,r23,1
   20c40:	1421883a 	add	r16,r2,r16
   20c44:	8421883a 	add	r16,r16,r16
   20c48:	1c21883a 	add	r16,r3,r16
   20c4c:	e0fff404 	addi	r3,fp,-48
   20c50:	188002b0 	cmpltui	r2,r3,10
   20c54:	103ff71e 	bne	r2,zero,20c34 <___vfprintf_internal_r+0x2c4>
   20c58:	e0bff804 	addi	r2,fp,-32
   20c5c:	10c01668 	cmpgeui	r3,r2,89
   20c60:	183f9426 	beq	r3,zero,20ab4 <___vfprintf_internal_r+0x144>
   20c64:	21003fcc 	andi	r4,r4,255
   20c68:	2006871e 	bne	r4,zero,22688 <___vfprintf_internal_r+0x1d18>
   20c6c:	e0004d26 	beq	fp,zero,20da4 <___vfprintf_internal_r+0x434>
   20c70:	df001d05 	stb	fp,116(sp)
   20c74:	d8001345 	stb	zero,77(sp)
   20c78:	05000044 	movi	r20,1
   20c7c:	05400044 	movi	r21,1
   20c80:	dc401d04 	addi	r17,sp,116
   20c84:	db000415 	stw	r12,16(sp)
   20c88:	0011883a 	mov	r8,zero
   20c8c:	d8000715 	stw	zero,28(sp)
   20c90:	d8800417 	ldw	r2,16(sp)
   20c94:	1380008c 	andi	r14,r2,2
   20c98:	70000126 	beq	r14,zero,20ca0 <___vfprintf_internal_r+0x330>
   20c9c:	a5000084 	addi	r20,r20,2
   20ca0:	d8800417 	ldw	r2,16(sp)
   20ca4:	d8c01c17 	ldw	r3,112(sp)
   20ca8:	1340210c 	andi	r13,r2,132
   20cac:	6800021e 	bne	r13,zero,20cb8 <___vfprintf_internal_r+0x348>
   20cb0:	850fc83a 	sub	r7,r16,r20
   20cb4:	01c34516 	blt	zero,r7,219cc <___vfprintf_internal_r+0x105c>
   20cb8:	d8801347 	ldb	r2,77(sp)
   20cbc:	10000c26 	beq	r2,zero,20cf0 <___vfprintf_internal_r+0x380>
   20cc0:	d8801b17 	ldw	r2,108(sp)
   20cc4:	d9001344 	addi	r4,sp,77
   20cc8:	18c00044 	addi	r3,r3,1
   20ccc:	10800044 	addi	r2,r2,1
   20cd0:	b1000015 	stw	r4,0(r22)
   20cd4:	01000044 	movi	r4,1
   20cd8:	d8801b15 	stw	r2,108(sp)
   20cdc:	b1000115 	stw	r4,4(r22)
   20ce0:	d8c01c15 	stw	r3,112(sp)
   20ce4:	10800208 	cmpgei	r2,r2,8
   20ce8:	1003791e 	bne	r2,zero,21ad0 <___vfprintf_internal_r+0x1160>
   20cec:	b5800204 	addi	r22,r22,8
   20cf0:	70000c26 	beq	r14,zero,20d24 <___vfprintf_internal_r+0x3b4>
   20cf4:	d8801b17 	ldw	r2,108(sp)
   20cf8:	d9001384 	addi	r4,sp,78
   20cfc:	18c00084 	addi	r3,r3,2
   20d00:	10800044 	addi	r2,r2,1
   20d04:	b1000015 	stw	r4,0(r22)
   20d08:	01000084 	movi	r4,2
   20d0c:	d8801b15 	stw	r2,108(sp)
   20d10:	b1000115 	stw	r4,4(r22)
   20d14:	d8c01c15 	stw	r3,112(sp)
   20d18:	10800208 	cmpgei	r2,r2,8
   20d1c:	10037a1e 	bne	r2,zero,21b08 <___vfprintf_internal_r+0x1198>
   20d20:	b5800204 	addi	r22,r22,8
   20d24:	6b402018 	cmpnei	r13,r13,128
   20d28:	68025b26 	beq	r13,zero,21698 <___vfprintf_internal_r+0xd28>
   20d2c:	4551c83a 	sub	r8,r8,r21
   20d30:	02029316 	blt	zero,r8,21780 <___vfprintf_internal_r+0xe10>
   20d34:	d8800417 	ldw	r2,16(sp)
   20d38:	1080400c 	andi	r2,r2,256
   20d3c:	1002101e 	bne	r2,zero,21580 <___vfprintf_internal_r+0xc10>
   20d40:	d8801b17 	ldw	r2,108(sp)
   20d44:	1d47883a 	add	r3,r3,r21
   20d48:	b4400015 	stw	r17,0(r22)
   20d4c:	10800044 	addi	r2,r2,1
   20d50:	b5400115 	stw	r21,4(r22)
   20d54:	d8801b15 	stw	r2,108(sp)
   20d58:	d8c01c15 	stw	r3,112(sp)
   20d5c:	10800208 	cmpgei	r2,r2,8
   20d60:	1003101e 	bne	r2,zero,219a4 <___vfprintf_internal_r+0x1034>
   20d64:	b5800204 	addi	r22,r22,8
   20d68:	d8800417 	ldw	r2,16(sp)
   20d6c:	1440010c 	andi	r17,r2,4
   20d70:	88000226 	beq	r17,zero,20d7c <___vfprintf_internal_r+0x40c>
   20d74:	8523c83a 	sub	r17,r16,r20
   20d78:	0440c616 	blt	zero,r17,21094 <___vfprintf_internal_r+0x724>
   20d7c:	8500010e 	bge	r16,r20,20d84 <___vfprintf_internal_r+0x414>
   20d80:	a021883a 	mov	r16,r20
   20d84:	d8800517 	ldw	r2,20(sp)
   20d88:	1405883a 	add	r2,r2,r16
   20d8c:	d8800515 	stw	r2,20(sp)
   20d90:	1802c21e 	bne	r3,zero,2189c <___vfprintf_internal_r+0xf2c>
   20d94:	b8800007 	ldb	r2,0(r23)
   20d98:	d8001b15 	stw	zero,108(sp)
   20d9c:	dd802704 	addi	r22,sp,156
   20da0:	103f291e 	bne	r2,zero,20a48 <___vfprintf_internal_r+0xd8>
   20da4:	d8801c17 	ldw	r2,112(sp)
   20da8:	1006391e 	bne	r2,zero,22690 <___vfprintf_internal_r+0x1d20>
   20dac:	9080030b 	ldhu	r2,12(r18)
   20db0:	1080100c 	andi	r2,r2,64
   20db4:	1006cf1e 	bne	r2,zero,228f4 <___vfprintf_internal_r+0x1f84>
   20db8:	d8800517 	ldw	r2,20(sp)
   20dbc:	dfc04017 	ldw	ra,256(sp)
   20dc0:	df003f17 	ldw	fp,252(sp)
   20dc4:	ddc03e17 	ldw	r23,248(sp)
   20dc8:	dd803d17 	ldw	r22,244(sp)
   20dcc:	dd403c17 	ldw	r21,240(sp)
   20dd0:	dd003b17 	ldw	r20,236(sp)
   20dd4:	dcc03a17 	ldw	r19,232(sp)
   20dd8:	dc803917 	ldw	r18,228(sp)
   20ddc:	dc403817 	ldw	r17,224(sp)
   20de0:	dc003717 	ldw	r16,220(sp)
   20de4:	dec04104 	addi	sp,sp,260
   20de8:	f800283a 	ret
   20dec:	900b883a 	mov	r5,r18
   20df0:	9809883a 	mov	r4,r19
   20df4:	0022b500 	call	22b50 <__swsetup_r>
   20df8:	1006be1e 	bne	r2,zero,228f4 <___vfprintf_internal_r+0x1f84>
   20dfc:	9080030b 	ldhu	r2,12(r18)
   20e00:	1080068c 	andi	r2,r2,26
   20e04:	10800298 	cmpnei	r2,r2,10
   20e08:	103f011e 	bne	r2,zero,20a10 <___vfprintf_internal_r+0xa0>
   20e0c:	9080038f 	ldh	r2,14(r18)
   20e10:	103eff16 	blt	r2,zero,20a10 <___vfprintf_internal_r+0xa0>
   20e14:	d9c00617 	ldw	r7,24(sp)
   20e18:	b00d883a 	mov	r6,r22
   20e1c:	900b883a 	mov	r5,r18
   20e20:	9809883a 	mov	r4,r19
   20e24:	dfc04017 	ldw	ra,256(sp)
   20e28:	df003f17 	ldw	fp,252(sp)
   20e2c:	ddc03e17 	ldw	r23,248(sp)
   20e30:	dd803d17 	ldw	r22,244(sp)
   20e34:	dd403c17 	ldw	r21,240(sp)
   20e38:	dd003b17 	ldw	r20,236(sp)
   20e3c:	dcc03a17 	ldw	r19,232(sp)
   20e40:	dc803917 	ldw	r18,228(sp)
   20e44:	dc403817 	ldw	r17,224(sp)
   20e48:	dc003717 	ldw	r16,220(sp)
   20e4c:	dec04104 	addi	sp,sp,260
   20e50:	0022a901 	jmpi	22a90 <__sbprintf>
   20e54:	63000414 	ori	r12,r12,16
   20e58:	6080080c 	andi	r2,r12,32
   20e5c:	10008126 	beq	r2,zero,21064 <___vfprintf_internal_r+0x6f4>
   20e60:	d8c00617 	ldw	r3,24(sp)
   20e64:	00800044 	movi	r2,1
   20e68:	1d000017 	ldw	r20,0(r3)
   20e6c:	1d400117 	ldw	r21,4(r3)
   20e70:	18c00204 	addi	r3,r3,8
   20e74:	d8c00615 	stw	r3,24(sp)
   20e78:	00000906 	br	20ea0 <___vfprintf_internal_r+0x530>
   20e7c:	63000414 	ori	r12,r12,16
   20e80:	6080080c 	andi	r2,r12,32
   20e84:	10006b26 	beq	r2,zero,21034 <___vfprintf_internal_r+0x6c4>
   20e88:	d8c00617 	ldw	r3,24(sp)
   20e8c:	0005883a 	mov	r2,zero
   20e90:	1d000017 	ldw	r20,0(r3)
   20e94:	1d400117 	ldw	r21,4(r3)
   20e98:	18c00204 	addi	r3,r3,8
   20e9c:	d8c00615 	stw	r3,24(sp)
   20ea0:	d8001345 	stb	zero,77(sp)
   20ea4:	40ffffe0 	cmpeqi	r3,r8,-1
   20ea8:	001b883a 	mov	r13,zero
   20eac:	18010e1e 	bne	r3,zero,212e8 <___vfprintf_internal_r+0x978>
   20eb0:	047fdfc4 	movi	r17,-129
   20eb4:	6448703a 	and	r4,r12,r17
   20eb8:	a546b03a 	or	r3,r20,r21
   20ebc:	d9000415 	stw	r4,16(sp)
   20ec0:	1802c01e 	bne	r3,zero,219c4 <___vfprintf_internal_r+0x1054>
   20ec4:	40025f1e 	bne	r8,zero,21844 <___vfprintf_internal_r+0xed4>
   20ec8:	1003751e 	bne	r2,zero,21ca0 <___vfprintf_internal_r+0x1330>
   20ecc:	6540004c 	andi	r21,r12,1
   20ed0:	a803b026 	beq	r21,zero,21d94 <___vfprintf_internal_r+0x1424>
   20ed4:	00800c04 	movi	r2,48
   20ed8:	d88026c5 	stb	r2,155(sp)
   20edc:	dc4026c4 	addi	r17,sp,155
   20ee0:	0000ba06 	br	211cc <___vfprintf_internal_r+0x85c>
   20ee4:	85e3c83a 	sub	r17,r16,r23
   20ee8:	85ffae26 	beq	r16,r23,20da4 <___vfprintf_internal_r+0x434>
   20eec:	d8c01c17 	ldw	r3,112(sp)
   20ef0:	d8801b17 	ldw	r2,108(sp)
   20ef4:	b5c00015 	stw	r23,0(r22)
   20ef8:	1c47883a 	add	r3,r3,r17
   20efc:	10800044 	addi	r2,r2,1
   20f00:	d8801b15 	stw	r2,108(sp)
   20f04:	b4400115 	stw	r17,4(r22)
   20f08:	d8c01c15 	stw	r3,112(sp)
   20f0c:	10800208 	cmpgei	r2,r2,8
   20f10:	1000061e 	bne	r2,zero,20f2c <___vfprintf_internal_r+0x5bc>
   20f14:	b5800204 	addi	r22,r22,8
   20f18:	d8c00517 	ldw	r3,20(sp)
   20f1c:	80800003 	ldbu	r2,0(r16)
   20f20:	1c47883a 	add	r3,r3,r17
   20f24:	d8c00515 	stw	r3,20(sp)
   20f28:	003ed106 	br	20a70 <___vfprintf_internal_r+0x100>
   20f2c:	d9801a04 	addi	r6,sp,104
   20f30:	900b883a 	mov	r5,r18
   20f34:	9809883a 	mov	r4,r19
   20f38:	00275f40 	call	275f4 <__sprint_r>
   20f3c:	103f9b1e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   20f40:	dd802704 	addi	r22,sp,156
   20f44:	003ff406 	br	20f18 <___vfprintf_internal_r+0x5a8>
   20f48:	21003fcc 	andi	r4,r4,255
   20f4c:	2006671e 	bne	r4,zero,228ec <___vfprintf_internal_r+0x1f7c>
   20f50:	d8c00617 	ldw	r3,24(sp)
   20f54:	6080020c 	andi	r2,r12,8
   20f58:	19000204 	addi	r4,r3,8
   20f5c:	d9000e15 	stw	r4,56(sp)
   20f60:	1003a71e 	bne	r2,zero,21e00 <___vfprintf_internal_r+0x1490>
   20f64:	d8800617 	ldw	r2,24(sp)
   20f68:	10c00017 	ldw	r3,0(r2)
   20f6c:	10800117 	ldw	r2,4(r2)
   20f70:	d8c00915 	stw	r3,36(sp)
   20f74:	d8800a15 	stw	r2,40(sp)
   20f78:	dd400a17 	ldw	r21,40(sp)
   20f7c:	dd000917 	ldw	r20,36(sp)
   20f80:	00a00034 	movhi	r2,32768
   20f84:	10bfffc4 	addi	r2,r2,-1
   20f88:	a8a2703a 	and	r17,r21,r2
   20f8c:	01dffc34 	movhi	r7,32752
   20f90:	01bfffc4 	movi	r6,-1
   20f94:	39ffffc4 	addi	r7,r7,-1
   20f98:	a009883a 	mov	r4,r20
   20f9c:	880b883a 	mov	r5,r17
   20fa0:	da000615 	stw	r8,24(sp)
   20fa4:	db000415 	stw	r12,16(sp)
   20fa8:	002d97c0 	call	2d97c <__unorddf2>
   20fac:	db000417 	ldw	r12,16(sp)
   20fb0:	da000617 	ldw	r8,24(sp)
   20fb4:	1004641e 	bne	r2,zero,22148 <___vfprintf_internal_r+0x17d8>
   20fb8:	01dffc34 	movhi	r7,32752
   20fbc:	01bfffc4 	movi	r6,-1
   20fc0:	39ffffc4 	addi	r7,r7,-1
   20fc4:	a009883a 	mov	r4,r20
   20fc8:	880b883a 	mov	r5,r17
   20fcc:	002c8340 	call	2c834 <__ledf2>
   20fd0:	db000417 	ldw	r12,16(sp)
   20fd4:	da000617 	ldw	r8,24(sp)
   20fd8:	00845b0e 	bge	zero,r2,22148 <___vfprintf_internal_r+0x17d8>
   20fdc:	000d883a 	mov	r6,zero
   20fe0:	000f883a 	mov	r7,zero
   20fe4:	a009883a 	mov	r4,r20
   20fe8:	a80b883a 	mov	r5,r21
   20fec:	002c8340 	call	2c834 <__ledf2>
   20ff0:	db000417 	ldw	r12,16(sp)
   20ff4:	10059116 	blt	r2,zero,2263c <___vfprintf_internal_r+0x1ccc>
   20ff8:	db401343 	ldbu	r13,77(sp)
   20ffc:	e0801210 	cmplti	r2,fp,72
   21000:	1005391e 	bne	r2,zero,224e8 <___vfprintf_internal_r+0x1b78>
   21004:	044000f4 	movhi	r17,3
   21008:	8c41c504 	addi	r17,r17,1812
   2100c:	00bfdfc4 	movi	r2,-129
   21010:	6084703a 	and	r2,r12,r2
   21014:	d8800415 	stw	r2,16(sp)
   21018:	d8800e17 	ldw	r2,56(sp)
   2101c:	050000c4 	movi	r20,3
   21020:	054000c4 	movi	r21,3
   21024:	d8800615 	stw	r2,24(sp)
   21028:	0011883a 	mov	r8,zero
   2102c:	d8000715 	stw	zero,28(sp)
   21030:	00006a06 	br	211dc <___vfprintf_internal_r+0x86c>
   21034:	d9000617 	ldw	r4,24(sp)
   21038:	6080040c 	andi	r2,r12,16
   2103c:	20c00104 	addi	r3,r4,4
   21040:	10036a1e 	bne	r2,zero,21dec <___vfprintf_internal_r+0x147c>
   21044:	6080100c 	andi	r2,r12,64
   21048:	10052126 	beq	r2,zero,224d0 <___vfprintf_internal_r+0x1b60>
   2104c:	d8800617 	ldw	r2,24(sp)
   21050:	002b883a 	mov	r21,zero
   21054:	d8c00615 	stw	r3,24(sp)
   21058:	1500000b 	ldhu	r20,0(r2)
   2105c:	0005883a 	mov	r2,zero
   21060:	003f8f06 	br	20ea0 <___vfprintf_internal_r+0x530>
   21064:	d9000617 	ldw	r4,24(sp)
   21068:	6080040c 	andi	r2,r12,16
   2106c:	20c00104 	addi	r3,r4,4
   21070:	1003501e 	bne	r2,zero,21db4 <___vfprintf_internal_r+0x1444>
   21074:	6080100c 	andi	r2,r12,64
   21078:	10055926 	beq	r2,zero,225e0 <___vfprintf_internal_r+0x1c70>
   2107c:	d8800617 	ldw	r2,24(sp)
   21080:	002b883a 	mov	r21,zero
   21084:	d8c00615 	stw	r3,24(sp)
   21088:	1500000b 	ldhu	r20,0(r2)
   2108c:	00800044 	movi	r2,1
   21090:	003f8306 	br	20ea0 <___vfprintf_internal_r+0x530>
   21094:	030000f4 	movhi	r12,3
   21098:	89000450 	cmplti	r4,r17,17
   2109c:	d8801b17 	ldw	r2,108(sp)
   210a0:	6301d904 	addi	r12,r12,1892
   210a4:	20001b1e 	bne	r4,zero,21114 <___vfprintf_internal_r+0x7a4>
   210a8:	05400404 	movi	r21,16
   210ac:	6039883a 	mov	fp,r12
   210b0:	00000406 	br	210c4 <___vfprintf_internal_r+0x754>
   210b4:	8c7ffc04 	addi	r17,r17,-16
   210b8:	89000448 	cmpgei	r4,r17,17
   210bc:	b5800204 	addi	r22,r22,8
   210c0:	20001326 	beq	r4,zero,21110 <___vfprintf_internal_r+0x7a0>
   210c4:	10800044 	addi	r2,r2,1
   210c8:	18c00404 	addi	r3,r3,16
   210cc:	b7000015 	stw	fp,0(r22)
   210d0:	b5400115 	stw	r21,4(r22)
   210d4:	d8c01c15 	stw	r3,112(sp)
   210d8:	d8801b15 	stw	r2,108(sp)
   210dc:	11000208 	cmpgei	r4,r2,8
   210e0:	203ff426 	beq	r4,zero,210b4 <___vfprintf_internal_r+0x744>
   210e4:	d9801a04 	addi	r6,sp,104
   210e8:	900b883a 	mov	r5,r18
   210ec:	9809883a 	mov	r4,r19
   210f0:	00275f40 	call	275f4 <__sprint_r>
   210f4:	103f2d1e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   210f8:	8c7ffc04 	addi	r17,r17,-16
   210fc:	89000448 	cmpgei	r4,r17,17
   21100:	d8c01c17 	ldw	r3,112(sp)
   21104:	d8801b17 	ldw	r2,108(sp)
   21108:	dd802704 	addi	r22,sp,156
   2110c:	203fed1e 	bne	r4,zero,210c4 <___vfprintf_internal_r+0x754>
   21110:	e019883a 	mov	r12,fp
   21114:	10800044 	addi	r2,r2,1
   21118:	1c47883a 	add	r3,r3,r17
   2111c:	d8801b15 	stw	r2,108(sp)
   21120:	b3000015 	stw	r12,0(r22)
   21124:	b4400115 	stw	r17,4(r22)
   21128:	d8c01c15 	stw	r3,112(sp)
   2112c:	10800210 	cmplti	r2,r2,8
   21130:	103f121e 	bne	r2,zero,20d7c <___vfprintf_internal_r+0x40c>
   21134:	d9801a04 	addi	r6,sp,104
   21138:	900b883a 	mov	r5,r18
   2113c:	9809883a 	mov	r4,r19
   21140:	00275f40 	call	275f4 <__sprint_r>
   21144:	103f191e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   21148:	d8c01c17 	ldw	r3,112(sp)
   2114c:	003f0b06 	br	20d7c <___vfprintf_internal_r+0x40c>
   21150:	9809883a 	mov	r4,r19
   21154:	0024c8c0 	call	24c8c <__sinit>
   21158:	003e1d06 	br	209d0 <___vfprintf_internal_r+0x60>
   2115c:	21003fcc 	andi	r4,r4,255
   21160:	2005de1e 	bne	r4,zero,228dc <___vfprintf_internal_r+0x1f6c>
   21164:	6080080c 	andi	r2,r12,32
   21168:	10004926 	beq	r2,zero,21290 <___vfprintf_internal_r+0x920>
   2116c:	d8c00617 	ldw	r3,24(sp)
   21170:	18800117 	ldw	r2,4(r3)
   21174:	1d000017 	ldw	r20,0(r3)
   21178:	18c00204 	addi	r3,r3,8
   2117c:	d8c00615 	stw	r3,24(sp)
   21180:	102b883a 	mov	r21,r2
   21184:	10004e16 	blt	r2,zero,212c0 <___vfprintf_internal_r+0x950>
   21188:	40bfffd8 	cmpnei	r2,r8,-1
   2118c:	db401343 	ldbu	r13,77(sp)
   21190:	10000626 	beq	r2,zero,211ac <___vfprintf_internal_r+0x83c>
   21194:	047fdfc4 	movi	r17,-129
   21198:	6446703a 	and	r3,r12,r17
   2119c:	a544b03a 	or	r2,r20,r21
   211a0:	d8c00415 	stw	r3,16(sp)
   211a4:	1002bd26 	beq	r2,zero,21c9c <___vfprintf_internal_r+0x132c>
   211a8:	db000417 	ldw	r12,16(sp)
   211ac:	a803701e 	bne	r21,zero,21f70 <___vfprintf_internal_r+0x1600>
   211b0:	a08002a8 	cmpgeui	r2,r20,10
   211b4:	10036e1e 	bne	r2,zero,21f70 <___vfprintf_internal_r+0x1600>
   211b8:	a5000c04 	addi	r20,r20,48
   211bc:	dd0026c5 	stb	r20,155(sp)
   211c0:	db000415 	stw	r12,16(sp)
   211c4:	05400044 	movi	r21,1
   211c8:	dc4026c4 	addi	r17,sp,155
   211cc:	4029883a 	mov	r20,r8
   211d0:	4540010e 	bge	r8,r21,211d8 <___vfprintf_internal_r+0x868>
   211d4:	a829883a 	mov	r20,r21
   211d8:	d8000715 	stw	zero,28(sp)
   211dc:	6b403fcc 	andi	r13,r13,255
   211e0:	6b40201c 	xori	r13,r13,128
   211e4:	6b7fe004 	addi	r13,r13,-128
   211e8:	683ea926 	beq	r13,zero,20c90 <___vfprintf_internal_r+0x320>
   211ec:	a5000044 	addi	r20,r20,1
   211f0:	003ea706 	br	20c90 <___vfprintf_internal_r+0x320>
   211f4:	bac00007 	ldb	r11,0(r23)
   211f8:	63001014 	ori	r12,r12,64
   211fc:	003e2806 	br	20aa0 <___vfprintf_internal_r+0x130>
   21200:	d8c00617 	ldw	r3,24(sp)
   21204:	d8001345 	stb	zero,77(sp)
   21208:	05000044 	movi	r20,1
   2120c:	18800017 	ldw	r2,0(r3)
   21210:	18c00104 	addi	r3,r3,4
   21214:	d8c00615 	stw	r3,24(sp)
   21218:	d8801d05 	stb	r2,116(sp)
   2121c:	05400044 	movi	r21,1
   21220:	dc401d04 	addi	r17,sp,116
   21224:	003e9706 	br	20c84 <___vfprintf_internal_r+0x314>
   21228:	21003fcc 	andi	r4,r4,255
   2122c:	2005a71e 	bne	r4,zero,228cc <___vfprintf_internal_r+0x1f5c>
   21230:	008000f4 	movhi	r2,3
   21234:	1081cd04 	addi	r2,r2,1844
   21238:	d8800c15 	stw	r2,48(sp)
   2123c:	6080080c 	andi	r2,r12,32
   21240:	10008726 	beq	r2,zero,21460 <___vfprintf_internal_r+0xaf0>
   21244:	d8800617 	ldw	r2,24(sp)
   21248:	15000017 	ldw	r20,0(r2)
   2124c:	15400117 	ldw	r21,4(r2)
   21250:	10800204 	addi	r2,r2,8
   21254:	d8800615 	stw	r2,24(sp)
   21258:	6080004c 	andi	r2,r12,1
   2125c:	10000226 	beq	r2,zero,21268 <___vfprintf_internal_r+0x8f8>
   21260:	a544b03a 	or	r2,r20,r21
   21264:	1002cd1e 	bne	r2,zero,21d9c <___vfprintf_internal_r+0x142c>
   21268:	00800084 	movi	r2,2
   2126c:	003f0c06 	br	20ea0 <___vfprintf_internal_r+0x530>
   21270:	bac00007 	ldb	r11,0(r23)
   21274:	63000214 	ori	r12,r12,8
   21278:	003e0906 	br	20aa0 <___vfprintf_internal_r+0x130>
   2127c:	21003fcc 	andi	r4,r4,255
   21280:	2005981e 	bne	r4,zero,228e4 <___vfprintf_internal_r+0x1f74>
   21284:	63000414 	ori	r12,r12,16
   21288:	6080080c 	andi	r2,r12,32
   2128c:	103fb71e 	bne	r2,zero,2116c <___vfprintf_internal_r+0x7fc>
   21290:	d9000617 	ldw	r4,24(sp)
   21294:	6080040c 	andi	r2,r12,16
   21298:	20c00104 	addi	r3,r4,4
   2129c:	1002dd1e 	bne	r2,zero,21e14 <___vfprintf_internal_r+0x14a4>
   212a0:	6080100c 	andi	r2,r12,64
   212a4:	10048426 	beq	r2,zero,224b8 <___vfprintf_internal_r+0x1b48>
   212a8:	d8800617 	ldw	r2,24(sp)
   212ac:	d8c00615 	stw	r3,24(sp)
   212b0:	1500000f 	ldh	r20,0(r2)
   212b4:	a02bd7fa 	srai	r21,r20,31
   212b8:	a805883a 	mov	r2,r21
   212bc:	103fb20e 	bge	r2,zero,21188 <___vfprintf_internal_r+0x818>
   212c0:	a004c03a 	cmpne	r2,r20,zero
   212c4:	056bc83a 	sub	r21,zero,r21
   212c8:	a8abc83a 	sub	r21,r21,r2
   212cc:	00800b44 	movi	r2,45
   212d0:	d8801345 	stb	r2,77(sp)
   212d4:	40ffffe0 	cmpeqi	r3,r8,-1
   212d8:	0529c83a 	sub	r20,zero,r20
   212dc:	03400b44 	movi	r13,45
   212e0:	00800044 	movi	r2,1
   212e4:	183ef226 	beq	r3,zero,20eb0 <___vfprintf_internal_r+0x540>
   212e8:	10c00060 	cmpeqi	r3,r2,1
   212ec:	183faf1e 	bne	r3,zero,211ac <___vfprintf_internal_r+0x83c>
   212f0:	108000a0 	cmpeqi	r2,r2,2
   212f4:	1001581e 	bne	r2,zero,21858 <___vfprintf_internal_r+0xee8>
   212f8:	dc402704 	addi	r17,sp,156
   212fc:	a006d0fa 	srli	r3,r20,3
   21300:	a808977a 	slli	r4,r21,29
   21304:	a82ad0fa 	srli	r21,r21,3
   21308:	a50001cc 	andi	r20,r20,7
   2130c:	a0800c04 	addi	r2,r20,48
   21310:	20e8b03a 	or	r20,r4,r3
   21314:	88bfffc5 	stb	r2,-1(r17)
   21318:	a546b03a 	or	r3,r20,r21
   2131c:	880b883a 	mov	r5,r17
   21320:	8c7fffc4 	addi	r17,r17,-1
   21324:	183ff51e 	bne	r3,zero,212fc <___vfprintf_internal_r+0x98c>
   21328:	60c0004c 	andi	r3,r12,1
   2132c:	18015726 	beq	r3,zero,2188c <___vfprintf_internal_r+0xf1c>
   21330:	10803fcc 	andi	r2,r2,255
   21334:	1080201c 	xori	r2,r2,128
   21338:	10bfe004 	addi	r2,r2,-128
   2133c:	10800c18 	cmpnei	r2,r2,48
   21340:	10015226 	beq	r2,zero,2188c <___vfprintf_internal_r+0xf1c>
   21344:	00800c04 	movi	r2,48
   21348:	297fff84 	addi	r5,r5,-2
   2134c:	88bfffc5 	stb	r2,-1(r17)
   21350:	d8802704 	addi	r2,sp,156
   21354:	116bc83a 	sub	r21,r2,r5
   21358:	db000415 	stw	r12,16(sp)
   2135c:	2823883a 	mov	r17,r5
   21360:	003f9a06 	br	211cc <___vfprintf_internal_r+0x85c>
   21364:	bac00007 	ldb	r11,0(r23)
   21368:	63002014 	ori	r12,r12,128
   2136c:	003dcc06 	br	20aa0 <___vfprintf_internal_r+0x130>
   21370:	bf000007 	ldb	fp,0(r23)
   21374:	b8800044 	addi	r2,r23,1
   21378:	e0c00aa0 	cmpeqi	r3,fp,42
   2137c:	1805b11e 	bne	r3,zero,22a44 <___vfprintf_internal_r+0x20d4>
   21380:	e0fff404 	addi	r3,fp,-48
   21384:	198002b0 	cmpltui	r6,r3,10
   21388:	102f883a 	mov	r23,r2
   2138c:	0011883a 	mov	r8,zero
   21390:	303dc526 	beq	r6,zero,20aa8 <___vfprintf_internal_r+0x138>
   21394:	400490ba 	slli	r2,r8,2
   21398:	bf000007 	ldb	fp,0(r23)
   2139c:	bdc00044 	addi	r23,r23,1
   213a0:	1211883a 	add	r8,r2,r8
   213a4:	4211883a 	add	r8,r8,r8
   213a8:	40d1883a 	add	r8,r8,r3
   213ac:	e0fff404 	addi	r3,fp,-48
   213b0:	188002b0 	cmpltui	r2,r3,10
   213b4:	103ff71e 	bne	r2,zero,21394 <___vfprintf_internal_r+0xa24>
   213b8:	003dbb06 	br	20aa8 <___vfprintf_internal_r+0x138>
   213bc:	bf000003 	ldbu	fp,0(r23)
   213c0:	e2c03fcc 	andi	r11,fp,255
   213c4:	5ac0201c 	xori	r11,r11,128
   213c8:	63000114 	ori	r12,r12,4
   213cc:	5affe004 	addi	r11,r11,-128
   213d0:	003db306 	br	20aa0 <___vfprintf_internal_r+0x130>
   213d4:	bac00007 	ldb	r11,0(r23)
   213d8:	01000044 	movi	r4,1
   213dc:	01400ac4 	movi	r5,43
   213e0:	003daf06 	br	20aa0 <___vfprintf_internal_r+0x130>
   213e4:	d8800617 	ldw	r2,24(sp)
   213e8:	bf000003 	ldbu	fp,0(r23)
   213ec:	14000017 	ldw	r16,0(r2)
   213f0:	10800104 	addi	r2,r2,4
   213f4:	80028c16 	blt	r16,zero,21e28 <___vfprintf_internal_r+0x14b8>
   213f8:	d8800615 	stw	r2,24(sp)
   213fc:	e2c03fcc 	andi	r11,fp,255
   21400:	5ac0201c 	xori	r11,r11,128
   21404:	5affe004 	addi	r11,r11,-128
   21408:	003da506 	br	20aa0 <___vfprintf_internal_r+0x130>
   2140c:	bac00007 	ldb	r11,0(r23)
   21410:	63000054 	ori	r12,r12,1
   21414:	003da206 	br	20aa0 <___vfprintf_internal_r+0x130>
   21418:	28803fcc 	andi	r2,r5,255
   2141c:	1080201c 	xori	r2,r2,128
   21420:	10bfe004 	addi	r2,r2,-128
   21424:	bf000003 	ldbu	fp,0(r23)
   21428:	103ff41e 	bne	r2,zero,213fc <___vfprintf_internal_r+0xa8c>
   2142c:	e2c03fcc 	andi	r11,fp,255
   21430:	5ac0201c 	xori	r11,r11,128
   21434:	01000044 	movi	r4,1
   21438:	01400804 	movi	r5,32
   2143c:	5affe004 	addi	r11,r11,-128
   21440:	003d9706 	br	20aa0 <___vfprintf_internal_r+0x130>
   21444:	21003fcc 	andi	r4,r4,255
   21448:	20051e1e 	bne	r4,zero,228c4 <___vfprintf_internal_r+0x1f54>
   2144c:	008000f4 	movhi	r2,3
   21450:	1081c804 	addi	r2,r2,1824
   21454:	d8800c15 	stw	r2,48(sp)
   21458:	6080080c 	andi	r2,r12,32
   2145c:	103f791e 	bne	r2,zero,21244 <___vfprintf_internal_r+0x8d4>
   21460:	d9000617 	ldw	r4,24(sp)
   21464:	6080040c 	andi	r2,r12,16
   21468:	20c00104 	addi	r3,r4,4
   2146c:	10025b1e 	bne	r2,zero,21ddc <___vfprintf_internal_r+0x146c>
   21470:	6080100c 	andi	r2,r12,64
   21474:	10046026 	beq	r2,zero,225f8 <___vfprintf_internal_r+0x1c88>
   21478:	d8800617 	ldw	r2,24(sp)
   2147c:	002b883a 	mov	r21,zero
   21480:	d8c00615 	stw	r3,24(sp)
   21484:	1500000b 	ldhu	r20,0(r2)
   21488:	003f7306 	br	21258 <___vfprintf_internal_r+0x8e8>
   2148c:	d8800617 	ldw	r2,24(sp)
   21490:	d8001345 	stb	zero,77(sp)
   21494:	14400017 	ldw	r17,0(r2)
   21498:	10c00104 	addi	r3,r2,4
   2149c:	88028e26 	beq	r17,zero,21ed8 <___vfprintf_internal_r+0x1568>
   214a0:	40bfffe0 	cmpeqi	r2,r8,-1
   214a4:	1003c01e 	bne	r2,zero,223a8 <___vfprintf_internal_r+0x1a38>
   214a8:	400d883a 	mov	r6,r8
   214ac:	000b883a 	mov	r5,zero
   214b0:	8809883a 	mov	r4,r17
   214b4:	d8c00715 	stw	r3,28(sp)
   214b8:	db000615 	stw	r12,24(sp)
   214bc:	da000415 	stw	r8,16(sp)
   214c0:	0025c740 	call	25c74 <memchr>
   214c4:	da000417 	ldw	r8,16(sp)
   214c8:	db000617 	ldw	r12,24(sp)
   214cc:	d8c00717 	ldw	r3,28(sp)
   214d0:	1004ec26 	beq	r2,zero,22884 <___vfprintf_internal_r+0x1f14>
   214d4:	146bc83a 	sub	r21,r2,r17
   214d8:	a829883a 	mov	r20,r21
   214dc:	d8c00615 	stw	r3,24(sp)
   214e0:	003de806 	br	20c84 <___vfprintf_internal_r+0x314>
   214e4:	bac00007 	ldb	r11,0(r23)
   214e8:	63000814 	ori	r12,r12,32
   214ec:	003d6c06 	br	20aa0 <___vfprintf_internal_r+0x130>
   214f0:	d8c00617 	ldw	r3,24(sp)
   214f4:	00800c04 	movi	r2,48
   214f8:	d8801385 	stb	r2,78(sp)
   214fc:	00801e04 	movi	r2,120
   21500:	010000f4 	movhi	r4,3
   21504:	d88013c5 	stb	r2,79(sp)
   21508:	18800104 	addi	r2,r3,4
   2150c:	d8800615 	stw	r2,24(sp)
   21510:	2081c804 	addi	r2,r4,1824
   21514:	d8800c15 	stw	r2,48(sp)
   21518:	1d000017 	ldw	r20,0(r3)
   2151c:	002b883a 	mov	r21,zero
   21520:	63000094 	ori	r12,r12,2
   21524:	00800084 	movi	r2,2
   21528:	07001e04 	movi	fp,120
   2152c:	003e5c06 	br	20ea0 <___vfprintf_internal_r+0x530>
   21530:	21003fcc 	andi	r4,r4,255
   21534:	2004e71e 	bne	r4,zero,228d4 <___vfprintf_internal_r+0x1f64>
   21538:	d9000617 	ldw	r4,24(sp)
   2153c:	6080080c 	andi	r2,r12,32
   21540:	20c00017 	ldw	r3,0(r4)
   21544:	21000104 	addi	r4,r4,4
   21548:	d9000615 	stw	r4,24(sp)
   2154c:	10021e1e 	bne	r2,zero,21dc8 <___vfprintf_internal_r+0x1458>
   21550:	6080040c 	andi	r2,r12,16
   21554:	1002ae1e 	bne	r2,zero,22010 <___vfprintf_internal_r+0x16a0>
   21558:	6300100c 	andi	r12,r12,64
   2155c:	6002ac26 	beq	r12,zero,22010 <___vfprintf_internal_r+0x16a0>
   21560:	d8800517 	ldw	r2,20(sp)
   21564:	1880000d 	sth	r2,0(r3)
   21568:	003d3506 	br	20a40 <___vfprintf_internal_r+0xd0>
   2156c:	bac00007 	ldb	r11,0(r23)
   21570:	58801b18 	cmpnei	r2,r11,108
   21574:	10024926 	beq	r2,zero,21e9c <___vfprintf_internal_r+0x152c>
   21578:	63000414 	ori	r12,r12,16
   2157c:	003d4806 	br	20aa0 <___vfprintf_internal_r+0x130>
   21580:	e2c01990 	cmplti	r11,fp,102
   21584:	5800cb1e 	bne	r11,zero,218b4 <___vfprintf_internal_r+0xf44>
   21588:	d9000917 	ldw	r4,36(sp)
   2158c:	d9400a17 	ldw	r5,40(sp)
   21590:	000d883a 	mov	r6,zero
   21594:	000f883a 	mov	r7,zero
   21598:	d8c00e15 	stw	r3,56(sp)
   2159c:	002c6cc0 	call	2c6cc <__eqdf2>
   215a0:	d8c00e17 	ldw	r3,56(sp)
   215a4:	1001641e 	bne	r2,zero,21b38 <___vfprintf_internal_r+0x11c8>
   215a8:	d8801b17 	ldw	r2,108(sp)
   215ac:	010000f4 	movhi	r4,3
   215b0:	2101d404 	addi	r4,r4,1872
   215b4:	10800044 	addi	r2,r2,1
   215b8:	18c00044 	addi	r3,r3,1
   215bc:	b1000015 	stw	r4,0(r22)
   215c0:	01000044 	movi	r4,1
   215c4:	d8801b15 	stw	r2,108(sp)
   215c8:	b1000115 	stw	r4,4(r22)
   215cc:	d8c01c15 	stw	r3,112(sp)
   215d0:	10800208 	cmpgei	r2,r2,8
   215d4:	1003621e 	bne	r2,zero,22360 <___vfprintf_internal_r+0x19f0>
   215d8:	b5800204 	addi	r22,r22,8
   215dc:	d8801417 	ldw	r2,80(sp)
   215e0:	d9000817 	ldw	r4,32(sp)
   215e4:	1101e70e 	bge	r2,r4,21d84 <___vfprintf_internal_r+0x1414>
   215e8:	d8800d17 	ldw	r2,52(sp)
   215ec:	d9000b17 	ldw	r4,44(sp)
   215f0:	b0800015 	stw	r2,0(r22)
   215f4:	d8801b17 	ldw	r2,108(sp)
   215f8:	1907883a 	add	r3,r3,r4
   215fc:	b1000115 	stw	r4,4(r22)
   21600:	10800044 	addi	r2,r2,1
   21604:	d8801b15 	stw	r2,108(sp)
   21608:	d8c01c15 	stw	r3,112(sp)
   2160c:	10800208 	cmpgei	r2,r2,8
   21610:	1002291e 	bne	r2,zero,21eb8 <___vfprintf_internal_r+0x1548>
   21614:	b5800204 	addi	r22,r22,8
   21618:	d8800817 	ldw	r2,32(sp)
   2161c:	157fffc4 	addi	r21,r2,-1
   21620:	057dd10e 	bge	zero,r21,20d68 <___vfprintf_internal_r+0x3f8>
   21624:	01c000f4 	movhi	r7,3
   21628:	a9000450 	cmplti	r4,r21,17
   2162c:	d8801b17 	ldw	r2,108(sp)
   21630:	39c1d504 	addi	r7,r7,1876
   21634:	2003461e 	bne	r4,zero,22350 <___vfprintf_internal_r+0x19e0>
   21638:	07000404 	movi	fp,16
   2163c:	3823883a 	mov	r17,r7
   21640:	00000406 	br	21654 <___vfprintf_internal_r+0xce4>
   21644:	b5800204 	addi	r22,r22,8
   21648:	ad7ffc04 	addi	r21,r21,-16
   2164c:	a9000448 	cmpgei	r4,r21,17
   21650:	20033e26 	beq	r4,zero,2234c <___vfprintf_internal_r+0x19dc>
   21654:	10800044 	addi	r2,r2,1
   21658:	18c00404 	addi	r3,r3,16
   2165c:	b4400015 	stw	r17,0(r22)
   21660:	b7000115 	stw	fp,4(r22)
   21664:	d8c01c15 	stw	r3,112(sp)
   21668:	d8801b15 	stw	r2,108(sp)
   2166c:	11000208 	cmpgei	r4,r2,8
   21670:	203ff426 	beq	r4,zero,21644 <___vfprintf_internal_r+0xcd4>
   21674:	d9801a04 	addi	r6,sp,104
   21678:	900b883a 	mov	r5,r18
   2167c:	9809883a 	mov	r4,r19
   21680:	00275f40 	call	275f4 <__sprint_r>
   21684:	103dc91e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   21688:	d8c01c17 	ldw	r3,112(sp)
   2168c:	d8801b17 	ldw	r2,108(sp)
   21690:	dd802704 	addi	r22,sp,156
   21694:	003fec06 	br	21648 <___vfprintf_internal_r+0xcd8>
   21698:	8519c83a 	sub	r12,r16,r20
   2169c:	033da30e 	bge	zero,r12,20d2c <___vfprintf_internal_r+0x3bc>
   216a0:	01c000f4 	movhi	r7,3
   216a4:	61000450 	cmplti	r4,r12,17
   216a8:	d8801b17 	ldw	r2,108(sp)
   216ac:	39c1d504 	addi	r7,r7,1876
   216b0:	2000281e 	bne	r4,zero,21754 <___vfprintf_internal_r+0xde4>
   216b4:	dc400e15 	stw	r17,56(sp)
   216b8:	dc000f15 	stw	r16,60(sp)
   216bc:	b009883a 	mov	r4,r22
   216c0:	03400404 	movi	r13,16
   216c4:	a02d883a 	mov	r22,r20
   216c8:	6021883a 	mov	r16,r12
   216cc:	4029883a 	mov	r20,r8
   216d0:	3823883a 	mov	r17,r7
   216d4:	00000406 	br	216e8 <___vfprintf_internal_r+0xd78>
   216d8:	843ffc04 	addi	r16,r16,-16
   216dc:	81400448 	cmpgei	r5,r16,17
   216e0:	21000204 	addi	r4,r4,8
   216e4:	28001426 	beq	r5,zero,21738 <___vfprintf_internal_r+0xdc8>
   216e8:	10800044 	addi	r2,r2,1
   216ec:	18c00404 	addi	r3,r3,16
   216f0:	24400015 	stw	r17,0(r4)
   216f4:	23400115 	stw	r13,4(r4)
   216f8:	d8c01c15 	stw	r3,112(sp)
   216fc:	d8801b15 	stw	r2,108(sp)
   21700:	11400208 	cmpgei	r5,r2,8
   21704:	283ff426 	beq	r5,zero,216d8 <___vfprintf_internal_r+0xd68>
   21708:	d9801a04 	addi	r6,sp,104
   2170c:	900b883a 	mov	r5,r18
   21710:	9809883a 	mov	r4,r19
   21714:	00275f40 	call	275f4 <__sprint_r>
   21718:	103da41e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   2171c:	843ffc04 	addi	r16,r16,-16
   21720:	81400448 	cmpgei	r5,r16,17
   21724:	d8c01c17 	ldw	r3,112(sp)
   21728:	d8801b17 	ldw	r2,108(sp)
   2172c:	d9002704 	addi	r4,sp,156
   21730:	03400404 	movi	r13,16
   21734:	283fec1e 	bne	r5,zero,216e8 <___vfprintf_internal_r+0xd78>
   21738:	8019883a 	mov	r12,r16
   2173c:	880f883a 	mov	r7,r17
   21740:	dc000f17 	ldw	r16,60(sp)
   21744:	dc400e17 	ldw	r17,56(sp)
   21748:	a011883a 	mov	r8,r20
   2174c:	b029883a 	mov	r20,r22
   21750:	202d883a 	mov	r22,r4
   21754:	10800044 	addi	r2,r2,1
   21758:	1b07883a 	add	r3,r3,r12
   2175c:	d8801b15 	stw	r2,108(sp)
   21760:	b1c00015 	stw	r7,0(r22)
   21764:	b3000115 	stw	r12,4(r22)
   21768:	d8c01c15 	stw	r3,112(sp)
   2176c:	10800208 	cmpgei	r2,r2,8
   21770:	1003031e 	bne	r2,zero,22380 <___vfprintf_internal_r+0x1a10>
   21774:	4551c83a 	sub	r8,r8,r21
   21778:	b5800204 	addi	r22,r22,8
   2177c:	023d6d0e 	bge	zero,r8,20d34 <___vfprintf_internal_r+0x3c4>
   21780:	01c000f4 	movhi	r7,3
   21784:	41000450 	cmplti	r4,r8,17
   21788:	d8801b17 	ldw	r2,108(sp)
   2178c:	39c1d504 	addi	r7,r7,1876
   21790:	2000221e 	bne	r4,zero,2181c <___vfprintf_internal_r+0xeac>
   21794:	dc400e15 	stw	r17,56(sp)
   21798:	dc000f15 	stw	r16,60(sp)
   2179c:	03000404 	movi	r12,16
   217a0:	4021883a 	mov	r16,r8
   217a4:	3823883a 	mov	r17,r7
   217a8:	00000406 	br	217bc <___vfprintf_internal_r+0xe4c>
   217ac:	843ffc04 	addi	r16,r16,-16
   217b0:	81000448 	cmpgei	r4,r16,17
   217b4:	b5800204 	addi	r22,r22,8
   217b8:	20001426 	beq	r4,zero,2180c <___vfprintf_internal_r+0xe9c>
   217bc:	10800044 	addi	r2,r2,1
   217c0:	18c00404 	addi	r3,r3,16
   217c4:	b4400015 	stw	r17,0(r22)
   217c8:	b3000115 	stw	r12,4(r22)
   217cc:	d8c01c15 	stw	r3,112(sp)
   217d0:	d8801b15 	stw	r2,108(sp)
   217d4:	11000208 	cmpgei	r4,r2,8
   217d8:	203ff426 	beq	r4,zero,217ac <___vfprintf_internal_r+0xe3c>
   217dc:	d9801a04 	addi	r6,sp,104
   217e0:	900b883a 	mov	r5,r18
   217e4:	9809883a 	mov	r4,r19
   217e8:	00275f40 	call	275f4 <__sprint_r>
   217ec:	103d6f1e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   217f0:	843ffc04 	addi	r16,r16,-16
   217f4:	81000448 	cmpgei	r4,r16,17
   217f8:	d8c01c17 	ldw	r3,112(sp)
   217fc:	d8801b17 	ldw	r2,108(sp)
   21800:	dd802704 	addi	r22,sp,156
   21804:	03000404 	movi	r12,16
   21808:	203fec1e 	bne	r4,zero,217bc <___vfprintf_internal_r+0xe4c>
   2180c:	8011883a 	mov	r8,r16
   21810:	880f883a 	mov	r7,r17
   21814:	dc000f17 	ldw	r16,60(sp)
   21818:	dc400e17 	ldw	r17,56(sp)
   2181c:	10800044 	addi	r2,r2,1
   21820:	1a07883a 	add	r3,r3,r8
   21824:	d8801b15 	stw	r2,108(sp)
   21828:	b1c00015 	stw	r7,0(r22)
   2182c:	b2000115 	stw	r8,4(r22)
   21830:	d8c01c15 	stw	r3,112(sp)
   21834:	10800208 	cmpgei	r2,r2,8
   21838:	10014a1e 	bne	r2,zero,21d64 <___vfprintf_internal_r+0x13f4>
   2183c:	b5800204 	addi	r22,r22,8
   21840:	003d3c06 	br	20d34 <___vfprintf_internal_r+0x3c4>
   21844:	10c00060 	cmpeqi	r3,r2,1
   21848:	1803bc1e 	bne	r3,zero,2273c <___vfprintf_internal_r+0x1dcc>
   2184c:	108000a0 	cmpeqi	r2,r2,2
   21850:	db000417 	ldw	r12,16(sp)
   21854:	103ea826 	beq	r2,zero,212f8 <___vfprintf_internal_r+0x988>
   21858:	d9000c17 	ldw	r4,48(sp)
   2185c:	dc402704 	addi	r17,sp,156
   21860:	a08003cc 	andi	r2,r20,15
   21864:	a806973a 	slli	r3,r21,28
   21868:	a028d13a 	srli	r20,r20,4
   2186c:	2085883a 	add	r2,r4,r2
   21870:	10800003 	ldbu	r2,0(r2)
   21874:	a82ad13a 	srli	r21,r21,4
   21878:	1d28b03a 	or	r20,r3,r20
   2187c:	88bfffc5 	stb	r2,-1(r17)
   21880:	a544b03a 	or	r2,r20,r21
   21884:	8c7fffc4 	addi	r17,r17,-1
   21888:	103ff51e 	bne	r2,zero,21860 <___vfprintf_internal_r+0xef0>
   2188c:	d8802704 	addi	r2,sp,156
   21890:	146bc83a 	sub	r21,r2,r17
   21894:	db000415 	stw	r12,16(sp)
   21898:	003e4c06 	br	211cc <___vfprintf_internal_r+0x85c>
   2189c:	d9801a04 	addi	r6,sp,104
   218a0:	900b883a 	mov	r5,r18
   218a4:	9809883a 	mov	r4,r19
   218a8:	00275f40 	call	275f4 <__sprint_r>
   218ac:	103d3926 	beq	r2,zero,20d94 <___vfprintf_internal_r+0x424>
   218b0:	003d3e06 	br	20dac <___vfprintf_internal_r+0x43c>
   218b4:	d8800817 	ldw	r2,32(sp)
   218b8:	da001b17 	ldw	r8,108(sp)
   218bc:	18c00044 	addi	r3,r3,1
   218c0:	10800088 	cmpgei	r2,r2,2
   218c4:	45400044 	addi	r21,r8,1
   218c8:	b7000204 	addi	fp,r22,8
   218cc:	1000f826 	beq	r2,zero,21cb0 <___vfprintf_internal_r+0x1340>
   218d0:	00800044 	movi	r2,1
   218d4:	b0800115 	stw	r2,4(r22)
   218d8:	b4400015 	stw	r17,0(r22)
   218dc:	d8c01c15 	stw	r3,112(sp)
   218e0:	dd401b15 	stw	r21,108(sp)
   218e4:	a8800210 	cmplti	r2,r21,8
   218e8:	1001cc26 	beq	r2,zero,2201c <___vfprintf_internal_r+0x16ac>
   218ec:	d8800b17 	ldw	r2,44(sp)
   218f0:	d9000d17 	ldw	r4,52(sp)
   218f4:	ad400044 	addi	r21,r21,1
   218f8:	1887883a 	add	r3,r3,r2
   218fc:	e0800115 	stw	r2,4(fp)
   21900:	e1000015 	stw	r4,0(fp)
   21904:	d8c01c15 	stw	r3,112(sp)
   21908:	dd401b15 	stw	r21,108(sp)
   2190c:	a8800208 	cmpgei	r2,r21,8
   21910:	1001cb1e 	bne	r2,zero,22040 <___vfprintf_internal_r+0x16d0>
   21914:	e7000204 	addi	fp,fp,8
   21918:	d9000917 	ldw	r4,36(sp)
   2191c:	d9400a17 	ldw	r5,40(sp)
   21920:	aa000044 	addi	r8,r21,1
   21924:	000d883a 	mov	r6,zero
   21928:	000f883a 	mov	r7,zero
   2192c:	d8c00e15 	stw	r3,56(sp)
   21930:	da000715 	stw	r8,28(sp)
   21934:	002c6cc0 	call	2c6cc <__eqdf2>
   21938:	d8c00817 	ldw	r3,32(sp)
   2193c:	da000717 	ldw	r8,28(sp)
   21940:	e5800204 	addi	r22,fp,8
   21944:	1affffc4 	addi	r11,r3,-1
   21948:	d8c00e17 	ldw	r3,56(sp)
   2194c:	1000e526 	beq	r2,zero,21ce4 <___vfprintf_internal_r+0x1374>
   21950:	8a400044 	addi	r9,r17,1
   21954:	1ac7883a 	add	r3,r3,r11
   21958:	da001b15 	stw	r8,108(sp)
   2195c:	e2400015 	stw	r9,0(fp)
   21960:	e2c00115 	stw	r11,4(fp)
   21964:	d8c01c15 	stw	r3,112(sp)
   21968:	42000208 	cmpgei	r8,r8,8
   2196c:	40013e1e 	bne	r8,zero,21e68 <___vfprintf_internal_r+0x14f8>
   21970:	e0800404 	addi	r2,fp,16
   21974:	aa000084 	addi	r8,r21,2
   21978:	b039883a 	mov	fp,r22
   2197c:	102d883a 	mov	r22,r2
   21980:	d9001017 	ldw	r4,64(sp)
   21984:	d8801644 	addi	r2,sp,89
   21988:	da001b15 	stw	r8,108(sp)
   2198c:	20c7883a 	add	r3,r4,r3
   21990:	e0800015 	stw	r2,0(fp)
   21994:	e1000115 	stw	r4,4(fp)
   21998:	d8c01c15 	stw	r3,112(sp)
   2199c:	42000210 	cmplti	r8,r8,8
   219a0:	403cf11e 	bne	r8,zero,20d68 <___vfprintf_internal_r+0x3f8>
   219a4:	d9801a04 	addi	r6,sp,104
   219a8:	900b883a 	mov	r5,r18
   219ac:	9809883a 	mov	r4,r19
   219b0:	00275f40 	call	275f4 <__sprint_r>
   219b4:	103cfd1e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   219b8:	d8c01c17 	ldw	r3,112(sp)
   219bc:	dd802704 	addi	r22,sp,156
   219c0:	003ce906 	br	20d68 <___vfprintf_internal_r+0x3f8>
   219c4:	db000417 	ldw	r12,16(sp)
   219c8:	003e4706 	br	212e8 <___vfprintf_internal_r+0x978>
   219cc:	030000f4 	movhi	r12,3
   219d0:	39000450 	cmplti	r4,r7,17
   219d4:	d8801b17 	ldw	r2,108(sp)
   219d8:	6301d904 	addi	r12,r12,1892
   219dc:	2000321e 	bne	r4,zero,21aa8 <___vfprintf_internal_r+0x1138>
   219e0:	dc401115 	stw	r17,68(sp)
   219e4:	b009883a 	mov	r4,r22
   219e8:	9023883a 	mov	r17,r18
   219ec:	a82d883a 	mov	r22,r21
   219f0:	ddc01215 	stw	r23,72(sp)
   219f4:	03c00404 	movi	r15,16
   219f8:	a02f883a 	mov	r23,r20
   219fc:	db800e15 	stw	r14,56(sp)
   21a00:	8029883a 	mov	r20,r16
   21a04:	db400f15 	stw	r13,60(sp)
   21a08:	402b883a 	mov	r21,r8
   21a0c:	3821883a 	mov	r16,r7
   21a10:	6025883a 	mov	r18,r12
   21a14:	00000406 	br	21a28 <___vfprintf_internal_r+0x10b8>
   21a18:	843ffc04 	addi	r16,r16,-16
   21a1c:	81800448 	cmpgei	r6,r16,17
   21a20:	21000204 	addi	r4,r4,8
   21a24:	30001426 	beq	r6,zero,21a78 <___vfprintf_internal_r+0x1108>
   21a28:	10800044 	addi	r2,r2,1
   21a2c:	18c00404 	addi	r3,r3,16
   21a30:	24800015 	stw	r18,0(r4)
   21a34:	23c00115 	stw	r15,4(r4)
   21a38:	d8c01c15 	stw	r3,112(sp)
   21a3c:	d8801b15 	stw	r2,108(sp)
   21a40:	11800208 	cmpgei	r6,r2,8
   21a44:	303ff426 	beq	r6,zero,21a18 <___vfprintf_internal_r+0x10a8>
   21a48:	d9801a04 	addi	r6,sp,104
   21a4c:	880b883a 	mov	r5,r17
   21a50:	9809883a 	mov	r4,r19
   21a54:	00275f40 	call	275f4 <__sprint_r>
   21a58:	1001b91e 	bne	r2,zero,22140 <___vfprintf_internal_r+0x17d0>
   21a5c:	843ffc04 	addi	r16,r16,-16
   21a60:	81800448 	cmpgei	r6,r16,17
   21a64:	d8c01c17 	ldw	r3,112(sp)
   21a68:	d8801b17 	ldw	r2,108(sp)
   21a6c:	d9002704 	addi	r4,sp,156
   21a70:	03c00404 	movi	r15,16
   21a74:	303fec1e 	bne	r6,zero,21a28 <___vfprintf_internal_r+0x10b8>
   21a78:	800f883a 	mov	r7,r16
   21a7c:	9019883a 	mov	r12,r18
   21a80:	a021883a 	mov	r16,r20
   21a84:	8825883a 	mov	r18,r17
   21a88:	b829883a 	mov	r20,r23
   21a8c:	db800e17 	ldw	r14,56(sp)
   21a90:	db400f17 	ldw	r13,60(sp)
   21a94:	ddc01217 	ldw	r23,72(sp)
   21a98:	dc401117 	ldw	r17,68(sp)
   21a9c:	a811883a 	mov	r8,r21
   21aa0:	b02b883a 	mov	r21,r22
   21aa4:	202d883a 	mov	r22,r4
   21aa8:	10800044 	addi	r2,r2,1
   21aac:	19c7883a 	add	r3,r3,r7
   21ab0:	d8801b15 	stw	r2,108(sp)
   21ab4:	b3000015 	stw	r12,0(r22)
   21ab8:	b1c00115 	stw	r7,4(r22)
   21abc:	d8c01c15 	stw	r3,112(sp)
   21ac0:	10800208 	cmpgei	r2,r2,8
   21ac4:	1001671e 	bne	r2,zero,22064 <___vfprintf_internal_r+0x16f4>
   21ac8:	b5800204 	addi	r22,r22,8
   21acc:	003c7a06 	br	20cb8 <___vfprintf_internal_r+0x348>
   21ad0:	d9801a04 	addi	r6,sp,104
   21ad4:	900b883a 	mov	r5,r18
   21ad8:	9809883a 	mov	r4,r19
   21adc:	da001115 	stw	r8,68(sp)
   21ae0:	db400f15 	stw	r13,60(sp)
   21ae4:	db800e15 	stw	r14,56(sp)
   21ae8:	00275f40 	call	275f4 <__sprint_r>
   21aec:	103caf1e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   21af0:	d8c01c17 	ldw	r3,112(sp)
   21af4:	da001117 	ldw	r8,68(sp)
   21af8:	db400f17 	ldw	r13,60(sp)
   21afc:	db800e17 	ldw	r14,56(sp)
   21b00:	dd802704 	addi	r22,sp,156
   21b04:	003c7a06 	br	20cf0 <___vfprintf_internal_r+0x380>
   21b08:	d9801a04 	addi	r6,sp,104
   21b0c:	900b883a 	mov	r5,r18
   21b10:	9809883a 	mov	r4,r19
   21b14:	da000f15 	stw	r8,60(sp)
   21b18:	db400e15 	stw	r13,56(sp)
   21b1c:	00275f40 	call	275f4 <__sprint_r>
   21b20:	103ca21e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   21b24:	d8c01c17 	ldw	r3,112(sp)
   21b28:	da000f17 	ldw	r8,60(sp)
   21b2c:	db400e17 	ldw	r13,56(sp)
   21b30:	dd802704 	addi	r22,sp,156
   21b34:	003c7b06 	br	20d24 <___vfprintf_internal_r+0x3b4>
   21b38:	d9401417 	ldw	r5,80(sp)
   21b3c:	0141570e 	bge	zero,r5,2209c <___vfprintf_internal_r+0x172c>
   21b40:	d8800717 	ldw	r2,28(sp)
   21b44:	d9000817 	ldw	r4,32(sp)
   21b48:	102b883a 	mov	r21,r2
   21b4c:	2080b916 	blt	r4,r2,21e34 <___vfprintf_internal_r+0x14c4>
   21b50:	05400a0e 	bge	zero,r21,21b7c <___vfprintf_internal_r+0x120c>
   21b54:	d8801b17 	ldw	r2,108(sp)
   21b58:	1d47883a 	add	r3,r3,r21
   21b5c:	b4400015 	stw	r17,0(r22)
   21b60:	10800044 	addi	r2,r2,1
   21b64:	d8801b15 	stw	r2,108(sp)
   21b68:	b5400115 	stw	r21,4(r22)
   21b6c:	d8c01c15 	stw	r3,112(sp)
   21b70:	10800208 	cmpgei	r2,r2,8
   21b74:	10032d1e 	bne	r2,zero,2282c <___vfprintf_internal_r+0x1ebc>
   21b78:	b5800204 	addi	r22,r22,8
   21b7c:	a800c516 	blt	r21,zero,21e94 <___vfprintf_internal_r+0x1524>
   21b80:	d8800717 	ldw	r2,28(sp)
   21b84:	156bc83a 	sub	r21,r2,r21
   21b88:	0540db16 	blt	zero,r21,21ef8 <___vfprintf_internal_r+0x1588>
   21b8c:	dd401417 	ldw	r21,80(sp)
   21b90:	d8800817 	ldw	r2,32(sp)
   21b94:	a880aa0e 	bge	r21,r2,21e40 <___vfprintf_internal_r+0x14d0>
   21b98:	d8800d17 	ldw	r2,52(sp)
   21b9c:	d9000b17 	ldw	r4,44(sp)
   21ba0:	b0800015 	stw	r2,0(r22)
   21ba4:	d8801b17 	ldw	r2,108(sp)
   21ba8:	1907883a 	add	r3,r3,r4
   21bac:	b1000115 	stw	r4,4(r22)
   21bb0:	10800044 	addi	r2,r2,1
   21bb4:	d8801b15 	stw	r2,108(sp)
   21bb8:	d8c01c15 	stw	r3,112(sp)
   21bbc:	10800208 	cmpgei	r2,r2,8
   21bc0:	1003111e 	bne	r2,zero,22808 <___vfprintf_internal_r+0x1e98>
   21bc4:	b5800204 	addi	r22,r22,8
   21bc8:	d9000817 	ldw	r4,32(sp)
   21bcc:	d9400717 	ldw	r5,28(sp)
   21bd0:	2545c83a 	sub	r2,r4,r21
   21bd4:	2149c83a 	sub	r4,r4,r5
   21bd8:	102b883a 	mov	r21,r2
   21bdc:	2080010e 	bge	r4,r2,21be4 <___vfprintf_internal_r+0x1274>
   21be0:	202b883a 	mov	r21,r4
   21be4:	05400c0e 	bge	zero,r21,21c18 <___vfprintf_internal_r+0x12a8>
   21be8:	d9000717 	ldw	r4,28(sp)
   21bec:	1d47883a 	add	r3,r3,r21
   21bf0:	b5400115 	stw	r21,4(r22)
   21bf4:	8913883a 	add	r9,r17,r4
   21bf8:	d9001b17 	ldw	r4,108(sp)
   21bfc:	b2400015 	stw	r9,0(r22)
   21c00:	d8c01c15 	stw	r3,112(sp)
   21c04:	21000044 	addi	r4,r4,1
   21c08:	d9001b15 	stw	r4,108(sp)
   21c0c:	21000208 	cmpgei	r4,r4,8
   21c10:	2003111e 	bne	r4,zero,22858 <___vfprintf_internal_r+0x1ee8>
   21c14:	b5800204 	addi	r22,r22,8
   21c18:	a800010e 	bge	r21,zero,21c20 <___vfprintf_internal_r+0x12b0>
   21c1c:	002b883a 	mov	r21,zero
   21c20:	156bc83a 	sub	r21,r2,r21
   21c24:	057c500e 	bge	zero,r21,20d68 <___vfprintf_internal_r+0x3f8>
   21c28:	01c000f4 	movhi	r7,3
   21c2c:	a9000450 	cmplti	r4,r21,17
   21c30:	d8801b17 	ldw	r2,108(sp)
   21c34:	39c1d504 	addi	r7,r7,1876
   21c38:	2001c51e 	bne	r4,zero,22350 <___vfprintf_internal_r+0x19e0>
   21c3c:	07000404 	movi	fp,16
   21c40:	3823883a 	mov	r17,r7
   21c44:	00000406 	br	21c58 <___vfprintf_internal_r+0x12e8>
   21c48:	b5800204 	addi	r22,r22,8
   21c4c:	ad7ffc04 	addi	r21,r21,-16
   21c50:	a9000448 	cmpgei	r4,r21,17
   21c54:	2001bd26 	beq	r4,zero,2234c <___vfprintf_internal_r+0x19dc>
   21c58:	10800044 	addi	r2,r2,1
   21c5c:	18c00404 	addi	r3,r3,16
   21c60:	b4400015 	stw	r17,0(r22)
   21c64:	b7000115 	stw	fp,4(r22)
   21c68:	d8c01c15 	stw	r3,112(sp)
   21c6c:	d8801b15 	stw	r2,108(sp)
   21c70:	11000208 	cmpgei	r4,r2,8
   21c74:	203ff426 	beq	r4,zero,21c48 <___vfprintf_internal_r+0x12d8>
   21c78:	d9801a04 	addi	r6,sp,104
   21c7c:	900b883a 	mov	r5,r18
   21c80:	9809883a 	mov	r4,r19
   21c84:	00275f40 	call	275f4 <__sprint_r>
   21c88:	103c481e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   21c8c:	d8c01c17 	ldw	r3,112(sp)
   21c90:	d8801b17 	ldw	r2,108(sp)
   21c94:	dd802704 	addi	r22,sp,156
   21c98:	003fec06 	br	21c4c <___vfprintf_internal_r+0x12dc>
   21c9c:	4002a71e 	bne	r8,zero,2273c <___vfprintf_internal_r+0x1dcc>
   21ca0:	0011883a 	mov	r8,zero
   21ca4:	002b883a 	mov	r21,zero
   21ca8:	dc402704 	addi	r17,sp,156
   21cac:	003d4706 	br	211cc <___vfprintf_internal_r+0x85c>
   21cb0:	d8800417 	ldw	r2,16(sp)
   21cb4:	1080004c 	andi	r2,r2,1
   21cb8:	103f051e 	bne	r2,zero,218d0 <___vfprintf_internal_r+0xf60>
   21cbc:	00800044 	movi	r2,1
   21cc0:	dd401b15 	stw	r21,108(sp)
   21cc4:	b4400015 	stw	r17,0(r22)
   21cc8:	b0800115 	stw	r2,4(r22)
   21ccc:	d8c01c15 	stw	r3,112(sp)
   21cd0:	ad400208 	cmpgei	r21,r21,8
   21cd4:	a800641e 	bne	r21,zero,21e68 <___vfprintf_internal_r+0x14f8>
   21cd8:	42000084 	addi	r8,r8,2
   21cdc:	b5800404 	addi	r22,r22,16
   21ce0:	003f2706 	br	21980 <___vfprintf_internal_r+0x1010>
   21ce4:	02ff260e 	bge	zero,r11,21980 <___vfprintf_internal_r+0x1010>
   21ce8:	58800450 	cmplti	r2,r11,17
   21cec:	01c000f4 	movhi	r7,3
   21cf0:	10034c1e 	bne	r2,zero,22a24 <___vfprintf_internal_r+0x20b4>
   21cf4:	39c1d504 	addi	r7,r7,1876
   21cf8:	dc000715 	stw	r16,28(sp)
   21cfc:	05800404 	movi	r22,16
   21d00:	5823883a 	mov	r17,r11
   21d04:	402b883a 	mov	r21,r8
   21d08:	3821883a 	mov	r16,r7
   21d0c:	00000506 	br	21d24 <___vfprintf_internal_r+0x13b4>
   21d10:	e7000204 	addi	fp,fp,8
   21d14:	8c7ffc04 	addi	r17,r17,-16
   21d18:	88800448 	cmpgei	r2,r17,17
   21d1c:	1001d626 	beq	r2,zero,22478 <___vfprintf_internal_r+0x1b08>
   21d20:	ad400044 	addi	r21,r21,1
   21d24:	18c00404 	addi	r3,r3,16
   21d28:	e4000015 	stw	r16,0(fp)
   21d2c:	e5800115 	stw	r22,4(fp)
   21d30:	d8c01c15 	stw	r3,112(sp)
   21d34:	dd401b15 	stw	r21,108(sp)
   21d38:	a8800208 	cmpgei	r2,r21,8
   21d3c:	103ff426 	beq	r2,zero,21d10 <___vfprintf_internal_r+0x13a0>
   21d40:	d9801a04 	addi	r6,sp,104
   21d44:	900b883a 	mov	r5,r18
   21d48:	9809883a 	mov	r4,r19
   21d4c:	00275f40 	call	275f4 <__sprint_r>
   21d50:	103c161e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   21d54:	dd401b17 	ldw	r21,108(sp)
   21d58:	d8c01c17 	ldw	r3,112(sp)
   21d5c:	df002704 	addi	fp,sp,156
   21d60:	003fec06 	br	21d14 <___vfprintf_internal_r+0x13a4>
   21d64:	d9801a04 	addi	r6,sp,104
   21d68:	900b883a 	mov	r5,r18
   21d6c:	9809883a 	mov	r4,r19
   21d70:	00275f40 	call	275f4 <__sprint_r>
   21d74:	103c0d1e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   21d78:	d8c01c17 	ldw	r3,112(sp)
   21d7c:	dd802704 	addi	r22,sp,156
   21d80:	003bec06 	br	20d34 <___vfprintf_internal_r+0x3c4>
   21d84:	d8800417 	ldw	r2,16(sp)
   21d88:	1080004c 	andi	r2,r2,1
   21d8c:	103bf626 	beq	r2,zero,20d68 <___vfprintf_internal_r+0x3f8>
   21d90:	003e1506 	br	215e8 <___vfprintf_internal_r+0xc78>
   21d94:	dc402704 	addi	r17,sp,156
   21d98:	003d0c06 	br	211cc <___vfprintf_internal_r+0x85c>
   21d9c:	00800c04 	movi	r2,48
   21da0:	d8801385 	stb	r2,78(sp)
   21da4:	df0013c5 	stb	fp,79(sp)
   21da8:	63000094 	ori	r12,r12,2
   21dac:	00800084 	movi	r2,2
   21db0:	003c3b06 	br	20ea0 <___vfprintf_internal_r+0x530>
   21db4:	25000017 	ldw	r20,0(r4)
   21db8:	002b883a 	mov	r21,zero
   21dbc:	d8c00615 	stw	r3,24(sp)
   21dc0:	00800044 	movi	r2,1
   21dc4:	003c3606 	br	20ea0 <___vfprintf_internal_r+0x530>
   21dc8:	d9000517 	ldw	r4,20(sp)
   21dcc:	2005d7fa 	srai	r2,r4,31
   21dd0:	19000015 	stw	r4,0(r3)
   21dd4:	18800115 	stw	r2,4(r3)
   21dd8:	003b1906 	br	20a40 <___vfprintf_internal_r+0xd0>
   21ddc:	25000017 	ldw	r20,0(r4)
   21de0:	002b883a 	mov	r21,zero
   21de4:	d8c00615 	stw	r3,24(sp)
   21de8:	003d1b06 	br	21258 <___vfprintf_internal_r+0x8e8>
   21dec:	25000017 	ldw	r20,0(r4)
   21df0:	002b883a 	mov	r21,zero
   21df4:	d8c00615 	stw	r3,24(sp)
   21df8:	0005883a 	mov	r2,zero
   21dfc:	003c2806 	br	20ea0 <___vfprintf_internal_r+0x530>
   21e00:	18800017 	ldw	r2,0(r3)
   21e04:	d8800915 	stw	r2,36(sp)
   21e08:	18800117 	ldw	r2,4(r3)
   21e0c:	d8800a15 	stw	r2,40(sp)
   21e10:	003c5906 	br	20f78 <___vfprintf_internal_r+0x608>
   21e14:	25000017 	ldw	r20,0(r4)
   21e18:	d8c00615 	stw	r3,24(sp)
   21e1c:	a02bd7fa 	srai	r21,r20,31
   21e20:	a805883a 	mov	r2,r21
   21e24:	003cd706 	br	21184 <___vfprintf_internal_r+0x814>
   21e28:	0421c83a 	sub	r16,zero,r16
   21e2c:	d8800615 	stw	r2,24(sp)
   21e30:	003d6306 	br	213c0 <___vfprintf_internal_r+0xa50>
   21e34:	202b883a 	mov	r21,r4
   21e38:	057f4616 	blt	zero,r21,21b54 <___vfprintf_internal_r+0x11e4>
   21e3c:	003f4f06 	br	21b7c <___vfprintf_internal_r+0x120c>
   21e40:	d8800417 	ldw	r2,16(sp)
   21e44:	1080004c 	andi	r2,r2,1
   21e48:	103f531e 	bne	r2,zero,21b98 <___vfprintf_internal_r+0x1228>
   21e4c:	d9000817 	ldw	r4,32(sp)
   21e50:	d9400717 	ldw	r5,28(sp)
   21e54:	2545c83a 	sub	r2,r4,r21
   21e58:	216bc83a 	sub	r21,r4,r5
   21e5c:	157f6e0e 	bge	r2,r21,21c18 <___vfprintf_internal_r+0x12a8>
   21e60:	102b883a 	mov	r21,r2
   21e64:	003f6c06 	br	21c18 <___vfprintf_internal_r+0x12a8>
   21e68:	d9801a04 	addi	r6,sp,104
   21e6c:	900b883a 	mov	r5,r18
   21e70:	9809883a 	mov	r4,r19
   21e74:	00275f40 	call	275f4 <__sprint_r>
   21e78:	103bcc1e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   21e7c:	da001b17 	ldw	r8,108(sp)
   21e80:	d8c01c17 	ldw	r3,112(sp)
   21e84:	dd802904 	addi	r22,sp,164
   21e88:	42000044 	addi	r8,r8,1
   21e8c:	df002704 	addi	fp,sp,156
   21e90:	003ebb06 	br	21980 <___vfprintf_internal_r+0x1010>
   21e94:	002b883a 	mov	r21,zero
   21e98:	003f3906 	br	21b80 <___vfprintf_internal_r+0x1210>
   21e9c:	bf000043 	ldbu	fp,1(r23)
   21ea0:	63000814 	ori	r12,r12,32
   21ea4:	bdc00044 	addi	r23,r23,1
   21ea8:	e2c03fcc 	andi	r11,fp,255
   21eac:	5ac0201c 	xori	r11,r11,128
   21eb0:	5affe004 	addi	r11,r11,-128
   21eb4:	003afa06 	br	20aa0 <___vfprintf_internal_r+0x130>
   21eb8:	d9801a04 	addi	r6,sp,104
   21ebc:	900b883a 	mov	r5,r18
   21ec0:	9809883a 	mov	r4,r19
   21ec4:	00275f40 	call	275f4 <__sprint_r>
   21ec8:	103bb81e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   21ecc:	d8c01c17 	ldw	r3,112(sp)
   21ed0:	dd802704 	addi	r22,sp,156
   21ed4:	003dd006 	br	21618 <___vfprintf_internal_r+0xca8>
   21ed8:	408001f0 	cmpltui	r2,r8,7
   21edc:	402b883a 	mov	r21,r8
   21ee0:	1001e726 	beq	r2,zero,22680 <___vfprintf_internal_r+0x1d10>
   21ee4:	044000f4 	movhi	r17,3
   21ee8:	a829883a 	mov	r20,r21
   21eec:	d8c00615 	stw	r3,24(sp)
   21ef0:	8c41d204 	addi	r17,r17,1864
   21ef4:	003b6306 	br	20c84 <___vfprintf_internal_r+0x314>
   21ef8:	01c000f4 	movhi	r7,3
   21efc:	a9000450 	cmplti	r4,r21,17
   21f00:	d8801b17 	ldw	r2,108(sp)
   21f04:	39c1d504 	addi	r7,r7,1876
   21f08:	2001c21e 	bne	r4,zero,22614 <___vfprintf_internal_r+0x1ca4>
   21f0c:	dc000e15 	stw	r16,56(sp)
   21f10:	07000404 	movi	fp,16
   21f14:	3821883a 	mov	r16,r7
   21f18:	00000406 	br	21f2c <___vfprintf_internal_r+0x15bc>
   21f1c:	b5800204 	addi	r22,r22,8
   21f20:	ad7ffc04 	addi	r21,r21,-16
   21f24:	a9000448 	cmpgei	r4,r21,17
   21f28:	2001b826 	beq	r4,zero,2260c <___vfprintf_internal_r+0x1c9c>
   21f2c:	10800044 	addi	r2,r2,1
   21f30:	18c00404 	addi	r3,r3,16
   21f34:	b4000015 	stw	r16,0(r22)
   21f38:	b7000115 	stw	fp,4(r22)
   21f3c:	d8c01c15 	stw	r3,112(sp)
   21f40:	d8801b15 	stw	r2,108(sp)
   21f44:	11000208 	cmpgei	r4,r2,8
   21f48:	203ff426 	beq	r4,zero,21f1c <___vfprintf_internal_r+0x15ac>
   21f4c:	d9801a04 	addi	r6,sp,104
   21f50:	900b883a 	mov	r5,r18
   21f54:	9809883a 	mov	r4,r19
   21f58:	00275f40 	call	275f4 <__sprint_r>
   21f5c:	103b931e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   21f60:	d8c01c17 	ldw	r3,112(sp)
   21f64:	d8801b17 	ldw	r2,108(sp)
   21f68:	dd802704 	addi	r22,sp,156
   21f6c:	003fec06 	br	21f20 <___vfprintf_internal_r+0x15b0>
   21f70:	dc402704 	addi	r17,sp,156
   21f74:	a805883a 	mov	r2,r21
   21f78:	dc000715 	stw	r16,28(sp)
   21f7c:	902b883a 	mov	r21,r18
   21f80:	8821883a 	mov	r16,r17
   21f84:	db000415 	stw	r12,16(sp)
   21f88:	a023883a 	mov	r17,r20
   21f8c:	da000e15 	stw	r8,56(sp)
   21f90:	9829883a 	mov	r20,r19
   21f94:	1025883a 	mov	r18,r2
   21f98:	6827883a 	mov	r19,r13
   21f9c:	8809883a 	mov	r4,r17
   21fa0:	900b883a 	mov	r5,r18
   21fa4:	01800284 	movi	r6,10
   21fa8:	000f883a 	mov	r7,zero
   21fac:	002ad0c0 	call	2ad0c <__umoddi3>
   21fb0:	10800c04 	addi	r2,r2,48
   21fb4:	8809883a 	mov	r4,r17
   21fb8:	900b883a 	mov	r5,r18
   21fbc:	01800284 	movi	r6,10
   21fc0:	000f883a 	mov	r7,zero
   21fc4:	80bfffc5 	stb	r2,-1(r16)
   21fc8:	002a6ec0 	call	2a6ec <__udivdi3>
   21fcc:	900d883a 	mov	r6,r18
   21fd0:	880f883a 	mov	r7,r17
   21fd4:	843fffc4 	addi	r16,r16,-1
   21fd8:	1023883a 	mov	r17,r2
   21fdc:	1825883a 	mov	r18,r3
   21fe0:	303fee1e 	bne	r6,zero,21f9c <___vfprintf_internal_r+0x162c>
   21fe4:	39c002a8 	cmpgeui	r7,r7,10
   21fe8:	383fec1e 	bne	r7,zero,21f9c <___vfprintf_internal_r+0x162c>
   21fec:	8023883a 	mov	r17,r16
   21ff0:	d8802704 	addi	r2,sp,156
   21ff4:	981b883a 	mov	r13,r19
   21ff8:	a825883a 	mov	r18,r21
   21ffc:	dc000717 	ldw	r16,28(sp)
   22000:	da000e17 	ldw	r8,56(sp)
   22004:	a027883a 	mov	r19,r20
   22008:	146bc83a 	sub	r21,r2,r17
   2200c:	003c6f06 	br	211cc <___vfprintf_internal_r+0x85c>
   22010:	d8800517 	ldw	r2,20(sp)
   22014:	18800015 	stw	r2,0(r3)
   22018:	003a8906 	br	20a40 <___vfprintf_internal_r+0xd0>
   2201c:	d9801a04 	addi	r6,sp,104
   22020:	900b883a 	mov	r5,r18
   22024:	9809883a 	mov	r4,r19
   22028:	00275f40 	call	275f4 <__sprint_r>
   2202c:	103b5f1e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   22030:	d8c01c17 	ldw	r3,112(sp)
   22034:	dd401b17 	ldw	r21,108(sp)
   22038:	df002704 	addi	fp,sp,156
   2203c:	003e2b06 	br	218ec <___vfprintf_internal_r+0xf7c>
   22040:	d9801a04 	addi	r6,sp,104
   22044:	900b883a 	mov	r5,r18
   22048:	9809883a 	mov	r4,r19
   2204c:	00275f40 	call	275f4 <__sprint_r>
   22050:	103b561e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   22054:	d8c01c17 	ldw	r3,112(sp)
   22058:	dd401b17 	ldw	r21,108(sp)
   2205c:	df002704 	addi	fp,sp,156
   22060:	003e2d06 	br	21918 <___vfprintf_internal_r+0xfa8>
   22064:	d9801a04 	addi	r6,sp,104
   22068:	900b883a 	mov	r5,r18
   2206c:	9809883a 	mov	r4,r19
   22070:	da001115 	stw	r8,68(sp)
   22074:	db400f15 	stw	r13,60(sp)
   22078:	db800e15 	stw	r14,56(sp)
   2207c:	00275f40 	call	275f4 <__sprint_r>
   22080:	103b4a1e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   22084:	d8c01c17 	ldw	r3,112(sp)
   22088:	da001117 	ldw	r8,68(sp)
   2208c:	db400f17 	ldw	r13,60(sp)
   22090:	db800e17 	ldw	r14,56(sp)
   22094:	dd802704 	addi	r22,sp,156
   22098:	003b0706 	br	20cb8 <___vfprintf_internal_r+0x348>
   2209c:	d8801b17 	ldw	r2,108(sp)
   220a0:	010000f4 	movhi	r4,3
   220a4:	2101d404 	addi	r4,r4,1872
   220a8:	10800044 	addi	r2,r2,1
   220ac:	18c00044 	addi	r3,r3,1
   220b0:	b1000015 	stw	r4,0(r22)
   220b4:	01000044 	movi	r4,1
   220b8:	d8801b15 	stw	r2,108(sp)
   220bc:	b1000115 	stw	r4,4(r22)
   220c0:	d8c01c15 	stw	r3,112(sp)
   220c4:	10800208 	cmpgei	r2,r2,8
   220c8:	1001641e 	bne	r2,zero,2265c <___vfprintf_internal_r+0x1cec>
   220cc:	b5800204 	addi	r22,r22,8
   220d0:	2800bd1e 	bne	r5,zero,223c8 <___vfprintf_internal_r+0x1a58>
   220d4:	d8800417 	ldw	r2,16(sp)
   220d8:	d9000817 	ldw	r4,32(sp)
   220dc:	1080004c 	andi	r2,r2,1
   220e0:	1104b03a 	or	r2,r2,r4
   220e4:	103b2026 	beq	r2,zero,20d68 <___vfprintf_internal_r+0x3f8>
   220e8:	d8800d17 	ldw	r2,52(sp)
   220ec:	d9000b17 	ldw	r4,44(sp)
   220f0:	b0800015 	stw	r2,0(r22)
   220f4:	d8801b17 	ldw	r2,108(sp)
   220f8:	20c7883a 	add	r3,r4,r3
   220fc:	b1000115 	stw	r4,4(r22)
   22100:	10800044 	addi	r2,r2,1
   22104:	d8c01c15 	stw	r3,112(sp)
   22108:	d8801b15 	stw	r2,108(sp)
   2210c:	11000208 	cmpgei	r4,r2,8
   22110:	2001771e 	bne	r4,zero,226f0 <___vfprintf_internal_r+0x1d80>
   22114:	b5800204 	addi	r22,r22,8
   22118:	d9000817 	ldw	r4,32(sp)
   2211c:	10800044 	addi	r2,r2,1
   22120:	d8801b15 	stw	r2,108(sp)
   22124:	20c7883a 	add	r3,r4,r3
   22128:	b4400015 	stw	r17,0(r22)
   2212c:	b1000115 	stw	r4,4(r22)
   22130:	d8c01c15 	stw	r3,112(sp)
   22134:	10800208 	cmpgei	r2,r2,8
   22138:	103b0a26 	beq	r2,zero,20d64 <___vfprintf_internal_r+0x3f4>
   2213c:	003e1906 	br	219a4 <___vfprintf_internal_r+0x1034>
   22140:	8825883a 	mov	r18,r17
   22144:	003b1906 	br	20dac <___vfprintf_internal_r+0x43c>
   22148:	d9000917 	ldw	r4,36(sp)
   2214c:	d9400a17 	ldw	r5,40(sp)
   22150:	da000615 	stw	r8,24(sp)
   22154:	200d883a 	mov	r6,r4
   22158:	280f883a 	mov	r7,r5
   2215c:	db000415 	stw	r12,16(sp)
   22160:	002d97c0 	call	2d97c <__unorddf2>
   22164:	db000417 	ldw	r12,16(sp)
   22168:	da000617 	ldw	r8,24(sp)
   2216c:	1002061e 	bne	r2,zero,22988 <___vfprintf_internal_r+0x2018>
   22170:	057ff7c4 	movi	r21,-33
   22174:	40bfffe0 	cmpeqi	r2,r8,-1
   22178:	e56a703a 	and	r21,fp,r21
   2217c:	1001b41e 	bne	r2,zero,22850 <___vfprintf_internal_r+0x1ee0>
   22180:	a88011d8 	cmpnei	r2,r21,71
   22184:	10015726 	beq	r2,zero,226e4 <___vfprintf_internal_r+0x1d74>
   22188:	60804014 	ori	r2,r12,256
   2218c:	d8800415 	stw	r2,16(sp)
   22190:	d8800a17 	ldw	r2,40(sp)
   22194:	10012d16 	blt	r2,zero,2264c <___vfprintf_internal_r+0x1cdc>
   22198:	dd000a17 	ldw	r20,40(sp)
   2219c:	d8000605 	stb	zero,24(sp)
   221a0:	e08019a0 	cmpeqi	r2,fp,102
   221a4:	d8800f15 	stw	r2,60(sp)
   221a8:	1000d21e 	bne	r2,zero,224f4 <___vfprintf_internal_r+0x1b84>
   221ac:	e08011a0 	cmpeqi	r2,fp,70
   221b0:	1000d01e 	bne	r2,zero,224f4 <___vfprintf_internal_r+0x1b84>
   221b4:	a8801158 	cmpnei	r2,r21,69
   221b8:	10016226 	beq	r2,zero,22744 <___vfprintf_internal_r+0x1dd4>
   221bc:	d8801804 	addi	r2,sp,96
   221c0:	d8800315 	stw	r2,12(sp)
   221c4:	d9400917 	ldw	r5,36(sp)
   221c8:	d8801504 	addi	r2,sp,84
   221cc:	d8800215 	stw	r2,8(sp)
   221d0:	d8801404 	addi	r2,sp,80
   221d4:	da000015 	stw	r8,0(sp)
   221d8:	9809883a 	mov	r4,r19
   221dc:	d8800115 	stw	r2,4(sp)
   221e0:	01c00084 	movi	r7,2
   221e4:	a00d883a 	mov	r6,r20
   221e8:	db000815 	stw	r12,32(sp)
   221ec:	da000715 	stw	r8,28(sp)
   221f0:	0022ed40 	call	22ed4 <_dtoa_r>
   221f4:	da000717 	ldw	r8,28(sp)
   221f8:	e10019d8 	cmpnei	r4,fp,103
   221fc:	db000817 	ldw	r12,32(sp)
   22200:	1023883a 	mov	r17,r2
   22204:	4007883a 	mov	r3,r8
   22208:	2001621e 	bne	r4,zero,22794 <___vfprintf_internal_r+0x1e24>
   2220c:	6080004c 	andi	r2,r12,1
   22210:	1001621e 	bne	r2,zero,2279c <___vfprintf_internal_r+0x1e2c>
   22214:	d8801417 	ldw	r2,80(sp)
   22218:	ad4011e0 	cmpeqi	r21,r21,71
   2221c:	d8800715 	stw	r2,28(sp)
   22220:	d8801817 	ldw	r2,96(sp)
   22224:	1445c83a 	sub	r2,r2,r17
   22228:	d8800815 	stw	r2,32(sp)
   2222c:	a8000526 	beq	r21,zero,22244 <___vfprintf_internal_r+0x18d4>
   22230:	d8c00717 	ldw	r3,28(sp)
   22234:	18bfff50 	cmplti	r2,r3,-3
   22238:	1000011e 	bne	r2,zero,22240 <___vfprintf_internal_r+0x18d0>
   2223c:	40c1670e 	bge	r8,r3,227dc <___vfprintf_internal_r+0x1e6c>
   22240:	e73fff84 	addi	fp,fp,-2
   22244:	d8800717 	ldw	r2,28(sp)
   22248:	df001645 	stb	fp,89(sp)
   2224c:	157fffc4 	addi	r21,r2,-1
   22250:	dd401415 	stw	r21,80(sp)
   22254:	a801d416 	blt	r21,zero,229a8 <___vfprintf_internal_r+0x2038>
   22258:	00800ac4 	movi	r2,43
   2225c:	d8801685 	stb	r2,90(sp)
   22260:	a8800290 	cmplti	r2,r21,10
   22264:	1001c11e 	bne	r2,zero,2296c <___vfprintf_internal_r+0x1ffc>
   22268:	d98019c4 	addi	r6,sp,103
   2226c:	9029883a 	mov	r20,r18
   22270:	dc400715 	stw	r17,28(sp)
   22274:	8025883a 	mov	r18,r16
   22278:	db000f15 	stw	r12,60(sp)
   2227c:	3021883a 	mov	r16,r6
   22280:	a809883a 	mov	r4,r21
   22284:	01400284 	movi	r5,10
   22288:	002b3500 	call	2b350 <__modsi3>
   2228c:	10800c04 	addi	r2,r2,48
   22290:	a809883a 	mov	r4,r21
   22294:	80bfffc5 	stb	r2,-1(r16)
   22298:	01400284 	movi	r5,10
   2229c:	002b2d00 	call	2b2d0 <__divsi3>
   222a0:	a9001908 	cmpgei	r4,r21,100
   222a4:	8023883a 	mov	r17,r16
   222a8:	102b883a 	mov	r21,r2
   222ac:	843fffc4 	addi	r16,r16,-1
   222b0:	203ff31e 	bne	r4,zero,22280 <___vfprintf_internal_r+0x1910>
   222b4:	800d883a 	mov	r6,r16
   222b8:	11000c04 	addi	r4,r2,48
   222bc:	9021883a 	mov	r16,r18
   222c0:	a025883a 	mov	r18,r20
   222c4:	8829883a 	mov	r20,r17
   222c8:	a0bfff84 	addi	r2,r20,-2
   222cc:	313fffc5 	stb	r4,-1(r6)
   222d0:	d8c019c4 	addi	r3,sp,103
   222d4:	db000f17 	ldw	r12,60(sp)
   222d8:	dc400717 	ldw	r17,28(sp)
   222dc:	10c1d62e 	bgeu	r2,r3,22a38 <___vfprintf_internal_r+0x20c8>
   222e0:	d8c016c4 	addi	r3,sp,91
   222e4:	00000106 	br	222ec <___vfprintf_internal_r+0x197c>
   222e8:	11000003 	ldbu	r4,0(r2)
   222ec:	19000005 	stb	r4,0(r3)
   222f0:	10800044 	addi	r2,r2,1
   222f4:	d90019c4 	addi	r4,sp,103
   222f8:	18c00044 	addi	r3,r3,1
   222fc:	113ffa1e 	bne	r2,r4,222e8 <___vfprintf_internal_r+0x1978>
   22300:	d8801a44 	addi	r2,sp,105
   22304:	d8c016c4 	addi	r3,sp,91
   22308:	1505c83a 	sub	r2,r2,r20
   2230c:	1885883a 	add	r2,r3,r2
   22310:	d8c01644 	addi	r3,sp,89
   22314:	10c5c83a 	sub	r2,r2,r3
   22318:	d8801015 	stw	r2,64(sp)
   2231c:	d8c00817 	ldw	r3,32(sp)
   22320:	d9001017 	ldw	r4,64(sp)
   22324:	18800088 	cmpgei	r2,r3,2
   22328:	192b883a 	add	r21,r3,r4
   2232c:	1001aa26 	beq	r2,zero,229d8 <___vfprintf_internal_r+0x2068>
   22330:	d8800b17 	ldw	r2,44(sp)
   22334:	a8ab883a 	add	r21,r21,r2
   22338:	a829883a 	mov	r20,r21
   2233c:	a800010e 	bge	r21,zero,22344 <___vfprintf_internal_r+0x19d4>
   22340:	0029883a 	mov	r20,zero
   22344:	d8000715 	stw	zero,28(sp)
   22348:	00009d06 	br	225c0 <___vfprintf_internal_r+0x1c50>
   2234c:	880f883a 	mov	r7,r17
   22350:	10800044 	addi	r2,r2,1
   22354:	1d47883a 	add	r3,r3,r21
   22358:	b1c00015 	stw	r7,0(r22)
   2235c:	003a7c06 	br	20d50 <___vfprintf_internal_r+0x3e0>
   22360:	d9801a04 	addi	r6,sp,104
   22364:	900b883a 	mov	r5,r18
   22368:	9809883a 	mov	r4,r19
   2236c:	00275f40 	call	275f4 <__sprint_r>
   22370:	103a8e1e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   22374:	d8c01c17 	ldw	r3,112(sp)
   22378:	dd802704 	addi	r22,sp,156
   2237c:	003c9706 	br	215dc <___vfprintf_internal_r+0xc6c>
   22380:	d9801a04 	addi	r6,sp,104
   22384:	900b883a 	mov	r5,r18
   22388:	9809883a 	mov	r4,r19
   2238c:	da000e15 	stw	r8,56(sp)
   22390:	00275f40 	call	275f4 <__sprint_r>
   22394:	103a851e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   22398:	d8c01c17 	ldw	r3,112(sp)
   2239c:	da000e17 	ldw	r8,56(sp)
   223a0:	dd802704 	addi	r22,sp,156
   223a4:	003a6106 	br	20d2c <___vfprintf_internal_r+0x3bc>
   223a8:	8809883a 	mov	r4,r17
   223ac:	db000415 	stw	r12,16(sp)
   223b0:	d8c00615 	stw	r3,24(sp)
   223b4:	00274680 	call	27468 <strlen>
   223b8:	db000417 	ldw	r12,16(sp)
   223bc:	102b883a 	mov	r21,r2
   223c0:	1029883a 	mov	r20,r2
   223c4:	003a2f06 	br	20c84 <___vfprintf_internal_r+0x314>
   223c8:	d8800d17 	ldw	r2,52(sp)
   223cc:	d9000b17 	ldw	r4,44(sp)
   223d0:	b0800015 	stw	r2,0(r22)
   223d4:	d8801b17 	ldw	r2,108(sp)
   223d8:	20c7883a 	add	r3,r4,r3
   223dc:	b1000115 	stw	r4,4(r22)
   223e0:	10800044 	addi	r2,r2,1
   223e4:	d8c01c15 	stw	r3,112(sp)
   223e8:	d8801b15 	stw	r2,108(sp)
   223ec:	11000208 	cmpgei	r4,r2,8
   223f0:	2000bf1e 	bne	r4,zero,226f0 <___vfprintf_internal_r+0x1d80>
   223f4:	b5800204 	addi	r22,r22,8
   223f8:	283f470e 	bge	r5,zero,22118 <___vfprintf_internal_r+0x17a8>
   223fc:	01c000f4 	movhi	r7,3
   22400:	293ffc08 	cmpgei	r4,r5,-16
   22404:	39c1d504 	addi	r7,r7,1876
   22408:	0179c83a 	sub	fp,zero,r5
   2240c:	20013f1e 	bne	r4,zero,2290c <___vfprintf_internal_r+0x1f9c>
   22410:	dc000715 	stw	r16,28(sp)
   22414:	05400404 	movi	r21,16
   22418:	9021883a 	mov	r16,r18
   2241c:	3825883a 	mov	r18,r7
   22420:	00000406 	br	22434 <___vfprintf_internal_r+0x1ac4>
   22424:	b5800204 	addi	r22,r22,8
   22428:	e73ffc04 	addi	fp,fp,-16
   2242c:	e1800448 	cmpgei	r6,fp,17
   22430:	30013326 	beq	r6,zero,22900 <___vfprintf_internal_r+0x1f90>
   22434:	10800044 	addi	r2,r2,1
   22438:	18c00404 	addi	r3,r3,16
   2243c:	b4800015 	stw	r18,0(r22)
   22440:	b5400115 	stw	r21,4(r22)
   22444:	d8c01c15 	stw	r3,112(sp)
   22448:	d8801b15 	stw	r2,108(sp)
   2244c:	11800208 	cmpgei	r6,r2,8
   22450:	303ff426 	beq	r6,zero,22424 <___vfprintf_internal_r+0x1ab4>
   22454:	d9801a04 	addi	r6,sp,104
   22458:	800b883a 	mov	r5,r16
   2245c:	9809883a 	mov	r4,r19
   22460:	00275f40 	call	275f4 <__sprint_r>
   22464:	1001721e 	bne	r2,zero,22a30 <___vfprintf_internal_r+0x20c0>
   22468:	d8c01c17 	ldw	r3,112(sp)
   2246c:	d8801b17 	ldw	r2,108(sp)
   22470:	dd802704 	addi	r22,sp,156
   22474:	003fec06 	br	22428 <___vfprintf_internal_r+0x1ab8>
   22478:	800f883a 	mov	r7,r16
   2247c:	dc000717 	ldw	r16,28(sp)
   22480:	8817883a 	mov	r11,r17
   22484:	aa000044 	addi	r8,r21,1
   22488:	e0800204 	addi	r2,fp,8
   2248c:	1ac7883a 	add	r3,r3,r11
   22490:	e1c00015 	stw	r7,0(fp)
   22494:	e2c00115 	stw	r11,4(fp)
   22498:	d8c01c15 	stw	r3,112(sp)
   2249c:	da001b15 	stw	r8,108(sp)
   224a0:	41000208 	cmpgei	r4,r8,8
   224a4:	203e701e 	bne	r4,zero,21e68 <___vfprintf_internal_r+0x14f8>
   224a8:	42000044 	addi	r8,r8,1
   224ac:	15800204 	addi	r22,r2,8
   224b0:	1039883a 	mov	fp,r2
   224b4:	003d3206 	br	21980 <___vfprintf_internal_r+0x1010>
   224b8:	d8800617 	ldw	r2,24(sp)
   224bc:	d8c00615 	stw	r3,24(sp)
   224c0:	15000017 	ldw	r20,0(r2)
   224c4:	a02bd7fa 	srai	r21,r20,31
   224c8:	a805883a 	mov	r2,r21
   224cc:	003b2d06 	br	21184 <___vfprintf_internal_r+0x814>
   224d0:	d8800617 	ldw	r2,24(sp)
   224d4:	002b883a 	mov	r21,zero
   224d8:	d8c00615 	stw	r3,24(sp)
   224dc:	15000017 	ldw	r20,0(r2)
   224e0:	0005883a 	mov	r2,zero
   224e4:	003a6e06 	br	20ea0 <___vfprintf_internal_r+0x530>
   224e8:	044000f4 	movhi	r17,3
   224ec:	8c41c404 	addi	r17,r17,1808
   224f0:	003ac606 	br	2100c <___vfprintf_internal_r+0x69c>
   224f4:	d8801804 	addi	r2,sp,96
   224f8:	d8800315 	stw	r2,12(sp)
   224fc:	d9400917 	ldw	r5,36(sp)
   22500:	d8801504 	addi	r2,sp,84
   22504:	d8800215 	stw	r2,8(sp)
   22508:	d8801404 	addi	r2,sp,80
   2250c:	da000015 	stw	r8,0(sp)
   22510:	d8800115 	stw	r2,4(sp)
   22514:	01c000c4 	movi	r7,3
   22518:	a00d883a 	mov	r6,r20
   2251c:	9809883a 	mov	r4,r19
   22520:	db000815 	stw	r12,32(sp)
   22524:	da000715 	stw	r8,28(sp)
   22528:	0022ed40 	call	22ed4 <_dtoa_r>
   2252c:	da000717 	ldw	r8,28(sp)
   22530:	1023883a 	mov	r17,r2
   22534:	db000817 	ldw	r12,32(sp)
   22538:	1207883a 	add	r3,r2,r8
   2253c:	88800007 	ldb	r2,0(r17)
   22540:	10800c20 	cmpeqi	r2,r2,48
   22544:	1000571e 	bne	r2,zero,226a4 <___vfprintf_internal_r+0x1d34>
   22548:	d8801417 	ldw	r2,80(sp)
   2254c:	1893883a 	add	r9,r3,r2
   22550:	d9000917 	ldw	r4,36(sp)
   22554:	000d883a 	mov	r6,zero
   22558:	000f883a 	mov	r7,zero
   2255c:	a00b883a 	mov	r5,r20
   22560:	da401115 	stw	r9,68(sp)
   22564:	da000815 	stw	r8,32(sp)
   22568:	db000715 	stw	r12,28(sp)
   2256c:	002c6cc0 	call	2c6cc <__eqdf2>
   22570:	db000717 	ldw	r12,28(sp)
   22574:	da000817 	ldw	r8,32(sp)
   22578:	da401117 	ldw	r9,68(sp)
   2257c:	1000891e 	bne	r2,zero,227a4 <___vfprintf_internal_r+0x1e34>
   22580:	4805883a 	mov	r2,r9
   22584:	d8c01417 	ldw	r3,80(sp)
   22588:	1445c83a 	sub	r2,r2,r17
   2258c:	ad4011d8 	cmpnei	r21,r21,71
   22590:	d8c00715 	stw	r3,28(sp)
   22594:	d8800815 	stw	r2,32(sp)
   22598:	a83f2526 	beq	r21,zero,22230 <___vfprintf_internal_r+0x18c0>
   2259c:	d8800f17 	ldw	r2,60(sp)
   225a0:	103f2826 	beq	r2,zero,22244 <___vfprintf_internal_r+0x18d4>
   225a4:	d8c00717 	ldw	r3,28(sp)
   225a8:	6080004c 	andi	r2,r12,1
   225ac:	1204b03a 	or	r2,r2,r8
   225b0:	00c1140e 	bge	zero,r3,22a04 <___vfprintf_internal_r+0x2094>
   225b4:	1001011e 	bne	r2,zero,229bc <___vfprintf_internal_r+0x204c>
   225b8:	dd400717 	ldw	r21,28(sp)
   225bc:	a829883a 	mov	r20,r21
   225c0:	d8800607 	ldb	r2,24(sp)
   225c4:	10008026 	beq	r2,zero,227c8 <___vfprintf_internal_r+0x1e58>
   225c8:	00800b44 	movi	r2,45
   225cc:	d8801345 	stb	r2,77(sp)
   225d0:	d8800e17 	ldw	r2,56(sp)
   225d4:	0011883a 	mov	r8,zero
   225d8:	d8800615 	stw	r2,24(sp)
   225dc:	003b0306 	br	211ec <___vfprintf_internal_r+0x87c>
   225e0:	d8800617 	ldw	r2,24(sp)
   225e4:	002b883a 	mov	r21,zero
   225e8:	d8c00615 	stw	r3,24(sp)
   225ec:	15000017 	ldw	r20,0(r2)
   225f0:	00800044 	movi	r2,1
   225f4:	003a2a06 	br	20ea0 <___vfprintf_internal_r+0x530>
   225f8:	d8800617 	ldw	r2,24(sp)
   225fc:	002b883a 	mov	r21,zero
   22600:	d8c00615 	stw	r3,24(sp)
   22604:	15000017 	ldw	r20,0(r2)
   22608:	003b1306 	br	21258 <___vfprintf_internal_r+0x8e8>
   2260c:	800f883a 	mov	r7,r16
   22610:	dc000e17 	ldw	r16,56(sp)
   22614:	10800044 	addi	r2,r2,1
   22618:	1d47883a 	add	r3,r3,r21
   2261c:	d8801b15 	stw	r2,108(sp)
   22620:	b1c00015 	stw	r7,0(r22)
   22624:	b5400115 	stw	r21,4(r22)
   22628:	d8c01c15 	stw	r3,112(sp)
   2262c:	10800208 	cmpgei	r2,r2,8
   22630:	10003a1e 	bne	r2,zero,2271c <___vfprintf_internal_r+0x1dac>
   22634:	b5800204 	addi	r22,r22,8
   22638:	003d5406 	br	21b8c <___vfprintf_internal_r+0x121c>
   2263c:	00800b44 	movi	r2,45
   22640:	d8801345 	stb	r2,77(sp)
   22644:	03400b44 	movi	r13,45
   22648:	003a6c06 	br	20ffc <___vfprintf_internal_r+0x68c>
   2264c:	1520003c 	xorhi	r20,r2,32768
   22650:	00800b44 	movi	r2,45
   22654:	d8800605 	stb	r2,24(sp)
   22658:	003ed106 	br	221a0 <___vfprintf_internal_r+0x1830>
   2265c:	d9801a04 	addi	r6,sp,104
   22660:	900b883a 	mov	r5,r18
   22664:	9809883a 	mov	r4,r19
   22668:	00275f40 	call	275f4 <__sprint_r>
   2266c:	1039cf1e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   22670:	d9401417 	ldw	r5,80(sp)
   22674:	d8c01c17 	ldw	r3,112(sp)
   22678:	dd802704 	addi	r22,sp,156
   2267c:	003e9406 	br	220d0 <___vfprintf_internal_r+0x1760>
   22680:	05400184 	movi	r21,6
   22684:	003e1706 	br	21ee4 <___vfprintf_internal_r+0x1574>
   22688:	d9401345 	stb	r5,77(sp)
   2268c:	00397706 	br	20c6c <___vfprintf_internal_r+0x2fc>
   22690:	d9801a04 	addi	r6,sp,104
   22694:	900b883a 	mov	r5,r18
   22698:	9809883a 	mov	r4,r19
   2269c:	00275f40 	call	275f4 <__sprint_r>
   226a0:	0039c206 	br	20dac <___vfprintf_internal_r+0x43c>
   226a4:	d9000917 	ldw	r4,36(sp)
   226a8:	000d883a 	mov	r6,zero
   226ac:	000f883a 	mov	r7,zero
   226b0:	a00b883a 	mov	r5,r20
   226b4:	d8c01115 	stw	r3,68(sp)
   226b8:	da000815 	stw	r8,32(sp)
   226bc:	db000715 	stw	r12,28(sp)
   226c0:	002c6cc0 	call	2c6cc <__eqdf2>
   226c4:	db000717 	ldw	r12,28(sp)
   226c8:	da000817 	ldw	r8,32(sp)
   226cc:	d8c01117 	ldw	r3,68(sp)
   226d0:	103f9d26 	beq	r2,zero,22548 <___vfprintf_internal_r+0x1bd8>
   226d4:	00800044 	movi	r2,1
   226d8:	1205c83a 	sub	r2,r2,r8
   226dc:	d8801415 	stw	r2,80(sp)
   226e0:	003f9a06 	br	2254c <___vfprintf_internal_r+0x1bdc>
   226e4:	403ea81e 	bne	r8,zero,22188 <___vfprintf_internal_r+0x1818>
   226e8:	02000044 	movi	r8,1
   226ec:	003ea606 	br	22188 <___vfprintf_internal_r+0x1818>
   226f0:	d9801a04 	addi	r6,sp,104
   226f4:	900b883a 	mov	r5,r18
   226f8:	9809883a 	mov	r4,r19
   226fc:	00275f40 	call	275f4 <__sprint_r>
   22700:	1039aa1e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   22704:	d9401417 	ldw	r5,80(sp)
   22708:	d8c01c17 	ldw	r3,112(sp)
   2270c:	d8801b17 	ldw	r2,108(sp)
   22710:	dd802704 	addi	r22,sp,156
   22714:	283e800e 	bge	r5,zero,22118 <___vfprintf_internal_r+0x17a8>
   22718:	003f3806 	br	223fc <___vfprintf_internal_r+0x1a8c>
   2271c:	d9801a04 	addi	r6,sp,104
   22720:	900b883a 	mov	r5,r18
   22724:	9809883a 	mov	r4,r19
   22728:	00275f40 	call	275f4 <__sprint_r>
   2272c:	10399f1e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   22730:	d8c01c17 	ldw	r3,112(sp)
   22734:	dd802704 	addi	r22,sp,156
   22738:	003d1406 	br	21b8c <___vfprintf_internal_r+0x121c>
   2273c:	db000417 	ldw	r12,16(sp)
   22740:	003a9d06 	br	211b8 <___vfprintf_internal_r+0x848>
   22744:	d8801804 	addi	r2,sp,96
   22748:	d8800315 	stw	r2,12(sp)
   2274c:	d9400917 	ldw	r5,36(sp)
   22750:	d8801504 	addi	r2,sp,84
   22754:	40c00044 	addi	r3,r8,1
   22758:	d8800215 	stw	r2,8(sp)
   2275c:	d8801404 	addi	r2,sp,80
   22760:	d8c00015 	stw	r3,0(sp)
   22764:	d8800115 	stw	r2,4(sp)
   22768:	01c00084 	movi	r7,2
   2276c:	a00d883a 	mov	r6,r20
   22770:	9809883a 	mov	r4,r19
   22774:	db001115 	stw	r12,68(sp)
   22778:	da000815 	stw	r8,32(sp)
   2277c:	d8c00715 	stw	r3,28(sp)
   22780:	0022ed40 	call	22ed4 <_dtoa_r>
   22784:	d8c00717 	ldw	r3,28(sp)
   22788:	da000817 	ldw	r8,32(sp)
   2278c:	db001117 	ldw	r12,68(sp)
   22790:	1023883a 	mov	r17,r2
   22794:	e08011d8 	cmpnei	r2,fp,71
   22798:	103e9c26 	beq	r2,zero,2220c <___vfprintf_internal_r+0x189c>
   2279c:	88d3883a 	add	r9,r17,r3
   227a0:	003f6b06 	br	22550 <___vfprintf_internal_r+0x1be0>
   227a4:	d8801817 	ldw	r2,96(sp)
   227a8:	127f762e 	bgeu	r2,r9,22584 <___vfprintf_internal_r+0x1c14>
   227ac:	01000c04 	movi	r4,48
   227b0:	10c00044 	addi	r3,r2,1
   227b4:	d8c01815 	stw	r3,96(sp)
   227b8:	11000005 	stb	r4,0(r2)
   227bc:	d8801817 	ldw	r2,96(sp)
   227c0:	127ffb36 	bltu	r2,r9,227b0 <___vfprintf_internal_r+0x1e40>
   227c4:	003f6f06 	br	22584 <___vfprintf_internal_r+0x1c14>
   227c8:	d8800e17 	ldw	r2,56(sp)
   227cc:	db401343 	ldbu	r13,77(sp)
   227d0:	0011883a 	mov	r8,zero
   227d4:	d8800615 	stw	r2,24(sp)
   227d8:	003a8006 	br	211dc <___vfprintf_internal_r+0x86c>
   227dc:	d8800717 	ldw	r2,28(sp)
   227e0:	d8c00817 	ldw	r3,32(sp)
   227e4:	10c02b16 	blt	r2,r3,22894 <___vfprintf_internal_r+0x1f24>
   227e8:	6300004c 	andi	r12,r12,1
   227ec:	6000581e 	bne	r12,zero,22950 <___vfprintf_internal_r+0x1fe0>
   227f0:	1029883a 	mov	r20,r2
   227f4:	1000010e 	bge	r2,zero,227fc <___vfprintf_internal_r+0x1e8c>
   227f8:	0029883a 	mov	r20,zero
   227fc:	dd400717 	ldw	r21,28(sp)
   22800:	070019c4 	movi	fp,103
   22804:	003f6e06 	br	225c0 <___vfprintf_internal_r+0x1c50>
   22808:	d9801a04 	addi	r6,sp,104
   2280c:	900b883a 	mov	r5,r18
   22810:	9809883a 	mov	r4,r19
   22814:	00275f40 	call	275f4 <__sprint_r>
   22818:	1039641e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   2281c:	dd401417 	ldw	r21,80(sp)
   22820:	d8c01c17 	ldw	r3,112(sp)
   22824:	dd802704 	addi	r22,sp,156
   22828:	003ce706 	br	21bc8 <___vfprintf_internal_r+0x1258>
   2282c:	d9801a04 	addi	r6,sp,104
   22830:	900b883a 	mov	r5,r18
   22834:	9809883a 	mov	r4,r19
   22838:	00275f40 	call	275f4 <__sprint_r>
   2283c:	10395b1e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   22840:	d8c01c17 	ldw	r3,112(sp)
   22844:	dd802704 	addi	r22,sp,156
   22848:	a83ccd0e 	bge	r21,zero,21b80 <___vfprintf_internal_r+0x1210>
   2284c:	003d9106 	br	21e94 <___vfprintf_internal_r+0x1524>
   22850:	02000184 	movi	r8,6
   22854:	003e4c06 	br	22188 <___vfprintf_internal_r+0x1818>
   22858:	d9801a04 	addi	r6,sp,104
   2285c:	900b883a 	mov	r5,r18
   22860:	9809883a 	mov	r4,r19
   22864:	00275f40 	call	275f4 <__sprint_r>
   22868:	1039501e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   2286c:	d8801417 	ldw	r2,80(sp)
   22870:	d9000817 	ldw	r4,32(sp)
   22874:	d8c01c17 	ldw	r3,112(sp)
   22878:	dd802704 	addi	r22,sp,156
   2287c:	2085c83a 	sub	r2,r4,r2
   22880:	003ce506 	br	21c18 <___vfprintf_internal_r+0x12a8>
   22884:	4029883a 	mov	r20,r8
   22888:	d8c00615 	stw	r3,24(sp)
   2288c:	402b883a 	mov	r21,r8
   22890:	0038fc06 	br	20c84 <___vfprintf_internal_r+0x314>
   22894:	d8800817 	ldw	r2,32(sp)
   22898:	d8c00b17 	ldw	r3,44(sp)
   2289c:	10eb883a 	add	r21,r2,r3
   228a0:	d8800717 	ldw	r2,28(sp)
   228a4:	00800316 	blt	zero,r2,228b4 <___vfprintf_internal_r+0x1f44>
   228a8:	d8800717 	ldw	r2,28(sp)
   228ac:	a8abc83a 	sub	r21,r21,r2
   228b0:	ad400044 	addi	r21,r21,1
   228b4:	a829883a 	mov	r20,r21
   228b8:	a8002a16 	blt	r21,zero,22964 <___vfprintf_internal_r+0x1ff4>
   228bc:	070019c4 	movi	fp,103
   228c0:	003f3f06 	br	225c0 <___vfprintf_internal_r+0x1c50>
   228c4:	d9401345 	stb	r5,77(sp)
   228c8:	003ae006 	br	2144c <___vfprintf_internal_r+0xadc>
   228cc:	d9401345 	stb	r5,77(sp)
   228d0:	003a5706 	br	21230 <___vfprintf_internal_r+0x8c0>
   228d4:	d9401345 	stb	r5,77(sp)
   228d8:	003b1706 	br	21538 <___vfprintf_internal_r+0xbc8>
   228dc:	d9401345 	stb	r5,77(sp)
   228e0:	003a2006 	br	21164 <___vfprintf_internal_r+0x7f4>
   228e4:	d9401345 	stb	r5,77(sp)
   228e8:	003a6606 	br	21284 <___vfprintf_internal_r+0x914>
   228ec:	d9401345 	stb	r5,77(sp)
   228f0:	00399706 	br	20f50 <___vfprintf_internal_r+0x5e0>
   228f4:	00bfffc4 	movi	r2,-1
   228f8:	d8800515 	stw	r2,20(sp)
   228fc:	00392e06 	br	20db8 <___vfprintf_internal_r+0x448>
   22900:	900f883a 	mov	r7,r18
   22904:	8025883a 	mov	r18,r16
   22908:	dc000717 	ldw	r16,28(sp)
   2290c:	10800044 	addi	r2,r2,1
   22910:	1f07883a 	add	r3,r3,fp
   22914:	b1c00015 	stw	r7,0(r22)
   22918:	b7000115 	stw	fp,4(r22)
   2291c:	d8c01c15 	stw	r3,112(sp)
   22920:	d8801b15 	stw	r2,108(sp)
   22924:	11000208 	cmpgei	r4,r2,8
   22928:	203dfa26 	beq	r4,zero,22114 <___vfprintf_internal_r+0x17a4>
   2292c:	d9801a04 	addi	r6,sp,104
   22930:	900b883a 	mov	r5,r18
   22934:	9809883a 	mov	r4,r19
   22938:	00275f40 	call	275f4 <__sprint_r>
   2293c:	10391b1e 	bne	r2,zero,20dac <___vfprintf_internal_r+0x43c>
   22940:	d8c01c17 	ldw	r3,112(sp)
   22944:	d8801b17 	ldw	r2,108(sp)
   22948:	dd802704 	addi	r22,sp,156
   2294c:	003df206 	br	22118 <___vfprintf_internal_r+0x17a8>
   22950:	d8800717 	ldw	r2,28(sp)
   22954:	d8c00b17 	ldw	r3,44(sp)
   22958:	10eb883a 	add	r21,r2,r3
   2295c:	a829883a 	mov	r20,r21
   22960:	a83fd60e 	bge	r21,zero,228bc <___vfprintf_internal_r+0x1f4c>
   22964:	0029883a 	mov	r20,zero
   22968:	003fd406 	br	228bc <___vfprintf_internal_r+0x1f4c>
   2296c:	00800c04 	movi	r2,48
   22970:	ad400c04 	addi	r21,r21,48
   22974:	d88016c5 	stb	r2,91(sp)
   22978:	00800104 	movi	r2,4
   2297c:	dd401705 	stb	r21,92(sp)
   22980:	d8801015 	stw	r2,64(sp)
   22984:	003e6506 	br	2231c <___vfprintf_internal_r+0x19ac>
   22988:	d8800a17 	ldw	r2,40(sp)
   2298c:	10001916 	blt	r2,zero,229f4 <___vfprintf_internal_r+0x2084>
   22990:	db401343 	ldbu	r13,77(sp)
   22994:	e0801210 	cmplti	r2,fp,72
   22998:	1000131e 	bne	r2,zero,229e8 <___vfprintf_internal_r+0x2078>
   2299c:	044000f4 	movhi	r17,3
   229a0:	8c41c704 	addi	r17,r17,1820
   229a4:	00399906 	br	2100c <___vfprintf_internal_r+0x69c>
   229a8:	05400044 	movi	r21,1
   229ac:	a8abc83a 	sub	r21,r21,r2
   229b0:	00800b44 	movi	r2,45
   229b4:	d8801685 	stb	r2,90(sp)
   229b8:	003e2906 	br	22260 <___vfprintf_internal_r+0x18f0>
   229bc:	d8800b17 	ldw	r2,44(sp)
   229c0:	18ab883a 	add	r21,r3,r2
   229c4:	aa2b883a 	add	r21,r21,r8
   229c8:	a829883a 	mov	r20,r21
   229cc:	a83efc0e 	bge	r21,zero,225c0 <___vfprintf_internal_r+0x1c50>
   229d0:	0029883a 	mov	r20,zero
   229d4:	003efa06 	br	225c0 <___vfprintf_internal_r+0x1c50>
   229d8:	6080004c 	andi	r2,r12,1
   229dc:	d8800715 	stw	r2,28(sp)
   229e0:	103e531e 	bne	r2,zero,22330 <___vfprintf_internal_r+0x19c0>
   229e4:	003ff806 	br	229c8 <___vfprintf_internal_r+0x2058>
   229e8:	044000f4 	movhi	r17,3
   229ec:	8c41c604 	addi	r17,r17,1816
   229f0:	00398606 	br	2100c <___vfprintf_internal_r+0x69c>
   229f4:	00800b44 	movi	r2,45
   229f8:	d8801345 	stb	r2,77(sp)
   229fc:	03400b44 	movi	r13,45
   22a00:	003fe406 	br	22994 <___vfprintf_internal_r+0x2024>
   22a04:	1000031e 	bne	r2,zero,22a14 <___vfprintf_internal_r+0x20a4>
   22a08:	05000044 	movi	r20,1
   22a0c:	05400044 	movi	r21,1
   22a10:	003eeb06 	br	225c0 <___vfprintf_internal_r+0x1c50>
   22a14:	d8800b17 	ldw	r2,44(sp)
   22a18:	15400044 	addi	r21,r2,1
   22a1c:	aa2b883a 	add	r21,r21,r8
   22a20:	003fe906 	br	229c8 <___vfprintf_internal_r+0x2058>
   22a24:	b005883a 	mov	r2,r22
   22a28:	39c1d504 	addi	r7,r7,1876
   22a2c:	003e9706 	br	2248c <___vfprintf_internal_r+0x1b1c>
   22a30:	8025883a 	mov	r18,r16
   22a34:	0038dd06 	br	20dac <___vfprintf_internal_r+0x43c>
   22a38:	00800084 	movi	r2,2
   22a3c:	d8801015 	stw	r2,64(sp)
   22a40:	003e3606 	br	2231c <___vfprintf_internal_r+0x19ac>
   22a44:	d8c00617 	ldw	r3,24(sp)
   22a48:	1a000017 	ldw	r8,0(r3)
   22a4c:	18c00104 	addi	r3,r3,4
   22a50:	4000010e 	bge	r8,zero,22a58 <___vfprintf_internal_r+0x20e8>
   22a54:	023fffc4 	movi	r8,-1
   22a58:	bf000043 	ldbu	fp,1(r23)
   22a5c:	d8c00615 	stw	r3,24(sp)
   22a60:	102f883a 	mov	r23,r2
   22a64:	e2c03fcc 	andi	r11,fp,255
   22a68:	5ac0201c 	xori	r11,r11,128
   22a6c:	5affe004 	addi	r11,r11,-128
   22a70:	00380b06 	br	20aa0 <___vfprintf_internal_r+0x130>

00022a74 <__vfprintf_internal>:
   22a74:	00c000f4 	movhi	r3,3
   22a78:	2005883a 	mov	r2,r4
   22a7c:	190a5e17 	ldw	r4,10616(r3)
   22a80:	300f883a 	mov	r7,r6
   22a84:	280d883a 	mov	r6,r5
   22a88:	100b883a 	mov	r5,r2
   22a8c:	00209701 	jmpi	20970 <___vfprintf_internal_r>

00022a90 <__sbprintf>:
   22a90:	2880030b 	ldhu	r2,12(r5)
   22a94:	2b001917 	ldw	r12,100(r5)
   22a98:	2ac0038b 	ldhu	r11,14(r5)
   22a9c:	2a800717 	ldw	r10,28(r5)
   22aa0:	2a400917 	ldw	r9,36(r5)
   22aa4:	defee204 	addi	sp,sp,-1144
   22aa8:	da001a04 	addi	r8,sp,104
   22aac:	00c10004 	movi	r3,1024
   22ab0:	dc011a15 	stw	r16,1128(sp)
   22ab4:	10bfff4c 	andi	r2,r2,65533
   22ab8:	2821883a 	mov	r16,r5
   22abc:	d80b883a 	mov	r5,sp
   22ac0:	dc811c15 	stw	r18,1136(sp)
   22ac4:	dc411b15 	stw	r17,1132(sp)
   22ac8:	dfc11d15 	stw	ra,1140(sp)
   22acc:	2025883a 	mov	r18,r4
   22ad0:	d880030d 	sth	r2,12(sp)
   22ad4:	db001915 	stw	r12,100(sp)
   22ad8:	dac0038d 	sth	r11,14(sp)
   22adc:	da800715 	stw	r10,28(sp)
   22ae0:	da400915 	stw	r9,36(sp)
   22ae4:	da000015 	stw	r8,0(sp)
   22ae8:	da000415 	stw	r8,16(sp)
   22aec:	d8c00215 	stw	r3,8(sp)
   22af0:	d8c00515 	stw	r3,20(sp)
   22af4:	d8000615 	stw	zero,24(sp)
   22af8:	00209700 	call	20970 <___vfprintf_internal_r>
   22afc:	1023883a 	mov	r17,r2
   22b00:	10000d0e 	bge	r2,zero,22b38 <__sbprintf+0xa8>
   22b04:	d880030b 	ldhu	r2,12(sp)
   22b08:	1080100c 	andi	r2,r2,64
   22b0c:	10000326 	beq	r2,zero,22b1c <__sbprintf+0x8c>
   22b10:	8080030b 	ldhu	r2,12(r16)
   22b14:	10801014 	ori	r2,r2,64
   22b18:	8080030d 	sth	r2,12(r16)
   22b1c:	8805883a 	mov	r2,r17
   22b20:	dfc11d17 	ldw	ra,1140(sp)
   22b24:	dc811c17 	ldw	r18,1136(sp)
   22b28:	dc411b17 	ldw	r17,1132(sp)
   22b2c:	dc011a17 	ldw	r16,1128(sp)
   22b30:	dec11e04 	addi	sp,sp,1144
   22b34:	f800283a 	ret
   22b38:	d80b883a 	mov	r5,sp
   22b3c:	9009883a 	mov	r4,r18
   22b40:	00248440 	call	24844 <_fflush_r>
   22b44:	103fef26 	beq	r2,zero,22b04 <__sbprintf+0x74>
   22b48:	047fffc4 	movi	r17,-1
   22b4c:	003fed06 	br	22b04 <__sbprintf+0x74>

00022b50 <__swsetup_r>:
   22b50:	008000f4 	movhi	r2,3
   22b54:	108a5e17 	ldw	r2,10616(r2)
   22b58:	defffd04 	addi	sp,sp,-12
   22b5c:	dc400115 	stw	r17,4(sp)
   22b60:	dc000015 	stw	r16,0(sp)
   22b64:	dfc00215 	stw	ra,8(sp)
   22b68:	2023883a 	mov	r17,r4
   22b6c:	2821883a 	mov	r16,r5
   22b70:	10000226 	beq	r2,zero,22b7c <__swsetup_r+0x2c>
   22b74:	10c00e17 	ldw	r3,56(r2)
   22b78:	18001f26 	beq	r3,zero,22bf8 <__swsetup_r+0xa8>
   22b7c:	8180030b 	ldhu	r6,12(r16)
   22b80:	30c0020c 	andi	r3,r6,8
   22b84:	3005883a 	mov	r2,r6
   22b88:	18002126 	beq	r3,zero,22c10 <__swsetup_r+0xc0>
   22b8c:	80c00417 	ldw	r3,16(r16)
   22b90:	18002826 	beq	r3,zero,22c34 <__swsetup_r+0xe4>
   22b94:	1100004c 	andi	r4,r2,1
   22b98:	20000b1e 	bne	r4,zero,22bc8 <__swsetup_r+0x78>
   22b9c:	1100008c 	andi	r4,r2,2
   22ba0:	20002e1e 	bne	r4,zero,22c5c <__swsetup_r+0x10c>
   22ba4:	81000517 	ldw	r4,20(r16)
   22ba8:	81000215 	stw	r4,8(r16)
   22bac:	18000b26 	beq	r3,zero,22bdc <__swsetup_r+0x8c>
   22bb0:	0005883a 	mov	r2,zero
   22bb4:	dfc00217 	ldw	ra,8(sp)
   22bb8:	dc400117 	ldw	r17,4(sp)
   22bbc:	dc000017 	ldw	r16,0(sp)
   22bc0:	dec00304 	addi	sp,sp,12
   22bc4:	f800283a 	ret
   22bc8:	81000517 	ldw	r4,20(r16)
   22bcc:	80000215 	stw	zero,8(r16)
   22bd0:	0109c83a 	sub	r4,zero,r4
   22bd4:	81000615 	stw	r4,24(r16)
   22bd8:	183ff51e 	bne	r3,zero,22bb0 <__swsetup_r+0x60>
   22bdc:	10c0200c 	andi	r3,r2,128
   22be0:	0005883a 	mov	r2,zero
   22be4:	183ff326 	beq	r3,zero,22bb4 <__swsetup_r+0x64>
   22be8:	31801014 	ori	r6,r6,64
   22bec:	8180030d 	sth	r6,12(r16)
   22bf0:	00bfffc4 	movi	r2,-1
   22bf4:	003fef06 	br	22bb4 <__swsetup_r+0x64>
   22bf8:	1009883a 	mov	r4,r2
   22bfc:	0024c8c0 	call	24c8c <__sinit>
   22c00:	8180030b 	ldhu	r6,12(r16)
   22c04:	30c0020c 	andi	r3,r6,8
   22c08:	3005883a 	mov	r2,r6
   22c0c:	183fdf1e 	bne	r3,zero,22b8c <__swsetup_r+0x3c>
   22c10:	3080040c 	andi	r2,r6,16
   22c14:	10002126 	beq	r2,zero,22c9c <__swsetup_r+0x14c>
   22c18:	3080010c 	andi	r2,r6,4
   22c1c:	1000111e 	bne	r2,zero,22c64 <__swsetup_r+0x114>
   22c20:	80c00417 	ldw	r3,16(r16)
   22c24:	30800214 	ori	r2,r6,8
   22c28:	8080030d 	sth	r2,12(r16)
   22c2c:	100d883a 	mov	r6,r2
   22c30:	183fd81e 	bne	r3,zero,22b94 <__swsetup_r+0x44>
   22c34:	1100a00c 	andi	r4,r2,640
   22c38:	21008020 	cmpeqi	r4,r4,512
   22c3c:	203fd51e 	bne	r4,zero,22b94 <__swsetup_r+0x44>
   22c40:	800b883a 	mov	r5,r16
   22c44:	8809883a 	mov	r4,r17
   22c48:	002524c0 	call	2524c <__smakebuf_r>
   22c4c:	8180030b 	ldhu	r6,12(r16)
   22c50:	80c00417 	ldw	r3,16(r16)
   22c54:	3005883a 	mov	r2,r6
   22c58:	003fce06 	br	22b94 <__swsetup_r+0x44>
   22c5c:	0009883a 	mov	r4,zero
   22c60:	003fd106 	br	22ba8 <__swsetup_r+0x58>
   22c64:	81400c17 	ldw	r5,48(r16)
   22c68:	28000626 	beq	r5,zero,22c84 <__swsetup_r+0x134>
   22c6c:	80801004 	addi	r2,r16,64
   22c70:	28800326 	beq	r5,r2,22c80 <__swsetup_r+0x130>
   22c74:	8809883a 	mov	r4,r17
   22c78:	0024df00 	call	24df0 <_free_r>
   22c7c:	8180030b 	ldhu	r6,12(r16)
   22c80:	80000c15 	stw	zero,48(r16)
   22c84:	80c00417 	ldw	r3,16(r16)
   22c88:	00bff6c4 	movi	r2,-37
   22c8c:	118c703a 	and	r6,r2,r6
   22c90:	80000115 	stw	zero,4(r16)
   22c94:	80c00015 	stw	r3,0(r16)
   22c98:	003fe206 	br	22c24 <__swsetup_r+0xd4>
   22c9c:	00800244 	movi	r2,9
   22ca0:	88800015 	stw	r2,0(r17)
   22ca4:	31801014 	ori	r6,r6,64
   22ca8:	8180030d 	sth	r6,12(r16)
   22cac:	00bfffc4 	movi	r2,-1
   22cb0:	003fc006 	br	22bb4 <__swsetup_r+0x64>

00022cb4 <quorem>:
   22cb4:	defff204 	addi	sp,sp,-56
   22cb8:	dc400515 	stw	r17,20(sp)
   22cbc:	20800417 	ldw	r2,16(r4)
   22cc0:	2c400417 	ldw	r17,16(r5)
   22cc4:	dfc00d15 	stw	ra,52(sp)
   22cc8:	df000c15 	stw	fp,48(sp)
   22ccc:	ddc00b15 	stw	r23,44(sp)
   22cd0:	dd800a15 	stw	r22,40(sp)
   22cd4:	dd400915 	stw	r21,36(sp)
   22cd8:	dd000815 	stw	r20,32(sp)
   22cdc:	dcc00715 	stw	r19,28(sp)
   22ce0:	dc800615 	stw	r18,24(sp)
   22ce4:	dc000415 	stw	r16,16(sp)
   22ce8:	d9000115 	stw	r4,4(sp)
   22cec:	d9400215 	stw	r5,8(sp)
   22cf0:	14407616 	blt	r2,r17,22ecc <quorem+0x218>
   22cf4:	8c7fffc4 	addi	r17,r17,-1
   22cf8:	882a90ba 	slli	r21,r17,2
   22cfc:	2f000504 	addi	fp,r5,20
   22d00:	25800504 	addi	r22,r4,20
   22d04:	e565883a 	add	r18,fp,r21
   22d08:	b545883a 	add	r2,r22,r21
   22d0c:	95c00017 	ldw	r23,0(r18)
   22d10:	15000017 	ldw	r20,0(r2)
   22d14:	dd800015 	stw	r22,0(sp)
   22d18:	bdc00044 	addi	r23,r23,1
   22d1c:	b80b883a 	mov	r5,r23
   22d20:	a009883a 	mov	r4,r20
   22d24:	d8800315 	stw	r2,12(sp)
   22d28:	002b3c40 	call	2b3c4 <__udivsi3>
   22d2c:	1021883a 	mov	r16,r2
   22d30:	a5c02f36 	bltu	r20,r23,22df0 <quorem+0x13c>
   22d34:	e029883a 	mov	r20,fp
   22d38:	002b883a 	mov	r21,zero
   22d3c:	002f883a 	mov	r23,zero
   22d40:	a4c00017 	ldw	r19,0(r20)
   22d44:	800b883a 	mov	r5,r16
   22d48:	b5800104 	addi	r22,r22,4
   22d4c:	993fffcc 	andi	r4,r19,65535
   22d50:	002b4840 	call	2b484 <__mulsi3>
   22d54:	9808d43a 	srli	r4,r19,16
   22d58:	800b883a 	mov	r5,r16
   22d5c:	156b883a 	add	r21,r2,r21
   22d60:	002b4840 	call	2b484 <__mulsi3>
   22d64:	b0ffff17 	ldw	r3,-4(r22)
   22d68:	a80ad43a 	srli	r5,r21,16
   22d6c:	a93fffcc 	andi	r4,r21,65535
   22d70:	19bfffcc 	andi	r6,r3,65535
   22d74:	b909c83a 	sub	r4,r23,r4
   22d78:	2189883a 	add	r4,r4,r6
   22d7c:	1806d43a 	srli	r3,r3,16
   22d80:	1145883a 	add	r2,r2,r5
   22d84:	200bd43a 	srai	r5,r4,16
   22d88:	11bfffcc 	andi	r6,r2,65535
   22d8c:	1987c83a 	sub	r3,r3,r6
   22d90:	1947883a 	add	r3,r3,r5
   22d94:	180a943a 	slli	r5,r3,16
   22d98:	213fffcc 	andi	r4,r4,65535
   22d9c:	a5000104 	addi	r20,r20,4
   22da0:	2908b03a 	or	r4,r5,r4
   22da4:	b13fff15 	stw	r4,-4(r22)
   22da8:	102ad43a 	srli	r21,r2,16
   22dac:	182fd43a 	srai	r23,r3,16
   22db0:	953fe32e 	bgeu	r18,r20,22d40 <quorem+0x8c>
   22db4:	d8c00317 	ldw	r3,12(sp)
   22db8:	18800017 	ldw	r2,0(r3)
   22dbc:	10000c1e 	bne	r2,zero,22df0 <quorem+0x13c>
   22dc0:	d8800017 	ldw	r2,0(sp)
   22dc4:	1d7fff04 	addi	r21,r3,-4
   22dc8:	15400436 	bltu	r2,r21,22ddc <quorem+0x128>
   22dcc:	00000606 	br	22de8 <quorem+0x134>
   22dd0:	d8800017 	ldw	r2,0(sp)
   22dd4:	8c7fffc4 	addi	r17,r17,-1
   22dd8:	1540032e 	bgeu	r2,r21,22de8 <quorem+0x134>
   22ddc:	a8800017 	ldw	r2,0(r21)
   22de0:	ad7fff04 	addi	r21,r21,-4
   22de4:	103ffa26 	beq	r2,zero,22dd0 <quorem+0x11c>
   22de8:	d8800117 	ldw	r2,4(sp)
   22dec:	14400415 	stw	r17,16(r2)
   22df0:	d9400217 	ldw	r5,8(sp)
   22df4:	d9000117 	ldw	r4,4(sp)
   22df8:	00269e80 	call	269e8 <__mcmp>
   22dfc:	10002616 	blt	r2,zero,22e98 <quorem+0x1e4>
   22e00:	d9400017 	ldw	r5,0(sp)
   22e04:	84000044 	addi	r16,r16,1
   22e08:	0007883a 	mov	r3,zero
   22e0c:	e1000017 	ldw	r4,0(fp)
   22e10:	29800017 	ldw	r6,0(r5)
   22e14:	29400104 	addi	r5,r5,4
   22e18:	20bfffcc 	andi	r2,r4,65535
   22e1c:	1887c83a 	sub	r3,r3,r2
   22e20:	30bfffcc 	andi	r2,r6,65535
   22e24:	1885883a 	add	r2,r3,r2
   22e28:	2008d43a 	srli	r4,r4,16
   22e2c:	3006d43a 	srli	r3,r6,16
   22e30:	100fd43a 	srai	r7,r2,16
   22e34:	11bfffcc 	andi	r6,r2,65535
   22e38:	1907c83a 	sub	r3,r3,r4
   22e3c:	19c7883a 	add	r3,r3,r7
   22e40:	1804943a 	slli	r2,r3,16
   22e44:	e7000104 	addi	fp,fp,4
   22e48:	1807d43a 	srai	r3,r3,16
   22e4c:	1184b03a 	or	r2,r2,r6
   22e50:	28bfff15 	stw	r2,-4(r5)
   22e54:	973fed2e 	bgeu	r18,fp,22e0c <quorem+0x158>
   22e58:	880490ba 	slli	r2,r17,2
   22e5c:	d9000017 	ldw	r4,0(sp)
   22e60:	2085883a 	add	r2,r4,r2
   22e64:	10c00017 	ldw	r3,0(r2)
   22e68:	18000b1e 	bne	r3,zero,22e98 <quorem+0x1e4>
   22e6c:	10bfff04 	addi	r2,r2,-4
   22e70:	20800436 	bltu	r4,r2,22e84 <quorem+0x1d0>
   22e74:	00000606 	br	22e90 <quorem+0x1dc>
   22e78:	d8c00017 	ldw	r3,0(sp)
   22e7c:	8c7fffc4 	addi	r17,r17,-1
   22e80:	1880032e 	bgeu	r3,r2,22e90 <quorem+0x1dc>
   22e84:	10c00017 	ldw	r3,0(r2)
   22e88:	10bfff04 	addi	r2,r2,-4
   22e8c:	183ffa26 	beq	r3,zero,22e78 <quorem+0x1c4>
   22e90:	d8800117 	ldw	r2,4(sp)
   22e94:	14400415 	stw	r17,16(r2)
   22e98:	8005883a 	mov	r2,r16
   22e9c:	dfc00d17 	ldw	ra,52(sp)
   22ea0:	df000c17 	ldw	fp,48(sp)
   22ea4:	ddc00b17 	ldw	r23,44(sp)
   22ea8:	dd800a17 	ldw	r22,40(sp)
   22eac:	dd400917 	ldw	r21,36(sp)
   22eb0:	dd000817 	ldw	r20,32(sp)
   22eb4:	dcc00717 	ldw	r19,28(sp)
   22eb8:	dc800617 	ldw	r18,24(sp)
   22ebc:	dc400517 	ldw	r17,20(sp)
   22ec0:	dc000417 	ldw	r16,16(sp)
   22ec4:	dec00e04 	addi	sp,sp,56
   22ec8:	f800283a 	ret
   22ecc:	0005883a 	mov	r2,zero
   22ed0:	003ff206 	br	22e9c <quorem+0x1e8>

00022ed4 <_dtoa_r>:
   22ed4:	20801017 	ldw	r2,64(r4)
   22ed8:	deffe204 	addi	sp,sp,-120
   22edc:	ddc01b15 	stw	r23,108(sp)
   22ee0:	dcc01715 	stw	r19,92(sp)
   22ee4:	dc801615 	stw	r18,88(sp)
   22ee8:	dc401515 	stw	r17,84(sp)
   22eec:	dc001415 	stw	r16,80(sp)
   22ef0:	dfc01d15 	stw	ra,116(sp)
   22ef4:	df001c15 	stw	fp,112(sp)
   22ef8:	dd801a15 	stw	r22,104(sp)
   22efc:	dd401915 	stw	r21,100(sp)
   22f00:	dd001815 	stw	r20,96(sp)
   22f04:	d9c00215 	stw	r7,8(sp)
   22f08:	dc002017 	ldw	r16,128(sp)
   22f0c:	202f883a 	mov	r23,r4
   22f10:	3025883a 	mov	r18,r6
   22f14:	2827883a 	mov	r19,r5
   22f18:	3023883a 	mov	r17,r6
   22f1c:	10000826 	beq	r2,zero,22f40 <_dtoa_r+0x6c>
   22f20:	21801117 	ldw	r6,68(r4)
   22f24:	00c00044 	movi	r3,1
   22f28:	100b883a 	mov	r5,r2
   22f2c:	1986983a 	sll	r3,r3,r6
   22f30:	11800115 	stw	r6,4(r2)
   22f34:	10c00215 	stw	r3,8(r2)
   22f38:	0025fd80 	call	25fd8 <_Bfree>
   22f3c:	b8001015 	stw	zero,64(r23)
   22f40:	90018816 	blt	r18,zero,23564 <_dtoa_r+0x690>
   22f44:	80000015 	stw	zero,0(r16)
   22f48:	909ffc2c 	andhi	r2,r18,32752
   22f4c:	00dffc34 	movhi	r3,32752
   22f50:	10c18d26 	beq	r2,r3,23588 <_dtoa_r+0x6b4>
   22f54:	000d883a 	mov	r6,zero
   22f58:	000f883a 	mov	r7,zero
   22f5c:	9809883a 	mov	r4,r19
   22f60:	880b883a 	mov	r5,r17
   22f64:	002c6cc0 	call	2c6cc <__eqdf2>
   22f68:	1000191e 	bne	r2,zero,22fd0 <_dtoa_r+0xfc>
   22f6c:	d8c01f17 	ldw	r3,124(sp)
   22f70:	00800044 	movi	r2,1
   22f74:	18800015 	stw	r2,0(r3)
   22f78:	d8802117 	ldw	r2,132(sp)
   22f7c:	1002f926 	beq	r2,zero,23b64 <_dtoa_r+0xc90>
   22f80:	d9002117 	ldw	r4,132(sp)
   22f84:	008000f4 	movhi	r2,3
   22f88:	1081d444 	addi	r2,r2,1873
   22f8c:	00c000f4 	movhi	r3,3
   22f90:	20800015 	stw	r2,0(r4)
   22f94:	1881d404 	addi	r2,r3,1872
   22f98:	d8800115 	stw	r2,4(sp)
   22f9c:	d8800117 	ldw	r2,4(sp)
   22fa0:	dfc01d17 	ldw	ra,116(sp)
   22fa4:	df001c17 	ldw	fp,112(sp)
   22fa8:	ddc01b17 	ldw	r23,108(sp)
   22fac:	dd801a17 	ldw	r22,104(sp)
   22fb0:	dd401917 	ldw	r21,100(sp)
   22fb4:	dd001817 	ldw	r20,96(sp)
   22fb8:	dcc01717 	ldw	r19,92(sp)
   22fbc:	dc801617 	ldw	r18,88(sp)
   22fc0:	dc401517 	ldw	r17,84(sp)
   22fc4:	dc001417 	ldw	r16,80(sp)
   22fc8:	dec01e04 	addi	sp,sp,120
   22fcc:	f800283a 	ret
   22fd0:	d8801204 	addi	r2,sp,72
   22fd4:	9020d53a 	srli	r16,r18,20
   22fd8:	d8800015 	stw	r2,0(sp)
   22fdc:	d9c01304 	addi	r7,sp,76
   22fe0:	980b883a 	mov	r5,r19
   22fe4:	880d883a 	mov	r6,r17
   22fe8:	b809883a 	mov	r4,r23
   22fec:	0026dd00 	call	26dd0 <__d2b>
   22ff0:	1039883a 	mov	fp,r2
   22ff4:	8001771e 	bne	r16,zero,235d4 <_dtoa_r+0x700>
   22ff8:	dd001217 	ldw	r20,72(sp)
   22ffc:	dc001317 	ldw	r16,76(sp)
   23000:	a421883a 	add	r16,r20,r16
   23004:	80810c84 	addi	r2,r16,1074
   23008:	10c00850 	cmplti	r3,r2,33
   2300c:	1802e51e 	bne	r3,zero,23ba4 <_dtoa_r+0xcd0>
   23010:	01001004 	movi	r4,64
   23014:	2085c83a 	sub	r2,r4,r2
   23018:	81010484 	addi	r4,r16,1042
   2301c:	90a4983a 	sll	r18,r18,r2
   23020:	9908d83a 	srl	r4,r19,r4
   23024:	9108b03a 	or	r4,r18,r4
   23028:	002db080 	call	2db08 <__floatunsidf>
   2302c:	1009883a 	mov	r4,r2
   23030:	017f8434 	movhi	r5,65040
   23034:	00800044 	movi	r2,1
   23038:	194b883a 	add	r5,r3,r5
   2303c:	843fffc4 	addi	r16,r16,-1
   23040:	d8800a15 	stw	r2,40(sp)
   23044:	000d883a 	mov	r6,zero
   23048:	01cffe34 	movhi	r7,16376
   2304c:	002d0c80 	call	2d0c8 <__subdf3>
   23050:	0198dbf4 	movhi	r6,25455
   23054:	01cff4f4 	movhi	r7,16339
   23058:	3190d844 	addi	r6,r6,17249
   2305c:	39e1e9c4 	addi	r7,r7,-30809
   23060:	1009883a 	mov	r4,r2
   23064:	180b883a 	mov	r5,r3
   23068:	002c91c0 	call	2c91c <__muldf3>
   2306c:	01a2d874 	movhi	r6,35681
   23070:	01cff1f4 	movhi	r7,16327
   23074:	31b22cc4 	addi	r6,r6,-14157
   23078:	39e28a04 	addi	r7,r7,-30168
   2307c:	180b883a 	mov	r5,r3
   23080:	1009883a 	mov	r4,r2
   23084:	002b4ac0 	call	2b4ac <__adddf3>
   23088:	8009883a 	mov	r4,r16
   2308c:	102b883a 	mov	r21,r2
   23090:	1825883a 	mov	r18,r3
   23094:	002da500 	call	2da50 <__floatsidf>
   23098:	019427f4 	movhi	r6,20639
   2309c:	01cff4f4 	movhi	r7,16339
   230a0:	319e7ec4 	addi	r6,r6,31227
   230a4:	39d104c4 	addi	r7,r7,17427
   230a8:	1009883a 	mov	r4,r2
   230ac:	180b883a 	mov	r5,r3
   230b0:	002c91c0 	call	2c91c <__muldf3>
   230b4:	100d883a 	mov	r6,r2
   230b8:	180f883a 	mov	r7,r3
   230bc:	a809883a 	mov	r4,r21
   230c0:	900b883a 	mov	r5,r18
   230c4:	002b4ac0 	call	2b4ac <__adddf3>
   230c8:	1009883a 	mov	r4,r2
   230cc:	180b883a 	mov	r5,r3
   230d0:	1025883a 	mov	r18,r2
   230d4:	182d883a 	mov	r22,r3
   230d8:	002d9d00 	call	2d9d0 <__fixdfsi>
   230dc:	000d883a 	mov	r6,zero
   230e0:	000f883a 	mov	r7,zero
   230e4:	9009883a 	mov	r4,r18
   230e8:	b00b883a 	mov	r5,r22
   230ec:	102b883a 	mov	r21,r2
   230f0:	d8800315 	stw	r2,12(sp)
   230f4:	002c8340 	call	2c834 <__ledf2>
   230f8:	10028f16 	blt	r2,zero,23b38 <_dtoa_r+0xc64>
   230fc:	dc800317 	ldw	r18,12(sp)
   23100:	a421c83a 	sub	r16,r20,r16
   23104:	85bfffc4 	addi	r22,r16,-1
   23108:	908005e8 	cmpgeui	r2,r18,23
   2310c:	1002821e 	bne	r2,zero,23b18 <_dtoa_r+0xc44>
   23110:	900690fa 	slli	r3,r18,3
   23114:	008000f4 	movhi	r2,3
   23118:	10821d04 	addi	r2,r2,2164
   2311c:	10c5883a 	add	r2,r2,r3
   23120:	11800017 	ldw	r6,0(r2)
   23124:	11c00117 	ldw	r7,4(r2)
   23128:	9809883a 	mov	r4,r19
   2312c:	880b883a 	mov	r5,r17
   23130:	002c8340 	call	2c834 <__ledf2>
   23134:	1002550e 	bge	r2,zero,23a8c <_dtoa_r+0xbb8>
   23138:	90bfffc4 	addi	r2,r18,-1
   2313c:	d8800315 	stw	r2,12(sp)
   23140:	d8000915 	stw	zero,36(sp)
   23144:	b0027716 	blt	r22,zero,23b24 <_dtoa_r+0xc50>
   23148:	d8000615 	stw	zero,24(sp)
   2314c:	d8800317 	ldw	r2,12(sp)
   23150:	1002510e 	bge	r2,zero,23a98 <_dtoa_r+0xbc4>
   23154:	d8800317 	ldw	r2,12(sp)
   23158:	d8c00617 	ldw	r3,24(sp)
   2315c:	d8000315 	stw	zero,12(sp)
   23160:	d8800415 	stw	r2,16(sp)
   23164:	1887c83a 	sub	r3,r3,r2
   23168:	d8c00615 	stw	r3,24(sp)
   2316c:	0087c83a 	sub	r3,zero,r2
   23170:	d8c00815 	stw	r3,32(sp)
   23174:	d8c00217 	ldw	r3,8(sp)
   23178:	188002a8 	cmpgeui	r2,r3,10
   2317c:	10024d1e 	bne	r2,zero,23ab4 <_dtoa_r+0xbe0>
   23180:	18800190 	cmplti	r2,r3,6
   23184:	10028b1e 	bne	r2,zero,23bb4 <_dtoa_r+0xce0>
   23188:	18bfff04 	addi	r2,r3,-4
   2318c:	d8800215 	stw	r2,8(sp)
   23190:	0021883a 	mov	r16,zero
   23194:	d8c00217 	ldw	r3,8(sp)
   23198:	18800120 	cmpeqi	r2,r3,4
   2319c:	10035d1e 	bne	r2,zero,23f14 <_dtoa_r+0x1040>
   231a0:	18800160 	cmpeqi	r2,r3,5
   231a4:	10031b1e 	bne	r2,zero,23e14 <_dtoa_r+0xf40>
   231a8:	188000a0 	cmpeqi	r2,r3,2
   231ac:	10024d26 	beq	r2,zero,23ae4 <_dtoa_r+0xc10>
   231b0:	d8000715 	stw	zero,28(sp)
   231b4:	d8801e17 	ldw	r2,120(sp)
   231b8:	0083260e 	bge	zero,r2,23e54 <_dtoa_r+0xf80>
   231bc:	d8800b15 	stw	r2,44(sp)
   231c0:	d8800515 	stw	r2,20(sp)
   231c4:	100d883a 	mov	r6,r2
   231c8:	b8001115 	stw	zero,68(r23)
   231cc:	30800610 	cmplti	r2,r6,24
   231d0:	1004f11e 	bne	r2,zero,24598 <_dtoa_r+0x16c4>
   231d4:	00c00044 	movi	r3,1
   231d8:	00800104 	movi	r2,4
   231dc:	1085883a 	add	r2,r2,r2
   231e0:	11000504 	addi	r4,r2,20
   231e4:	180b883a 	mov	r5,r3
   231e8:	18c00044 	addi	r3,r3,1
   231ec:	313ffb2e 	bgeu	r6,r4,231dc <_dtoa_r+0x308>
   231f0:	b9401115 	stw	r5,68(r23)
   231f4:	b809883a 	mov	r4,r23
   231f8:	0025f340 	call	25f34 <_Balloc>
   231fc:	d8800115 	stw	r2,4(sp)
   23200:	1004de26 	beq	r2,zero,2457c <_dtoa_r+0x16a8>
   23204:	d8800117 	ldw	r2,4(sp)
   23208:	b8801015 	stw	r2,64(r23)
   2320c:	d8800517 	ldw	r2,20(sp)
   23210:	108003e8 	cmpgeui	r2,r2,15
   23214:	1001021e 	bne	r2,zero,23620 <_dtoa_r+0x74c>
   23218:	80010126 	beq	r16,zero,23620 <_dtoa_r+0x74c>
   2321c:	d9000417 	ldw	r4,16(sp)
   23220:	01038b0e 	bge	zero,r4,24050 <_dtoa_r+0x117c>
   23224:	208003cc 	andi	r2,r4,15
   23228:	100690fa 	slli	r3,r2,3
   2322c:	2029d13a 	srai	r20,r4,4
   23230:	008000f4 	movhi	r2,3
   23234:	10821d04 	addi	r2,r2,2164
   23238:	10c5883a 	add	r2,r2,r3
   2323c:	a0c0040c 	andi	r3,r20,16
   23240:	12800017 	ldw	r10,0(r2)
   23244:	12400117 	ldw	r9,4(r2)
   23248:	18032c26 	beq	r3,zero,23efc <_dtoa_r+0x1028>
   2324c:	008000f4 	movhi	r2,3
   23250:	10821304 	addi	r2,r2,2124
   23254:	11800817 	ldw	r6,32(r2)
   23258:	11c00917 	ldw	r7,36(r2)
   2325c:	9809883a 	mov	r4,r19
   23260:	880b883a 	mov	r5,r17
   23264:	da400e15 	stw	r9,56(sp)
   23268:	da800d15 	stw	r10,52(sp)
   2326c:	002bd9c0 	call	2bd9c <__divdf3>
   23270:	da800d17 	ldw	r10,52(sp)
   23274:	da400e17 	ldw	r9,56(sp)
   23278:	a50003cc 	andi	r20,r20,15
   2327c:	d8800c15 	stw	r2,48(sp)
   23280:	1825883a 	mov	r18,r3
   23284:	054000c4 	movi	r21,3
   23288:	a0001126 	beq	r20,zero,232d0 <_dtoa_r+0x3fc>
   2328c:	040000f4 	movhi	r16,3
   23290:	84021304 	addi	r16,r16,2124
   23294:	5009883a 	mov	r4,r10
   23298:	480b883a 	mov	r5,r9
   2329c:	a180004c 	andi	r6,r20,1
   232a0:	30000626 	beq	r6,zero,232bc <_dtoa_r+0x3e8>
   232a4:	81800017 	ldw	r6,0(r16)
   232a8:	81c00117 	ldw	r7,4(r16)
   232ac:	ad400044 	addi	r21,r21,1
   232b0:	002c91c0 	call	2c91c <__muldf3>
   232b4:	1009883a 	mov	r4,r2
   232b8:	180b883a 	mov	r5,r3
   232bc:	a029d07a 	srai	r20,r20,1
   232c0:	84000204 	addi	r16,r16,8
   232c4:	a03ff51e 	bne	r20,zero,2329c <_dtoa_r+0x3c8>
   232c8:	2015883a 	mov	r10,r4
   232cc:	2813883a 	mov	r9,r5
   232d0:	d9000c17 	ldw	r4,48(sp)
   232d4:	900b883a 	mov	r5,r18
   232d8:	500d883a 	mov	r6,r10
   232dc:	480f883a 	mov	r7,r9
   232e0:	002bd9c0 	call	2bd9c <__divdf3>
   232e4:	1021883a 	mov	r16,r2
   232e8:	1825883a 	mov	r18,r3
   232ec:	d8800917 	ldw	r2,36(sp)
   232f0:	10000626 	beq	r2,zero,2330c <_dtoa_r+0x438>
   232f4:	000d883a 	mov	r6,zero
   232f8:	01cffc34 	movhi	r7,16368
   232fc:	8009883a 	mov	r4,r16
   23300:	900b883a 	mov	r5,r18
   23304:	002c8340 	call	2c834 <__ledf2>
   23308:	10044416 	blt	r2,zero,2441c <_dtoa_r+0x1548>
   2330c:	a809883a 	mov	r4,r21
   23310:	002da500 	call	2da50 <__floatsidf>
   23314:	800d883a 	mov	r6,r16
   23318:	900f883a 	mov	r7,r18
   2331c:	1009883a 	mov	r4,r2
   23320:	180b883a 	mov	r5,r3
   23324:	002c91c0 	call	2c91c <__muldf3>
   23328:	000d883a 	mov	r6,zero
   2332c:	01d00734 	movhi	r7,16412
   23330:	1009883a 	mov	r4,r2
   23334:	180b883a 	mov	r5,r3
   23338:	002b4ac0 	call	2b4ac <__adddf3>
   2333c:	1029883a 	mov	r20,r2
   23340:	00bf3034 	movhi	r2,64704
   23344:	1885883a 	add	r2,r3,r2
   23348:	d8800c15 	stw	r2,48(sp)
   2334c:	d8800517 	ldw	r2,20(sp)
   23350:	10032226 	beq	r2,zero,23fdc <_dtoa_r+0x1108>
   23354:	d8800417 	ldw	r2,16(sp)
   23358:	d8801115 	stw	r2,68(sp)
   2335c:	d8800517 	ldw	r2,20(sp)
   23360:	d8800d15 	stw	r2,52(sp)
   23364:	d8800d17 	ldw	r2,52(sp)
   23368:	900b883a 	mov	r5,r18
   2336c:	8009883a 	mov	r4,r16
   23370:	10bfffc4 	addi	r2,r2,-1
   23374:	100690fa 	slli	r3,r2,3
   23378:	008000f4 	movhi	r2,3
   2337c:	10821d04 	addi	r2,r2,2164
   23380:	10c5883a 	add	r2,r2,r3
   23384:	12800017 	ldw	r10,0(r2)
   23388:	12c00117 	ldw	r11,4(r2)
   2338c:	da800f15 	stw	r10,60(sp)
   23390:	dac00e15 	stw	r11,56(sp)
   23394:	002d9d00 	call	2d9d0 <__fixdfsi>
   23398:	1009883a 	mov	r4,r2
   2339c:	10800c04 	addi	r2,r2,48
   233a0:	d8801015 	stw	r2,64(sp)
   233a4:	002da500 	call	2da50 <__floatsidf>
   233a8:	8009883a 	mov	r4,r16
   233ac:	100d883a 	mov	r6,r2
   233b0:	180f883a 	mov	r7,r3
   233b4:	900b883a 	mov	r5,r18
   233b8:	002d0c80 	call	2d0c8 <__subdf3>
   233bc:	d9000117 	ldw	r4,4(sp)
   233c0:	dac00e17 	ldw	r11,56(sp)
   233c4:	da800f17 	ldw	r10,60(sp)
   233c8:	1825883a 	mov	r18,r3
   233cc:	d8c00717 	ldw	r3,28(sp)
   233d0:	25400044 	addi	r21,r4,1
   233d4:	1021883a 	mov	r16,r2
   233d8:	500d883a 	mov	r6,r10
   233dc:	580f883a 	mov	r7,r11
   233e0:	1803b626 	beq	r3,zero,242bc <_dtoa_r+0x13e8>
   233e4:	0009883a 	mov	r4,zero
   233e8:	014ff834 	movhi	r5,16352
   233ec:	002bd9c0 	call	2bd9c <__divdf3>
   233f0:	d9c00c17 	ldw	r7,48(sp)
   233f4:	a00d883a 	mov	r6,r20
   233f8:	1009883a 	mov	r4,r2
   233fc:	180b883a 	mov	r5,r3
   23400:	002d0c80 	call	2d0c8 <__subdf3>
   23404:	d9000117 	ldw	r4,4(sp)
   23408:	1029883a 	mov	r20,r2
   2340c:	d8801017 	ldw	r2,64(sp)
   23410:	800d883a 	mov	r6,r16
   23414:	900f883a 	mov	r7,r18
   23418:	20800005 	stb	r2,0(r4)
   2341c:	180b883a 	mov	r5,r3
   23420:	a009883a 	mov	r4,r20
   23424:	d8c00c15 	stw	r3,48(sp)
   23428:	002c74c0 	call	2c74c <__gedf2>
   2342c:	0083e716 	blt	zero,r2,243cc <_dtoa_r+0x14f8>
   23430:	0005883a 	mov	r2,zero
   23434:	dd800e15 	stw	r22,56(sp)
   23438:	dc400f15 	stw	r17,60(sp)
   2343c:	dd800d17 	ldw	r22,52(sp)
   23440:	dc400c17 	ldw	r17,48(sp)
   23444:	ddc00d15 	stw	r23,52(sp)
   23448:	dcc00c15 	stw	r19,48(sp)
   2344c:	1027883a 	mov	r19,r2
   23450:	00002606 	br	234ec <_dtoa_r+0x618>
   23454:	9cc00044 	addi	r19,r19,1
   23458:	9d806d0e 	bge	r19,r22,23610 <_dtoa_r+0x73c>
   2345c:	a009883a 	mov	r4,r20
   23460:	880b883a 	mov	r5,r17
   23464:	000d883a 	mov	r6,zero
   23468:	01d00934 	movhi	r7,16420
   2346c:	002c91c0 	call	2c91c <__muldf3>
   23470:	000d883a 	mov	r6,zero
   23474:	01d00934 	movhi	r7,16420
   23478:	8009883a 	mov	r4,r16
   2347c:	900b883a 	mov	r5,r18
   23480:	1029883a 	mov	r20,r2
   23484:	1823883a 	mov	r17,r3
   23488:	002c91c0 	call	2c91c <__muldf3>
   2348c:	180b883a 	mov	r5,r3
   23490:	1009883a 	mov	r4,r2
   23494:	1821883a 	mov	r16,r3
   23498:	1025883a 	mov	r18,r2
   2349c:	002d9d00 	call	2d9d0 <__fixdfsi>
   234a0:	1009883a 	mov	r4,r2
   234a4:	102f883a 	mov	r23,r2
   234a8:	002da500 	call	2da50 <__floatsidf>
   234ac:	9009883a 	mov	r4,r18
   234b0:	800b883a 	mov	r5,r16
   234b4:	100d883a 	mov	r6,r2
   234b8:	180f883a 	mov	r7,r3
   234bc:	002d0c80 	call	2d0c8 <__subdf3>
   234c0:	ad400044 	addi	r21,r21,1
   234c4:	ba000c04 	addi	r8,r23,48
   234c8:	aa3fffc5 	stb	r8,-1(r21)
   234cc:	a00d883a 	mov	r6,r20
   234d0:	880f883a 	mov	r7,r17
   234d4:	1009883a 	mov	r4,r2
   234d8:	180b883a 	mov	r5,r3
   234dc:	1021883a 	mov	r16,r2
   234e0:	1825883a 	mov	r18,r3
   234e4:	002c8340 	call	2c834 <__ledf2>
   234e8:	10040516 	blt	r2,zero,24500 <_dtoa_r+0x162c>
   234ec:	800d883a 	mov	r6,r16
   234f0:	900f883a 	mov	r7,r18
   234f4:	0009883a 	mov	r4,zero
   234f8:	014ffc34 	movhi	r5,16368
   234fc:	002d0c80 	call	2d0c8 <__subdf3>
   23500:	a00d883a 	mov	r6,r20
   23504:	880f883a 	mov	r7,r17
   23508:	1009883a 	mov	r4,r2
   2350c:	180b883a 	mov	r5,r3
   23510:	002c8340 	call	2c834 <__ledf2>
   23514:	103fcf0e 	bge	r2,zero,23454 <_dtoa_r+0x580>
   23518:	d8801117 	ldw	r2,68(sp)
   2351c:	ddc00d17 	ldw	r23,52(sp)
   23520:	d9000117 	ldw	r4,4(sp)
   23524:	10800044 	addi	r2,r2,1
   23528:	d8800415 	stw	r2,16(sp)
   2352c:	a829883a 	mov	r20,r21
   23530:	00000106 	br	23538 <_dtoa_r+0x664>
   23534:	a103da26 	beq	r20,r4,244a0 <_dtoa_r+0x15cc>
   23538:	a0ffffc3 	ldbu	r3,-1(r20)
   2353c:	a02b883a 	mov	r21,r20
   23540:	a53fffc4 	addi	r20,r20,-1
   23544:	18803fcc 	andi	r2,r3,255
   23548:	1080201c 	xori	r2,r2,128
   2354c:	10bfe004 	addi	r2,r2,-128
   23550:	10800e60 	cmpeqi	r2,r2,57
   23554:	103ff71e 	bne	r2,zero,23534 <_dtoa_r+0x660>
   23558:	18c00044 	addi	r3,r3,1
   2355c:	a0c00005 	stb	r3,0(r20)
   23560:	00013f06 	br	23a60 <_dtoa_r+0xb8c>
   23564:	04600034 	movhi	r17,32768
   23568:	8c7fffc4 	addi	r17,r17,-1
   2356c:	9462703a 	and	r17,r18,r17
   23570:	00800044 	movi	r2,1
   23574:	8825883a 	mov	r18,r17
   23578:	80800015 	stw	r2,0(r16)
   2357c:	00dffc34 	movhi	r3,32752
   23580:	909ffc2c 	andhi	r2,r18,32752
   23584:	10fe731e 	bne	r2,r3,22f54 <_dtoa_r+0x80>
   23588:	d9001f17 	ldw	r4,124(sp)
   2358c:	00800434 	movhi	r2,16
   23590:	10bfffc4 	addi	r2,r2,-1
   23594:	9084703a 	and	r2,r18,r2
   23598:	00c9c3c4 	movi	r3,9999
   2359c:	20c00015 	stw	r3,0(r4)
   235a0:	14e6b03a 	or	r19,r2,r19
   235a4:	9800141e 	bne	r19,zero,235f8 <_dtoa_r+0x724>
   235a8:	d8802117 	ldw	r2,132(sp)
   235ac:	10041226 	beq	r2,zero,245f8 <_dtoa_r+0x1724>
   235b0:	008000f4 	movhi	r2,3
   235b4:	1007883a 	mov	r3,r2
   235b8:	18c1de04 	addi	r3,r3,1912
   235bc:	008000f4 	movhi	r2,3
   235c0:	d8c00115 	stw	r3,4(sp)
   235c4:	1081e004 	addi	r2,r2,1920
   235c8:	d8c02117 	ldw	r3,132(sp)
   235cc:	18800015 	stw	r2,0(r3)
   235d0:	003e7206 	br	22f9c <_dtoa_r+0xc8>
   235d4:	01400434 	movhi	r5,16
   235d8:	297fffc4 	addi	r5,r5,-1
   235dc:	894a703a 	and	r5,r17,r5
   235e0:	dd001217 	ldw	r20,72(sp)
   235e4:	9809883a 	mov	r4,r19
   235e8:	294ffc34 	orhi	r5,r5,16368
   235ec:	843f0044 	addi	r16,r16,-1023
   235f0:	d8000a15 	stw	zero,40(sp)
   235f4:	003e9306 	br	23044 <_dtoa_r+0x170>
   235f8:	d8802117 	ldw	r2,132(sp)
   235fc:	1001fe1e 	bne	r2,zero,23df8 <_dtoa_r+0xf24>
   23600:	008000f4 	movhi	r2,3
   23604:	1081dd04 	addi	r2,r2,1908
   23608:	d8800115 	stw	r2,4(sp)
   2360c:	003e6306 	br	22f9c <_dtoa_r+0xc8>
   23610:	dd800e17 	ldw	r22,56(sp)
   23614:	ddc00d17 	ldw	r23,52(sp)
   23618:	dc400f17 	ldw	r17,60(sp)
   2361c:	dcc00c17 	ldw	r19,48(sp)
   23620:	d8801317 	ldw	r2,76(sp)
   23624:	10006e16 	blt	r2,zero,237e0 <_dtoa_r+0x90c>
   23628:	d9000417 	ldw	r4,16(sp)
   2362c:	20c003c8 	cmpgei	r3,r4,15
   23630:	18006b1e 	bne	r3,zero,237e0 <_dtoa_r+0x90c>
   23634:	200690fa 	slli	r3,r4,3
   23638:	008000f4 	movhi	r2,3
   2363c:	10821d04 	addi	r2,r2,2164
   23640:	10c5883a 	add	r2,r2,r3
   23644:	14000017 	ldw	r16,0(r2)
   23648:	14800117 	ldw	r18,4(r2)
   2364c:	d8801e17 	ldw	r2,120(sp)
   23650:	1000150e 	bge	r2,zero,236a8 <_dtoa_r+0x7d4>
   23654:	d8800517 	ldw	r2,20(sp)
   23658:	00801316 	blt	zero,r2,236a8 <_dtoa_r+0x7d4>
   2365c:	d8800517 	ldw	r2,20(sp)
   23660:	1002721e 	bne	r2,zero,2402c <_dtoa_r+0x1158>
   23664:	8009883a 	mov	r4,r16
   23668:	000d883a 	mov	r6,zero
   2366c:	01d00534 	movhi	r7,16404
   23670:	900b883a 	mov	r5,r18
   23674:	002c91c0 	call	2c91c <__muldf3>
   23678:	100d883a 	mov	r6,r2
   2367c:	180f883a 	mov	r7,r3
   23680:	9809883a 	mov	r4,r19
   23684:	880b883a 	mov	r5,r17
   23688:	002c8340 	call	2c834 <__ledf2>
   2368c:	0029883a 	mov	r20,zero
   23690:	0021883a 	mov	r16,zero
   23694:	00820216 	blt	zero,r2,23ea0 <_dtoa_r+0xfcc>
   23698:	d8801e17 	ldw	r2,120(sp)
   2369c:	dd400117 	ldw	r21,4(sp)
   236a0:	00a2303a 	nor	r17,zero,r2
   236a4:	00020406 	br	23eb8 <_dtoa_r+0xfe4>
   236a8:	800d883a 	mov	r6,r16
   236ac:	900f883a 	mov	r7,r18
   236b0:	9809883a 	mov	r4,r19
   236b4:	880b883a 	mov	r5,r17
   236b8:	002bd9c0 	call	2bd9c <__divdf3>
   236bc:	180b883a 	mov	r5,r3
   236c0:	1009883a 	mov	r4,r2
   236c4:	002d9d00 	call	2d9d0 <__fixdfsi>
   236c8:	1009883a 	mov	r4,r2
   236cc:	102b883a 	mov	r21,r2
   236d0:	002da500 	call	2da50 <__floatsidf>
   236d4:	800d883a 	mov	r6,r16
   236d8:	900f883a 	mov	r7,r18
   236dc:	1009883a 	mov	r4,r2
   236e0:	180b883a 	mov	r5,r3
   236e4:	002c91c0 	call	2c91c <__muldf3>
   236e8:	100d883a 	mov	r6,r2
   236ec:	9809883a 	mov	r4,r19
   236f0:	880b883a 	mov	r5,r17
   236f4:	180f883a 	mov	r7,r3
   236f8:	002d0c80 	call	2d0c8 <__subdf3>
   236fc:	d9800117 	ldw	r6,4(sp)
   23700:	dd800517 	ldw	r22,20(sp)
   23704:	1009883a 	mov	r4,r2
   23708:	a8800c04 	addi	r2,r21,48
   2370c:	30800005 	stb	r2,0(r6)
   23710:	b0800060 	cmpeqi	r2,r22,1
   23714:	180b883a 	mov	r5,r3
   23718:	35000044 	addi	r20,r6,1
   2371c:	10029f1e 	bne	r2,zero,2419c <_dtoa_r+0x12c8>
   23720:	04400044 	movi	r17,1
   23724:	ddc00215 	stw	r23,8(sp)
   23728:	00001c06 	br	2379c <_dtoa_r+0x8c8>
   2372c:	800d883a 	mov	r6,r16
   23730:	900f883a 	mov	r7,r18
   23734:	a809883a 	mov	r4,r21
   23738:	980b883a 	mov	r5,r19
   2373c:	002bd9c0 	call	2bd9c <__divdf3>
   23740:	180b883a 	mov	r5,r3
   23744:	1009883a 	mov	r4,r2
   23748:	002d9d00 	call	2d9d0 <__fixdfsi>
   2374c:	1009883a 	mov	r4,r2
   23750:	102f883a 	mov	r23,r2
   23754:	002da500 	call	2da50 <__floatsidf>
   23758:	800d883a 	mov	r6,r16
   2375c:	900f883a 	mov	r7,r18
   23760:	1009883a 	mov	r4,r2
   23764:	180b883a 	mov	r5,r3
   23768:	002c91c0 	call	2c91c <__muldf3>
   2376c:	a809883a 	mov	r4,r21
   23770:	980b883a 	mov	r5,r19
   23774:	100d883a 	mov	r6,r2
   23778:	180f883a 	mov	r7,r3
   2377c:	002d0c80 	call	2d0c8 <__subdf3>
   23780:	b9000c04 	addi	r4,r23,48
   23784:	a1000005 	stb	r4,0(r20)
   23788:	8c400044 	addi	r17,r17,1
   2378c:	a5000044 	addi	r20,r20,1
   23790:	1009883a 	mov	r4,r2
   23794:	180b883a 	mov	r5,r3
   23798:	8d827e26 	beq	r17,r22,24194 <_dtoa_r+0x12c0>
   2379c:	000d883a 	mov	r6,zero
   237a0:	01d00934 	movhi	r7,16420
   237a4:	002c91c0 	call	2c91c <__muldf3>
   237a8:	000d883a 	mov	r6,zero
   237ac:	000f883a 	mov	r7,zero
   237b0:	1009883a 	mov	r4,r2
   237b4:	180b883a 	mov	r5,r3
   237b8:	102b883a 	mov	r21,r2
   237bc:	1827883a 	mov	r19,r3
   237c0:	002c6cc0 	call	2c6cc <__eqdf2>
   237c4:	103fd91e 	bne	r2,zero,2372c <_dtoa_r+0x858>
   237c8:	d8800417 	ldw	r2,16(sp)
   237cc:	ddc00217 	ldw	r23,8(sp)
   237d0:	a02b883a 	mov	r21,r20
   237d4:	10800044 	addi	r2,r2,1
   237d8:	d8800415 	stw	r2,16(sp)
   237dc:	0000a006 	br	23a60 <_dtoa_r+0xb8c>
   237e0:	d8c00717 	ldw	r3,28(sp)
   237e4:	1800e326 	beq	r3,zero,23b74 <_dtoa_r+0xca0>
   237e8:	d8c00217 	ldw	r3,8(sp)
   237ec:	18c00088 	cmpgei	r3,r3,2
   237f0:	1801e026 	beq	r3,zero,23f74 <_dtoa_r+0x10a0>
   237f4:	d8800517 	ldw	r2,20(sp)
   237f8:	153fffc4 	addi	r20,r2,-1
   237fc:	d8800817 	ldw	r2,32(sp)
   23800:	1501bc0e 	bge	r2,r20,23ef4 <_dtoa_r+0x1020>
   23804:	d8800817 	ldw	r2,32(sp)
   23808:	d8c00317 	ldw	r3,12(sp)
   2380c:	dd000815 	stw	r20,32(sp)
   23810:	a085c83a 	sub	r2,r20,r2
   23814:	1885883a 	add	r2,r3,r2
   23818:	d8800315 	stw	r2,12(sp)
   2381c:	0029883a 	mov	r20,zero
   23820:	d8800517 	ldw	r2,20(sp)
   23824:	10028b16 	blt	r2,zero,24254 <_dtoa_r+0x1380>
   23828:	d8c00617 	ldw	r3,24(sp)
   2382c:	b0ad883a 	add	r22,r22,r2
   23830:	1885883a 	add	r2,r3,r2
   23834:	1825883a 	mov	r18,r3
   23838:	d8800615 	stw	r2,24(sp)
   2383c:	01400044 	movi	r5,1
   23840:	b809883a 	mov	r4,r23
   23844:	00263a40 	call	263a4 <__i2b>
   23848:	1021883a 	mov	r16,r2
   2384c:	0480080e 	bge	zero,r18,23870 <_dtoa_r+0x99c>
   23850:	0580070e 	bge	zero,r22,23870 <_dtoa_r+0x99c>
   23854:	9005883a 	mov	r2,r18
   23858:	b4819e16 	blt	r22,r18,23ed4 <_dtoa_r+0x1000>
   2385c:	d8c00617 	ldw	r3,24(sp)
   23860:	90a5c83a 	sub	r18,r18,r2
   23864:	b0adc83a 	sub	r22,r22,r2
   23868:	1887c83a 	sub	r3,r3,r2
   2386c:	d8c00615 	stw	r3,24(sp)
   23870:	d8800817 	ldw	r2,32(sp)
   23874:	10001426 	beq	r2,zero,238c8 <_dtoa_r+0x9f4>
   23878:	d8800717 	ldw	r2,28(sp)
   2387c:	1001ee26 	beq	r2,zero,24038 <_dtoa_r+0x1164>
   23880:	05000e0e 	bge	zero,r20,238bc <_dtoa_r+0x9e8>
   23884:	800b883a 	mov	r5,r16
   23888:	a00d883a 	mov	r6,r20
   2388c:	b809883a 	mov	r4,r23
   23890:	00267180 	call	26718 <__pow5mult>
   23894:	e00d883a 	mov	r6,fp
   23898:	100b883a 	mov	r5,r2
   2389c:	b809883a 	mov	r4,r23
   238a0:	1021883a 	mov	r16,r2
   238a4:	00264540 	call	26454 <__multiply>
   238a8:	102b883a 	mov	r21,r2
   238ac:	e00b883a 	mov	r5,fp
   238b0:	b809883a 	mov	r4,r23
   238b4:	0025fd80 	call	25fd8 <_Bfree>
   238b8:	a839883a 	mov	fp,r21
   238bc:	d8800817 	ldw	r2,32(sp)
   238c0:	150dc83a 	sub	r6,r2,r20
   238c4:	15025e1e 	bne	r2,r20,24240 <_dtoa_r+0x136c>
   238c8:	01400044 	movi	r5,1
   238cc:	b809883a 	mov	r4,r23
   238d0:	00263a40 	call	263a4 <__i2b>
   238d4:	d9800317 	ldw	r6,12(sp)
   238d8:	1029883a 	mov	r20,r2
   238dc:	0180b716 	blt	zero,r6,23bbc <_dtoa_r+0xce8>
   238e0:	d8800217 	ldw	r2,8(sp)
   238e4:	10800088 	cmpgei	r2,r2,2
   238e8:	10014d26 	beq	r2,zero,23e20 <_dtoa_r+0xf4c>
   238ec:	0023883a 	mov	r17,zero
   238f0:	d8c00317 	ldw	r3,12(sp)
   238f4:	00800044 	movi	r2,1
   238f8:	1800b81e 	bne	r3,zero,23bdc <_dtoa_r+0xd08>
   238fc:	1585883a 	add	r2,r2,r22
   23900:	108007cc 	andi	r2,r2,31
   23904:	1000a526 	beq	r2,zero,23b9c <_dtoa_r+0xcc8>
   23908:	00c00804 	movi	r3,32
   2390c:	1887c83a 	sub	r3,r3,r2
   23910:	19000150 	cmplti	r4,r3,5
   23914:	20033c1e 	bne	r4,zero,24608 <_dtoa_r+0x1734>
   23918:	00c00704 	movi	r3,28
   2391c:	1885c83a 	sub	r2,r3,r2
   23920:	d8c00617 	ldw	r3,24(sp)
   23924:	90a5883a 	add	r18,r18,r2
   23928:	b0ad883a 	add	r22,r22,r2
   2392c:	1887883a 	add	r3,r3,r2
   23930:	d8c00615 	stw	r3,24(sp)
   23934:	d8800617 	ldw	r2,24(sp)
   23938:	00809216 	blt	zero,r2,23b84 <_dtoa_r+0xcb0>
   2393c:	0580050e 	bge	zero,r22,23954 <_dtoa_r+0xa80>
   23940:	a00b883a 	mov	r5,r20
   23944:	b00d883a 	mov	r6,r22
   23948:	b809883a 	mov	r4,r23
   2394c:	00268600 	call	26860 <__lshift>
   23950:	1029883a 	mov	r20,r2
   23954:	d8800917 	ldw	r2,36(sp)
   23958:	1001151e 	bne	r2,zero,23db0 <_dtoa_r+0xedc>
   2395c:	d8800517 	ldw	r2,20(sp)
   23960:	0081020e 	bge	zero,r2,23d6c <_dtoa_r+0xe98>
   23964:	d8800717 	ldw	r2,28(sp)
   23968:	1000af1e 	bne	r2,zero,23c28 <_dtoa_r+0xd54>
   2396c:	d8800417 	ldw	r2,16(sp)
   23970:	10800044 	addi	r2,r2,1
   23974:	d8800415 	stw	r2,16(sp)
   23978:	dc800517 	ldw	r18,20(sp)
   2397c:	dd400117 	ldw	r21,4(sp)
   23980:	04400044 	movi	r17,1
   23984:	00000706 	br	239a4 <_dtoa_r+0xad0>
   23988:	e00b883a 	mov	r5,fp
   2398c:	000f883a 	mov	r7,zero
   23990:	01800284 	movi	r6,10
   23994:	b809883a 	mov	r4,r23
   23998:	0025ffc0 	call	25ffc <__multadd>
   2399c:	1039883a 	mov	fp,r2
   239a0:	8c400044 	addi	r17,r17,1
   239a4:	a00b883a 	mov	r5,r20
   239a8:	e009883a 	mov	r4,fp
   239ac:	0022cb40 	call	22cb4 <quorem>
   239b0:	14c00c04 	addi	r19,r2,48
   239b4:	ac45883a 	add	r2,r21,r17
   239b8:	14ffffc5 	stb	r19,-1(r2)
   239bc:	8cbff216 	blt	r17,r18,23988 <_dtoa_r+0xab4>
   239c0:	d8800517 	ldw	r2,20(sp)
   239c4:	0081510e 	bge	zero,r2,23f0c <_dtoa_r+0x1038>
   239c8:	d8c00117 	ldw	r3,4(sp)
   239cc:	0023883a 	mov	r17,zero
   239d0:	18ab883a 	add	r21,r3,r2
   239d4:	e00b883a 	mov	r5,fp
   239d8:	01800044 	movi	r6,1
   239dc:	b809883a 	mov	r4,r23
   239e0:	00268600 	call	26860 <__lshift>
   239e4:	1009883a 	mov	r4,r2
   239e8:	a00b883a 	mov	r5,r20
   239ec:	1039883a 	mov	fp,r2
   239f0:	00269e80 	call	269e8 <__mcmp>
   239f4:	a93fffc3 	ldbu	r4,-1(r21)
   239f8:	0081490e 	bge	zero,r2,23f20 <_dtoa_r+0x104c>
   239fc:	d9400117 	ldw	r5,4(sp)
   23a00:	00000306 	br	23a10 <_dtoa_r+0xb3c>
   23a04:	19415426 	beq	r3,r5,23f58 <_dtoa_r+0x1084>
   23a08:	193fffc3 	ldbu	r4,-1(r3)
   23a0c:	182b883a 	mov	r21,r3
   23a10:	20803fcc 	andi	r2,r4,255
   23a14:	1080201c 	xori	r2,r2,128
   23a18:	10bfe004 	addi	r2,r2,-128
   23a1c:	10800e60 	cmpeqi	r2,r2,57
   23a20:	a8ffffc4 	addi	r3,r21,-1
   23a24:	103ff71e 	bne	r2,zero,23a04 <_dtoa_r+0xb30>
   23a28:	21000044 	addi	r4,r4,1
   23a2c:	19000005 	stb	r4,0(r3)
   23a30:	a00b883a 	mov	r5,r20
   23a34:	b809883a 	mov	r4,r23
   23a38:	0025fd80 	call	25fd8 <_Bfree>
   23a3c:	80000826 	beq	r16,zero,23a60 <_dtoa_r+0xb8c>
   23a40:	88000426 	beq	r17,zero,23a54 <_dtoa_r+0xb80>
   23a44:	8c000326 	beq	r17,r16,23a54 <_dtoa_r+0xb80>
   23a48:	880b883a 	mov	r5,r17
   23a4c:	b809883a 	mov	r4,r23
   23a50:	0025fd80 	call	25fd8 <_Bfree>
   23a54:	800b883a 	mov	r5,r16
   23a58:	b809883a 	mov	r4,r23
   23a5c:	0025fd80 	call	25fd8 <_Bfree>
   23a60:	e00b883a 	mov	r5,fp
   23a64:	b809883a 	mov	r4,r23
   23a68:	0025fd80 	call	25fd8 <_Bfree>
   23a6c:	d8801f17 	ldw	r2,124(sp)
   23a70:	d8c00417 	ldw	r3,16(sp)
   23a74:	a8000005 	stb	zero,0(r21)
   23a78:	10c00015 	stw	r3,0(r2)
   23a7c:	d8802117 	ldw	r2,132(sp)
   23a80:	103d4626 	beq	r2,zero,22f9c <_dtoa_r+0xc8>
   23a84:	15400015 	stw	r21,0(r2)
   23a88:	003d4406 	br	22f9c <_dtoa_r+0xc8>
   23a8c:	d8000915 	stw	zero,36(sp)
   23a90:	b0002416 	blt	r22,zero,23b24 <_dtoa_r+0xc50>
   23a94:	d8000615 	stw	zero,24(sp)
   23a98:	d8800317 	ldw	r2,12(sp)
   23a9c:	d8c00217 	ldw	r3,8(sp)
   23aa0:	d8000815 	stw	zero,32(sp)
   23aa4:	b0ad883a 	add	r22,r22,r2
   23aa8:	d8800415 	stw	r2,16(sp)
   23aac:	188002a8 	cmpgeui	r2,r3,10
   23ab0:	103db326 	beq	r2,zero,23180 <_dtoa_r+0x2ac>
   23ab4:	00800044 	movi	r2,1
   23ab8:	d8800715 	stw	r2,28(sp)
   23abc:	00bfffc4 	movi	r2,-1
   23ac0:	04000044 	movi	r16,1
   23ac4:	d8000215 	stw	zero,8(sp)
   23ac8:	d8800515 	stw	r2,20(sp)
   23acc:	d8001e15 	stw	zero,120(sp)
   23ad0:	d8800517 	ldw	r2,20(sp)
   23ad4:	b8001115 	stw	zero,68(r23)
   23ad8:	000b883a 	mov	r5,zero
   23adc:	d8800b15 	stw	r2,44(sp)
   23ae0:	003dc406 	br	231f4 <_dtoa_r+0x320>
   23ae4:	188000e0 	cmpeqi	r2,r3,3
   23ae8:	d8000715 	stw	zero,28(sp)
   23aec:	1002ac26 	beq	r2,zero,245a0 <_dtoa_r+0x16cc>
   23af0:	d8801e17 	ldw	r2,120(sp)
   23af4:	d8c00417 	ldw	r3,16(sp)
   23af8:	10c5883a 	add	r2,r2,r3
   23afc:	d8800b15 	stw	r2,44(sp)
   23b00:	10800044 	addi	r2,r2,1
   23b04:	d8800515 	stw	r2,20(sp)
   23b08:	100d883a 	mov	r6,r2
   23b0c:	00bdae16 	blt	zero,r2,231c8 <_dtoa_r+0x2f4>
   23b10:	01800044 	movi	r6,1
   23b14:	003dac06 	br	231c8 <_dtoa_r+0x2f4>
   23b18:	00800044 	movi	r2,1
   23b1c:	d8800915 	stw	r2,36(sp)
   23b20:	b03d890e 	bge	r22,zero,23148 <_dtoa_r+0x274>
   23b24:	00800044 	movi	r2,1
   23b28:	1405c83a 	sub	r2,r2,r16
   23b2c:	d8800615 	stw	r2,24(sp)
   23b30:	002d883a 	mov	r22,zero
   23b34:	003d8506 	br	2314c <_dtoa_r+0x278>
   23b38:	a809883a 	mov	r4,r21
   23b3c:	002da500 	call	2da50 <__floatsidf>
   23b40:	900d883a 	mov	r6,r18
   23b44:	b00f883a 	mov	r7,r22
   23b48:	1009883a 	mov	r4,r2
   23b4c:	180b883a 	mov	r5,r3
   23b50:	002c6cc0 	call	2c6cc <__eqdf2>
   23b54:	103d6926 	beq	r2,zero,230fc <_dtoa_r+0x228>
   23b58:	a8bfffc4 	addi	r2,r21,-1
   23b5c:	d8800315 	stw	r2,12(sp)
   23b60:	003d6606 	br	230fc <_dtoa_r+0x228>
   23b64:	008000f4 	movhi	r2,3
   23b68:	1081d404 	addi	r2,r2,1872
   23b6c:	d8800115 	stw	r2,4(sp)
   23b70:	003d0a06 	br	22f9c <_dtoa_r+0xc8>
   23b74:	dd000817 	ldw	r20,32(sp)
   23b78:	dc800617 	ldw	r18,24(sp)
   23b7c:	0021883a 	mov	r16,zero
   23b80:	003f3206 	br	2384c <_dtoa_r+0x978>
   23b84:	e00b883a 	mov	r5,fp
   23b88:	100d883a 	mov	r6,r2
   23b8c:	b809883a 	mov	r4,r23
   23b90:	00268600 	call	26860 <__lshift>
   23b94:	1039883a 	mov	fp,r2
   23b98:	003f6806 	br	2393c <_dtoa_r+0xa68>
   23b9c:	00800704 	movi	r2,28
   23ba0:	003f5f06 	br	23920 <_dtoa_r+0xa4c>
   23ba4:	01000804 	movi	r4,32
   23ba8:	2089c83a 	sub	r4,r4,r2
   23bac:	9908983a 	sll	r4,r19,r4
   23bb0:	003d1d06 	br	23028 <_dtoa_r+0x154>
   23bb4:	04000044 	movi	r16,1
   23bb8:	003d7606 	br	23194 <_dtoa_r+0x2c0>
   23bbc:	100b883a 	mov	r5,r2
   23bc0:	b809883a 	mov	r4,r23
   23bc4:	00267180 	call	26718 <__pow5mult>
   23bc8:	d8c00217 	ldw	r3,8(sp)
   23bcc:	1029883a 	mov	r20,r2
   23bd0:	18c00090 	cmplti	r3,r3,2
   23bd4:	1801511e 	bne	r3,zero,2411c <_dtoa_r+0x1248>
   23bd8:	0023883a 	mov	r17,zero
   23bdc:	a0800417 	ldw	r2,16(r20)
   23be0:	10800104 	addi	r2,r2,4
   23be4:	100490ba 	slli	r2,r2,2
   23be8:	a085883a 	add	r2,r20,r2
   23bec:	11000017 	ldw	r4,0(r2)
   23bf0:	00262900 	call	26290 <__hi0bits>
   23bf4:	00c00804 	movi	r3,32
   23bf8:	1885c83a 	sub	r2,r3,r2
   23bfc:	003f3f06 	br	238fc <_dtoa_r+0xa28>
   23c00:	800b883a 	mov	r5,r16
   23c04:	000f883a 	mov	r7,zero
   23c08:	01800284 	movi	r6,10
   23c0c:	b809883a 	mov	r4,r23
   23c10:	0025ffc0 	call	25ffc <__multadd>
   23c14:	1021883a 	mov	r16,r2
   23c18:	d8800b17 	ldw	r2,44(sp)
   23c1c:	00824b0e 	bge	zero,r2,2454c <_dtoa_r+0x1678>
   23c20:	dd400415 	stw	r21,16(sp)
   23c24:	d8800515 	stw	r2,20(sp)
   23c28:	0480ac16 	blt	zero,r18,23edc <_dtoa_r+0x1008>
   23c2c:	8801731e 	bne	r17,zero,241fc <_dtoa_r+0x1328>
   23c30:	8025883a 	mov	r18,r16
   23c34:	dd800117 	ldw	r22,4(sp)
   23c38:	d9000517 	ldw	r4,20(sp)
   23c3c:	98c0004c 	andi	r3,r19,1
   23c40:	b0bfffc4 	addi	r2,r22,-1
   23c44:	1105883a 	add	r2,r2,r4
   23c48:	d8800515 	stw	r2,20(sp)
   23c4c:	d8800217 	ldw	r2,8(sp)
   23c50:	d8c00815 	stw	r3,32(sp)
   23c54:	1884b03a 	or	r2,r3,r2
   23c58:	d8800715 	stw	r2,28(sp)
   23c5c:	00002906 	br	23d04 <_dtoa_r+0xe30>
   23c60:	e009883a 	mov	r4,fp
   23c64:	00269e80 	call	269e8 <__mcmp>
   23c68:	980b883a 	mov	r5,r19
   23c6c:	b809883a 	mov	r4,r23
   23c70:	d8800315 	stw	r2,12(sp)
   23c74:	0025fd80 	call	25fd8 <_Bfree>
   23c78:	d8800317 	ldw	r2,12(sp)
   23c7c:	1000021e 	bne	r2,zero,23c88 <_dtoa_r+0xdb4>
   23c80:	d8c00717 	ldw	r3,28(sp)
   23c84:	18022326 	beq	r3,zero,24514 <_dtoa_r+0x1640>
   23c88:	b4c00044 	addi	r19,r22,1
   23c8c:	88012916 	blt	r17,zero,24134 <_dtoa_r+0x1260>
   23c90:	d8c00217 	ldw	r3,8(sp)
   23c94:	88e2b03a 	or	r17,r17,r3
   23c98:	d8c00817 	ldw	r3,32(sp)
   23c9c:	1c62b03a 	or	r17,r3,r17
   23ca0:	88012426 	beq	r17,zero,24134 <_dtoa_r+0x1260>
   23ca4:	00816f16 	blt	zero,r2,24264 <_dtoa_r+0x1390>
   23ca8:	d8800517 	ldw	r2,20(sp)
   23cac:	b5400005 	stb	r21,0(r22)
   23cb0:	15817926 	beq	r2,r22,24298 <_dtoa_r+0x13c4>
   23cb4:	e00b883a 	mov	r5,fp
   23cb8:	000f883a 	mov	r7,zero
   23cbc:	01800284 	movi	r6,10
   23cc0:	b809883a 	mov	r4,r23
   23cc4:	0025ffc0 	call	25ffc <__multadd>
   23cc8:	1039883a 	mov	fp,r2
   23ccc:	800b883a 	mov	r5,r16
   23cd0:	000f883a 	mov	r7,zero
   23cd4:	01800284 	movi	r6,10
   23cd8:	b809883a 	mov	r4,r23
   23cdc:	84801f26 	beq	r16,r18,23d5c <_dtoa_r+0xe88>
   23ce0:	0025ffc0 	call	25ffc <__multadd>
   23ce4:	900b883a 	mov	r5,r18
   23ce8:	000f883a 	mov	r7,zero
   23cec:	01800284 	movi	r6,10
   23cf0:	b809883a 	mov	r4,r23
   23cf4:	1021883a 	mov	r16,r2
   23cf8:	0025ffc0 	call	25ffc <__multadd>
   23cfc:	1025883a 	mov	r18,r2
   23d00:	982d883a 	mov	r22,r19
   23d04:	a00b883a 	mov	r5,r20
   23d08:	e009883a 	mov	r4,fp
   23d0c:	0022cb40 	call	22cb4 <quorem>
   23d10:	800b883a 	mov	r5,r16
   23d14:	e009883a 	mov	r4,fp
   23d18:	102b883a 	mov	r21,r2
   23d1c:	d8800615 	stw	r2,24(sp)
   23d20:	00269e80 	call	269e8 <__mcmp>
   23d24:	a00b883a 	mov	r5,r20
   23d28:	900d883a 	mov	r6,r18
   23d2c:	b809883a 	mov	r4,r23
   23d30:	1023883a 	mov	r17,r2
   23d34:	0026a400 	call	26a40 <__mdiff>
   23d38:	1027883a 	mov	r19,r2
   23d3c:	10800317 	ldw	r2,12(r2)
   23d40:	ad400c04 	addi	r21,r21,48
   23d44:	980b883a 	mov	r5,r19
   23d48:	103fc526 	beq	r2,zero,23c60 <_dtoa_r+0xd8c>
   23d4c:	b809883a 	mov	r4,r23
   23d50:	0025fd80 	call	25fd8 <_Bfree>
   23d54:	00800044 	movi	r2,1
   23d58:	003fcb06 	br	23c88 <_dtoa_r+0xdb4>
   23d5c:	0025ffc0 	call	25ffc <__multadd>
   23d60:	1021883a 	mov	r16,r2
   23d64:	1025883a 	mov	r18,r2
   23d68:	003fe506 	br	23d00 <_dtoa_r+0xe2c>
   23d6c:	d8800217 	ldw	r2,8(sp)
   23d70:	108000d0 	cmplti	r2,r2,3
   23d74:	10003e26 	beq	r2,zero,23e70 <_dtoa_r+0xf9c>
   23d78:	d8800717 	ldw	r2,28(sp)
   23d7c:	103faa1e 	bne	r2,zero,23c28 <_dtoa_r+0xd54>
   23d80:	a00b883a 	mov	r5,r20
   23d84:	e009883a 	mov	r4,fp
   23d88:	0022cb40 	call	22cb4 <quorem>
   23d8c:	14c00c04 	addi	r19,r2,48
   23d90:	d8800117 	ldw	r2,4(sp)
   23d94:	0023883a 	mov	r17,zero
   23d98:	15400044 	addi	r21,r2,1
   23d9c:	14c00005 	stb	r19,0(r2)
   23da0:	d8800417 	ldw	r2,16(sp)
   23da4:	10800044 	addi	r2,r2,1
   23da8:	d8800415 	stw	r2,16(sp)
   23dac:	003f0906 	br	239d4 <_dtoa_r+0xb00>
   23db0:	a00b883a 	mov	r5,r20
   23db4:	e009883a 	mov	r4,fp
   23db8:	00269e80 	call	269e8 <__mcmp>
   23dbc:	103ee70e 	bge	r2,zero,2395c <_dtoa_r+0xa88>
   23dc0:	e00b883a 	mov	r5,fp
   23dc4:	000f883a 	mov	r7,zero
   23dc8:	01800284 	movi	r6,10
   23dcc:	b809883a 	mov	r4,r23
   23dd0:	0025ffc0 	call	25ffc <__multadd>
   23dd4:	d8c00417 	ldw	r3,16(sp)
   23dd8:	1039883a 	mov	fp,r2
   23ddc:	d8800717 	ldw	r2,28(sp)
   23de0:	1d7fffc4 	addi	r21,r3,-1
   23de4:	103f861e 	bne	r2,zero,23c00 <_dtoa_r+0xd2c>
   23de8:	d8800b17 	ldw	r2,44(sp)
   23dec:	0081d20e 	bge	zero,r2,24538 <_dtoa_r+0x1664>
   23df0:	d8800515 	stw	r2,20(sp)
   23df4:	003ee006 	br	23978 <_dtoa_r+0xaa4>
   23df8:	008000f4 	movhi	r2,3
   23dfc:	1007883a 	mov	r3,r2
   23e00:	18c1dd04 	addi	r3,r3,1908
   23e04:	008000f4 	movhi	r2,3
   23e08:	d8c00115 	stw	r3,4(sp)
   23e0c:	1081ddc4 	addi	r2,r2,1911
   23e10:	003ded06 	br	235c8 <_dtoa_r+0x6f4>
   23e14:	00800044 	movi	r2,1
   23e18:	d8800715 	stw	r2,28(sp)
   23e1c:	003f3406 	br	23af0 <_dtoa_r+0xc1c>
   23e20:	983eb21e 	bne	r19,zero,238ec <_dtoa_r+0xa18>
   23e24:	00800434 	movhi	r2,16
   23e28:	10bfffc4 	addi	r2,r2,-1
   23e2c:	8884703a 	and	r2,r17,r2
   23e30:	103eae1e 	bne	r2,zero,238ec <_dtoa_r+0xa18>
   23e34:	8c5ffc2c 	andhi	r17,r17,32752
   23e38:	883eac26 	beq	r17,zero,238ec <_dtoa_r+0xa18>
   23e3c:	d8800617 	ldw	r2,24(sp)
   23e40:	b5800044 	addi	r22,r22,1
   23e44:	04400044 	movi	r17,1
   23e48:	10800044 	addi	r2,r2,1
   23e4c:	d8800615 	stw	r2,24(sp)
   23e50:	003ea706 	br	238f0 <_dtoa_r+0xa1c>
   23e54:	00800044 	movi	r2,1
   23e58:	d8800515 	stw	r2,20(sp)
   23e5c:	d8801e15 	stw	r2,120(sp)
   23e60:	003f1b06 	br	23ad0 <_dtoa_r+0xbfc>
   23e64:	d8800b17 	ldw	r2,44(sp)
   23e68:	dd400415 	stw	r21,16(sp)
   23e6c:	d8800515 	stw	r2,20(sp)
   23e70:	d8800517 	ldw	r2,20(sp)
   23e74:	103e081e 	bne	r2,zero,23698 <_dtoa_r+0x7c4>
   23e78:	a00b883a 	mov	r5,r20
   23e7c:	b809883a 	mov	r4,r23
   23e80:	000f883a 	mov	r7,zero
   23e84:	01800144 	movi	r6,5
   23e88:	0025ffc0 	call	25ffc <__multadd>
   23e8c:	100b883a 	mov	r5,r2
   23e90:	e009883a 	mov	r4,fp
   23e94:	1029883a 	mov	r20,r2
   23e98:	00269e80 	call	269e8 <__mcmp>
   23e9c:	00bdfe0e 	bge	zero,r2,23698 <_dtoa_r+0x7c4>
   23ea0:	d8c00117 	ldw	r3,4(sp)
   23ea4:	00800c44 	movi	r2,49
   23ea8:	18800005 	stb	r2,0(r3)
   23eac:	d8800417 	ldw	r2,16(sp)
   23eb0:	1d400044 	addi	r21,r3,1
   23eb4:	14400044 	addi	r17,r2,1
   23eb8:	a00b883a 	mov	r5,r20
   23ebc:	b809883a 	mov	r4,r23
   23ec0:	0025fd80 	call	25fd8 <_Bfree>
   23ec4:	88800044 	addi	r2,r17,1
   23ec8:	d8800415 	stw	r2,16(sp)
   23ecc:	803ee11e 	bne	r16,zero,23a54 <_dtoa_r+0xb80>
   23ed0:	003ee306 	br	23a60 <_dtoa_r+0xb8c>
   23ed4:	b005883a 	mov	r2,r22
   23ed8:	003e6006 	br	2385c <_dtoa_r+0x988>
   23edc:	800b883a 	mov	r5,r16
   23ee0:	900d883a 	mov	r6,r18
   23ee4:	b809883a 	mov	r4,r23
   23ee8:	00268600 	call	26860 <__lshift>
   23eec:	1021883a 	mov	r16,r2
   23ef0:	003f4e06 	br	23c2c <_dtoa_r+0xd58>
   23ef4:	1529c83a 	sub	r20,r2,r20
   23ef8:	003e4906 	br	23820 <_dtoa_r+0x94c>
   23efc:	dcc00c15 	stw	r19,48(sp)
   23f00:	8825883a 	mov	r18,r17
   23f04:	05400084 	movi	r21,2
   23f08:	003cdf06 	br	23288 <_dtoa_r+0x3b4>
   23f0c:	00800044 	movi	r2,1
   23f10:	003ead06 	br	239c8 <_dtoa_r+0xaf4>
   23f14:	00800044 	movi	r2,1
   23f18:	d8800715 	stw	r2,28(sp)
   23f1c:	003ca506 	br	231b4 <_dtoa_r+0x2e0>
   23f20:	1000021e 	bne	r2,zero,23f2c <_dtoa_r+0x1058>
   23f24:	98c0004c 	andi	r3,r19,1
   23f28:	183eb41e 	bne	r3,zero,239fc <_dtoa_r+0xb28>
   23f2c:	2005883a 	mov	r2,r4
   23f30:	00000206 	br	23f3c <_dtoa_r+0x1068>
   23f34:	a8bfff83 	ldbu	r2,-2(r21)
   23f38:	182b883a 	mov	r21,r3
   23f3c:	10803fcc 	andi	r2,r2,255
   23f40:	1080201c 	xori	r2,r2,128
   23f44:	10bfe004 	addi	r2,r2,-128
   23f48:	10800c18 	cmpnei	r2,r2,48
   23f4c:	a8ffffc4 	addi	r3,r21,-1
   23f50:	103ff826 	beq	r2,zero,23f34 <_dtoa_r+0x1060>
   23f54:	003eb606 	br	23a30 <_dtoa_r+0xb5c>
   23f58:	d8c00117 	ldw	r3,4(sp)
   23f5c:	00800c44 	movi	r2,49
   23f60:	18800005 	stb	r2,0(r3)
   23f64:	d8800417 	ldw	r2,16(sp)
   23f68:	10800044 	addi	r2,r2,1
   23f6c:	d8800415 	stw	r2,16(sp)
   23f70:	003eaf06 	br	23a30 <_dtoa_r+0xb5c>
   23f74:	d8c00a17 	ldw	r3,40(sp)
   23f78:	18011826 	beq	r3,zero,243dc <_dtoa_r+0x1508>
   23f7c:	d8c00617 	ldw	r3,24(sp)
   23f80:	10810cc4 	addi	r2,r2,1075
   23f84:	b0ad883a 	add	r22,r22,r2
   23f88:	1885883a 	add	r2,r3,r2
   23f8c:	dd000817 	ldw	r20,32(sp)
   23f90:	1825883a 	mov	r18,r3
   23f94:	d8800615 	stw	r2,24(sp)
   23f98:	003e2806 	br	2383c <_dtoa_r+0x968>
   23f9c:	a809883a 	mov	r4,r21
   23fa0:	002da500 	call	2da50 <__floatsidf>
   23fa4:	800d883a 	mov	r6,r16
   23fa8:	900f883a 	mov	r7,r18
   23fac:	1009883a 	mov	r4,r2
   23fb0:	180b883a 	mov	r5,r3
   23fb4:	002c91c0 	call	2c91c <__muldf3>
   23fb8:	000d883a 	mov	r6,zero
   23fbc:	01d00734 	movhi	r7,16412
   23fc0:	1009883a 	mov	r4,r2
   23fc4:	180b883a 	mov	r5,r3
   23fc8:	002b4ac0 	call	2b4ac <__adddf3>
   23fcc:	1029883a 	mov	r20,r2
   23fd0:	00bf3034 	movhi	r2,64704
   23fd4:	1885883a 	add	r2,r3,r2
   23fd8:	d8800c15 	stw	r2,48(sp)
   23fdc:	8009883a 	mov	r4,r16
   23fe0:	900b883a 	mov	r5,r18
   23fe4:	000d883a 	mov	r6,zero
   23fe8:	01d00534 	movhi	r7,16404
   23fec:	002d0c80 	call	2d0c8 <__subdf3>
   23ff0:	dd400c17 	ldw	r21,48(sp)
   23ff4:	a00d883a 	mov	r6,r20
   23ff8:	1009883a 	mov	r4,r2
   23ffc:	a80f883a 	mov	r7,r21
   24000:	180b883a 	mov	r5,r3
   24004:	1025883a 	mov	r18,r2
   24008:	1821883a 	mov	r16,r3
   2400c:	002c74c0 	call	2c74c <__gedf2>
   24010:	00812f16 	blt	zero,r2,244d0 <_dtoa_r+0x15fc>
   24014:	a9e0003c 	xorhi	r7,r21,32768
   24018:	a00d883a 	mov	r6,r20
   2401c:	9009883a 	mov	r4,r18
   24020:	800b883a 	mov	r5,r16
   24024:	002c8340 	call	2c834 <__ledf2>
   24028:	103d7d0e 	bge	r2,zero,23620 <_dtoa_r+0x74c>
   2402c:	0029883a 	mov	r20,zero
   24030:	0021883a 	mov	r16,zero
   24034:	003d9806 	br	23698 <_dtoa_r+0x7c4>
   24038:	d9800817 	ldw	r6,32(sp)
   2403c:	e00b883a 	mov	r5,fp
   24040:	b809883a 	mov	r4,r23
   24044:	00267180 	call	26718 <__pow5mult>
   24048:	1039883a 	mov	fp,r2
   2404c:	003e1e06 	br	238c8 <_dtoa_r+0x9f4>
   24050:	d8800417 	ldw	r2,16(sp)
   24054:	1000ed26 	beq	r2,zero,2440c <_dtoa_r+0x1538>
   24058:	00a9c83a 	sub	r20,zero,r2
   2405c:	a08003cc 	andi	r2,r20,15
   24060:	100690fa 	slli	r3,r2,3
   24064:	008000f4 	movhi	r2,3
   24068:	10821d04 	addi	r2,r2,2164
   2406c:	10c5883a 	add	r2,r2,r3
   24070:	11800017 	ldw	r6,0(r2)
   24074:	11c00117 	ldw	r7,4(r2)
   24078:	a029d13a 	srai	r20,r20,4
   2407c:	9809883a 	mov	r4,r19
   24080:	880b883a 	mov	r5,r17
   24084:	002c91c0 	call	2c91c <__muldf3>
   24088:	1021883a 	mov	r16,r2
   2408c:	1825883a 	mov	r18,r3
   24090:	a0013826 	beq	r20,zero,24574 <_dtoa_r+0x16a0>
   24094:	020000f4 	movhi	r8,3
   24098:	05400084 	movi	r21,2
   2409c:	42021304 	addi	r8,r8,2124
   240a0:	1009883a 	mov	r4,r2
   240a4:	9805883a 	mov	r2,r19
   240a8:	180b883a 	mov	r5,r3
   240ac:	dc000c15 	stw	r16,48(sp)
   240b0:	8827883a 	mov	r19,r17
   240b4:	0007883a 	mov	r3,zero
   240b8:	a823883a 	mov	r17,r21
   240bc:	4021883a 	mov	r16,r8
   240c0:	102b883a 	mov	r21,r2
   240c4:	a180004c 	andi	r6,r20,1
   240c8:	30000726 	beq	r6,zero,240e8 <_dtoa_r+0x1214>
   240cc:	81800017 	ldw	r6,0(r16)
   240d0:	81c00117 	ldw	r7,4(r16)
   240d4:	8c400044 	addi	r17,r17,1
   240d8:	002c91c0 	call	2c91c <__muldf3>
   240dc:	180b883a 	mov	r5,r3
   240e0:	1009883a 	mov	r4,r2
   240e4:	00c00044 	movi	r3,1
   240e8:	a029d07a 	srai	r20,r20,1
   240ec:	84000204 	addi	r16,r16,8
   240f0:	a03ff41e 	bne	r20,zero,240c4 <_dtoa_r+0x11f0>
   240f4:	a805883a 	mov	r2,r21
   240f8:	18c03fcc 	andi	r3,r3,255
   240fc:	882b883a 	mov	r21,r17
   24100:	dc000c17 	ldw	r16,48(sp)
   24104:	9823883a 	mov	r17,r19
   24108:	1027883a 	mov	r19,r2
   2410c:	183c7726 	beq	r3,zero,232ec <_dtoa_r+0x418>
   24110:	2021883a 	mov	r16,r4
   24114:	2825883a 	mov	r18,r5
   24118:	003c7406 	br	232ec <_dtoa_r+0x418>
   2411c:	983eae1e 	bne	r19,zero,23bd8 <_dtoa_r+0xd04>
   24120:	00800434 	movhi	r2,16
   24124:	10bfffc4 	addi	r2,r2,-1
   24128:	8884703a 	and	r2,r17,r2
   2412c:	103f4126 	beq	r2,zero,23e34 <_dtoa_r+0xf60>
   24130:	003ea906 	br	23bd8 <_dtoa_r+0xd04>
   24134:	9807883a 	mov	r3,r19
   24138:	a827883a 	mov	r19,r21
   2413c:	182b883a 	mov	r21,r3
   24140:	d8c00417 	ldw	r3,16(sp)
   24144:	18c00044 	addi	r3,r3,1
   24148:	d8c00415 	stw	r3,16(sp)
   2414c:	00800d0e 	bge	zero,r2,24184 <_dtoa_r+0x12b0>
   24150:	e00b883a 	mov	r5,fp
   24154:	b809883a 	mov	r4,r23
   24158:	01800044 	movi	r6,1
   2415c:	00268600 	call	26860 <__lshift>
   24160:	a00b883a 	mov	r5,r20
   24164:	1009883a 	mov	r4,r2
   24168:	1039883a 	mov	fp,r2
   2416c:	00269e80 	call	269e8 <__mcmp>
   24170:	0080df0e 	bge	zero,r2,244f0 <_dtoa_r+0x161c>
   24174:	98c00e60 	cmpeqi	r3,r19,57
   24178:	1800ce1e 	bne	r3,zero,244b4 <_dtoa_r+0x15e0>
   2417c:	d8800617 	ldw	r2,24(sp)
   24180:	14c00c44 	addi	r19,r2,49
   24184:	8023883a 	mov	r17,r16
   24188:	b4c00005 	stb	r19,0(r22)
   2418c:	9021883a 	mov	r16,r18
   24190:	003e2706 	br	23a30 <_dtoa_r+0xb5c>
   24194:	b82b883a 	mov	r21,r23
   24198:	ddc00217 	ldw	r23,8(sp)
   2419c:	200d883a 	mov	r6,r4
   241a0:	280f883a 	mov	r7,r5
   241a4:	002b4ac0 	call	2b4ac <__adddf3>
   241a8:	180b883a 	mov	r5,r3
   241ac:	800d883a 	mov	r6,r16
   241b0:	900f883a 	mov	r7,r18
   241b4:	1009883a 	mov	r4,r2
   241b8:	1823883a 	mov	r17,r3
   241bc:	1027883a 	mov	r19,r2
   241c0:	002c74c0 	call	2c74c <__gedf2>
   241c4:	d8c00417 	ldw	r3,16(sp)
   241c8:	18c00044 	addi	r3,r3,1
   241cc:	d8c00415 	stw	r3,16(sp)
   241d0:	00808c16 	blt	zero,r2,24404 <_dtoa_r+0x1530>
   241d4:	800d883a 	mov	r6,r16
   241d8:	900f883a 	mov	r7,r18
   241dc:	9809883a 	mov	r4,r19
   241e0:	880b883a 	mov	r5,r17
   241e4:	002c6cc0 	call	2c6cc <__eqdf2>
   241e8:	1000021e 	bne	r2,zero,241f4 <_dtoa_r+0x1320>
   241ec:	ad40004c 	andi	r21,r21,1
   241f0:	a800841e 	bne	r21,zero,24404 <_dtoa_r+0x1530>
   241f4:	a02b883a 	mov	r21,r20
   241f8:	003e1906 	br	23a60 <_dtoa_r+0xb8c>
   241fc:	81400117 	ldw	r5,4(r16)
   24200:	b809883a 	mov	r4,r23
   24204:	0025f340 	call	25f34 <_Balloc>
   24208:	1023883a 	mov	r17,r2
   2420c:	1000f326 	beq	r2,zero,245dc <_dtoa_r+0x1708>
   24210:	81800417 	ldw	r6,16(r16)
   24214:	81400304 	addi	r5,r16,12
   24218:	11000304 	addi	r4,r2,12
   2421c:	31800084 	addi	r6,r6,2
   24220:	300c90ba 	slli	r6,r6,2
   24224:	0025d440 	call	25d44 <memcpy>
   24228:	01800044 	movi	r6,1
   2422c:	880b883a 	mov	r5,r17
   24230:	b809883a 	mov	r4,r23
   24234:	00268600 	call	26860 <__lshift>
   24238:	1025883a 	mov	r18,r2
   2423c:	003e7d06 	br	23c34 <_dtoa_r+0xd60>
   24240:	e00b883a 	mov	r5,fp
   24244:	b809883a 	mov	r4,r23
   24248:	00267180 	call	26718 <__pow5mult>
   2424c:	1039883a 	mov	fp,r2
   24250:	003d9d06 	br	238c8 <_dtoa_r+0x9f4>
   24254:	d8800617 	ldw	r2,24(sp)
   24258:	d8c00517 	ldw	r3,20(sp)
   2425c:	10e5c83a 	sub	r18,r2,r3
   24260:	003d7606 	br	2383c <_dtoa_r+0x968>
   24264:	d8c00417 	ldw	r3,16(sp)
   24268:	9805883a 	mov	r2,r19
   2426c:	a827883a 	mov	r19,r21
   24270:	18c00044 	addi	r3,r3,1
   24274:	102b883a 	mov	r21,r2
   24278:	d8c00415 	stw	r3,16(sp)
   2427c:	98800e58 	cmpnei	r2,r19,57
   24280:	10008c26 	beq	r2,zero,244b4 <_dtoa_r+0x15e0>
   24284:	98c00044 	addi	r3,r19,1
   24288:	8023883a 	mov	r17,r16
   2428c:	b0c00005 	stb	r3,0(r22)
   24290:	9021883a 	mov	r16,r18
   24294:	003de606 	br	23a30 <_dtoa_r+0xb5c>
   24298:	9805883a 	mov	r2,r19
   2429c:	a827883a 	mov	r19,r21
   242a0:	102b883a 	mov	r21,r2
   242a4:	d8800417 	ldw	r2,16(sp)
   242a8:	8023883a 	mov	r17,r16
   242ac:	9021883a 	mov	r16,r18
   242b0:	10800044 	addi	r2,r2,1
   242b4:	d8800415 	stw	r2,16(sp)
   242b8:	003dc606 	br	239d4 <_dtoa_r+0xb00>
   242bc:	d9400c17 	ldw	r5,48(sp)
   242c0:	a009883a 	mov	r4,r20
   242c4:	002c91c0 	call	2c91c <__muldf3>
   242c8:	d9800d17 	ldw	r6,52(sp)
   242cc:	d9400117 	ldw	r5,4(sp)
   242d0:	d9001017 	ldw	r4,64(sp)
   242d4:	d8800c15 	stw	r2,48(sp)
   242d8:	d8c00d15 	stw	r3,52(sp)
   242dc:	29000005 	stb	r4,0(r5)
   242e0:	31000058 	cmpnei	r4,r6,1
   242e4:	29a9883a 	add	r20,r5,r6
   242e8:	2000a026 	beq	r4,zero,2456c <_dtoa_r+0x1698>
   242ec:	dc400e15 	stw	r17,56(sp)
   242f0:	8009883a 	mov	r4,r16
   242f4:	900b883a 	mov	r5,r18
   242f8:	a823883a 	mov	r17,r21
   242fc:	000d883a 	mov	r6,zero
   24300:	01d00934 	movhi	r7,16420
   24304:	002c91c0 	call	2c91c <__muldf3>
   24308:	180b883a 	mov	r5,r3
   2430c:	1009883a 	mov	r4,r2
   24310:	1825883a 	mov	r18,r3
   24314:	102b883a 	mov	r21,r2
   24318:	002d9d00 	call	2d9d0 <__fixdfsi>
   2431c:	1009883a 	mov	r4,r2
   24320:	1021883a 	mov	r16,r2
   24324:	002da500 	call	2da50 <__floatsidf>
   24328:	a809883a 	mov	r4,r21
   2432c:	900b883a 	mov	r5,r18
   24330:	100d883a 	mov	r6,r2
   24334:	180f883a 	mov	r7,r3
   24338:	8c400044 	addi	r17,r17,1
   2433c:	84000c04 	addi	r16,r16,48
   24340:	002d0c80 	call	2d0c8 <__subdf3>
   24344:	8c3fffc5 	stb	r16,-1(r17)
   24348:	1009883a 	mov	r4,r2
   2434c:	180b883a 	mov	r5,r3
   24350:	a47fea1e 	bne	r20,r17,242fc <_dtoa_r+0x1428>
   24354:	dc400e17 	ldw	r17,56(sp)
   24358:	1021883a 	mov	r16,r2
   2435c:	1825883a 	mov	r18,r3
   24360:	d9000c17 	ldw	r4,48(sp)
   24364:	d9400d17 	ldw	r5,52(sp)
   24368:	000d883a 	mov	r6,zero
   2436c:	01cff834 	movhi	r7,16352
   24370:	002b4ac0 	call	2b4ac <__adddf3>
   24374:	800d883a 	mov	r6,r16
   24378:	900f883a 	mov	r7,r18
   2437c:	1009883a 	mov	r4,r2
   24380:	180b883a 	mov	r5,r3
   24384:	002c8340 	call	2c834 <__ledf2>
   24388:	10005416 	blt	r2,zero,244dc <_dtoa_r+0x1608>
   2438c:	d9800c17 	ldw	r6,48(sp)
   24390:	d9c00d17 	ldw	r7,52(sp)
   24394:	0009883a 	mov	r4,zero
   24398:	014ff834 	movhi	r5,16352
   2439c:	002d0c80 	call	2d0c8 <__subdf3>
   243a0:	800d883a 	mov	r6,r16
   243a4:	900f883a 	mov	r7,r18
   243a8:	1009883a 	mov	r4,r2
   243ac:	180b883a 	mov	r5,r3
   243b0:	002c74c0 	call	2c74c <__gedf2>
   243b4:	00bc9a0e 	bge	zero,r2,23620 <_dtoa_r+0x74c>
   243b8:	a0bfffc7 	ldb	r2,-1(r20)
   243bc:	a02b883a 	mov	r21,r20
   243c0:	a53fffc4 	addi	r20,r20,-1
   243c4:	10800c20 	cmpeqi	r2,r2,48
   243c8:	103ffb1e 	bne	r2,zero,243b8 <_dtoa_r+0x14e4>
   243cc:	d8801117 	ldw	r2,68(sp)
   243d0:	10800044 	addi	r2,r2,1
   243d4:	d8800415 	stw	r2,16(sp)
   243d8:	003da106 	br	23a60 <_dtoa_r+0xb8c>
   243dc:	d8c01217 	ldw	r3,72(sp)
   243e0:	d9000617 	ldw	r4,24(sp)
   243e4:	00800d84 	movi	r2,54
   243e8:	10c5c83a 	sub	r2,r2,r3
   243ec:	b0ad883a 	add	r22,r22,r2
   243f0:	2085883a 	add	r2,r4,r2
   243f4:	dd000817 	ldw	r20,32(sp)
   243f8:	2025883a 	mov	r18,r4
   243fc:	d8800615 	stw	r2,24(sp)
   24400:	003d0e06 	br	2383c <_dtoa_r+0x968>
   24404:	d9000117 	ldw	r4,4(sp)
   24408:	003c4b06 	br	23538 <_dtoa_r+0x664>
   2440c:	9821883a 	mov	r16,r19
   24410:	8825883a 	mov	r18,r17
   24414:	05400084 	movi	r21,2
   24418:	003bb406 	br	232ec <_dtoa_r+0x418>
   2441c:	d8800517 	ldw	r2,20(sp)
   24420:	103ede26 	beq	r2,zero,23f9c <_dtoa_r+0x10c8>
   24424:	d8800b17 	ldw	r2,44(sp)
   24428:	00bc7d0e 	bge	zero,r2,23620 <_dtoa_r+0x74c>
   2442c:	900b883a 	mov	r5,r18
   24430:	8009883a 	mov	r4,r16
   24434:	000d883a 	mov	r6,zero
   24438:	01d00934 	movhi	r7,16420
   2443c:	002c91c0 	call	2c91c <__muldf3>
   24440:	a9000044 	addi	r4,r21,1
   24444:	1021883a 	mov	r16,r2
   24448:	1825883a 	mov	r18,r3
   2444c:	002da500 	call	2da50 <__floatsidf>
   24450:	800d883a 	mov	r6,r16
   24454:	900f883a 	mov	r7,r18
   24458:	1009883a 	mov	r4,r2
   2445c:	180b883a 	mov	r5,r3
   24460:	002c91c0 	call	2c91c <__muldf3>
   24464:	1009883a 	mov	r4,r2
   24468:	000d883a 	mov	r6,zero
   2446c:	01d00734 	movhi	r7,16412
   24470:	180b883a 	mov	r5,r3
   24474:	002b4ac0 	call	2b4ac <__adddf3>
   24478:	d9000417 	ldw	r4,16(sp)
   2447c:	1029883a 	mov	r20,r2
   24480:	00bf3034 	movhi	r2,64704
   24484:	1887883a 	add	r3,r3,r2
   24488:	d8800b17 	ldw	r2,44(sp)
   2448c:	213fffc4 	addi	r4,r4,-1
   24490:	d9001115 	stw	r4,68(sp)
   24494:	d8c00c15 	stw	r3,48(sp)
   24498:	d8800d15 	stw	r2,52(sp)
   2449c:	003bb106 	br	23364 <_dtoa_r+0x490>
   244a0:	d8800417 	ldw	r2,16(sp)
   244a4:	00c00c44 	movi	r3,49
   244a8:	10800044 	addi	r2,r2,1
   244ac:	d8800415 	stw	r2,16(sp)
   244b0:	003c2a06 	br	2355c <_dtoa_r+0x688>
   244b4:	00800e44 	movi	r2,57
   244b8:	8023883a 	mov	r17,r16
   244bc:	d9400117 	ldw	r5,4(sp)
   244c0:	b0800005 	stb	r2,0(r22)
   244c4:	9021883a 	mov	r16,r18
   244c8:	01000e44 	movi	r4,57
   244cc:	003d5006 	br	23a10 <_dtoa_r+0xb3c>
   244d0:	0029883a 	mov	r20,zero
   244d4:	0021883a 	mov	r16,zero
   244d8:	003e7106 	br	23ea0 <_dtoa_r+0xfcc>
   244dc:	d8801117 	ldw	r2,68(sp)
   244e0:	d9000117 	ldw	r4,4(sp)
   244e4:	10800044 	addi	r2,r2,1
   244e8:	d8800415 	stw	r2,16(sp)
   244ec:	003c1206 	br	23538 <_dtoa_r+0x664>
   244f0:	103f241e 	bne	r2,zero,24184 <_dtoa_r+0x12b0>
   244f4:	9880004c 	andi	r2,r19,1
   244f8:	103f1e1e 	bne	r2,zero,24174 <_dtoa_r+0x12a0>
   244fc:	003f2106 	br	24184 <_dtoa_r+0x12b0>
   24500:	d8801117 	ldw	r2,68(sp)
   24504:	ddc00d17 	ldw	r23,52(sp)
   24508:	10800044 	addi	r2,r2,1
   2450c:	d8800415 	stw	r2,16(sp)
   24510:	003d5306 	br	23a60 <_dtoa_r+0xb8c>
   24514:	d8c00417 	ldw	r3,16(sp)
   24518:	a8800e60 	cmpeqi	r2,r21,57
   2451c:	a827883a 	mov	r19,r21
   24520:	18c00044 	addi	r3,r3,1
   24524:	d8c00415 	stw	r3,16(sp)
   24528:	b5400044 	addi	r21,r22,1
   2452c:	103fe11e 	bne	r2,zero,244b4 <_dtoa_r+0x15e0>
   24530:	047f1216 	blt	zero,r17,2417c <_dtoa_r+0x12a8>
   24534:	003f1306 	br	24184 <_dtoa_r+0x12b0>
   24538:	d8800217 	ldw	r2,8(sp)
   2453c:	108000c8 	cmpgei	r2,r2,3
   24540:	103e481e 	bne	r2,zero,23e64 <_dtoa_r+0xf90>
   24544:	dd400415 	stw	r21,16(sp)
   24548:	003e0d06 	br	23d80 <_dtoa_r+0xeac>
   2454c:	d8800217 	ldw	r2,8(sp)
   24550:	108000c8 	cmpgei	r2,r2,3
   24554:	103e431e 	bne	r2,zero,23e64 <_dtoa_r+0xf90>
   24558:	d8800b17 	ldw	r2,44(sp)
   2455c:	dd400415 	stw	r21,16(sp)
   24560:	d8800515 	stw	r2,20(sp)
   24564:	04bdb10e 	bge	zero,r18,23c2c <_dtoa_r+0xd58>
   24568:	003e5c06 	br	23edc <_dtoa_r+0x1008>
   2456c:	a829883a 	mov	r20,r21
   24570:	003f7b06 	br	24360 <_dtoa_r+0x148c>
   24574:	05400084 	movi	r21,2
   24578:	003b5c06 	br	232ec <_dtoa_r+0x418>
   2457c:	01c000f4 	movhi	r7,3
   24580:	010000f4 	movhi	r4,3
   24584:	39c1e104 	addi	r7,r7,1924
   24588:	000d883a 	mov	r6,zero
   2458c:	01406a84 	movi	r5,426
   24590:	2101e604 	addi	r4,r4,1944
   24594:	0028c480 	call	28c48 <__assert_func>
   24598:	000b883a 	mov	r5,zero
   2459c:	003b1506 	br	231f4 <_dtoa_r+0x320>
   245a0:	b8001115 	stw	zero,68(r23)
   245a4:	000b883a 	mov	r5,zero
   245a8:	b809883a 	mov	r4,r23
   245ac:	0025f340 	call	25f34 <_Balloc>
   245b0:	d8800115 	stw	r2,4(sp)
   245b4:	103ff126 	beq	r2,zero,2457c <_dtoa_r+0x16a8>
   245b8:	d8800117 	ldw	r2,4(sp)
   245bc:	d8001e15 	stw	zero,120(sp)
   245c0:	b8801015 	stw	r2,64(r23)
   245c4:	00bfffc4 	movi	r2,-1
   245c8:	d8800515 	stw	r2,20(sp)
   245cc:	d8800b15 	stw	r2,44(sp)
   245d0:	00800044 	movi	r2,1
   245d4:	d8800715 	stw	r2,28(sp)
   245d8:	003c1106 	br	23620 <_dtoa_r+0x74c>
   245dc:	01c000f4 	movhi	r7,3
   245e0:	010000f4 	movhi	r4,3
   245e4:	39c1e104 	addi	r7,r7,1924
   245e8:	000d883a 	mov	r6,zero
   245ec:	0140ba84 	movi	r5,746
   245f0:	2101e604 	addi	r4,r4,1944
   245f4:	0028c480 	call	28c48 <__assert_func>
   245f8:	008000f4 	movhi	r2,3
   245fc:	1081de04 	addi	r2,r2,1912
   24600:	d8800115 	stw	r2,4(sp)
   24604:	003a6506 	br	22f9c <_dtoa_r+0xc8>
   24608:	18c00120 	cmpeqi	r3,r3,4
   2460c:	183cc91e 	bne	r3,zero,23934 <_dtoa_r+0xa60>
   24610:	00c00f04 	movi	r3,60
   24614:	1885c83a 	sub	r2,r3,r2
   24618:	003cc106 	br	23920 <_dtoa_r+0xa4c>

0002461c <__sflush_r>:
   2461c:	2880030b 	ldhu	r2,12(r5)
   24620:	defffb04 	addi	sp,sp,-20
   24624:	dcc00315 	stw	r19,12(sp)
   24628:	dc000015 	stw	r16,0(sp)
   2462c:	dfc00415 	stw	ra,16(sp)
   24630:	dc800215 	stw	r18,8(sp)
   24634:	dc400115 	stw	r17,4(sp)
   24638:	10c0020c 	andi	r3,r2,8
   2463c:	2821883a 	mov	r16,r5
   24640:	2027883a 	mov	r19,r4
   24644:	18003f1e 	bne	r3,zero,24744 <__sflush_r+0x128>
   24648:	28c00117 	ldw	r3,4(r5)
   2464c:	10820014 	ori	r2,r2,2048
   24650:	2880030d 	sth	r2,12(r5)
   24654:	00c0550e 	bge	zero,r3,247ac <__sflush_r+0x190>
   24658:	82000a17 	ldw	r8,40(r16)
   2465c:	40003126 	beq	r8,zero,24724 <__sflush_r+0x108>
   24660:	9c400017 	ldw	r17,0(r19)
   24664:	1104000c 	andi	r4,r2,4096
   24668:	98000015 	stw	zero,0(r19)
   2466c:	81400717 	ldw	r5,28(r16)
   24670:	1007883a 	mov	r3,r2
   24674:	2000521e 	bne	r4,zero,247c0 <__sflush_r+0x1a4>
   24678:	01c00044 	movi	r7,1
   2467c:	000d883a 	mov	r6,zero
   24680:	9809883a 	mov	r4,r19
   24684:	403ee83a 	callr	r8
   24688:	10ffffd8 	cmpnei	r3,r2,-1
   2468c:	18005826 	beq	r3,zero,247f0 <__sflush_r+0x1d4>
   24690:	80c0030b 	ldhu	r3,12(r16)
   24694:	82000a17 	ldw	r8,40(r16)
   24698:	81400717 	ldw	r5,28(r16)
   2469c:	18c0010c 	andi	r3,r3,4
   246a0:	18000626 	beq	r3,zero,246bc <__sflush_r+0xa0>
   246a4:	81000117 	ldw	r4,4(r16)
   246a8:	80c00c17 	ldw	r3,48(r16)
   246ac:	1105c83a 	sub	r2,r2,r4
   246b0:	18000226 	beq	r3,zero,246bc <__sflush_r+0xa0>
   246b4:	80c00f17 	ldw	r3,60(r16)
   246b8:	10c5c83a 	sub	r2,r2,r3
   246bc:	100d883a 	mov	r6,r2
   246c0:	000f883a 	mov	r7,zero
   246c4:	9809883a 	mov	r4,r19
   246c8:	403ee83a 	callr	r8
   246cc:	10ffffd8 	cmpnei	r3,r2,-1
   246d0:	18003d1e 	bne	r3,zero,247c8 <__sflush_r+0x1ac>
   246d4:	99000017 	ldw	r4,0(r19)
   246d8:	80c0030b 	ldhu	r3,12(r16)
   246dc:	20004e26 	beq	r4,zero,24818 <__sflush_r+0x1fc>
   246e0:	21400760 	cmpeqi	r5,r4,29
   246e4:	2800021e 	bne	r5,zero,246f0 <__sflush_r+0xd4>
   246e8:	210005a0 	cmpeqi	r4,r4,22
   246ec:	20002c26 	beq	r4,zero,247a0 <__sflush_r+0x184>
   246f0:	80800417 	ldw	r2,16(r16)
   246f4:	18fdffcc 	andi	r3,r3,63487
   246f8:	80c0030d 	sth	r3,12(r16)
   246fc:	80000115 	stw	zero,4(r16)
   24700:	80800015 	stw	r2,0(r16)
   24704:	81400c17 	ldw	r5,48(r16)
   24708:	9c400015 	stw	r17,0(r19)
   2470c:	28000526 	beq	r5,zero,24724 <__sflush_r+0x108>
   24710:	80801004 	addi	r2,r16,64
   24714:	28800226 	beq	r5,r2,24720 <__sflush_r+0x104>
   24718:	9809883a 	mov	r4,r19
   2471c:	0024df00 	call	24df0 <_free_r>
   24720:	80000c15 	stw	zero,48(r16)
   24724:	0005883a 	mov	r2,zero
   24728:	dfc00417 	ldw	ra,16(sp)
   2472c:	dcc00317 	ldw	r19,12(sp)
   24730:	dc800217 	ldw	r18,8(sp)
   24734:	dc400117 	ldw	r17,4(sp)
   24738:	dc000017 	ldw	r16,0(sp)
   2473c:	dec00504 	addi	sp,sp,20
   24740:	f800283a 	ret
   24744:	2c800417 	ldw	r18,16(r5)
   24748:	903ff626 	beq	r18,zero,24724 <__sflush_r+0x108>
   2474c:	2c400017 	ldw	r17,0(r5)
   24750:	108000cc 	andi	r2,r2,3
   24754:	2c800015 	stw	r18,0(r5)
   24758:	8ca3c83a 	sub	r17,r17,r18
   2475c:	1000161e 	bne	r2,zero,247b8 <__sflush_r+0x19c>
   24760:	28800517 	ldw	r2,20(r5)
   24764:	80800215 	stw	r2,8(r16)
   24768:	04400316 	blt	zero,r17,24778 <__sflush_r+0x15c>
   2476c:	003fed06 	br	24724 <__sflush_r+0x108>
   24770:	90a5883a 	add	r18,r18,r2
   24774:	047feb0e 	bge	zero,r17,24724 <__sflush_r+0x108>
   24778:	80800917 	ldw	r2,36(r16)
   2477c:	81400717 	ldw	r5,28(r16)
   24780:	880f883a 	mov	r7,r17
   24784:	900d883a 	mov	r6,r18
   24788:	9809883a 	mov	r4,r19
   2478c:	103ee83a 	callr	r2
   24790:	88a3c83a 	sub	r17,r17,r2
   24794:	00bff616 	blt	zero,r2,24770 <__sflush_r+0x154>
   24798:	80c0030b 	ldhu	r3,12(r16)
   2479c:	00bfffc4 	movi	r2,-1
   247a0:	18c01014 	ori	r3,r3,64
   247a4:	80c0030d 	sth	r3,12(r16)
   247a8:	003fdf06 	br	24728 <__sflush_r+0x10c>
   247ac:	28c00f17 	ldw	r3,60(r5)
   247b0:	00ffa916 	blt	zero,r3,24658 <__sflush_r+0x3c>
   247b4:	003fdb06 	br	24724 <__sflush_r+0x108>
   247b8:	0005883a 	mov	r2,zero
   247bc:	003fe906 	br	24764 <__sflush_r+0x148>
   247c0:	80801417 	ldw	r2,80(r16)
   247c4:	003fb506 	br	2469c <__sflush_r+0x80>
   247c8:	80c0030b 	ldhu	r3,12(r16)
   247cc:	81000417 	ldw	r4,16(r16)
   247d0:	80000115 	stw	zero,4(r16)
   247d4:	197dffcc 	andi	r5,r3,63487
   247d8:	8140030d 	sth	r5,12(r16)
   247dc:	81000015 	stw	r4,0(r16)
   247e0:	18c4000c 	andi	r3,r3,4096
   247e4:	183fc726 	beq	r3,zero,24704 <__sflush_r+0xe8>
   247e8:	80801415 	stw	r2,80(r16)
   247ec:	003fc506 	br	24704 <__sflush_r+0xe8>
   247f0:	98c00017 	ldw	r3,0(r19)
   247f4:	183fa626 	beq	r3,zero,24690 <__sflush_r+0x74>
   247f8:	19000760 	cmpeqi	r4,r3,29
   247fc:	20000e1e 	bne	r4,zero,24838 <__sflush_r+0x21c>
   24800:	18c00598 	cmpnei	r3,r3,22
   24804:	18000c26 	beq	r3,zero,24838 <__sflush_r+0x21c>
   24808:	80c0030b 	ldhu	r3,12(r16)
   2480c:	18c01014 	ori	r3,r3,64
   24810:	80c0030d 	sth	r3,12(r16)
   24814:	003fc406 	br	24728 <__sflush_r+0x10c>
   24818:	81000417 	ldw	r4,16(r16)
   2481c:	197dffcc 	andi	r5,r3,63487
   24820:	8140030d 	sth	r5,12(r16)
   24824:	80000115 	stw	zero,4(r16)
   24828:	81000015 	stw	r4,0(r16)
   2482c:	18c4000c 	andi	r3,r3,4096
   24830:	183fb426 	beq	r3,zero,24704 <__sflush_r+0xe8>
   24834:	003fec06 	br	247e8 <__sflush_r+0x1cc>
   24838:	9c400015 	stw	r17,0(r19)
   2483c:	0005883a 	mov	r2,zero
   24840:	003fb906 	br	24728 <__sflush_r+0x10c>

00024844 <_fflush_r>:
   24844:	defffd04 	addi	sp,sp,-12
   24848:	dc000115 	stw	r16,4(sp)
   2484c:	dfc00215 	stw	ra,8(sp)
   24850:	2021883a 	mov	r16,r4
   24854:	20000226 	beq	r4,zero,24860 <_fflush_r+0x1c>
   24858:	20800e17 	ldw	r2,56(r4)
   2485c:	10000726 	beq	r2,zero,2487c <_fflush_r+0x38>
   24860:	2880030f 	ldh	r2,12(r5)
   24864:	10000a1e 	bne	r2,zero,24890 <_fflush_r+0x4c>
   24868:	0005883a 	mov	r2,zero
   2486c:	dfc00217 	ldw	ra,8(sp)
   24870:	dc000117 	ldw	r16,4(sp)
   24874:	dec00304 	addi	sp,sp,12
   24878:	f800283a 	ret
   2487c:	d9400015 	stw	r5,0(sp)
   24880:	0024c8c0 	call	24c8c <__sinit>
   24884:	d9400017 	ldw	r5,0(sp)
   24888:	2880030f 	ldh	r2,12(r5)
   2488c:	103ff626 	beq	r2,zero,24868 <_fflush_r+0x24>
   24890:	8009883a 	mov	r4,r16
   24894:	dfc00217 	ldw	ra,8(sp)
   24898:	dc000117 	ldw	r16,4(sp)
   2489c:	dec00304 	addi	sp,sp,12
   248a0:	002461c1 	jmpi	2461c <__sflush_r>

000248a4 <fflush>:
   248a4:	20001726 	beq	r4,zero,24904 <fflush+0x60>
   248a8:	008000f4 	movhi	r2,3
   248ac:	200b883a 	mov	r5,r4
   248b0:	110a5e17 	ldw	r4,10616(r2)
   248b4:	20000226 	beq	r4,zero,248c0 <fflush+0x1c>
   248b8:	20800e17 	ldw	r2,56(r4)
   248bc:	10000526 	beq	r2,zero,248d4 <fflush+0x30>
   248c0:	2880030f 	ldh	r2,12(r5)
   248c4:	1000021e 	bne	r2,zero,248d0 <fflush+0x2c>
   248c8:	0005883a 	mov	r2,zero
   248cc:	f800283a 	ret
   248d0:	002461c1 	jmpi	2461c <__sflush_r>
   248d4:	defffd04 	addi	sp,sp,-12
   248d8:	d9400115 	stw	r5,4(sp)
   248dc:	d9000015 	stw	r4,0(sp)
   248e0:	dfc00215 	stw	ra,8(sp)
   248e4:	0024c8c0 	call	24c8c <__sinit>
   248e8:	d9400117 	ldw	r5,4(sp)
   248ec:	d9000017 	ldw	r4,0(sp)
   248f0:	2880030f 	ldh	r2,12(r5)
   248f4:	10000826 	beq	r2,zero,24918 <fflush+0x74>
   248f8:	dfc00217 	ldw	ra,8(sp)
   248fc:	dec00304 	addi	sp,sp,12
   24900:	002461c1 	jmpi	2461c <__sflush_r>
   24904:	008000f4 	movhi	r2,3
   24908:	110a5d17 	ldw	r4,10612(r2)
   2490c:	014000b4 	movhi	r5,2
   24910:	29521104 	addi	r5,r5,18500
   24914:	00251841 	jmpi	25184 <_fwalk_reent>
   24918:	0005883a 	mov	r2,zero
   2491c:	dfc00217 	ldw	ra,8(sp)
   24920:	dec00304 	addi	sp,sp,12
   24924:	f800283a 	ret

00024928 <__fp_lock>:
   24928:	0005883a 	mov	r2,zero
   2492c:	f800283a 	ret

00024930 <_cleanup_r>:
   24930:	014000f4 	movhi	r5,3
   24934:	29639104 	addi	r5,r5,-29116
   24938:	00251841 	jmpi	25184 <_fwalk_reent>

0002493c <__fp_unlock>:
   2493c:	0005883a 	mov	r2,zero
   24940:	f800283a 	ret

00024944 <__sinit.part.0>:
   24944:	00c000b4 	movhi	r3,2
   24948:	20800117 	ldw	r2,4(r4)
   2494c:	18d24c04 	addi	r3,r3,18736
   24950:	20c00f15 	stw	r3,60(r4)
   24954:	2140bb04 	addi	r5,r4,748
   24958:	00c000c4 	movi	r3,3
   2495c:	20c0b915 	stw	r3,740(r4)
   24960:	2140ba15 	stw	r5,744(r4)
   24964:	2000b815 	stw	zero,736(r4)
   24968:	10001705 	stb	zero,92(r2)
   2496c:	10001745 	stb	zero,93(r2)
   24970:	10001785 	stb	zero,94(r2)
   24974:	100017c5 	stb	zero,95(r2)
   24978:	10001805 	stb	zero,96(r2)
   2497c:	10001845 	stb	zero,97(r2)
   24980:	10001885 	stb	zero,98(r2)
   24984:	100018c5 	stb	zero,99(r2)
   24988:	00c00104 	movi	r3,4
   2498c:	10c00315 	stw	r3,12(r2)
   24990:	020000b4 	movhi	r8,2
   24994:	20c00217 	ldw	r3,8(r4)
   24998:	01c000b4 	movhi	r7,2
   2499c:	018000b4 	movhi	r6,2
   249a0:	014000b4 	movhi	r5,2
   249a4:	421cca04 	addi	r8,r8,29480
   249a8:	39dce104 	addi	r7,r7,29572
   249ac:	319d0104 	addi	r6,r6,29700
   249b0:	295d1804 	addi	r5,r5,29792
   249b4:	02400074 	movhi	r9,1
   249b8:	10001915 	stw	zero,100(r2)
   249bc:	10000015 	stw	zero,0(r2)
   249c0:	10000115 	stw	zero,4(r2)
   249c4:	10000215 	stw	zero,8(r2)
   249c8:	10000415 	stw	zero,16(r2)
   249cc:	10000515 	stw	zero,20(r2)
   249d0:	10000615 	stw	zero,24(r2)
   249d4:	10800715 	stw	r2,28(r2)
   249d8:	12000815 	stw	r8,32(r2)
   249dc:	11c00915 	stw	r7,36(r2)
   249e0:	11800a15 	stw	r6,40(r2)
   249e4:	11400b15 	stw	r5,44(r2)
   249e8:	4a400284 	addi	r9,r9,10
   249ec:	1a400315 	stw	r9,12(r3)
   249f0:	18001915 	stw	zero,100(r3)
   249f4:	18000015 	stw	zero,0(r3)
   249f8:	18000115 	stw	zero,4(r3)
   249fc:	18000215 	stw	zero,8(r3)
   24a00:	18000415 	stw	zero,16(r3)
   24a04:	18001705 	stb	zero,92(r3)
   24a08:	18001745 	stb	zero,93(r3)
   24a0c:	18001785 	stb	zero,94(r3)
   24a10:	180017c5 	stb	zero,95(r3)
   24a14:	18001805 	stb	zero,96(r3)
   24a18:	18001845 	stb	zero,97(r3)
   24a1c:	18001885 	stb	zero,98(r3)
   24a20:	180018c5 	stb	zero,99(r3)
   24a24:	20800317 	ldw	r2,12(r4)
   24a28:	024000b4 	movhi	r9,2
   24a2c:	18000515 	stw	zero,20(r3)
   24a30:	18000615 	stw	zero,24(r3)
   24a34:	18c00715 	stw	r3,28(r3)
   24a38:	1a000815 	stw	r8,32(r3)
   24a3c:	19c00915 	stw	r7,36(r3)
   24a40:	19800a15 	stw	r6,40(r3)
   24a44:	19400b15 	stw	r5,44(r3)
   24a48:	4a400484 	addi	r9,r9,18
   24a4c:	10001915 	stw	zero,100(r2)
   24a50:	10000015 	stw	zero,0(r2)
   24a54:	10000115 	stw	zero,4(r2)
   24a58:	10000215 	stw	zero,8(r2)
   24a5c:	12400315 	stw	r9,12(r2)
   24a60:	10000415 	stw	zero,16(r2)
   24a64:	10000515 	stw	zero,20(r2)
   24a68:	10000615 	stw	zero,24(r2)
   24a6c:	10001705 	stb	zero,92(r2)
   24a70:	10001745 	stb	zero,93(r2)
   24a74:	10001785 	stb	zero,94(r2)
   24a78:	100017c5 	stb	zero,95(r2)
   24a7c:	10001805 	stb	zero,96(r2)
   24a80:	10001845 	stb	zero,97(r2)
   24a84:	10001885 	stb	zero,98(r2)
   24a88:	100018c5 	stb	zero,99(r2)
   24a8c:	10800715 	stw	r2,28(r2)
   24a90:	12000815 	stw	r8,32(r2)
   24a94:	11c00915 	stw	r7,36(r2)
   24a98:	11800a15 	stw	r6,40(r2)
   24a9c:	11400b15 	stw	r5,44(r2)
   24aa0:	00800044 	movi	r2,1
   24aa4:	20800e15 	stw	r2,56(r4)
   24aa8:	f800283a 	ret

00024aac <__sfmoreglue>:
   24aac:	defffc04 	addi	sp,sp,-16
   24ab0:	dc800215 	stw	r18,8(sp)
   24ab4:	2825883a 	mov	r18,r5
   24ab8:	dc000015 	stw	r16,0(sp)
   24abc:	01401a04 	movi	r5,104
   24ac0:	2021883a 	mov	r16,r4
   24ac4:	913fffc4 	addi	r4,r18,-1
   24ac8:	dfc00315 	stw	ra,12(sp)
   24acc:	dc400115 	stw	r17,4(sp)
   24ad0:	002b4840 	call	2b484 <__mulsi3>
   24ad4:	8009883a 	mov	r4,r16
   24ad8:	11401d04 	addi	r5,r2,116
   24adc:	1023883a 	mov	r17,r2
   24ae0:	00254940 	call	25494 <_malloc_r>
   24ae4:	1021883a 	mov	r16,r2
   24ae8:	10000726 	beq	r2,zero,24b08 <__sfmoreglue+0x5c>
   24aec:	11000304 	addi	r4,r2,12
   24af0:	10000015 	stw	zero,0(r2)
   24af4:	14800115 	stw	r18,4(r2)
   24af8:	11000215 	stw	r4,8(r2)
   24afc:	89801a04 	addi	r6,r17,104
   24b00:	000b883a 	mov	r5,zero
   24b04:	0025e440 	call	25e44 <memset>
   24b08:	8005883a 	mov	r2,r16
   24b0c:	dfc00317 	ldw	ra,12(sp)
   24b10:	dc800217 	ldw	r18,8(sp)
   24b14:	dc400117 	ldw	r17,4(sp)
   24b18:	dc000017 	ldw	r16,0(sp)
   24b1c:	dec00404 	addi	sp,sp,16
   24b20:	f800283a 	ret

00024b24 <__sfp>:
   24b24:	defffb04 	addi	sp,sp,-20
   24b28:	008000f4 	movhi	r2,3
   24b2c:	dc000015 	stw	r16,0(sp)
   24b30:	140a5d17 	ldw	r16,10612(r2)
   24b34:	dc400115 	stw	r17,4(sp)
   24b38:	dfc00415 	stw	ra,16(sp)
   24b3c:	80800e17 	ldw	r2,56(r16)
   24b40:	dcc00315 	stw	r19,12(sp)
   24b44:	dc800215 	stw	r18,8(sp)
   24b48:	2023883a 	mov	r17,r4
   24b4c:	10003126 	beq	r2,zero,24c14 <__sfp+0xf0>
   24b50:	8100ba17 	ldw	r4,744(r16)
   24b54:	8140b917 	ldw	r5,740(r16)
   24b58:	04c00104 	movi	r19,4
   24b5c:	8400b804 	addi	r16,r16,736
   24b60:	297fffc4 	addi	r5,r5,-1
   24b64:	2800050e 	bge	r5,zero,24b7c <__sfp+0x58>
   24b68:	00002406 	br	24bfc <__sfp+0xd8>
   24b6c:	297fffc4 	addi	r5,r5,-1
   24b70:	28bfffd8 	cmpnei	r2,r5,-1
   24b74:	21001a04 	addi	r4,r4,104
   24b78:	10002026 	beq	r2,zero,24bfc <__sfp+0xd8>
   24b7c:	2080030f 	ldh	r2,12(r4)
   24b80:	103ffa1e 	bne	r2,zero,24b6c <__sfp+0x48>
   24b84:	00bffff4 	movhi	r2,65535
   24b88:	10800044 	addi	r2,r2,1
   24b8c:	20001915 	stw	zero,100(r4)
   24b90:	20000015 	stw	zero,0(r4)
   24b94:	20000115 	stw	zero,4(r4)
   24b98:	20000215 	stw	zero,8(r4)
   24b9c:	20800315 	stw	r2,12(r4)
   24ba0:	20000415 	stw	zero,16(r4)
   24ba4:	20000515 	stw	zero,20(r4)
   24ba8:	20000615 	stw	zero,24(r4)
   24bac:	20001705 	stb	zero,92(r4)
   24bb0:	20001745 	stb	zero,93(r4)
   24bb4:	20001785 	stb	zero,94(r4)
   24bb8:	200017c5 	stb	zero,95(r4)
   24bbc:	20001805 	stb	zero,96(r4)
   24bc0:	20001845 	stb	zero,97(r4)
   24bc4:	20001885 	stb	zero,98(r4)
   24bc8:	200018c5 	stb	zero,99(r4)
   24bcc:	20000c15 	stw	zero,48(r4)
   24bd0:	20000d15 	stw	zero,52(r4)
   24bd4:	20001115 	stw	zero,68(r4)
   24bd8:	20001215 	stw	zero,72(r4)
   24bdc:	2005883a 	mov	r2,r4
   24be0:	dfc00417 	ldw	ra,16(sp)
   24be4:	dcc00317 	ldw	r19,12(sp)
   24be8:	dc800217 	ldw	r18,8(sp)
   24bec:	dc400117 	ldw	r17,4(sp)
   24bf0:	dc000017 	ldw	r16,0(sp)
   24bf4:	dec00504 	addi	sp,sp,20
   24bf8:	f800283a 	ret
   24bfc:	80800017 	ldw	r2,0(r16)
   24c00:	10000726 	beq	r2,zero,24c20 <__sfp+0xfc>
   24c04:	11000217 	ldw	r4,8(r2)
   24c08:	11400117 	ldw	r5,4(r2)
   24c0c:	1021883a 	mov	r16,r2
   24c10:	003fd306 	br	24b60 <__sfp+0x3c>
   24c14:	8009883a 	mov	r4,r16
   24c18:	00249440 	call	24944 <__sinit.part.0>
   24c1c:	003fcc06 	br	24b50 <__sfp+0x2c>
   24c20:	01406b04 	movi	r5,428
   24c24:	8809883a 	mov	r4,r17
   24c28:	00254940 	call	25494 <_malloc_r>
   24c2c:	1025883a 	mov	r18,r2
   24c30:	10000c26 	beq	r2,zero,24c64 <__sfp+0x140>
   24c34:	11000304 	addi	r4,r2,12
   24c38:	11000215 	stw	r4,8(r2)
   24c3c:	000b883a 	mov	r5,zero
   24c40:	10000015 	stw	zero,0(r2)
   24c44:	14c00115 	stw	r19,4(r2)
   24c48:	01806804 	movi	r6,416
   24c4c:	0025e440 	call	25e44 <memset>
   24c50:	1009883a 	mov	r4,r2
   24c54:	84800015 	stw	r18,0(r16)
   24c58:	014000c4 	movi	r5,3
   24c5c:	9021883a 	mov	r16,r18
   24c60:	003fc606 	br	24b7c <__sfp+0x58>
   24c64:	80000015 	stw	zero,0(r16)
   24c68:	00800304 	movi	r2,12
   24c6c:	88800015 	stw	r2,0(r17)
   24c70:	0009883a 	mov	r4,zero
   24c74:	003fd906 	br	24bdc <__sfp+0xb8>

00024c78 <_cleanup>:
   24c78:	008000f4 	movhi	r2,3
   24c7c:	110a5d17 	ldw	r4,10612(r2)
   24c80:	014000f4 	movhi	r5,3
   24c84:	29639104 	addi	r5,r5,-29116
   24c88:	00251841 	jmpi	25184 <_fwalk_reent>

00024c8c <__sinit>:
   24c8c:	20800e17 	ldw	r2,56(r4)
   24c90:	10000126 	beq	r2,zero,24c98 <__sinit+0xc>
   24c94:	f800283a 	ret
   24c98:	00249441 	jmpi	24944 <__sinit.part.0>

00024c9c <__sfp_lock_acquire>:
   24c9c:	f800283a 	ret

00024ca0 <__sfp_lock_release>:
   24ca0:	f800283a 	ret

00024ca4 <__sinit_lock_acquire>:
   24ca4:	f800283a 	ret

00024ca8 <__sinit_lock_release>:
   24ca8:	f800283a 	ret

00024cac <__fp_lock_all>:
   24cac:	008000f4 	movhi	r2,3
   24cb0:	110a5e17 	ldw	r4,10616(r2)
   24cb4:	014000b4 	movhi	r5,2
   24cb8:	29524a04 	addi	r5,r5,18728
   24cbc:	00250ec1 	jmpi	250ec <_fwalk>

00024cc0 <__fp_unlock_all>:
   24cc0:	008000f4 	movhi	r2,3
   24cc4:	110a5e17 	ldw	r4,10616(r2)
   24cc8:	014000b4 	movhi	r5,2
   24ccc:	29524f04 	addi	r5,r5,18748
   24cd0:	00250ec1 	jmpi	250ec <_fwalk>

00024cd4 <_malloc_trim_r>:
   24cd4:	defffb04 	addi	sp,sp,-20
   24cd8:	dcc00315 	stw	r19,12(sp)
   24cdc:	04c000f4 	movhi	r19,3
   24ce0:	dc800215 	stw	r18,8(sp)
   24ce4:	dc400115 	stw	r17,4(sp)
   24ce8:	dc000015 	stw	r16,0(sp)
   24cec:	dfc00415 	stw	ra,16(sp)
   24cf0:	2821883a 	mov	r16,r5
   24cf4:	9cc46f04 	addi	r19,r19,4540
   24cf8:	2025883a 	mov	r18,r4
   24cfc:	002e4d80 	call	2e4d8 <__malloc_lock>
   24d00:	98800217 	ldw	r2,8(r19)
   24d04:	14400117 	ldw	r17,4(r2)
   24d08:	00bfff04 	movi	r2,-4
   24d0c:	88a2703a 	and	r17,r17,r2
   24d10:	8c21c83a 	sub	r16,r17,r16
   24d14:	8403fbc4 	addi	r16,r16,4079
   24d18:	8020d33a 	srli	r16,r16,12
   24d1c:	843fffc4 	addi	r16,r16,-1
   24d20:	8020933a 	slli	r16,r16,12
   24d24:	80840008 	cmpgei	r2,r16,4096
   24d28:	10000626 	beq	r2,zero,24d44 <_malloc_trim_r+0x70>
   24d2c:	000b883a 	mov	r5,zero
   24d30:	9009883a 	mov	r4,r18
   24d34:	00272d00 	call	272d0 <_sbrk_r>
   24d38:	98c00217 	ldw	r3,8(r19)
   24d3c:	1c47883a 	add	r3,r3,r17
   24d40:	10c00a26 	beq	r2,r3,24d6c <_malloc_trim_r+0x98>
   24d44:	9009883a 	mov	r4,r18
   24d48:	002e4fc0 	call	2e4fc <__malloc_unlock>
   24d4c:	0005883a 	mov	r2,zero
   24d50:	dfc00417 	ldw	ra,16(sp)
   24d54:	dcc00317 	ldw	r19,12(sp)
   24d58:	dc800217 	ldw	r18,8(sp)
   24d5c:	dc400117 	ldw	r17,4(sp)
   24d60:	dc000017 	ldw	r16,0(sp)
   24d64:	dec00504 	addi	sp,sp,20
   24d68:	f800283a 	ret
   24d6c:	040bc83a 	sub	r5,zero,r16
   24d70:	9009883a 	mov	r4,r18
   24d74:	00272d00 	call	272d0 <_sbrk_r>
   24d78:	10bfffd8 	cmpnei	r2,r2,-1
   24d7c:	10000d26 	beq	r2,zero,24db4 <_malloc_trim_r+0xe0>
   24d80:	008000f4 	movhi	r2,3
   24d84:	10918e17 	ldw	r2,17976(r2)
   24d88:	98c00217 	ldw	r3,8(r19)
   24d8c:	8c23c83a 	sub	r17,r17,r16
   24d90:	8c400054 	ori	r17,r17,1
   24d94:	1421c83a 	sub	r16,r2,r16
   24d98:	1c400115 	stw	r17,4(r3)
   24d9c:	008000f4 	movhi	r2,3
   24da0:	9009883a 	mov	r4,r18
   24da4:	14118e15 	stw	r16,17976(r2)
   24da8:	002e4fc0 	call	2e4fc <__malloc_unlock>
   24dac:	00800044 	movi	r2,1
   24db0:	003fe706 	br	24d50 <_malloc_trim_r+0x7c>
   24db4:	000b883a 	mov	r5,zero
   24db8:	9009883a 	mov	r4,r18
   24dbc:	00272d00 	call	272d0 <_sbrk_r>
   24dc0:	99000217 	ldw	r4,8(r19)
   24dc4:	1107c83a 	sub	r3,r2,r4
   24dc8:	19400410 	cmplti	r5,r3,16
   24dcc:	283fdd1e 	bne	r5,zero,24d44 <_malloc_trim_r+0x70>
   24dd0:	014000f4 	movhi	r5,3
   24dd4:	294a5f17 	ldw	r5,10620(r5)
   24dd8:	18c00054 	ori	r3,r3,1
   24ddc:	20c00115 	stw	r3,4(r4)
   24de0:	1145c83a 	sub	r2,r2,r5
   24de4:	014000f4 	movhi	r5,3
   24de8:	28918e15 	stw	r2,17976(r5)
   24dec:	003fd506 	br	24d44 <_malloc_trim_r+0x70>

00024df0 <_free_r>:
   24df0:	28004f26 	beq	r5,zero,24f30 <_free_r+0x140>
   24df4:	defffd04 	addi	sp,sp,-12
   24df8:	dc400115 	stw	r17,4(sp)
   24dfc:	dc000015 	stw	r16,0(sp)
   24e00:	2023883a 	mov	r17,r4
   24e04:	2821883a 	mov	r16,r5
   24e08:	dfc00215 	stw	ra,8(sp)
   24e0c:	002e4d80 	call	2e4d8 <__malloc_lock>
   24e10:	81ffff17 	ldw	r7,-4(r16)
   24e14:	00bfff84 	movi	r2,-2
   24e18:	80fffe04 	addi	r3,r16,-8
   24e1c:	3884703a 	and	r2,r7,r2
   24e20:	010000f4 	movhi	r4,3
   24e24:	188d883a 	add	r6,r3,r2
   24e28:	21046f04 	addi	r4,r4,4540
   24e2c:	31400117 	ldw	r5,4(r6)
   24e30:	22000217 	ldw	r8,8(r4)
   24e34:	027fff04 	movi	r9,-4
   24e38:	2a4a703a 	and	r5,r5,r9
   24e3c:	41806426 	beq	r8,r6,24fd0 <_free_r+0x1e0>
   24e40:	31400115 	stw	r5,4(r6)
   24e44:	39c0004c 	andi	r7,r7,1
   24e48:	3151883a 	add	r8,r6,r5
   24e4c:	3800281e 	bne	r7,zero,24ef0 <_free_r+0x100>
   24e50:	82bffe17 	ldw	r10,-8(r16)
   24e54:	42000117 	ldw	r8,4(r8)
   24e58:	01c000f4 	movhi	r7,3
   24e5c:	1a87c83a 	sub	r3,r3,r10
   24e60:	1a400217 	ldw	r9,8(r3)
   24e64:	39c47104 	addi	r7,r7,4548
   24e68:	1285883a 	add	r2,r2,r10
   24e6c:	4200004c 	andi	r8,r8,1
   24e70:	49c04c26 	beq	r9,r7,24fa4 <_free_r+0x1b4>
   24e74:	1a800317 	ldw	r10,12(r3)
   24e78:	4a800315 	stw	r10,12(r9)
   24e7c:	52400215 	stw	r9,8(r10)
   24e80:	40007126 	beq	r8,zero,25048 <_free_r+0x258>
   24e84:	11400054 	ori	r5,r2,1
   24e88:	19400115 	stw	r5,4(r3)
   24e8c:	30800015 	stw	r2,0(r6)
   24e90:	11408028 	cmpgeui	r5,r2,512
   24e94:	28002c1e 	bne	r5,zero,24f48 <_free_r+0x158>
   24e98:	100ad0fa 	srli	r5,r2,3
   24e9c:	100cd17a 	srli	r6,r2,5
   24ea0:	00800044 	movi	r2,1
   24ea4:	29400044 	addi	r5,r5,1
   24ea8:	280a90fa 	slli	r5,r5,3
   24eac:	21c00117 	ldw	r7,4(r4)
   24eb0:	1184983a 	sll	r2,r2,r6
   24eb4:	214b883a 	add	r5,r4,r5
   24eb8:	29800017 	ldw	r6,0(r5)
   24ebc:	11c4b03a 	or	r2,r2,r7
   24ec0:	29fffe04 	addi	r7,r5,-8
   24ec4:	19c00315 	stw	r7,12(r3)
   24ec8:	19800215 	stw	r6,8(r3)
   24ecc:	20800115 	stw	r2,4(r4)
   24ed0:	28c00015 	stw	r3,0(r5)
   24ed4:	30c00315 	stw	r3,12(r6)
   24ed8:	8809883a 	mov	r4,r17
   24edc:	dfc00217 	ldw	ra,8(sp)
   24ee0:	dc400117 	ldw	r17,4(sp)
   24ee4:	dc000017 	ldw	r16,0(sp)
   24ee8:	dec00304 	addi	sp,sp,12
   24eec:	002e4fc1 	jmpi	2e4fc <__malloc_unlock>
   24ef0:	41c00117 	ldw	r7,4(r8)
   24ef4:	39c0004c 	andi	r7,r7,1
   24ef8:	38000e1e 	bne	r7,zero,24f34 <_free_r+0x144>
   24efc:	01c000f4 	movhi	r7,3
   24f00:	1145883a 	add	r2,r2,r5
   24f04:	39c47104 	addi	r7,r7,4548
   24f08:	31400217 	ldw	r5,8(r6)
   24f0c:	12400054 	ori	r9,r2,1
   24f10:	1891883a 	add	r8,r3,r2
   24f14:	29c05226 	beq	r5,r7,25060 <_free_r+0x270>
   24f18:	31800317 	ldw	r6,12(r6)
   24f1c:	29800315 	stw	r6,12(r5)
   24f20:	31400215 	stw	r5,8(r6)
   24f24:	1a400115 	stw	r9,4(r3)
   24f28:	40800015 	stw	r2,0(r8)
   24f2c:	003fd806 	br	24e90 <_free_r+0xa0>
   24f30:	f800283a 	ret
   24f34:	11400054 	ori	r5,r2,1
   24f38:	817fff15 	stw	r5,-4(r16)
   24f3c:	30800015 	stw	r2,0(r6)
   24f40:	11408028 	cmpgeui	r5,r2,512
   24f44:	283fd426 	beq	r5,zero,24e98 <_free_r+0xa8>
   24f48:	100ad27a 	srli	r5,r2,9
   24f4c:	29800168 	cmpgeui	r6,r5,5
   24f50:	3000341e 	bne	r6,zero,25024 <_free_r+0x234>
   24f54:	100ad1ba 	srli	r5,r2,6
   24f58:	29800e44 	addi	r6,r5,57
   24f5c:	300c90fa 	slli	r6,r6,3
   24f60:	29c00e04 	addi	r7,r5,56
   24f64:	218d883a 	add	r6,r4,r6
   24f68:	31400017 	ldw	r5,0(r6)
   24f6c:	31bffe04 	addi	r6,r6,-8
   24f70:	31404226 	beq	r6,r5,2507c <_free_r+0x28c>
   24f74:	01ffff04 	movi	r7,-4
   24f78:	29000117 	ldw	r4,4(r5)
   24f7c:	21c8703a 	and	r4,r4,r7
   24f80:	1100022e 	bgeu	r2,r4,24f8c <_free_r+0x19c>
   24f84:	29400217 	ldw	r5,8(r5)
   24f88:	317ffb1e 	bne	r6,r5,24f78 <_free_r+0x188>
   24f8c:	29800317 	ldw	r6,12(r5)
   24f90:	19800315 	stw	r6,12(r3)
   24f94:	19400215 	stw	r5,8(r3)
   24f98:	30c00215 	stw	r3,8(r6)
   24f9c:	28c00315 	stw	r3,12(r5)
   24fa0:	003fcd06 	br	24ed8 <_free_r+0xe8>
   24fa4:	40004d1e 	bne	r8,zero,250dc <_free_r+0x2ec>
   24fa8:	31000317 	ldw	r4,12(r6)
   24fac:	31800217 	ldw	r6,8(r6)
   24fb0:	2885883a 	add	r2,r5,r2
   24fb4:	11400054 	ori	r5,r2,1
   24fb8:	31000315 	stw	r4,12(r6)
   24fbc:	21800215 	stw	r6,8(r4)
   24fc0:	19400115 	stw	r5,4(r3)
   24fc4:	1887883a 	add	r3,r3,r2
   24fc8:	18800015 	stw	r2,0(r3)
   24fcc:	003fc206 	br	24ed8 <_free_r+0xe8>
   24fd0:	39c0004c 	andi	r7,r7,1
   24fd4:	1145883a 	add	r2,r2,r5
   24fd8:	3800071e 	bne	r7,zero,24ff8 <_free_r+0x208>
   24fdc:	81fffe17 	ldw	r7,-8(r16)
   24fe0:	19c7c83a 	sub	r3,r3,r7
   24fe4:	19400317 	ldw	r5,12(r3)
   24fe8:	19800217 	ldw	r6,8(r3)
   24fec:	11c5883a 	add	r2,r2,r7
   24ff0:	31400315 	stw	r5,12(r6)
   24ff4:	29800215 	stw	r6,8(r5)
   24ff8:	014000f4 	movhi	r5,3
   24ffc:	11800054 	ori	r6,r2,1
   25000:	294a6017 	ldw	r5,10624(r5)
   25004:	19800115 	stw	r6,4(r3)
   25008:	20c00215 	stw	r3,8(r4)
   2500c:	117fb236 	bltu	r2,r5,24ed8 <_free_r+0xe8>
   25010:	008000f4 	movhi	r2,3
   25014:	11517e17 	ldw	r5,17912(r2)
   25018:	8809883a 	mov	r4,r17
   2501c:	0024cd40 	call	24cd4 <_malloc_trim_r>
   25020:	003fad06 	br	24ed8 <_free_r+0xe8>
   25024:	29800568 	cmpgeui	r6,r5,21
   25028:	30000926 	beq	r6,zero,25050 <_free_r+0x260>
   2502c:	29801568 	cmpgeui	r6,r5,85
   25030:	3000191e 	bne	r6,zero,25098 <_free_r+0x2a8>
   25034:	100ad33a 	srli	r5,r2,12
   25038:	29801bc4 	addi	r6,r5,111
   2503c:	300c90fa 	slli	r6,r6,3
   25040:	29c01b84 	addi	r7,r5,110
   25044:	003fc706 	br	24f64 <_free_r+0x174>
   25048:	1145883a 	add	r2,r2,r5
   2504c:	003fae06 	br	24f08 <_free_r+0x118>
   25050:	29801704 	addi	r6,r5,92
   25054:	300c90fa 	slli	r6,r6,3
   25058:	29c016c4 	addi	r7,r5,91
   2505c:	003fc106 	br	24f64 <_free_r+0x174>
   25060:	20c00515 	stw	r3,20(r4)
   25064:	20c00415 	stw	r3,16(r4)
   25068:	19c00315 	stw	r7,12(r3)
   2506c:	19c00215 	stw	r7,8(r3)
   25070:	1a400115 	stw	r9,4(r3)
   25074:	40800015 	stw	r2,0(r8)
   25078:	003f9706 	br	24ed8 <_free_r+0xe8>
   2507c:	380fd0ba 	srai	r7,r7,2
   25080:	00800044 	movi	r2,1
   25084:	22000117 	ldw	r8,4(r4)
   25088:	11ce983a 	sll	r7,r2,r7
   2508c:	3a0eb03a 	or	r7,r7,r8
   25090:	21c00115 	stw	r7,4(r4)
   25094:	003fbe06 	br	24f90 <_free_r+0x1a0>
   25098:	29805568 	cmpgeui	r6,r5,341
   2509c:	3000051e 	bne	r6,zero,250b4 <_free_r+0x2c4>
   250a0:	100ad3fa 	srli	r5,r2,15
   250a4:	29801e04 	addi	r6,r5,120
   250a8:	300c90fa 	slli	r6,r6,3
   250ac:	29c01dc4 	addi	r7,r5,119
   250b0:	003fac06 	br	24f64 <_free_r+0x174>
   250b4:	29415568 	cmpgeui	r5,r5,1365
   250b8:	2800051e 	bne	r5,zero,250d0 <_free_r+0x2e0>
   250bc:	100ad4ba 	srli	r5,r2,18
   250c0:	29801f44 	addi	r6,r5,125
   250c4:	300c90fa 	slli	r6,r6,3
   250c8:	29c01f04 	addi	r7,r5,124
   250cc:	003fa506 	br	24f64 <_free_r+0x174>
   250d0:	0180fe04 	movi	r6,1016
   250d4:	01c01f84 	movi	r7,126
   250d8:	003fa206 	br	24f64 <_free_r+0x174>
   250dc:	11000054 	ori	r4,r2,1
   250e0:	19000115 	stw	r4,4(r3)
   250e4:	30800015 	stw	r2,0(r6)
   250e8:	003f7b06 	br	24ed8 <_free_r+0xe8>

000250ec <_fwalk>:
   250ec:	defffa04 	addi	sp,sp,-24
   250f0:	dd000415 	stw	r20,16(sp)
   250f4:	dcc00315 	stw	r19,12(sp)
   250f8:	dc800215 	stw	r18,8(sp)
   250fc:	dfc00515 	stw	ra,20(sp)
   25100:	dc400115 	stw	r17,4(sp)
   25104:	dc000015 	stw	r16,0(sp)
   25108:	2827883a 	mov	r19,r5
   2510c:	2480b804 	addi	r18,r4,736
   25110:	0029883a 	mov	r20,zero
   25114:	94400117 	ldw	r17,4(r18)
   25118:	94000217 	ldw	r16,8(r18)
   2511c:	8c7fffc4 	addi	r17,r17,-1
   25120:	88000d16 	blt	r17,zero,25158 <_fwalk+0x6c>
   25124:	8080030b 	ldhu	r2,12(r16)
   25128:	8c7fffc4 	addi	r17,r17,-1
   2512c:	108000b0 	cmpltui	r2,r2,2
   25130:	1000061e 	bne	r2,zero,2514c <_fwalk+0x60>
   25134:	8080038f 	ldh	r2,14(r16)
   25138:	8009883a 	mov	r4,r16
   2513c:	10bfffe0 	cmpeqi	r2,r2,-1
   25140:	1000021e 	bne	r2,zero,2514c <_fwalk+0x60>
   25144:	983ee83a 	callr	r19
   25148:	a0a8b03a 	or	r20,r20,r2
   2514c:	88bfffd8 	cmpnei	r2,r17,-1
   25150:	84001a04 	addi	r16,r16,104
   25154:	103ff31e 	bne	r2,zero,25124 <_fwalk+0x38>
   25158:	94800017 	ldw	r18,0(r18)
   2515c:	903fed1e 	bne	r18,zero,25114 <_fwalk+0x28>
   25160:	a005883a 	mov	r2,r20
   25164:	dfc00517 	ldw	ra,20(sp)
   25168:	dd000417 	ldw	r20,16(sp)
   2516c:	dcc00317 	ldw	r19,12(sp)
   25170:	dc800217 	ldw	r18,8(sp)
   25174:	dc400117 	ldw	r17,4(sp)
   25178:	dc000017 	ldw	r16,0(sp)
   2517c:	dec00604 	addi	sp,sp,24
   25180:	f800283a 	ret

00025184 <_fwalk_reent>:
   25184:	defff904 	addi	sp,sp,-28
   25188:	dd400515 	stw	r21,20(sp)
   2518c:	dd000415 	stw	r20,16(sp)
   25190:	dcc00315 	stw	r19,12(sp)
   25194:	dc800215 	stw	r18,8(sp)
   25198:	dfc00615 	stw	ra,24(sp)
   2519c:	dc400115 	stw	r17,4(sp)
   251a0:	dc000015 	stw	r16,0(sp)
   251a4:	202b883a 	mov	r21,r4
   251a8:	2827883a 	mov	r19,r5
   251ac:	2480b804 	addi	r18,r4,736
   251b0:	0029883a 	mov	r20,zero
   251b4:	94400117 	ldw	r17,4(r18)
   251b8:	94000217 	ldw	r16,8(r18)
   251bc:	8c7fffc4 	addi	r17,r17,-1
   251c0:	88000e16 	blt	r17,zero,251fc <_fwalk_reent+0x78>
   251c4:	8080030b 	ldhu	r2,12(r16)
   251c8:	8c7fffc4 	addi	r17,r17,-1
   251cc:	108000b0 	cmpltui	r2,r2,2
   251d0:	1000071e 	bne	r2,zero,251f0 <_fwalk_reent+0x6c>
   251d4:	8080038f 	ldh	r2,14(r16)
   251d8:	800b883a 	mov	r5,r16
   251dc:	a809883a 	mov	r4,r21
   251e0:	10bfffe0 	cmpeqi	r2,r2,-1
   251e4:	1000021e 	bne	r2,zero,251f0 <_fwalk_reent+0x6c>
   251e8:	983ee83a 	callr	r19
   251ec:	a0a8b03a 	or	r20,r20,r2
   251f0:	88bfffd8 	cmpnei	r2,r17,-1
   251f4:	84001a04 	addi	r16,r16,104
   251f8:	103ff21e 	bne	r2,zero,251c4 <_fwalk_reent+0x40>
   251fc:	94800017 	ldw	r18,0(r18)
   25200:	903fec1e 	bne	r18,zero,251b4 <_fwalk_reent+0x30>
   25204:	a005883a 	mov	r2,r20
   25208:	dfc00617 	ldw	ra,24(sp)
   2520c:	dd400517 	ldw	r21,20(sp)
   25210:	dd000417 	ldw	r20,16(sp)
   25214:	dcc00317 	ldw	r19,12(sp)
   25218:	dc800217 	ldw	r18,8(sp)
   2521c:	dc400117 	ldw	r17,4(sp)
   25220:	dc000017 	ldw	r16,0(sp)
   25224:	dec00704 	addi	sp,sp,28
   25228:	f800283a 	ret

0002522c <__localeconv_l>:
   2522c:	20803c04 	addi	r2,r4,240
   25230:	f800283a 	ret

00025234 <_localeconv_r>:
   25234:	008000f4 	movhi	r2,3
   25238:	1085ad04 	addi	r2,r2,5812
   2523c:	f800283a 	ret

00025240 <localeconv>:
   25240:	008000f4 	movhi	r2,3
   25244:	1085ad04 	addi	r2,r2,5812
   25248:	f800283a 	ret

0002524c <__smakebuf_r>:
   2524c:	2880030b 	ldhu	r2,12(r5)
   25250:	deffe804 	addi	sp,sp,-96
   25254:	dc001215 	stw	r16,72(sp)
   25258:	dfc01715 	stw	ra,92(sp)
   2525c:	dd001615 	stw	r20,88(sp)
   25260:	dcc01515 	stw	r19,84(sp)
   25264:	dc801415 	stw	r18,80(sp)
   25268:	dc401315 	stw	r17,76(sp)
   2526c:	10c0008c 	andi	r3,r2,2
   25270:	2821883a 	mov	r16,r5
   25274:	18000d26 	beq	r3,zero,252ac <__smakebuf_r+0x60>
   25278:	288010c4 	addi	r2,r5,67
   2527c:	28800015 	stw	r2,0(r5)
   25280:	28800415 	stw	r2,16(r5)
   25284:	00800044 	movi	r2,1
   25288:	28800515 	stw	r2,20(r5)
   2528c:	dfc01717 	ldw	ra,92(sp)
   25290:	dd001617 	ldw	r20,88(sp)
   25294:	dcc01517 	ldw	r19,84(sp)
   25298:	dc801417 	ldw	r18,80(sp)
   2529c:	dc401317 	ldw	r17,76(sp)
   252a0:	dc001217 	ldw	r16,72(sp)
   252a4:	dec01804 	addi	sp,sp,96
   252a8:	f800283a 	ret
   252ac:	2940038f 	ldh	r5,14(r5)
   252b0:	2023883a 	mov	r17,r4
   252b4:	28002816 	blt	r5,zero,25358 <__smakebuf_r+0x10c>
   252b8:	d80d883a 	mov	r6,sp
   252bc:	002917c0 	call	2917c <_fstat_r>
   252c0:	10002416 	blt	r2,zero,25354 <__smakebuf_r+0x108>
   252c4:	d8800117 	ldw	r2,4(sp)
   252c8:	10bc000c 	andi	r2,r2,61440
   252cc:	10880018 	cmpnei	r2,r2,8192
   252d0:	1000461e 	bne	r2,zero,253ec <__smakebuf_r+0x1a0>
   252d4:	8140038f 	ldh	r5,14(r16)
   252d8:	8809883a 	mov	r4,r17
   252dc:	00296a40 	call	296a4 <_isatty_r>
   252e0:	10003e26 	beq	r2,zero,253dc <__smakebuf_r+0x190>
   252e4:	8080030b 	ldhu	r2,12(r16)
   252e8:	80c010c4 	addi	r3,r16,67
   252ec:	80c00015 	stw	r3,0(r16)
   252f0:	10800054 	ori	r2,r2,1
   252f4:	8080030d 	sth	r2,12(r16)
   252f8:	00800044 	movi	r2,1
   252fc:	80c00415 	stw	r3,16(r16)
   25300:	80800515 	stw	r2,20(r16)
   25304:	04c00044 	movi	r19,1
   25308:	05010004 	movi	r20,1024
   2530c:	04820004 	movi	r18,2048
   25310:	a00b883a 	mov	r5,r20
   25314:	8809883a 	mov	r4,r17
   25318:	00254940 	call	25494 <_malloc_r>
   2531c:	10001726 	beq	r2,zero,2537c <__smakebuf_r+0x130>
   25320:	80c0030b 	ldhu	r3,12(r16)
   25324:	010000b4 	movhi	r4,2
   25328:	21124c04 	addi	r4,r4,18736
   2532c:	89000f15 	stw	r4,60(r17)
   25330:	18c02014 	ori	r3,r3,128
   25334:	80c0030d 	sth	r3,12(r16)
   25338:	80800015 	stw	r2,0(r16)
   2533c:	80800415 	stw	r2,16(r16)
   25340:	85000515 	stw	r20,20(r16)
   25344:	98001d1e 	bne	r19,zero,253bc <__smakebuf_r+0x170>
   25348:	90c6b03a 	or	r3,r18,r3
   2534c:	80c0030d 	sth	r3,12(r16)
   25350:	003fce06 	br	2528c <__smakebuf_r+0x40>
   25354:	8080030b 	ldhu	r2,12(r16)
   25358:	1080200c 	andi	r2,r2,128
   2535c:	0027883a 	mov	r19,zero
   25360:	10001326 	beq	r2,zero,253b0 <__smakebuf_r+0x164>
   25364:	05001004 	movi	r20,64
   25368:	a00b883a 	mov	r5,r20
   2536c:	8809883a 	mov	r4,r17
   25370:	0025883a 	mov	r18,zero
   25374:	00254940 	call	25494 <_malloc_r>
   25378:	103fe91e 	bne	r2,zero,25320 <__smakebuf_r+0xd4>
   2537c:	8080030b 	ldhu	r2,12(r16)
   25380:	10c0800c 	andi	r3,r2,512
   25384:	183fc11e 	bne	r3,zero,2528c <__smakebuf_r+0x40>
   25388:	00ffff04 	movi	r3,-4
   2538c:	10c4703a 	and	r2,r2,r3
   25390:	10800094 	ori	r2,r2,2
   25394:	80c010c4 	addi	r3,r16,67
   25398:	8080030d 	sth	r2,12(r16)
   2539c:	00800044 	movi	r2,1
   253a0:	80c00015 	stw	r3,0(r16)
   253a4:	80c00415 	stw	r3,16(r16)
   253a8:	80800515 	stw	r2,20(r16)
   253ac:	003fb706 	br	2528c <__smakebuf_r+0x40>
   253b0:	05010004 	movi	r20,1024
   253b4:	0025883a 	mov	r18,zero
   253b8:	003fd506 	br	25310 <__smakebuf_r+0xc4>
   253bc:	8140038f 	ldh	r5,14(r16)
   253c0:	8809883a 	mov	r4,r17
   253c4:	00296a40 	call	296a4 <_isatty_r>
   253c8:	80c0030b 	ldhu	r3,12(r16)
   253cc:	103fde26 	beq	r2,zero,25348 <__smakebuf_r+0xfc>
   253d0:	18ffff0c 	andi	r3,r3,65532
   253d4:	18c00054 	ori	r3,r3,1
   253d8:	003fdb06 	br	25348 <__smakebuf_r+0xfc>
   253dc:	04c00044 	movi	r19,1
   253e0:	05010004 	movi	r20,1024
   253e4:	04820004 	movi	r18,2048
   253e8:	003fc906 	br	25310 <__smakebuf_r+0xc4>
   253ec:	0027883a 	mov	r19,zero
   253f0:	05010004 	movi	r20,1024
   253f4:	04820004 	movi	r18,2048
   253f8:	003fc506 	br	25310 <__smakebuf_r+0xc4>

000253fc <__swhatbuf_r>:
   253fc:	deffea04 	addi	sp,sp,-88
   25400:	dc001215 	stw	r16,72(sp)
   25404:	2821883a 	mov	r16,r5
   25408:	2940038f 	ldh	r5,14(r5)
   2540c:	dc801415 	stw	r18,80(sp)
   25410:	dc401315 	stw	r17,76(sp)
   25414:	dfc01515 	stw	ra,84(sp)
   25418:	3023883a 	mov	r17,r6
   2541c:	3825883a 	mov	r18,r7
   25420:	28001016 	blt	r5,zero,25464 <__swhatbuf_r+0x68>
   25424:	d80d883a 	mov	r6,sp
   25428:	002917c0 	call	2917c <_fstat_r>
   2542c:	10000d16 	blt	r2,zero,25464 <__swhatbuf_r+0x68>
   25430:	d8c00117 	ldw	r3,4(sp)
   25434:	00820004 	movi	r2,2048
   25438:	18fc000c 	andi	r3,r3,61440
   2543c:	18c80020 	cmpeqi	r3,r3,8192
   25440:	90c00015 	stw	r3,0(r18)
   25444:	00c10004 	movi	r3,1024
   25448:	88c00015 	stw	r3,0(r17)
   2544c:	dfc01517 	ldw	ra,84(sp)
   25450:	dc801417 	ldw	r18,80(sp)
   25454:	dc401317 	ldw	r17,76(sp)
   25458:	dc001217 	ldw	r16,72(sp)
   2545c:	dec01604 	addi	sp,sp,88
   25460:	f800283a 	ret
   25464:	8080030b 	ldhu	r2,12(r16)
   25468:	90000015 	stw	zero,0(r18)
   2546c:	1080200c 	andi	r2,r2,128
   25470:	10000426 	beq	r2,zero,25484 <__swhatbuf_r+0x88>
   25474:	00801004 	movi	r2,64
   25478:	88800015 	stw	r2,0(r17)
   2547c:	0005883a 	mov	r2,zero
   25480:	003ff206 	br	2544c <__swhatbuf_r+0x50>
   25484:	00810004 	movi	r2,1024
   25488:	88800015 	stw	r2,0(r17)
   2548c:	0005883a 	mov	r2,zero
   25490:	003fee06 	br	2544c <__swhatbuf_r+0x50>

00025494 <_malloc_r>:
   25494:	defff604 	addi	sp,sp,-40
   25498:	dc400115 	stw	r17,4(sp)
   2549c:	2c4002c4 	addi	r17,r5,11
   254a0:	dc800215 	stw	r18,8(sp)
   254a4:	dfc00915 	stw	ra,36(sp)
   254a8:	df000815 	stw	fp,32(sp)
   254ac:	ddc00715 	stw	r23,28(sp)
   254b0:	dd800615 	stw	r22,24(sp)
   254b4:	dd400515 	stw	r21,20(sp)
   254b8:	dd000415 	stw	r20,16(sp)
   254bc:	dcc00315 	stw	r19,12(sp)
   254c0:	dc000015 	stw	r16,0(sp)
   254c4:	888005e8 	cmpgeui	r2,r17,23
   254c8:	2025883a 	mov	r18,r4
   254cc:	10001b1e 	bne	r2,zero,2553c <_malloc_r+0xa8>
   254d0:	29400468 	cmpgeui	r5,r5,17
   254d4:	2800821e 	bne	r5,zero,256e0 <_malloc_r+0x24c>
   254d8:	002e4d80 	call	2e4d8 <__malloc_lock>
   254dc:	04400404 	movi	r17,16
   254e0:	00800604 	movi	r2,24
   254e4:	01c00084 	movi	r7,2
   254e8:	04c000f4 	movhi	r19,3
   254ec:	9cc46f04 	addi	r19,r19,4540
   254f0:	9885883a 	add	r2,r19,r2
   254f4:	14000117 	ldw	r16,4(r2)
   254f8:	10fffe04 	addi	r3,r2,-8
   254fc:	80c08b26 	beq	r16,r3,2572c <_malloc_r+0x298>
   25500:	80800117 	ldw	r2,4(r16)
   25504:	81000317 	ldw	r4,12(r16)
   25508:	00ffff04 	movi	r3,-4
   2550c:	10c4703a 	and	r2,r2,r3
   25510:	81400217 	ldw	r5,8(r16)
   25514:	8085883a 	add	r2,r16,r2
   25518:	10c00117 	ldw	r3,4(r2)
   2551c:	29000315 	stw	r4,12(r5)
   25520:	21400215 	stw	r5,8(r4)
   25524:	18c00054 	ori	r3,r3,1
   25528:	10c00115 	stw	r3,4(r2)
   2552c:	9009883a 	mov	r4,r18
   25530:	002e4fc0 	call	2e4fc <__malloc_unlock>
   25534:	80800204 	addi	r2,r16,8
   25538:	00006c06 	br	256ec <_malloc_r+0x258>
   2553c:	00bffe04 	movi	r2,-8
   25540:	88a2703a 	and	r17,r17,r2
   25544:	88006616 	blt	r17,zero,256e0 <_malloc_r+0x24c>
   25548:	89406536 	bltu	r17,r5,256e0 <_malloc_r+0x24c>
   2554c:	002e4d80 	call	2e4d8 <__malloc_lock>
   25550:	88807e28 	cmpgeui	r2,r17,504
   25554:	10012226 	beq	r2,zero,259e0 <_malloc_r+0x54c>
   25558:	8804d27a 	srli	r2,r17,9
   2555c:	10006f26 	beq	r2,zero,2571c <_malloc_r+0x288>
   25560:	10c00168 	cmpgeui	r3,r2,5
   25564:	1800fe1e 	bne	r3,zero,25960 <_malloc_r+0x4cc>
   25568:	8804d1ba 	srli	r2,r17,6
   2556c:	11c00e44 	addi	r7,r2,57
   25570:	380890fa 	slli	r4,r7,3
   25574:	12000e04 	addi	r8,r2,56
   25578:	04c000f4 	movhi	r19,3
   2557c:	9cc46f04 	addi	r19,r19,4540
   25580:	9909883a 	add	r4,r19,r4
   25584:	24000117 	ldw	r16,4(r4)
   25588:	213ffe04 	addi	r4,r4,-8
   2558c:	24000b26 	beq	r4,r16,255bc <_malloc_r+0x128>
   25590:	01bfff04 	movi	r6,-4
   25594:	00000306 	br	255a4 <_malloc_r+0x110>
   25598:	1800d60e 	bge	r3,zero,258f4 <_malloc_r+0x460>
   2559c:	84000317 	ldw	r16,12(r16)
   255a0:	24000626 	beq	r4,r16,255bc <_malloc_r+0x128>
   255a4:	80800117 	ldw	r2,4(r16)
   255a8:	1184703a 	and	r2,r2,r6
   255ac:	1447c83a 	sub	r3,r2,r17
   255b0:	19400408 	cmpgei	r5,r3,16
   255b4:	283ff826 	beq	r5,zero,25598 <_malloc_r+0x104>
   255b8:	400f883a 	mov	r7,r8
   255bc:	9c000417 	ldw	r16,16(r19)
   255c0:	024000f4 	movhi	r9,3
   255c4:	4a447104 	addi	r9,r9,4548
   255c8:	82405f26 	beq	r16,r9,25748 <_malloc_r+0x2b4>
   255cc:	80c00117 	ldw	r3,4(r16)
   255d0:	00bfff04 	movi	r2,-4
   255d4:	1884703a 	and	r2,r3,r2
   255d8:	1447c83a 	sub	r3,r2,r17
   255dc:	19000410 	cmplti	r4,r3,16
   255e0:	20010a26 	beq	r4,zero,25a0c <_malloc_r+0x578>
   255e4:	9a400515 	stw	r9,20(r19)
   255e8:	9a400415 	stw	r9,16(r19)
   255ec:	1800ff0e 	bge	r3,zero,259ec <_malloc_r+0x558>
   255f0:	10c08028 	cmpgeui	r3,r2,512
   255f4:	1800c11e 	bne	r3,zero,258fc <_malloc_r+0x468>
   255f8:	1006d0fa 	srli	r3,r2,3
   255fc:	1008d17a 	srli	r4,r2,5
   25600:	00800044 	movi	r2,1
   25604:	18c00044 	addi	r3,r3,1
   25608:	180690fa 	slli	r3,r3,3
   2560c:	99400117 	ldw	r5,4(r19)
   25610:	1104983a 	sll	r2,r2,r4
   25614:	98c7883a 	add	r3,r19,r3
   25618:	19000017 	ldw	r4,0(r3)
   2561c:	1144b03a 	or	r2,r2,r5
   25620:	197ffe04 	addi	r5,r3,-8
   25624:	81400315 	stw	r5,12(r16)
   25628:	81000215 	stw	r4,8(r16)
   2562c:	98800115 	stw	r2,4(r19)
   25630:	1c000015 	stw	r16,0(r3)
   25634:	24000315 	stw	r16,12(r4)
   25638:	3807d0ba 	srai	r3,r7,2
   2563c:	01000044 	movi	r4,1
   25640:	20c8983a 	sll	r4,r4,r3
   25644:	11004536 	bltu	r2,r4,2575c <_malloc_r+0x2c8>
   25648:	2086703a 	and	r3,r4,r2
   2564c:	18000a1e 	bne	r3,zero,25678 <_malloc_r+0x1e4>
   25650:	00ffff04 	movi	r3,-4
   25654:	2109883a 	add	r4,r4,r4
   25658:	38ce703a 	and	r7,r7,r3
   2565c:	2086703a 	and	r3,r4,r2
   25660:	39c00104 	addi	r7,r7,4
   25664:	1800041e 	bne	r3,zero,25678 <_malloc_r+0x1e4>
   25668:	2109883a 	add	r4,r4,r4
   2566c:	2086703a 	and	r3,r4,r2
   25670:	39c00104 	addi	r7,r7,4
   25674:	183ffc26 	beq	r3,zero,25668 <_malloc_r+0x1d4>
   25678:	02bfff04 	movi	r10,-4
   2567c:	381690fa 	slli	r11,r7,3
   25680:	3819883a 	mov	r12,r7
   25684:	9ad7883a 	add	r11,r19,r11
   25688:	5811883a 	mov	r8,r11
   2568c:	40800317 	ldw	r2,12(r8)
   25690:	4080bc26 	beq	r8,r2,25984 <_malloc_r+0x4f0>
   25694:	10c00117 	ldw	r3,4(r2)
   25698:	1021883a 	mov	r16,r2
   2569c:	10800317 	ldw	r2,12(r2)
   256a0:	1a86703a 	and	r3,r3,r10
   256a4:	1c4bc83a 	sub	r5,r3,r17
   256a8:	29800410 	cmplti	r6,r5,16
   256ac:	3000ba26 	beq	r6,zero,25998 <_malloc_r+0x504>
   256b0:	283ff716 	blt	r5,zero,25690 <_malloc_r+0x1fc>
   256b4:	80c7883a 	add	r3,r16,r3
   256b8:	19400117 	ldw	r5,4(r3)
   256bc:	81800217 	ldw	r6,8(r16)
   256c0:	9009883a 	mov	r4,r18
   256c4:	29400054 	ori	r5,r5,1
   256c8:	19400115 	stw	r5,4(r3)
   256cc:	30800315 	stw	r2,12(r6)
   256d0:	11800215 	stw	r6,8(r2)
   256d4:	002e4fc0 	call	2e4fc <__malloc_unlock>
   256d8:	80800204 	addi	r2,r16,8
   256dc:	00000306 	br	256ec <_malloc_r+0x258>
   256e0:	00800304 	movi	r2,12
   256e4:	90800015 	stw	r2,0(r18)
   256e8:	0005883a 	mov	r2,zero
   256ec:	dfc00917 	ldw	ra,36(sp)
   256f0:	df000817 	ldw	fp,32(sp)
   256f4:	ddc00717 	ldw	r23,28(sp)
   256f8:	dd800617 	ldw	r22,24(sp)
   256fc:	dd400517 	ldw	r21,20(sp)
   25700:	dd000417 	ldw	r20,16(sp)
   25704:	dcc00317 	ldw	r19,12(sp)
   25708:	dc800217 	ldw	r18,8(sp)
   2570c:	dc400117 	ldw	r17,4(sp)
   25710:	dc000017 	ldw	r16,0(sp)
   25714:	dec00a04 	addi	sp,sp,40
   25718:	f800283a 	ret
   2571c:	01008004 	movi	r4,512
   25720:	01c01004 	movi	r7,64
   25724:	02000fc4 	movi	r8,63
   25728:	003f9306 	br	25578 <_malloc_r+0xe4>
   2572c:	14000317 	ldw	r16,12(r2)
   25730:	39c00084 	addi	r7,r7,2
   25734:	143f721e 	bne	r2,r16,25500 <_malloc_r+0x6c>
   25738:	9c000417 	ldw	r16,16(r19)
   2573c:	024000f4 	movhi	r9,3
   25740:	4a447104 	addi	r9,r9,4548
   25744:	827fa11e 	bne	r16,r9,255cc <_malloc_r+0x138>
   25748:	3807d0ba 	srai	r3,r7,2
   2574c:	01000044 	movi	r4,1
   25750:	98800117 	ldw	r2,4(r19)
   25754:	20c8983a 	sll	r4,r4,r3
   25758:	113fbb2e 	bgeu	r2,r4,25648 <_malloc_r+0x1b4>
   2575c:	9c000217 	ldw	r16,8(r19)
   25760:	00bfff04 	movi	r2,-4
   25764:	85400117 	ldw	r21,4(r16)
   25768:	a8ac703a 	and	r22,r21,r2
   2576c:	b4400336 	bltu	r22,r17,2577c <_malloc_r+0x2e8>
   25770:	b445c83a 	sub	r2,r22,r17
   25774:	10c00408 	cmpgei	r3,r2,16
   25778:	1800541e 	bne	r3,zero,258cc <_malloc_r+0x438>
   2577c:	008000f4 	movhi	r2,3
   25780:	108a5f17 	ldw	r2,10620(r2)
   25784:	00c000f4 	movhi	r3,3
   25788:	1d517e17 	ldw	r21,17912(r3)
   2578c:	10bfffd8 	cmpnei	r2,r2,-1
   25790:	85b9883a 	add	fp,r16,r22
   25794:	8d6b883a 	add	r21,r17,r21
   25798:	1000d626 	beq	r2,zero,25af4 <_malloc_r+0x660>
   2579c:	ad4403c4 	addi	r21,r21,4111
   257a0:	00bc0004 	movi	r2,-4096
   257a4:	a8aa703a 	and	r21,r21,r2
   257a8:	a80b883a 	mov	r5,r21
   257ac:	9009883a 	mov	r4,r18
   257b0:	00272d00 	call	272d0 <_sbrk_r>
   257b4:	102f883a 	mov	r23,r2
   257b8:	10bfffd8 	cmpnei	r2,r2,-1
   257bc:	1000a826 	beq	r2,zero,25a60 <_malloc_r+0x5cc>
   257c0:	bf00a636 	bltu	r23,fp,25a5c <_malloc_r+0x5c8>
   257c4:	008000f4 	movhi	r2,3
   257c8:	15118e17 	ldw	r20,17976(r2)
   257cc:	ad29883a 	add	r20,r21,r20
   257d0:	15118e15 	stw	r20,17976(r2)
   257d4:	a007883a 	mov	r3,r20
   257d8:	e5c0ec26 	beq	fp,r23,25b8c <_malloc_r+0x6f8>
   257dc:	008000f4 	movhi	r2,3
   257e0:	108a5f17 	ldw	r2,10620(r2)
   257e4:	10bfffd8 	cmpnei	r2,r2,-1
   257e8:	1000ef26 	beq	r2,zero,25ba8 <_malloc_r+0x714>
   257ec:	bf39c83a 	sub	fp,r23,fp
   257f0:	e0c7883a 	add	r3,fp,r3
   257f4:	008000f4 	movhi	r2,3
   257f8:	10d18e15 	stw	r3,17976(r2)
   257fc:	bf0001cc 	andi	fp,r23,7
   25800:	e000c526 	beq	fp,zero,25b18 <_malloc_r+0x684>
   25804:	bf2fc83a 	sub	r23,r23,fp
   25808:	bdc00204 	addi	r23,r23,8
   2580c:	05040204 	movi	r20,4104
   25810:	a729c83a 	sub	r20,r20,fp
   25814:	bd6b883a 	add	r21,r23,r21
   25818:	a569c83a 	sub	r20,r20,r21
   2581c:	a503ffcc 	andi	r20,r20,4095
   25820:	a00b883a 	mov	r5,r20
   25824:	9009883a 	mov	r4,r18
   25828:	00272d00 	call	272d0 <_sbrk_r>
   2582c:	10ffffe0 	cmpeqi	r3,r2,-1
   25830:	1800f31e 	bne	r3,zero,25c00 <_malloc_r+0x76c>
   25834:	15c5c83a 	sub	r2,r2,r23
   25838:	152b883a 	add	r21,r2,r20
   2583c:	008000f4 	movhi	r2,3
   25840:	11518e17 	ldw	r5,17976(r2)
   25844:	9dc00215 	stw	r23,8(r19)
   25848:	ad400054 	ori	r21,r21,1
   2584c:	a169883a 	add	r20,r20,r5
   25850:	15118e15 	stw	r20,17976(r2)
   25854:	bd400115 	stw	r21,4(r23)
   25858:	84c0d626 	beq	r16,r19,25bb4 <_malloc_r+0x720>
   2585c:	b0800428 	cmpgeui	r2,r22,16
   25860:	1000d626 	beq	r2,zero,25bbc <_malloc_r+0x728>
   25864:	80c00117 	ldw	r3,4(r16)
   25868:	013ffe04 	movi	r4,-8
   2586c:	b0bffd04 	addi	r2,r22,-12
   25870:	1104703a 	and	r2,r2,r4
   25874:	18c0004c 	andi	r3,r3,1
   25878:	1886b03a 	or	r3,r3,r2
   2587c:	80c00115 	stw	r3,4(r16)
   25880:	01000144 	movi	r4,5
   25884:	8087883a 	add	r3,r16,r2
   25888:	19000115 	stw	r4,4(r3)
   2588c:	19000215 	stw	r4,8(r3)
   25890:	10800428 	cmpgeui	r2,r2,16
   25894:	1000df1e 	bne	r2,zero,25c14 <_malloc_r+0x780>
   25898:	bd400117 	ldw	r21,4(r23)
   2589c:	b821883a 	mov	r16,r23
   258a0:	008000f4 	movhi	r2,3
   258a4:	10917d17 	ldw	r2,17908(r2)
   258a8:	1500022e 	bgeu	r2,r20,258b4 <_malloc_r+0x420>
   258ac:	008000f4 	movhi	r2,3
   258b0:	15117d15 	stw	r20,17908(r2)
   258b4:	008000f4 	movhi	r2,3
   258b8:	10917c17 	ldw	r2,17904(r2)
   258bc:	15006a2e 	bgeu	r2,r20,25a68 <_malloc_r+0x5d4>
   258c0:	008000f4 	movhi	r2,3
   258c4:	15117c15 	stw	r20,17904(r2)
   258c8:	00006706 	br	25a68 <_malloc_r+0x5d4>
   258cc:	88c00054 	ori	r3,r17,1
   258d0:	80c00115 	stw	r3,4(r16)
   258d4:	8463883a 	add	r17,r16,r17
   258d8:	10800054 	ori	r2,r2,1
   258dc:	9c400215 	stw	r17,8(r19)
   258e0:	88800115 	stw	r2,4(r17)
   258e4:	9009883a 	mov	r4,r18
   258e8:	002e4fc0 	call	2e4fc <__malloc_unlock>
   258ec:	80800204 	addi	r2,r16,8
   258f0:	003f7e06 	br	256ec <_malloc_r+0x258>
   258f4:	81000317 	ldw	r4,12(r16)
   258f8:	003f0506 	br	25510 <_malloc_r+0x7c>
   258fc:	1006d27a 	srli	r3,r2,9
   25900:	19000168 	cmpgeui	r4,r3,5
   25904:	20005026 	beq	r4,zero,25a48 <_malloc_r+0x5b4>
   25908:	19000568 	cmpgeui	r4,r3,21
   2590c:	20008c1e 	bne	r4,zero,25b40 <_malloc_r+0x6ac>
   25910:	19401704 	addi	r5,r3,92
   25914:	280a90fa 	slli	r5,r5,3
   25918:	190016c4 	addi	r4,r3,91
   2591c:	994b883a 	add	r5,r19,r5
   25920:	28c00017 	ldw	r3,0(r5)
   25924:	297ffe04 	addi	r5,r5,-8
   25928:	28c07426 	beq	r5,r3,25afc <_malloc_r+0x668>
   2592c:	01bfff04 	movi	r6,-4
   25930:	19000117 	ldw	r4,4(r3)
   25934:	2188703a 	and	r4,r4,r6
   25938:	1100022e 	bgeu	r2,r4,25944 <_malloc_r+0x4b0>
   2593c:	18c00217 	ldw	r3,8(r3)
   25940:	28fffb1e 	bne	r5,r3,25930 <_malloc_r+0x49c>
   25944:	19400317 	ldw	r5,12(r3)
   25948:	98800117 	ldw	r2,4(r19)
   2594c:	81400315 	stw	r5,12(r16)
   25950:	80c00215 	stw	r3,8(r16)
   25954:	2c000215 	stw	r16,8(r5)
   25958:	1c000315 	stw	r16,12(r3)
   2595c:	003f3606 	br	25638 <_malloc_r+0x1a4>
   25960:	10c00568 	cmpgeui	r3,r2,21
   25964:	18004a26 	beq	r3,zero,25a90 <_malloc_r+0x5fc>
   25968:	10c01568 	cmpgeui	r3,r2,85
   2596c:	18007b1e 	bne	r3,zero,25b5c <_malloc_r+0x6c8>
   25970:	8804d33a 	srli	r2,r17,12
   25974:	11c01bc4 	addi	r7,r2,111
   25978:	380890fa 	slli	r4,r7,3
   2597c:	12001b84 	addi	r8,r2,110
   25980:	003efd06 	br	25578 <_malloc_r+0xe4>
   25984:	63000044 	addi	r12,r12,1
   25988:	608000cc 	andi	r2,r12,3
   2598c:	42000204 	addi	r8,r8,8
   25990:	103f3e1e 	bne	r2,zero,2568c <_malloc_r+0x1f8>
   25994:	00004506 	br	25aac <_malloc_r+0x618>
   25998:	81000217 	ldw	r4,8(r16)
   2599c:	89800054 	ori	r6,r17,1
   259a0:	81800115 	stw	r6,4(r16)
   259a4:	20800315 	stw	r2,12(r4)
   259a8:	11000215 	stw	r4,8(r2)
   259ac:	8463883a 	add	r17,r16,r17
   259b0:	9c400515 	stw	r17,20(r19)
   259b4:	9c400415 	stw	r17,16(r19)
   259b8:	28800054 	ori	r2,r5,1
   259bc:	88800115 	stw	r2,4(r17)
   259c0:	8a400315 	stw	r9,12(r17)
   259c4:	8a400215 	stw	r9,8(r17)
   259c8:	80c7883a 	add	r3,r16,r3
   259cc:	19400015 	stw	r5,0(r3)
   259d0:	9009883a 	mov	r4,r18
   259d4:	002e4fc0 	call	2e4fc <__malloc_unlock>
   259d8:	80800204 	addi	r2,r16,8
   259dc:	003f4306 	br	256ec <_malloc_r+0x258>
   259e0:	880ed0fa 	srli	r7,r17,3
   259e4:	88800204 	addi	r2,r17,8
   259e8:	003ebf06 	br	254e8 <_malloc_r+0x54>
   259ec:	8085883a 	add	r2,r16,r2
   259f0:	10c00117 	ldw	r3,4(r2)
   259f4:	9009883a 	mov	r4,r18
   259f8:	18c00054 	ori	r3,r3,1
   259fc:	10c00115 	stw	r3,4(r2)
   25a00:	002e4fc0 	call	2e4fc <__malloc_unlock>
   25a04:	80800204 	addi	r2,r16,8
   25a08:	003f3806 	br	256ec <_malloc_r+0x258>
   25a0c:	89000054 	ori	r4,r17,1
   25a10:	81000115 	stw	r4,4(r16)
   25a14:	8463883a 	add	r17,r16,r17
   25a18:	9c400515 	stw	r17,20(r19)
   25a1c:	9c400415 	stw	r17,16(r19)
   25a20:	19000054 	ori	r4,r3,1
   25a24:	89000115 	stw	r4,4(r17)
   25a28:	8085883a 	add	r2,r16,r2
   25a2c:	8a400315 	stw	r9,12(r17)
   25a30:	8a400215 	stw	r9,8(r17)
   25a34:	10c00015 	stw	r3,0(r2)
   25a38:	9009883a 	mov	r4,r18
   25a3c:	002e4fc0 	call	2e4fc <__malloc_unlock>
   25a40:	80800204 	addi	r2,r16,8
   25a44:	003f2906 	br	256ec <_malloc_r+0x258>
   25a48:	1006d1ba 	srli	r3,r2,6
   25a4c:	19400e44 	addi	r5,r3,57
   25a50:	280a90fa 	slli	r5,r5,3
   25a54:	19000e04 	addi	r4,r3,56
   25a58:	003fb006 	br	2591c <_malloc_r+0x488>
   25a5c:	84c04626 	beq	r16,r19,25b78 <_malloc_r+0x6e4>
   25a60:	9c000217 	ldw	r16,8(r19)
   25a64:	85400117 	ldw	r21,4(r16)
   25a68:	00bfff04 	movi	r2,-4
   25a6c:	a8aa703a 	and	r21,r21,r2
   25a70:	ac45c83a 	sub	r2,r21,r17
   25a74:	ac400236 	bltu	r21,r17,25a80 <_malloc_r+0x5ec>
   25a78:	10c00408 	cmpgei	r3,r2,16
   25a7c:	183f931e 	bne	r3,zero,258cc <_malloc_r+0x438>
   25a80:	9009883a 	mov	r4,r18
   25a84:	002e4fc0 	call	2e4fc <__malloc_unlock>
   25a88:	0005883a 	mov	r2,zero
   25a8c:	003f1706 	br	256ec <_malloc_r+0x258>
   25a90:	11c01704 	addi	r7,r2,92
   25a94:	380890fa 	slli	r4,r7,3
   25a98:	120016c4 	addi	r8,r2,91
   25a9c:	003eb606 	br	25578 <_malloc_r+0xe4>
   25aa0:	58800217 	ldw	r2,8(r11)
   25aa4:	39ffffc4 	addi	r7,r7,-1
   25aa8:	12c0701e 	bne	r2,r11,25c6c <_malloc_r+0x7d8>
   25aac:	388000cc 	andi	r2,r7,3
   25ab0:	5afffe04 	addi	r11,r11,-8
   25ab4:	103ffa1e 	bne	r2,zero,25aa0 <_malloc_r+0x60c>
   25ab8:	98c00117 	ldw	r3,4(r19)
   25abc:	0104303a 	nor	r2,zero,r4
   25ac0:	10c4703a 	and	r2,r2,r3
   25ac4:	98800115 	stw	r2,4(r19)
   25ac8:	2109883a 	add	r4,r4,r4
   25acc:	113f2336 	bltu	r2,r4,2575c <_malloc_r+0x2c8>
   25ad0:	203f2226 	beq	r4,zero,2575c <_malloc_r+0x2c8>
   25ad4:	2086703a 	and	r3,r4,r2
   25ad8:	1800041e 	bne	r3,zero,25aec <_malloc_r+0x658>
   25adc:	2109883a 	add	r4,r4,r4
   25ae0:	2086703a 	and	r3,r4,r2
   25ae4:	63000104 	addi	r12,r12,4
   25ae8:	183ffc26 	beq	r3,zero,25adc <_malloc_r+0x648>
   25aec:	600f883a 	mov	r7,r12
   25af0:	003ee206 	br	2567c <_malloc_r+0x1e8>
   25af4:	ad400404 	addi	r21,r21,16
   25af8:	003f2b06 	br	257a8 <_malloc_r+0x314>
   25afc:	2009d0ba 	srai	r4,r4,2
   25b00:	00800044 	movi	r2,1
   25b04:	99800117 	ldw	r6,4(r19)
   25b08:	1104983a 	sll	r2,r2,r4
   25b0c:	1184b03a 	or	r2,r2,r6
   25b10:	98800115 	stw	r2,4(r19)
   25b14:	003f8d06 	br	2594c <_malloc_r+0x4b8>
   25b18:	bd69883a 	add	r20,r23,r21
   25b1c:	0529c83a 	sub	r20,zero,r20
   25b20:	a503ffcc 	andi	r20,r20,4095
   25b24:	a00b883a 	mov	r5,r20
   25b28:	9009883a 	mov	r4,r18
   25b2c:	00272d00 	call	272d0 <_sbrk_r>
   25b30:	10ffffe0 	cmpeqi	r3,r2,-1
   25b34:	183f3f26 	beq	r3,zero,25834 <_malloc_r+0x3a0>
   25b38:	0029883a 	mov	r20,zero
   25b3c:	003f3f06 	br	2583c <_malloc_r+0x3a8>
   25b40:	19001568 	cmpgeui	r4,r3,85
   25b44:	2000201e 	bne	r4,zero,25bc8 <_malloc_r+0x734>
   25b48:	1006d33a 	srli	r3,r2,12
   25b4c:	19401bc4 	addi	r5,r3,111
   25b50:	280a90fa 	slli	r5,r5,3
   25b54:	19001b84 	addi	r4,r3,110
   25b58:	003f7006 	br	2591c <_malloc_r+0x488>
   25b5c:	10c05568 	cmpgeui	r3,r2,341
   25b60:	1800201e 	bne	r3,zero,25be4 <_malloc_r+0x750>
   25b64:	8804d3fa 	srli	r2,r17,15
   25b68:	11c01e04 	addi	r7,r2,120
   25b6c:	380890fa 	slli	r4,r7,3
   25b70:	12001dc4 	addi	r8,r2,119
   25b74:	003e8006 	br	25578 <_malloc_r+0xe4>
   25b78:	008000f4 	movhi	r2,3
   25b7c:	10d18e17 	ldw	r3,17976(r2)
   25b80:	a8c7883a 	add	r3,r21,r3
   25b84:	10d18e15 	stw	r3,17976(r2)
   25b88:	003f1406 	br	257dc <_malloc_r+0x348>
   25b8c:	e083ffcc 	andi	r2,fp,4095
   25b90:	103f121e 	bne	r2,zero,257dc <_malloc_r+0x348>
   25b94:	9c000217 	ldw	r16,8(r19)
   25b98:	b56b883a 	add	r21,r22,r21
   25b9c:	ad400054 	ori	r21,r21,1
   25ba0:	85400115 	stw	r21,4(r16)
   25ba4:	003f3e06 	br	258a0 <_malloc_r+0x40c>
   25ba8:	008000f4 	movhi	r2,3
   25bac:	15ca5f15 	stw	r23,10620(r2)
   25bb0:	003f1206 	br	257fc <_malloc_r+0x368>
   25bb4:	b821883a 	mov	r16,r23
   25bb8:	003f3906 	br	258a0 <_malloc_r+0x40c>
   25bbc:	00800044 	movi	r2,1
   25bc0:	b8800115 	stw	r2,4(r23)
   25bc4:	003fae06 	br	25a80 <_malloc_r+0x5ec>
   25bc8:	19005568 	cmpgeui	r4,r3,341
   25bcc:	2000191e 	bne	r4,zero,25c34 <_malloc_r+0x7a0>
   25bd0:	1006d3fa 	srli	r3,r2,15
   25bd4:	19401e04 	addi	r5,r3,120
   25bd8:	280a90fa 	slli	r5,r5,3
   25bdc:	19001dc4 	addi	r4,r3,119
   25be0:	003f4e06 	br	2591c <_malloc_r+0x488>
   25be4:	10815568 	cmpgeui	r2,r2,1365
   25be8:	1000191e 	bne	r2,zero,25c50 <_malloc_r+0x7bc>
   25bec:	8804d4ba 	srli	r2,r17,18
   25bf0:	11c01f44 	addi	r7,r2,125
   25bf4:	380890fa 	slli	r4,r7,3
   25bf8:	12001f04 	addi	r8,r2,124
   25bfc:	003e5e06 	br	25578 <_malloc_r+0xe4>
   25c00:	e73ffe04 	addi	fp,fp,-8
   25c04:	af2b883a 	add	r21,r21,fp
   25c08:	adebc83a 	sub	r21,r21,r23
   25c0c:	0029883a 	mov	r20,zero
   25c10:	003f0a06 	br	2583c <_malloc_r+0x3a8>
   25c14:	81400204 	addi	r5,r16,8
   25c18:	9009883a 	mov	r4,r18
   25c1c:	0024df00 	call	24df0 <_free_r>
   25c20:	9c000217 	ldw	r16,8(r19)
   25c24:	008000f4 	movhi	r2,3
   25c28:	15118e17 	ldw	r20,17976(r2)
   25c2c:	85400117 	ldw	r21,4(r16)
   25c30:	003f1b06 	br	258a0 <_malloc_r+0x40c>
   25c34:	18c15568 	cmpgeui	r3,r3,1365
   25c38:	1800091e 	bne	r3,zero,25c60 <_malloc_r+0x7cc>
   25c3c:	1006d4ba 	srli	r3,r2,18
   25c40:	19401f44 	addi	r5,r3,125
   25c44:	280a90fa 	slli	r5,r5,3
   25c48:	19001f04 	addi	r4,r3,124
   25c4c:	003f3306 	br	2591c <_malloc_r+0x488>
   25c50:	0100fe04 	movi	r4,1016
   25c54:	01c01fc4 	movi	r7,127
   25c58:	02001f84 	movi	r8,126
   25c5c:	003e4606 	br	25578 <_malloc_r+0xe4>
   25c60:	0140fe04 	movi	r5,1016
   25c64:	01001f84 	movi	r4,126
   25c68:	003f2c06 	br	2591c <_malloc_r+0x488>
   25c6c:	98800117 	ldw	r2,4(r19)
   25c70:	003f9506 	br	25ac8 <_malloc_r+0x634>

00025c74 <memchr>:
   25c74:	208000cc 	andi	r2,r4,3
   25c78:	280f883a 	mov	r7,r5
   25c7c:	10000e26 	beq	r2,zero,25cb8 <memchr+0x44>
   25c80:	30bfffc4 	addi	r2,r6,-1
   25c84:	30001726 	beq	r6,zero,25ce4 <memchr+0x70>
   25c88:	29803fcc 	andi	r6,r5,255
   25c8c:	00000606 	br	25ca8 <memchr+0x34>
   25c90:	21000044 	addi	r4,r4,1
   25c94:	20c000cc 	andi	r3,r4,3
   25c98:	18000826 	beq	r3,zero,25cbc <memchr+0x48>
   25c9c:	10bfffc4 	addi	r2,r2,-1
   25ca0:	10ffffe0 	cmpeqi	r3,r2,-1
   25ca4:	18000f1e 	bne	r3,zero,25ce4 <memchr+0x70>
   25ca8:	20c00003 	ldbu	r3,0(r4)
   25cac:	19bff81e 	bne	r3,r6,25c90 <memchr+0x1c>
   25cb0:	2005883a 	mov	r2,r4
   25cb4:	f800283a 	ret
   25cb8:	3005883a 	mov	r2,r6
   25cbc:	10c00128 	cmpgeui	r3,r2,4
   25cc0:	18000a1e 	bne	r3,zero,25cec <memchr+0x78>
   25cc4:	10001e26 	beq	r2,zero,25d40 <memchr+0xcc>
   25cc8:	2087883a 	add	r3,r4,r2
   25ccc:	39803fcc 	andi	r6,r7,255
   25cd0:	2005883a 	mov	r2,r4
   25cd4:	11000003 	ldbu	r4,0(r2)
   25cd8:	21bff626 	beq	r4,r6,25cb4 <memchr+0x40>
   25cdc:	10800044 	addi	r2,r2,1
   25ce0:	18bffc1e 	bne	r3,r2,25cd4 <memchr+0x60>
   25ce4:	0005883a 	mov	r2,zero
   25ce8:	f800283a 	ret
   25cec:	29403fcc 	andi	r5,r5,255
   25cf0:	280c923a 	slli	r6,r5,8
   25cf4:	027fbff4 	movhi	r9,65279
   25cf8:	02202074 	movhi	r8,32897
   25cfc:	314ab03a 	or	r5,r6,r5
   25d00:	280c943a 	slli	r6,r5,16
   25d04:	4a7fbfc4 	addi	r9,r9,-257
   25d08:	42202004 	addi	r8,r8,-32640
   25d0c:	314cb03a 	or	r6,r6,r5
   25d10:	20c00017 	ldw	r3,0(r4)
   25d14:	30c6f03a 	xor	r3,r6,r3
   25d18:	1a4b883a 	add	r5,r3,r9
   25d1c:	00c6303a 	nor	r3,zero,r3
   25d20:	28c6703a 	and	r3,r5,r3
   25d24:	1a06703a 	and	r3,r3,r8
   25d28:	183fe71e 	bne	r3,zero,25cc8 <memchr+0x54>
   25d2c:	10bfff04 	addi	r2,r2,-4
   25d30:	10c00128 	cmpgeui	r3,r2,4
   25d34:	21000104 	addi	r4,r4,4
   25d38:	183ff51e 	bne	r3,zero,25d10 <memchr+0x9c>
   25d3c:	003fe106 	br	25cc4 <memchr+0x50>
   25d40:	f800283a 	ret

00025d44 <memcpy>:
   25d44:	30c00430 	cmpltui	r3,r6,16
   25d48:	2005883a 	mov	r2,r4
   25d4c:	18002d1e 	bne	r3,zero,25e04 <memcpy+0xc0>
   25d50:	2906b03a 	or	r3,r5,r4
   25d54:	18c000cc 	andi	r3,r3,3
   25d58:	1800351e 	bne	r3,zero,25e30 <memcpy+0xec>
   25d5c:	32fffc04 	addi	r11,r6,-16
   25d60:	5816d13a 	srli	r11,r11,4
   25d64:	280f883a 	mov	r7,r5
   25d68:	2007883a 	mov	r3,r4
   25d6c:	5ac00044 	addi	r11,r11,1
   25d70:	5816913a 	slli	r11,r11,4
   25d74:	22d5883a 	add	r10,r4,r11
   25d78:	39000117 	ldw	r4,4(r7)
   25d7c:	3a400017 	ldw	r9,0(r7)
   25d80:	3a000217 	ldw	r8,8(r7)
   25d84:	19000115 	stw	r4,4(r3)
   25d88:	39000317 	ldw	r4,12(r7)
   25d8c:	1a400015 	stw	r9,0(r3)
   25d90:	1a000215 	stw	r8,8(r3)
   25d94:	19000315 	stw	r4,12(r3)
   25d98:	18c00404 	addi	r3,r3,16
   25d9c:	39c00404 	addi	r7,r7,16
   25da0:	50fff51e 	bne	r10,r3,25d78 <memcpy+0x34>
   25da4:	3100030c 	andi	r4,r6,12
   25da8:	2acb883a 	add	r5,r5,r11
   25dac:	320003cc 	andi	r8,r6,15
   25db0:	20002226 	beq	r4,zero,25e3c <memcpy+0xf8>
   25db4:	280f883a 	mov	r7,r5
   25db8:	1813883a 	mov	r9,r3
   25dbc:	39c00104 	addi	r7,r7,4
   25dc0:	3abfff17 	ldw	r10,-4(r7)
   25dc4:	41c9c83a 	sub	r4,r8,r7
   25dc8:	2909883a 	add	r4,r5,r4
   25dcc:	4a800015 	stw	r10,0(r9)
   25dd0:	21000128 	cmpgeui	r4,r4,4
   25dd4:	4a400104 	addi	r9,r9,4
   25dd8:	203ff81e 	bne	r4,zero,25dbc <memcpy+0x78>
   25ddc:	413fff04 	addi	r4,r8,-4
   25de0:	2008d0ba 	srli	r4,r4,2
   25de4:	318000cc 	andi	r6,r6,3
   25de8:	31ffffc4 	addi	r7,r6,-1
   25dec:	21000044 	addi	r4,r4,1
   25df0:	200890ba 	slli	r4,r4,2
   25df4:	1907883a 	add	r3,r3,r4
   25df8:	290b883a 	add	r5,r5,r4
   25dfc:	3000041e 	bne	r6,zero,25e10 <memcpy+0xcc>
   25e00:	f800283a 	ret
   25e04:	2007883a 	mov	r3,r4
   25e08:	31ffffc4 	addi	r7,r6,-1
   25e0c:	303ffc26 	beq	r6,zero,25e00 <memcpy+0xbc>
   25e10:	39c00044 	addi	r7,r7,1
   25e14:	19cf883a 	add	r7,r3,r7
   25e18:	29800003 	ldbu	r6,0(r5)
   25e1c:	18c00044 	addi	r3,r3,1
   25e20:	29400044 	addi	r5,r5,1
   25e24:	19bfffc5 	stb	r6,-1(r3)
   25e28:	38fffb1e 	bne	r7,r3,25e18 <memcpy+0xd4>
   25e2c:	f800283a 	ret
   25e30:	31ffffc4 	addi	r7,r6,-1
   25e34:	2007883a 	mov	r3,r4
   25e38:	003ff506 	br	25e10 <memcpy+0xcc>
   25e3c:	400d883a 	mov	r6,r8
   25e40:	003ff106 	br	25e08 <memcpy+0xc4>

00025e44 <memset>:
   25e44:	20c000cc 	andi	r3,r4,3
   25e48:	2005883a 	mov	r2,r4
   25e4c:	18003626 	beq	r3,zero,25f28 <memset+0xe4>
   25e50:	31ffffc4 	addi	r7,r6,-1
   25e54:	30003326 	beq	r6,zero,25f24 <memset+0xe0>
   25e58:	2811883a 	mov	r8,r5
   25e5c:	2007883a 	mov	r3,r4
   25e60:	00000306 	br	25e70 <memset+0x2c>
   25e64:	39ffffc4 	addi	r7,r7,-1
   25e68:	39bfffe0 	cmpeqi	r6,r7,-1
   25e6c:	30002d1e 	bne	r6,zero,25f24 <memset+0xe0>
   25e70:	18c00044 	addi	r3,r3,1
   25e74:	198000cc 	andi	r6,r3,3
   25e78:	1a3fffc5 	stb	r8,-1(r3)
   25e7c:	303ff91e 	bne	r6,zero,25e64 <memset+0x20>
   25e80:	39000130 	cmpltui	r4,r7,4
   25e84:	2000221e 	bne	r4,zero,25f10 <memset+0xcc>
   25e88:	29003fcc 	andi	r4,r5,255
   25e8c:	200c923a 	slli	r6,r4,8
   25e90:	3a000430 	cmpltui	r8,r7,16
   25e94:	3108b03a 	or	r4,r6,r4
   25e98:	200c943a 	slli	r6,r4,16
   25e9c:	310cb03a 	or	r6,r6,r4
   25ea0:	40000e1e 	bne	r8,zero,25edc <memset+0x98>
   25ea4:	393ffc04 	addi	r4,r7,-16
   25ea8:	2008d13a 	srli	r4,r4,4
   25eac:	21000044 	addi	r4,r4,1
   25eb0:	2008913a 	slli	r4,r4,4
   25eb4:	1909883a 	add	r4,r3,r4
   25eb8:	19800015 	stw	r6,0(r3)
   25ebc:	19800115 	stw	r6,4(r3)
   25ec0:	19800215 	stw	r6,8(r3)
   25ec4:	19800315 	stw	r6,12(r3)
   25ec8:	18c00404 	addi	r3,r3,16
   25ecc:	20fffa1e 	bne	r4,r3,25eb8 <memset+0x74>
   25ed0:	3900030c 	andi	r4,r7,12
   25ed4:	39c003cc 	andi	r7,r7,15
   25ed8:	20000d26 	beq	r4,zero,25f10 <memset+0xcc>
   25edc:	1811883a 	mov	r8,r3
   25ee0:	42000104 	addi	r8,r8,4
   25ee4:	3a09c83a 	sub	r4,r7,r8
   25ee8:	1909883a 	add	r4,r3,r4
   25eec:	21000128 	cmpgeui	r4,r4,4
   25ef0:	41bfff15 	stw	r6,-4(r8)
   25ef4:	203ffa1e 	bne	r4,zero,25ee0 <memset+0x9c>
   25ef8:	393fff04 	addi	r4,r7,-4
   25efc:	2008d0ba 	srli	r4,r4,2
   25f00:	39c000cc 	andi	r7,r7,3
   25f04:	21000044 	addi	r4,r4,1
   25f08:	200890ba 	slli	r4,r4,2
   25f0c:	1907883a 	add	r3,r3,r4
   25f10:	38000426 	beq	r7,zero,25f24 <memset+0xe0>
   25f14:	19cf883a 	add	r7,r3,r7
   25f18:	18c00044 	addi	r3,r3,1
   25f1c:	197fffc5 	stb	r5,-1(r3)
   25f20:	38fffd1e 	bne	r7,r3,25f18 <memset+0xd4>
   25f24:	f800283a 	ret
   25f28:	2007883a 	mov	r3,r4
   25f2c:	300f883a 	mov	r7,r6
   25f30:	003fd306 	br	25e80 <memset+0x3c>

00025f34 <_Balloc>:
   25f34:	20801317 	ldw	r2,76(r4)
   25f38:	defffc04 	addi	sp,sp,-16
   25f3c:	dc400115 	stw	r17,4(sp)
   25f40:	dc000015 	stw	r16,0(sp)
   25f44:	dfc00315 	stw	ra,12(sp)
   25f48:	dc800215 	stw	r18,8(sp)
   25f4c:	2021883a 	mov	r16,r4
   25f50:	2823883a 	mov	r17,r5
   25f54:	10000e26 	beq	r2,zero,25f90 <_Balloc+0x5c>
   25f58:	880690ba 	slli	r3,r17,2
   25f5c:	10c7883a 	add	r3,r2,r3
   25f60:	18800017 	ldw	r2,0(r3)
   25f64:	10001126 	beq	r2,zero,25fac <_Balloc+0x78>
   25f68:	11000017 	ldw	r4,0(r2)
   25f6c:	19000015 	stw	r4,0(r3)
   25f70:	10000415 	stw	zero,16(r2)
   25f74:	10000315 	stw	zero,12(r2)
   25f78:	dfc00317 	ldw	ra,12(sp)
   25f7c:	dc800217 	ldw	r18,8(sp)
   25f80:	dc400117 	ldw	r17,4(sp)
   25f84:	dc000017 	ldw	r16,0(sp)
   25f88:	dec00404 	addi	sp,sp,16
   25f8c:	f800283a 	ret
   25f90:	01800844 	movi	r6,33
   25f94:	01400104 	movi	r5,4
   25f98:	0028cc00 	call	28cc0 <_calloc_r>
   25f9c:	80801315 	stw	r2,76(r16)
   25fa0:	103fed1e 	bne	r2,zero,25f58 <_Balloc+0x24>
   25fa4:	0005883a 	mov	r2,zero
   25fa8:	003ff306 	br	25f78 <_Balloc+0x44>
   25fac:	04800044 	movi	r18,1
   25fb0:	9464983a 	sll	r18,r18,r17
   25fb4:	01400044 	movi	r5,1
   25fb8:	8009883a 	mov	r4,r16
   25fbc:	91800144 	addi	r6,r18,5
   25fc0:	300c90ba 	slli	r6,r6,2
   25fc4:	0028cc00 	call	28cc0 <_calloc_r>
   25fc8:	103ff626 	beq	r2,zero,25fa4 <_Balloc+0x70>
   25fcc:	14400115 	stw	r17,4(r2)
   25fd0:	14800215 	stw	r18,8(r2)
   25fd4:	003fe606 	br	25f70 <_Balloc+0x3c>

00025fd8 <_Bfree>:
   25fd8:	28000726 	beq	r5,zero,25ff8 <_Bfree+0x20>
   25fdc:	28c00117 	ldw	r3,4(r5)
   25fe0:	20801317 	ldw	r2,76(r4)
   25fe4:	180690ba 	slli	r3,r3,2
   25fe8:	10c5883a 	add	r2,r2,r3
   25fec:	10c00017 	ldw	r3,0(r2)
   25ff0:	28c00015 	stw	r3,0(r5)
   25ff4:	11400015 	stw	r5,0(r2)
   25ff8:	f800283a 	ret

00025ffc <__multadd>:
   25ffc:	defff704 	addi	sp,sp,-36
   26000:	dc800215 	stw	r18,8(sp)
   26004:	2c800417 	ldw	r18,16(r5)
   26008:	ddc00715 	stw	r23,28(sp)
   2600c:	dd800615 	stw	r22,24(sp)
   26010:	dd400515 	stw	r21,20(sp)
   26014:	dd000415 	stw	r20,16(sp)
   26018:	dcc00315 	stw	r19,12(sp)
   2601c:	dc400115 	stw	r17,4(sp)
   26020:	dfc00815 	stw	ra,32(sp)
   26024:	dc000015 	stw	r16,0(sp)
   26028:	2827883a 	mov	r19,r5
   2602c:	2029883a 	mov	r20,r4
   26030:	302b883a 	mov	r21,r6
   26034:	3823883a 	mov	r17,r7
   26038:	2d800504 	addi	r22,r5,20
   2603c:	002f883a 	mov	r23,zero
   26040:	b4000017 	ldw	r16,0(r22)
   26044:	a80b883a 	mov	r5,r21
   26048:	b5800104 	addi	r22,r22,4
   2604c:	813fffcc 	andi	r4,r16,65535
   26050:	002b4840 	call	2b484 <__mulsi3>
   26054:	8008d43a 	srli	r4,r16,16
   26058:	a80b883a 	mov	r5,r21
   2605c:	1461883a 	add	r16,r2,r17
   26060:	002b4840 	call	2b484 <__mulsi3>
   26064:	800ed43a 	srli	r7,r16,16
   26068:	843fffcc 	andi	r16,r16,65535
   2606c:	bdc00044 	addi	r23,r23,1
   26070:	11c5883a 	add	r2,r2,r7
   26074:	1006943a 	slli	r3,r2,16
   26078:	1022d43a 	srli	r17,r2,16
   2607c:	1c21883a 	add	r16,r3,r16
   26080:	b43fff15 	stw	r16,-4(r22)
   26084:	bcbfee16 	blt	r23,r18,26040 <__multadd+0x44>
   26088:	88000826 	beq	r17,zero,260ac <__multadd+0xb0>
   2608c:	98800217 	ldw	r2,8(r19)
   26090:	9080120e 	bge	r18,r2,260dc <__multadd+0xe0>
   26094:	90800144 	addi	r2,r18,5
   26098:	100490ba 	slli	r2,r2,2
   2609c:	94800044 	addi	r18,r18,1
   260a0:	9885883a 	add	r2,r19,r2
   260a4:	14400015 	stw	r17,0(r2)
   260a8:	9c800415 	stw	r18,16(r19)
   260ac:	9805883a 	mov	r2,r19
   260b0:	dfc00817 	ldw	ra,32(sp)
   260b4:	ddc00717 	ldw	r23,28(sp)
   260b8:	dd800617 	ldw	r22,24(sp)
   260bc:	dd400517 	ldw	r21,20(sp)
   260c0:	dd000417 	ldw	r20,16(sp)
   260c4:	dcc00317 	ldw	r19,12(sp)
   260c8:	dc800217 	ldw	r18,8(sp)
   260cc:	dc400117 	ldw	r17,4(sp)
   260d0:	dc000017 	ldw	r16,0(sp)
   260d4:	dec00904 	addi	sp,sp,36
   260d8:	f800283a 	ret
   260dc:	99400117 	ldw	r5,4(r19)
   260e0:	a009883a 	mov	r4,r20
   260e4:	29400044 	addi	r5,r5,1
   260e8:	0025f340 	call	25f34 <_Balloc>
   260ec:	1021883a 	mov	r16,r2
   260f0:	10001226 	beq	r2,zero,2613c <__multadd+0x140>
   260f4:	99800417 	ldw	r6,16(r19)
   260f8:	99400304 	addi	r5,r19,12
   260fc:	11000304 	addi	r4,r2,12
   26100:	31800084 	addi	r6,r6,2
   26104:	300c90ba 	slli	r6,r6,2
   26108:	0025d440 	call	25d44 <memcpy>
   2610c:	98000926 	beq	r19,zero,26134 <__multadd+0x138>
   26110:	98c00117 	ldw	r3,4(r19)
   26114:	a0801317 	ldw	r2,76(r20)
   26118:	180690ba 	slli	r3,r3,2
   2611c:	10c5883a 	add	r2,r2,r3
   26120:	10c00017 	ldw	r3,0(r2)
   26124:	98c00015 	stw	r3,0(r19)
   26128:	14c00015 	stw	r19,0(r2)
   2612c:	8027883a 	mov	r19,r16
   26130:	003fd806 	br	26094 <__multadd+0x98>
   26134:	8027883a 	mov	r19,r16
   26138:	003fd606 	br	26094 <__multadd+0x98>
   2613c:	01c000f4 	movhi	r7,3
   26140:	010000f4 	movhi	r4,3
   26144:	39c1e104 	addi	r7,r7,1924
   26148:	000d883a 	mov	r6,zero
   2614c:	01402d44 	movi	r5,181
   26150:	2101f604 	addi	r4,r4,2008
   26154:	0028c480 	call	28c48 <__assert_func>

00026158 <__s2b>:
   26158:	defff904 	addi	sp,sp,-28
   2615c:	dc800215 	stw	r18,8(sp)
   26160:	dc000015 	stw	r16,0(sp)
   26164:	2025883a 	mov	r18,r4
   26168:	2821883a 	mov	r16,r5
   2616c:	39000204 	addi	r4,r7,8
   26170:	01400244 	movi	r5,9
   26174:	dcc00315 	stw	r19,12(sp)
   26178:	dc400115 	stw	r17,4(sp)
   2617c:	dfc00615 	stw	ra,24(sp)
   26180:	3823883a 	mov	r17,r7
   26184:	dd400515 	stw	r21,20(sp)
   26188:	dd000415 	stw	r20,16(sp)
   2618c:	3027883a 	mov	r19,r6
   26190:	002b2d00 	call	2b2d0 <__divsi3>
   26194:	88c00290 	cmplti	r3,r17,10
   26198:	1800341e 	bne	r3,zero,2626c <__s2b+0x114>
   2619c:	00c00044 	movi	r3,1
   261a0:	000b883a 	mov	r5,zero
   261a4:	18c7883a 	add	r3,r3,r3
   261a8:	29400044 	addi	r5,r5,1
   261ac:	18bffd16 	blt	r3,r2,261a4 <__s2b+0x4c>
   261b0:	9009883a 	mov	r4,r18
   261b4:	0025f340 	call	25f34 <_Balloc>
   261b8:	100b883a 	mov	r5,r2
   261bc:	10002d26 	beq	r2,zero,26274 <__s2b+0x11c>
   261c0:	d8800717 	ldw	r2,28(sp)
   261c4:	28800515 	stw	r2,20(r5)
   261c8:	00800044 	movi	r2,1
   261cc:	28800415 	stw	r2,16(r5)
   261d0:	98800290 	cmplti	r2,r19,10
   261d4:	1000221e 	bne	r2,zero,26260 <__s2b+0x108>
   261d8:	85400244 	addi	r21,r16,9
   261dc:	a829883a 	mov	r20,r21
   261e0:	84e1883a 	add	r16,r16,r19
   261e4:	a1c00007 	ldb	r7,0(r20)
   261e8:	01800284 	movi	r6,10
   261ec:	9009883a 	mov	r4,r18
   261f0:	39fff404 	addi	r7,r7,-48
   261f4:	0025ffc0 	call	25ffc <__multadd>
   261f8:	a5000044 	addi	r20,r20,1
   261fc:	100b883a 	mov	r5,r2
   26200:	a43ff81e 	bne	r20,r16,261e4 <__s2b+0x8c>
   26204:	9c3ffe04 	addi	r16,r19,-8
   26208:	ac21883a 	add	r16,r21,r16
   2620c:	9c400a0e 	bge	r19,r17,26238 <__s2b+0xe0>
   26210:	8ce3c83a 	sub	r17,r17,r19
   26214:	8463883a 	add	r17,r16,r17
   26218:	81c00007 	ldb	r7,0(r16)
   2621c:	01800284 	movi	r6,10
   26220:	9009883a 	mov	r4,r18
   26224:	39fff404 	addi	r7,r7,-48
   26228:	0025ffc0 	call	25ffc <__multadd>
   2622c:	84000044 	addi	r16,r16,1
   26230:	100b883a 	mov	r5,r2
   26234:	8c3ff81e 	bne	r17,r16,26218 <__s2b+0xc0>
   26238:	2805883a 	mov	r2,r5
   2623c:	dfc00617 	ldw	ra,24(sp)
   26240:	dd400517 	ldw	r21,20(sp)
   26244:	dd000417 	ldw	r20,16(sp)
   26248:	dcc00317 	ldw	r19,12(sp)
   2624c:	dc800217 	ldw	r18,8(sp)
   26250:	dc400117 	ldw	r17,4(sp)
   26254:	dc000017 	ldw	r16,0(sp)
   26258:	dec00704 	addi	sp,sp,28
   2625c:	f800283a 	ret
   26260:	84000284 	addi	r16,r16,10
   26264:	04c00244 	movi	r19,9
   26268:	003fe806 	br	2620c <__s2b+0xb4>
   2626c:	000b883a 	mov	r5,zero
   26270:	003fcf06 	br	261b0 <__s2b+0x58>
   26274:	01c000f4 	movhi	r7,3
   26278:	010000f4 	movhi	r4,3
   2627c:	39c1e104 	addi	r7,r7,1924
   26280:	000d883a 	mov	r6,zero
   26284:	01403384 	movi	r5,206
   26288:	2101f604 	addi	r4,r4,2008
   2628c:	0028c480 	call	28c48 <__assert_func>

00026290 <__hi0bits>:
   26290:	20bfffec 	andhi	r2,r4,65535
   26294:	1000131e 	bne	r2,zero,262e4 <__hi0bits+0x54>
   26298:	2008943a 	slli	r4,r4,16
   2629c:	00800404 	movi	r2,16
   262a0:	20ffc02c 	andhi	r3,r4,65280
   262a4:	1800021e 	bne	r3,zero,262b0 <__hi0bits+0x20>
   262a8:	2008923a 	slli	r4,r4,8
   262ac:	10800204 	addi	r2,r2,8
   262b0:	20fc002c 	andhi	r3,r4,61440
   262b4:	1800021e 	bne	r3,zero,262c0 <__hi0bits+0x30>
   262b8:	2008913a 	slli	r4,r4,4
   262bc:	10800104 	addi	r2,r2,4
   262c0:	20f0002c 	andhi	r3,r4,49152
   262c4:	1800021e 	bne	r3,zero,262d0 <__hi0bits+0x40>
   262c8:	200890ba 	slli	r4,r4,2
   262cc:	10800084 	addi	r2,r2,2
   262d0:	20000316 	blt	r4,zero,262e0 <__hi0bits+0x50>
   262d4:	2110002c 	andhi	r4,r4,16384
   262d8:	10800044 	addi	r2,r2,1
   262dc:	20000326 	beq	r4,zero,262ec <__hi0bits+0x5c>
   262e0:	f800283a 	ret
   262e4:	0005883a 	mov	r2,zero
   262e8:	003fed06 	br	262a0 <__hi0bits+0x10>
   262ec:	00800804 	movi	r2,32
   262f0:	f800283a 	ret

000262f4 <__lo0bits>:
   262f4:	20c00017 	ldw	r3,0(r4)
   262f8:	188001cc 	andi	r2,r3,7
   262fc:	10000826 	beq	r2,zero,26320 <__lo0bits+0x2c>
   26300:	1880004c 	andi	r2,r3,1
   26304:	10001f1e 	bne	r2,zero,26384 <__lo0bits+0x90>
   26308:	1880008c 	andi	r2,r3,2
   2630c:	10002126 	beq	r2,zero,26394 <__lo0bits+0xa0>
   26310:	1806d07a 	srli	r3,r3,1
   26314:	00800044 	movi	r2,1
   26318:	20c00015 	stw	r3,0(r4)
   2631c:	f800283a 	ret
   26320:	18bfffcc 	andi	r2,r3,65535
   26324:	10001426 	beq	r2,zero,26378 <__lo0bits+0x84>
   26328:	0005883a 	mov	r2,zero
   2632c:	19403fcc 	andi	r5,r3,255
   26330:	2800021e 	bne	r5,zero,2633c <__lo0bits+0x48>
   26334:	1806d23a 	srli	r3,r3,8
   26338:	10800204 	addi	r2,r2,8
   2633c:	194003cc 	andi	r5,r3,15
   26340:	2800021e 	bne	r5,zero,2634c <__lo0bits+0x58>
   26344:	1806d13a 	srli	r3,r3,4
   26348:	10800104 	addi	r2,r2,4
   2634c:	194000cc 	andi	r5,r3,3
   26350:	2800021e 	bne	r5,zero,2635c <__lo0bits+0x68>
   26354:	1806d0ba 	srli	r3,r3,2
   26358:	10800084 	addi	r2,r2,2
   2635c:	1940004c 	andi	r5,r3,1
   26360:	2800031e 	bne	r5,zero,26370 <__lo0bits+0x7c>
   26364:	1806d07a 	srli	r3,r3,1
   26368:	10800044 	addi	r2,r2,1
   2636c:	18000726 	beq	r3,zero,2638c <__lo0bits+0x98>
   26370:	20c00015 	stw	r3,0(r4)
   26374:	f800283a 	ret
   26378:	1806d43a 	srli	r3,r3,16
   2637c:	00800404 	movi	r2,16
   26380:	003fea06 	br	2632c <__lo0bits+0x38>
   26384:	0005883a 	mov	r2,zero
   26388:	f800283a 	ret
   2638c:	00800804 	movi	r2,32
   26390:	f800283a 	ret
   26394:	1806d0ba 	srli	r3,r3,2
   26398:	00800084 	movi	r2,2
   2639c:	20c00015 	stw	r3,0(r4)
   263a0:	f800283a 	ret

000263a4 <__i2b>:
   263a4:	20c01317 	ldw	r3,76(r4)
   263a8:	defffd04 	addi	sp,sp,-12
   263ac:	dc400115 	stw	r17,4(sp)
   263b0:	dc000015 	stw	r16,0(sp)
   263b4:	dfc00215 	stw	ra,8(sp)
   263b8:	2021883a 	mov	r16,r4
   263bc:	2823883a 	mov	r17,r5
   263c0:	18000d26 	beq	r3,zero,263f8 <__i2b+0x54>
   263c4:	18800117 	ldw	r2,4(r3)
   263c8:	10001826 	beq	r2,zero,2642c <__i2b+0x88>
   263cc:	11000017 	ldw	r4,0(r2)
   263d0:	19000115 	stw	r4,4(r3)
   263d4:	00c00044 	movi	r3,1
   263d8:	10000315 	stw	zero,12(r2)
   263dc:	14400515 	stw	r17,20(r2)
   263e0:	10c00415 	stw	r3,16(r2)
   263e4:	dfc00217 	ldw	ra,8(sp)
   263e8:	dc400117 	ldw	r17,4(sp)
   263ec:	dc000017 	ldw	r16,0(sp)
   263f0:	dec00304 	addi	sp,sp,12
   263f4:	f800283a 	ret
   263f8:	01800844 	movi	r6,33
   263fc:	01400104 	movi	r5,4
   26400:	0028cc00 	call	28cc0 <_calloc_r>
   26404:	80801315 	stw	r2,76(r16)
   26408:	1007883a 	mov	r3,r2
   2640c:	103fed1e 	bne	r2,zero,263c4 <__i2b+0x20>
   26410:	01c000f4 	movhi	r7,3
   26414:	010000f4 	movhi	r4,3
   26418:	39c1e104 	addi	r7,r7,1924
   2641c:	000d883a 	mov	r6,zero
   26420:	01405004 	movi	r5,320
   26424:	2101f604 	addi	r4,r4,2008
   26428:	0028c480 	call	28c48 <__assert_func>
   2642c:	01800704 	movi	r6,28
   26430:	01400044 	movi	r5,1
   26434:	8009883a 	mov	r4,r16
   26438:	0028cc00 	call	28cc0 <_calloc_r>
   2643c:	103ff426 	beq	r2,zero,26410 <__i2b+0x6c>
   26440:	00c00044 	movi	r3,1
   26444:	10c00115 	stw	r3,4(r2)
   26448:	00c00084 	movi	r3,2
   2644c:	10c00215 	stw	r3,8(r2)
   26450:	003fe006 	br	263d4 <__i2b+0x30>

00026454 <__multiply>:
   26454:	defff004 	addi	sp,sp,-64
   26458:	dd800c15 	stw	r22,48(sp)
   2645c:	dc400715 	stw	r17,28(sp)
   26460:	2d800417 	ldw	r22,16(r5)
   26464:	34400417 	ldw	r17,16(r6)
   26468:	dc800815 	stw	r18,32(sp)
   2646c:	dc000615 	stw	r16,24(sp)
   26470:	dfc00f15 	stw	ra,60(sp)
   26474:	df000e15 	stw	fp,56(sp)
   26478:	ddc00d15 	stw	r23,52(sp)
   2647c:	dd400b15 	stw	r21,44(sp)
   26480:	dd000a15 	stw	r20,40(sp)
   26484:	dcc00915 	stw	r19,36(sp)
   26488:	2825883a 	mov	r18,r5
   2648c:	3021883a 	mov	r16,r6
   26490:	b4400516 	blt	r22,r17,264a8 <__multiply+0x54>
   26494:	8807883a 	mov	r3,r17
   26498:	2821883a 	mov	r16,r5
   2649c:	b023883a 	mov	r17,r22
   264a0:	3025883a 	mov	r18,r6
   264a4:	182d883a 	mov	r22,r3
   264a8:	80800217 	ldw	r2,8(r16)
   264ac:	8d87883a 	add	r3,r17,r22
   264b0:	d8c00015 	stw	r3,0(sp)
   264b4:	81400117 	ldw	r5,4(r16)
   264b8:	10c0010e 	bge	r2,r3,264c0 <__multiply+0x6c>
   264bc:	29400044 	addi	r5,r5,1
   264c0:	0025f340 	call	25f34 <_Balloc>
   264c4:	d8800515 	stw	r2,20(sp)
   264c8:	10008c26 	beq	r2,zero,266fc <__multiply+0x2a8>
   264cc:	d8800017 	ldw	r2,0(sp)
   264d0:	102690ba 	slli	r19,r2,2
   264d4:	d8800517 	ldw	r2,20(sp)
   264d8:	15000504 	addi	r20,r2,20
   264dc:	a4c5883a 	add	r2,r20,r19
   264e0:	d8800115 	stw	r2,4(sp)
   264e4:	a0800a2e 	bgeu	r20,r2,26510 <__multiply+0xbc>
   264e8:	d8800117 	ldw	r2,4(sp)
   264ec:	d8c00517 	ldw	r3,20(sp)
   264f0:	000b883a 	mov	r5,zero
   264f4:	a009883a 	mov	r4,r20
   264f8:	10cdc83a 	sub	r6,r2,r3
   264fc:	31bffac4 	addi	r6,r6,-21
   26500:	300cd0ba 	srli	r6,r6,2
   26504:	31800044 	addi	r6,r6,1
   26508:	300c90ba 	slli	r6,r6,2
   2650c:	0025e440 	call	25e44 <memset>
   26510:	b02c90ba 	slli	r22,r22,2
   26514:	882290ba 	slli	r17,r17,2
   26518:	94800504 	addi	r18,r18,20
   2651c:	80800504 	addi	r2,r16,20
   26520:	9587883a 	add	r3,r18,r22
   26524:	d8800315 	stw	r2,12(sp)
   26528:	d8c00215 	stw	r3,8(sp)
   2652c:	1463883a 	add	r17,r2,r17
   26530:	90c0542e 	bgeu	r18,r3,26684 <__multiply+0x230>
   26534:	80800544 	addi	r2,r16,21
   26538:	88806d36 	bltu	r17,r2,266f0 <__multiply+0x29c>
   2653c:	8c05c83a 	sub	r2,r17,r16
   26540:	10bffac4 	addi	r2,r2,-21
   26544:	1004d0ba 	srli	r2,r2,2
   26548:	10800044 	addi	r2,r2,1
   2654c:	100490ba 	slli	r2,r2,2
   26550:	d8800415 	stw	r2,16(sp)
   26554:	00000606 	br	26570 <__multiply+0x11c>
   26558:	102ad43a 	srli	r21,r2,16
   2655c:	a800271e 	bne	r21,zero,265fc <__multiply+0x1a8>
   26560:	d8800217 	ldw	r2,8(sp)
   26564:	94800104 	addi	r18,r18,4
   26568:	a5000104 	addi	r20,r20,4
   2656c:	9080452e 	bgeu	r18,r2,26684 <__multiply+0x230>
   26570:	90800017 	ldw	r2,0(r18)
   26574:	15ffffcc 	andi	r23,r2,65535
   26578:	b83ff726 	beq	r23,zero,26558 <__multiply+0x104>
   2657c:	dd400317 	ldw	r21,12(sp)
   26580:	a02d883a 	mov	r22,r20
   26584:	0027883a 	mov	r19,zero
   26588:	af000017 	ldw	fp,0(r21)
   2658c:	b4000017 	ldw	r16,0(r22)
   26590:	b80b883a 	mov	r5,r23
   26594:	e13fffcc 	andi	r4,fp,65535
   26598:	002b4840 	call	2b484 <__mulsi3>
   2659c:	e008d43a 	srli	r4,fp,16
   265a0:	823fffcc 	andi	r8,r16,65535
   265a4:	1205883a 	add	r2,r2,r8
   265a8:	b80b883a 	mov	r5,r23
   265ac:	14e7883a 	add	r19,r2,r19
   265b0:	8020d43a 	srli	r16,r16,16
   265b4:	002b4840 	call	2b484 <__mulsi3>
   265b8:	9808d43a 	srli	r4,r19,16
   265bc:	1405883a 	add	r2,r2,r16
   265c0:	98ffffcc 	andi	r3,r19,65535
   265c4:	1105883a 	add	r2,r2,r4
   265c8:	1008943a 	slli	r4,r2,16
   265cc:	b5800104 	addi	r22,r22,4
   265d0:	ad400104 	addi	r21,r21,4
   265d4:	20c6b03a 	or	r3,r4,r3
   265d8:	b0ffff15 	stw	r3,-4(r22)
   265dc:	1026d43a 	srli	r19,r2,16
   265e0:	ac7fe936 	bltu	r21,r17,26588 <__multiply+0x134>
   265e4:	d8800417 	ldw	r2,16(sp)
   265e8:	a085883a 	add	r2,r20,r2
   265ec:	14c00015 	stw	r19,0(r2)
   265f0:	90800017 	ldw	r2,0(r18)
   265f4:	102ad43a 	srli	r21,r2,16
   265f8:	a83fd926 	beq	r21,zero,26560 <__multiply+0x10c>
   265fc:	a5c00017 	ldw	r23,0(r20)
   26600:	dd800317 	ldw	r22,12(sp)
   26604:	a027883a 	mov	r19,r20
   26608:	b821883a 	mov	r16,r23
   2660c:	0039883a 	mov	fp,zero
   26610:	b100000b 	ldhu	r4,0(r22)
   26614:	a80b883a 	mov	r5,r21
   26618:	9cc00104 	addi	r19,r19,4
   2661c:	002b4840 	call	2b484 <__mulsi3>
   26620:	800cd43a 	srli	r6,r16,16
   26624:	b8ffffcc 	andi	r3,r23,65535
   26628:	b5800104 	addi	r22,r22,4
   2662c:	118d883a 	add	r6,r2,r6
   26630:	3739883a 	add	fp,r6,fp
   26634:	e004943a 	slli	r2,fp,16
   26638:	9c000017 	ldw	r16,0(r19)
   2663c:	a80b883a 	mov	r5,r21
   26640:	10c6b03a 	or	r3,r2,r3
   26644:	98ffff15 	stw	r3,-4(r19)
   26648:	b13fff8b 	ldhu	r4,-2(r22)
   2664c:	002b4840 	call	2b484 <__mulsi3>
   26650:	e00cd43a 	srli	r6,fp,16
   26654:	80ffffcc 	andi	r3,r16,65535
   26658:	10c7883a 	add	r3,r2,r3
   2665c:	19af883a 	add	r23,r3,r6
   26660:	b838d43a 	srli	fp,r23,16
   26664:	b47fea36 	bltu	r22,r17,26610 <__multiply+0x1bc>
   26668:	d8800417 	ldw	r2,16(sp)
   2666c:	94800104 	addi	r18,r18,4
   26670:	a085883a 	add	r2,r20,r2
   26674:	15c00015 	stw	r23,0(r2)
   26678:	d8800217 	ldw	r2,8(sp)
   2667c:	a5000104 	addi	r20,r20,4
   26680:	90bfbb36 	bltu	r18,r2,26570 <__multiply+0x11c>
   26684:	d8800017 	ldw	r2,0(sp)
   26688:	00800516 	blt	zero,r2,266a0 <__multiply+0x24c>
   2668c:	00000906 	br	266b4 <__multiply+0x260>
   26690:	d8800017 	ldw	r2,0(sp)
   26694:	10bfffc4 	addi	r2,r2,-1
   26698:	d8800015 	stw	r2,0(sp)
   2669c:	10000526 	beq	r2,zero,266b4 <__multiply+0x260>
   266a0:	d8c00117 	ldw	r3,4(sp)
   266a4:	18bfff17 	ldw	r2,-4(r3)
   266a8:	18ffff04 	addi	r3,r3,-4
   266ac:	d8c00115 	stw	r3,4(sp)
   266b0:	103ff726 	beq	r2,zero,26690 <__multiply+0x23c>
   266b4:	d8800517 	ldw	r2,20(sp)
   266b8:	d8c00017 	ldw	r3,0(sp)
   266bc:	10c00415 	stw	r3,16(r2)
   266c0:	dfc00f17 	ldw	ra,60(sp)
   266c4:	df000e17 	ldw	fp,56(sp)
   266c8:	ddc00d17 	ldw	r23,52(sp)
   266cc:	dd800c17 	ldw	r22,48(sp)
   266d0:	dd400b17 	ldw	r21,44(sp)
   266d4:	dd000a17 	ldw	r20,40(sp)
   266d8:	dcc00917 	ldw	r19,36(sp)
   266dc:	dc800817 	ldw	r18,32(sp)
   266e0:	dc400717 	ldw	r17,28(sp)
   266e4:	dc000617 	ldw	r16,24(sp)
   266e8:	dec01004 	addi	sp,sp,64
   266ec:	f800283a 	ret
   266f0:	00800104 	movi	r2,4
   266f4:	d8800415 	stw	r2,16(sp)
   266f8:	003f9d06 	br	26570 <__multiply+0x11c>
   266fc:	01c000f4 	movhi	r7,3
   26700:	010000f4 	movhi	r4,3
   26704:	39c1e104 	addi	r7,r7,1924
   26708:	000d883a 	mov	r6,zero
   2670c:	01405744 	movi	r5,349
   26710:	2101f604 	addi	r4,r4,2008
   26714:	0028c480 	call	28c48 <__assert_func>

00026718 <__pow5mult>:
   26718:	defffb04 	addi	sp,sp,-20
   2671c:	dcc00315 	stw	r19,12(sp)
   26720:	dc000015 	stw	r16,0(sp)
   26724:	dfc00415 	stw	ra,16(sp)
   26728:	dc800215 	stw	r18,8(sp)
   2672c:	dc400115 	stw	r17,4(sp)
   26730:	308000cc 	andi	r2,r6,3
   26734:	3021883a 	mov	r16,r6
   26738:	2027883a 	mov	r19,r4
   2673c:	10002d1e 	bne	r2,zero,267f4 <__pow5mult+0xdc>
   26740:	2825883a 	mov	r18,r5
   26744:	8021d0ba 	srai	r16,r16,2
   26748:	80001926 	beq	r16,zero,267b0 <__pow5mult+0x98>
   2674c:	9c401217 	ldw	r17,72(r19)
   26750:	8800061e 	bne	r17,zero,2676c <__pow5mult+0x54>
   26754:	00002f06 	br	26814 <__pow5mult+0xfc>
   26758:	8021d07a 	srai	r16,r16,1
   2675c:	80001426 	beq	r16,zero,267b0 <__pow5mult+0x98>
   26760:	88800017 	ldw	r2,0(r17)
   26764:	10001a26 	beq	r2,zero,267d0 <__pow5mult+0xb8>
   26768:	1023883a 	mov	r17,r2
   2676c:	8080004c 	andi	r2,r16,1
   26770:	103ff926 	beq	r2,zero,26758 <__pow5mult+0x40>
   26774:	880d883a 	mov	r6,r17
   26778:	900b883a 	mov	r5,r18
   2677c:	9809883a 	mov	r4,r19
   26780:	00264540 	call	26454 <__multiply>
   26784:	90001926 	beq	r18,zero,267ec <__pow5mult+0xd4>
   26788:	91000117 	ldw	r4,4(r18)
   2678c:	98c01317 	ldw	r3,76(r19)
   26790:	8021d07a 	srai	r16,r16,1
   26794:	200890ba 	slli	r4,r4,2
   26798:	1907883a 	add	r3,r3,r4
   2679c:	19000017 	ldw	r4,0(r3)
   267a0:	91000015 	stw	r4,0(r18)
   267a4:	1c800015 	stw	r18,0(r3)
   267a8:	1025883a 	mov	r18,r2
   267ac:	803fec1e 	bne	r16,zero,26760 <__pow5mult+0x48>
   267b0:	9005883a 	mov	r2,r18
   267b4:	dfc00417 	ldw	ra,16(sp)
   267b8:	dcc00317 	ldw	r19,12(sp)
   267bc:	dc800217 	ldw	r18,8(sp)
   267c0:	dc400117 	ldw	r17,4(sp)
   267c4:	dc000017 	ldw	r16,0(sp)
   267c8:	dec00504 	addi	sp,sp,20
   267cc:	f800283a 	ret
   267d0:	880d883a 	mov	r6,r17
   267d4:	880b883a 	mov	r5,r17
   267d8:	9809883a 	mov	r4,r19
   267dc:	00264540 	call	26454 <__multiply>
   267e0:	88800015 	stw	r2,0(r17)
   267e4:	10000015 	stw	zero,0(r2)
   267e8:	003fdf06 	br	26768 <__pow5mult+0x50>
   267ec:	1025883a 	mov	r18,r2
   267f0:	003fd906 	br	26758 <__pow5mult+0x40>
   267f4:	100490ba 	slli	r2,r2,2
   267f8:	00c000f4 	movhi	r3,3
   267fc:	000f883a 	mov	r7,zero
   26800:	10c7883a 	add	r3,r2,r3
   26804:	19820517 	ldw	r6,2068(r3)
   26808:	0025ffc0 	call	25ffc <__multadd>
   2680c:	1025883a 	mov	r18,r2
   26810:	003fcc06 	br	26744 <__pow5mult+0x2c>
   26814:	01400044 	movi	r5,1
   26818:	9809883a 	mov	r4,r19
   2681c:	0025f340 	call	25f34 <_Balloc>
   26820:	1023883a 	mov	r17,r2
   26824:	10000726 	beq	r2,zero,26844 <__pow5mult+0x12c>
   26828:	00809c44 	movi	r2,625
   2682c:	88800515 	stw	r2,20(r17)
   26830:	00800044 	movi	r2,1
   26834:	88800415 	stw	r2,16(r17)
   26838:	9c401215 	stw	r17,72(r19)
   2683c:	88000015 	stw	zero,0(r17)
   26840:	003fca06 	br	2676c <__pow5mult+0x54>
   26844:	01c000f4 	movhi	r7,3
   26848:	010000f4 	movhi	r4,3
   2684c:	39c1e104 	addi	r7,r7,1924
   26850:	000d883a 	mov	r6,zero
   26854:	01405004 	movi	r5,320
   26858:	2101f604 	addi	r4,r4,2008
   2685c:	0028c480 	call	28c48 <__assert_func>

00026860 <__lshift>:
   26860:	defff804 	addi	sp,sp,-32
   26864:	dd800615 	stw	r22,24(sp)
   26868:	dc000015 	stw	r16,0(sp)
   2686c:	302dd17a 	srai	r22,r6,5
   26870:	2c000417 	ldw	r16,16(r5)
   26874:	28800217 	ldw	r2,8(r5)
   26878:	dd000415 	stw	r20,16(sp)
   2687c:	b421883a 	add	r16,r22,r16
   26880:	dcc00315 	stw	r19,12(sp)
   26884:	dc800215 	stw	r18,8(sp)
   26888:	dc400115 	stw	r17,4(sp)
   2688c:	dfc00715 	stw	ra,28(sp)
   26890:	dd400515 	stw	r21,20(sp)
   26894:	85000044 	addi	r20,r16,1
   26898:	2827883a 	mov	r19,r5
   2689c:	3025883a 	mov	r18,r6
   268a0:	29400117 	ldw	r5,4(r5)
   268a4:	2023883a 	mov	r17,r4
   268a8:	1500030e 	bge	r2,r20,268b8 <__lshift+0x58>
   268ac:	1085883a 	add	r2,r2,r2
   268b0:	29400044 	addi	r5,r5,1
   268b4:	153ffd16 	blt	r2,r20,268ac <__lshift+0x4c>
   268b8:	8809883a 	mov	r4,r17
   268bc:	0025f340 	call	25f34 <_Balloc>
   268c0:	102b883a 	mov	r21,r2
   268c4:	10004126 	beq	r2,zero,269cc <__lshift+0x16c>
   268c8:	11000504 	addi	r4,r2,20
   268cc:	0580050e 	bge	zero,r22,268e4 <__lshift+0x84>
   268d0:	b02c90ba 	slli	r22,r22,2
   268d4:	000b883a 	mov	r5,zero
   268d8:	b00d883a 	mov	r6,r22
   268dc:	0025e440 	call	25e44 <memset>
   268e0:	1589883a 	add	r4,r2,r22
   268e4:	9a000417 	ldw	r8,16(r19)
   268e8:	98c00504 	addi	r3,r19,20
   268ec:	948007cc 	andi	r18,r18,31
   268f0:	401090ba 	slli	r8,r8,2
   268f4:	1a11883a 	add	r8,r3,r8
   268f8:	90002c26 	beq	r18,zero,269ac <__lshift+0x14c>
   268fc:	01400804 	movi	r5,32
   26900:	2c8bc83a 	sub	r5,r5,r18
   26904:	2005883a 	mov	r2,r4
   26908:	000f883a 	mov	r7,zero
   2690c:	19800017 	ldw	r6,0(r3)
   26910:	10800104 	addi	r2,r2,4
   26914:	18c00104 	addi	r3,r3,4
   26918:	348c983a 	sll	r6,r6,r18
   2691c:	31ccb03a 	or	r6,r6,r7
   26920:	11bfff15 	stw	r6,-4(r2)
   26924:	19bfff17 	ldw	r6,-4(r3)
   26928:	314ed83a 	srl	r7,r6,r5
   2692c:	1a3ff736 	bltu	r3,r8,2690c <__lshift+0xac>
   26930:	98800544 	addi	r2,r19,21
   26934:	40802336 	bltu	r8,r2,269c4 <__lshift+0x164>
   26938:	44c7c83a 	sub	r3,r8,r19
   2693c:	18fffac4 	addi	r3,r3,-21
   26940:	1806d0ba 	srli	r3,r3,2
   26944:	18c00044 	addi	r3,r3,1
   26948:	180690ba 	slli	r3,r3,2
   2694c:	20c9883a 	add	r4,r4,r3
   26950:	21c00015 	stw	r7,0(r4)
   26954:	38000126 	beq	r7,zero,2695c <__lshift+0xfc>
   26958:	a021883a 	mov	r16,r20
   2695c:	ac000415 	stw	r16,16(r21)
   26960:	98000726 	beq	r19,zero,26980 <__lshift+0x120>
   26964:	98c00117 	ldw	r3,4(r19)
   26968:	88801317 	ldw	r2,76(r17)
   2696c:	180690ba 	slli	r3,r3,2
   26970:	10c5883a 	add	r2,r2,r3
   26974:	10c00017 	ldw	r3,0(r2)
   26978:	98c00015 	stw	r3,0(r19)
   2697c:	14c00015 	stw	r19,0(r2)
   26980:	a805883a 	mov	r2,r21
   26984:	dfc00717 	ldw	ra,28(sp)
   26988:	dd800617 	ldw	r22,24(sp)
   2698c:	dd400517 	ldw	r21,20(sp)
   26990:	dd000417 	ldw	r20,16(sp)
   26994:	dcc00317 	ldw	r19,12(sp)
   26998:	dc800217 	ldw	r18,8(sp)
   2699c:	dc400117 	ldw	r17,4(sp)
   269a0:	dc000017 	ldw	r16,0(sp)
   269a4:	dec00804 	addi	sp,sp,32
   269a8:	f800283a 	ret
   269ac:	18800017 	ldw	r2,0(r3)
   269b0:	18c00104 	addi	r3,r3,4
   269b4:	21000104 	addi	r4,r4,4
   269b8:	20bfff15 	stw	r2,-4(r4)
   269bc:	1a3ffb36 	bltu	r3,r8,269ac <__lshift+0x14c>
   269c0:	003fe606 	br	2695c <__lshift+0xfc>
   269c4:	00c00104 	movi	r3,4
   269c8:	003fe006 	br	2694c <__lshift+0xec>
   269cc:	01c000f4 	movhi	r7,3
   269d0:	010000f4 	movhi	r4,3
   269d4:	39c1e104 	addi	r7,r7,1924
   269d8:	000d883a 	mov	r6,zero
   269dc:	01407644 	movi	r5,473
   269e0:	2101f604 	addi	r4,r4,2008
   269e4:	0028c480 	call	28c48 <__assert_func>

000269e8 <__mcmp>:
   269e8:	21800417 	ldw	r6,16(r4)
   269ec:	28c00417 	ldw	r3,16(r5)
   269f0:	30c5c83a 	sub	r2,r6,r3
   269f4:	30c00e1e 	bne	r6,r3,26a30 <__mcmp+0x48>
   269f8:	180690ba 	slli	r3,r3,2
   269fc:	21c00504 	addi	r7,r4,20
   26a00:	29400504 	addi	r5,r5,20
   26a04:	38c9883a 	add	r4,r7,r3
   26a08:	28c7883a 	add	r3,r5,r3
   26a0c:	00000106 	br	26a14 <__mcmp+0x2c>
   26a10:	3900082e 	bgeu	r7,r4,26a34 <__mcmp+0x4c>
   26a14:	21bfff17 	ldw	r6,-4(r4)
   26a18:	197fff17 	ldw	r5,-4(r3)
   26a1c:	213fff04 	addi	r4,r4,-4
   26a20:	18ffff04 	addi	r3,r3,-4
   26a24:	317ffa26 	beq	r6,r5,26a10 <__mcmp+0x28>
   26a28:	3140032e 	bgeu	r6,r5,26a38 <__mcmp+0x50>
   26a2c:	00bfffc4 	movi	r2,-1
   26a30:	f800283a 	ret
   26a34:	f800283a 	ret
   26a38:	00800044 	movi	r2,1
   26a3c:	f800283a 	ret

00026a40 <__mdiff>:
   26a40:	28800417 	ldw	r2,16(r5)
   26a44:	30c00417 	ldw	r3,16(r6)
   26a48:	defffc04 	addi	sp,sp,-16
   26a4c:	dc800215 	stw	r18,8(sp)
   26a50:	dc400115 	stw	r17,4(sp)
   26a54:	dc000015 	stw	r16,0(sp)
   26a58:	dfc00315 	stw	ra,12(sp)
   26a5c:	2823883a 	mov	r17,r5
   26a60:	3021883a 	mov	r16,r6
   26a64:	10e5c83a 	sub	r18,r2,r3
   26a68:	10c0641e 	bne	r2,r3,26bfc <__mdiff+0x1bc>
   26a6c:	180c90ba 	slli	r6,r3,2
   26a70:	29400504 	addi	r5,r5,20
   26a74:	80c00504 	addi	r3,r16,20
   26a78:	2985883a 	add	r2,r5,r6
   26a7c:	1987883a 	add	r3,r3,r6
   26a80:	00000106 	br	26a88 <__mdiff+0x48>
   26a84:	2880642e 	bgeu	r5,r2,26c18 <__mdiff+0x1d8>
   26a88:	11bfff17 	ldw	r6,-4(r2)
   26a8c:	19ffff17 	ldw	r7,-4(r3)
   26a90:	10bfff04 	addi	r2,r2,-4
   26a94:	18ffff04 	addi	r3,r3,-4
   26a98:	31fffa26 	beq	r6,r7,26a84 <__mdiff+0x44>
   26a9c:	31c05236 	bltu	r6,r7,26be8 <__mdiff+0x1a8>
   26aa0:	89400117 	ldw	r5,4(r17)
   26aa4:	0025f340 	call	25f34 <_Balloc>
   26aa8:	10006226 	beq	r2,zero,26c34 <__mdiff+0x1f4>
   26aac:	8a400417 	ldw	r9,16(r17)
   26ab0:	83000417 	ldw	r12,16(r16)
   26ab4:	8ac00504 	addi	r11,r17,20
   26ab8:	481090ba 	slli	r8,r9,2
   26abc:	601890ba 	slli	r12,r12,2
   26ac0:	81800504 	addi	r6,r16,20
   26ac4:	13400504 	addi	r13,r2,20
   26ac8:	14800315 	stw	r18,12(r2)
   26acc:	5a11883a 	add	r8,r11,r8
   26ad0:	3319883a 	add	r12,r6,r12
   26ad4:	681d883a 	mov	r14,r13
   26ad8:	5815883a 	mov	r10,r11
   26adc:	0007883a 	mov	r3,zero
   26ae0:	51000017 	ldw	r4,0(r10)
   26ae4:	31c00017 	ldw	r7,0(r6)
   26ae8:	73800104 	addi	r14,r14,4
   26aec:	217fffcc 	andi	r5,r4,65535
   26af0:	28cb883a 	add	r5,r5,r3
   26af4:	38ffffcc 	andi	r3,r7,65535
   26af8:	28cbc83a 	sub	r5,r5,r3
   26afc:	380ed43a 	srli	r7,r7,16
   26b00:	2006d43a 	srli	r3,r4,16
   26b04:	2809d43a 	srai	r4,r5,16
   26b08:	297fffcc 	andi	r5,r5,65535
   26b0c:	19c7c83a 	sub	r3,r3,r7
   26b10:	1907883a 	add	r3,r3,r4
   26b14:	1808943a 	slli	r4,r3,16
   26b18:	31800104 	addi	r6,r6,4
   26b1c:	1807d43a 	srai	r3,r3,16
   26b20:	214ab03a 	or	r5,r4,r5
   26b24:	717fff15 	stw	r5,-4(r14)
   26b28:	52800104 	addi	r10,r10,4
   26b2c:	333fec36 	bltu	r6,r12,26ae0 <__mdiff+0xa0>
   26b30:	640fc83a 	sub	r7,r12,r16
   26b34:	39fffac4 	addi	r7,r7,-21
   26b38:	84000544 	addi	r16,r16,21
   26b3c:	380ed0ba 	srli	r7,r7,2
   26b40:	64003336 	bltu	r12,r16,26c10 <__mdiff+0x1d0>
   26b44:	380890ba 	slli	r4,r7,2
   26b48:	6909883a 	add	r4,r13,r4
   26b4c:	64002e36 	bltu	r12,r16,26c08 <__mdiff+0x1c8>
   26b50:	39800044 	addi	r6,r7,1
   26b54:	300c90ba 	slli	r6,r6,2
   26b58:	5997883a 	add	r11,r11,r6
   26b5c:	699b883a 	add	r13,r13,r6
   26b60:	5a00152e 	bgeu	r11,r8,26bb8 <__mdiff+0x178>
   26b64:	680f883a 	mov	r7,r13
   26b68:	580d883a 	mov	r6,r11
   26b6c:	31000017 	ldw	r4,0(r6)
   26b70:	39c00104 	addi	r7,r7,4
   26b74:	31800104 	addi	r6,r6,4
   26b78:	217fffcc 	andi	r5,r4,65535
   26b7c:	28cb883a 	add	r5,r5,r3
   26b80:	2815d43a 	srai	r10,r5,16
   26b84:	2006d43a 	srli	r3,r4,16
   26b88:	297fffcc 	andi	r5,r5,65535
   26b8c:	1a87883a 	add	r3,r3,r10
   26b90:	1814943a 	slli	r10,r3,16
   26b94:	1807d43a 	srai	r3,r3,16
   26b98:	514ab03a 	or	r5,r10,r5
   26b9c:	397fff15 	stw	r5,-4(r7)
   26ba0:	323ff236 	bltu	r6,r8,26b6c <__mdiff+0x12c>
   26ba4:	413fffc4 	addi	r4,r8,-1
   26ba8:	22c9c83a 	sub	r4,r4,r11
   26bac:	2008d0ba 	srli	r4,r4,2
   26bb0:	200890ba 	slli	r4,r4,2
   26bb4:	6909883a 	add	r4,r13,r4
   26bb8:	2800041e 	bne	r5,zero,26bcc <__mdiff+0x18c>
   26bbc:	20ffff17 	ldw	r3,-4(r4)
   26bc0:	4a7fffc4 	addi	r9,r9,-1
   26bc4:	213fff04 	addi	r4,r4,-4
   26bc8:	183ffc26 	beq	r3,zero,26bbc <__mdiff+0x17c>
   26bcc:	12400415 	stw	r9,16(r2)
   26bd0:	dfc00317 	ldw	ra,12(sp)
   26bd4:	dc800217 	ldw	r18,8(sp)
   26bd8:	dc400117 	ldw	r17,4(sp)
   26bdc:	dc000017 	ldw	r16,0(sp)
   26be0:	dec00404 	addi	sp,sp,16
   26be4:	f800283a 	ret
   26be8:	8805883a 	mov	r2,r17
   26bec:	04800044 	movi	r18,1
   26bf0:	8023883a 	mov	r17,r16
   26bf4:	1021883a 	mov	r16,r2
   26bf8:	003fa906 	br	26aa0 <__mdiff+0x60>
   26bfc:	903ffa16 	blt	r18,zero,26be8 <__mdiff+0x1a8>
   26c00:	0025883a 	mov	r18,zero
   26c04:	003fa606 	br	26aa0 <__mdiff+0x60>
   26c08:	01800104 	movi	r6,4
   26c0c:	003fd206 	br	26b58 <__mdiff+0x118>
   26c10:	0009883a 	mov	r4,zero
   26c14:	003fcc06 	br	26b48 <__mdiff+0x108>
   26c18:	000b883a 	mov	r5,zero
   26c1c:	0025f340 	call	25f34 <_Balloc>
   26c20:	10000b26 	beq	r2,zero,26c50 <__mdiff+0x210>
   26c24:	00c00044 	movi	r3,1
   26c28:	10c00415 	stw	r3,16(r2)
   26c2c:	10000515 	stw	zero,20(r2)
   26c30:	003fe706 	br	26bd0 <__mdiff+0x190>
   26c34:	01c000f4 	movhi	r7,3
   26c38:	010000f4 	movhi	r4,3
   26c3c:	39c1e104 	addi	r7,r7,1924
   26c40:	000d883a 	mov	r6,zero
   26c44:	01409004 	movi	r5,576
   26c48:	2101f604 	addi	r4,r4,2008
   26c4c:	0028c480 	call	28c48 <__assert_func>
   26c50:	01c000f4 	movhi	r7,3
   26c54:	010000f4 	movhi	r4,3
   26c58:	39c1e104 	addi	r7,r7,1924
   26c5c:	000d883a 	mov	r6,zero
   26c60:	01408c84 	movi	r5,562
   26c64:	2101f604 	addi	r4,r4,2008
   26c68:	0028c480 	call	28c48 <__assert_func>

00026c6c <__ulp>:
   26c6c:	28dffc2c 	andhi	r3,r5,32752
   26c70:	017f3034 	movhi	r5,64704
   26c74:	1947883a 	add	r3,r3,r5
   26c78:	00c0020e 	bge	zero,r3,26c84 <__ulp+0x18>
   26c7c:	0005883a 	mov	r2,zero
   26c80:	f800283a 	ret
   26c84:	00c7c83a 	sub	r3,zero,r3
   26c88:	1807d53a 	srai	r3,r3,20
   26c8c:	18800508 	cmpgei	r2,r3,20
   26c90:	1000041e 	bne	r2,zero,26ca4 <__ulp+0x38>
   26c94:	00800234 	movhi	r2,8
   26c98:	10c7d83a 	sra	r3,r2,r3
   26c9c:	0005883a 	mov	r2,zero
   26ca0:	f800283a 	ret
   26ca4:	193ffb04 	addi	r4,r3,-20
   26ca8:	208007c8 	cmpgei	r2,r4,31
   26cac:	0007883a 	mov	r3,zero
   26cb0:	1000031e 	bne	r2,zero,26cc0 <__ulp+0x54>
   26cb4:	00a00034 	movhi	r2,32768
   26cb8:	1104d83a 	srl	r2,r2,r4
   26cbc:	f800283a 	ret
   26cc0:	00800044 	movi	r2,1
   26cc4:	f800283a 	ret

00026cc8 <__b2d>:
   26cc8:	defffa04 	addi	sp,sp,-24
   26ccc:	dc400115 	stw	r17,4(sp)
   26cd0:	24400417 	ldw	r17,16(r4)
   26cd4:	dc000015 	stw	r16,0(sp)
   26cd8:	24000504 	addi	r16,r4,20
   26cdc:	882290ba 	slli	r17,r17,2
   26ce0:	dc800215 	stw	r18,8(sp)
   26ce4:	dd000415 	stw	r20,16(sp)
   26ce8:	8463883a 	add	r17,r16,r17
   26cec:	8cbfff17 	ldw	r18,-4(r17)
   26cf0:	dcc00315 	stw	r19,12(sp)
   26cf4:	dfc00515 	stw	ra,20(sp)
   26cf8:	9009883a 	mov	r4,r18
   26cfc:	2827883a 	mov	r19,r5
   26d00:	00262900 	call	26290 <__hi0bits>
   26d04:	00c00804 	movi	r3,32
   26d08:	1889c83a 	sub	r4,r3,r2
   26d0c:	99000015 	stw	r4,0(r19)
   26d10:	110002c8 	cmpgei	r4,r2,11
   26d14:	8d3fff04 	addi	r20,r17,-4
   26d18:	20002026 	beq	r4,zero,26d9c <__b2d+0xd4>
   26d1c:	10bffd44 	addi	r2,r2,-11
   26d20:	85000e2e 	bgeu	r16,r20,26d5c <__b2d+0x94>
   26d24:	897ffe17 	ldw	r5,-8(r17)
   26d28:	10001226 	beq	r2,zero,26d74 <__b2d+0xac>
   26d2c:	1889c83a 	sub	r4,r3,r2
   26d30:	90a4983a 	sll	r18,r18,r2
   26d34:	2906d83a 	srl	r3,r5,r4
   26d38:	89bffe04 	addi	r6,r17,-8
   26d3c:	2884983a 	sll	r2,r5,r2
   26d40:	90e4b03a 	or	r18,r18,r3
   26d44:	90cffc34 	orhi	r3,r18,16368
   26d48:	81800c2e 	bgeu	r16,r6,26d7c <__b2d+0xb4>
   26d4c:	897ffd17 	ldw	r5,-12(r17)
   26d50:	2908d83a 	srl	r4,r5,r4
   26d54:	1104b03a 	or	r2,r2,r4
   26d58:	00000806 	br	26d7c <__b2d+0xb4>
   26d5c:	10000426 	beq	r2,zero,26d70 <__b2d+0xa8>
   26d60:	90a4983a 	sll	r18,r18,r2
   26d64:	0005883a 	mov	r2,zero
   26d68:	90cffc34 	orhi	r3,r18,16368
   26d6c:	00000306 	br	26d7c <__b2d+0xb4>
   26d70:	000b883a 	mov	r5,zero
   26d74:	90cffc34 	orhi	r3,r18,16368
   26d78:	2805883a 	mov	r2,r5
   26d7c:	dfc00517 	ldw	ra,20(sp)
   26d80:	dd000417 	ldw	r20,16(sp)
   26d84:	dcc00317 	ldw	r19,12(sp)
   26d88:	dc800217 	ldw	r18,8(sp)
   26d8c:	dc400117 	ldw	r17,4(sp)
   26d90:	dc000017 	ldw	r16,0(sp)
   26d94:	dec00604 	addi	sp,sp,24
   26d98:	f800283a 	ret
   26d9c:	014002c4 	movi	r5,11
   26da0:	2889c83a 	sub	r4,r5,r2
   26da4:	9106d83a 	srl	r3,r18,r4
   26da8:	18cffc34 	orhi	r3,r3,16368
   26dac:	85000536 	bltu	r16,r20,26dc4 <__b2d+0xfc>
   26db0:	000b883a 	mov	r5,zero
   26db4:	10800544 	addi	r2,r2,21
   26db8:	9084983a 	sll	r2,r18,r2
   26dbc:	1144b03a 	or	r2,r2,r5
   26dc0:	003fee06 	br	26d7c <__b2d+0xb4>
   26dc4:	897ffe17 	ldw	r5,-8(r17)
   26dc8:	290ad83a 	srl	r5,r5,r4
   26dcc:	003ff906 	br	26db4 <__b2d+0xec>

00026dd0 <__d2b>:
   26dd0:	defff804 	addi	sp,sp,-32
   26dd4:	dd000615 	stw	r20,24(sp)
   26dd8:	2829883a 	mov	r20,r5
   26ddc:	01400044 	movi	r5,1
   26de0:	dcc00515 	stw	r19,20(sp)
   26de4:	dc000215 	stw	r16,8(sp)
   26de8:	dfc00715 	stw	ra,28(sp)
   26dec:	dc800415 	stw	r18,16(sp)
   26df0:	dc400315 	stw	r17,12(sp)
   26df4:	3021883a 	mov	r16,r6
   26df8:	3827883a 	mov	r19,r7
   26dfc:	0025f340 	call	25f34 <_Balloc>
   26e00:	10004526 	beq	r2,zero,26f18 <__d2b+0x148>
   26e04:	8024d53a 	srli	r18,r16,20
   26e08:	01800434 	movhi	r6,16
   26e0c:	31bfffc4 	addi	r6,r6,-1
   26e10:	9481ffcc 	andi	r18,r18,2047
   26e14:	1023883a 	mov	r17,r2
   26e18:	81a0703a 	and	r16,r16,r6
   26e1c:	90000126 	beq	r18,zero,26e24 <__d2b+0x54>
   26e20:	84000434 	orhi	r16,r16,16
   26e24:	dc000115 	stw	r16,4(sp)
   26e28:	a0002226 	beq	r20,zero,26eb4 <__d2b+0xe4>
   26e2c:	d809883a 	mov	r4,sp
   26e30:	dd000015 	stw	r20,0(sp)
   26e34:	00262f40 	call	262f4 <__lo0bits>
   26e38:	d8c00117 	ldw	r3,4(sp)
   26e3c:	10003326 	beq	r2,zero,26f0c <__d2b+0x13c>
   26e40:	01000804 	movi	r4,32
   26e44:	2089c83a 	sub	r4,r4,r2
   26e48:	1908983a 	sll	r4,r3,r4
   26e4c:	d9400017 	ldw	r5,0(sp)
   26e50:	1886d83a 	srl	r3,r3,r2
   26e54:	2148b03a 	or	r4,r4,r5
   26e58:	89000515 	stw	r4,20(r17)
   26e5c:	d8c00115 	stw	r3,4(sp)
   26e60:	88c00615 	stw	r3,24(r17)
   26e64:	1800271e 	bne	r3,zero,26f04 <__d2b+0x134>
   26e68:	04000044 	movi	r16,1
   26e6c:	8c000415 	stw	r16,16(r17)
   26e70:	90001926 	beq	r18,zero,26ed8 <__d2b+0x108>
   26e74:	00c00d44 	movi	r3,53
   26e78:	94bef344 	addi	r18,r18,-1075
   26e7c:	90a5883a 	add	r18,r18,r2
   26e80:	1885c83a 	sub	r2,r3,r2
   26e84:	d8c00817 	ldw	r3,32(sp)
   26e88:	9c800015 	stw	r18,0(r19)
   26e8c:	18800015 	stw	r2,0(r3)
   26e90:	8805883a 	mov	r2,r17
   26e94:	dfc00717 	ldw	ra,28(sp)
   26e98:	dd000617 	ldw	r20,24(sp)
   26e9c:	dcc00517 	ldw	r19,20(sp)
   26ea0:	dc800417 	ldw	r18,16(sp)
   26ea4:	dc400317 	ldw	r17,12(sp)
   26ea8:	dc000217 	ldw	r16,8(sp)
   26eac:	dec00804 	addi	sp,sp,32
   26eb0:	f800283a 	ret
   26eb4:	d9000104 	addi	r4,sp,4
   26eb8:	00262f40 	call	262f4 <__lo0bits>
   26ebc:	00c00044 	movi	r3,1
   26ec0:	88c00415 	stw	r3,16(r17)
   26ec4:	d8c00117 	ldw	r3,4(sp)
   26ec8:	10800804 	addi	r2,r2,32
   26ecc:	04000044 	movi	r16,1
   26ed0:	88c00515 	stw	r3,20(r17)
   26ed4:	903fe71e 	bne	r18,zero,26e74 <__d2b+0xa4>
   26ed8:	800690ba 	slli	r3,r16,2
   26edc:	10bef384 	addi	r2,r2,-1074
   26ee0:	98800015 	stw	r2,0(r19)
   26ee4:	88c5883a 	add	r2,r17,r3
   26ee8:	11000417 	ldw	r4,16(r2)
   26eec:	8020917a 	slli	r16,r16,5
   26ef0:	00262900 	call	26290 <__hi0bits>
   26ef4:	80a1c83a 	sub	r16,r16,r2
   26ef8:	d8800817 	ldw	r2,32(sp)
   26efc:	14000015 	stw	r16,0(r2)
   26f00:	003fe306 	br	26e90 <__d2b+0xc0>
   26f04:	04000084 	movi	r16,2
   26f08:	003fd806 	br	26e6c <__d2b+0x9c>
   26f0c:	d9000017 	ldw	r4,0(sp)
   26f10:	89000515 	stw	r4,20(r17)
   26f14:	003fd206 	br	26e60 <__d2b+0x90>
   26f18:	01c000f4 	movhi	r7,3
   26f1c:	010000f4 	movhi	r4,3
   26f20:	39c1e104 	addi	r7,r7,1924
   26f24:	000d883a 	mov	r6,zero
   26f28:	0140c284 	movi	r5,778
   26f2c:	2101f604 	addi	r4,r4,2008
   26f30:	0028c480 	call	28c48 <__assert_func>

00026f34 <__ratio>:
   26f34:	defff904 	addi	sp,sp,-28
   26f38:	dc400315 	stw	r17,12(sp)
   26f3c:	2823883a 	mov	r17,r5
   26f40:	d80b883a 	mov	r5,sp
   26f44:	dfc00615 	stw	ra,24(sp)
   26f48:	dcc00515 	stw	r19,20(sp)
   26f4c:	dc800415 	stw	r18,16(sp)
   26f50:	2027883a 	mov	r19,r4
   26f54:	dc000215 	stw	r16,8(sp)
   26f58:	0026cc80 	call	26cc8 <__b2d>
   26f5c:	d9400104 	addi	r5,sp,4
   26f60:	8809883a 	mov	r4,r17
   26f64:	1025883a 	mov	r18,r2
   26f68:	1821883a 	mov	r16,r3
   26f6c:	0026cc80 	call	26cc8 <__b2d>
   26f70:	89000417 	ldw	r4,16(r17)
   26f74:	9a000417 	ldw	r8,16(r19)
   26f78:	d9400117 	ldw	r5,4(sp)
   26f7c:	100d883a 	mov	r6,r2
   26f80:	4111c83a 	sub	r8,r8,r4
   26f84:	d9000017 	ldw	r4,0(sp)
   26f88:	4010917a 	slli	r8,r8,5
   26f8c:	180f883a 	mov	r7,r3
   26f90:	2149c83a 	sub	r4,r4,r5
   26f94:	4111883a 	add	r8,r8,r4
   26f98:	02000c0e 	bge	zero,r8,26fcc <__ratio+0x98>
   26f9c:	4010953a 	slli	r8,r8,20
   26fa0:	4421883a 	add	r16,r8,r16
   26fa4:	9009883a 	mov	r4,r18
   26fa8:	800b883a 	mov	r5,r16
   26fac:	002bd9c0 	call	2bd9c <__divdf3>
   26fb0:	dfc00617 	ldw	ra,24(sp)
   26fb4:	dcc00517 	ldw	r19,20(sp)
   26fb8:	dc800417 	ldw	r18,16(sp)
   26fbc:	dc400317 	ldw	r17,12(sp)
   26fc0:	dc000217 	ldw	r16,8(sp)
   26fc4:	dec00704 	addi	sp,sp,28
   26fc8:	f800283a 	ret
   26fcc:	4010953a 	slli	r8,r8,20
   26fd0:	1a0fc83a 	sub	r7,r3,r8
   26fd4:	003ff306 	br	26fa4 <__ratio+0x70>

00026fd8 <_mprec_log10>:
   26fd8:	defffe04 	addi	sp,sp,-8
   26fdc:	dc000015 	stw	r16,0(sp)
   26fe0:	dfc00115 	stw	ra,4(sp)
   26fe4:	20800608 	cmpgei	r2,r4,24
   26fe8:	2021883a 	mov	r16,r4
   26fec:	10000f26 	beq	r2,zero,2702c <_mprec_log10+0x54>
   26ff0:	0009883a 	mov	r4,zero
   26ff4:	014ffc34 	movhi	r5,16368
   26ff8:	000d883a 	mov	r6,zero
   26ffc:	01d00934 	movhi	r7,16420
   27000:	002c91c0 	call	2c91c <__muldf3>
   27004:	843fffc4 	addi	r16,r16,-1
   27008:	1009883a 	mov	r4,r2
   2700c:	180b883a 	mov	r5,r3
   27010:	803ff91e 	bne	r16,zero,26ff8 <_mprec_log10+0x20>
   27014:	2005883a 	mov	r2,r4
   27018:	2807883a 	mov	r3,r5
   2701c:	dfc00117 	ldw	ra,4(sp)
   27020:	dc000017 	ldw	r16,0(sp)
   27024:	dec00204 	addi	sp,sp,8
   27028:	f800283a 	ret
   2702c:	202090fa 	slli	r16,r4,3
   27030:	008000f4 	movhi	r2,3
   27034:	10821d04 	addi	r2,r2,2164
   27038:	1421883a 	add	r16,r2,r16
   2703c:	81000017 	ldw	r4,0(r16)
   27040:	81400117 	ldw	r5,4(r16)
   27044:	003ff306 	br	27014 <_mprec_log10+0x3c>

00027048 <__copybits>:
   27048:	297fffc4 	addi	r5,r5,-1
   2704c:	280fd17a 	srai	r7,r5,5
   27050:	31400417 	ldw	r5,16(r6)
   27054:	30800504 	addi	r2,r6,20
   27058:	39c00044 	addi	r7,r7,1
   2705c:	280a90ba 	slli	r5,r5,2
   27060:	380e90ba 	slli	r7,r7,2
   27064:	114b883a 	add	r5,r2,r5
   27068:	21cf883a 	add	r7,r4,r7
   2706c:	11400c2e 	bgeu	r2,r5,270a0 <__copybits+0x58>
   27070:	2007883a 	mov	r3,r4
   27074:	12000017 	ldw	r8,0(r2)
   27078:	10800104 	addi	r2,r2,4
   2707c:	18c00104 	addi	r3,r3,4
   27080:	1a3fff15 	stw	r8,-4(r3)
   27084:	117ffb36 	bltu	r2,r5,27074 <__copybits+0x2c>
   27088:	2985c83a 	sub	r2,r5,r6
   2708c:	10bffac4 	addi	r2,r2,-21
   27090:	1004d0ba 	srli	r2,r2,2
   27094:	10800044 	addi	r2,r2,1
   27098:	100490ba 	slli	r2,r2,2
   2709c:	2089883a 	add	r4,r4,r2
   270a0:	21c0072e 	bgeu	r4,r7,270c0 <__copybits+0x78>
   270a4:	39bfffc4 	addi	r6,r7,-1
   270a8:	310dc83a 	sub	r6,r6,r4
   270ac:	300cd0ba 	srli	r6,r6,2
   270b0:	000b883a 	mov	r5,zero
   270b4:	31800044 	addi	r6,r6,1
   270b8:	300c90ba 	slli	r6,r6,2
   270bc:	0025e441 	jmpi	25e44 <memset>
   270c0:	f800283a 	ret

000270c4 <__any_on>:
   270c4:	20c00417 	ldw	r3,16(r4)
   270c8:	280dd17a 	srai	r6,r5,5
   270cc:	21000504 	addi	r4,r4,20
   270d0:	1980080e 	bge	r3,r6,270f4 <__any_on+0x30>
   270d4:	180490ba 	slli	r2,r3,2
   270d8:	2085883a 	add	r2,r4,r2
   270dc:	20800f2e 	bgeu	r4,r2,2711c <__any_on+0x58>
   270e0:	10ffff17 	ldw	r3,-4(r2)
   270e4:	10bfff04 	addi	r2,r2,-4
   270e8:	183ffc26 	beq	r3,zero,270dc <__any_on+0x18>
   270ec:	00800044 	movi	r2,1
   270f0:	f800283a 	ret
   270f4:	300490ba 	slli	r2,r6,2
   270f8:	2085883a 	add	r2,r4,r2
   270fc:	30fff70e 	bge	r6,r3,270dc <__any_on+0x18>
   27100:	294007cc 	andi	r5,r5,31
   27104:	283ff526 	beq	r5,zero,270dc <__any_on+0x18>
   27108:	11800017 	ldw	r6,0(r2)
   2710c:	3146d83a 	srl	r3,r6,r5
   27110:	194a983a 	sll	r5,r3,r5
   27114:	317ff51e 	bne	r6,r5,270ec <__any_on+0x28>
   27118:	003ff006 	br	270dc <__any_on+0x18>
   2711c:	0005883a 	mov	r2,zero
   27120:	f800283a 	ret

00027124 <_putc_r>:
   27124:	defffc04 	addi	sp,sp,-16
   27128:	dc400215 	stw	r17,8(sp)
   2712c:	dfc00315 	stw	ra,12(sp)
   27130:	2023883a 	mov	r17,r4
   27134:	20000226 	beq	r4,zero,27140 <_putc_r+0x1c>
   27138:	20800e17 	ldw	r2,56(r4)
   2713c:	10000e26 	beq	r2,zero,27178 <_putc_r+0x54>
   27140:	30800217 	ldw	r2,8(r6)
   27144:	10bfffc4 	addi	r2,r2,-1
   27148:	30800215 	stw	r2,8(r6)
   2714c:	10001316 	blt	r2,zero,2719c <_putc_r+0x78>
   27150:	30800017 	ldw	r2,0(r6)
   27154:	11400005 	stb	r5,0(r2)
   27158:	30800017 	ldw	r2,0(r6)
   2715c:	10c00044 	addi	r3,r2,1
   27160:	30c00015 	stw	r3,0(r6)
   27164:	10800003 	ldbu	r2,0(r2)
   27168:	dfc00317 	ldw	ra,12(sp)
   2716c:	dc400217 	ldw	r17,8(sp)
   27170:	dec00404 	addi	sp,sp,16
   27174:	f800283a 	ret
   27178:	d9800115 	stw	r6,4(sp)
   2717c:	d9400015 	stw	r5,0(sp)
   27180:	0024c8c0 	call	24c8c <__sinit>
   27184:	d9800117 	ldw	r6,4(sp)
   27188:	d9400017 	ldw	r5,0(sp)
   2718c:	30800217 	ldw	r2,8(r6)
   27190:	10bfffc4 	addi	r2,r2,-1
   27194:	30800215 	stw	r2,8(r6)
   27198:	103fed0e 	bge	r2,zero,27150 <_putc_r+0x2c>
   2719c:	30c00617 	ldw	r3,24(r6)
   271a0:	10c00e16 	blt	r2,r3,271dc <_putc_r+0xb8>
   271a4:	30800017 	ldw	r2,0(r6)
   271a8:	11400005 	stb	r5,0(r2)
   271ac:	30c00017 	ldw	r3,0(r6)
   271b0:	18800003 	ldbu	r2,0(r3)
   271b4:	108002a0 	cmpeqi	r2,r2,10
   271b8:	1000071e 	bne	r2,zero,271d8 <_putc_r+0xb4>
   271bc:	18800044 	addi	r2,r3,1
   271c0:	30800015 	stw	r2,0(r6)
   271c4:	18800003 	ldbu	r2,0(r3)
   271c8:	dfc00317 	ldw	ra,12(sp)
   271cc:	dc400217 	ldw	r17,8(sp)
   271d0:	dec00404 	addi	sp,sp,16
   271d4:	f800283a 	ret
   271d8:	01400284 	movi	r5,10
   271dc:	8809883a 	mov	r4,r17
   271e0:	dfc00317 	ldw	ra,12(sp)
   271e4:	dc400217 	ldw	r17,8(sp)
   271e8:	dec00404 	addi	sp,sp,16
   271ec:	0028a2c1 	jmpi	28a2c <__swbuf_r>

000271f0 <putc>:
   271f0:	defffc04 	addi	sp,sp,-16
   271f4:	008000f4 	movhi	r2,3
   271f8:	dc800215 	stw	r18,8(sp)
   271fc:	148a5e17 	ldw	r18,10616(r2)
   27200:	dc400115 	stw	r17,4(sp)
   27204:	dfc00315 	stw	ra,12(sp)
   27208:	2023883a 	mov	r17,r4
   2720c:	90000226 	beq	r18,zero,27218 <putc+0x28>
   27210:	90800e17 	ldw	r2,56(r18)
   27214:	10000f26 	beq	r2,zero,27254 <putc+0x64>
   27218:	28800217 	ldw	r2,8(r5)
   2721c:	10bfffc4 	addi	r2,r2,-1
   27220:	28800215 	stw	r2,8(r5)
   27224:	10001316 	blt	r2,zero,27274 <putc+0x84>
   27228:	28800017 	ldw	r2,0(r5)
   2722c:	14400005 	stb	r17,0(r2)
   27230:	28800017 	ldw	r2,0(r5)
   27234:	10c00044 	addi	r3,r2,1
   27238:	28c00015 	stw	r3,0(r5)
   2723c:	10800003 	ldbu	r2,0(r2)
   27240:	dfc00317 	ldw	ra,12(sp)
   27244:	dc800217 	ldw	r18,8(sp)
   27248:	dc400117 	ldw	r17,4(sp)
   2724c:	dec00404 	addi	sp,sp,16
   27250:	f800283a 	ret
   27254:	9009883a 	mov	r4,r18
   27258:	d9400015 	stw	r5,0(sp)
   2725c:	0024c8c0 	call	24c8c <__sinit>
   27260:	d9400017 	ldw	r5,0(sp)
   27264:	28800217 	ldw	r2,8(r5)
   27268:	10bfffc4 	addi	r2,r2,-1
   2726c:	28800215 	stw	r2,8(r5)
   27270:	103fed0e 	bge	r2,zero,27228 <putc+0x38>
   27274:	28c00617 	ldw	r3,24(r5)
   27278:	10c00a16 	blt	r2,r3,272a4 <putc+0xb4>
   2727c:	28800017 	ldw	r2,0(r5)
   27280:	14400005 	stb	r17,0(r2)
   27284:	28c00017 	ldw	r3,0(r5)
   27288:	18800003 	ldbu	r2,0(r3)
   2728c:	108002a0 	cmpeqi	r2,r2,10
   27290:	10000c1e 	bne	r2,zero,272c4 <putc+0xd4>
   27294:	18800044 	addi	r2,r3,1
   27298:	28800015 	stw	r2,0(r5)
   2729c:	18800003 	ldbu	r2,0(r3)
   272a0:	003fe706 	br	27240 <putc+0x50>
   272a4:	280d883a 	mov	r6,r5
   272a8:	880b883a 	mov	r5,r17
   272ac:	9009883a 	mov	r4,r18
   272b0:	dfc00317 	ldw	ra,12(sp)
   272b4:	dc800217 	ldw	r18,8(sp)
   272b8:	dc400117 	ldw	r17,4(sp)
   272bc:	dec00404 	addi	sp,sp,16
   272c0:	0028a2c1 	jmpi	28a2c <__swbuf_r>
   272c4:	280d883a 	mov	r6,r5
   272c8:	01400284 	movi	r5,10
   272cc:	003ff706 	br	272ac <putc+0xbc>

000272d0 <_sbrk_r>:
   272d0:	defffe04 	addi	sp,sp,-8
   272d4:	dc000015 	stw	r16,0(sp)
   272d8:	008000f4 	movhi	r2,3
   272dc:	2021883a 	mov	r16,r4
   272e0:	2809883a 	mov	r4,r5
   272e4:	dfc00115 	stw	ra,4(sp)
   272e8:	10117f15 	stw	zero,17916(r2)
   272ec:	002e6d40 	call	2e6d4 <sbrk>
   272f0:	10ffffd8 	cmpnei	r3,r2,-1
   272f4:	18000426 	beq	r3,zero,27308 <_sbrk_r+0x38>
   272f8:	dfc00117 	ldw	ra,4(sp)
   272fc:	dc000017 	ldw	r16,0(sp)
   27300:	dec00204 	addi	sp,sp,8
   27304:	f800283a 	ret
   27308:	00c000f4 	movhi	r3,3
   2730c:	18d17f17 	ldw	r3,17916(r3)
   27310:	183ff926 	beq	r3,zero,272f8 <_sbrk_r+0x28>
   27314:	80c00015 	stw	r3,0(r16)
   27318:	dfc00117 	ldw	ra,4(sp)
   2731c:	dc000017 	ldw	r16,0(sp)
   27320:	dec00204 	addi	sp,sp,8
   27324:	f800283a 	ret

00027328 <__sread>:
   27328:	defffe04 	addi	sp,sp,-8
   2732c:	dc000015 	stw	r16,0(sp)
   27330:	2821883a 	mov	r16,r5
   27334:	2940038f 	ldh	r5,14(r5)
   27338:	dfc00115 	stw	ra,4(sp)
   2733c:	00299d00 	call	299d0 <_read_r>
   27340:	10000716 	blt	r2,zero,27360 <__sread+0x38>
   27344:	80c01417 	ldw	r3,80(r16)
   27348:	1887883a 	add	r3,r3,r2
   2734c:	80c01415 	stw	r3,80(r16)
   27350:	dfc00117 	ldw	ra,4(sp)
   27354:	dc000017 	ldw	r16,0(sp)
   27358:	dec00204 	addi	sp,sp,8
   2735c:	f800283a 	ret
   27360:	80c0030b 	ldhu	r3,12(r16)
   27364:	18fbffcc 	andi	r3,r3,61439
   27368:	80c0030d 	sth	r3,12(r16)
   2736c:	dfc00117 	ldw	ra,4(sp)
   27370:	dc000017 	ldw	r16,0(sp)
   27374:	dec00204 	addi	sp,sp,8
   27378:	f800283a 	ret

0002737c <__seofread>:
   2737c:	0005883a 	mov	r2,zero
   27380:	f800283a 	ret

00027384 <__swrite>:
   27384:	2880030b 	ldhu	r2,12(r5)
   27388:	defffb04 	addi	sp,sp,-20
   2738c:	dcc00315 	stw	r19,12(sp)
   27390:	dc800215 	stw	r18,8(sp)
   27394:	dc400115 	stw	r17,4(sp)
   27398:	dc000015 	stw	r16,0(sp)
   2739c:	dfc00415 	stw	ra,16(sp)
   273a0:	10c0400c 	andi	r3,r2,256
   273a4:	2821883a 	mov	r16,r5
   273a8:	2023883a 	mov	r17,r4
   273ac:	2940038f 	ldh	r5,14(r5)
   273b0:	3025883a 	mov	r18,r6
   273b4:	3827883a 	mov	r19,r7
   273b8:	18000c1e 	bne	r3,zero,273ec <__swrite+0x68>
   273bc:	10bbffcc 	andi	r2,r2,61439
   273c0:	980f883a 	mov	r7,r19
   273c4:	900d883a 	mov	r6,r18
   273c8:	8809883a 	mov	r4,r17
   273cc:	8080030d 	sth	r2,12(r16)
   273d0:	dfc00417 	ldw	ra,16(sp)
   273d4:	dcc00317 	ldw	r19,12(sp)
   273d8:	dc800217 	ldw	r18,8(sp)
   273dc:	dc400117 	ldw	r17,4(sp)
   273e0:	dc000017 	ldw	r16,0(sp)
   273e4:	dec00504 	addi	sp,sp,20
   273e8:	0028b8c1 	jmpi	28b8c <_write_r>
   273ec:	01c00084 	movi	r7,2
   273f0:	000d883a 	mov	r6,zero
   273f4:	00297f00 	call	297f0 <_lseek_r>
   273f8:	8080030b 	ldhu	r2,12(r16)
   273fc:	8140038f 	ldh	r5,14(r16)
   27400:	003fee06 	br	273bc <__swrite+0x38>

00027404 <__sseek>:
   27404:	defffe04 	addi	sp,sp,-8
   27408:	dc000015 	stw	r16,0(sp)
   2740c:	2821883a 	mov	r16,r5
   27410:	2940038f 	ldh	r5,14(r5)
   27414:	dfc00115 	stw	ra,4(sp)
   27418:	00297f00 	call	297f0 <_lseek_r>
   2741c:	10ffffd8 	cmpnei	r3,r2,-1
   27420:	18000826 	beq	r3,zero,27444 <__sseek+0x40>
   27424:	80c0030b 	ldhu	r3,12(r16)
   27428:	80801415 	stw	r2,80(r16)
   2742c:	18c40014 	ori	r3,r3,4096
   27430:	80c0030d 	sth	r3,12(r16)
   27434:	dfc00117 	ldw	ra,4(sp)
   27438:	dc000017 	ldw	r16,0(sp)
   2743c:	dec00204 	addi	sp,sp,8
   27440:	f800283a 	ret
   27444:	80c0030b 	ldhu	r3,12(r16)
   27448:	18fbffcc 	andi	r3,r3,61439
   2744c:	80c0030d 	sth	r3,12(r16)
   27450:	dfc00117 	ldw	ra,4(sp)
   27454:	dc000017 	ldw	r16,0(sp)
   27458:	dec00204 	addi	sp,sp,8
   2745c:	f800283a 	ret

00027460 <__sclose>:
   27460:	2940038f 	ldh	r5,14(r5)
   27464:	0028bf01 	jmpi	28bf0 <_close_r>

00027468 <strlen>:
   27468:	208000cc 	andi	r2,r4,3
   2746c:	10000926 	beq	r2,zero,27494 <strlen+0x2c>
   27470:	2005883a 	mov	r2,r4
   27474:	00000306 	br	27484 <strlen+0x1c>
   27478:	10800044 	addi	r2,r2,1
   2747c:	10c000cc 	andi	r3,r2,3
   27480:	18000526 	beq	r3,zero,27498 <strlen+0x30>
   27484:	10c00007 	ldb	r3,0(r2)
   27488:	183ffb1e 	bne	r3,zero,27478 <strlen+0x10>
   2748c:	1105c83a 	sub	r2,r2,r4
   27490:	f800283a 	ret
   27494:	2005883a 	mov	r2,r4
   27498:	11400017 	ldw	r5,0(r2)
   2749c:	01ffbff4 	movhi	r7,65279
   274a0:	39ffbfc4 	addi	r7,r7,-257
   274a4:	29c7883a 	add	r3,r5,r7
   274a8:	01a02074 	movhi	r6,32897
   274ac:	014a303a 	nor	r5,zero,r5
   274b0:	1946703a 	and	r3,r3,r5
   274b4:	31a02004 	addi	r6,r6,-32640
   274b8:	1986703a 	and	r3,r3,r6
   274bc:	1800071e 	bne	r3,zero,274dc <strlen+0x74>
   274c0:	11400117 	ldw	r5,4(r2)
   274c4:	10800104 	addi	r2,r2,4
   274c8:	29c7883a 	add	r3,r5,r7
   274cc:	014a303a 	nor	r5,zero,r5
   274d0:	1946703a 	and	r3,r3,r5
   274d4:	1986703a 	and	r3,r3,r6
   274d8:	183ff926 	beq	r3,zero,274c0 <strlen+0x58>
   274dc:	10c00007 	ldb	r3,0(r2)
   274e0:	183fea26 	beq	r3,zero,2748c <strlen+0x24>
   274e4:	10c00047 	ldb	r3,1(r2)
   274e8:	10800044 	addi	r2,r2,1
   274ec:	183fe726 	beq	r3,zero,2748c <strlen+0x24>
   274f0:	10c00047 	ldb	r3,1(r2)
   274f4:	10800044 	addi	r2,r2,1
   274f8:	183ffa1e 	bne	r3,zero,274e4 <strlen+0x7c>
   274fc:	003fe306 	br	2748c <strlen+0x24>

00027500 <__sprint_r.part.0>:
   27500:	28801917 	ldw	r2,100(r5)
   27504:	defff604 	addi	sp,sp,-40
   27508:	dcc00315 	stw	r19,12(sp)
   2750c:	dfc00915 	stw	ra,36(sp)
   27510:	df000815 	stw	fp,32(sp)
   27514:	ddc00715 	stw	r23,28(sp)
   27518:	dd800615 	stw	r22,24(sp)
   2751c:	dd400515 	stw	r21,20(sp)
   27520:	dd000415 	stw	r20,16(sp)
   27524:	dc800215 	stw	r18,8(sp)
   27528:	dc400115 	stw	r17,4(sp)
   2752c:	dc000015 	stw	r16,0(sp)
   27530:	1088000c 	andi	r2,r2,8192
   27534:	3027883a 	mov	r19,r6
   27538:	10002c26 	beq	r2,zero,275ec <__sprint_r.part.0+0xec>
   2753c:	30800217 	ldw	r2,8(r6)
   27540:	35000017 	ldw	r20,0(r6)
   27544:	2821883a 	mov	r16,r5
   27548:	2023883a 	mov	r17,r4
   2754c:	05bfff04 	movi	r22,-4
   27550:	10002426 	beq	r2,zero,275e4 <__sprint_r.part.0+0xe4>
   27554:	a5400117 	ldw	r21,4(r20)
   27558:	a5c00017 	ldw	r23,0(r20)
   2755c:	a824d0ba 	srli	r18,r21,2
   27560:	90001b26 	beq	r18,zero,275d0 <__sprint_r.part.0+0xd0>
   27564:	0039883a 	mov	fp,zero
   27568:	00000206 	br	27574 <__sprint_r.part.0+0x74>
   2756c:	bdc00104 	addi	r23,r23,4
   27570:	97001626 	beq	r18,fp,275cc <__sprint_r.part.0+0xcc>
   27574:	b9400017 	ldw	r5,0(r23)
   27578:	800d883a 	mov	r6,r16
   2757c:	8809883a 	mov	r4,r17
   27580:	00290e00 	call	290e0 <_fputwc_r>
   27584:	10bfffe0 	cmpeqi	r2,r2,-1
   27588:	e7000044 	addi	fp,fp,1
   2758c:	103ff726 	beq	r2,zero,2756c <__sprint_r.part.0+0x6c>
   27590:	00bfffc4 	movi	r2,-1
   27594:	98000215 	stw	zero,8(r19)
   27598:	98000115 	stw	zero,4(r19)
   2759c:	dfc00917 	ldw	ra,36(sp)
   275a0:	df000817 	ldw	fp,32(sp)
   275a4:	ddc00717 	ldw	r23,28(sp)
   275a8:	dd800617 	ldw	r22,24(sp)
   275ac:	dd400517 	ldw	r21,20(sp)
   275b0:	dd000417 	ldw	r20,16(sp)
   275b4:	dcc00317 	ldw	r19,12(sp)
   275b8:	dc800217 	ldw	r18,8(sp)
   275bc:	dc400117 	ldw	r17,4(sp)
   275c0:	dc000017 	ldw	r16,0(sp)
   275c4:	dec00a04 	addi	sp,sp,40
   275c8:	f800283a 	ret
   275cc:	98800217 	ldw	r2,8(r19)
   275d0:	adaa703a 	and	r21,r21,r22
   275d4:	1545c83a 	sub	r2,r2,r21
   275d8:	98800215 	stw	r2,8(r19)
   275dc:	a5000204 	addi	r20,r20,8
   275e0:	103fdc1e 	bne	r2,zero,27554 <__sprint_r.part.0+0x54>
   275e4:	0005883a 	mov	r2,zero
   275e8:	003fea06 	br	27594 <__sprint_r.part.0+0x94>
   275ec:	00291dc0 	call	291dc <__sfvwrite_r>
   275f0:	003fe806 	br	27594 <__sprint_r.part.0+0x94>

000275f4 <__sprint_r>:
   275f4:	30c00217 	ldw	r3,8(r6)
   275f8:	18000126 	beq	r3,zero,27600 <__sprint_r+0xc>
   275fc:	00275001 	jmpi	27500 <__sprint_r.part.0>
   27600:	30000115 	stw	zero,4(r6)
   27604:	0005883a 	mov	r2,zero
   27608:	f800283a 	ret

0002760c <___vfiprintf_internal_r>:
   2760c:	deffcf04 	addi	sp,sp,-196
   27610:	dd802d15 	stw	r22,180(sp)
   27614:	dd402c15 	stw	r21,176(sp)
   27618:	dd002b15 	stw	r20,172(sp)
   2761c:	dfc03015 	stw	ra,192(sp)
   27620:	df002f15 	stw	fp,188(sp)
   27624:	ddc02e15 	stw	r23,184(sp)
   27628:	dcc02a15 	stw	r19,168(sp)
   2762c:	dc802915 	stw	r18,164(sp)
   27630:	dc402815 	stw	r17,160(sp)
   27634:	dc002715 	stw	r16,156(sp)
   27638:	d9c00415 	stw	r7,16(sp)
   2763c:	202d883a 	mov	r22,r4
   27640:	282b883a 	mov	r21,r5
   27644:	3029883a 	mov	r20,r6
   27648:	20000226 	beq	r4,zero,27654 <___vfiprintf_internal_r+0x48>
   2764c:	20800e17 	ldw	r2,56(r4)
   27650:	1001bd26 	beq	r2,zero,27d48 <___vfiprintf_internal_r+0x73c>
   27654:	a880030b 	ldhu	r2,12(r21)
   27658:	10c8000c 	andi	r3,r2,8192
   2765c:	1800061e 	bne	r3,zero,27678 <___vfiprintf_internal_r+0x6c>
   27660:	a8c01917 	ldw	r3,100(r21)
   27664:	0137ffc4 	movi	r4,-8193
   27668:	10880014 	ori	r2,r2,8192
   2766c:	1906703a 	and	r3,r3,r4
   27670:	a880030d 	sth	r2,12(r21)
   27674:	a8c01915 	stw	r3,100(r21)
   27678:	10c0020c 	andi	r3,r2,8
   2767c:	18010826 	beq	r3,zero,27aa0 <___vfiprintf_internal_r+0x494>
   27680:	a8c00417 	ldw	r3,16(r21)
   27684:	18010626 	beq	r3,zero,27aa0 <___vfiprintf_internal_r+0x494>
   27688:	1080068c 	andi	r2,r2,26
   2768c:	10800298 	cmpnei	r2,r2,10
   27690:	10010b26 	beq	r2,zero,27ac0 <___vfiprintf_internal_r+0x4b4>
   27694:	dc801704 	addi	r18,sp,92
   27698:	dc800a15 	stw	r18,40(sp)
   2769c:	d8000c15 	stw	zero,48(sp)
   276a0:	d8000b15 	stw	zero,44(sp)
   276a4:	9021883a 	mov	r16,r18
   276a8:	d8000515 	stw	zero,20(sp)
   276ac:	d8000115 	stw	zero,4(sp)
   276b0:	a0800007 	ldb	r2,0(r20)
   276b4:	1000e826 	beq	r2,zero,27a58 <___vfiprintf_internal_r+0x44c>
   276b8:	a023883a 	mov	r17,r20
   276bc:	00000306 	br	276cc <___vfiprintf_internal_r+0xc0>
   276c0:	88800047 	ldb	r2,1(r17)
   276c4:	8c400044 	addi	r17,r17,1
   276c8:	10013326 	beq	r2,zero,27b98 <___vfiprintf_internal_r+0x58c>
   276cc:	10800958 	cmpnei	r2,r2,37
   276d0:	103ffb1e 	bne	r2,zero,276c0 <___vfiprintf_internal_r+0xb4>
   276d4:	8d27c83a 	sub	r19,r17,r20
   276d8:	8d01311e 	bne	r17,r20,27ba0 <___vfiprintf_internal_r+0x594>
   276dc:	88800003 	ldbu	r2,0(r17)
   276e0:	10803fcc 	andi	r2,r2,255
   276e4:	1080201c 	xori	r2,r2,128
   276e8:	10bfe004 	addi	r2,r2,-128
   276ec:	1000da26 	beq	r2,zero,27a58 <___vfiprintf_internal_r+0x44c>
   276f0:	88800047 	ldb	r2,1(r17)
   276f4:	8d000044 	addi	r20,r17,1
   276f8:	d8000945 	stb	zero,37(sp)
   276fc:	000b883a 	mov	r5,zero
   27700:	000d883a 	mov	r6,zero
   27704:	023fffc4 	movi	r8,-1
   27708:	0023883a 	mov	r17,zero
   2770c:	001b883a 	mov	r13,zero
   27710:	a5000044 	addi	r20,r20,1
   27714:	10fff804 	addi	r3,r2,-32
   27718:	19001668 	cmpgeui	r4,r3,89
   2771c:	20006c1e 	bne	r4,zero,278d0 <___vfiprintf_internal_r+0x2c4>
   27720:	180690ba 	slli	r3,r3,2
   27724:	010000b4 	movhi	r4,2
   27728:	1909883a 	add	r4,r3,r4
   2772c:	20ddcd17 	ldw	r3,30516(r4)
   27730:	1800683a 	jmp	r3
   27734:	00028070 	cmpltui	zero,zero,2561
   27738:	000278d0 	cmplti	zero,zero,2531
   2773c:	000278d0 	cmplti	zero,zero,2531
   27740:	00028064 	muli	zero,zero,2561
   27744:	000278d0 	cmplti	zero,zero,2531
   27748:	000278d0 	cmplti	zero,zero,2531
   2774c:	000278d0 	cmplti	zero,zero,2531
   27750:	000278d0 	cmplti	zero,zero,2531
   27754:	000278d0 	cmplti	zero,zero,2531
   27758:	000278d0 	cmplti	zero,zero,2531
   2775c:	0002803c 	xorhi	zero,zero,2560
   27760:	0002802c 	andhi	zero,zero,2560
   27764:	000278d0 	cmplti	zero,zero,2531
   27768:	00028014 	movui	zero,2560
   2776c:	00027fc8 	cmpgei	zero,zero,2559
   27770:	000278d0 	cmplti	zero,zero,2531
   27774:	00027fbc 	xorhi	zero,zero,2558
   27778:	00027898 	cmpnei	zero,zero,2530
   2777c:	00027898 	cmpnei	zero,zero,2530
   27780:	00027898 	cmpnei	zero,zero,2530
   27784:	00027898 	cmpnei	zero,zero,2530
   27788:	00027898 	cmpnei	zero,zero,2530
   2778c:	00027898 	cmpnei	zero,zero,2530
   27790:	00027898 	cmpnei	zero,zero,2530
   27794:	00027898 	cmpnei	zero,zero,2530
   27798:	00027898 	cmpnei	zero,zero,2530
   2779c:	000278d0 	cmplti	zero,zero,2531
   277a0:	000278d0 	cmplti	zero,zero,2531
   277a4:	000278d0 	cmplti	zero,zero,2531
   277a8:	000278d0 	cmplti	zero,zero,2531
   277ac:	000278d0 	cmplti	zero,zero,2531
   277b0:	000278d0 	cmplti	zero,zero,2531
   277b4:	000278d0 	cmplti	zero,zero,2531
   277b8:	000278d0 	cmplti	zero,zero,2531
   277bc:	000278d0 	cmplti	zero,zero,2531
   277c0:	000278d0 	cmplti	zero,zero,2531
   277c4:	00027eb8 	rdprs	zero,zero,2554
   277c8:	000278d0 	cmplti	zero,zero,2531
   277cc:	000278d0 	cmplti	zero,zero,2531
   277d0:	000278d0 	cmplti	zero,zero,2531
   277d4:	000278d0 	cmplti	zero,zero,2531
   277d8:	000278d0 	cmplti	zero,zero,2531
   277dc:	000278d0 	cmplti	zero,zero,2531
   277e0:	000278d0 	cmplti	zero,zero,2531
   277e4:	000278d0 	cmplti	zero,zero,2531
   277e8:	000278d0 	cmplti	zero,zero,2531
   277ec:	000278d0 	cmplti	zero,zero,2531
   277f0:	00027b30 	cmpltui	zero,zero,2540
   277f4:	000278d0 	cmplti	zero,zero,2531
   277f8:	000278d0 	cmplti	zero,zero,2531
   277fc:	000278d0 	cmplti	zero,zero,2531
   27800:	000278d0 	cmplti	zero,zero,2531
   27804:	000278d0 	cmplti	zero,zero,2531
   27808:	00027b08 	cmpgei	zero,zero,2540
   2780c:	000278d0 	cmplti	zero,zero,2531
   27810:	000278d0 	cmplti	zero,zero,2531
   27814:	000280c4 	movi	zero,2563
   27818:	000278d0 	cmplti	zero,zero,2531
   2781c:	000278d0 	cmplti	zero,zero,2531
   27820:	000278d0 	cmplti	zero,zero,2531
   27824:	000278d0 	cmplti	zero,zero,2531
   27828:	000278d0 	cmplti	zero,zero,2531
   2782c:	000278d0 	cmplti	zero,zero,2531
   27830:	000278d0 	cmplti	zero,zero,2531
   27834:	000278d0 	cmplti	zero,zero,2531
   27838:	000278d0 	cmplti	zero,zero,2531
   2783c:	000278d0 	cmplti	zero,zero,2531
   27840:	0002809c 	xori	zero,zero,2562
   27844:	00027d50 	cmplti	zero,zero,2549
   27848:	000278d0 	cmplti	zero,zero,2531
   2784c:	000278d0 	cmplti	zero,zero,2531
   27850:	000278d0 	cmplti	zero,zero,2531
   27854:	00027dc4 	movi	zero,2551
   27858:	00027d50 	cmplti	zero,zero,2549
   2785c:	000278d0 	cmplti	zero,zero,2531
   27860:	000278d0 	cmplti	zero,zero,2531
   27864:	00028148 	cmpgei	zero,zero,2565
   27868:	000278d0 	cmplti	zero,zero,2531
   2786c:	0002810c 	andi	zero,zero,2564
   27870:	00027b34 	movhi	zero,2540
   27874:	00027e7c 	xorhi	zero,zero,2553
   27878:	00027e70 	cmpltui	zero,zero,2553
   2787c:	000278d0 	cmplti	zero,zero,2531
   27880:	00027e18 	cmpnei	zero,zero,2552
   27884:	000278d0 	cmplti	zero,zero,2531
   27888:	00027b0c 	andi	zero,zero,2540
   2788c:	000278d0 	cmplti	zero,zero,2531
   27890:	000278d0 	cmplti	zero,zero,2531
   27894:	00027dd0 	cmplti	zero,zero,2551
   27898:	0023883a 	mov	r17,zero
   2789c:	113ff404 	addi	r4,r2,-48
   278a0:	880690ba 	slli	r3,r17,2
   278a4:	a0800007 	ldb	r2,0(r20)
   278a8:	a5000044 	addi	r20,r20,1
   278ac:	1c63883a 	add	r17,r3,r17
   278b0:	8c63883a 	add	r17,r17,r17
   278b4:	2463883a 	add	r17,r4,r17
   278b8:	113ff404 	addi	r4,r2,-48
   278bc:	20c002b0 	cmpltui	r3,r4,10
   278c0:	183ff71e 	bne	r3,zero,278a0 <___vfiprintf_internal_r+0x294>
   278c4:	10fff804 	addi	r3,r2,-32
   278c8:	19001668 	cmpgeui	r4,r3,89
   278cc:	203f9426 	beq	r4,zero,27720 <___vfiprintf_internal_r+0x114>
   278d0:	29403fcc 	andi	r5,r5,255
   278d4:	2803ed1e 	bne	r5,zero,2888c <___vfiprintf_internal_r+0x1280>
   278d8:	10005f26 	beq	r2,zero,27a58 <___vfiprintf_internal_r+0x44c>
   278dc:	d8800d05 	stb	r2,52(sp)
   278e0:	d8000945 	stb	zero,37(sp)
   278e4:	05c00044 	movi	r23,1
   278e8:	07000044 	movi	fp,1
   278ec:	dcc00d04 	addi	r19,sp,52
   278f0:	db400015 	stw	r13,0(sp)
   278f4:	0011883a 	mov	r8,zero
   278f8:	d8800017 	ldw	r2,0(sp)
   278fc:	1380008c 	andi	r14,r2,2
   27900:	70000126 	beq	r14,zero,27908 <___vfiprintf_internal_r+0x2fc>
   27904:	bdc00084 	addi	r23,r23,2
   27908:	d8800017 	ldw	r2,0(sp)
   2790c:	d9000b17 	ldw	r4,44(sp)
   27910:	1340210c 	andi	r13,r2,132
   27914:	21800044 	addi	r6,r4,1
   27918:	d8800c17 	ldw	r2,48(sp)
   2791c:	300b883a 	mov	r5,r6
   27920:	6800021e 	bne	r13,zero,2792c <___vfiprintf_internal_r+0x320>
   27924:	8dc7c83a 	sub	r3,r17,r23
   27928:	00c2e216 	blt	zero,r3,284b4 <___vfiprintf_internal_r+0xea8>
   2792c:	d8c00947 	ldb	r3,37(sp)
   27930:	81800204 	addi	r6,r16,8
   27934:	18000d26 	beq	r3,zero,2796c <___vfiprintf_internal_r+0x360>
   27938:	d8c00944 	addi	r3,sp,37
   2793c:	10800044 	addi	r2,r2,1
   27940:	80c00015 	stw	r3,0(r16)
   27944:	00c00044 	movi	r3,1
   27948:	80c00115 	stw	r3,4(r16)
   2794c:	d8800c15 	stw	r2,48(sp)
   27950:	d9400b15 	stw	r5,44(sp)
   27954:	28c00208 	cmpgei	r3,r5,8
   27958:	18029a1e 	bne	r3,zero,283c4 <___vfiprintf_internal_r+0xdb8>
   2795c:	2809883a 	mov	r4,r5
   27960:	3021883a 	mov	r16,r6
   27964:	29400044 	addi	r5,r5,1
   27968:	31800204 	addi	r6,r6,8
   2796c:	70001826 	beq	r14,zero,279d0 <___vfiprintf_internal_r+0x3c4>
   27970:	d8c00984 	addi	r3,sp,38
   27974:	10800084 	addi	r2,r2,2
   27978:	80c00015 	stw	r3,0(r16)
   2797c:	00c00084 	movi	r3,2
   27980:	80c00115 	stw	r3,4(r16)
   27984:	d8800c15 	stw	r2,48(sp)
   27988:	d9400b15 	stw	r5,44(sp)
   2798c:	28c00208 	cmpgei	r3,r5,8
   27990:	1802a426 	beq	r3,zero,28424 <___vfiprintf_internal_r+0xe18>
   27994:	10032226 	beq	r2,zero,28620 <___vfiprintf_internal_r+0x1014>
   27998:	d9800a04 	addi	r6,sp,40
   2799c:	a80b883a 	mov	r5,r21
   279a0:	b009883a 	mov	r4,r22
   279a4:	da000315 	stw	r8,12(sp)
   279a8:	db400215 	stw	r13,8(sp)
   279ac:	00275000 	call	27500 <__sprint_r.part.0>
   279b0:	10002b1e 	bne	r2,zero,27a60 <___vfiprintf_internal_r+0x454>
   279b4:	d9000b17 	ldw	r4,44(sp)
   279b8:	d8800c17 	ldw	r2,48(sp)
   279bc:	da000317 	ldw	r8,12(sp)
   279c0:	db400217 	ldw	r13,8(sp)
   279c4:	d9801904 	addi	r6,sp,100
   279c8:	21400044 	addi	r5,r4,1
   279cc:	9021883a 	mov	r16,r18
   279d0:	6b402018 	cmpnei	r13,r13,128
   279d4:	6801e526 	beq	r13,zero,2816c <___vfiprintf_internal_r+0xb60>
   279d8:	4711c83a 	sub	r8,r8,fp
   279dc:	02022416 	blt	zero,r8,28270 <___vfiprintf_internal_r+0xc64>
   279e0:	e085883a 	add	r2,fp,r2
   279e4:	d9400b15 	stw	r5,44(sp)
   279e8:	84c00015 	stw	r19,0(r16)
   279ec:	87000115 	stw	fp,4(r16)
   279f0:	d8800c15 	stw	r2,48(sp)
   279f4:	29400210 	cmplti	r5,r5,8
   279f8:	2800081e 	bne	r5,zero,27a1c <___vfiprintf_internal_r+0x410>
   279fc:	10009826 	beq	r2,zero,27c60 <___vfiprintf_internal_r+0x654>
   27a00:	d9800a04 	addi	r6,sp,40
   27a04:	a80b883a 	mov	r5,r21
   27a08:	b009883a 	mov	r4,r22
   27a0c:	00275000 	call	27500 <__sprint_r.part.0>
   27a10:	1000131e 	bne	r2,zero,27a60 <___vfiprintf_internal_r+0x454>
   27a14:	d8800c17 	ldw	r2,48(sp)
   27a18:	900d883a 	mov	r6,r18
   27a1c:	d8c00017 	ldw	r3,0(sp)
   27a20:	1cc0010c 	andi	r19,r3,4
   27a24:	98000226 	beq	r19,zero,27a30 <___vfiprintf_internal_r+0x424>
   27a28:	8de1c83a 	sub	r16,r17,r23
   27a2c:	04009316 	blt	zero,r16,27c7c <___vfiprintf_internal_r+0x670>
   27a30:	8dc0010e 	bge	r17,r23,27a38 <___vfiprintf_internal_r+0x42c>
   27a34:	b823883a 	mov	r17,r23
   27a38:	d8c00117 	ldw	r3,4(sp)
   27a3c:	1c47883a 	add	r3,r3,r17
   27a40:	d8c00115 	stw	r3,4(sp)
   27a44:	1002551e 	bne	r2,zero,2839c <___vfiprintf_internal_r+0xd90>
   27a48:	a0800007 	ldb	r2,0(r20)
   27a4c:	d8000b15 	stw	zero,44(sp)
   27a50:	9021883a 	mov	r16,r18
   27a54:	103f181e 	bne	r2,zero,276b8 <___vfiprintf_internal_r+0xac>
   27a58:	d8800c17 	ldw	r2,48(sp)
   27a5c:	10038d1e 	bne	r2,zero,28894 <___vfiprintf_internal_r+0x1288>
   27a60:	a880030b 	ldhu	r2,12(r21)
   27a64:	1080100c 	andi	r2,r2,64
   27a68:	1003a51e 	bne	r2,zero,28900 <___vfiprintf_internal_r+0x12f4>
   27a6c:	d8800117 	ldw	r2,4(sp)
   27a70:	dfc03017 	ldw	ra,192(sp)
   27a74:	df002f17 	ldw	fp,188(sp)
   27a78:	ddc02e17 	ldw	r23,184(sp)
   27a7c:	dd802d17 	ldw	r22,180(sp)
   27a80:	dd402c17 	ldw	r21,176(sp)
   27a84:	dd002b17 	ldw	r20,172(sp)
   27a88:	dcc02a17 	ldw	r19,168(sp)
   27a8c:	dc802917 	ldw	r18,164(sp)
   27a90:	dc402817 	ldw	r17,160(sp)
   27a94:	dc002717 	ldw	r16,156(sp)
   27a98:	dec03104 	addi	sp,sp,196
   27a9c:	f800283a 	ret
   27aa0:	a80b883a 	mov	r5,r21
   27aa4:	b009883a 	mov	r4,r22
   27aa8:	0022b500 	call	22b50 <__swsetup_r>
   27aac:	1003941e 	bne	r2,zero,28900 <___vfiprintf_internal_r+0x12f4>
   27ab0:	a880030b 	ldhu	r2,12(r21)
   27ab4:	1080068c 	andi	r2,r2,26
   27ab8:	10800298 	cmpnei	r2,r2,10
   27abc:	103ef51e 	bne	r2,zero,27694 <___vfiprintf_internal_r+0x88>
   27ac0:	a880038f 	ldh	r2,14(r21)
   27ac4:	103ef316 	blt	r2,zero,27694 <___vfiprintf_internal_r+0x88>
   27ac8:	d9c00417 	ldw	r7,16(sp)
   27acc:	a00d883a 	mov	r6,r20
   27ad0:	a80b883a 	mov	r5,r21
   27ad4:	b009883a 	mov	r4,r22
   27ad8:	dfc03017 	ldw	ra,192(sp)
   27adc:	df002f17 	ldw	fp,188(sp)
   27ae0:	ddc02e17 	ldw	r23,184(sp)
   27ae4:	dd802d17 	ldw	r22,180(sp)
   27ae8:	dd402c17 	ldw	r21,176(sp)
   27aec:	dd002b17 	ldw	r20,172(sp)
   27af0:	dcc02a17 	ldw	r19,168(sp)
   27af4:	dc802917 	ldw	r18,164(sp)
   27af8:	dc402817 	ldw	r17,160(sp)
   27afc:	dc002717 	ldw	r16,156(sp)
   27b00:	dec03104 	addi	sp,sp,196
   27b04:	002896c1 	jmpi	2896c <__sbprintf>
   27b08:	6b400414 	ori	r13,r13,16
   27b0c:	6880080c 	andi	r2,r13,32
   27b10:	10004726 	beq	r2,zero,27c30 <___vfiprintf_internal_r+0x624>
   27b14:	d8c00417 	ldw	r3,16(sp)
   27b18:	00800044 	movi	r2,1
   27b1c:	1dc00017 	ldw	r23,0(r3)
   27b20:	1f000117 	ldw	fp,4(r3)
   27b24:	18c00204 	addi	r3,r3,8
   27b28:	d8c00415 	stw	r3,16(sp)
   27b2c:	00000906 	br	27b54 <___vfiprintf_internal_r+0x548>
   27b30:	6b400414 	ori	r13,r13,16
   27b34:	6880080c 	andi	r2,r13,32
   27b38:	10003126 	beq	r2,zero,27c00 <___vfiprintf_internal_r+0x5f4>
   27b3c:	d8c00417 	ldw	r3,16(sp)
   27b40:	0005883a 	mov	r2,zero
   27b44:	1dc00017 	ldw	r23,0(r3)
   27b48:	1f000117 	ldw	fp,4(r3)
   27b4c:	18c00204 	addi	r3,r3,8
   27b50:	d8c00415 	stw	r3,16(sp)
   27b54:	d8000945 	stb	zero,37(sp)
   27b58:	40ffffe0 	cmpeqi	r3,r8,-1
   27b5c:	001d883a 	mov	r14,zero
   27b60:	1800f01e 	bne	r3,zero,27f24 <___vfiprintf_internal_r+0x918>
   27b64:	04ffdfc4 	movi	r19,-129
   27b68:	6cc8703a 	and	r4,r13,r19
   27b6c:	bf06b03a 	or	r3,r23,fp
   27b70:	d9000015 	stw	r4,0(sp)
   27b74:	1802301e 	bne	r3,zero,28438 <___vfiprintf_internal_r+0xe2c>
   27b78:	4001f31e 	bne	r8,zero,28348 <___vfiprintf_internal_r+0xd3c>
   27b7c:	10029e1e 	bne	r2,zero,285f8 <___vfiprintf_internal_r+0xfec>
   27b80:	6f00004c 	andi	fp,r13,1
   27b84:	e002bc26 	beq	fp,zero,28678 <___vfiprintf_internal_r+0x106c>
   27b88:	00800c04 	movi	r2,48
   27b8c:	d88016c5 	stb	r2,91(sp)
   27b90:	dcc016c4 	addi	r19,sp,91
   27b94:	00010006 	br	27f98 <___vfiprintf_internal_r+0x98c>
   27b98:	8d27c83a 	sub	r19,r17,r20
   27b9c:	8d3fae26 	beq	r17,r20,27a58 <___vfiprintf_internal_r+0x44c>
   27ba0:	d8c00c17 	ldw	r3,48(sp)
   27ba4:	d8800b17 	ldw	r2,44(sp)
   27ba8:	85000015 	stw	r20,0(r16)
   27bac:	98c7883a 	add	r3,r19,r3
   27bb0:	10800044 	addi	r2,r2,1
   27bb4:	d8800b15 	stw	r2,44(sp)
   27bb8:	84c00115 	stw	r19,4(r16)
   27bbc:	d8c00c15 	stw	r3,48(sp)
   27bc0:	10800208 	cmpgei	r2,r2,8
   27bc4:	1000061e 	bne	r2,zero,27be0 <___vfiprintf_internal_r+0x5d4>
   27bc8:	84000204 	addi	r16,r16,8
   27bcc:	d8c00117 	ldw	r3,4(sp)
   27bd0:	88800003 	ldbu	r2,0(r17)
   27bd4:	1cc7883a 	add	r3,r3,r19
   27bd8:	d8c00115 	stw	r3,4(sp)
   27bdc:	003ec006 	br	276e0 <___vfiprintf_internal_r+0xd4>
   27be0:	18028126 	beq	r3,zero,285e8 <___vfiprintf_internal_r+0xfdc>
   27be4:	d9800a04 	addi	r6,sp,40
   27be8:	a80b883a 	mov	r5,r21
   27bec:	b009883a 	mov	r4,r22
   27bf0:	00275000 	call	27500 <__sprint_r.part.0>
   27bf4:	103f9a1e 	bne	r2,zero,27a60 <___vfiprintf_internal_r+0x454>
   27bf8:	9021883a 	mov	r16,r18
   27bfc:	003ff306 	br	27bcc <___vfiprintf_internal_r+0x5c0>
   27c00:	d9000417 	ldw	r4,16(sp)
   27c04:	6880040c 	andi	r2,r13,16
   27c08:	20c00104 	addi	r3,r4,4
   27c0c:	1002ac1e 	bne	r2,zero,286c0 <___vfiprintf_internal_r+0x10b4>
   27c10:	6880100c 	andi	r2,r13,64
   27c14:	1002fb26 	beq	r2,zero,28804 <___vfiprintf_internal_r+0x11f8>
   27c18:	d8800417 	ldw	r2,16(sp)
   27c1c:	0039883a 	mov	fp,zero
   27c20:	d8c00415 	stw	r3,16(sp)
   27c24:	15c0000b 	ldhu	r23,0(r2)
   27c28:	0005883a 	mov	r2,zero
   27c2c:	003fc906 	br	27b54 <___vfiprintf_internal_r+0x548>
   27c30:	d9000417 	ldw	r4,16(sp)
   27c34:	6880040c 	andi	r2,r13,16
   27c38:	20c00104 	addi	r3,r4,4
   27c3c:	1002af1e 	bne	r2,zero,286fc <___vfiprintf_internal_r+0x10f0>
   27c40:	6880100c 	andi	r2,r13,64
   27c44:	1002fb26 	beq	r2,zero,28834 <___vfiprintf_internal_r+0x1228>
   27c48:	d8800417 	ldw	r2,16(sp)
   27c4c:	0039883a 	mov	fp,zero
   27c50:	d8c00415 	stw	r3,16(sp)
   27c54:	15c0000b 	ldhu	r23,0(r2)
   27c58:	00800044 	movi	r2,1
   27c5c:	003fbd06 	br	27b54 <___vfiprintf_internal_r+0x548>
   27c60:	d8c00017 	ldw	r3,0(sp)
   27c64:	d8000b15 	stw	zero,44(sp)
   27c68:	1cc0010c 	andi	r19,r3,4
   27c6c:	98024c26 	beq	r19,zero,285a0 <___vfiprintf_internal_r+0xf94>
   27c70:	8de1c83a 	sub	r16,r17,r23
   27c74:	04024a0e 	bge	zero,r16,285a0 <___vfiprintf_internal_r+0xf94>
   27c78:	900d883a 	mov	r6,r18
   27c7c:	80c00450 	cmplti	r3,r16,17
   27c80:	d9000b17 	ldw	r4,44(sp)
   27c84:	01c000f4 	movhi	r7,3
   27c88:	18031a1e 	bne	r3,zero,288f4 <___vfiprintf_internal_r+0x12e8>
   27c8c:	39c25304 	addi	r7,r7,2380
   27c90:	04c00404 	movi	r19,16
   27c94:	00000606 	br	27cb0 <___vfiprintf_internal_r+0x6a4>
   27c98:	21400084 	addi	r5,r4,2
   27c9c:	31800204 	addi	r6,r6,8
   27ca0:	1809883a 	mov	r4,r3
   27ca4:	843ffc04 	addi	r16,r16,-16
   27ca8:	80c00448 	cmpgei	r3,r16,17
   27cac:	18001726 	beq	r3,zero,27d0c <___vfiprintf_internal_r+0x700>
   27cb0:	20c00044 	addi	r3,r4,1
   27cb4:	10800404 	addi	r2,r2,16
   27cb8:	31c00015 	stw	r7,0(r6)
   27cbc:	34c00115 	stw	r19,4(r6)
   27cc0:	d8800c15 	stw	r2,48(sp)
   27cc4:	d8c00b15 	stw	r3,44(sp)
   27cc8:	19400208 	cmpgei	r5,r3,8
   27ccc:	283ff226 	beq	r5,zero,27c98 <___vfiprintf_internal_r+0x68c>
   27cd0:	d9800a04 	addi	r6,sp,40
   27cd4:	a80b883a 	mov	r5,r21
   27cd8:	b009883a 	mov	r4,r22
   27cdc:	10011f26 	beq	r2,zero,2815c <___vfiprintf_internal_r+0xb50>
   27ce0:	d9c00015 	stw	r7,0(sp)
   27ce4:	00275000 	call	27500 <__sprint_r.part.0>
   27ce8:	103f5d1e 	bne	r2,zero,27a60 <___vfiprintf_internal_r+0x454>
   27cec:	d9000b17 	ldw	r4,44(sp)
   27cf0:	843ffc04 	addi	r16,r16,-16
   27cf4:	80c00448 	cmpgei	r3,r16,17
   27cf8:	d8800c17 	ldw	r2,48(sp)
   27cfc:	d9c00017 	ldw	r7,0(sp)
   27d00:	900d883a 	mov	r6,r18
   27d04:	21400044 	addi	r5,r4,1
   27d08:	183fe91e 	bne	r3,zero,27cb0 <___vfiprintf_internal_r+0x6a4>
   27d0c:	1405883a 	add	r2,r2,r16
   27d10:	d9400b15 	stw	r5,44(sp)
   27d14:	31c00015 	stw	r7,0(r6)
   27d18:	34000115 	stw	r16,4(r6)
   27d1c:	d8800c15 	stw	r2,48(sp)
   27d20:	29400210 	cmplti	r5,r5,8
   27d24:	283f421e 	bne	r5,zero,27a30 <___vfiprintf_internal_r+0x424>
   27d28:	10021d26 	beq	r2,zero,285a0 <___vfiprintf_internal_r+0xf94>
   27d2c:	d9800a04 	addi	r6,sp,40
   27d30:	a80b883a 	mov	r5,r21
   27d34:	b009883a 	mov	r4,r22
   27d38:	00275000 	call	27500 <__sprint_r.part.0>
   27d3c:	103f481e 	bne	r2,zero,27a60 <___vfiprintf_internal_r+0x454>
   27d40:	d8800c17 	ldw	r2,48(sp)
   27d44:	003f3a06 	br	27a30 <___vfiprintf_internal_r+0x424>
   27d48:	0024c8c0 	call	24c8c <__sinit>
   27d4c:	003e4106 	br	27654 <___vfiprintf_internal_r+0x48>
   27d50:	29403fcc 	andi	r5,r5,255
   27d54:	2802da1e 	bne	r5,zero,288c0 <___vfiprintf_internal_r+0x12b4>
   27d58:	6880080c 	andi	r2,r13,32
   27d5c:	10005b26 	beq	r2,zero,27ecc <___vfiprintf_internal_r+0x8c0>
   27d60:	d8c00417 	ldw	r3,16(sp)
   27d64:	18800117 	ldw	r2,4(r3)
   27d68:	1dc00017 	ldw	r23,0(r3)
   27d6c:	18c00204 	addi	r3,r3,8
   27d70:	d8c00415 	stw	r3,16(sp)
   27d74:	1039883a 	mov	fp,r2
   27d78:	10006016 	blt	r2,zero,27efc <___vfiprintf_internal_r+0x8f0>
   27d7c:	40bfffd8 	cmpnei	r2,r8,-1
   27d80:	db800943 	ldbu	r14,37(sp)
   27d84:	10000626 	beq	r2,zero,27da0 <___vfiprintf_internal_r+0x794>
   27d88:	04ffdfc4 	movi	r19,-129
   27d8c:	6cc6703a 	and	r3,r13,r19
   27d90:	bf04b03a 	or	r2,r23,fp
   27d94:	d8c00015 	stw	r3,0(sp)
   27d98:	10021626 	beq	r2,zero,285f4 <___vfiprintf_internal_r+0xfe8>
   27d9c:	db400017 	ldw	r13,0(sp)
   27da0:	e001a71e 	bne	fp,zero,28440 <___vfiprintf_internal_r+0xe34>
   27da4:	b88002a8 	cmpgeui	r2,r23,10
   27da8:	1001a51e 	bne	r2,zero,28440 <___vfiprintf_internal_r+0xe34>
   27dac:	bdc00c04 	addi	r23,r23,48
   27db0:	ddc016c5 	stb	r23,91(sp)
   27db4:	db400015 	stw	r13,0(sp)
   27db8:	07000044 	movi	fp,1
   27dbc:	dcc016c4 	addi	r19,sp,91
   27dc0:	00007506 	br	27f98 <___vfiprintf_internal_r+0x98c>
   27dc4:	a0800007 	ldb	r2,0(r20)
   27dc8:	6b401014 	ori	r13,r13,64
   27dcc:	003e5006 	br	27710 <___vfiprintf_internal_r+0x104>
   27dd0:	29403fcc 	andi	r5,r5,255
   27dd4:	2802bc1e 	bne	r5,zero,288c8 <___vfiprintf_internal_r+0x12bc>
   27dd8:	00c000f4 	movhi	r3,3
   27ddc:	18c1c804 	addi	r3,r3,1824
   27de0:	d8c00515 	stw	r3,20(sp)
   27de4:	68c0080c 	andi	r3,r13,32
   27de8:	1800bd26 	beq	r3,zero,280e0 <___vfiprintf_internal_r+0xad4>
   27dec:	d8c00417 	ldw	r3,16(sp)
   27df0:	1dc00017 	ldw	r23,0(r3)
   27df4:	1f000117 	ldw	fp,4(r3)
   27df8:	18c00204 	addi	r3,r3,8
   27dfc:	d8c00415 	stw	r3,16(sp)
   27e00:	68c0004c 	andi	r3,r13,1
   27e04:	18000226 	beq	r3,zero,27e10 <___vfiprintf_internal_r+0x804>
   27e08:	bf06b03a 	or	r3,r23,fp
   27e0c:	1802261e 	bne	r3,zero,286a8 <___vfiprintf_internal_r+0x109c>
   27e10:	00800084 	movi	r2,2
   27e14:	003f4f06 	br	27b54 <___vfiprintf_internal_r+0x548>
   27e18:	d8800417 	ldw	r2,16(sp)
   27e1c:	d8000945 	stb	zero,37(sp)
   27e20:	14c00017 	ldw	r19,0(r2)
   27e24:	10c00104 	addi	r3,r2,4
   27e28:	98026926 	beq	r19,zero,287d0 <___vfiprintf_internal_r+0x11c4>
   27e2c:	40bfffe0 	cmpeqi	r2,r8,-1
   27e30:	1002411e 	bne	r2,zero,28738 <___vfiprintf_internal_r+0x112c>
   27e34:	400d883a 	mov	r6,r8
   27e38:	000b883a 	mov	r5,zero
   27e3c:	9809883a 	mov	r4,r19
   27e40:	d8c00315 	stw	r3,12(sp)
   27e44:	db400215 	stw	r13,8(sp)
   27e48:	da000015 	stw	r8,0(sp)
   27e4c:	0025c740 	call	25c74 <memchr>
   27e50:	da000017 	ldw	r8,0(sp)
   27e54:	db400217 	ldw	r13,8(sp)
   27e58:	d8c00317 	ldw	r3,12(sp)
   27e5c:	10029426 	beq	r2,zero,288b0 <___vfiprintf_internal_r+0x12a4>
   27e60:	14f9c83a 	sub	fp,r2,r19
   27e64:	e02f883a 	mov	r23,fp
   27e68:	d8c00415 	stw	r3,16(sp)
   27e6c:	003ea006 	br	278f0 <___vfiprintf_internal_r+0x2e4>
   27e70:	a0800007 	ldb	r2,0(r20)
   27e74:	6b400814 	ori	r13,r13,32
   27e78:	003e2506 	br	27710 <___vfiprintf_internal_r+0x104>
   27e7c:	d8c00417 	ldw	r3,16(sp)
   27e80:	00800c04 	movi	r2,48
   27e84:	d8800985 	stb	r2,38(sp)
   27e88:	00801e04 	movi	r2,120
   27e8c:	010000f4 	movhi	r4,3
   27e90:	d88009c5 	stb	r2,39(sp)
   27e94:	18800104 	addi	r2,r3,4
   27e98:	d8800415 	stw	r2,16(sp)
   27e9c:	2081c804 	addi	r2,r4,1824
   27ea0:	d8800515 	stw	r2,20(sp)
   27ea4:	1dc00017 	ldw	r23,0(r3)
   27ea8:	0039883a 	mov	fp,zero
   27eac:	6b400094 	ori	r13,r13,2
   27eb0:	00800084 	movi	r2,2
   27eb4:	003f2706 	br	27b54 <___vfiprintf_internal_r+0x548>
   27eb8:	29403fcc 	andi	r5,r5,255
   27ebc:	2802841e 	bne	r5,zero,288d0 <___vfiprintf_internal_r+0x12c4>
   27ec0:	6b400414 	ori	r13,r13,16
   27ec4:	6880080c 	andi	r2,r13,32
   27ec8:	103fa51e 	bne	r2,zero,27d60 <___vfiprintf_internal_r+0x754>
   27ecc:	d9000417 	ldw	r4,16(sp)
   27ed0:	6880040c 	andi	r2,r13,16
   27ed4:	20c00104 	addi	r3,r4,4
   27ed8:	1001ee1e 	bne	r2,zero,28694 <___vfiprintf_internal_r+0x1088>
   27edc:	6880100c 	andi	r2,r13,64
   27ee0:	10024e26 	beq	r2,zero,2881c <___vfiprintf_internal_r+0x1210>
   27ee4:	d8800417 	ldw	r2,16(sp)
   27ee8:	d8c00415 	stw	r3,16(sp)
   27eec:	15c0000f 	ldh	r23,0(r2)
   27ef0:	b839d7fa 	srai	fp,r23,31
   27ef4:	e005883a 	mov	r2,fp
   27ef8:	103fa00e 	bge	r2,zero,27d7c <___vfiprintf_internal_r+0x770>
   27efc:	b804c03a 	cmpne	r2,r23,zero
   27f00:	0739c83a 	sub	fp,zero,fp
   27f04:	e0b9c83a 	sub	fp,fp,r2
   27f08:	00800b44 	movi	r2,45
   27f0c:	d8800945 	stb	r2,37(sp)
   27f10:	40ffffe0 	cmpeqi	r3,r8,-1
   27f14:	05efc83a 	sub	r23,zero,r23
   27f18:	03800b44 	movi	r14,45
   27f1c:	00800044 	movi	r2,1
   27f20:	183f1026 	beq	r3,zero,27b64 <___vfiprintf_internal_r+0x558>
   27f24:	10c00060 	cmpeqi	r3,r2,1
   27f28:	183f9d1e 	bne	r3,zero,27da0 <___vfiprintf_internal_r+0x794>
   27f2c:	108000a0 	cmpeqi	r2,r2,2
   27f30:	10010a1e 	bne	r2,zero,2835c <___vfiprintf_internal_r+0xd50>
   27f34:	9027883a 	mov	r19,r18
   27f38:	e008977a 	slli	r4,fp,29
   27f3c:	b806d0fa 	srli	r3,r23,3
   27f40:	e038d0fa 	srli	fp,fp,3
   27f44:	b88001cc 	andi	r2,r23,7
   27f48:	10800c04 	addi	r2,r2,48
   27f4c:	20eeb03a 	or	r23,r4,r3
   27f50:	98bfffc5 	stb	r2,-1(r19)
   27f54:	bf06b03a 	or	r3,r23,fp
   27f58:	980b883a 	mov	r5,r19
   27f5c:	9cffffc4 	addi	r19,r19,-1
   27f60:	183ff51e 	bne	r3,zero,27f38 <___vfiprintf_internal_r+0x92c>
   27f64:	68c0004c 	andi	r3,r13,1
   27f68:	18010926 	beq	r3,zero,28390 <___vfiprintf_internal_r+0xd84>
   27f6c:	10803fcc 	andi	r2,r2,255
   27f70:	1080201c 	xori	r2,r2,128
   27f74:	10bfe004 	addi	r2,r2,-128
   27f78:	10800c18 	cmpnei	r2,r2,48
   27f7c:	10010426 	beq	r2,zero,28390 <___vfiprintf_internal_r+0xd84>
   27f80:	297fff84 	addi	r5,r5,-2
   27f84:	00800c04 	movi	r2,48
   27f88:	98bfffc5 	stb	r2,-1(r19)
   27f8c:	9179c83a 	sub	fp,r18,r5
   27f90:	db400015 	stw	r13,0(sp)
   27f94:	2827883a 	mov	r19,r5
   27f98:	402f883a 	mov	r23,r8
   27f9c:	4700010e 	bge	r8,fp,27fa4 <___vfiprintf_internal_r+0x998>
   27fa0:	e02f883a 	mov	r23,fp
   27fa4:	73803fcc 	andi	r14,r14,255
   27fa8:	7380201c 	xori	r14,r14,128
   27fac:	73bfe004 	addi	r14,r14,-128
   27fb0:	703e5126 	beq	r14,zero,278f8 <___vfiprintf_internal_r+0x2ec>
   27fb4:	bdc00044 	addi	r23,r23,1
   27fb8:	003e4f06 	br	278f8 <___vfiprintf_internal_r+0x2ec>
   27fbc:	a0800007 	ldb	r2,0(r20)
   27fc0:	6b402014 	ori	r13,r13,128
   27fc4:	003dd206 	br	27710 <___vfiprintf_internal_r+0x104>
   27fc8:	a0800007 	ldb	r2,0(r20)
   27fcc:	a0c00044 	addi	r3,r20,1
   27fd0:	11000aa0 	cmpeqi	r4,r2,42
   27fd4:	2002521e 	bne	r4,zero,28920 <___vfiprintf_internal_r+0x1314>
   27fd8:	113ff404 	addi	r4,r2,-48
   27fdc:	21c002b0 	cmpltui	r7,r4,10
   27fe0:	1829883a 	mov	r20,r3
   27fe4:	0011883a 	mov	r8,zero
   27fe8:	383dca26 	beq	r7,zero,27714 <___vfiprintf_internal_r+0x108>
   27fec:	400690ba 	slli	r3,r8,2
   27ff0:	a0800007 	ldb	r2,0(r20)
   27ff4:	a5000044 	addi	r20,r20,1
   27ff8:	1a11883a 	add	r8,r3,r8
   27ffc:	4211883a 	add	r8,r8,r8
   28000:	4111883a 	add	r8,r8,r4
   28004:	113ff404 	addi	r4,r2,-48
   28008:	20c002b0 	cmpltui	r3,r4,10
   2800c:	183ff71e 	bne	r3,zero,27fec <___vfiprintf_internal_r+0x9e0>
   28010:	003dc006 	br	27714 <___vfiprintf_internal_r+0x108>
   28014:	a0800003 	ldbu	r2,0(r20)
   28018:	10803fcc 	andi	r2,r2,255
   2801c:	1080201c 	xori	r2,r2,128
   28020:	6b400114 	ori	r13,r13,4
   28024:	10bfe004 	addi	r2,r2,-128
   28028:	003db906 	br	27710 <___vfiprintf_internal_r+0x104>
   2802c:	a0800007 	ldb	r2,0(r20)
   28030:	01400044 	movi	r5,1
   28034:	01800ac4 	movi	r6,43
   28038:	003db506 	br	27710 <___vfiprintf_internal_r+0x104>
   2803c:	d8c00417 	ldw	r3,16(sp)
   28040:	a0800003 	ldbu	r2,0(r20)
   28044:	1c400017 	ldw	r17,0(r3)
   28048:	18c00104 	addi	r3,r3,4
   2804c:	8801b716 	blt	r17,zero,2872c <___vfiprintf_internal_r+0x1120>
   28050:	d8c00415 	stw	r3,16(sp)
   28054:	10803fcc 	andi	r2,r2,255
   28058:	1080201c 	xori	r2,r2,128
   2805c:	10bfe004 	addi	r2,r2,-128
   28060:	003dab06 	br	27710 <___vfiprintf_internal_r+0x104>
   28064:	a0800007 	ldb	r2,0(r20)
   28068:	6b400054 	ori	r13,r13,1
   2806c:	003da806 	br	27710 <___vfiprintf_internal_r+0x104>
   28070:	30c03fcc 	andi	r3,r6,255
   28074:	18c0201c 	xori	r3,r3,128
   28078:	18ffe004 	addi	r3,r3,-128
   2807c:	a0800003 	ldbu	r2,0(r20)
   28080:	183ff41e 	bne	r3,zero,28054 <___vfiprintf_internal_r+0xa48>
   28084:	10803fcc 	andi	r2,r2,255
   28088:	1080201c 	xori	r2,r2,128
   2808c:	01400044 	movi	r5,1
   28090:	01800804 	movi	r6,32
   28094:	10bfe004 	addi	r2,r2,-128
   28098:	003d9d06 	br	27710 <___vfiprintf_internal_r+0x104>
   2809c:	d8c00417 	ldw	r3,16(sp)
   280a0:	d8000945 	stb	zero,37(sp)
   280a4:	05c00044 	movi	r23,1
   280a8:	18800017 	ldw	r2,0(r3)
   280ac:	18c00104 	addi	r3,r3,4
   280b0:	d8c00415 	stw	r3,16(sp)
   280b4:	d8800d05 	stb	r2,52(sp)
   280b8:	07000044 	movi	fp,1
   280bc:	dcc00d04 	addi	r19,sp,52
   280c0:	003e0b06 	br	278f0 <___vfiprintf_internal_r+0x2e4>
   280c4:	29403fcc 	andi	r5,r5,255
   280c8:	2802061e 	bne	r5,zero,288e4 <___vfiprintf_internal_r+0x12d8>
   280cc:	00c000f4 	movhi	r3,3
   280d0:	18c1cd04 	addi	r3,r3,1844
   280d4:	d8c00515 	stw	r3,20(sp)
   280d8:	68c0080c 	andi	r3,r13,32
   280dc:	183f431e 	bne	r3,zero,27dec <___vfiprintf_internal_r+0x7e0>
   280e0:	d9400417 	ldw	r5,16(sp)
   280e4:	68c0040c 	andi	r3,r13,16
   280e8:	29000104 	addi	r4,r5,4
   280ec:	18017f1e 	bne	r3,zero,286ec <___vfiprintf_internal_r+0x10e0>
   280f0:	68c0100c 	andi	r3,r13,64
   280f4:	1801be26 	beq	r3,zero,287f0 <___vfiprintf_internal_r+0x11e4>
   280f8:	d8c00417 	ldw	r3,16(sp)
   280fc:	0039883a 	mov	fp,zero
   28100:	d9000415 	stw	r4,16(sp)
   28104:	1dc0000b 	ldhu	r23,0(r3)
   28108:	003f3d06 	br	27e00 <___vfiprintf_internal_r+0x7f4>
   2810c:	29403fcc 	andi	r5,r5,255
   28110:	2801f61e 	bne	r5,zero,288ec <___vfiprintf_internal_r+0x12e0>
   28114:	d9000417 	ldw	r4,16(sp)
   28118:	6880080c 	andi	r2,r13,32
   2811c:	20c00017 	ldw	r3,0(r4)
   28120:	21000104 	addi	r4,r4,4
   28124:	10016b1e 	bne	r2,zero,286d4 <___vfiprintf_internal_r+0x10c8>
   28128:	6880040c 	andi	r2,r13,16
   2812c:	1001951e 	bne	r2,zero,28784 <___vfiprintf_internal_r+0x1178>
   28130:	6b40100c 	andi	r13,r13,64
   28134:	68019326 	beq	r13,zero,28784 <___vfiprintf_internal_r+0x1178>
   28138:	d8800117 	ldw	r2,4(sp)
   2813c:	d9000415 	stw	r4,16(sp)
   28140:	1880000d 	sth	r2,0(r3)
   28144:	003d5a06 	br	276b0 <___vfiprintf_internal_r+0xa4>
   28148:	a0800007 	ldb	r2,0(r20)
   2814c:	10c01b18 	cmpnei	r3,r2,108
   28150:	18019826 	beq	r3,zero,287b4 <___vfiprintf_internal_r+0x11a8>
   28154:	6b400414 	ori	r13,r13,16
   28158:	003d6d06 	br	27710 <___vfiprintf_internal_r+0x104>
   2815c:	01400044 	movi	r5,1
   28160:	0009883a 	mov	r4,zero
   28164:	900d883a 	mov	r6,r18
   28168:	003ece06 	br	27ca4 <___vfiprintf_internal_r+0x698>
   2816c:	8dc7c83a 	sub	r3,r17,r23
   28170:	00fe190e 	bge	zero,r3,279d8 <___vfiprintf_internal_r+0x3cc>
   28174:	19c00450 	cmplti	r7,r3,17
   28178:	3801e41e 	bne	r7,zero,2890c <___vfiprintf_internal_r+0x1300>
   2817c:	01c000f4 	movhi	r7,3
   28180:	39c24f04 	addi	r7,r7,2364
   28184:	03400404 	movi	r13,16
   28188:	00000606 	br	281a4 <___vfiprintf_internal_r+0xb98>
   2818c:	23800084 	addi	r14,r4,2
   28190:	84000204 	addi	r16,r16,8
   28194:	2809883a 	mov	r4,r5
   28198:	18fffc04 	addi	r3,r3,-16
   2819c:	19400448 	cmpgei	r5,r3,17
   281a0:	28001c26 	beq	r5,zero,28214 <___vfiprintf_internal_r+0xc08>
   281a4:	21400044 	addi	r5,r4,1
   281a8:	10800404 	addi	r2,r2,16
   281ac:	81c00015 	stw	r7,0(r16)
   281b0:	83400115 	stw	r13,4(r16)
   281b4:	d8800c15 	stw	r2,48(sp)
   281b8:	d9400b15 	stw	r5,44(sp)
   281bc:	29800208 	cmpgei	r6,r5,8
   281c0:	303ff226 	beq	r6,zero,2818c <___vfiprintf_internal_r+0xb80>
   281c4:	d9800a04 	addi	r6,sp,40
   281c8:	a80b883a 	mov	r5,r21
   281cc:	b009883a 	mov	r4,r22
   281d0:	10007826 	beq	r2,zero,283b4 <___vfiprintf_internal_r+0xda8>
   281d4:	d9c00615 	stw	r7,24(sp)
   281d8:	d8c00315 	stw	r3,12(sp)
   281dc:	da000215 	stw	r8,8(sp)
   281e0:	00275000 	call	27500 <__sprint_r.part.0>
   281e4:	103e1e1e 	bne	r2,zero,27a60 <___vfiprintf_internal_r+0x454>
   281e8:	d8c00317 	ldw	r3,12(sp)
   281ec:	d9000b17 	ldw	r4,44(sp)
   281f0:	d8800c17 	ldw	r2,48(sp)
   281f4:	18fffc04 	addi	r3,r3,-16
   281f8:	19400448 	cmpgei	r5,r3,17
   281fc:	d9c00617 	ldw	r7,24(sp)
   28200:	da000217 	ldw	r8,8(sp)
   28204:	9021883a 	mov	r16,r18
   28208:	23800044 	addi	r14,r4,1
   2820c:	03400404 	movi	r13,16
   28210:	283fe41e 	bne	r5,zero,281a4 <___vfiprintf_internal_r+0xb98>
   28214:	83400204 	addi	r13,r16,8
   28218:	10c5883a 	add	r2,r2,r3
   2821c:	80c00115 	stw	r3,4(r16)
   28220:	81c00015 	stw	r7,0(r16)
   28224:	d8800c15 	stw	r2,48(sp)
   28228:	db800b15 	stw	r14,44(sp)
   2822c:	70c00208 	cmpgei	r3,r14,8
   28230:	18011326 	beq	r3,zero,28680 <___vfiprintf_internal_r+0x1074>
   28234:	10018826 	beq	r2,zero,28858 <___vfiprintf_internal_r+0x124c>
   28238:	d9800a04 	addi	r6,sp,40
   2823c:	a80b883a 	mov	r5,r21
   28240:	b009883a 	mov	r4,r22
   28244:	da000215 	stw	r8,8(sp)
   28248:	00275000 	call	27500 <__sprint_r.part.0>
   2824c:	103e041e 	bne	r2,zero,27a60 <___vfiprintf_internal_r+0x454>
   28250:	da000217 	ldw	r8,8(sp)
   28254:	d9000b17 	ldw	r4,44(sp)
   28258:	d8800c17 	ldw	r2,48(sp)
   2825c:	4711c83a 	sub	r8,r8,fp
   28260:	d9801904 	addi	r6,sp,100
   28264:	21400044 	addi	r5,r4,1
   28268:	9021883a 	mov	r16,r18
   2826c:	023ddc0e 	bge	zero,r8,279e0 <___vfiprintf_internal_r+0x3d4>
   28270:	40c00450 	cmplti	r3,r8,17
   28274:	01c000f4 	movhi	r7,3
   28278:	1801741e 	bne	r3,zero,2884c <___vfiprintf_internal_r+0x1240>
   2827c:	39c24f04 	addi	r7,r7,2364
   28280:	03400404 	movi	r13,16
   28284:	00000606 	br	282a0 <___vfiprintf_internal_r+0xc94>
   28288:	21400084 	addi	r5,r4,2
   2828c:	84000204 	addi	r16,r16,8
   28290:	1809883a 	mov	r4,r3
   28294:	423ffc04 	addi	r8,r8,-16
   28298:	40c00448 	cmpgei	r3,r8,17
   2829c:	18001a26 	beq	r3,zero,28308 <___vfiprintf_internal_r+0xcfc>
   282a0:	20c00044 	addi	r3,r4,1
   282a4:	10800404 	addi	r2,r2,16
   282a8:	81c00015 	stw	r7,0(r16)
   282ac:	83400115 	stw	r13,4(r16)
   282b0:	d8800c15 	stw	r2,48(sp)
   282b4:	d8c00b15 	stw	r3,44(sp)
   282b8:	19400208 	cmpgei	r5,r3,8
   282bc:	283ff226 	beq	r5,zero,28288 <___vfiprintf_internal_r+0xc7c>
   282c0:	d9800a04 	addi	r6,sp,40
   282c4:	a80b883a 	mov	r5,r21
   282c8:	b009883a 	mov	r4,r22
   282cc:	10001a26 	beq	r2,zero,28338 <___vfiprintf_internal_r+0xd2c>
   282d0:	d9c00315 	stw	r7,12(sp)
   282d4:	da000215 	stw	r8,8(sp)
   282d8:	00275000 	call	27500 <__sprint_r.part.0>
   282dc:	103de01e 	bne	r2,zero,27a60 <___vfiprintf_internal_r+0x454>
   282e0:	da000217 	ldw	r8,8(sp)
   282e4:	d9000b17 	ldw	r4,44(sp)
   282e8:	d8800c17 	ldw	r2,48(sp)
   282ec:	423ffc04 	addi	r8,r8,-16
   282f0:	40c00448 	cmpgei	r3,r8,17
   282f4:	d9c00317 	ldw	r7,12(sp)
   282f8:	9021883a 	mov	r16,r18
   282fc:	21400044 	addi	r5,r4,1
   28300:	03400404 	movi	r13,16
   28304:	183fe61e 	bne	r3,zero,282a0 <___vfiprintf_internal_r+0xc94>
   28308:	81000204 	addi	r4,r16,8
   2830c:	1205883a 	add	r2,r2,r8
   28310:	81c00015 	stw	r7,0(r16)
   28314:	82000115 	stw	r8,4(r16)
   28318:	d8800c15 	stw	r2,48(sp)
   2831c:	d9400b15 	stw	r5,44(sp)
   28320:	28c00208 	cmpgei	r3,r5,8
   28324:	1800a41e 	bne	r3,zero,285b8 <___vfiprintf_internal_r+0xfac>
   28328:	29400044 	addi	r5,r5,1
   2832c:	21800204 	addi	r6,r4,8
   28330:	2021883a 	mov	r16,r4
   28334:	003daa06 	br	279e0 <___vfiprintf_internal_r+0x3d4>
   28338:	01400044 	movi	r5,1
   2833c:	0009883a 	mov	r4,zero
   28340:	9021883a 	mov	r16,r18
   28344:	003fd306 	br	28294 <___vfiprintf_internal_r+0xc88>
   28348:	10c00060 	cmpeqi	r3,r2,1
   2834c:	1801561e 	bne	r3,zero,288a8 <___vfiprintf_internal_r+0x129c>
   28350:	108000a0 	cmpeqi	r2,r2,2
   28354:	db400017 	ldw	r13,0(sp)
   28358:	103ef626 	beq	r2,zero,27f34 <___vfiprintf_internal_r+0x928>
   2835c:	9027883a 	mov	r19,r18
   28360:	d9000517 	ldw	r4,20(sp)
   28364:	b88003cc 	andi	r2,r23,15
   28368:	e006973a 	slli	r3,fp,28
   2836c:	b82ed13a 	srli	r23,r23,4
   28370:	2085883a 	add	r2,r4,r2
   28374:	10800003 	ldbu	r2,0(r2)
   28378:	e038d13a 	srli	fp,fp,4
   2837c:	1deeb03a 	or	r23,r3,r23
   28380:	98bfffc5 	stb	r2,-1(r19)
   28384:	bf04b03a 	or	r2,r23,fp
   28388:	9cffffc4 	addi	r19,r19,-1
   2838c:	103ff41e 	bne	r2,zero,28360 <___vfiprintf_internal_r+0xd54>
   28390:	94f9c83a 	sub	fp,r18,r19
   28394:	db400015 	stw	r13,0(sp)
   28398:	003eff06 	br	27f98 <___vfiprintf_internal_r+0x98c>
   2839c:	d9800a04 	addi	r6,sp,40
   283a0:	a80b883a 	mov	r5,r21
   283a4:	b009883a 	mov	r4,r22
   283a8:	00275000 	call	27500 <__sprint_r.part.0>
   283ac:	103da626 	beq	r2,zero,27a48 <___vfiprintf_internal_r+0x43c>
   283b0:	003dab06 	br	27a60 <___vfiprintf_internal_r+0x454>
   283b4:	03800044 	movi	r14,1
   283b8:	0009883a 	mov	r4,zero
   283bc:	9021883a 	mov	r16,r18
   283c0:	003f7506 	br	28198 <___vfiprintf_internal_r+0xb8c>
   283c4:	10009026 	beq	r2,zero,28608 <___vfiprintf_internal_r+0xffc>
   283c8:	d9800a04 	addi	r6,sp,40
   283cc:	a80b883a 	mov	r5,r21
   283d0:	b009883a 	mov	r4,r22
   283d4:	da000615 	stw	r8,24(sp)
   283d8:	db400315 	stw	r13,12(sp)
   283dc:	db800215 	stw	r14,8(sp)
   283e0:	00275000 	call	27500 <__sprint_r.part.0>
   283e4:	103d9e1e 	bne	r2,zero,27a60 <___vfiprintf_internal_r+0x454>
   283e8:	d9000b17 	ldw	r4,44(sp)
   283ec:	d8800c17 	ldw	r2,48(sp)
   283f0:	da000617 	ldw	r8,24(sp)
   283f4:	db400317 	ldw	r13,12(sp)
   283f8:	db800217 	ldw	r14,8(sp)
   283fc:	d9801904 	addi	r6,sp,100
   28400:	21400044 	addi	r5,r4,1
   28404:	9021883a 	mov	r16,r18
   28408:	003d5806 	br	2796c <___vfiprintf_internal_r+0x360>
   2840c:	d8800984 	addi	r2,sp,38
   28410:	d8801715 	stw	r2,92(sp)
   28414:	00800084 	movi	r2,2
   28418:	d8801815 	stw	r2,96(sp)
   2841c:	d9801904 	addi	r6,sp,100
   28420:	01400044 	movi	r5,1
   28424:	3021883a 	mov	r16,r6
   28428:	2809883a 	mov	r4,r5
   2842c:	21400044 	addi	r5,r4,1
   28430:	81800204 	addi	r6,r16,8
   28434:	003d6606 	br	279d0 <___vfiprintf_internal_r+0x3c4>
   28438:	db400017 	ldw	r13,0(sp)
   2843c:	003eb906 	br	27f24 <___vfiprintf_internal_r+0x918>
   28440:	9027883a 	mov	r19,r18
   28444:	b809883a 	mov	r4,r23
   28448:	e00b883a 	mov	r5,fp
   2844c:	01800284 	movi	r6,10
   28450:	000f883a 	mov	r7,zero
   28454:	db800315 	stw	r14,12(sp)
   28458:	da000215 	stw	r8,8(sp)
   2845c:	db400015 	stw	r13,0(sp)
   28460:	002ad0c0 	call	2ad0c <__umoddi3>
   28464:	10800c04 	addi	r2,r2,48
   28468:	b809883a 	mov	r4,r23
   2846c:	e00b883a 	mov	r5,fp
   28470:	98bfffc5 	stb	r2,-1(r19)
   28474:	01800284 	movi	r6,10
   28478:	000f883a 	mov	r7,zero
   2847c:	002a6ec0 	call	2a6ec <__udivdi3>
   28480:	e009883a 	mov	r4,fp
   28484:	b80b883a 	mov	r5,r23
   28488:	db400017 	ldw	r13,0(sp)
   2848c:	da000217 	ldw	r8,8(sp)
   28490:	db800317 	ldw	r14,12(sp)
   28494:	9cffffc4 	addi	r19,r19,-1
   28498:	102f883a 	mov	r23,r2
   2849c:	1839883a 	mov	fp,r3
   284a0:	203fe81e 	bne	r4,zero,28444 <___vfiprintf_internal_r+0xe38>
   284a4:	294002a8 	cmpgeui	r5,r5,10
   284a8:	283fe61e 	bne	r5,zero,28444 <___vfiprintf_internal_r+0xe38>
   284ac:	94f9c83a 	sub	fp,r18,r19
   284b0:	003eb906 	br	27f98 <___vfiprintf_internal_r+0x98c>
   284b4:	19400450 	cmplti	r5,r3,17
   284b8:	01c000f4 	movhi	r7,3
   284bc:	2801061e 	bne	r5,zero,288d8 <___vfiprintf_internal_r+0x12cc>
   284c0:	39c25304 	addi	r7,r7,2380
   284c4:	03c00404 	movi	r15,16
   284c8:	00000706 	br	284e8 <___vfiprintf_internal_r+0xedc>
   284cc:	27c00084 	addi	ra,r4,2
   284d0:	84000204 	addi	r16,r16,8
   284d4:	3009883a 	mov	r4,r6
   284d8:	18fffc04 	addi	r3,r3,-16
   284dc:	19400448 	cmpgei	r5,r3,17
   284e0:	28002026 	beq	r5,zero,28564 <___vfiprintf_internal_r+0xf58>
   284e4:	21800044 	addi	r6,r4,1
   284e8:	10800404 	addi	r2,r2,16
   284ec:	81c00015 	stw	r7,0(r16)
   284f0:	83c00115 	stw	r15,4(r16)
   284f4:	d8800c15 	stw	r2,48(sp)
   284f8:	d9800b15 	stw	r6,44(sp)
   284fc:	31400208 	cmpgei	r5,r6,8
   28500:	283ff226 	beq	r5,zero,284cc <___vfiprintf_internal_r+0xec0>
   28504:	d9800a04 	addi	r6,sp,40
   28508:	a80b883a 	mov	r5,r21
   2850c:	b009883a 	mov	r4,r22
   28510:	10001f26 	beq	r2,zero,28590 <___vfiprintf_internal_r+0xf84>
   28514:	d9c00815 	stw	r7,32(sp)
   28518:	d8c00715 	stw	r3,28(sp)
   2851c:	da000615 	stw	r8,24(sp)
   28520:	db400315 	stw	r13,12(sp)
   28524:	db800215 	stw	r14,8(sp)
   28528:	00275000 	call	27500 <__sprint_r.part.0>
   2852c:	103d4c1e 	bne	r2,zero,27a60 <___vfiprintf_internal_r+0x454>
   28530:	d8c00717 	ldw	r3,28(sp)
   28534:	d9000b17 	ldw	r4,44(sp)
   28538:	d8800c17 	ldw	r2,48(sp)
   2853c:	18fffc04 	addi	r3,r3,-16
   28540:	19400448 	cmpgei	r5,r3,17
   28544:	d9c00817 	ldw	r7,32(sp)
   28548:	da000617 	ldw	r8,24(sp)
   2854c:	db400317 	ldw	r13,12(sp)
   28550:	db800217 	ldw	r14,8(sp)
   28554:	9021883a 	mov	r16,r18
   28558:	27c00044 	addi	ra,r4,1
   2855c:	03c00404 	movi	r15,16
   28560:	283fe01e 	bne	r5,zero,284e4 <___vfiprintf_internal_r+0xed8>
   28564:	10c5883a 	add	r2,r2,r3
   28568:	80c00115 	stw	r3,4(r16)
   2856c:	81c00015 	stw	r7,0(r16)
   28570:	d8800c15 	stw	r2,48(sp)
   28574:	dfc00b15 	stw	ra,44(sp)
   28578:	f8c00208 	cmpgei	r3,ra,8
   2857c:	18002d1e 	bne	r3,zero,28634 <___vfiprintf_internal_r+0x1028>
   28580:	84000204 	addi	r16,r16,8
   28584:	f9400044 	addi	r5,ra,1
   28588:	f809883a 	mov	r4,ra
   2858c:	003ce706 	br	2792c <___vfiprintf_internal_r+0x320>
   28590:	0009883a 	mov	r4,zero
   28594:	07c00044 	movi	ra,1
   28598:	9021883a 	mov	r16,r18
   2859c:	003fce06 	br	284d8 <___vfiprintf_internal_r+0xecc>
   285a0:	8dc0010e 	bge	r17,r23,285a8 <___vfiprintf_internal_r+0xf9c>
   285a4:	b823883a 	mov	r17,r23
   285a8:	d8800117 	ldw	r2,4(sp)
   285ac:	1445883a 	add	r2,r2,r17
   285b0:	d8800115 	stw	r2,4(sp)
   285b4:	003d2406 	br	27a48 <___vfiprintf_internal_r+0x43c>
   285b8:	10007626 	beq	r2,zero,28794 <___vfiprintf_internal_r+0x1188>
   285bc:	d9800a04 	addi	r6,sp,40
   285c0:	a80b883a 	mov	r5,r21
   285c4:	b009883a 	mov	r4,r22
   285c8:	00275000 	call	27500 <__sprint_r.part.0>
   285cc:	103d241e 	bne	r2,zero,27a60 <___vfiprintf_internal_r+0x454>
   285d0:	d9400b17 	ldw	r5,44(sp)
   285d4:	d8800c17 	ldw	r2,48(sp)
   285d8:	d9801904 	addi	r6,sp,100
   285dc:	29400044 	addi	r5,r5,1
   285e0:	9021883a 	mov	r16,r18
   285e4:	003cfe06 	br	279e0 <___vfiprintf_internal_r+0x3d4>
   285e8:	d8000b15 	stw	zero,44(sp)
   285ec:	9021883a 	mov	r16,r18
   285f0:	003d7606 	br	27bcc <___vfiprintf_internal_r+0x5c0>
   285f4:	4000ac1e 	bne	r8,zero,288a8 <___vfiprintf_internal_r+0x129c>
   285f8:	0011883a 	mov	r8,zero
   285fc:	0039883a 	mov	fp,zero
   28600:	9027883a 	mov	r19,r18
   28604:	003e6406 	br	27f98 <___vfiprintf_internal_r+0x98c>
   28608:	7000411e 	bne	r14,zero,28710 <___vfiprintf_internal_r+0x1104>
   2860c:	0009883a 	mov	r4,zero
   28610:	d9801904 	addi	r6,sp,100
   28614:	01400044 	movi	r5,1
   28618:	9021883a 	mov	r16,r18
   2861c:	003cec06 	br	279d0 <___vfiprintf_internal_r+0x3c4>
   28620:	d9801904 	addi	r6,sp,100
   28624:	01400044 	movi	r5,1
   28628:	0009883a 	mov	r4,zero
   2862c:	9021883a 	mov	r16,r18
   28630:	003ce706 	br	279d0 <___vfiprintf_internal_r+0x3c4>
   28634:	10004a26 	beq	r2,zero,28760 <___vfiprintf_internal_r+0x1154>
   28638:	d9800a04 	addi	r6,sp,40
   2863c:	a80b883a 	mov	r5,r21
   28640:	b009883a 	mov	r4,r22
   28644:	da000615 	stw	r8,24(sp)
   28648:	db400315 	stw	r13,12(sp)
   2864c:	db800215 	stw	r14,8(sp)
   28650:	00275000 	call	27500 <__sprint_r.part.0>
   28654:	103d021e 	bne	r2,zero,27a60 <___vfiprintf_internal_r+0x454>
   28658:	d9000b17 	ldw	r4,44(sp)
   2865c:	d8800c17 	ldw	r2,48(sp)
   28660:	da000617 	ldw	r8,24(sp)
   28664:	db400317 	ldw	r13,12(sp)
   28668:	db800217 	ldw	r14,8(sp)
   2866c:	9021883a 	mov	r16,r18
   28670:	21400044 	addi	r5,r4,1
   28674:	003cad06 	br	2792c <___vfiprintf_internal_r+0x320>
   28678:	9027883a 	mov	r19,r18
   2867c:	003e4606 	br	27f98 <___vfiprintf_internal_r+0x98c>
   28680:	71400044 	addi	r5,r14,1
   28684:	69800204 	addi	r6,r13,8
   28688:	7009883a 	mov	r4,r14
   2868c:	6821883a 	mov	r16,r13
   28690:	003cd106 	br	279d8 <___vfiprintf_internal_r+0x3cc>
   28694:	25c00017 	ldw	r23,0(r4)
   28698:	d8c00415 	stw	r3,16(sp)
   2869c:	b839d7fa 	srai	fp,r23,31
   286a0:	e005883a 	mov	r2,fp
   286a4:	003db406 	br	27d78 <___vfiprintf_internal_r+0x76c>
   286a8:	00c00c04 	movi	r3,48
   286ac:	d88009c5 	stb	r2,39(sp)
   286b0:	d8c00985 	stb	r3,38(sp)
   286b4:	6b400094 	ori	r13,r13,2
   286b8:	00800084 	movi	r2,2
   286bc:	003d2506 	br	27b54 <___vfiprintf_internal_r+0x548>
   286c0:	25c00017 	ldw	r23,0(r4)
   286c4:	0039883a 	mov	fp,zero
   286c8:	d8c00415 	stw	r3,16(sp)
   286cc:	0005883a 	mov	r2,zero
   286d0:	003d2006 	br	27b54 <___vfiprintf_internal_r+0x548>
   286d4:	d9400117 	ldw	r5,4(sp)
   286d8:	d9000415 	stw	r4,16(sp)
   286dc:	2805d7fa 	srai	r2,r5,31
   286e0:	19400015 	stw	r5,0(r3)
   286e4:	18800115 	stw	r2,4(r3)
   286e8:	003bf106 	br	276b0 <___vfiprintf_internal_r+0xa4>
   286ec:	2dc00017 	ldw	r23,0(r5)
   286f0:	0039883a 	mov	fp,zero
   286f4:	d9000415 	stw	r4,16(sp)
   286f8:	003dc106 	br	27e00 <___vfiprintf_internal_r+0x7f4>
   286fc:	25c00017 	ldw	r23,0(r4)
   28700:	0039883a 	mov	fp,zero
   28704:	d8c00415 	stw	r3,16(sp)
   28708:	00800044 	movi	r2,1
   2870c:	003d1106 	br	27b54 <___vfiprintf_internal_r+0x548>
   28710:	d8800984 	addi	r2,sp,38
   28714:	d8801715 	stw	r2,92(sp)
   28718:	00800084 	movi	r2,2
   2871c:	d8801815 	stw	r2,96(sp)
   28720:	dc001904 	addi	r16,sp,100
   28724:	01000044 	movi	r4,1
   28728:	003f4006 	br	2842c <___vfiprintf_internal_r+0xe20>
   2872c:	0463c83a 	sub	r17,zero,r17
   28730:	d8c00415 	stw	r3,16(sp)
   28734:	003e3806 	br	28018 <___vfiprintf_internal_r+0xa0c>
   28738:	9809883a 	mov	r4,r19
   2873c:	d8c00215 	stw	r3,8(sp)
   28740:	db400015 	stw	r13,0(sp)
   28744:	00274680 	call	27468 <strlen>
   28748:	d8c00217 	ldw	r3,8(sp)
   2874c:	db400017 	ldw	r13,0(sp)
   28750:	1039883a 	mov	fp,r2
   28754:	102f883a 	mov	r23,r2
   28758:	d8c00415 	stw	r3,16(sp)
   2875c:	003c6406 	br	278f0 <___vfiprintf_internal_r+0x2e4>
   28760:	d8c00947 	ldb	r3,37(sp)
   28764:	18004326 	beq	r3,zero,28874 <___vfiprintf_internal_r+0x1268>
   28768:	d8800944 	addi	r2,sp,37
   2876c:	d8801715 	stw	r2,92(sp)
   28770:	00800044 	movi	r2,1
   28774:	d8801815 	stw	r2,96(sp)
   28778:	d9801904 	addi	r6,sp,100
   2877c:	01400044 	movi	r5,1
   28780:	003c7606 	br	2795c <___vfiprintf_internal_r+0x350>
   28784:	d8800117 	ldw	r2,4(sp)
   28788:	18800015 	stw	r2,0(r3)
   2878c:	d9000415 	stw	r4,16(sp)
   28790:	003bc706 	br	276b0 <___vfiprintf_internal_r+0xa4>
   28794:	00c00044 	movi	r3,1
   28798:	e005883a 	mov	r2,fp
   2879c:	dcc01715 	stw	r19,92(sp)
   287a0:	df001815 	stw	fp,96(sp)
   287a4:	df000c15 	stw	fp,48(sp)
   287a8:	d8c00b15 	stw	r3,44(sp)
   287ac:	d9801904 	addi	r6,sp,100
   287b0:	003c9a06 	br	27a1c <___vfiprintf_internal_r+0x410>
   287b4:	a0800043 	ldbu	r2,1(r20)
   287b8:	6b400814 	ori	r13,r13,32
   287bc:	a5000044 	addi	r20,r20,1
   287c0:	10803fcc 	andi	r2,r2,255
   287c4:	1080201c 	xori	r2,r2,128
   287c8:	10bfe004 	addi	r2,r2,-128
   287cc:	003bd006 	br	27710 <___vfiprintf_internal_r+0x104>
   287d0:	408001f0 	cmpltui	r2,r8,7
   287d4:	4039883a 	mov	fp,r8
   287d8:	10002426 	beq	r2,zero,2886c <___vfiprintf_internal_r+0x1260>
   287dc:	04c000f4 	movhi	r19,3
   287e0:	e02f883a 	mov	r23,fp
   287e4:	d8c00415 	stw	r3,16(sp)
   287e8:	9cc1d204 	addi	r19,r19,1864
   287ec:	003c4006 	br	278f0 <___vfiprintf_internal_r+0x2e4>
   287f0:	d8c00417 	ldw	r3,16(sp)
   287f4:	0039883a 	mov	fp,zero
   287f8:	d9000415 	stw	r4,16(sp)
   287fc:	1dc00017 	ldw	r23,0(r3)
   28800:	003d7f06 	br	27e00 <___vfiprintf_internal_r+0x7f4>
   28804:	d8800417 	ldw	r2,16(sp)
   28808:	0039883a 	mov	fp,zero
   2880c:	d8c00415 	stw	r3,16(sp)
   28810:	15c00017 	ldw	r23,0(r2)
   28814:	0005883a 	mov	r2,zero
   28818:	003cce06 	br	27b54 <___vfiprintf_internal_r+0x548>
   2881c:	d8800417 	ldw	r2,16(sp)
   28820:	d8c00415 	stw	r3,16(sp)
   28824:	15c00017 	ldw	r23,0(r2)
   28828:	b839d7fa 	srai	fp,r23,31
   2882c:	e005883a 	mov	r2,fp
   28830:	003d5106 	br	27d78 <___vfiprintf_internal_r+0x76c>
   28834:	d8800417 	ldw	r2,16(sp)
   28838:	0039883a 	mov	fp,zero
   2883c:	d8c00415 	stw	r3,16(sp)
   28840:	15c00017 	ldw	r23,0(r2)
   28844:	00800044 	movi	r2,1
   28848:	003cc206 	br	27b54 <___vfiprintf_internal_r+0x548>
   2884c:	3009883a 	mov	r4,r6
   28850:	39c24f04 	addi	r7,r7,2364
   28854:	003ead06 	br	2830c <___vfiprintf_internal_r+0xd00>
   28858:	d9801904 	addi	r6,sp,100
   2885c:	01400044 	movi	r5,1
   28860:	0009883a 	mov	r4,zero
   28864:	9021883a 	mov	r16,r18
   28868:	003c5b06 	br	279d8 <___vfiprintf_internal_r+0x3cc>
   2886c:	07000184 	movi	fp,6
   28870:	003fda06 	br	287dc <___vfiprintf_internal_r+0x11d0>
   28874:	703ee51e 	bne	r14,zero,2840c <___vfiprintf_internal_r+0xe00>
   28878:	0009883a 	mov	r4,zero
   2887c:	d9801904 	addi	r6,sp,100
   28880:	01400044 	movi	r5,1
   28884:	9021883a 	mov	r16,r18
   28888:	003c5306 	br	279d8 <___vfiprintf_internal_r+0x3cc>
   2888c:	d9800945 	stb	r6,37(sp)
   28890:	003c1106 	br	278d8 <___vfiprintf_internal_r+0x2cc>
   28894:	d9800a04 	addi	r6,sp,40
   28898:	a80b883a 	mov	r5,r21
   2889c:	b009883a 	mov	r4,r22
   288a0:	00275000 	call	27500 <__sprint_r.part.0>
   288a4:	003c6e06 	br	27a60 <___vfiprintf_internal_r+0x454>
   288a8:	db400017 	ldw	r13,0(sp)
   288ac:	003d3f06 	br	27dac <___vfiprintf_internal_r+0x7a0>
   288b0:	402f883a 	mov	r23,r8
   288b4:	d8c00415 	stw	r3,16(sp)
   288b8:	4039883a 	mov	fp,r8
   288bc:	003c0c06 	br	278f0 <___vfiprintf_internal_r+0x2e4>
   288c0:	d9800945 	stb	r6,37(sp)
   288c4:	003d2406 	br	27d58 <___vfiprintf_internal_r+0x74c>
   288c8:	d9800945 	stb	r6,37(sp)
   288cc:	003d4206 	br	27dd8 <___vfiprintf_internal_r+0x7cc>
   288d0:	d9800945 	stb	r6,37(sp)
   288d4:	003d7a06 	br	27ec0 <___vfiprintf_internal_r+0x8b4>
   288d8:	303f883a 	mov	ra,r6
   288dc:	39c25304 	addi	r7,r7,2380
   288e0:	003f2006 	br	28564 <___vfiprintf_internal_r+0xf58>
   288e4:	d9800945 	stb	r6,37(sp)
   288e8:	003df806 	br	280cc <___vfiprintf_internal_r+0xac0>
   288ec:	d9800945 	stb	r6,37(sp)
   288f0:	003e0806 	br	28114 <___vfiprintf_internal_r+0xb08>
   288f4:	21400044 	addi	r5,r4,1
   288f8:	39c25304 	addi	r7,r7,2380
   288fc:	003d0306 	br	27d0c <___vfiprintf_internal_r+0x700>
   28900:	00bfffc4 	movi	r2,-1
   28904:	d8800115 	stw	r2,4(sp)
   28908:	003c5806 	br	27a6c <___vfiprintf_internal_r+0x460>
   2890c:	01c000f4 	movhi	r7,3
   28910:	301b883a 	mov	r13,r6
   28914:	281d883a 	mov	r14,r5
   28918:	39c24f04 	addi	r7,r7,2364
   2891c:	003e3e06 	br	28218 <___vfiprintf_internal_r+0xc0c>
   28920:	d8800417 	ldw	r2,16(sp)
   28924:	12000017 	ldw	r8,0(r2)
   28928:	11000104 	addi	r4,r2,4
   2892c:	4000010e 	bge	r8,zero,28934 <___vfiprintf_internal_r+0x1328>
   28930:	023fffc4 	movi	r8,-1
   28934:	a0800043 	ldbu	r2,1(r20)
   28938:	d9000415 	stw	r4,16(sp)
   2893c:	1829883a 	mov	r20,r3
   28940:	10803fcc 	andi	r2,r2,255
   28944:	1080201c 	xori	r2,r2,128
   28948:	10bfe004 	addi	r2,r2,-128
   2894c:	003b7006 	br	27710 <___vfiprintf_internal_r+0x104>

00028950 <__vfiprintf_internal>:
   28950:	00c000f4 	movhi	r3,3
   28954:	2005883a 	mov	r2,r4
   28958:	190a5e17 	ldw	r4,10616(r3)
   2895c:	300f883a 	mov	r7,r6
   28960:	280d883a 	mov	r6,r5
   28964:	100b883a 	mov	r5,r2
   28968:	002760c1 	jmpi	2760c <___vfiprintf_internal_r>

0002896c <__sbprintf>:
   2896c:	2880030b 	ldhu	r2,12(r5)
   28970:	2b001917 	ldw	r12,100(r5)
   28974:	2ac0038b 	ldhu	r11,14(r5)
   28978:	2a800717 	ldw	r10,28(r5)
   2897c:	2a400917 	ldw	r9,36(r5)
   28980:	defee204 	addi	sp,sp,-1144
   28984:	da001a04 	addi	r8,sp,104
   28988:	00c10004 	movi	r3,1024
   2898c:	dc011a15 	stw	r16,1128(sp)
   28990:	10bfff4c 	andi	r2,r2,65533
   28994:	2821883a 	mov	r16,r5
   28998:	d80b883a 	mov	r5,sp
   2899c:	dc811c15 	stw	r18,1136(sp)
   289a0:	dc411b15 	stw	r17,1132(sp)
   289a4:	dfc11d15 	stw	ra,1140(sp)
   289a8:	2025883a 	mov	r18,r4
   289ac:	d880030d 	sth	r2,12(sp)
   289b0:	db001915 	stw	r12,100(sp)
   289b4:	dac0038d 	sth	r11,14(sp)
   289b8:	da800715 	stw	r10,28(sp)
   289bc:	da400915 	stw	r9,36(sp)
   289c0:	da000015 	stw	r8,0(sp)
   289c4:	da000415 	stw	r8,16(sp)
   289c8:	d8c00215 	stw	r3,8(sp)
   289cc:	d8c00515 	stw	r3,20(sp)
   289d0:	d8000615 	stw	zero,24(sp)
   289d4:	002760c0 	call	2760c <___vfiprintf_internal_r>
   289d8:	1023883a 	mov	r17,r2
   289dc:	10000d0e 	bge	r2,zero,28a14 <__sbprintf+0xa8>
   289e0:	d880030b 	ldhu	r2,12(sp)
   289e4:	1080100c 	andi	r2,r2,64
   289e8:	10000326 	beq	r2,zero,289f8 <__sbprintf+0x8c>
   289ec:	8080030b 	ldhu	r2,12(r16)
   289f0:	10801014 	ori	r2,r2,64
   289f4:	8080030d 	sth	r2,12(r16)
   289f8:	8805883a 	mov	r2,r17
   289fc:	dfc11d17 	ldw	ra,1140(sp)
   28a00:	dc811c17 	ldw	r18,1136(sp)
   28a04:	dc411b17 	ldw	r17,1132(sp)
   28a08:	dc011a17 	ldw	r16,1128(sp)
   28a0c:	dec11e04 	addi	sp,sp,1144
   28a10:	f800283a 	ret
   28a14:	d80b883a 	mov	r5,sp
   28a18:	9009883a 	mov	r4,r18
   28a1c:	00248440 	call	24844 <_fflush_r>
   28a20:	103fef26 	beq	r2,zero,289e0 <__sbprintf+0x74>
   28a24:	047fffc4 	movi	r17,-1
   28a28:	003fed06 	br	289e0 <__sbprintf+0x74>

00028a2c <__swbuf_r>:
   28a2c:	defffb04 	addi	sp,sp,-20
   28a30:	dcc00315 	stw	r19,12(sp)
   28a34:	dc400115 	stw	r17,4(sp)
   28a38:	dc000015 	stw	r16,0(sp)
   28a3c:	dfc00415 	stw	ra,16(sp)
   28a40:	dc800215 	stw	r18,8(sp)
   28a44:	2027883a 	mov	r19,r4
   28a48:	2823883a 	mov	r17,r5
   28a4c:	3021883a 	mov	r16,r6
   28a50:	20000226 	beq	r4,zero,28a5c <__swbuf_r+0x30>
   28a54:	20800e17 	ldw	r2,56(r4)
   28a58:	10003e26 	beq	r2,zero,28b54 <__swbuf_r+0x128>
   28a5c:	80800617 	ldw	r2,24(r16)
   28a60:	80c0030b 	ldhu	r3,12(r16)
   28a64:	80800215 	stw	r2,8(r16)
   28a68:	1880020c 	andi	r2,r3,8
   28a6c:	10001f26 	beq	r2,zero,28aec <__swbuf_r+0xc0>
   28a70:	80800417 	ldw	r2,16(r16)
   28a74:	10001d26 	beq	r2,zero,28aec <__swbuf_r+0xc0>
   28a78:	1948000c 	andi	r5,r3,8192
   28a7c:	8c803fcc 	andi	r18,r17,255
   28a80:	28002326 	beq	r5,zero,28b10 <__swbuf_r+0xe4>
   28a84:	80c00017 	ldw	r3,0(r16)
   28a88:	81000517 	ldw	r4,20(r16)
   28a8c:	1885c83a 	sub	r2,r3,r2
   28a90:	1100290e 	bge	r2,r4,28b38 <__swbuf_r+0x10c>
   28a94:	10800044 	addi	r2,r2,1
   28a98:	81400217 	ldw	r5,8(r16)
   28a9c:	19000044 	addi	r4,r3,1
   28aa0:	81000015 	stw	r4,0(r16)
   28aa4:	297fffc4 	addi	r5,r5,-1
   28aa8:	81400215 	stw	r5,8(r16)
   28aac:	1c400005 	stb	r17,0(r3)
   28ab0:	80c00517 	ldw	r3,20(r16)
   28ab4:	18802926 	beq	r3,r2,28b5c <__swbuf_r+0x130>
   28ab8:	8080030b 	ldhu	r2,12(r16)
   28abc:	1080004c 	andi	r2,r2,1
   28ac0:	10000226 	beq	r2,zero,28acc <__swbuf_r+0xa0>
   28ac4:	90800298 	cmpnei	r2,r18,10
   28ac8:	10002426 	beq	r2,zero,28b5c <__swbuf_r+0x130>
   28acc:	9005883a 	mov	r2,r18
   28ad0:	dfc00417 	ldw	ra,16(sp)
   28ad4:	dcc00317 	ldw	r19,12(sp)
   28ad8:	dc800217 	ldw	r18,8(sp)
   28adc:	dc400117 	ldw	r17,4(sp)
   28ae0:	dc000017 	ldw	r16,0(sp)
   28ae4:	dec00504 	addi	sp,sp,20
   28ae8:	f800283a 	ret
   28aec:	800b883a 	mov	r5,r16
   28af0:	9809883a 	mov	r4,r19
   28af4:	0022b500 	call	22b50 <__swsetup_r>
   28af8:	10001c1e 	bne	r2,zero,28b6c <__swbuf_r+0x140>
   28afc:	80c0030b 	ldhu	r3,12(r16)
   28b00:	80800417 	ldw	r2,16(r16)
   28b04:	8c803fcc 	andi	r18,r17,255
   28b08:	1948000c 	andi	r5,r3,8192
   28b0c:	283fdd1e 	bne	r5,zero,28a84 <__swbuf_r+0x58>
   28b10:	81001917 	ldw	r4,100(r16)
   28b14:	18c80014 	ori	r3,r3,8192
   28b18:	0177ffc4 	movi	r5,-8193
   28b1c:	2148703a 	and	r4,r4,r5
   28b20:	80c0030d 	sth	r3,12(r16)
   28b24:	80c00017 	ldw	r3,0(r16)
   28b28:	81001915 	stw	r4,100(r16)
   28b2c:	81000517 	ldw	r4,20(r16)
   28b30:	1885c83a 	sub	r2,r3,r2
   28b34:	113fd716 	blt	r2,r4,28a94 <__swbuf_r+0x68>
   28b38:	800b883a 	mov	r5,r16
   28b3c:	9809883a 	mov	r4,r19
   28b40:	00248440 	call	24844 <_fflush_r>
   28b44:	1000091e 	bne	r2,zero,28b6c <__swbuf_r+0x140>
   28b48:	80c00017 	ldw	r3,0(r16)
   28b4c:	00800044 	movi	r2,1
   28b50:	003fd106 	br	28a98 <__swbuf_r+0x6c>
   28b54:	0024c8c0 	call	24c8c <__sinit>
   28b58:	003fc006 	br	28a5c <__swbuf_r+0x30>
   28b5c:	800b883a 	mov	r5,r16
   28b60:	9809883a 	mov	r4,r19
   28b64:	00248440 	call	24844 <_fflush_r>
   28b68:	103fd826 	beq	r2,zero,28acc <__swbuf_r+0xa0>
   28b6c:	04bfffc4 	movi	r18,-1
   28b70:	003fd606 	br	28acc <__swbuf_r+0xa0>

00028b74 <__swbuf>:
   28b74:	00c000f4 	movhi	r3,3
   28b78:	2005883a 	mov	r2,r4
   28b7c:	190a5e17 	ldw	r4,10616(r3)
   28b80:	280d883a 	mov	r6,r5
   28b84:	100b883a 	mov	r5,r2
   28b88:	0028a2c1 	jmpi	28a2c <__swbuf_r>

00028b8c <_write_r>:
   28b8c:	2807883a 	mov	r3,r5
   28b90:	defffe04 	addi	sp,sp,-8
   28b94:	dc000015 	stw	r16,0(sp)
   28b98:	300b883a 	mov	r5,r6
   28b9c:	008000f4 	movhi	r2,3
   28ba0:	380d883a 	mov	r6,r7
   28ba4:	2021883a 	mov	r16,r4
   28ba8:	1809883a 	mov	r4,r3
   28bac:	dfc00115 	stw	ra,4(sp)
   28bb0:	10117f15 	stw	zero,17916(r2)
   28bb4:	002e7c80 	call	2e7c8 <write>
   28bb8:	10ffffd8 	cmpnei	r3,r2,-1
   28bbc:	18000426 	beq	r3,zero,28bd0 <_write_r+0x44>
   28bc0:	dfc00117 	ldw	ra,4(sp)
   28bc4:	dc000017 	ldw	r16,0(sp)
   28bc8:	dec00204 	addi	sp,sp,8
   28bcc:	f800283a 	ret
   28bd0:	00c000f4 	movhi	r3,3
   28bd4:	18d17f17 	ldw	r3,17916(r3)
   28bd8:	183ff926 	beq	r3,zero,28bc0 <_write_r+0x34>
   28bdc:	80c00015 	stw	r3,0(r16)
   28be0:	dfc00117 	ldw	ra,4(sp)
   28be4:	dc000017 	ldw	r16,0(sp)
   28be8:	dec00204 	addi	sp,sp,8
   28bec:	f800283a 	ret

00028bf0 <_close_r>:
   28bf0:	defffe04 	addi	sp,sp,-8
   28bf4:	dc000015 	stw	r16,0(sp)
   28bf8:	008000f4 	movhi	r2,3
   28bfc:	2021883a 	mov	r16,r4
   28c00:	2809883a 	mov	r4,r5
   28c04:	dfc00115 	stw	ra,4(sp)
   28c08:	10117f15 	stw	zero,17916(r2)
   28c0c:	002dc280 	call	2dc28 <close>
   28c10:	10ffffd8 	cmpnei	r3,r2,-1
   28c14:	18000426 	beq	r3,zero,28c28 <_close_r+0x38>
   28c18:	dfc00117 	ldw	ra,4(sp)
   28c1c:	dc000017 	ldw	r16,0(sp)
   28c20:	dec00204 	addi	sp,sp,8
   28c24:	f800283a 	ret
   28c28:	00c000f4 	movhi	r3,3
   28c2c:	18d17f17 	ldw	r3,17916(r3)
   28c30:	183ff926 	beq	r3,zero,28c18 <_close_r+0x28>
   28c34:	80c00015 	stw	r3,0(r16)
   28c38:	dfc00117 	ldw	ra,4(sp)
   28c3c:	dc000017 	ldw	r16,0(sp)
   28c40:	dec00204 	addi	sp,sp,8
   28c44:	f800283a 	ret

00028c48 <__assert_func>:
   28c48:	008000f4 	movhi	r2,3
   28c4c:	120a5e17 	ldw	r8,10616(r2)
   28c50:	defffc04 	addi	sp,sp,-16
   28c54:	3807883a 	mov	r3,r7
   28c58:	3005883a 	mov	r2,r6
   28c5c:	dfc00315 	stw	ra,12(sp)
   28c60:	42400317 	ldw	r9,12(r8)
   28c64:	200f883a 	mov	r7,r4
   28c68:	2811883a 	mov	r8,r5
   28c6c:	180d883a 	mov	r6,r3
   28c70:	10000a26 	beq	r2,zero,28c9c <__assert_func+0x54>
   28c74:	00c000f4 	movhi	r3,3
   28c78:	18c25704 	addi	r3,r3,2396
   28c7c:	014000f4 	movhi	r5,3
   28c80:	29425b04 	addi	r5,r5,2412
   28c84:	4809883a 	mov	r4,r9
   28c88:	d8c00115 	stw	r3,4(sp)
   28c8c:	da000015 	stw	r8,0(sp)
   28c90:	d8800215 	stw	r2,8(sp)
   28c94:	0028f440 	call	28f44 <fiprintf>
   28c98:	002a1840 	call	2a184 <abort>
   28c9c:	00c000f4 	movhi	r3,3
   28ca0:	18c25a04 	addi	r3,r3,2408
   28ca4:	1805883a 	mov	r2,r3
   28ca8:	003ff406 	br	28c7c <__assert_func+0x34>

00028cac <__assert>:
   28cac:	deffff04 	addi	sp,sp,-4
   28cb0:	300f883a 	mov	r7,r6
   28cb4:	000d883a 	mov	r6,zero
   28cb8:	dfc00015 	stw	ra,0(sp)
   28cbc:	0028c480 	call	28c48 <__assert_func>

00028cc0 <_calloc_r>:
   28cc0:	defffe04 	addi	sp,sp,-8
   28cc4:	dc000015 	stw	r16,0(sp)
   28cc8:	2021883a 	mov	r16,r4
   28ccc:	2809883a 	mov	r4,r5
   28cd0:	300b883a 	mov	r5,r6
   28cd4:	dfc00115 	stw	ra,4(sp)
   28cd8:	002b4840 	call	2b484 <__mulsi3>
   28cdc:	8009883a 	mov	r4,r16
   28ce0:	100b883a 	mov	r5,r2
   28ce4:	00254940 	call	25494 <_malloc_r>
   28ce8:	1009883a 	mov	r4,r2
   28cec:	10000c26 	beq	r2,zero,28d20 <_calloc_r+0x60>
   28cf0:	11bfff17 	ldw	r6,-4(r2)
   28cf4:	00bfff04 	movi	r2,-4
   28cf8:	308c703a 	and	r6,r6,r2
   28cfc:	31bfff04 	addi	r6,r6,-4
   28d00:	30800968 	cmpgeui	r2,r6,37
   28d04:	1000151e 	bne	r2,zero,28d5c <_calloc_r+0x9c>
   28d08:	30800530 	cmpltui	r2,r6,20
   28d0c:	10000926 	beq	r2,zero,28d34 <_calloc_r+0x74>
   28d10:	2005883a 	mov	r2,r4
   28d14:	10000015 	stw	zero,0(r2)
   28d18:	10000115 	stw	zero,4(r2)
   28d1c:	10000215 	stw	zero,8(r2)
   28d20:	2005883a 	mov	r2,r4
   28d24:	dfc00117 	ldw	ra,4(sp)
   28d28:	dc000017 	ldw	r16,0(sp)
   28d2c:	dec00204 	addi	sp,sp,8
   28d30:	f800283a 	ret
   28d34:	20000015 	stw	zero,0(r4)
   28d38:	20000115 	stw	zero,4(r4)
   28d3c:	30800728 	cmpgeui	r2,r6,28
   28d40:	10000a26 	beq	r2,zero,28d6c <_calloc_r+0xac>
   28d44:	20000215 	stw	zero,8(r4)
   28d48:	20000315 	stw	zero,12(r4)
   28d4c:	31800920 	cmpeqi	r6,r6,36
   28d50:	3000081e 	bne	r6,zero,28d74 <_calloc_r+0xb4>
   28d54:	20800404 	addi	r2,r4,16
   28d58:	003fee06 	br	28d14 <_calloc_r+0x54>
   28d5c:	000b883a 	mov	r5,zero
   28d60:	0025e440 	call	25e44 <memset>
   28d64:	1009883a 	mov	r4,r2
   28d68:	003fed06 	br	28d20 <_calloc_r+0x60>
   28d6c:	20800204 	addi	r2,r4,8
   28d70:	003fe806 	br	28d14 <_calloc_r+0x54>
   28d74:	20000415 	stw	zero,16(r4)
   28d78:	20800604 	addi	r2,r4,24
   28d7c:	20000515 	stw	zero,20(r4)
   28d80:	003fe406 	br	28d14 <_calloc_r+0x54>

00028d84 <_fclose_r.part.0>:
   28d84:	defffc04 	addi	sp,sp,-16
   28d88:	dc800215 	stw	r18,8(sp)
   28d8c:	dc400115 	stw	r17,4(sp)
   28d90:	dc000015 	stw	r16,0(sp)
   28d94:	dfc00315 	stw	ra,12(sp)
   28d98:	2821883a 	mov	r16,r5
   28d9c:	2023883a 	mov	r17,r4
   28da0:	002461c0 	call	2461c <__sflush_r>
   28da4:	80c00b17 	ldw	r3,44(r16)
   28da8:	1025883a 	mov	r18,r2
   28dac:	18000426 	beq	r3,zero,28dc0 <_fclose_r.part.0+0x3c>
   28db0:	81400717 	ldw	r5,28(r16)
   28db4:	8809883a 	mov	r4,r17
   28db8:	183ee83a 	callr	r3
   28dbc:	10001916 	blt	r2,zero,28e24 <_fclose_r.part.0+0xa0>
   28dc0:	8080030b 	ldhu	r2,12(r16)
   28dc4:	1080200c 	andi	r2,r2,128
   28dc8:	10001a1e 	bne	r2,zero,28e34 <_fclose_r.part.0+0xb0>
   28dcc:	81400c17 	ldw	r5,48(r16)
   28dd0:	28000526 	beq	r5,zero,28de8 <_fclose_r.part.0+0x64>
   28dd4:	80801004 	addi	r2,r16,64
   28dd8:	28800226 	beq	r5,r2,28de4 <_fclose_r.part.0+0x60>
   28ddc:	8809883a 	mov	r4,r17
   28de0:	0024df00 	call	24df0 <_free_r>
   28de4:	80000c15 	stw	zero,48(r16)
   28de8:	81401117 	ldw	r5,68(r16)
   28dec:	28000326 	beq	r5,zero,28dfc <_fclose_r.part.0+0x78>
   28df0:	8809883a 	mov	r4,r17
   28df4:	0024df00 	call	24df0 <_free_r>
   28df8:	80001115 	stw	zero,68(r16)
   28dfc:	0024c9c0 	call	24c9c <__sfp_lock_acquire>
   28e00:	8000030d 	sth	zero,12(r16)
   28e04:	0024ca00 	call	24ca0 <__sfp_lock_release>
   28e08:	9005883a 	mov	r2,r18
   28e0c:	dfc00317 	ldw	ra,12(sp)
   28e10:	dc800217 	ldw	r18,8(sp)
   28e14:	dc400117 	ldw	r17,4(sp)
   28e18:	dc000017 	ldw	r16,0(sp)
   28e1c:	dec00404 	addi	sp,sp,16
   28e20:	f800283a 	ret
   28e24:	8080030b 	ldhu	r2,12(r16)
   28e28:	04bfffc4 	movi	r18,-1
   28e2c:	1080200c 	andi	r2,r2,128
   28e30:	103fe626 	beq	r2,zero,28dcc <_fclose_r.part.0+0x48>
   28e34:	81400417 	ldw	r5,16(r16)
   28e38:	8809883a 	mov	r4,r17
   28e3c:	0024df00 	call	24df0 <_free_r>
   28e40:	003fe206 	br	28dcc <_fclose_r.part.0+0x48>

00028e44 <_fclose_r>:
   28e44:	28001926 	beq	r5,zero,28eac <_fclose_r+0x68>
   28e48:	defffd04 	addi	sp,sp,-12
   28e4c:	dc000115 	stw	r16,4(sp)
   28e50:	dfc00215 	stw	ra,8(sp)
   28e54:	2021883a 	mov	r16,r4
   28e58:	20000226 	beq	r4,zero,28e64 <_fclose_r+0x20>
   28e5c:	20800e17 	ldw	r2,56(r4)
   28e60:	10000c26 	beq	r2,zero,28e94 <_fclose_r+0x50>
   28e64:	2880030f 	ldh	r2,12(r5)
   28e68:	1000051e 	bne	r2,zero,28e80 <_fclose_r+0x3c>
   28e6c:	0005883a 	mov	r2,zero
   28e70:	dfc00217 	ldw	ra,8(sp)
   28e74:	dc000117 	ldw	r16,4(sp)
   28e78:	dec00304 	addi	sp,sp,12
   28e7c:	f800283a 	ret
   28e80:	8009883a 	mov	r4,r16
   28e84:	dfc00217 	ldw	ra,8(sp)
   28e88:	dc000117 	ldw	r16,4(sp)
   28e8c:	dec00304 	addi	sp,sp,12
   28e90:	0028d841 	jmpi	28d84 <_fclose_r.part.0>
   28e94:	d9400015 	stw	r5,0(sp)
   28e98:	0024c8c0 	call	24c8c <__sinit>
   28e9c:	d9400017 	ldw	r5,0(sp)
   28ea0:	2880030f 	ldh	r2,12(r5)
   28ea4:	103ff126 	beq	r2,zero,28e6c <_fclose_r+0x28>
   28ea8:	003ff506 	br	28e80 <_fclose_r+0x3c>
   28eac:	0005883a 	mov	r2,zero
   28eb0:	f800283a 	ret

00028eb4 <fclose>:
   28eb4:	20000826 	beq	r4,zero,28ed8 <fclose+0x24>
   28eb8:	008000f4 	movhi	r2,3
   28ebc:	200b883a 	mov	r5,r4
   28ec0:	110a5e17 	ldw	r4,10616(r2)
   28ec4:	20000226 	beq	r4,zero,28ed0 <fclose+0x1c>
   28ec8:	20800e17 	ldw	r2,56(r4)
   28ecc:	10000526 	beq	r2,zero,28ee4 <fclose+0x30>
   28ed0:	2880030f 	ldh	r2,12(r5)
   28ed4:	1000021e 	bne	r2,zero,28ee0 <fclose+0x2c>
   28ed8:	0005883a 	mov	r2,zero
   28edc:	f800283a 	ret
   28ee0:	0028d841 	jmpi	28d84 <_fclose_r.part.0>
   28ee4:	defffd04 	addi	sp,sp,-12
   28ee8:	d9400115 	stw	r5,4(sp)
   28eec:	d9000015 	stw	r4,0(sp)
   28ef0:	dfc00215 	stw	ra,8(sp)
   28ef4:	0024c8c0 	call	24c8c <__sinit>
   28ef8:	d9400117 	ldw	r5,4(sp)
   28efc:	d9000017 	ldw	r4,0(sp)
   28f00:	2880030f 	ldh	r2,12(r5)
   28f04:	10000326 	beq	r2,zero,28f14 <fclose+0x60>
   28f08:	dfc00217 	ldw	ra,8(sp)
   28f0c:	dec00304 	addi	sp,sp,12
   28f10:	0028d841 	jmpi	28d84 <_fclose_r.part.0>
   28f14:	0005883a 	mov	r2,zero
   28f18:	dfc00217 	ldw	ra,8(sp)
   28f1c:	dec00304 	addi	sp,sp,12
   28f20:	f800283a 	ret

00028f24 <_fiprintf_r>:
   28f24:	defffe04 	addi	sp,sp,-8
   28f28:	dfc00015 	stw	ra,0(sp)
   28f2c:	d9c00115 	stw	r7,4(sp)
   28f30:	d9c00104 	addi	r7,sp,4
   28f34:	002a0500 	call	2a050 <_vfiprintf_r>
   28f38:	dfc00017 	ldw	ra,0(sp)
   28f3c:	dec00204 	addi	sp,sp,8
   28f40:	f800283a 	ret

00028f44 <fiprintf>:
   28f44:	defffd04 	addi	sp,sp,-12
   28f48:	2005883a 	mov	r2,r4
   28f4c:	dfc00015 	stw	ra,0(sp)
   28f50:	d9800115 	stw	r6,4(sp)
   28f54:	d9c00215 	stw	r7,8(sp)
   28f58:	00c000f4 	movhi	r3,3
   28f5c:	190a5e17 	ldw	r4,10616(r3)
   28f60:	280d883a 	mov	r6,r5
   28f64:	d9c00104 	addi	r7,sp,4
   28f68:	100b883a 	mov	r5,r2
   28f6c:	002a0500 	call	2a050 <_vfiprintf_r>
   28f70:	dfc00017 	ldw	ra,0(sp)
   28f74:	dec00304 	addi	sp,sp,12
   28f78:	f800283a 	ret

00028f7c <__fputwc>:
   28f7c:	defff904 	addi	sp,sp,-28
   28f80:	dcc00415 	stw	r19,16(sp)
   28f84:	dc800315 	stw	r18,12(sp)
   28f88:	dc000115 	stw	r16,4(sp)
   28f8c:	dfc00615 	stw	ra,24(sp)
   28f90:	dd000515 	stw	r20,20(sp)
   28f94:	dc400215 	stw	r17,8(sp)
   28f98:	2025883a 	mov	r18,r4
   28f9c:	2827883a 	mov	r19,r5
   28fa0:	3021883a 	mov	r16,r6
   28fa4:	00297700 	call	29770 <__locale_mb_cur_max>
   28fa8:	10800058 	cmpnei	r2,r2,1
   28fac:	1000071e 	bne	r2,zero,28fcc <__fputwc+0x50>
   28fb0:	98bfffc4 	addi	r2,r19,-1
   28fb4:	10803fe8 	cmpgeui	r2,r2,255
   28fb8:	1000041e 	bne	r2,zero,28fcc <__fputwc+0x50>
   28fbc:	980b883a 	mov	r5,r19
   28fc0:	dcc000c5 	stb	r19,3(sp)
   28fc4:	05000044 	movi	r20,1
   28fc8:	00000a06 	br	28ff4 <__fputwc+0x78>
   28fcc:	81c01704 	addi	r7,r16,92
   28fd0:	980d883a 	mov	r6,r19
   28fd4:	d94000c4 	addi	r5,sp,3
   28fd8:	9009883a 	mov	r4,r18
   28fdc:	002a0540 	call	2a054 <_wcrtomb_r>
   28fe0:	1029883a 	mov	r20,r2
   28fe4:	10bfffd8 	cmpnei	r2,r2,-1
   28fe8:	10003926 	beq	r2,zero,290d0 <__fputwc+0x154>
   28fec:	a0001f26 	beq	r20,zero,2906c <__fputwc+0xf0>
   28ff0:	d94000c3 	ldbu	r5,3(sp)
   28ff4:	0023883a 	mov	r17,zero
   28ff8:	00000a06 	br	29024 <__fputwc+0xa8>
   28ffc:	80800017 	ldw	r2,0(r16)
   29000:	11400005 	stb	r5,0(r2)
   29004:	80c00017 	ldw	r3,0(r16)
   29008:	18c00044 	addi	r3,r3,1
   2900c:	80c00015 	stw	r3,0(r16)
   29010:	8c400044 	addi	r17,r17,1
   29014:	d88000c4 	addi	r2,sp,3
   29018:	1447883a 	add	r3,r2,r17
   2901c:	8d00132e 	bgeu	r17,r20,2906c <__fputwc+0xf0>
   29020:	19400003 	ldbu	r5,0(r3)
   29024:	80c00217 	ldw	r3,8(r16)
   29028:	18ffffc4 	addi	r3,r3,-1
   2902c:	80c00215 	stw	r3,8(r16)
   29030:	183ff20e 	bge	r3,zero,28ffc <__fputwc+0x80>
   29034:	80800617 	ldw	r2,24(r16)
   29038:	18801616 	blt	r3,r2,29094 <__fputwc+0x118>
   2903c:	80800017 	ldw	r2,0(r16)
   29040:	11400005 	stb	r5,0(r2)
   29044:	80800017 	ldw	r2,0(r16)
   29048:	10c00003 	ldbu	r3,0(r2)
   2904c:	10800044 	addi	r2,r2,1
   29050:	18c002a0 	cmpeqi	r3,r3,10
   29054:	1800171e 	bne	r3,zero,290b4 <__fputwc+0x138>
   29058:	80800015 	stw	r2,0(r16)
   2905c:	8c400044 	addi	r17,r17,1
   29060:	d88000c4 	addi	r2,sp,3
   29064:	1447883a 	add	r3,r2,r17
   29068:	8d3fed36 	bltu	r17,r20,29020 <__fputwc+0xa4>
   2906c:	9829883a 	mov	r20,r19
   29070:	a005883a 	mov	r2,r20
   29074:	dfc00617 	ldw	ra,24(sp)
   29078:	dd000517 	ldw	r20,20(sp)
   2907c:	dcc00417 	ldw	r19,16(sp)
   29080:	dc800317 	ldw	r18,12(sp)
   29084:	dc400217 	ldw	r17,8(sp)
   29088:	dc000117 	ldw	r16,4(sp)
   2908c:	dec00704 	addi	sp,sp,28
   29090:	f800283a 	ret
   29094:	29403fcc 	andi	r5,r5,255
   29098:	800d883a 	mov	r6,r16
   2909c:	9009883a 	mov	r4,r18
   290a0:	0028a2c0 	call	28a2c <__swbuf_r>
   290a4:	10bfffe0 	cmpeqi	r2,r2,-1
   290a8:	103fd926 	beq	r2,zero,29010 <__fputwc+0x94>
   290ac:	053fffc4 	movi	r20,-1
   290b0:	003fef06 	br	29070 <__fputwc+0xf4>
   290b4:	800d883a 	mov	r6,r16
   290b8:	01400284 	movi	r5,10
   290bc:	9009883a 	mov	r4,r18
   290c0:	0028a2c0 	call	28a2c <__swbuf_r>
   290c4:	10bfffe0 	cmpeqi	r2,r2,-1
   290c8:	103fd126 	beq	r2,zero,29010 <__fputwc+0x94>
   290cc:	003ff706 	br	290ac <__fputwc+0x130>
   290d0:	8080030b 	ldhu	r2,12(r16)
   290d4:	10801014 	ori	r2,r2,64
   290d8:	8080030d 	sth	r2,12(r16)
   290dc:	003fe406 	br	29070 <__fputwc+0xf4>

000290e0 <_fputwc_r>:
   290e0:	3080030b 	ldhu	r2,12(r6)
   290e4:	10c8000c 	andi	r3,r2,8192
   290e8:	1800051e 	bne	r3,zero,29100 <_fputwc_r+0x20>
   290ec:	30c01917 	ldw	r3,100(r6)
   290f0:	10880014 	ori	r2,r2,8192
   290f4:	3080030d 	sth	r2,12(r6)
   290f8:	18880014 	ori	r2,r3,8192
   290fc:	30801915 	stw	r2,100(r6)
   29100:	0028f7c1 	jmpi	28f7c <__fputwc>

00029104 <fputwc>:
   29104:	defffc04 	addi	sp,sp,-16
   29108:	008000f4 	movhi	r2,3
   2910c:	dc000215 	stw	r16,8(sp)
   29110:	140a5e17 	ldw	r16,10616(r2)
   29114:	dfc00315 	stw	ra,12(sp)
   29118:	280d883a 	mov	r6,r5
   2911c:	200b883a 	mov	r5,r4
   29120:	80000226 	beq	r16,zero,2912c <fputwc+0x28>
   29124:	80800e17 	ldw	r2,56(r16)
   29128:	10000d26 	beq	r2,zero,29160 <fputwc+0x5c>
   2912c:	3080030b 	ldhu	r2,12(r6)
   29130:	10c8000c 	andi	r3,r2,8192
   29134:	1800051e 	bne	r3,zero,2914c <fputwc+0x48>
   29138:	30c01917 	ldw	r3,100(r6)
   2913c:	10880014 	ori	r2,r2,8192
   29140:	3080030d 	sth	r2,12(r6)
   29144:	18880014 	ori	r2,r3,8192
   29148:	30801915 	stw	r2,100(r6)
   2914c:	8009883a 	mov	r4,r16
   29150:	dfc00317 	ldw	ra,12(sp)
   29154:	dc000217 	ldw	r16,8(sp)
   29158:	dec00404 	addi	sp,sp,16
   2915c:	0028f7c1 	jmpi	28f7c <__fputwc>
   29160:	d9000015 	stw	r4,0(sp)
   29164:	8009883a 	mov	r4,r16
   29168:	d9800115 	stw	r6,4(sp)
   2916c:	0024c8c0 	call	24c8c <__sinit>
   29170:	d9800117 	ldw	r6,4(sp)
   29174:	d9400017 	ldw	r5,0(sp)
   29178:	003fec06 	br	2912c <fputwc+0x28>

0002917c <_fstat_r>:
   2917c:	2807883a 	mov	r3,r5
   29180:	defffe04 	addi	sp,sp,-8
   29184:	dc000015 	stw	r16,0(sp)
   29188:	008000f4 	movhi	r2,3
   2918c:	300b883a 	mov	r5,r6
   29190:	2021883a 	mov	r16,r4
   29194:	1809883a 	mov	r4,r3
   29198:	dfc00115 	stw	ra,4(sp)
   2919c:	10117f15 	stw	zero,17916(r2)
   291a0:	002dda40 	call	2dda4 <fstat>
   291a4:	10ffffd8 	cmpnei	r3,r2,-1
   291a8:	18000426 	beq	r3,zero,291bc <_fstat_r+0x40>
   291ac:	dfc00117 	ldw	ra,4(sp)
   291b0:	dc000017 	ldw	r16,0(sp)
   291b4:	dec00204 	addi	sp,sp,8
   291b8:	f800283a 	ret
   291bc:	00c000f4 	movhi	r3,3
   291c0:	18d17f17 	ldw	r3,17916(r3)
   291c4:	183ff926 	beq	r3,zero,291ac <_fstat_r+0x30>
   291c8:	80c00015 	stw	r3,0(r16)
   291cc:	dfc00117 	ldw	ra,4(sp)
   291d0:	dc000017 	ldw	r16,0(sp)
   291d4:	dec00204 	addi	sp,sp,8
   291d8:	f800283a 	ret

000291dc <__sfvwrite_r>:
   291dc:	30800217 	ldw	r2,8(r6)
   291e0:	1000a326 	beq	r2,zero,29470 <__sfvwrite_r+0x294>
   291e4:	29c0030b 	ldhu	r7,12(r5)
   291e8:	defff404 	addi	sp,sp,-48
   291ec:	ddc00915 	stw	r23,36(sp)
   291f0:	dd400715 	stw	r21,28(sp)
   291f4:	dc000215 	stw	r16,8(sp)
   291f8:	dfc00b15 	stw	ra,44(sp)
   291fc:	df000a15 	stw	fp,40(sp)
   29200:	dd800815 	stw	r22,32(sp)
   29204:	dd000615 	stw	r20,24(sp)
   29208:	dcc00515 	stw	r19,20(sp)
   2920c:	dc800415 	stw	r18,16(sp)
   29210:	dc400315 	stw	r17,12(sp)
   29214:	3880020c 	andi	r2,r7,8
   29218:	302f883a 	mov	r23,r6
   2921c:	202b883a 	mov	r21,r4
   29220:	2821883a 	mov	r16,r5
   29224:	10002226 	beq	r2,zero,292b0 <__sfvwrite_r+0xd4>
   29228:	28800417 	ldw	r2,16(r5)
   2922c:	10002026 	beq	r2,zero,292b0 <__sfvwrite_r+0xd4>
   29230:	3880008c 	andi	r2,r7,2
   29234:	bc400017 	ldw	r17,0(r23)
   29238:	10002526 	beq	r2,zero,292d0 <__sfvwrite_r+0xf4>
   2923c:	80800917 	ldw	r2,36(r16)
   29240:	81400717 	ldw	r5,28(r16)
   29244:	05200034 	movhi	r20,32768
   29248:	0027883a 	mov	r19,zero
   2924c:	0025883a 	mov	r18,zero
   29250:	a53f0004 	addi	r20,r20,-1024
   29254:	980d883a 	mov	r6,r19
   29258:	a809883a 	mov	r4,r21
   2925c:	90001026 	beq	r18,zero,292a0 <__sfvwrite_r+0xc4>
   29260:	900f883a 	mov	r7,r18
   29264:	a480012e 	bgeu	r20,r18,2926c <__sfvwrite_r+0x90>
   29268:	a00f883a 	mov	r7,r20
   2926c:	103ee83a 	callr	r2
   29270:	00807a0e 	bge	zero,r2,2945c <__sfvwrite_r+0x280>
   29274:	b9000217 	ldw	r4,8(r23)
   29278:	98a7883a 	add	r19,r19,r2
   2927c:	90a5c83a 	sub	r18,r18,r2
   29280:	2085c83a 	sub	r2,r4,r2
   29284:	b8800215 	stw	r2,8(r23)
   29288:	10006326 	beq	r2,zero,29418 <__sfvwrite_r+0x23c>
   2928c:	80800917 	ldw	r2,36(r16)
   29290:	81400717 	ldw	r5,28(r16)
   29294:	980d883a 	mov	r6,r19
   29298:	a809883a 	mov	r4,r21
   2929c:	903ff01e 	bne	r18,zero,29260 <__sfvwrite_r+0x84>
   292a0:	8cc00017 	ldw	r19,0(r17)
   292a4:	8c800117 	ldw	r18,4(r17)
   292a8:	8c400204 	addi	r17,r17,8
   292ac:	003fe906 	br	29254 <__sfvwrite_r+0x78>
   292b0:	800b883a 	mov	r5,r16
   292b4:	a809883a 	mov	r4,r21
   292b8:	0022b500 	call	22b50 <__swsetup_r>
   292bc:	1000f71e 	bne	r2,zero,2969c <__sfvwrite_r+0x4c0>
   292c0:	81c0030b 	ldhu	r7,12(r16)
   292c4:	bc400017 	ldw	r17,0(r23)
   292c8:	3880008c 	andi	r2,r7,2
   292cc:	103fdb1e 	bne	r2,zero,2923c <__sfvwrite_r+0x60>
   292d0:	3880004c 	andi	r2,r7,1
   292d4:	84800217 	ldw	r18,8(r16)
   292d8:	82000017 	ldw	r8,0(r16)
   292dc:	1000661e 	bne	r2,zero,29478 <__sfvwrite_r+0x29c>
   292e0:	00a00034 	movhi	r2,32768
   292e4:	10bfff84 	addi	r2,r2,-2
   292e8:	00e00034 	movhi	r3,32768
   292ec:	d8800015 	stw	r2,0(sp)
   292f0:	18bfffc4 	addi	r2,r3,-1
   292f4:	0039883a 	mov	fp,zero
   292f8:	0027883a 	mov	r19,zero
   292fc:	d8800115 	stw	r2,4(sp)
   29300:	98004126 	beq	r19,zero,29408 <__sfvwrite_r+0x22c>
   29304:	3880800c 	andi	r2,r7,512
   29308:	10009726 	beq	r2,zero,29568 <__sfvwrite_r+0x38c>
   2930c:	902d883a 	mov	r22,r18
   29310:	9c80be36 	bltu	r19,r18,2960c <__sfvwrite_r+0x430>
   29314:	3881200c 	andi	r2,r7,1152
   29318:	10002626 	beq	r2,zero,293b4 <__sfvwrite_r+0x1d8>
   2931c:	81800517 	ldw	r6,20(r16)
   29320:	81400417 	ldw	r5,16(r16)
   29324:	98800044 	addi	r2,r19,1
   29328:	3189883a 	add	r4,r6,r6
   2932c:	2189883a 	add	r4,r4,r6
   29330:	2028d7fa 	srli	r20,r4,31
   29334:	4165c83a 	sub	r18,r8,r5
   29338:	1485883a 	add	r2,r2,r18
   2933c:	a109883a 	add	r4,r20,r4
   29340:	2029d07a 	srai	r20,r4,1
   29344:	a00d883a 	mov	r6,r20
   29348:	a080022e 	bgeu	r20,r2,29354 <__sfvwrite_r+0x178>
   2934c:	1029883a 	mov	r20,r2
   29350:	100d883a 	mov	r6,r2
   29354:	39c1000c 	andi	r7,r7,1024
   29358:	3800c026 	beq	r7,zero,2965c <__sfvwrite_r+0x480>
   2935c:	a809883a 	mov	r4,r21
   29360:	300b883a 	mov	r5,r6
   29364:	00254940 	call	25494 <_malloc_r>
   29368:	1009883a 	mov	r4,r2
   2936c:	1000c726 	beq	r2,zero,2968c <__sfvwrite_r+0x4b0>
   29370:	81400417 	ldw	r5,16(r16)
   29374:	900d883a 	mov	r6,r18
   29378:	0025d440 	call	25d44 <memcpy>
   2937c:	1009883a 	mov	r4,r2
   29380:	8080030b 	ldhu	r2,12(r16)
   29384:	00fedfc4 	movi	r3,-1153
   29388:	10c4703a 	and	r2,r2,r3
   2938c:	10802014 	ori	r2,r2,128
   29390:	8080030d 	sth	r2,12(r16)
   29394:	2491883a 	add	r8,r4,r18
   29398:	a485c83a 	sub	r2,r20,r18
   2939c:	81000415 	stw	r4,16(r16)
   293a0:	82000015 	stw	r8,0(r16)
   293a4:	85000515 	stw	r20,20(r16)
   293a8:	9825883a 	mov	r18,r19
   293ac:	80800215 	stw	r2,8(r16)
   293b0:	982d883a 	mov	r22,r19
   293b4:	4009883a 	mov	r4,r8
   293b8:	b00d883a 	mov	r6,r22
   293bc:	e00b883a 	mov	r5,fp
   293c0:	00298a40 	call	298a4 <memmove>
   293c4:	81000217 	ldw	r4,8(r16)
   293c8:	80800017 	ldw	r2,0(r16)
   293cc:	9829883a 	mov	r20,r19
   293d0:	24a5c83a 	sub	r18,r4,r18
   293d4:	1585883a 	add	r2,r2,r22
   293d8:	84800215 	stw	r18,8(r16)
   293dc:	80800015 	stw	r2,0(r16)
   293e0:	0027883a 	mov	r19,zero
   293e4:	b8800217 	ldw	r2,8(r23)
   293e8:	e539883a 	add	fp,fp,r20
   293ec:	1529c83a 	sub	r20,r2,r20
   293f0:	bd000215 	stw	r20,8(r23)
   293f4:	a0000826 	beq	r20,zero,29418 <__sfvwrite_r+0x23c>
   293f8:	81c0030b 	ldhu	r7,12(r16)
   293fc:	84800217 	ldw	r18,8(r16)
   29400:	82000017 	ldw	r8,0(r16)
   29404:	983fbf1e 	bne	r19,zero,29304 <__sfvwrite_r+0x128>
   29408:	8f000017 	ldw	fp,0(r17)
   2940c:	8cc00117 	ldw	r19,4(r17)
   29410:	8c400204 	addi	r17,r17,8
   29414:	003fba06 	br	29300 <__sfvwrite_r+0x124>
   29418:	0005883a 	mov	r2,zero
   2941c:	dfc00b17 	ldw	ra,44(sp)
   29420:	df000a17 	ldw	fp,40(sp)
   29424:	ddc00917 	ldw	r23,36(sp)
   29428:	dd800817 	ldw	r22,32(sp)
   2942c:	dd400717 	ldw	r21,28(sp)
   29430:	dd000617 	ldw	r20,24(sp)
   29434:	dcc00517 	ldw	r19,20(sp)
   29438:	dc800417 	ldw	r18,16(sp)
   2943c:	dc400317 	ldw	r17,12(sp)
   29440:	dc000217 	ldw	r16,8(sp)
   29444:	dec00c04 	addi	sp,sp,48
   29448:	f800283a 	ret
   2944c:	800b883a 	mov	r5,r16
   29450:	a809883a 	mov	r4,r21
   29454:	00248440 	call	24844 <_fflush_r>
   29458:	10002026 	beq	r2,zero,294dc <__sfvwrite_r+0x300>
   2945c:	8080030b 	ldhu	r2,12(r16)
   29460:	10801014 	ori	r2,r2,64
   29464:	8080030d 	sth	r2,12(r16)
   29468:	00bfffc4 	movi	r2,-1
   2946c:	003feb06 	br	2941c <__sfvwrite_r+0x240>
   29470:	0005883a 	mov	r2,zero
   29474:	f800283a 	ret
   29478:	002d883a 	mov	r22,zero
   2947c:	0027883a 	mov	r19,zero
   29480:	0005883a 	mov	r2,zero
   29484:	0039883a 	mov	fp,zero
   29488:	b0001d26 	beq	r22,zero,29500 <__sfvwrite_r+0x324>
   2948c:	10002026 	beq	r2,zero,29510 <__sfvwrite_r+0x334>
   29490:	9829883a 	mov	r20,r19
   29494:	b500012e 	bgeu	r22,r20,2949c <__sfvwrite_r+0x2c0>
   29498:	b029883a 	mov	r20,r22
   2949c:	80800417 	ldw	r2,16(r16)
   294a0:	81c00517 	ldw	r7,20(r16)
   294a4:	1200022e 	bgeu	r2,r8,294b0 <__sfvwrite_r+0x2d4>
   294a8:	3ca5883a 	add	r18,r7,r18
   294ac:	95002216 	blt	r18,r20,29538 <__sfvwrite_r+0x35c>
   294b0:	a1c05916 	blt	r20,r7,29618 <__sfvwrite_r+0x43c>
   294b4:	80800917 	ldw	r2,36(r16)
   294b8:	81400717 	ldw	r5,28(r16)
   294bc:	e00d883a 	mov	r6,fp
   294c0:	a809883a 	mov	r4,r21
   294c4:	103ee83a 	callr	r2
   294c8:	1025883a 	mov	r18,r2
   294cc:	00bfe30e 	bge	zero,r2,2945c <__sfvwrite_r+0x280>
   294d0:	9ca7c83a 	sub	r19,r19,r18
   294d4:	983fdd26 	beq	r19,zero,2944c <__sfvwrite_r+0x270>
   294d8:	00800044 	movi	r2,1
   294dc:	b9800217 	ldw	r6,8(r23)
   294e0:	e4b9883a 	add	fp,fp,r18
   294e4:	b4adc83a 	sub	r22,r22,r18
   294e8:	34a5c83a 	sub	r18,r6,r18
   294ec:	bc800215 	stw	r18,8(r23)
   294f0:	903fc926 	beq	r18,zero,29418 <__sfvwrite_r+0x23c>
   294f4:	84800217 	ldw	r18,8(r16)
   294f8:	82000017 	ldw	r8,0(r16)
   294fc:	b03fe31e 	bne	r22,zero,2948c <__sfvwrite_r+0x2b0>
   29500:	8d800117 	ldw	r22,4(r17)
   29504:	8f000017 	ldw	fp,0(r17)
   29508:	8c400204 	addi	r17,r17,8
   2950c:	b03ffc26 	beq	r22,zero,29500 <__sfvwrite_r+0x324>
   29510:	b00d883a 	mov	r6,r22
   29514:	01400284 	movi	r5,10
   29518:	e009883a 	mov	r4,fp
   2951c:	da000015 	stw	r8,0(sp)
   29520:	0025c740 	call	25c74 <memchr>
   29524:	da000017 	ldw	r8,0(sp)
   29528:	10004926 	beq	r2,zero,29650 <__sfvwrite_r+0x474>
   2952c:	10800044 	addi	r2,r2,1
   29530:	1727c83a 	sub	r19,r2,fp
   29534:	003fd606 	br	29490 <__sfvwrite_r+0x2b4>
   29538:	e00b883a 	mov	r5,fp
   2953c:	4009883a 	mov	r4,r8
   29540:	900d883a 	mov	r6,r18
   29544:	00298a40 	call	298a4 <memmove>
   29548:	80800017 	ldw	r2,0(r16)
   2954c:	800b883a 	mov	r5,r16
   29550:	a809883a 	mov	r4,r21
   29554:	1485883a 	add	r2,r2,r18
   29558:	80800015 	stw	r2,0(r16)
   2955c:	00248440 	call	24844 <_fflush_r>
   29560:	103fdb26 	beq	r2,zero,294d0 <__sfvwrite_r+0x2f4>
   29564:	003fbd06 	br	2945c <__sfvwrite_r+0x280>
   29568:	80800417 	ldw	r2,16(r16)
   2956c:	12001436 	bltu	r2,r8,295c0 <__sfvwrite_r+0x3e4>
   29570:	85000517 	ldw	r20,20(r16)
   29574:	9d001236 	bltu	r19,r20,295c0 <__sfvwrite_r+0x3e4>
   29578:	d8800017 	ldw	r2,0(sp)
   2957c:	14c0322e 	bgeu	r2,r19,29648 <__sfvwrite_r+0x46c>
   29580:	d9000117 	ldw	r4,4(sp)
   29584:	a00b883a 	mov	r5,r20
   29588:	002b2d00 	call	2b2d0 <__divsi3>
   2958c:	a00b883a 	mov	r5,r20
   29590:	1009883a 	mov	r4,r2
   29594:	002b4840 	call	2b484 <__mulsi3>
   29598:	82000917 	ldw	r8,36(r16)
   2959c:	81400717 	ldw	r5,28(r16)
   295a0:	100f883a 	mov	r7,r2
   295a4:	e00d883a 	mov	r6,fp
   295a8:	a809883a 	mov	r4,r21
   295ac:	403ee83a 	callr	r8
   295b0:	1029883a 	mov	r20,r2
   295b4:	00bfa90e 	bge	zero,r2,2945c <__sfvwrite_r+0x280>
   295b8:	9d27c83a 	sub	r19,r19,r20
   295bc:	003f8906 	br	293e4 <__sfvwrite_r+0x208>
   295c0:	9029883a 	mov	r20,r18
   295c4:	9c80012e 	bgeu	r19,r18,295cc <__sfvwrite_r+0x3f0>
   295c8:	9829883a 	mov	r20,r19
   295cc:	4009883a 	mov	r4,r8
   295d0:	a00d883a 	mov	r6,r20
   295d4:	e00b883a 	mov	r5,fp
   295d8:	00298a40 	call	298a4 <memmove>
   295dc:	80800217 	ldw	r2,8(r16)
   295e0:	81000017 	ldw	r4,0(r16)
   295e4:	1505c83a 	sub	r2,r2,r20
   295e8:	2509883a 	add	r4,r4,r20
   295ec:	80800215 	stw	r2,8(r16)
   295f0:	81000015 	stw	r4,0(r16)
   295f4:	103ff01e 	bne	r2,zero,295b8 <__sfvwrite_r+0x3dc>
   295f8:	800b883a 	mov	r5,r16
   295fc:	a809883a 	mov	r4,r21
   29600:	00248440 	call	24844 <_fflush_r>
   29604:	103fec26 	beq	r2,zero,295b8 <__sfvwrite_r+0x3dc>
   29608:	003f9406 	br	2945c <__sfvwrite_r+0x280>
   2960c:	9825883a 	mov	r18,r19
   29610:	982d883a 	mov	r22,r19
   29614:	003f6706 	br	293b4 <__sfvwrite_r+0x1d8>
   29618:	4009883a 	mov	r4,r8
   2961c:	a00d883a 	mov	r6,r20
   29620:	e00b883a 	mov	r5,fp
   29624:	00298a40 	call	298a4 <memmove>
   29628:	81000217 	ldw	r4,8(r16)
   2962c:	80800017 	ldw	r2,0(r16)
   29630:	a025883a 	mov	r18,r20
   29634:	2509c83a 	sub	r4,r4,r20
   29638:	1505883a 	add	r2,r2,r20
   2963c:	81000215 	stw	r4,8(r16)
   29640:	80800015 	stw	r2,0(r16)
   29644:	003fa206 	br	294d0 <__sfvwrite_r+0x2f4>
   29648:	9809883a 	mov	r4,r19
   2964c:	003fcd06 	br	29584 <__sfvwrite_r+0x3a8>
   29650:	b5000044 	addi	r20,r22,1
   29654:	a027883a 	mov	r19,r20
   29658:	003f8e06 	br	29494 <__sfvwrite_r+0x2b8>
   2965c:	a809883a 	mov	r4,r21
   29660:	0029a340 	call	29a34 <_realloc_r>
   29664:	1009883a 	mov	r4,r2
   29668:	103f4a1e 	bne	r2,zero,29394 <__sfvwrite_r+0x1b8>
   2966c:	81400417 	ldw	r5,16(r16)
   29670:	a809883a 	mov	r4,r21
   29674:	0024df00 	call	24df0 <_free_r>
   29678:	8080030b 	ldhu	r2,12(r16)
   2967c:	00c00304 	movi	r3,12
   29680:	a8c00015 	stw	r3,0(r21)
   29684:	10bfdfcc 	andi	r2,r2,65407
   29688:	003f7506 	br	29460 <__sfvwrite_r+0x284>
   2968c:	00c00304 	movi	r3,12
   29690:	8080030b 	ldhu	r2,12(r16)
   29694:	a8c00015 	stw	r3,0(r21)
   29698:	003f7106 	br	29460 <__sfvwrite_r+0x284>
   2969c:	00bfffc4 	movi	r2,-1
   296a0:	003f5e06 	br	2941c <__sfvwrite_r+0x240>

000296a4 <_isatty_r>:
   296a4:	defffe04 	addi	sp,sp,-8
   296a8:	dc000015 	stw	r16,0(sp)
   296ac:	008000f4 	movhi	r2,3
   296b0:	2021883a 	mov	r16,r4
   296b4:	2809883a 	mov	r4,r5
   296b8:	dfc00115 	stw	ra,4(sp)
   296bc:	10117f15 	stw	zero,17916(r2)
   296c0:	002e03c0 	call	2e03c <isatty>
   296c4:	10ffffd8 	cmpnei	r3,r2,-1
   296c8:	18000426 	beq	r3,zero,296dc <_isatty_r+0x38>
   296cc:	dfc00117 	ldw	ra,4(sp)
   296d0:	dc000017 	ldw	r16,0(sp)
   296d4:	dec00204 	addi	sp,sp,8
   296d8:	f800283a 	ret
   296dc:	00c000f4 	movhi	r3,3
   296e0:	18d17f17 	ldw	r3,17916(r3)
   296e4:	183ff926 	beq	r3,zero,296cc <_isatty_r+0x28>
   296e8:	80c00015 	stw	r3,0(r16)
   296ec:	dfc00117 	ldw	ra,4(sp)
   296f0:	dc000017 	ldw	r16,0(sp)
   296f4:	dec00204 	addi	sp,sp,8
   296f8:	f800283a 	ret

000296fc <_setlocale_r>:
   296fc:	30001626 	beq	r6,zero,29758 <_setlocale_r+0x5c>
   29700:	014000f4 	movhi	r5,3
   29704:	defffe04 	addi	sp,sp,-8
   29708:	29426804 	addi	r5,r5,2464
   2970c:	3009883a 	mov	r4,r6
   29710:	dc000015 	stw	r16,0(sp)
   29714:	dfc00115 	stw	ra,4(sp)
   29718:	3021883a 	mov	r16,r6
   2971c:	0029f980 	call	29f98 <strcmp>
   29720:	1000061e 	bne	r2,zero,2973c <_setlocale_r+0x40>
   29724:	008000f4 	movhi	r2,3
   29728:	10826704 	addi	r2,r2,2460
   2972c:	dfc00117 	ldw	ra,4(sp)
   29730:	dc000017 	ldw	r16,0(sp)
   29734:	dec00204 	addi	sp,sp,8
   29738:	f800283a 	ret
   2973c:	80800003 	ldbu	r2,0(r16)
   29740:	10bfef44 	addi	r2,r2,-67
   29744:	10000726 	beq	r2,zero,29764 <_setlocale_r+0x68>
   29748:	80800003 	ldbu	r2,0(r16)
   2974c:	103ff526 	beq	r2,zero,29724 <_setlocale_r+0x28>
   29750:	0005883a 	mov	r2,zero
   29754:	003ff506 	br	2972c <_setlocale_r+0x30>
   29758:	008000f4 	movhi	r2,3
   2975c:	10826704 	addi	r2,r2,2460
   29760:	f800283a 	ret
   29764:	80800043 	ldbu	r2,1(r16)
   29768:	103fee26 	beq	r2,zero,29724 <_setlocale_r+0x28>
   2976c:	003ff606 	br	29748 <_setlocale_r+0x4c>

00029770 <__locale_mb_cur_max>:
   29770:	008000f4 	movhi	r2,3
   29774:	1085bb07 	ldb	r2,5868(r2)
   29778:	f800283a 	ret

0002977c <setlocale>:
   2977c:	28001626 	beq	r5,zero,297d8 <setlocale+0x5c>
   29780:	defffe04 	addi	sp,sp,-8
   29784:	dc000015 	stw	r16,0(sp)
   29788:	2821883a 	mov	r16,r5
   2978c:	014000f4 	movhi	r5,3
   29790:	29426804 	addi	r5,r5,2464
   29794:	8009883a 	mov	r4,r16
   29798:	dfc00115 	stw	ra,4(sp)
   2979c:	0029f980 	call	29f98 <strcmp>
   297a0:	1000061e 	bne	r2,zero,297bc <setlocale+0x40>
   297a4:	008000f4 	movhi	r2,3
   297a8:	10826704 	addi	r2,r2,2460
   297ac:	dfc00117 	ldw	ra,4(sp)
   297b0:	dc000017 	ldw	r16,0(sp)
   297b4:	dec00204 	addi	sp,sp,8
   297b8:	f800283a 	ret
   297bc:	80800003 	ldbu	r2,0(r16)
   297c0:	10bfef44 	addi	r2,r2,-67
   297c4:	10000726 	beq	r2,zero,297e4 <setlocale+0x68>
   297c8:	80800003 	ldbu	r2,0(r16)
   297cc:	103ff526 	beq	r2,zero,297a4 <setlocale+0x28>
   297d0:	0005883a 	mov	r2,zero
   297d4:	003ff506 	br	297ac <setlocale+0x30>
   297d8:	008000f4 	movhi	r2,3
   297dc:	10826704 	addi	r2,r2,2460
   297e0:	f800283a 	ret
   297e4:	80800043 	ldbu	r2,1(r16)
   297e8:	103fee26 	beq	r2,zero,297a4 <setlocale+0x28>
   297ec:	003ff606 	br	297c8 <setlocale+0x4c>

000297f0 <_lseek_r>:
   297f0:	2807883a 	mov	r3,r5
   297f4:	defffe04 	addi	sp,sp,-8
   297f8:	dc000015 	stw	r16,0(sp)
   297fc:	300b883a 	mov	r5,r6
   29800:	008000f4 	movhi	r2,3
   29804:	380d883a 	mov	r6,r7
   29808:	2021883a 	mov	r16,r4
   2980c:	1809883a 	mov	r4,r3
   29810:	dfc00115 	stw	ra,4(sp)
   29814:	10117f15 	stw	zero,17916(r2)
   29818:	002e37c0 	call	2e37c <lseek>
   2981c:	10ffffd8 	cmpnei	r3,r2,-1
   29820:	18000426 	beq	r3,zero,29834 <_lseek_r+0x44>
   29824:	dfc00117 	ldw	ra,4(sp)
   29828:	dc000017 	ldw	r16,0(sp)
   2982c:	dec00204 	addi	sp,sp,8
   29830:	f800283a 	ret
   29834:	00c000f4 	movhi	r3,3
   29838:	18d17f17 	ldw	r3,17916(r3)
   2983c:	183ff926 	beq	r3,zero,29824 <_lseek_r+0x34>
   29840:	80c00015 	stw	r3,0(r16)
   29844:	dfc00117 	ldw	ra,4(sp)
   29848:	dc000017 	ldw	r16,0(sp)
   2984c:	dec00204 	addi	sp,sp,8
   29850:	f800283a 	ret

00029854 <_mbtowc_r>:
   29854:	008000f4 	movhi	r2,3
   29858:	1085aa17 	ldw	r2,5800(r2)
   2985c:	1000683a 	jmp	r2

00029860 <__ascii_mbtowc>:
   29860:	deffff04 	addi	sp,sp,-4
   29864:	28000826 	beq	r5,zero,29888 <__ascii_mbtowc+0x28>
   29868:	30000926 	beq	r6,zero,29890 <__ascii_mbtowc+0x30>
   2986c:	38000b26 	beq	r7,zero,2989c <__ascii_mbtowc+0x3c>
   29870:	30800003 	ldbu	r2,0(r6)
   29874:	28800015 	stw	r2,0(r5)
   29878:	30800003 	ldbu	r2,0(r6)
   2987c:	1004c03a 	cmpne	r2,r2,zero
   29880:	dec00104 	addi	sp,sp,4
   29884:	f800283a 	ret
   29888:	d80b883a 	mov	r5,sp
   2988c:	303ff71e 	bne	r6,zero,2986c <__ascii_mbtowc+0xc>
   29890:	0005883a 	mov	r2,zero
   29894:	dec00104 	addi	sp,sp,4
   29898:	f800283a 	ret
   2989c:	00bfff84 	movi	r2,-2
   298a0:	003ff706 	br	29880 <__ascii_mbtowc+0x20>

000298a4 <memmove>:
   298a4:	2005883a 	mov	r2,r4
   298a8:	29000a2e 	bgeu	r5,r4,298d4 <memmove+0x30>
   298ac:	2989883a 	add	r4,r5,r6
   298b0:	1100082e 	bgeu	r2,r4,298d4 <memmove+0x30>
   298b4:	1187883a 	add	r3,r2,r6
   298b8:	30003e26 	beq	r6,zero,299b4 <memmove+0x110>
   298bc:	217fffc3 	ldbu	r5,-1(r4)
   298c0:	18ffffc4 	addi	r3,r3,-1
   298c4:	213fffc4 	addi	r4,r4,-1
   298c8:	19400005 	stb	r5,0(r3)
   298cc:	10fffb1e 	bne	r2,r3,298bc <memmove+0x18>
   298d0:	f800283a 	ret
   298d4:	30c00430 	cmpltui	r3,r6,16
   298d8:	18000b26 	beq	r3,zero,29908 <memmove+0x64>
   298dc:	1007883a 	mov	r3,r2
   298e0:	31ffffc4 	addi	r7,r6,-1
   298e4:	30003726 	beq	r6,zero,299c4 <memmove+0x120>
   298e8:	39c00044 	addi	r7,r7,1
   298ec:	29cf883a 	add	r7,r5,r7
   298f0:	29800003 	ldbu	r6,0(r5)
   298f4:	29400044 	addi	r5,r5,1
   298f8:	18c00044 	addi	r3,r3,1
   298fc:	19bfffc5 	stb	r6,-1(r3)
   29900:	29fffb1e 	bne	r5,r7,298f0 <memmove+0x4c>
   29904:	f800283a 	ret
   29908:	2886b03a 	or	r3,r5,r2
   2990c:	18c000cc 	andi	r3,r3,3
   29910:	1800291e 	bne	r3,zero,299b8 <memmove+0x114>
   29914:	327ffc04 	addi	r9,r6,-16
   29918:	4812d13a 	srli	r9,r9,4
   2991c:	280f883a 	mov	r7,r5
   29920:	1007883a 	mov	r3,r2
   29924:	4a400044 	addi	r9,r9,1
   29928:	4812913a 	slli	r9,r9,4
   2992c:	1251883a 	add	r8,r2,r9
   29930:	39000017 	ldw	r4,0(r7)
   29934:	39c00404 	addi	r7,r7,16
   29938:	18c00404 	addi	r3,r3,16
   2993c:	193ffc15 	stw	r4,-16(r3)
   29940:	393ffd17 	ldw	r4,-12(r7)
   29944:	193ffd15 	stw	r4,-12(r3)
   29948:	393ffe17 	ldw	r4,-8(r7)
   2994c:	193ffe15 	stw	r4,-8(r3)
   29950:	393fff17 	ldw	r4,-4(r7)
   29954:	193fff15 	stw	r4,-4(r3)
   29958:	40fff51e 	bne	r8,r3,29930 <memmove+0x8c>
   2995c:	3100030c 	andi	r4,r6,12
   29960:	2a4b883a 	add	r5,r5,r9
   29964:	320003cc 	andi	r8,r6,15
   29968:	20001726 	beq	r4,zero,299c8 <memmove+0x124>
   2996c:	2813883a 	mov	r9,r5
   29970:	180f883a 	mov	r7,r3
   29974:	4a800017 	ldw	r10,0(r9)
   29978:	39c00104 	addi	r7,r7,4
   2997c:	41c9c83a 	sub	r4,r8,r7
   29980:	1909883a 	add	r4,r3,r4
   29984:	21000128 	cmpgeui	r4,r4,4
   29988:	3abfff15 	stw	r10,-4(r7)
   2998c:	4a400104 	addi	r9,r9,4
   29990:	203ff81e 	bne	r4,zero,29974 <memmove+0xd0>
   29994:	413fff04 	addi	r4,r8,-4
   29998:	2008d0ba 	srli	r4,r4,2
   2999c:	318000cc 	andi	r6,r6,3
   299a0:	21000044 	addi	r4,r4,1
   299a4:	200890ba 	slli	r4,r4,2
   299a8:	1907883a 	add	r3,r3,r4
   299ac:	290b883a 	add	r5,r5,r4
   299b0:	003fcb06 	br	298e0 <memmove+0x3c>
   299b4:	f800283a 	ret
   299b8:	31ffffc4 	addi	r7,r6,-1
   299bc:	1007883a 	mov	r3,r2
   299c0:	003fc906 	br	298e8 <memmove+0x44>
   299c4:	f800283a 	ret
   299c8:	400d883a 	mov	r6,r8
   299cc:	003fc406 	br	298e0 <memmove+0x3c>

000299d0 <_read_r>:
   299d0:	2807883a 	mov	r3,r5
   299d4:	defffe04 	addi	sp,sp,-8
   299d8:	dc000015 	stw	r16,0(sp)
   299dc:	300b883a 	mov	r5,r6
   299e0:	008000f4 	movhi	r2,3
   299e4:	380d883a 	mov	r6,r7
   299e8:	2021883a 	mov	r16,r4
   299ec:	1809883a 	mov	r4,r3
   299f0:	dfc00115 	stw	ra,4(sp)
   299f4:	10117f15 	stw	zero,17916(r2)
   299f8:	002e55c0 	call	2e55c <read>
   299fc:	10ffffd8 	cmpnei	r3,r2,-1
   29a00:	18000426 	beq	r3,zero,29a14 <_read_r+0x44>
   29a04:	dfc00117 	ldw	ra,4(sp)
   29a08:	dc000017 	ldw	r16,0(sp)
   29a0c:	dec00204 	addi	sp,sp,8
   29a10:	f800283a 	ret
   29a14:	00c000f4 	movhi	r3,3
   29a18:	18d17f17 	ldw	r3,17916(r3)
   29a1c:	183ff926 	beq	r3,zero,29a04 <_read_r+0x34>
   29a20:	80c00015 	stw	r3,0(r16)
   29a24:	dfc00117 	ldw	ra,4(sp)
   29a28:	dc000017 	ldw	r16,0(sp)
   29a2c:	dec00204 	addi	sp,sp,8
   29a30:	f800283a 	ret

00029a34 <_realloc_r>:
   29a34:	defff504 	addi	sp,sp,-44
   29a38:	dc800315 	stw	r18,12(sp)
   29a3c:	dfc00a15 	stw	ra,40(sp)
   29a40:	df000915 	stw	fp,36(sp)
   29a44:	ddc00815 	stw	r23,32(sp)
   29a48:	dd800715 	stw	r22,28(sp)
   29a4c:	dd400615 	stw	r21,24(sp)
   29a50:	dd000515 	stw	r20,20(sp)
   29a54:	dcc00415 	stw	r19,16(sp)
   29a58:	dc400215 	stw	r17,8(sp)
   29a5c:	dc000115 	stw	r16,4(sp)
   29a60:	3025883a 	mov	r18,r6
   29a64:	28008b26 	beq	r5,zero,29c94 <_realloc_r+0x260>
   29a68:	2821883a 	mov	r16,r5
   29a6c:	2027883a 	mov	r19,r4
   29a70:	944002c4 	addi	r17,r18,11
   29a74:	002e4d80 	call	2e4d8 <__malloc_lock>
   29a78:	888005f0 	cmpltui	r2,r17,23
   29a7c:	1000521e 	bne	r2,zero,29bc8 <_realloc_r+0x194>
   29a80:	017ffe04 	movi	r5,-8
   29a84:	8962703a 	and	r17,r17,r5
   29a88:	8807883a 	mov	r3,r17
   29a8c:	88005116 	blt	r17,zero,29bd4 <_realloc_r+0x1a0>
   29a90:	8c805036 	bltu	r17,r18,29bd4 <_realloc_r+0x1a0>
   29a94:	80bfff17 	ldw	r2,-4(r16)
   29a98:	017fff04 	movi	r5,-4
   29a9c:	857ffe04 	addi	r21,r16,-8
   29aa0:	1168703a 	and	r20,r2,r5
   29aa4:	ad2d883a 	add	r22,r21,r20
   29aa8:	a0c0390e 	bge	r20,r3,29b90 <_realloc_r+0x15c>
   29aac:	070000f4 	movhi	fp,3
   29ab0:	e7046f04 	addi	fp,fp,4540
   29ab4:	e2000217 	ldw	r8,8(fp)
   29ab8:	b1000117 	ldw	r4,4(r22)
   29abc:	45808e26 	beq	r8,r22,29cf8 <_realloc_r+0x2c4>
   29ac0:	01bfff84 	movi	r6,-2
   29ac4:	218c703a 	and	r6,r4,r6
   29ac8:	b18d883a 	add	r6,r22,r6
   29acc:	31800117 	ldw	r6,4(r6)
   29ad0:	3180004c 	andi	r6,r6,1
   29ad4:	30004f1e 	bne	r6,zero,29c14 <_realloc_r+0x1e0>
   29ad8:	2148703a 	and	r4,r4,r5
   29adc:	a10b883a 	add	r5,r20,r4
   29ae0:	28c0bf0e 	bge	r5,r3,29de0 <_realloc_r+0x3ac>
   29ae4:	1080004c 	andi	r2,r2,1
   29ae8:	10004c1e 	bne	r2,zero,29c1c <_realloc_r+0x1e8>
   29aec:	81fffe17 	ldw	r7,-8(r16)
   29af0:	00bfff04 	movi	r2,-4
   29af4:	a9cfc83a 	sub	r7,r21,r7
   29af8:	39400117 	ldw	r5,4(r7)
   29afc:	288a703a 	and	r5,r5,r2
   29b00:	b0000426 	beq	r22,zero,29b14 <_realloc_r+0xe0>
   29b04:	a16f883a 	add	r23,r20,r5
   29b08:	b92f883a 	add	r23,r23,r4
   29b0c:	4580bf26 	beq	r8,r22,29e0c <_realloc_r+0x3d8>
   29b10:	b8c0930e 	bge	r23,r3,29d60 <_realloc_r+0x32c>
   29b14:	38004126 	beq	r7,zero,29c1c <_realloc_r+0x1e8>
   29b18:	a16f883a 	add	r23,r20,r5
   29b1c:	b8c03f16 	blt	r23,r3,29c1c <_realloc_r+0x1e8>
   29b20:	38800317 	ldw	r2,12(r7)
   29b24:	38c00217 	ldw	r3,8(r7)
   29b28:	a1bfff04 	addi	r6,r20,-4
   29b2c:	31400968 	cmpgeui	r5,r6,37
   29b30:	18800315 	stw	r2,12(r3)
   29b34:	10c00215 	stw	r3,8(r2)
   29b38:	39000204 	addi	r4,r7,8
   29b3c:	3ded883a 	add	r22,r7,r23
   29b40:	2800941e 	bne	r5,zero,29d94 <_realloc_r+0x360>
   29b44:	30800530 	cmpltui	r2,r6,20
   29b48:	80c00017 	ldw	r3,0(r16)
   29b4c:	1000df1e 	bne	r2,zero,29ecc <_realloc_r+0x498>
   29b50:	38c00215 	stw	r3,8(r7)
   29b54:	80c00117 	ldw	r3,4(r16)
   29b58:	30800728 	cmpgeui	r2,r6,28
   29b5c:	38c00315 	stw	r3,12(r7)
   29b60:	1000dc1e 	bne	r2,zero,29ed4 <_realloc_r+0x4a0>
   29b64:	80c00217 	ldw	r3,8(r16)
   29b68:	38800404 	addi	r2,r7,16
   29b6c:	84000204 	addi	r16,r16,8
   29b70:	10c00015 	stw	r3,0(r2)
   29b74:	80c00117 	ldw	r3,4(r16)
   29b78:	b829883a 	mov	r20,r23
   29b7c:	382b883a 	mov	r21,r7
   29b80:	10c00115 	stw	r3,4(r2)
   29b84:	80c00217 	ldw	r3,8(r16)
   29b88:	2021883a 	mov	r16,r4
   29b8c:	10c00215 	stw	r3,8(r2)
   29b90:	a9800117 	ldw	r6,4(r21)
   29b94:	a445c83a 	sub	r2,r20,r17
   29b98:	10c00430 	cmpltui	r3,r2,16
   29b9c:	3180004c 	andi	r6,r6,1
   29ba0:	18004926 	beq	r3,zero,29cc8 <_realloc_r+0x294>
   29ba4:	a18cb03a 	or	r6,r20,r6
   29ba8:	a9800115 	stw	r6,4(r21)
   29bac:	b0800117 	ldw	r2,4(r22)
   29bb0:	10800054 	ori	r2,r2,1
   29bb4:	b0800115 	stw	r2,4(r22)
   29bb8:	9809883a 	mov	r4,r19
   29bbc:	002e4fc0 	call	2e4fc <__malloc_unlock>
   29bc0:	8025883a 	mov	r18,r16
   29bc4:	00000606 	br	29be0 <_realloc_r+0x1ac>
   29bc8:	04400404 	movi	r17,16
   29bcc:	00c00404 	movi	r3,16
   29bd0:	8cbfb02e 	bgeu	r17,r18,29a94 <_realloc_r+0x60>
   29bd4:	00800304 	movi	r2,12
   29bd8:	98800015 	stw	r2,0(r19)
   29bdc:	0025883a 	mov	r18,zero
   29be0:	9005883a 	mov	r2,r18
   29be4:	dfc00a17 	ldw	ra,40(sp)
   29be8:	df000917 	ldw	fp,36(sp)
   29bec:	ddc00817 	ldw	r23,32(sp)
   29bf0:	dd800717 	ldw	r22,28(sp)
   29bf4:	dd400617 	ldw	r21,24(sp)
   29bf8:	dd000517 	ldw	r20,20(sp)
   29bfc:	dcc00417 	ldw	r19,16(sp)
   29c00:	dc800317 	ldw	r18,12(sp)
   29c04:	dc400217 	ldw	r17,8(sp)
   29c08:	dc000117 	ldw	r16,4(sp)
   29c0c:	dec00b04 	addi	sp,sp,44
   29c10:	f800283a 	ret
   29c14:	1080004c 	andi	r2,r2,1
   29c18:	10006c26 	beq	r2,zero,29dcc <_realloc_r+0x398>
   29c1c:	900b883a 	mov	r5,r18
   29c20:	9809883a 	mov	r4,r19
   29c24:	00254940 	call	25494 <_malloc_r>
   29c28:	1025883a 	mov	r18,r2
   29c2c:	10001626 	beq	r2,zero,29c88 <_realloc_r+0x254>
   29c30:	80bfff17 	ldw	r2,-4(r16)
   29c34:	013fff84 	movi	r4,-2
   29c38:	90fffe04 	addi	r3,r18,-8
   29c3c:	1104703a 	and	r2,r2,r4
   29c40:	a885883a 	add	r2,r21,r2
   29c44:	10c05b26 	beq	r2,r3,29db4 <_realloc_r+0x380>
   29c48:	a1bfff04 	addi	r6,r20,-4
   29c4c:	30800968 	cmpgeui	r2,r6,37
   29c50:	10006a1e 	bne	r2,zero,29dfc <_realloc_r+0x3c8>
   29c54:	30800530 	cmpltui	r2,r6,20
   29c58:	81000017 	ldw	r4,0(r16)
   29c5c:	10003726 	beq	r2,zero,29d3c <_realloc_r+0x308>
   29c60:	9005883a 	mov	r2,r18
   29c64:	8007883a 	mov	r3,r16
   29c68:	11000015 	stw	r4,0(r2)
   29c6c:	19000117 	ldw	r4,4(r3)
   29c70:	11000115 	stw	r4,4(r2)
   29c74:	18c00217 	ldw	r3,8(r3)
   29c78:	10c00215 	stw	r3,8(r2)
   29c7c:	800b883a 	mov	r5,r16
   29c80:	9809883a 	mov	r4,r19
   29c84:	0024df00 	call	24df0 <_free_r>
   29c88:	9809883a 	mov	r4,r19
   29c8c:	002e4fc0 	call	2e4fc <__malloc_unlock>
   29c90:	003fd306 	br	29be0 <_realloc_r+0x1ac>
   29c94:	300b883a 	mov	r5,r6
   29c98:	dfc00a17 	ldw	ra,40(sp)
   29c9c:	df000917 	ldw	fp,36(sp)
   29ca0:	ddc00817 	ldw	r23,32(sp)
   29ca4:	dd800717 	ldw	r22,28(sp)
   29ca8:	dd400617 	ldw	r21,24(sp)
   29cac:	dd000517 	ldw	r20,20(sp)
   29cb0:	dcc00417 	ldw	r19,16(sp)
   29cb4:	dc800317 	ldw	r18,12(sp)
   29cb8:	dc400217 	ldw	r17,8(sp)
   29cbc:	dc000117 	ldw	r16,4(sp)
   29cc0:	dec00b04 	addi	sp,sp,44
   29cc4:	00254941 	jmpi	25494 <_malloc_r>
   29cc8:	344cb03a 	or	r6,r6,r17
   29ccc:	a9800115 	stw	r6,4(r21)
   29cd0:	ac4b883a 	add	r5,r21,r17
   29cd4:	10800054 	ori	r2,r2,1
   29cd8:	28800115 	stw	r2,4(r5)
   29cdc:	b0800117 	ldw	r2,4(r22)
   29ce0:	29400204 	addi	r5,r5,8
   29ce4:	9809883a 	mov	r4,r19
   29ce8:	10800054 	ori	r2,r2,1
   29cec:	b0800115 	stw	r2,4(r22)
   29cf0:	0024df00 	call	24df0 <_free_r>
   29cf4:	003fb006 	br	29bb8 <_realloc_r+0x184>
   29cf8:	2148703a 	and	r4,r4,r5
   29cfc:	a10b883a 	add	r5,r20,r4
   29d00:	89800404 	addi	r6,r17,16
   29d04:	29bf7716 	blt	r5,r6,29ae4 <_realloc_r+0xb0>
   29d08:	ac6b883a 	add	r21,r21,r17
   29d0c:	2c45c83a 	sub	r2,r5,r17
   29d10:	e5400215 	stw	r21,8(fp)
   29d14:	10800054 	ori	r2,r2,1
   29d18:	a8800115 	stw	r2,4(r21)
   29d1c:	80bfff17 	ldw	r2,-4(r16)
   29d20:	9809883a 	mov	r4,r19
   29d24:	8025883a 	mov	r18,r16
   29d28:	1080004c 	andi	r2,r2,1
   29d2c:	1462b03a 	or	r17,r2,r17
   29d30:	847fff15 	stw	r17,-4(r16)
   29d34:	002e4fc0 	call	2e4fc <__malloc_unlock>
   29d38:	003fa906 	br	29be0 <_realloc_r+0x1ac>
   29d3c:	91000015 	stw	r4,0(r18)
   29d40:	80c00117 	ldw	r3,4(r16)
   29d44:	30800728 	cmpgeui	r2,r6,28
   29d48:	90c00115 	stw	r3,4(r18)
   29d4c:	1000551e 	bne	r2,zero,29ea4 <_realloc_r+0x470>
   29d50:	81000217 	ldw	r4,8(r16)
   29d54:	80c00204 	addi	r3,r16,8
   29d58:	90800204 	addi	r2,r18,8
   29d5c:	003fc206 	br	29c68 <_realloc_r+0x234>
   29d60:	b0800317 	ldw	r2,12(r22)
   29d64:	b0c00217 	ldw	r3,8(r22)
   29d68:	a1bfff04 	addi	r6,r20,-4
   29d6c:	31400968 	cmpgeui	r5,r6,37
   29d70:	18800315 	stw	r2,12(r3)
   29d74:	10c00215 	stw	r3,8(r2)
   29d78:	38c00217 	ldw	r3,8(r7)
   29d7c:	38800317 	ldw	r2,12(r7)
   29d80:	39000204 	addi	r4,r7,8
   29d84:	3ded883a 	add	r22,r7,r23
   29d88:	18800315 	stw	r2,12(r3)
   29d8c:	10c00215 	stw	r3,8(r2)
   29d90:	283f6c26 	beq	r5,zero,29b44 <_realloc_r+0x110>
   29d94:	800b883a 	mov	r5,r16
   29d98:	d9c00015 	stw	r7,0(sp)
   29d9c:	00298a40 	call	298a4 <memmove>
   29da0:	d9c00017 	ldw	r7,0(sp)
   29da4:	1021883a 	mov	r16,r2
   29da8:	b829883a 	mov	r20,r23
   29dac:	382b883a 	mov	r21,r7
   29db0:	003f7706 	br	29b90 <_realloc_r+0x15c>
   29db4:	90bfff17 	ldw	r2,-4(r18)
   29db8:	00ffff04 	movi	r3,-4
   29dbc:	10c4703a 	and	r2,r2,r3
   29dc0:	a0a9883a 	add	r20,r20,r2
   29dc4:	ad2d883a 	add	r22,r21,r20
   29dc8:	003f7106 	br	29b90 <_realloc_r+0x15c>
   29dcc:	81fffe17 	ldw	r7,-8(r16)
   29dd0:	a9cfc83a 	sub	r7,r21,r7
   29dd4:	38800117 	ldw	r2,4(r7)
   29dd8:	114a703a 	and	r5,r2,r5
   29ddc:	003f4d06 	br	29b14 <_realloc_r+0xe0>
   29de0:	b0800317 	ldw	r2,12(r22)
   29de4:	b0c00217 	ldw	r3,8(r22)
   29de8:	2829883a 	mov	r20,r5
   29dec:	a96d883a 	add	r22,r21,r5
   29df0:	18800315 	stw	r2,12(r3)
   29df4:	10c00215 	stw	r3,8(r2)
   29df8:	003f6506 	br	29b90 <_realloc_r+0x15c>
   29dfc:	800b883a 	mov	r5,r16
   29e00:	9009883a 	mov	r4,r18
   29e04:	00298a40 	call	298a4 <memmove>
   29e08:	003f9c06 	br	29c7c <_realloc_r+0x248>
   29e0c:	88800404 	addi	r2,r17,16
   29e10:	b8bf4016 	blt	r23,r2,29b14 <_realloc_r+0xe0>
   29e14:	38800317 	ldw	r2,12(r7)
   29e18:	38c00217 	ldw	r3,8(r7)
   29e1c:	a1bfff04 	addi	r6,r20,-4
   29e20:	31000968 	cmpgeui	r4,r6,37
   29e24:	18800315 	stw	r2,12(r3)
   29e28:	10c00215 	stw	r3,8(r2)
   29e2c:	3c800204 	addi	r18,r7,8
   29e30:	20003b1e 	bne	r4,zero,29f20 <_realloc_r+0x4ec>
   29e34:	30800530 	cmpltui	r2,r6,20
   29e38:	80c00017 	ldw	r3,0(r16)
   29e3c:	1000361e 	bne	r2,zero,29f18 <_realloc_r+0x4e4>
   29e40:	38c00215 	stw	r3,8(r7)
   29e44:	80c00117 	ldw	r3,4(r16)
   29e48:	30800728 	cmpgeui	r2,r6,28
   29e4c:	38c00315 	stw	r3,12(r7)
   29e50:	1000401e 	bne	r2,zero,29f54 <_realloc_r+0x520>
   29e54:	80c00217 	ldw	r3,8(r16)
   29e58:	38800404 	addi	r2,r7,16
   29e5c:	84000204 	addi	r16,r16,8
   29e60:	10c00015 	stw	r3,0(r2)
   29e64:	80c00117 	ldw	r3,4(r16)
   29e68:	10c00115 	stw	r3,4(r2)
   29e6c:	80c00217 	ldw	r3,8(r16)
   29e70:	10c00215 	stw	r3,8(r2)
   29e74:	3c47883a 	add	r3,r7,r17
   29e78:	bc45c83a 	sub	r2,r23,r17
   29e7c:	e0c00215 	stw	r3,8(fp)
   29e80:	10800054 	ori	r2,r2,1
   29e84:	18800115 	stw	r2,4(r3)
   29e88:	38800117 	ldw	r2,4(r7)
   29e8c:	9809883a 	mov	r4,r19
   29e90:	1080004c 	andi	r2,r2,1
   29e94:	1462b03a 	or	r17,r2,r17
   29e98:	3c400115 	stw	r17,4(r7)
   29e9c:	002e4fc0 	call	2e4fc <__malloc_unlock>
   29ea0:	003f4f06 	br	29be0 <_realloc_r+0x1ac>
   29ea4:	80800217 	ldw	r2,8(r16)
   29ea8:	31800920 	cmpeqi	r6,r6,36
   29eac:	90800215 	stw	r2,8(r18)
   29eb0:	80800317 	ldw	r2,12(r16)
   29eb4:	90800315 	stw	r2,12(r18)
   29eb8:	81000417 	ldw	r4,16(r16)
   29ebc:	30000f1e 	bne	r6,zero,29efc <_realloc_r+0x4c8>
   29ec0:	80c00404 	addi	r3,r16,16
   29ec4:	90800404 	addi	r2,r18,16
   29ec8:	003f6706 	br	29c68 <_realloc_r+0x234>
   29ecc:	2005883a 	mov	r2,r4
   29ed0:	003f2706 	br	29b70 <_realloc_r+0x13c>
   29ed4:	80800217 	ldw	r2,8(r16)
   29ed8:	31800920 	cmpeqi	r6,r6,36
   29edc:	38800415 	stw	r2,16(r7)
   29ee0:	80800317 	ldw	r2,12(r16)
   29ee4:	38800515 	stw	r2,20(r7)
   29ee8:	80c00417 	ldw	r3,16(r16)
   29eec:	3000121e 	bne	r6,zero,29f38 <_realloc_r+0x504>
   29ef0:	38800604 	addi	r2,r7,24
   29ef4:	84000404 	addi	r16,r16,16
   29ef8:	003f1d06 	br	29b70 <_realloc_r+0x13c>
   29efc:	91000415 	stw	r4,16(r18)
   29f00:	81000517 	ldw	r4,20(r16)
   29f04:	80c00604 	addi	r3,r16,24
   29f08:	90800604 	addi	r2,r18,24
   29f0c:	91000515 	stw	r4,20(r18)
   29f10:	81000617 	ldw	r4,24(r16)
   29f14:	003f5406 	br	29c68 <_realloc_r+0x234>
   29f18:	9005883a 	mov	r2,r18
   29f1c:	003fd006 	br	29e60 <_realloc_r+0x42c>
   29f20:	800b883a 	mov	r5,r16
   29f24:	9009883a 	mov	r4,r18
   29f28:	d9c00015 	stw	r7,0(sp)
   29f2c:	00298a40 	call	298a4 <memmove>
   29f30:	d9c00017 	ldw	r7,0(sp)
   29f34:	003fcf06 	br	29e74 <_realloc_r+0x440>
   29f38:	84000604 	addi	r16,r16,24
   29f3c:	38c00615 	stw	r3,24(r7)
   29f40:	80ffff17 	ldw	r3,-4(r16)
   29f44:	38800804 	addi	r2,r7,32
   29f48:	38c00715 	stw	r3,28(r7)
   29f4c:	80c00017 	ldw	r3,0(r16)
   29f50:	003f0706 	br	29b70 <_realloc_r+0x13c>
   29f54:	80800217 	ldw	r2,8(r16)
   29f58:	31800920 	cmpeqi	r6,r6,36
   29f5c:	38800415 	stw	r2,16(r7)
   29f60:	80800317 	ldw	r2,12(r16)
   29f64:	38800515 	stw	r2,20(r7)
   29f68:	80c00417 	ldw	r3,16(r16)
   29f6c:	3000031e 	bne	r6,zero,29f7c <_realloc_r+0x548>
   29f70:	38800604 	addi	r2,r7,24
   29f74:	84000404 	addi	r16,r16,16
   29f78:	003fb906 	br	29e60 <_realloc_r+0x42c>
   29f7c:	84000604 	addi	r16,r16,24
   29f80:	38c00615 	stw	r3,24(r7)
   29f84:	80ffff17 	ldw	r3,-4(r16)
   29f88:	38800804 	addi	r2,r7,32
   29f8c:	38c00715 	stw	r3,28(r7)
   29f90:	80c00017 	ldw	r3,0(r16)
   29f94:	003fb206 	br	29e60 <_realloc_r+0x42c>

00029f98 <strcmp>:
   29f98:	2144b03a 	or	r2,r4,r5
   29f9c:	108000cc 	andi	r2,r2,3
   29fa0:	1000141e 	bne	r2,zero,29ff4 <strcmp+0x5c>
   29fa4:	20800017 	ldw	r2,0(r4)
   29fa8:	28c00017 	ldw	r3,0(r5)
   29fac:	10c0111e 	bne	r2,r3,29ff4 <strcmp+0x5c>
   29fb0:	01ffbff4 	movhi	r7,65279
   29fb4:	01a02074 	movhi	r6,32897
   29fb8:	39ffbfc4 	addi	r7,r7,-257
   29fbc:	31a02004 	addi	r6,r6,-32640
   29fc0:	00000306 	br	29fd0 <strcmp+0x38>
   29fc4:	20800017 	ldw	r2,0(r4)
   29fc8:	28c00017 	ldw	r3,0(r5)
   29fcc:	10c0091e 	bne	r2,r3,29ff4 <strcmp+0x5c>
   29fd0:	11c7883a 	add	r3,r2,r7
   29fd4:	0084303a 	nor	r2,zero,r2
   29fd8:	1884703a 	and	r2,r3,r2
   29fdc:	1184703a 	and	r2,r2,r6
   29fe0:	21000104 	addi	r4,r4,4
   29fe4:	29400104 	addi	r5,r5,4
   29fe8:	103ff626 	beq	r2,zero,29fc4 <strcmp+0x2c>
   29fec:	0005883a 	mov	r2,zero
   29ff0:	f800283a 	ret
   29ff4:	20c00003 	ldbu	r3,0(r4)
   29ff8:	18803fcc 	andi	r2,r3,255
   29ffc:	1080201c 	xori	r2,r2,128
   2a000:	10bfe004 	addi	r2,r2,-128
   2a004:	1000071e 	bne	r2,zero,2a024 <strcmp+0x8c>
   2a008:	00000a06 	br	2a034 <strcmp+0x9c>
   2a00c:	20c00003 	ldbu	r3,0(r4)
   2a010:	29400044 	addi	r5,r5,1
   2a014:	18803fcc 	andi	r2,r3,255
   2a018:	1080201c 	xori	r2,r2,128
   2a01c:	10bfe004 	addi	r2,r2,-128
   2a020:	10000726 	beq	r2,zero,2a040 <strcmp+0xa8>
   2a024:	29800007 	ldb	r6,0(r5)
   2a028:	21000044 	addi	r4,r4,1
   2a02c:	30bff726 	beq	r6,r2,2a00c <strcmp+0x74>
   2a030:	18803fcc 	andi	r2,r3,255
   2a034:	28c00003 	ldbu	r3,0(r5)
   2a038:	10c5c83a 	sub	r2,r2,r3
   2a03c:	f800283a 	ret
   2a040:	28c00003 	ldbu	r3,0(r5)
   2a044:	0005883a 	mov	r2,zero
   2a048:	10c5c83a 	sub	r2,r2,r3
   2a04c:	f800283a 	ret

0002a050 <_vfiprintf_r>:
   2a050:	002760c1 	jmpi	2760c <___vfiprintf_internal_r>

0002a054 <_wcrtomb_r>:
   2a054:	defffa04 	addi	sp,sp,-24
   2a058:	dc400415 	stw	r17,16(sp)
   2a05c:	dc000315 	stw	r16,12(sp)
   2a060:	008000f4 	movhi	r2,3
   2a064:	dfc00515 	stw	ra,20(sp)
   2a068:	1085a917 	ldw	r2,5796(r2)
   2a06c:	2023883a 	mov	r17,r4
   2a070:	3821883a 	mov	r16,r7
   2a074:	28000826 	beq	r5,zero,2a098 <_wcrtomb_r+0x44>
   2a078:	103ee83a 	callr	r2
   2a07c:	10ffffd8 	cmpnei	r3,r2,-1
   2a080:	18000a26 	beq	r3,zero,2a0ac <_wcrtomb_r+0x58>
   2a084:	dfc00517 	ldw	ra,20(sp)
   2a088:	dc400417 	ldw	r17,16(sp)
   2a08c:	dc000317 	ldw	r16,12(sp)
   2a090:	dec00604 	addi	sp,sp,24
   2a094:	f800283a 	ret
   2a098:	000d883a 	mov	r6,zero
   2a09c:	d9400084 	addi	r5,sp,2
   2a0a0:	103ee83a 	callr	r2
   2a0a4:	10ffffd8 	cmpnei	r3,r2,-1
   2a0a8:	183ff61e 	bne	r3,zero,2a084 <_wcrtomb_r+0x30>
   2a0ac:	00802284 	movi	r2,138
   2a0b0:	80000015 	stw	zero,0(r16)
   2a0b4:	88800015 	stw	r2,0(r17)
   2a0b8:	00bfffc4 	movi	r2,-1
   2a0bc:	003ff106 	br	2a084 <_wcrtomb_r+0x30>

0002a0c0 <wcrtomb>:
   2a0c0:	defffa04 	addi	sp,sp,-24
   2a0c4:	00c000f4 	movhi	r3,3
   2a0c8:	dc400415 	stw	r17,16(sp)
   2a0cc:	dc000315 	stw	r16,12(sp)
   2a0d0:	1c4a5e17 	ldw	r17,10616(r3)
   2a0d4:	dfc00515 	stw	ra,20(sp)
   2a0d8:	00c000f4 	movhi	r3,3
   2a0dc:	18c5a917 	ldw	r3,5796(r3)
   2a0e0:	3021883a 	mov	r16,r6
   2a0e4:	20000c26 	beq	r4,zero,2a118 <wcrtomb+0x58>
   2a0e8:	280d883a 	mov	r6,r5
   2a0ec:	800f883a 	mov	r7,r16
   2a0f0:	200b883a 	mov	r5,r4
   2a0f4:	8809883a 	mov	r4,r17
   2a0f8:	183ee83a 	callr	r3
   2a0fc:	10ffffd8 	cmpnei	r3,r2,-1
   2a100:	18000c26 	beq	r3,zero,2a134 <wcrtomb+0x74>
   2a104:	dfc00517 	ldw	ra,20(sp)
   2a108:	dc400417 	ldw	r17,16(sp)
   2a10c:	dc000317 	ldw	r16,12(sp)
   2a110:	dec00604 	addi	sp,sp,24
   2a114:	f800283a 	ret
   2a118:	300f883a 	mov	r7,r6
   2a11c:	d9400084 	addi	r5,sp,2
   2a120:	000d883a 	mov	r6,zero
   2a124:	8809883a 	mov	r4,r17
   2a128:	183ee83a 	callr	r3
   2a12c:	10ffffd8 	cmpnei	r3,r2,-1
   2a130:	183ff41e 	bne	r3,zero,2a104 <wcrtomb+0x44>
   2a134:	00802284 	movi	r2,138
   2a138:	80000015 	stw	zero,0(r16)
   2a13c:	88800015 	stw	r2,0(r17)
   2a140:	00bfffc4 	movi	r2,-1
   2a144:	003fef06 	br	2a104 <wcrtomb+0x44>

0002a148 <_wctomb_r>:
   2a148:	008000f4 	movhi	r2,3
   2a14c:	1085a917 	ldw	r2,5796(r2)
   2a150:	1000683a 	jmp	r2

0002a154 <__ascii_wctomb>:
   2a154:	28000926 	beq	r5,zero,2a17c <__ascii_wctomb+0x28>
   2a158:	30804030 	cmpltui	r2,r6,256
   2a15c:	10000326 	beq	r2,zero,2a16c <__ascii_wctomb+0x18>
   2a160:	29800005 	stb	r6,0(r5)
   2a164:	00800044 	movi	r2,1
   2a168:	f800283a 	ret
   2a16c:	00802284 	movi	r2,138
   2a170:	20800015 	stw	r2,0(r4)
   2a174:	00bfffc4 	movi	r2,-1
   2a178:	f800283a 	ret
   2a17c:	0005883a 	mov	r2,zero
   2a180:	f800283a 	ret

0002a184 <abort>:
   2a184:	deffff04 	addi	sp,sp,-4
   2a188:	01000184 	movi	r4,6
   2a18c:	dfc00015 	stw	ra,0(sp)
   2a190:	002a4100 	call	2a410 <raise>
   2a194:	01000044 	movi	r4,1
   2a198:	002dd300 	call	2dd30 <_exit>

0002a19c <_init_signal_r>:
   2a19c:	2080b717 	ldw	r2,732(r4)
   2a1a0:	10000226 	beq	r2,zero,2a1ac <_init_signal_r+0x10>
   2a1a4:	0005883a 	mov	r2,zero
   2a1a8:	f800283a 	ret
   2a1ac:	defffe04 	addi	sp,sp,-8
   2a1b0:	01402004 	movi	r5,128
   2a1b4:	dc000015 	stw	r16,0(sp)
   2a1b8:	dfc00115 	stw	ra,4(sp)
   2a1bc:	2021883a 	mov	r16,r4
   2a1c0:	00254940 	call	25494 <_malloc_r>
   2a1c4:	8080b715 	stw	r2,732(r16)
   2a1c8:	1009883a 	mov	r4,r2
   2a1cc:	10000826 	beq	r2,zero,2a1f0 <_init_signal_r+0x54>
   2a1d0:	01802004 	movi	r6,128
   2a1d4:	000b883a 	mov	r5,zero
   2a1d8:	0025e440 	call	25e44 <memset>
   2a1dc:	0005883a 	mov	r2,zero
   2a1e0:	dfc00117 	ldw	ra,4(sp)
   2a1e4:	dc000017 	ldw	r16,0(sp)
   2a1e8:	dec00204 	addi	sp,sp,8
   2a1ec:	f800283a 	ret
   2a1f0:	00bfffc4 	movi	r2,-1
   2a1f4:	003ffa06 	br	2a1e0 <_init_signal_r+0x44>

0002a1f8 <_signal_r>:
   2a1f8:	defffc04 	addi	sp,sp,-16
   2a1fc:	dc400115 	stw	r17,4(sp)
   2a200:	dfc00315 	stw	ra,12(sp)
   2a204:	dc800215 	stw	r18,8(sp)
   2a208:	dc000015 	stw	r16,0(sp)
   2a20c:	28800830 	cmpltui	r2,r5,32
   2a210:	2023883a 	mov	r17,r4
   2a214:	10000e26 	beq	r2,zero,2a250 <_signal_r+0x58>
   2a218:	20c0b717 	ldw	r3,732(r4)
   2a21c:	2821883a 	mov	r16,r5
   2a220:	3025883a 	mov	r18,r6
   2a224:	18000e26 	beq	r3,zero,2a260 <_signal_r+0x68>
   2a228:	802090ba 	slli	r16,r16,2
   2a22c:	1c21883a 	add	r16,r3,r16
   2a230:	80800017 	ldw	r2,0(r16)
   2a234:	84800015 	stw	r18,0(r16)
   2a238:	dfc00317 	ldw	ra,12(sp)
   2a23c:	dc800217 	ldw	r18,8(sp)
   2a240:	dc400117 	ldw	r17,4(sp)
   2a244:	dc000017 	ldw	r16,0(sp)
   2a248:	dec00404 	addi	sp,sp,16
   2a24c:	f800283a 	ret
   2a250:	00800584 	movi	r2,22
   2a254:	20800015 	stw	r2,0(r4)
   2a258:	00bfffc4 	movi	r2,-1
   2a25c:	003ff606 	br	2a238 <_signal_r+0x40>
   2a260:	01402004 	movi	r5,128
   2a264:	00254940 	call	25494 <_malloc_r>
   2a268:	8880b715 	stw	r2,732(r17)
   2a26c:	10000626 	beq	r2,zero,2a288 <_signal_r+0x90>
   2a270:	01802004 	movi	r6,128
   2a274:	000b883a 	mov	r5,zero
   2a278:	1009883a 	mov	r4,r2
   2a27c:	0025e440 	call	25e44 <memset>
   2a280:	1007883a 	mov	r3,r2
   2a284:	003fe806 	br	2a228 <_signal_r+0x30>
   2a288:	00bfffc4 	movi	r2,-1
   2a28c:	003fea06 	br	2a238 <_signal_r+0x40>

0002a290 <_raise_r>:
   2a290:	28800830 	cmpltui	r2,r5,32
   2a294:	10002b26 	beq	r2,zero,2a344 <_raise_r+0xb4>
   2a298:	2080b717 	ldw	r2,732(r4)
   2a29c:	defffd04 	addi	sp,sp,-12
   2a2a0:	dc000115 	stw	r16,4(sp)
   2a2a4:	dfc00215 	stw	ra,8(sp)
   2a2a8:	2821883a 	mov	r16,r5
   2a2ac:	10001026 	beq	r2,zero,2a2f0 <_raise_r+0x60>
   2a2b0:	280690ba 	slli	r3,r5,2
   2a2b4:	10c5883a 	add	r2,r2,r3
   2a2b8:	10c00017 	ldw	r3,0(r2)
   2a2bc:	18000c26 	beq	r3,zero,2a2f0 <_raise_r+0x60>
   2a2c0:	19400060 	cmpeqi	r5,r3,1
   2a2c4:	28001a1e 	bne	r5,zero,2a330 <_raise_r+0xa0>
   2a2c8:	197fffd8 	cmpnei	r5,r3,-1
   2a2cc:	28001126 	beq	r5,zero,2a314 <_raise_r+0x84>
   2a2d0:	10000015 	stw	zero,0(r2)
   2a2d4:	8009883a 	mov	r4,r16
   2a2d8:	183ee83a 	callr	r3
   2a2dc:	0005883a 	mov	r2,zero
   2a2e0:	dfc00217 	ldw	ra,8(sp)
   2a2e4:	dc000117 	ldw	r16,4(sp)
   2a2e8:	dec00304 	addi	sp,sp,12
   2a2ec:	f800283a 	ret
   2a2f0:	d9000015 	stw	r4,0(sp)
   2a2f4:	002a6e80 	call	2a6e8 <_getpid_r>
   2a2f8:	d9000017 	ldw	r4,0(sp)
   2a2fc:	800d883a 	mov	r6,r16
   2a300:	100b883a 	mov	r5,r2
   2a304:	dfc00217 	ldw	ra,8(sp)
   2a308:	dc000117 	ldw	r16,4(sp)
   2a30c:	dec00304 	addi	sp,sp,12
   2a310:	002a6881 	jmpi	2a688 <_kill_r>
   2a314:	00800584 	movi	r2,22
   2a318:	20800015 	stw	r2,0(r4)
   2a31c:	00800044 	movi	r2,1
   2a320:	dfc00217 	ldw	ra,8(sp)
   2a324:	dc000117 	ldw	r16,4(sp)
   2a328:	dec00304 	addi	sp,sp,12
   2a32c:	f800283a 	ret
   2a330:	0005883a 	mov	r2,zero
   2a334:	dfc00217 	ldw	ra,8(sp)
   2a338:	dc000117 	ldw	r16,4(sp)
   2a33c:	dec00304 	addi	sp,sp,12
   2a340:	f800283a 	ret
   2a344:	00800584 	movi	r2,22
   2a348:	20800015 	stw	r2,0(r4)
   2a34c:	00bfffc4 	movi	r2,-1
   2a350:	f800283a 	ret

0002a354 <__sigtramp_r>:
   2a354:	28800830 	cmpltui	r2,r5,32
   2a358:	10002b26 	beq	r2,zero,2a408 <__sigtramp_r+0xb4>
   2a35c:	20c0b717 	ldw	r3,732(r4)
   2a360:	defffd04 	addi	sp,sp,-12
   2a364:	dc400115 	stw	r17,4(sp)
   2a368:	dc000015 	stw	r16,0(sp)
   2a36c:	dfc00215 	stw	ra,8(sp)
   2a370:	2821883a 	mov	r16,r5
   2a374:	2023883a 	mov	r17,r4
   2a378:	18001326 	beq	r3,zero,2a3c8 <__sigtramp_r+0x74>
   2a37c:	800490ba 	slli	r2,r16,2
   2a380:	1887883a 	add	r3,r3,r2
   2a384:	18800017 	ldw	r2,0(r3)
   2a388:	10000d26 	beq	r2,zero,2a3c0 <__sigtramp_r+0x6c>
   2a38c:	113fffe0 	cmpeqi	r4,r2,-1
   2a390:	2000191e 	bne	r4,zero,2a3f8 <__sigtramp_r+0xa4>
   2a394:	11000060 	cmpeqi	r4,r2,1
   2a398:	2000151e 	bne	r4,zero,2a3f0 <__sigtramp_r+0x9c>
   2a39c:	18000015 	stw	zero,0(r3)
   2a3a0:	8009883a 	mov	r4,r16
   2a3a4:	103ee83a 	callr	r2
   2a3a8:	0005883a 	mov	r2,zero
   2a3ac:	dfc00217 	ldw	ra,8(sp)
   2a3b0:	dc400117 	ldw	r17,4(sp)
   2a3b4:	dc000017 	ldw	r16,0(sp)
   2a3b8:	dec00304 	addi	sp,sp,12
   2a3bc:	f800283a 	ret
   2a3c0:	00800044 	movi	r2,1
   2a3c4:	003ff906 	br	2a3ac <__sigtramp_r+0x58>
   2a3c8:	01402004 	movi	r5,128
   2a3cc:	00254940 	call	25494 <_malloc_r>
   2a3d0:	8880b715 	stw	r2,732(r17)
   2a3d4:	10000a26 	beq	r2,zero,2a400 <__sigtramp_r+0xac>
   2a3d8:	01802004 	movi	r6,128
   2a3dc:	000b883a 	mov	r5,zero
   2a3e0:	1009883a 	mov	r4,r2
   2a3e4:	0025e440 	call	25e44 <memset>
   2a3e8:	1007883a 	mov	r3,r2
   2a3ec:	003fe306 	br	2a37c <__sigtramp_r+0x28>
   2a3f0:	008000c4 	movi	r2,3
   2a3f4:	003fed06 	br	2a3ac <__sigtramp_r+0x58>
   2a3f8:	00800084 	movi	r2,2
   2a3fc:	003feb06 	br	2a3ac <__sigtramp_r+0x58>
   2a400:	00bfffc4 	movi	r2,-1
   2a404:	003fe906 	br	2a3ac <__sigtramp_r+0x58>
   2a408:	00bfffc4 	movi	r2,-1
   2a40c:	f800283a 	ret

0002a410 <raise>:
   2a410:	defffd04 	addi	sp,sp,-12
   2a414:	dc400115 	stw	r17,4(sp)
   2a418:	00c000f4 	movhi	r3,3
   2a41c:	dfc00215 	stw	ra,8(sp)
   2a420:	dc000015 	stw	r16,0(sp)
   2a424:	20800830 	cmpltui	r2,r4,32
   2a428:	1c4a5e17 	ldw	r17,10616(r3)
   2a42c:	10002326 	beq	r2,zero,2a4bc <raise+0xac>
   2a430:	8880b717 	ldw	r2,732(r17)
   2a434:	2021883a 	mov	r16,r4
   2a438:	10001026 	beq	r2,zero,2a47c <raise+0x6c>
   2a43c:	200690ba 	slli	r3,r4,2
   2a440:	10c5883a 	add	r2,r2,r3
   2a444:	10c00017 	ldw	r3,0(r2)
   2a448:	18000c26 	beq	r3,zero,2a47c <raise+0x6c>
   2a44c:	19400060 	cmpeqi	r5,r3,1
   2a450:	2800181e 	bne	r5,zero,2a4b4 <raise+0xa4>
   2a454:	197fffd8 	cmpnei	r5,r3,-1
   2a458:	28001226 	beq	r5,zero,2a4a4 <raise+0x94>
   2a45c:	10000015 	stw	zero,0(r2)
   2a460:	183ee83a 	callr	r3
   2a464:	0005883a 	mov	r2,zero
   2a468:	dfc00217 	ldw	ra,8(sp)
   2a46c:	dc400117 	ldw	r17,4(sp)
   2a470:	dc000017 	ldw	r16,0(sp)
   2a474:	dec00304 	addi	sp,sp,12
   2a478:	f800283a 	ret
   2a47c:	8809883a 	mov	r4,r17
   2a480:	002a6e80 	call	2a6e8 <_getpid_r>
   2a484:	800d883a 	mov	r6,r16
   2a488:	100b883a 	mov	r5,r2
   2a48c:	8809883a 	mov	r4,r17
   2a490:	dfc00217 	ldw	ra,8(sp)
   2a494:	dc400117 	ldw	r17,4(sp)
   2a498:	dc000017 	ldw	r16,0(sp)
   2a49c:	dec00304 	addi	sp,sp,12
   2a4a0:	002a6881 	jmpi	2a688 <_kill_r>
   2a4a4:	00800584 	movi	r2,22
   2a4a8:	88800015 	stw	r2,0(r17)
   2a4ac:	00800044 	movi	r2,1
   2a4b0:	003fed06 	br	2a468 <raise+0x58>
   2a4b4:	0005883a 	mov	r2,zero
   2a4b8:	003feb06 	br	2a468 <raise+0x58>
   2a4bc:	00800584 	movi	r2,22
   2a4c0:	88800015 	stw	r2,0(r17)
   2a4c4:	00bfffc4 	movi	r2,-1
   2a4c8:	003fe706 	br	2a468 <raise+0x58>

0002a4cc <signal>:
   2a4cc:	defffc04 	addi	sp,sp,-16
   2a4d0:	dc800215 	stw	r18,8(sp)
   2a4d4:	00c000f4 	movhi	r3,3
   2a4d8:	dfc00315 	stw	ra,12(sp)
   2a4dc:	dc400115 	stw	r17,4(sp)
   2a4e0:	dc000015 	stw	r16,0(sp)
   2a4e4:	20800830 	cmpltui	r2,r4,32
   2a4e8:	1c8a5e17 	ldw	r18,10616(r3)
   2a4ec:	10000e26 	beq	r2,zero,2a528 <signal+0x5c>
   2a4f0:	2021883a 	mov	r16,r4
   2a4f4:	9100b717 	ldw	r4,732(r18)
   2a4f8:	2823883a 	mov	r17,r5
   2a4fc:	20000e26 	beq	r4,zero,2a538 <signal+0x6c>
   2a500:	802090ba 	slli	r16,r16,2
   2a504:	2421883a 	add	r16,r4,r16
   2a508:	80800017 	ldw	r2,0(r16)
   2a50c:	84400015 	stw	r17,0(r16)
   2a510:	dfc00317 	ldw	ra,12(sp)
   2a514:	dc800217 	ldw	r18,8(sp)
   2a518:	dc400117 	ldw	r17,4(sp)
   2a51c:	dc000017 	ldw	r16,0(sp)
   2a520:	dec00404 	addi	sp,sp,16
   2a524:	f800283a 	ret
   2a528:	00800584 	movi	r2,22
   2a52c:	90800015 	stw	r2,0(r18)
   2a530:	00bfffc4 	movi	r2,-1
   2a534:	003ff606 	br	2a510 <signal+0x44>
   2a538:	9009883a 	mov	r4,r18
   2a53c:	01402004 	movi	r5,128
   2a540:	00254940 	call	25494 <_malloc_r>
   2a544:	9080b715 	stw	r2,732(r18)
   2a548:	1009883a 	mov	r4,r2
   2a54c:	10000526 	beq	r2,zero,2a564 <signal+0x98>
   2a550:	01802004 	movi	r6,128
   2a554:	000b883a 	mov	r5,zero
   2a558:	0025e440 	call	25e44 <memset>
   2a55c:	1009883a 	mov	r4,r2
   2a560:	003fe706 	br	2a500 <signal+0x34>
   2a564:	00bfffc4 	movi	r2,-1
   2a568:	003fe906 	br	2a510 <signal+0x44>

0002a56c <_init_signal>:
   2a56c:	defffe04 	addi	sp,sp,-8
   2a570:	008000f4 	movhi	r2,3
   2a574:	dc000015 	stw	r16,0(sp)
   2a578:	140a5e17 	ldw	r16,10616(r2)
   2a57c:	dfc00115 	stw	ra,4(sp)
   2a580:	8080b717 	ldw	r2,732(r16)
   2a584:	10000526 	beq	r2,zero,2a59c <_init_signal+0x30>
   2a588:	0005883a 	mov	r2,zero
   2a58c:	dfc00117 	ldw	ra,4(sp)
   2a590:	dc000017 	ldw	r16,0(sp)
   2a594:	dec00204 	addi	sp,sp,8
   2a598:	f800283a 	ret
   2a59c:	8009883a 	mov	r4,r16
   2a5a0:	01402004 	movi	r5,128
   2a5a4:	00254940 	call	25494 <_malloc_r>
   2a5a8:	8080b715 	stw	r2,732(r16)
   2a5ac:	1009883a 	mov	r4,r2
   2a5b0:	10000426 	beq	r2,zero,2a5c4 <_init_signal+0x58>
   2a5b4:	01802004 	movi	r6,128
   2a5b8:	000b883a 	mov	r5,zero
   2a5bc:	0025e440 	call	25e44 <memset>
   2a5c0:	003ff106 	br	2a588 <_init_signal+0x1c>
   2a5c4:	00bfffc4 	movi	r2,-1
   2a5c8:	003ff006 	br	2a58c <_init_signal+0x20>

0002a5cc <__sigtramp>:
   2a5cc:	defffd04 	addi	sp,sp,-12
   2a5d0:	dc400115 	stw	r17,4(sp)
   2a5d4:	00c000f4 	movhi	r3,3
   2a5d8:	dfc00215 	stw	ra,8(sp)
   2a5dc:	dc000015 	stw	r16,0(sp)
   2a5e0:	20800830 	cmpltui	r2,r4,32
   2a5e4:	1c4a5e17 	ldw	r17,10616(r3)
   2a5e8:	10002526 	beq	r2,zero,2a680 <__sigtramp+0xb4>
   2a5ec:	88c0b717 	ldw	r3,732(r17)
   2a5f0:	2021883a 	mov	r16,r4
   2a5f4:	18001326 	beq	r3,zero,2a644 <__sigtramp+0x78>
   2a5f8:	800890ba 	slli	r4,r16,2
   2a5fc:	1907883a 	add	r3,r3,r4
   2a600:	18800017 	ldw	r2,0(r3)
   2a604:	10000d26 	beq	r2,zero,2a63c <__sigtramp+0x70>
   2a608:	113fffe0 	cmpeqi	r4,r2,-1
   2a60c:	20001a1e 	bne	r4,zero,2a678 <__sigtramp+0xac>
   2a610:	11000060 	cmpeqi	r4,r2,1
   2a614:	2000161e 	bne	r4,zero,2a670 <__sigtramp+0xa4>
   2a618:	18000015 	stw	zero,0(r3)
   2a61c:	8009883a 	mov	r4,r16
   2a620:	103ee83a 	callr	r2
   2a624:	0005883a 	mov	r2,zero
   2a628:	dfc00217 	ldw	ra,8(sp)
   2a62c:	dc400117 	ldw	r17,4(sp)
   2a630:	dc000017 	ldw	r16,0(sp)
   2a634:	dec00304 	addi	sp,sp,12
   2a638:	f800283a 	ret
   2a63c:	00800044 	movi	r2,1
   2a640:	003ff906 	br	2a628 <__sigtramp+0x5c>
   2a644:	01402004 	movi	r5,128
   2a648:	8809883a 	mov	r4,r17
   2a64c:	00254940 	call	25494 <_malloc_r>
   2a650:	8880b715 	stw	r2,732(r17)
   2a654:	10000a26 	beq	r2,zero,2a680 <__sigtramp+0xb4>
   2a658:	01802004 	movi	r6,128
   2a65c:	000b883a 	mov	r5,zero
   2a660:	1009883a 	mov	r4,r2
   2a664:	0025e440 	call	25e44 <memset>
   2a668:	1007883a 	mov	r3,r2
   2a66c:	003fe206 	br	2a5f8 <__sigtramp+0x2c>
   2a670:	008000c4 	movi	r2,3
   2a674:	003fec06 	br	2a628 <__sigtramp+0x5c>
   2a678:	00800084 	movi	r2,2
   2a67c:	003fea06 	br	2a628 <__sigtramp+0x5c>
   2a680:	00bfffc4 	movi	r2,-1
   2a684:	003fe806 	br	2a628 <__sigtramp+0x5c>

0002a688 <_kill_r>:
   2a688:	2807883a 	mov	r3,r5
   2a68c:	defffe04 	addi	sp,sp,-8
   2a690:	dc000015 	stw	r16,0(sp)
   2a694:	008000f4 	movhi	r2,3
   2a698:	300b883a 	mov	r5,r6
   2a69c:	2021883a 	mov	r16,r4
   2a6a0:	1809883a 	mov	r4,r3
   2a6a4:	dfc00115 	stw	ra,4(sp)
   2a6a8:	10117f15 	stw	zero,17916(r2)
   2a6ac:	002e1280 	call	2e128 <kill>
   2a6b0:	10ffffd8 	cmpnei	r3,r2,-1
   2a6b4:	18000426 	beq	r3,zero,2a6c8 <_kill_r+0x40>
   2a6b8:	dfc00117 	ldw	ra,4(sp)
   2a6bc:	dc000017 	ldw	r16,0(sp)
   2a6c0:	dec00204 	addi	sp,sp,8
   2a6c4:	f800283a 	ret
   2a6c8:	00c000f4 	movhi	r3,3
   2a6cc:	18d17f17 	ldw	r3,17916(r3)
   2a6d0:	183ff926 	beq	r3,zero,2a6b8 <_kill_r+0x30>
   2a6d4:	80c00015 	stw	r3,0(r16)
   2a6d8:	dfc00117 	ldw	ra,4(sp)
   2a6dc:	dc000017 	ldw	r16,0(sp)
   2a6e0:	dec00204 	addi	sp,sp,8
   2a6e4:	f800283a 	ret

0002a6e8 <_getpid_r>:
   2a6e8:	002de601 	jmpi	2de60 <getpid>

0002a6ec <__udivdi3>:
   2a6ec:	defff504 	addi	sp,sp,-44
   2a6f0:	dd000515 	stw	r20,20(sp)
   2a6f4:	dc800315 	stw	r18,12(sp)
   2a6f8:	dfc00a15 	stw	ra,40(sp)
   2a6fc:	df000915 	stw	fp,36(sp)
   2a700:	ddc00815 	stw	r23,32(sp)
   2a704:	dd800715 	stw	r22,28(sp)
   2a708:	dd400615 	stw	r21,24(sp)
   2a70c:	dcc00415 	stw	r19,16(sp)
   2a710:	dc400215 	stw	r17,8(sp)
   2a714:	dc000115 	stw	r16,4(sp)
   2a718:	2029883a 	mov	r20,r4
   2a71c:	2825883a 	mov	r18,r5
   2a720:	3800461e 	bne	r7,zero,2a83c <__udivdi3+0x150>
   2a724:	3823883a 	mov	r17,r7
   2a728:	3021883a 	mov	r16,r6
   2a72c:	2027883a 	mov	r19,r4
   2a730:	2980622e 	bgeu	r5,r6,2a8bc <__udivdi3+0x1d0>
   2a734:	00bfffd4 	movui	r2,65535
   2a738:	282b883a 	mov	r21,r5
   2a73c:	1180aa2e 	bgeu	r2,r6,2a9e8 <__udivdi3+0x2fc>
   2a740:	00804034 	movhi	r2,256
   2a744:	30815a36 	bltu	r6,r2,2acb0 <__udivdi3+0x5c4>
   2a748:	3006d63a 	srli	r3,r6,24
   2a74c:	04400604 	movi	r17,24
   2a750:	008000f4 	movhi	r2,3
   2a754:	1885883a 	add	r2,r3,r2
   2a758:	10830c03 	ldbu	r2,3120(r2)
   2a75c:	00c00804 	movi	r3,32
   2a760:	1463883a 	add	r17,r2,r17
   2a764:	1c45c83a 	sub	r2,r3,r17
   2a768:	1c400526 	beq	r3,r17,2a780 <__udivdi3+0x94>
   2a76c:	9086983a 	sll	r3,r18,r2
   2a770:	a462d83a 	srl	r17,r20,r17
   2a774:	30a0983a 	sll	r16,r6,r2
   2a778:	a0a6983a 	sll	r19,r20,r2
   2a77c:	88eab03a 	or	r21,r17,r3
   2a780:	802cd43a 	srli	r22,r16,16
   2a784:	a809883a 	mov	r4,r21
   2a788:	853fffcc 	andi	r20,r16,65535
   2a78c:	b00b883a 	mov	r5,r22
   2a790:	002b4280 	call	2b428 <__umodsi3>
   2a794:	a809883a 	mov	r4,r21
   2a798:	b00b883a 	mov	r5,r22
   2a79c:	1025883a 	mov	r18,r2
   2a7a0:	002b3c40 	call	2b3c4 <__udivsi3>
   2a7a4:	a009883a 	mov	r4,r20
   2a7a8:	100b883a 	mov	r5,r2
   2a7ac:	102b883a 	mov	r21,r2
   2a7b0:	002b4840 	call	2b484 <__mulsi3>
   2a7b4:	9024943a 	slli	r18,r18,16
   2a7b8:	9808d43a 	srli	r4,r19,16
   2a7bc:	9108b03a 	or	r4,r18,r4
   2a7c0:	2080052e 	bgeu	r4,r2,2a7d8 <__udivdi3+0xec>
   2a7c4:	2409883a 	add	r4,r4,r16
   2a7c8:	a8ffffc4 	addi	r3,r21,-1
   2a7cc:	24000136 	bltu	r4,r16,2a7d4 <__udivdi3+0xe8>
   2a7d0:	20814836 	bltu	r4,r2,2acf4 <__udivdi3+0x608>
   2a7d4:	182b883a 	mov	r21,r3
   2a7d8:	20a3c83a 	sub	r17,r4,r2
   2a7dc:	8809883a 	mov	r4,r17
   2a7e0:	b00b883a 	mov	r5,r22
   2a7e4:	002b4280 	call	2b428 <__umodsi3>
   2a7e8:	8809883a 	mov	r4,r17
   2a7ec:	1023883a 	mov	r17,r2
   2a7f0:	b00b883a 	mov	r5,r22
   2a7f4:	8822943a 	slli	r17,r17,16
   2a7f8:	002b3c40 	call	2b3c4 <__udivsi3>
   2a7fc:	100b883a 	mov	r5,r2
   2a800:	a009883a 	mov	r4,r20
   2a804:	9cffffcc 	andi	r19,r19,65535
   2a808:	1025883a 	mov	r18,r2
   2a80c:	8ce6b03a 	or	r19,r17,r19
   2a810:	002b4840 	call	2b484 <__mulsi3>
   2a814:	9880052e 	bgeu	r19,r2,2a82c <__udivdi3+0x140>
   2a818:	84e7883a 	add	r19,r16,r19
   2a81c:	90ffffc4 	addi	r3,r18,-1
   2a820:	9c000136 	bltu	r19,r16,2a828 <__udivdi3+0x13c>
   2a824:	98813136 	bltu	r19,r2,2acec <__udivdi3+0x600>
   2a828:	1825883a 	mov	r18,r3
   2a82c:	a80c943a 	slli	r6,r21,16
   2a830:	0007883a 	mov	r3,zero
   2a834:	3484b03a 	or	r2,r6,r18
   2a838:	00000306 	br	2a848 <__udivdi3+0x15c>
   2a83c:	29c00e2e 	bgeu	r5,r7,2a878 <__udivdi3+0x18c>
   2a840:	0007883a 	mov	r3,zero
   2a844:	0005883a 	mov	r2,zero
   2a848:	dfc00a17 	ldw	ra,40(sp)
   2a84c:	df000917 	ldw	fp,36(sp)
   2a850:	ddc00817 	ldw	r23,32(sp)
   2a854:	dd800717 	ldw	r22,28(sp)
   2a858:	dd400617 	ldw	r21,24(sp)
   2a85c:	dd000517 	ldw	r20,20(sp)
   2a860:	dcc00417 	ldw	r19,16(sp)
   2a864:	dc800317 	ldw	r18,12(sp)
   2a868:	dc400217 	ldw	r17,8(sp)
   2a86c:	dc000117 	ldw	r16,4(sp)
   2a870:	dec00b04 	addi	sp,sp,44
   2a874:	f800283a 	ret
   2a878:	00bfffd4 	movui	r2,65535
   2a87c:	11c05f2e 	bgeu	r2,r7,2a9fc <__udivdi3+0x310>
   2a880:	00804034 	movhi	r2,256
   2a884:	3880fc36 	bltu	r7,r2,2ac78 <__udivdi3+0x58c>
   2a888:	3804d63a 	srli	r2,r7,24
   2a88c:	01000604 	movi	r4,24
   2a890:	00c000f4 	movhi	r3,3
   2a894:	10c7883a 	add	r3,r2,r3
   2a898:	18830c03 	ldbu	r2,3120(r3)
   2a89c:	00c00804 	movi	r3,32
   2a8a0:	1105883a 	add	r2,r2,r4
   2a8a4:	18a3c83a 	sub	r17,r3,r2
   2a8a8:	1880901e 	bne	r3,r2,2aaec <__udivdi3+0x400>
   2a8ac:	3c80f736 	bltu	r7,r18,2ac8c <__udivdi3+0x5a0>
   2a8b0:	a185403a 	cmpgeu	r2,r20,r6
   2a8b4:	0007883a 	mov	r3,zero
   2a8b8:	003fe306 	br	2a848 <__udivdi3+0x15c>
   2a8bc:	3000041e 	bne	r6,zero,2a8d0 <__udivdi3+0x1e4>
   2a8c0:	000b883a 	mov	r5,zero
   2a8c4:	01000044 	movi	r4,1
   2a8c8:	002b3c40 	call	2b3c4 <__udivsi3>
   2a8cc:	1021883a 	mov	r16,r2
   2a8d0:	00bfffd4 	movui	r2,65535
   2a8d4:	14003f2e 	bgeu	r2,r16,2a9d4 <__udivdi3+0x2e8>
   2a8d8:	00804034 	movhi	r2,256
   2a8dc:	8080f136 	bltu	r16,r2,2aca4 <__udivdi3+0x5b8>
   2a8e0:	8006d63a 	srli	r3,r16,24
   2a8e4:	04400604 	movi	r17,24
   2a8e8:	008000f4 	movhi	r2,3
   2a8ec:	1885883a 	add	r2,r3,r2
   2a8f0:	10830c03 	ldbu	r2,3120(r2)
   2a8f4:	00c00804 	movi	r3,32
   2a8f8:	1463883a 	add	r17,r2,r17
   2a8fc:	1c45c83a 	sub	r2,r3,r17
   2a900:	1c40431e 	bne	r3,r17,2aa10 <__udivdi3+0x324>
   2a904:	802cd43a 	srli	r22,r16,16
   2a908:	9423c83a 	sub	r17,r18,r16
   2a90c:	853fffcc 	andi	r20,r16,65535
   2a910:	00c00044 	movi	r3,1
   2a914:	b00b883a 	mov	r5,r22
   2a918:	8809883a 	mov	r4,r17
   2a91c:	d8c00015 	stw	r3,0(sp)
   2a920:	002b4280 	call	2b428 <__umodsi3>
   2a924:	b00b883a 	mov	r5,r22
   2a928:	8809883a 	mov	r4,r17
   2a92c:	1025883a 	mov	r18,r2
   2a930:	002b3c40 	call	2b3c4 <__udivsi3>
   2a934:	1009883a 	mov	r4,r2
   2a938:	a00b883a 	mov	r5,r20
   2a93c:	102b883a 	mov	r21,r2
   2a940:	002b4840 	call	2b484 <__mulsi3>
   2a944:	9024943a 	slli	r18,r18,16
   2a948:	9808d43a 	srli	r4,r19,16
   2a94c:	d8c00017 	ldw	r3,0(sp)
   2a950:	9108b03a 	or	r4,r18,r4
   2a954:	2080052e 	bgeu	r4,r2,2a96c <__udivdi3+0x280>
   2a958:	2409883a 	add	r4,r4,r16
   2a95c:	a97fffc4 	addi	r5,r21,-1
   2a960:	24000136 	bltu	r4,r16,2a968 <__udivdi3+0x27c>
   2a964:	2080e636 	bltu	r4,r2,2ad00 <__udivdi3+0x614>
   2a968:	282b883a 	mov	r21,r5
   2a96c:	20a3c83a 	sub	r17,r4,r2
   2a970:	8809883a 	mov	r4,r17
   2a974:	b00b883a 	mov	r5,r22
   2a978:	d8c00015 	stw	r3,0(sp)
   2a97c:	002b4280 	call	2b428 <__umodsi3>
   2a980:	8809883a 	mov	r4,r17
   2a984:	1023883a 	mov	r17,r2
   2a988:	b00b883a 	mov	r5,r22
   2a98c:	8822943a 	slli	r17,r17,16
   2a990:	002b3c40 	call	2b3c4 <__udivsi3>
   2a994:	a00b883a 	mov	r5,r20
   2a998:	1009883a 	mov	r4,r2
   2a99c:	9cffffcc 	andi	r19,r19,65535
   2a9a0:	1025883a 	mov	r18,r2
   2a9a4:	8ce6b03a 	or	r19,r17,r19
   2a9a8:	002b4840 	call	2b484 <__mulsi3>
   2a9ac:	d8c00017 	ldw	r3,0(sp)
   2a9b0:	9880052e 	bgeu	r19,r2,2a9c8 <__udivdi3+0x2dc>
   2a9b4:	84e7883a 	add	r19,r16,r19
   2a9b8:	913fffc4 	addi	r4,r18,-1
   2a9bc:	9c000136 	bltu	r19,r16,2a9c4 <__udivdi3+0x2d8>
   2a9c0:	9880c836 	bltu	r19,r2,2ace4 <__udivdi3+0x5f8>
   2a9c4:	2025883a 	mov	r18,r4
   2a9c8:	a80c943a 	slli	r6,r21,16
   2a9cc:	3484b03a 	or	r2,r6,r18
   2a9d0:	003f9d06 	br	2a848 <__udivdi3+0x15c>
   2a9d4:	80804030 	cmpltui	r2,r16,256
   2a9d8:	1000b81e 	bne	r2,zero,2acbc <__udivdi3+0x5d0>
   2a9dc:	8006d23a 	srli	r3,r16,8
   2a9e0:	04400204 	movi	r17,8
   2a9e4:	003fc006 	br	2a8e8 <__udivdi3+0x1fc>
   2a9e8:	30804030 	cmpltui	r2,r6,256
   2a9ec:	1000a51e 	bne	r2,zero,2ac84 <__udivdi3+0x598>
   2a9f0:	3006d23a 	srli	r3,r6,8
   2a9f4:	04400204 	movi	r17,8
   2a9f8:	003f5506 	br	2a750 <__udivdi3+0x64>
   2a9fc:	38804030 	cmpltui	r2,r7,256
   2aa00:	1000a51e 	bne	r2,zero,2ac98 <__udivdi3+0x5ac>
   2aa04:	3804d23a 	srli	r2,r7,8
   2aa08:	01000204 	movi	r4,8
   2aa0c:	003fa006 	br	2a890 <__udivdi3+0x1a4>
   2aa10:	80a0983a 	sll	r16,r16,r2
   2aa14:	946ed83a 	srl	r23,r18,r17
   2aa18:	9086983a 	sll	r3,r18,r2
   2aa1c:	802cd43a 	srli	r22,r16,16
   2aa20:	a462d83a 	srl	r17,r20,r17
   2aa24:	b809883a 	mov	r4,r23
   2aa28:	b00b883a 	mov	r5,r22
   2aa2c:	88eab03a 	or	r21,r17,r3
   2aa30:	a0a6983a 	sll	r19,r20,r2
   2aa34:	002b4280 	call	2b428 <__umodsi3>
   2aa38:	b809883a 	mov	r4,r23
   2aa3c:	b00b883a 	mov	r5,r22
   2aa40:	1025883a 	mov	r18,r2
   2aa44:	853fffcc 	andi	r20,r16,65535
   2aa48:	002b3c40 	call	2b3c4 <__udivsi3>
   2aa4c:	a009883a 	mov	r4,r20
   2aa50:	100b883a 	mov	r5,r2
   2aa54:	102f883a 	mov	r23,r2
   2aa58:	002b4840 	call	2b484 <__mulsi3>
   2aa5c:	9024943a 	slli	r18,r18,16
   2aa60:	a808d43a 	srli	r4,r21,16
   2aa64:	9108b03a 	or	r4,r18,r4
   2aa68:	2080062e 	bgeu	r4,r2,2aa84 <__udivdi3+0x398>
   2aa6c:	2409883a 	add	r4,r4,r16
   2aa70:	b8ffffc4 	addi	r3,r23,-1
   2aa74:	24009936 	bltu	r4,r16,2acdc <__udivdi3+0x5f0>
   2aa78:	2080982e 	bgeu	r4,r2,2acdc <__udivdi3+0x5f0>
   2aa7c:	bdffff84 	addi	r23,r23,-2
   2aa80:	2409883a 	add	r4,r4,r16
   2aa84:	20a3c83a 	sub	r17,r4,r2
   2aa88:	8809883a 	mov	r4,r17
   2aa8c:	b00b883a 	mov	r5,r22
   2aa90:	002b4280 	call	2b428 <__umodsi3>
   2aa94:	1025883a 	mov	r18,r2
   2aa98:	8809883a 	mov	r4,r17
   2aa9c:	b00b883a 	mov	r5,r22
   2aaa0:	9024943a 	slli	r18,r18,16
   2aaa4:	002b3c40 	call	2b3c4 <__udivsi3>
   2aaa8:	100b883a 	mov	r5,r2
   2aaac:	a009883a 	mov	r4,r20
   2aab0:	ac7fffcc 	andi	r17,r21,65535
   2aab4:	1039883a 	mov	fp,r2
   2aab8:	9462b03a 	or	r17,r18,r17
   2aabc:	002b4840 	call	2b484 <__mulsi3>
   2aac0:	8880062e 	bgeu	r17,r2,2aadc <__udivdi3+0x3f0>
   2aac4:	8c23883a 	add	r17,r17,r16
   2aac8:	e0ffffc4 	addi	r3,fp,-1
   2aacc:	8c007f36 	bltu	r17,r16,2accc <__udivdi3+0x5e0>
   2aad0:	88807e2e 	bgeu	r17,r2,2accc <__udivdi3+0x5e0>
   2aad4:	e73fff84 	addi	fp,fp,-2
   2aad8:	8c23883a 	add	r17,r17,r16
   2aadc:	b806943a 	slli	r3,r23,16
   2aae0:	88a3c83a 	sub	r17,r17,r2
   2aae4:	1f06b03a 	or	r3,r3,fp
   2aae8:	003f8a06 	br	2a914 <__udivdi3+0x228>
   2aaec:	30a6d83a 	srl	r19,r6,r2
   2aaf0:	3c4e983a 	sll	r7,r7,r17
   2aaf4:	90a0d83a 	srl	r16,r18,r2
   2aaf8:	9446983a 	sll	r3,r18,r17
   2aafc:	99e6b03a 	or	r19,r19,r7
   2ab00:	a084d83a 	srl	r2,r20,r2
   2ab04:	9838d43a 	srli	fp,r19,16
   2ab08:	8009883a 	mov	r4,r16
   2ab0c:	10eab03a 	or	r21,r2,r3
   2ab10:	e00b883a 	mov	r5,fp
   2ab14:	346c983a 	sll	r22,r6,r17
   2ab18:	dd400015 	stw	r21,0(sp)
   2ab1c:	002b4280 	call	2b428 <__umodsi3>
   2ab20:	8009883a 	mov	r4,r16
   2ab24:	e00b883a 	mov	r5,fp
   2ab28:	102f883a 	mov	r23,r2
   2ab2c:	9cbfffcc 	andi	r18,r19,65535
   2ab30:	002b3c40 	call	2b3c4 <__udivsi3>
   2ab34:	9009883a 	mov	r4,r18
   2ab38:	100b883a 	mov	r5,r2
   2ab3c:	1021883a 	mov	r16,r2
   2ab40:	002b4840 	call	2b484 <__mulsi3>
   2ab44:	b82e943a 	slli	r23,r23,16
   2ab48:	a808d43a 	srli	r4,r21,16
   2ab4c:	b908b03a 	or	r4,r23,r4
   2ab50:	2080062e 	bgeu	r4,r2,2ab6c <__udivdi3+0x480>
   2ab54:	24c9883a 	add	r4,r4,r19
   2ab58:	817fffc4 	addi	r5,r16,-1
   2ab5c:	24c05d36 	bltu	r4,r19,2acd4 <__udivdi3+0x5e8>
   2ab60:	20805c2e 	bgeu	r4,r2,2acd4 <__udivdi3+0x5e8>
   2ab64:	843fff84 	addi	r16,r16,-2
   2ab68:	24c9883a 	add	r4,r4,r19
   2ab6c:	20abc83a 	sub	r21,r4,r2
   2ab70:	a809883a 	mov	r4,r21
   2ab74:	e00b883a 	mov	r5,fp
   2ab78:	002b4280 	call	2b428 <__umodsi3>
   2ab7c:	a809883a 	mov	r4,r21
   2ab80:	e00b883a 	mov	r5,fp
   2ab84:	102b883a 	mov	r21,r2
   2ab88:	002b3c40 	call	2b3c4 <__udivsi3>
   2ab8c:	9009883a 	mov	r4,r18
   2ab90:	100b883a 	mov	r5,r2
   2ab94:	102f883a 	mov	r23,r2
   2ab98:	002b4840 	call	2b484 <__mulsi3>
   2ab9c:	d8c00017 	ldw	r3,0(sp)
   2aba0:	a82a943a 	slli	r21,r21,16
   2aba4:	100d883a 	mov	r6,r2
   2aba8:	1cbfffcc 	andi	r18,r3,65535
   2abac:	aca4b03a 	or	r18,r21,r18
   2abb0:	9080062e 	bgeu	r18,r2,2abcc <__udivdi3+0x4e0>
   2abb4:	94e5883a 	add	r18,r18,r19
   2abb8:	b8bfffc4 	addi	r2,r23,-1
   2abbc:	94c04136 	bltu	r18,r19,2acc4 <__udivdi3+0x5d8>
   2abc0:	9180402e 	bgeu	r18,r6,2acc4 <__udivdi3+0x5d8>
   2abc4:	bdffff84 	addi	r23,r23,-2
   2abc8:	94e5883a 	add	r18,r18,r19
   2abcc:	8004943a 	slli	r2,r16,16
   2abd0:	bd7fffcc 	andi	r21,r23,65535
   2abd4:	b73fffcc 	andi	fp,r22,65535
   2abd8:	15e0b03a 	or	r16,r2,r23
   2abdc:	8026d43a 	srli	r19,r16,16
   2abe0:	a809883a 	mov	r4,r21
   2abe4:	e00b883a 	mov	r5,fp
   2abe8:	91a5c83a 	sub	r18,r18,r6
   2abec:	b02cd43a 	srli	r22,r22,16
   2abf0:	002b4840 	call	2b484 <__mulsi3>
   2abf4:	9809883a 	mov	r4,r19
   2abf8:	e00b883a 	mov	r5,fp
   2abfc:	102f883a 	mov	r23,r2
   2ac00:	002b4840 	call	2b484 <__mulsi3>
   2ac04:	9809883a 	mov	r4,r19
   2ac08:	b00b883a 	mov	r5,r22
   2ac0c:	1027883a 	mov	r19,r2
   2ac10:	002b4840 	call	2b484 <__mulsi3>
   2ac14:	a809883a 	mov	r4,r21
   2ac18:	b00b883a 	mov	r5,r22
   2ac1c:	102b883a 	mov	r21,r2
   2ac20:	002b4840 	call	2b484 <__mulsi3>
   2ac24:	b806d43a 	srli	r3,r23,16
   2ac28:	14c5883a 	add	r2,r2,r19
   2ac2c:	1887883a 	add	r3,r3,r2
   2ac30:	1cc0022e 	bgeu	r3,r19,2ac3c <__udivdi3+0x550>
   2ac34:	00800074 	movhi	r2,1
   2ac38:	a8ab883a 	add	r21,r21,r2
   2ac3c:	1804d43a 	srli	r2,r3,16
   2ac40:	156b883a 	add	r21,r2,r21
   2ac44:	95400936 	bltu	r18,r21,2ac6c <__udivdi3+0x580>
   2ac48:	95400326 	beq	r18,r21,2ac58 <__udivdi3+0x56c>
   2ac4c:	8005883a 	mov	r2,r16
   2ac50:	0007883a 	mov	r3,zero
   2ac54:	003efc06 	br	2a848 <__udivdi3+0x15c>
   2ac58:	1806943a 	slli	r3,r3,16
   2ac5c:	a44c983a 	sll	r6,r20,r17
   2ac60:	bdffffcc 	andi	r23,r23,65535
   2ac64:	1dc7883a 	add	r3,r3,r23
   2ac68:	30fff82e 	bgeu	r6,r3,2ac4c <__udivdi3+0x560>
   2ac6c:	80bfffc4 	addi	r2,r16,-1
   2ac70:	0007883a 	mov	r3,zero
   2ac74:	003ef406 	br	2a848 <__udivdi3+0x15c>
   2ac78:	3804d43a 	srli	r2,r7,16
   2ac7c:	01000404 	movi	r4,16
   2ac80:	003f0306 	br	2a890 <__udivdi3+0x1a4>
   2ac84:	3007883a 	mov	r3,r6
   2ac88:	003eb106 	br	2a750 <__udivdi3+0x64>
   2ac8c:	0007883a 	mov	r3,zero
   2ac90:	00800044 	movi	r2,1
   2ac94:	003eec06 	br	2a848 <__udivdi3+0x15c>
   2ac98:	3805883a 	mov	r2,r7
   2ac9c:	0009883a 	mov	r4,zero
   2aca0:	003efb06 	br	2a890 <__udivdi3+0x1a4>
   2aca4:	8006d43a 	srli	r3,r16,16
   2aca8:	04400404 	movi	r17,16
   2acac:	003f0e06 	br	2a8e8 <__udivdi3+0x1fc>
   2acb0:	3006d43a 	srli	r3,r6,16
   2acb4:	04400404 	movi	r17,16
   2acb8:	003ea506 	br	2a750 <__udivdi3+0x64>
   2acbc:	8007883a 	mov	r3,r16
   2acc0:	003f0906 	br	2a8e8 <__udivdi3+0x1fc>
   2acc4:	102f883a 	mov	r23,r2
   2acc8:	003fc006 	br	2abcc <__udivdi3+0x4e0>
   2accc:	1839883a 	mov	fp,r3
   2acd0:	003f8206 	br	2aadc <__udivdi3+0x3f0>
   2acd4:	2821883a 	mov	r16,r5
   2acd8:	003fa406 	br	2ab6c <__udivdi3+0x480>
   2acdc:	182f883a 	mov	r23,r3
   2ace0:	003f6806 	br	2aa84 <__udivdi3+0x398>
   2ace4:	94bfff84 	addi	r18,r18,-2
   2ace8:	003f3706 	br	2a9c8 <__udivdi3+0x2dc>
   2acec:	94bfff84 	addi	r18,r18,-2
   2acf0:	003ece06 	br	2a82c <__udivdi3+0x140>
   2acf4:	ad7fff84 	addi	r21,r21,-2
   2acf8:	2409883a 	add	r4,r4,r16
   2acfc:	003eb606 	br	2a7d8 <__udivdi3+0xec>
   2ad00:	ad7fff84 	addi	r21,r21,-2
   2ad04:	2409883a 	add	r4,r4,r16
   2ad08:	003f1806 	br	2a96c <__udivdi3+0x280>

0002ad0c <__umoddi3>:
   2ad0c:	defff304 	addi	sp,sp,-52
   2ad10:	dc400415 	stw	r17,16(sp)
   2ad14:	dc000315 	stw	r16,12(sp)
   2ad18:	dfc00c15 	stw	ra,48(sp)
   2ad1c:	df000b15 	stw	fp,44(sp)
   2ad20:	ddc00a15 	stw	r23,40(sp)
   2ad24:	dd800915 	stw	r22,36(sp)
   2ad28:	dd400815 	stw	r21,32(sp)
   2ad2c:	dd000715 	stw	r20,28(sp)
   2ad30:	dcc00615 	stw	r19,24(sp)
   2ad34:	dc800515 	stw	r18,20(sp)
   2ad38:	2823883a 	mov	r17,r5
   2ad3c:	2021883a 	mov	r16,r4
   2ad40:	38003b1e 	bne	r7,zero,2ae30 <__umoddi3+0x124>
   2ad44:	3825883a 	mov	r18,r7
   2ad48:	3029883a 	mov	r20,r6
   2ad4c:	2027883a 	mov	r19,r4
   2ad50:	29805b2e 	bgeu	r5,r6,2aec0 <__umoddi3+0x1b4>
   2ad54:	00bfffd4 	movui	r2,65535
   2ad58:	282d883a 	mov	r22,r5
   2ad5c:	11809a2e 	bgeu	r2,r6,2afc8 <__umoddi3+0x2bc>
   2ad60:	00804034 	movhi	r2,256
   2ad64:	30814436 	bltu	r6,r2,2b278 <__umoddi3+0x56c>
   2ad68:	3006d63a 	srli	r3,r6,24
   2ad6c:	04800604 	movi	r18,24
   2ad70:	008000f4 	movhi	r2,3
   2ad74:	1885883a 	add	r2,r3,r2
   2ad78:	10830c03 	ldbu	r2,3120(r2)
   2ad7c:	00c00804 	movi	r3,32
   2ad80:	1485883a 	add	r2,r2,r18
   2ad84:	18a5c83a 	sub	r18,r3,r2
   2ad88:	18800526 	beq	r3,r2,2ada0 <__umoddi3+0x94>
   2ad8c:	8ca2983a 	sll	r17,r17,r18
   2ad90:	8084d83a 	srl	r2,r16,r2
   2ad94:	34a8983a 	sll	r20,r6,r18
   2ad98:	84a6983a 	sll	r19,r16,r18
   2ad9c:	146cb03a 	or	r22,r2,r17
   2ada0:	a02ed43a 	srli	r23,r20,16
   2ada4:	b009883a 	mov	r4,r22
   2ada8:	a57fffcc 	andi	r21,r20,65535
   2adac:	b80b883a 	mov	r5,r23
   2adb0:	002b4280 	call	2b428 <__umodsi3>
   2adb4:	b80b883a 	mov	r5,r23
   2adb8:	b009883a 	mov	r4,r22
   2adbc:	1023883a 	mov	r17,r2
   2adc0:	002b3c40 	call	2b3c4 <__udivsi3>
   2adc4:	a809883a 	mov	r4,r21
   2adc8:	100b883a 	mov	r5,r2
   2adcc:	002b4840 	call	2b484 <__mulsi3>
   2add0:	8822943a 	slli	r17,r17,16
   2add4:	9808d43a 	srli	r4,r19,16
   2add8:	8908b03a 	or	r4,r17,r4
   2addc:	2080042e 	bgeu	r4,r2,2adf0 <__umoddi3+0xe4>
   2ade0:	2509883a 	add	r4,r4,r20
   2ade4:	25000236 	bltu	r4,r20,2adf0 <__umoddi3+0xe4>
   2ade8:	2080012e 	bgeu	r4,r2,2adf0 <__umoddi3+0xe4>
   2adec:	2509883a 	add	r4,r4,r20
   2adf0:	20a1c83a 	sub	r16,r4,r2
   2adf4:	b80b883a 	mov	r5,r23
   2adf8:	8009883a 	mov	r4,r16
   2adfc:	002b4280 	call	2b428 <__umodsi3>
   2ae00:	b80b883a 	mov	r5,r23
   2ae04:	8009883a 	mov	r4,r16
   2ae08:	1023883a 	mov	r17,r2
   2ae0c:	002b3c40 	call	2b3c4 <__udivsi3>
   2ae10:	8822943a 	slli	r17,r17,16
   2ae14:	100b883a 	mov	r5,r2
   2ae18:	a809883a 	mov	r4,r21
   2ae1c:	002b4840 	call	2b484 <__mulsi3>
   2ae20:	98ffffcc 	andi	r3,r19,65535
   2ae24:	88c6b03a 	or	r3,r17,r3
   2ae28:	18805e2e 	bgeu	r3,r2,2afa4 <__umoddi3+0x298>
   2ae2c:	00005906 	br	2af94 <__umoddi3+0x288>
   2ae30:	2005883a 	mov	r2,r4
   2ae34:	29c00d2e 	bgeu	r5,r7,2ae6c <__umoddi3+0x160>
   2ae38:	2807883a 	mov	r3,r5
   2ae3c:	dfc00c17 	ldw	ra,48(sp)
   2ae40:	df000b17 	ldw	fp,44(sp)
   2ae44:	ddc00a17 	ldw	r23,40(sp)
   2ae48:	dd800917 	ldw	r22,36(sp)
   2ae4c:	dd400817 	ldw	r21,32(sp)
   2ae50:	dd000717 	ldw	r20,28(sp)
   2ae54:	dcc00617 	ldw	r19,24(sp)
   2ae58:	dc800517 	ldw	r18,20(sp)
   2ae5c:	dc400417 	ldw	r17,16(sp)
   2ae60:	dc000317 	ldw	r16,12(sp)
   2ae64:	dec00d04 	addi	sp,sp,52
   2ae68:	f800283a 	ret
   2ae6c:	013fffd4 	movui	r4,65535
   2ae70:	2807883a 	mov	r3,r5
   2ae74:	21c0592e 	bgeu	r4,r7,2afdc <__umoddi3+0x2d0>
   2ae78:	01004034 	movhi	r4,256
   2ae7c:	39010336 	bltu	r7,r4,2b28c <__umoddi3+0x580>
   2ae80:	3808d63a 	srli	r4,r7,24
   2ae84:	02000604 	movi	r8,24
   2ae88:	014000f4 	movhi	r5,3
   2ae8c:	214b883a 	add	r5,r4,r5
   2ae90:	2d030c03 	ldbu	r20,3120(r5)
   2ae94:	01000804 	movi	r4,32
   2ae98:	a229883a 	add	r20,r20,r8
   2ae9c:	252bc83a 	sub	r21,r4,r20
   2aea0:	2500531e 	bne	r4,r20,2aff0 <__umoddi3+0x2e4>
   2aea4:	3c400136 	bltu	r7,r17,2aeac <__umoddi3+0x1a0>
   2aea8:	81bfe436 	bltu	r16,r6,2ae3c <__umoddi3+0x130>
   2aeac:	8185c83a 	sub	r2,r16,r6
   2aeb0:	89cfc83a 	sub	r7,r17,r7
   2aeb4:	8087803a 	cmpltu	r3,r16,r2
   2aeb8:	38c7c83a 	sub	r3,r7,r3
   2aebc:	003fdf06 	br	2ae3c <__umoddi3+0x130>
   2aec0:	3000041e 	bne	r6,zero,2aed4 <__umoddi3+0x1c8>
   2aec4:	000b883a 	mov	r5,zero
   2aec8:	01000044 	movi	r4,1
   2aecc:	002b3c40 	call	2b3c4 <__udivsi3>
   2aed0:	1029883a 	mov	r20,r2
   2aed4:	00bfffd4 	movui	r2,65535
   2aed8:	1500362e 	bgeu	r2,r20,2afb4 <__umoddi3+0x2a8>
   2aedc:	00804034 	movhi	r2,256
   2aee0:	a080ed36 	bltu	r20,r2,2b298 <__umoddi3+0x58c>
   2aee4:	a006d63a 	srli	r3,r20,24
   2aee8:	04800604 	movi	r18,24
   2aeec:	008000f4 	movhi	r2,3
   2aef0:	1885883a 	add	r2,r3,r2
   2aef4:	15830c03 	ldbu	r22,3120(r2)
   2aef8:	00800804 	movi	r2,32
   2aefc:	b4ad883a 	add	r22,r22,r18
   2af00:	15a5c83a 	sub	r18,r2,r22
   2af04:	1580a51e 	bne	r2,r22,2b19c <__umoddi3+0x490>
   2af08:	a02ed43a 	srli	r23,r20,16
   2af0c:	8d23c83a 	sub	r17,r17,r20
   2af10:	a57fffcc 	andi	r21,r20,65535
   2af14:	8809883a 	mov	r4,r17
   2af18:	b80b883a 	mov	r5,r23
   2af1c:	002b4280 	call	2b428 <__umodsi3>
   2af20:	8809883a 	mov	r4,r17
   2af24:	b80b883a 	mov	r5,r23
   2af28:	1023883a 	mov	r17,r2
   2af2c:	002b3c40 	call	2b3c4 <__udivsi3>
   2af30:	1009883a 	mov	r4,r2
   2af34:	a80b883a 	mov	r5,r21
   2af38:	002b4840 	call	2b484 <__mulsi3>
   2af3c:	8822943a 	slli	r17,r17,16
   2af40:	9808d43a 	srli	r4,r19,16
   2af44:	8908b03a 	or	r4,r17,r4
   2af48:	2080032e 	bgeu	r4,r2,2af58 <__umoddi3+0x24c>
   2af4c:	2509883a 	add	r4,r4,r20
   2af50:	25000136 	bltu	r4,r20,2af58 <__umoddi3+0x24c>
   2af54:	2080dc36 	bltu	r4,r2,2b2c8 <__umoddi3+0x5bc>
   2af58:	20a1c83a 	sub	r16,r4,r2
   2af5c:	b80b883a 	mov	r5,r23
   2af60:	8009883a 	mov	r4,r16
   2af64:	002b4280 	call	2b428 <__umodsi3>
   2af68:	b80b883a 	mov	r5,r23
   2af6c:	8009883a 	mov	r4,r16
   2af70:	1023883a 	mov	r17,r2
   2af74:	8822943a 	slli	r17,r17,16
   2af78:	002b3c40 	call	2b3c4 <__udivsi3>
   2af7c:	a80b883a 	mov	r5,r21
   2af80:	1009883a 	mov	r4,r2
   2af84:	002b4840 	call	2b484 <__mulsi3>
   2af88:	9cffffcc 	andi	r19,r19,65535
   2af8c:	8cc6b03a 	or	r3,r17,r19
   2af90:	1880042e 	bgeu	r3,r2,2afa4 <__umoddi3+0x298>
   2af94:	1d07883a 	add	r3,r3,r20
   2af98:	1d000236 	bltu	r3,r20,2afa4 <__umoddi3+0x298>
   2af9c:	1880012e 	bgeu	r3,r2,2afa4 <__umoddi3+0x298>
   2afa0:	1d07883a 	add	r3,r3,r20
   2afa4:	1885c83a 	sub	r2,r3,r2
   2afa8:	1484d83a 	srl	r2,r2,r18
   2afac:	0007883a 	mov	r3,zero
   2afb0:	003fa206 	br	2ae3c <__umoddi3+0x130>
   2afb4:	a0804030 	cmpltui	r2,r20,256
   2afb8:	1000ba1e 	bne	r2,zero,2b2a4 <__umoddi3+0x598>
   2afbc:	a006d23a 	srli	r3,r20,8
   2afc0:	04800204 	movi	r18,8
   2afc4:	003fc906 	br	2aeec <__umoddi3+0x1e0>
   2afc8:	30804030 	cmpltui	r2,r6,256
   2afcc:	1000ad1e 	bne	r2,zero,2b284 <__umoddi3+0x578>
   2afd0:	3006d23a 	srli	r3,r6,8
   2afd4:	04800204 	movi	r18,8
   2afd8:	003f6506 	br	2ad70 <__umoddi3+0x64>
   2afdc:	39004030 	cmpltui	r4,r7,256
   2afe0:	2000b21e 	bne	r4,zero,2b2ac <__umoddi3+0x5a0>
   2afe4:	3808d23a 	srli	r4,r7,8
   2afe8:	02000204 	movi	r8,8
   2afec:	003fa606 	br	2ae88 <__umoddi3+0x17c>
   2aff0:	3d4e983a 	sll	r7,r7,r21
   2aff4:	3508d83a 	srl	r4,r6,r20
   2aff8:	8d2cd83a 	srl	r22,r17,r20
   2affc:	8504d83a 	srl	r2,r16,r20
   2b000:	21e4b03a 	or	r18,r4,r7
   2b004:	8d62983a 	sll	r17,r17,r21
   2b008:	9026d43a 	srli	r19,r18,16
   2b00c:	354c983a 	sll	r6,r6,r21
   2b010:	1444b03a 	or	r2,r2,r17
   2b014:	b009883a 	mov	r4,r22
   2b018:	980b883a 	mov	r5,r19
   2b01c:	d9800115 	stw	r6,4(sp)
   2b020:	d8800015 	stw	r2,0(sp)
   2b024:	002b4280 	call	2b428 <__umodsi3>
   2b028:	980b883a 	mov	r5,r19
   2b02c:	b009883a 	mov	r4,r22
   2b030:	102f883a 	mov	r23,r2
   2b034:	947fffcc 	andi	r17,r18,65535
   2b038:	002b3c40 	call	2b3c4 <__udivsi3>
   2b03c:	8809883a 	mov	r4,r17
   2b040:	100b883a 	mov	r5,r2
   2b044:	1039883a 	mov	fp,r2
   2b048:	002b4840 	call	2b484 <__mulsi3>
   2b04c:	d8c00017 	ldw	r3,0(sp)
   2b050:	b82e943a 	slli	r23,r23,16
   2b054:	8560983a 	sll	r16,r16,r21
   2b058:	1808d43a 	srli	r4,r3,16
   2b05c:	b908b03a 	or	r4,r23,r4
   2b060:	2080062e 	bgeu	r4,r2,2b07c <__umoddi3+0x370>
   2b064:	2489883a 	add	r4,r4,r18
   2b068:	e17fffc4 	addi	r5,fp,-1
   2b06c:	24809436 	bltu	r4,r18,2b2c0 <__umoddi3+0x5b4>
   2b070:	2080932e 	bgeu	r4,r2,2b2c0 <__umoddi3+0x5b4>
   2b074:	e73fff84 	addi	fp,fp,-2
   2b078:	2489883a 	add	r4,r4,r18
   2b07c:	20adc83a 	sub	r22,r4,r2
   2b080:	980b883a 	mov	r5,r19
   2b084:	b009883a 	mov	r4,r22
   2b088:	002b4280 	call	2b428 <__umodsi3>
   2b08c:	980b883a 	mov	r5,r19
   2b090:	b009883a 	mov	r4,r22
   2b094:	102f883a 	mov	r23,r2
   2b098:	002b3c40 	call	2b3c4 <__udivsi3>
   2b09c:	100b883a 	mov	r5,r2
   2b0a0:	8809883a 	mov	r4,r17
   2b0a4:	d8800215 	stw	r2,8(sp)
   2b0a8:	002b4840 	call	2b484 <__mulsi3>
   2b0ac:	d8c00017 	ldw	r3,0(sp)
   2b0b0:	b82e943a 	slli	r23,r23,16
   2b0b4:	d9400217 	ldw	r5,8(sp)
   2b0b8:	1c7fffcc 	andi	r17,r3,65535
   2b0bc:	bc62b03a 	or	r17,r23,r17
   2b0c0:	8880062e 	bgeu	r17,r2,2b0dc <__umoddi3+0x3d0>
   2b0c4:	8ca3883a 	add	r17,r17,r18
   2b0c8:	28ffffc4 	addi	r3,r5,-1
   2b0cc:	8c807a36 	bltu	r17,r18,2b2b8 <__umoddi3+0x5ac>
   2b0d0:	8880792e 	bgeu	r17,r2,2b2b8 <__umoddi3+0x5ac>
   2b0d4:	297fff84 	addi	r5,r5,-2
   2b0d8:	8ca3883a 	add	r17,r17,r18
   2b0dc:	e02c943a 	slli	r22,fp,16
   2b0e0:	d9c00117 	ldw	r7,4(sp)
   2b0e4:	29bfffcc 	andi	r6,r5,65535
   2b0e8:	b16cb03a 	or	r22,r22,r5
   2b0ec:	38ffffcc 	andi	r3,r7,65535
   2b0f0:	b02cd43a 	srli	r22,r22,16
   2b0f4:	180b883a 	mov	r5,r3
   2b0f8:	3009883a 	mov	r4,r6
   2b0fc:	3838d43a 	srli	fp,r7,16
   2b100:	182f883a 	mov	r23,r3
   2b104:	d9800015 	stw	r6,0(sp)
   2b108:	88a3c83a 	sub	r17,r17,r2
   2b10c:	002b4840 	call	2b484 <__mulsi3>
   2b110:	b80b883a 	mov	r5,r23
   2b114:	b009883a 	mov	r4,r22
   2b118:	102f883a 	mov	r23,r2
   2b11c:	002b4840 	call	2b484 <__mulsi3>
   2b120:	e00b883a 	mov	r5,fp
   2b124:	b009883a 	mov	r4,r22
   2b128:	102d883a 	mov	r22,r2
   2b12c:	002b4840 	call	2b484 <__mulsi3>
   2b130:	d9800017 	ldw	r6,0(sp)
   2b134:	e00b883a 	mov	r5,fp
   2b138:	1039883a 	mov	fp,r2
   2b13c:	3009883a 	mov	r4,r6
   2b140:	002b4840 	call	2b484 <__mulsi3>
   2b144:	b808d43a 	srli	r4,r23,16
   2b148:	1585883a 	add	r2,r2,r22
   2b14c:	2089883a 	add	r4,r4,r2
   2b150:	2580022e 	bgeu	r4,r22,2b15c <__umoddi3+0x450>
   2b154:	00800074 	movhi	r2,1
   2b158:	e0b9883a 	add	fp,fp,r2
   2b15c:	2006d43a 	srli	r3,r4,16
   2b160:	2008943a 	slli	r4,r4,16
   2b164:	bdffffcc 	andi	r23,r23,65535
   2b168:	1f07883a 	add	r3,r3,fp
   2b16c:	25c9883a 	add	r4,r4,r23
   2b170:	88c03a36 	bltu	r17,r3,2b25c <__umoddi3+0x550>
   2b174:	88c03826 	beq	r17,r3,2b258 <__umoddi3+0x54c>
   2b178:	8109c83a 	sub	r4,r16,r4
   2b17c:	8121803a 	cmpltu	r16,r16,r4
   2b180:	88c7c83a 	sub	r3,r17,r3
   2b184:	1c07c83a 	sub	r3,r3,r16
   2b188:	1d04983a 	sll	r2,r3,r20
   2b18c:	2548d83a 	srl	r4,r4,r21
   2b190:	1d46d83a 	srl	r3,r3,r21
   2b194:	1104b03a 	or	r2,r2,r4
   2b198:	003f2806 	br	2ae3c <__umoddi3+0x130>
   2b19c:	a4a8983a 	sll	r20,r20,r18
   2b1a0:	8da6d83a 	srl	r19,r17,r22
   2b1a4:	8ca2983a 	sll	r17,r17,r18
   2b1a8:	a02ed43a 	srli	r23,r20,16
   2b1ac:	9809883a 	mov	r4,r19
   2b1b0:	85acd83a 	srl	r22,r16,r22
   2b1b4:	b80b883a 	mov	r5,r23
   2b1b8:	002b4280 	call	2b428 <__umodsi3>
   2b1bc:	9809883a 	mov	r4,r19
   2b1c0:	b80b883a 	mov	r5,r23
   2b1c4:	b46cb03a 	or	r22,r22,r17
   2b1c8:	a57fffcc 	andi	r21,r20,65535
   2b1cc:	1023883a 	mov	r17,r2
   2b1d0:	002b3c40 	call	2b3c4 <__udivsi3>
   2b1d4:	a809883a 	mov	r4,r21
   2b1d8:	100b883a 	mov	r5,r2
   2b1dc:	002b4840 	call	2b484 <__mulsi3>
   2b1e0:	8822943a 	slli	r17,r17,16
   2b1e4:	b008d43a 	srli	r4,r22,16
   2b1e8:	84a6983a 	sll	r19,r16,r18
   2b1ec:	8908b03a 	or	r4,r17,r4
   2b1f0:	2080042e 	bgeu	r4,r2,2b204 <__umoddi3+0x4f8>
   2b1f4:	2509883a 	add	r4,r4,r20
   2b1f8:	25000236 	bltu	r4,r20,2b204 <__umoddi3+0x4f8>
   2b1fc:	2080012e 	bgeu	r4,r2,2b204 <__umoddi3+0x4f8>
   2b200:	2509883a 	add	r4,r4,r20
   2b204:	20a1c83a 	sub	r16,r4,r2
   2b208:	8009883a 	mov	r4,r16
   2b20c:	b80b883a 	mov	r5,r23
   2b210:	002b4280 	call	2b428 <__umodsi3>
   2b214:	8009883a 	mov	r4,r16
   2b218:	1021883a 	mov	r16,r2
   2b21c:	b80b883a 	mov	r5,r23
   2b220:	8020943a 	slli	r16,r16,16
   2b224:	002b3c40 	call	2b3c4 <__udivsi3>
   2b228:	100b883a 	mov	r5,r2
   2b22c:	a809883a 	mov	r4,r21
   2b230:	b47fffcc 	andi	r17,r22,65535
   2b234:	002b4840 	call	2b484 <__mulsi3>
   2b238:	8462b03a 	or	r17,r16,r17
   2b23c:	8880042e 	bgeu	r17,r2,2b250 <__umoddi3+0x544>
   2b240:	8d23883a 	add	r17,r17,r20
   2b244:	8d000236 	bltu	r17,r20,2b250 <__umoddi3+0x544>
   2b248:	8880012e 	bgeu	r17,r2,2b250 <__umoddi3+0x544>
   2b24c:	8d23883a 	add	r17,r17,r20
   2b250:	88a3c83a 	sub	r17,r17,r2
   2b254:	003f2f06 	br	2af14 <__umoddi3+0x208>
   2b258:	813fc72e 	bgeu	r16,r4,2b178 <__umoddi3+0x46c>
   2b25c:	d8800117 	ldw	r2,4(sp)
   2b260:	20a7c83a 	sub	r19,r4,r2
   2b264:	24c9803a 	cmpltu	r4,r4,r19
   2b268:	2489883a 	add	r4,r4,r18
   2b26c:	1907c83a 	sub	r3,r3,r4
   2b270:	9809883a 	mov	r4,r19
   2b274:	003fc006 	br	2b178 <__umoddi3+0x46c>
   2b278:	3006d43a 	srli	r3,r6,16
   2b27c:	04800404 	movi	r18,16
   2b280:	003ebb06 	br	2ad70 <__umoddi3+0x64>
   2b284:	3007883a 	mov	r3,r6
   2b288:	003eb906 	br	2ad70 <__umoddi3+0x64>
   2b28c:	3808d43a 	srli	r4,r7,16
   2b290:	02000404 	movi	r8,16
   2b294:	003efc06 	br	2ae88 <__umoddi3+0x17c>
   2b298:	a006d43a 	srli	r3,r20,16
   2b29c:	04800404 	movi	r18,16
   2b2a0:	003f1206 	br	2aeec <__umoddi3+0x1e0>
   2b2a4:	a007883a 	mov	r3,r20
   2b2a8:	003f1006 	br	2aeec <__umoddi3+0x1e0>
   2b2ac:	3809883a 	mov	r4,r7
   2b2b0:	0011883a 	mov	r8,zero
   2b2b4:	003ef406 	br	2ae88 <__umoddi3+0x17c>
   2b2b8:	180b883a 	mov	r5,r3
   2b2bc:	003f8706 	br	2b0dc <__umoddi3+0x3d0>
   2b2c0:	2839883a 	mov	fp,r5
   2b2c4:	003f6d06 	br	2b07c <__umoddi3+0x370>
   2b2c8:	2509883a 	add	r4,r4,r20
   2b2cc:	003f2206 	br	2af58 <__umoddi3+0x24c>

0002b2d0 <__divsi3>:
   2b2d0:	20001a16 	blt	r4,zero,2b33c <__divsi3+0x6c>
   2b2d4:	000f883a 	mov	r7,zero
   2b2d8:	2800020e 	bge	r5,zero,2b2e4 <__divsi3+0x14>
   2b2dc:	014bc83a 	sub	r5,zero,r5
   2b2e0:	39c0005c 	xori	r7,r7,1
   2b2e4:	200d883a 	mov	r6,r4
   2b2e8:	00c00044 	movi	r3,1
   2b2ec:	2900092e 	bgeu	r5,r4,2b314 <__divsi3+0x44>
   2b2f0:	00800804 	movi	r2,32
   2b2f4:	00c00044 	movi	r3,1
   2b2f8:	00000106 	br	2b300 <__divsi3+0x30>
   2b2fc:	10001226 	beq	r2,zero,2b348 <__divsi3+0x78>
   2b300:	294b883a 	add	r5,r5,r5
   2b304:	10bfffc4 	addi	r2,r2,-1
   2b308:	18c7883a 	add	r3,r3,r3
   2b30c:	293ffb36 	bltu	r5,r4,2b2fc <__divsi3+0x2c>
   2b310:	18000d26 	beq	r3,zero,2b348 <__divsi3+0x78>
   2b314:	0005883a 	mov	r2,zero
   2b318:	31400236 	bltu	r6,r5,2b324 <__divsi3+0x54>
   2b31c:	314dc83a 	sub	r6,r6,r5
   2b320:	10c4b03a 	or	r2,r2,r3
   2b324:	1806d07a 	srli	r3,r3,1
   2b328:	280ad07a 	srli	r5,r5,1
   2b32c:	183ffa1e 	bne	r3,zero,2b318 <__divsi3+0x48>
   2b330:	38000126 	beq	r7,zero,2b338 <__divsi3+0x68>
   2b334:	0085c83a 	sub	r2,zero,r2
   2b338:	f800283a 	ret
   2b33c:	0109c83a 	sub	r4,zero,r4
   2b340:	01c00044 	movi	r7,1
   2b344:	003fe406 	br	2b2d8 <__divsi3+0x8>
   2b348:	0005883a 	mov	r2,zero
   2b34c:	003ff806 	br	2b330 <__divsi3+0x60>

0002b350 <__modsi3>:
   2b350:	20001916 	blt	r4,zero,2b3b8 <__modsi3+0x68>
   2b354:	000f883a 	mov	r7,zero
   2b358:	2005883a 	mov	r2,r4
   2b35c:	2800010e 	bge	r5,zero,2b364 <__modsi3+0x14>
   2b360:	014bc83a 	sub	r5,zero,r5
   2b364:	00c00044 	movi	r3,1
   2b368:	2900092e 	bgeu	r5,r4,2b390 <__modsi3+0x40>
   2b36c:	01800804 	movi	r6,32
   2b370:	00c00044 	movi	r3,1
   2b374:	00000106 	br	2b37c <__modsi3+0x2c>
   2b378:	30000d26 	beq	r6,zero,2b3b0 <__modsi3+0x60>
   2b37c:	294b883a 	add	r5,r5,r5
   2b380:	31bfffc4 	addi	r6,r6,-1
   2b384:	18c7883a 	add	r3,r3,r3
   2b388:	293ffb36 	bltu	r5,r4,2b378 <__modsi3+0x28>
   2b38c:	18000826 	beq	r3,zero,2b3b0 <__modsi3+0x60>
   2b390:	1806d07a 	srli	r3,r3,1
   2b394:	11400136 	bltu	r2,r5,2b39c <__modsi3+0x4c>
   2b398:	1145c83a 	sub	r2,r2,r5
   2b39c:	280ad07a 	srli	r5,r5,1
   2b3a0:	183ffb1e 	bne	r3,zero,2b390 <__modsi3+0x40>
   2b3a4:	38000126 	beq	r7,zero,2b3ac <__modsi3+0x5c>
   2b3a8:	0085c83a 	sub	r2,zero,r2
   2b3ac:	f800283a 	ret
   2b3b0:	2005883a 	mov	r2,r4
   2b3b4:	003ffb06 	br	2b3a4 <__modsi3+0x54>
   2b3b8:	0109c83a 	sub	r4,zero,r4
   2b3bc:	01c00044 	movi	r7,1
   2b3c0:	003fe506 	br	2b358 <__modsi3+0x8>

0002b3c4 <__udivsi3>:
   2b3c4:	200d883a 	mov	r6,r4
   2b3c8:	2900152e 	bgeu	r5,r4,2b420 <__udivsi3+0x5c>
   2b3cc:	28001416 	blt	r5,zero,2b420 <__udivsi3+0x5c>
   2b3d0:	00800804 	movi	r2,32
   2b3d4:	00c00044 	movi	r3,1
   2b3d8:	00000206 	br	2b3e4 <__udivsi3+0x20>
   2b3dc:	10000e26 	beq	r2,zero,2b418 <__udivsi3+0x54>
   2b3e0:	28000516 	blt	r5,zero,2b3f8 <__udivsi3+0x34>
   2b3e4:	294b883a 	add	r5,r5,r5
   2b3e8:	10bfffc4 	addi	r2,r2,-1
   2b3ec:	18c7883a 	add	r3,r3,r3
   2b3f0:	293ffa36 	bltu	r5,r4,2b3dc <__udivsi3+0x18>
   2b3f4:	18000826 	beq	r3,zero,2b418 <__udivsi3+0x54>
   2b3f8:	0005883a 	mov	r2,zero
   2b3fc:	31400236 	bltu	r6,r5,2b408 <__udivsi3+0x44>
   2b400:	314dc83a 	sub	r6,r6,r5
   2b404:	10c4b03a 	or	r2,r2,r3
   2b408:	1806d07a 	srli	r3,r3,1
   2b40c:	280ad07a 	srli	r5,r5,1
   2b410:	183ffa1e 	bne	r3,zero,2b3fc <__udivsi3+0x38>
   2b414:	f800283a 	ret
   2b418:	0005883a 	mov	r2,zero
   2b41c:	f800283a 	ret
   2b420:	00c00044 	movi	r3,1
   2b424:	003ff406 	br	2b3f8 <__udivsi3+0x34>

0002b428 <__umodsi3>:
   2b428:	2005883a 	mov	r2,r4
   2b42c:	2900132e 	bgeu	r5,r4,2b47c <__umodsi3+0x54>
   2b430:	28001216 	blt	r5,zero,2b47c <__umodsi3+0x54>
   2b434:	01800804 	movi	r6,32
   2b438:	00c00044 	movi	r3,1
   2b43c:	00000206 	br	2b448 <__umodsi3+0x20>
   2b440:	30000c26 	beq	r6,zero,2b474 <__umodsi3+0x4c>
   2b444:	28000516 	blt	r5,zero,2b45c <__umodsi3+0x34>
   2b448:	294b883a 	add	r5,r5,r5
   2b44c:	31bfffc4 	addi	r6,r6,-1
   2b450:	18c7883a 	add	r3,r3,r3
   2b454:	293ffa36 	bltu	r5,r4,2b440 <__umodsi3+0x18>
   2b458:	18000626 	beq	r3,zero,2b474 <__umodsi3+0x4c>
   2b45c:	1806d07a 	srli	r3,r3,1
   2b460:	11400136 	bltu	r2,r5,2b468 <__umodsi3+0x40>
   2b464:	1145c83a 	sub	r2,r2,r5
   2b468:	280ad07a 	srli	r5,r5,1
   2b46c:	183ffb1e 	bne	r3,zero,2b45c <__umodsi3+0x34>
   2b470:	f800283a 	ret
   2b474:	2005883a 	mov	r2,r4
   2b478:	f800283a 	ret
   2b47c:	00c00044 	movi	r3,1
   2b480:	003ff606 	br	2b45c <__umodsi3+0x34>

0002b484 <__mulsi3>:
   2b484:	0005883a 	mov	r2,zero
   2b488:	20000726 	beq	r4,zero,2b4a8 <__mulsi3+0x24>
   2b48c:	20c0004c 	andi	r3,r4,1
   2b490:	2008d07a 	srli	r4,r4,1
   2b494:	18000126 	beq	r3,zero,2b49c <__mulsi3+0x18>
   2b498:	1145883a 	add	r2,r2,r5
   2b49c:	294b883a 	add	r5,r5,r5
   2b4a0:	203ffa1e 	bne	r4,zero,2b48c <__mulsi3+0x8>
   2b4a4:	f800283a 	ret
   2b4a8:	f800283a 	ret

0002b4ac <__adddf3>:
   2b4ac:	02000434 	movhi	r8,16
   2b4b0:	423fffc4 	addi	r8,r8,-1
   2b4b4:	2806d53a 	srli	r3,r5,20
   2b4b8:	3804d53a 	srli	r2,r7,20
   2b4bc:	2a14703a 	and	r10,r5,r8
   2b4c0:	3a12703a 	and	r9,r7,r8
   2b4c4:	280ad7fa 	srli	r5,r5,31
   2b4c8:	501490fa 	slli	r10,r10,3
   2b4cc:	2018d77a 	srli	r12,r4,29
   2b4d0:	481290fa 	slli	r9,r9,3
   2b4d4:	3016d77a 	srli	r11,r6,29
   2b4d8:	380ed7fa 	srli	r7,r7,31
   2b4dc:	defffb04 	addi	sp,sp,-20
   2b4e0:	dc800215 	stw	r18,8(sp)
   2b4e4:	dc000015 	stw	r16,0(sp)
   2b4e8:	1c81ffcc 	andi	r18,r3,2047
   2b4ec:	1081ffcc 	andi	r2,r2,2047
   2b4f0:	dfc00415 	stw	ra,16(sp)
   2b4f4:	dcc00315 	stw	r19,12(sp)
   2b4f8:	dc400115 	stw	r17,4(sp)
   2b4fc:	201c90fa 	slli	r14,r4,3
   2b500:	301a90fa 	slli	r13,r6,3
   2b504:	2821883a 	mov	r16,r5
   2b508:	6294b03a 	or	r10,r12,r10
   2b50c:	5a52b03a 	or	r9,r11,r9
   2b510:	9087c83a 	sub	r3,r18,r2
   2b514:	29c06126 	beq	r5,r7,2b69c <__adddf3+0x1f0>
   2b518:	00c0550e 	bge	zero,r3,2b670 <__adddf3+0x1c4>
   2b51c:	10007326 	beq	r2,zero,2b6ec <__adddf3+0x240>
   2b520:	9081ffd8 	cmpnei	r2,r18,2047
   2b524:	1000bd26 	beq	r2,zero,2b81c <__adddf3+0x370>
   2b528:	4a402034 	orhi	r9,r9,128
   2b52c:	18800e48 	cmpgei	r2,r3,57
   2b530:	1000ef1e 	bne	r2,zero,2b8f0 <__adddf3+0x444>
   2b534:	18800808 	cmpgei	r2,r3,32
   2b538:	1001321e 	bne	r2,zero,2ba04 <__adddf3+0x558>
   2b53c:	00800804 	movi	r2,32
   2b540:	10c5c83a 	sub	r2,r2,r3
   2b544:	68c8d83a 	srl	r4,r13,r3
   2b548:	48a2983a 	sll	r17,r9,r2
   2b54c:	689a983a 	sll	r13,r13,r2
   2b550:	48c6d83a 	srl	r3,r9,r3
   2b554:	8922b03a 	or	r17,r17,r4
   2b558:	681ac03a 	cmpne	r13,r13,zero
   2b55c:	8b62b03a 	or	r17,r17,r13
   2b560:	50d5c83a 	sub	r10,r10,r3
   2b564:	7463c83a 	sub	r17,r14,r17
   2b568:	7451803a 	cmpltu	r8,r14,r17
   2b56c:	5211c83a 	sub	r8,r10,r8
   2b570:	4080202c 	andhi	r2,r8,128
   2b574:	10008d26 	beq	r2,zero,2b7ac <__adddf3+0x300>
   2b578:	02402034 	movhi	r9,128
   2b57c:	4a7fffc4 	addi	r9,r9,-1
   2b580:	4266703a 	and	r19,r8,r9
   2b584:	9800b326 	beq	r19,zero,2b854 <__adddf3+0x3a8>
   2b588:	9809883a 	mov	r4,r19
   2b58c:	002db980 	call	2db98 <__clzsi2>
   2b590:	10fffe04 	addi	r3,r2,-8
   2b594:	02000804 	movi	r8,32
   2b598:	40d1c83a 	sub	r8,r8,r3
   2b59c:	8a10d83a 	srl	r8,r17,r8
   2b5a0:	98d2983a 	sll	r9,r19,r3
   2b5a4:	88e2983a 	sll	r17,r17,r3
   2b5a8:	4250b03a 	or	r8,r8,r9
   2b5ac:	1c80b216 	blt	r3,r18,2b878 <__adddf3+0x3cc>
   2b5b0:	1c87c83a 	sub	r3,r3,r18
   2b5b4:	19000044 	addi	r4,r3,1
   2b5b8:	20800808 	cmpgei	r2,r4,32
   2b5bc:	10006f1e 	bne	r2,zero,2b77c <__adddf3+0x2d0>
   2b5c0:	00800804 	movi	r2,32
   2b5c4:	1105c83a 	sub	r2,r2,r4
   2b5c8:	8906d83a 	srl	r3,r17,r4
   2b5cc:	88a2983a 	sll	r17,r17,r2
   2b5d0:	4084983a 	sll	r2,r8,r2
   2b5d4:	4110d83a 	srl	r8,r8,r4
   2b5d8:	8822c03a 	cmpne	r17,r17,zero
   2b5dc:	10c4b03a 	or	r2,r2,r3
   2b5e0:	1462b03a 	or	r17,r2,r17
   2b5e4:	0025883a 	mov	r18,zero
   2b5e8:	888001cc 	andi	r2,r17,7
   2b5ec:	10000726 	beq	r2,zero,2b60c <__adddf3+0x160>
   2b5f0:	888003cc 	andi	r2,r17,15
   2b5f4:	10800120 	cmpeqi	r2,r2,4
   2b5f8:	1000041e 	bne	r2,zero,2b60c <__adddf3+0x160>
   2b5fc:	88c00104 	addi	r3,r17,4
   2b600:	1c63803a 	cmpltu	r17,r3,r17
   2b604:	4451883a 	add	r8,r8,r17
   2b608:	1823883a 	mov	r17,r3
   2b60c:	4080202c 	andhi	r2,r8,128
   2b610:	10006826 	beq	r2,zero,2b7b4 <__adddf3+0x308>
   2b614:	90c00044 	addi	r3,r18,1
   2b618:	1881ffe0 	cmpeqi	r2,r3,2047
   2b61c:	18c1ffcc 	andi	r3,r3,2047
   2b620:	10007a1e 	bne	r2,zero,2b80c <__adddf3+0x360>
   2b624:	00bfe034 	movhi	r2,65408
   2b628:	10bfffc4 	addi	r2,r2,-1
   2b62c:	4090703a 	and	r8,r8,r2
   2b630:	4004977a 	slli	r2,r8,29
   2b634:	4010927a 	slli	r8,r8,9
   2b638:	8822d0fa 	srli	r17,r17,3
   2b63c:	4010d33a 	srli	r8,r8,12
   2b640:	1444b03a 	or	r2,r2,r17
   2b644:	1806953a 	slli	r3,r3,20
   2b648:	802097fa 	slli	r16,r16,31
   2b64c:	1a06b03a 	or	r3,r3,r8
   2b650:	1c06b03a 	or	r3,r3,r16
   2b654:	dfc00417 	ldw	ra,16(sp)
   2b658:	dcc00317 	ldw	r19,12(sp)
   2b65c:	dc800217 	ldw	r18,8(sp)
   2b660:	dc400117 	ldw	r17,4(sp)
   2b664:	dc000017 	ldw	r16,0(sp)
   2b668:	dec00504 	addi	sp,sp,20
   2b66c:	f800283a 	ret
   2b670:	18002626 	beq	r3,zero,2b70c <__adddf3+0x260>
   2b674:	1487c83a 	sub	r3,r2,r18
   2b678:	9000ba1e 	bne	r18,zero,2b964 <__adddf3+0x4b8>
   2b67c:	5388b03a 	or	r4,r10,r14
   2b680:	20011826 	beq	r4,zero,2bae4 <__adddf3+0x638>
   2b684:	193fffc4 	addi	r4,r3,-1
   2b688:	20015726 	beq	r4,zero,2bbe8 <__adddf3+0x73c>
   2b68c:	18c1ffd8 	cmpnei	r3,r3,2047
   2b690:	18013026 	beq	r3,zero,2bb54 <__adddf3+0x6a8>
   2b694:	2007883a 	mov	r3,r4
   2b698:	0000b506 	br	2b970 <__adddf3+0x4c4>
   2b69c:	00c07b0e 	bge	zero,r3,2b88c <__adddf3+0x3e0>
   2b6a0:	10002e26 	beq	r2,zero,2b75c <__adddf3+0x2b0>
   2b6a4:	9081ffd8 	cmpnei	r2,r18,2047
   2b6a8:	10005c26 	beq	r2,zero,2b81c <__adddf3+0x370>
   2b6ac:	4a402034 	orhi	r9,r9,128
   2b6b0:	18800e48 	cmpgei	r2,r3,57
   2b6b4:	10004b1e 	bne	r2,zero,2b7e4 <__adddf3+0x338>
   2b6b8:	18800808 	cmpgei	r2,r3,32
   2b6bc:	1000ec26 	beq	r2,zero,2ba70 <__adddf3+0x5c4>
   2b6c0:	1c7ff804 	addi	r17,r3,-32
   2b6c4:	19000820 	cmpeqi	r4,r3,32
   2b6c8:	4c44d83a 	srl	r2,r9,r17
   2b6cc:	2000041e 	bne	r4,zero,2b6e0 <__adddf3+0x234>
   2b6d0:	01001004 	movi	r4,64
   2b6d4:	20c7c83a 	sub	r3,r4,r3
   2b6d8:	48d2983a 	sll	r9,r9,r3
   2b6dc:	6a5ab03a 	or	r13,r13,r9
   2b6e0:	6822c03a 	cmpne	r17,r13,zero
   2b6e4:	88a2b03a 	or	r17,r17,r2
   2b6e8:	00004006 	br	2b7ec <__adddf3+0x340>
   2b6ec:	4b44b03a 	or	r2,r9,r13
   2b6f0:	10008226 	beq	r2,zero,2b8fc <__adddf3+0x450>
   2b6f4:	18bfffc4 	addi	r2,r3,-1
   2b6f8:	10011026 	beq	r2,zero,2bb3c <__adddf3+0x690>
   2b6fc:	18c1ffd8 	cmpnei	r3,r3,2047
   2b700:	18004626 	beq	r3,zero,2b81c <__adddf3+0x370>
   2b704:	1007883a 	mov	r3,r2
   2b708:	003f8806 	br	2b52c <__adddf3+0x80>
   2b70c:	90800044 	addi	r2,r18,1
   2b710:	1081ff8c 	andi	r2,r2,2046
   2b714:	1000a51e 	bne	r2,zero,2b9ac <__adddf3+0x500>
   2b718:	538ab03a 	or	r5,r10,r14
   2b71c:	4b44b03a 	or	r2,r9,r13
   2b720:	9000f81e 	bne	r18,zero,2bb04 <__adddf3+0x658>
   2b724:	28013726 	beq	r5,zero,2bc04 <__adddf3+0x758>
   2b728:	10011226 	beq	r2,zero,2bb74 <__adddf3+0x6c8>
   2b72c:	7363c83a 	sub	r17,r14,r13
   2b730:	7445803a 	cmpltu	r2,r14,r17
   2b734:	5251c83a 	sub	r8,r10,r9
   2b738:	4091c83a 	sub	r8,r8,r2
   2b73c:	4080202c 	andhi	r2,r8,128
   2b740:	10018f26 	beq	r2,zero,2bd80 <__adddf3+0x8d4>
   2b744:	6ba3c83a 	sub	r17,r13,r14
   2b748:	4a95c83a 	sub	r10,r9,r10
   2b74c:	6c51803a 	cmpltu	r8,r13,r17
   2b750:	5211c83a 	sub	r8,r10,r8
   2b754:	3821883a 	mov	r16,r7
   2b758:	003fa306 	br	2b5e8 <__adddf3+0x13c>
   2b75c:	4b44b03a 	or	r2,r9,r13
   2b760:	10006626 	beq	r2,zero,2b8fc <__adddf3+0x450>
   2b764:	18bfffc4 	addi	r2,r3,-1
   2b768:	1000ec26 	beq	r2,zero,2bb1c <__adddf3+0x670>
   2b76c:	18c1ffd8 	cmpnei	r3,r3,2047
   2b770:	18012d26 	beq	r3,zero,2bc28 <__adddf3+0x77c>
   2b774:	1007883a 	mov	r3,r2
   2b778:	003fcd06 	br	2b6b0 <__adddf3+0x204>
   2b77c:	18fff844 	addi	r3,r3,-31
   2b780:	20800820 	cmpeqi	r2,r4,32
   2b784:	40c6d83a 	srl	r3,r8,r3
   2b788:	1000041e 	bne	r2,zero,2b79c <__adddf3+0x2f0>
   2b78c:	00801004 	movi	r2,64
   2b790:	1109c83a 	sub	r4,r2,r4
   2b794:	4110983a 	sll	r8,r8,r4
   2b798:	8a22b03a 	or	r17,r17,r8
   2b79c:	8822c03a 	cmpne	r17,r17,zero
   2b7a0:	88e2b03a 	or	r17,r17,r3
   2b7a4:	0011883a 	mov	r8,zero
   2b7a8:	0025883a 	mov	r18,zero
   2b7ac:	888001cc 	andi	r2,r17,7
   2b7b0:	103f8f1e 	bne	r2,zero,2b5f0 <__adddf3+0x144>
   2b7b4:	8822d0fa 	srli	r17,r17,3
   2b7b8:	4004977a 	slli	r2,r8,29
   2b7bc:	4014d0fa 	srli	r10,r8,3
   2b7c0:	9007883a 	mov	r3,r18
   2b7c4:	8884b03a 	or	r2,r17,r2
   2b7c8:	1901ffe0 	cmpeqi	r4,r3,2047
   2b7cc:	2000191e 	bne	r4,zero,2b834 <__adddf3+0x388>
   2b7d0:	02000434 	movhi	r8,16
   2b7d4:	423fffc4 	addi	r8,r8,-1
   2b7d8:	5210703a 	and	r8,r10,r8
   2b7dc:	18c1ffcc 	andi	r3,r3,2047
   2b7e0:	003f9806 	br	2b644 <__adddf3+0x198>
   2b7e4:	4b62b03a 	or	r17,r9,r13
   2b7e8:	8822c03a 	cmpne	r17,r17,zero
   2b7ec:	8ba3883a 	add	r17,r17,r14
   2b7f0:	8b91803a 	cmpltu	r8,r17,r14
   2b7f4:	4291883a 	add	r8,r8,r10
   2b7f8:	4080202c 	andhi	r2,r8,128
   2b7fc:	103feb26 	beq	r2,zero,2b7ac <__adddf3+0x300>
   2b800:	94800044 	addi	r18,r18,1
   2b804:	9081ffe0 	cmpeqi	r2,r18,2047
   2b808:	10007426 	beq	r2,zero,2b9dc <__adddf3+0x530>
   2b80c:	00c1ffc4 	movi	r3,2047
   2b810:	0011883a 	mov	r8,zero
   2b814:	0005883a 	mov	r2,zero
   2b818:	003f8a06 	br	2b644 <__adddf3+0x198>
   2b81c:	500a977a 	slli	r5,r10,29
   2b820:	00c80034 	movhi	r3,8192
   2b824:	18ffffc4 	addi	r3,r3,-1
   2b828:	5014d0fa 	srli	r10,r10,3
   2b82c:	20c4703a 	and	r2,r4,r3
   2b830:	1144b03a 	or	r2,r2,r5
   2b834:	1286b03a 	or	r3,r2,r10
   2b838:	18015426 	beq	r3,zero,2bd8c <__adddf3+0x8e0>
   2b83c:	00c00434 	movhi	r3,16
   2b840:	18ffffc4 	addi	r3,r3,-1
   2b844:	52000234 	orhi	r8,r10,8
   2b848:	40d0703a 	and	r8,r8,r3
   2b84c:	00c1ffc4 	movi	r3,2047
   2b850:	003f7c06 	br	2b644 <__adddf3+0x198>
   2b854:	8809883a 	mov	r4,r17
   2b858:	002db980 	call	2db98 <__clzsi2>
   2b85c:	10c00604 	addi	r3,r2,24
   2b860:	19000808 	cmpgei	r4,r3,32
   2b864:	203f4b26 	beq	r4,zero,2b594 <__adddf3+0xe8>
   2b868:	123ffe04 	addi	r8,r2,-8
   2b86c:	8a10983a 	sll	r8,r17,r8
   2b870:	0023883a 	mov	r17,zero
   2b874:	1cbf4e0e 	bge	r3,r18,2b5b0 <__adddf3+0x104>
   2b878:	00bfe034 	movhi	r2,65408
   2b87c:	10bfffc4 	addi	r2,r2,-1
   2b880:	90e5c83a 	sub	r18,r18,r3
   2b884:	4090703a 	and	r8,r8,r2
   2b888:	003f5706 	br	2b5e8 <__adddf3+0x13c>
   2b88c:	18002226 	beq	r3,zero,2b918 <__adddf3+0x46c>
   2b890:	1487c83a 	sub	r3,r2,r18
   2b894:	90006e26 	beq	r18,zero,2ba50 <__adddf3+0x5a4>
   2b898:	1101ffd8 	cmpnei	r4,r2,2047
   2b89c:	2000e926 	beq	r4,zero,2bc44 <__adddf3+0x798>
   2b8a0:	52802034 	orhi	r10,r10,128
   2b8a4:	19000e48 	cmpgei	r4,r3,57
   2b8a8:	2000b91e 	bne	r4,zero,2bb90 <__adddf3+0x6e4>
   2b8ac:	19000808 	cmpgei	r4,r3,32
   2b8b0:	2001101e 	bne	r4,zero,2bcf4 <__adddf3+0x848>
   2b8b4:	01000804 	movi	r4,32
   2b8b8:	20c9c83a 	sub	r4,r4,r3
   2b8bc:	5122983a 	sll	r17,r10,r4
   2b8c0:	70cad83a 	srl	r5,r14,r3
   2b8c4:	7108983a 	sll	r4,r14,r4
   2b8c8:	50d4d83a 	srl	r10,r10,r3
   2b8cc:	8962b03a 	or	r17,r17,r5
   2b8d0:	2008c03a 	cmpne	r4,r4,zero
   2b8d4:	8922b03a 	or	r17,r17,r4
   2b8d8:	4a93883a 	add	r9,r9,r10
   2b8dc:	8b63883a 	add	r17,r17,r13
   2b8e0:	8b51803a 	cmpltu	r8,r17,r13
   2b8e4:	4251883a 	add	r8,r8,r9
   2b8e8:	1025883a 	mov	r18,r2
   2b8ec:	003fc206 	br	2b7f8 <__adddf3+0x34c>
   2b8f0:	4b62b03a 	or	r17,r9,r13
   2b8f4:	8822c03a 	cmpne	r17,r17,zero
   2b8f8:	003f1a06 	br	2b564 <__adddf3+0xb8>
   2b8fc:	500c977a 	slli	r6,r10,29
   2b900:	01480034 	movhi	r5,8192
   2b904:	297fffc4 	addi	r5,r5,-1
   2b908:	2144703a 	and	r2,r4,r5
   2b90c:	5014d0fa 	srli	r10,r10,3
   2b910:	1184b03a 	or	r2,r2,r6
   2b914:	003fac06 	br	2b7c8 <__adddf3+0x31c>
   2b918:	90800044 	addi	r2,r18,1
   2b91c:	1141ff8c 	andi	r5,r2,2046
   2b920:	28005e1e 	bne	r5,zero,2ba9c <__adddf3+0x5f0>
   2b924:	5384b03a 	or	r2,r10,r14
   2b928:	9000a71e 	bne	r18,zero,2bbc8 <__adddf3+0x71c>
   2b92c:	1000e526 	beq	r2,zero,2bcc4 <__adddf3+0x818>
   2b930:	4b44b03a 	or	r2,r9,r13
   2b934:	10008f26 	beq	r2,zero,2bb74 <__adddf3+0x6c8>
   2b938:	7363883a 	add	r17,r14,r13
   2b93c:	5255883a 	add	r10,r10,r9
   2b940:	8b91803a 	cmpltu	r8,r17,r14
   2b944:	5211883a 	add	r8,r10,r8
   2b948:	4080202c 	andhi	r2,r8,128
   2b94c:	103f9726 	beq	r2,zero,2b7ac <__adddf3+0x300>
   2b950:	00bfe034 	movhi	r2,65408
   2b954:	10bfffc4 	addi	r2,r2,-1
   2b958:	4090703a 	and	r8,r8,r2
   2b95c:	04800044 	movi	r18,1
   2b960:	003f9206 	br	2b7ac <__adddf3+0x300>
   2b964:	1101ffd8 	cmpnei	r4,r2,2047
   2b968:	20007a26 	beq	r4,zero,2bb54 <__adddf3+0x6a8>
   2b96c:	52802034 	orhi	r10,r10,128
   2b970:	19000e48 	cmpgei	r4,r3,57
   2b974:	20002e1e 	bne	r4,zero,2ba30 <__adddf3+0x584>
   2b978:	19000808 	cmpgei	r4,r3,32
   2b97c:	2000871e 	bne	r4,zero,2bb9c <__adddf3+0x6f0>
   2b980:	01000804 	movi	r4,32
   2b984:	20c9c83a 	sub	r4,r4,r3
   2b988:	5122983a 	sll	r17,r10,r4
   2b98c:	70cad83a 	srl	r5,r14,r3
   2b990:	711c983a 	sll	r14,r14,r4
   2b994:	50d4d83a 	srl	r10,r10,r3
   2b998:	8962b03a 	or	r17,r17,r5
   2b99c:	701cc03a 	cmpne	r14,r14,zero
   2b9a0:	8ba2b03a 	or	r17,r17,r14
   2b9a4:	4a93c83a 	sub	r9,r9,r10
   2b9a8:	00002306 	br	2ba38 <__adddf3+0x58c>
   2b9ac:	7363c83a 	sub	r17,r14,r13
   2b9b0:	5267c83a 	sub	r19,r10,r9
   2b9b4:	7451803a 	cmpltu	r8,r14,r17
   2b9b8:	9a27c83a 	sub	r19,r19,r8
   2b9bc:	9880202c 	andhi	r2,r19,128
   2b9c0:	1000421e 	bne	r2,zero,2bacc <__adddf3+0x620>
   2b9c4:	8cc4b03a 	or	r2,r17,r19
   2b9c8:	103eee1e 	bne	r2,zero,2b584 <__adddf3+0xd8>
   2b9cc:	0015883a 	mov	r10,zero
   2b9d0:	0021883a 	mov	r16,zero
   2b9d4:	003f7e06 	br	2b7d0 <__adddf3+0x324>
   2b9d8:	04800084 	movi	r18,2
   2b9dc:	00bfe034 	movhi	r2,65408
   2b9e0:	10bfffc4 	addi	r2,r2,-1
   2b9e4:	8806d07a 	srli	r3,r17,1
   2b9e8:	4090703a 	and	r8,r8,r2
   2b9ec:	400497fa 	slli	r2,r8,31
   2b9f0:	8c40004c 	andi	r17,r17,1
   2b9f4:	1c62b03a 	or	r17,r3,r17
   2b9f8:	4010d07a 	srli	r8,r8,1
   2b9fc:	1462b03a 	or	r17,r2,r17
   2ba00:	003ef906 	br	2b5e8 <__adddf3+0x13c>
   2ba04:	1c7ff804 	addi	r17,r3,-32
   2ba08:	19000820 	cmpeqi	r4,r3,32
   2ba0c:	4c44d83a 	srl	r2,r9,r17
   2ba10:	2000041e 	bne	r4,zero,2ba24 <__adddf3+0x578>
   2ba14:	01001004 	movi	r4,64
   2ba18:	20c7c83a 	sub	r3,r4,r3
   2ba1c:	48d2983a 	sll	r9,r9,r3
   2ba20:	6a5ab03a 	or	r13,r13,r9
   2ba24:	6822c03a 	cmpne	r17,r13,zero
   2ba28:	88a2b03a 	or	r17,r17,r2
   2ba2c:	003ecd06 	br	2b564 <__adddf3+0xb8>
   2ba30:	5394b03a 	or	r10,r10,r14
   2ba34:	5022c03a 	cmpne	r17,r10,zero
   2ba38:	6c63c83a 	sub	r17,r13,r17
   2ba3c:	6c51803a 	cmpltu	r8,r13,r17
   2ba40:	4a11c83a 	sub	r8,r9,r8
   2ba44:	3821883a 	mov	r16,r7
   2ba48:	1025883a 	mov	r18,r2
   2ba4c:	003ec806 	br	2b570 <__adddf3+0xc4>
   2ba50:	5388b03a 	or	r4,r10,r14
   2ba54:	20008226 	beq	r4,zero,2bc60 <__adddf3+0x7b4>
   2ba58:	193fffc4 	addi	r4,r3,-1
   2ba5c:	2000b026 	beq	r4,zero,2bd20 <__adddf3+0x874>
   2ba60:	18c1ffd8 	cmpnei	r3,r3,2047
   2ba64:	18007726 	beq	r3,zero,2bc44 <__adddf3+0x798>
   2ba68:	2007883a 	mov	r3,r4
   2ba6c:	003f8d06 	br	2b8a4 <__adddf3+0x3f8>
   2ba70:	00800804 	movi	r2,32
   2ba74:	10c5c83a 	sub	r2,r2,r3
   2ba78:	68c8d83a 	srl	r4,r13,r3
   2ba7c:	48a2983a 	sll	r17,r9,r2
   2ba80:	689a983a 	sll	r13,r13,r2
   2ba84:	48c6d83a 	srl	r3,r9,r3
   2ba88:	8922b03a 	or	r17,r17,r4
   2ba8c:	681ac03a 	cmpne	r13,r13,zero
   2ba90:	8b62b03a 	or	r17,r17,r13
   2ba94:	50d5883a 	add	r10,r10,r3
   2ba98:	003f5406 	br	2b7ec <__adddf3+0x340>
   2ba9c:	10c1ffe0 	cmpeqi	r3,r2,2047
   2baa0:	183f5a1e 	bne	r3,zero,2b80c <__adddf3+0x360>
   2baa4:	7351883a 	add	r8,r14,r13
   2baa8:	4387803a 	cmpltu	r3,r8,r14
   2baac:	5255883a 	add	r10,r10,r9
   2bab0:	50c7883a 	add	r3,r10,r3
   2bab4:	401ad07a 	srli	r13,r8,1
   2bab8:	182297fa 	slli	r17,r3,31
   2babc:	1810d07a 	srli	r8,r3,1
   2bac0:	1025883a 	mov	r18,r2
   2bac4:	8b62b03a 	or	r17,r17,r13
   2bac8:	003f3806 	br	2b7ac <__adddf3+0x300>
   2bacc:	6ba3c83a 	sub	r17,r13,r14
   2bad0:	4a93c83a 	sub	r9,r9,r10
   2bad4:	6c51803a 	cmpltu	r8,r13,r17
   2bad8:	4a27c83a 	sub	r19,r9,r8
   2badc:	3821883a 	mov	r16,r7
   2bae0:	003ea806 	br	2b584 <__adddf3+0xd8>
   2bae4:	480a977a 	slli	r5,r9,29
   2bae8:	01080034 	movhi	r4,8192
   2baec:	213fffc4 	addi	r4,r4,-1
   2baf0:	3104703a 	and	r2,r6,r4
   2baf4:	4814d0fa 	srli	r10,r9,3
   2baf8:	1144b03a 	or	r2,r2,r5
   2bafc:	3821883a 	mov	r16,r7
   2bb00:	003f3106 	br	2b7c8 <__adddf3+0x31c>
   2bb04:	28005d1e 	bne	r5,zero,2bc7c <__adddf3+0x7d0>
   2bb08:	1000121e 	bne	r2,zero,2bb54 <__adddf3+0x6a8>
   2bb0c:	0021883a 	mov	r16,zero
   2bb10:	4015883a 	mov	r10,r8
   2bb14:	00bfffc4 	movi	r2,-1
   2bb18:	003f4806 	br	2b83c <__adddf3+0x390>
   2bb1c:	7363883a 	add	r17,r14,r13
   2bb20:	5255883a 	add	r10,r10,r9
   2bb24:	8b91803a 	cmpltu	r8,r17,r14
   2bb28:	5211883a 	add	r8,r10,r8
   2bb2c:	4080202c 	andhi	r2,r8,128
   2bb30:	103fa91e 	bne	r2,zero,2b9d8 <__adddf3+0x52c>
   2bb34:	04800044 	movi	r18,1
   2bb38:	003f1c06 	br	2b7ac <__adddf3+0x300>
   2bb3c:	7363c83a 	sub	r17,r14,r13
   2bb40:	5255c83a 	sub	r10,r10,r9
   2bb44:	7451803a 	cmpltu	r8,r14,r17
   2bb48:	5211c83a 	sub	r8,r10,r8
   2bb4c:	04800044 	movi	r18,1
   2bb50:	003e8706 	br	2b570 <__adddf3+0xc4>
   2bb54:	4806977a 	slli	r3,r9,29
   2bb58:	00880034 	movhi	r2,8192
   2bb5c:	10bfffc4 	addi	r2,r2,-1
   2bb60:	3084703a 	and	r2,r6,r2
   2bb64:	4814d0fa 	srli	r10,r9,3
   2bb68:	10c4b03a 	or	r2,r2,r3
   2bb6c:	3821883a 	mov	r16,r7
   2bb70:	003f3006 	br	2b834 <__adddf3+0x388>
   2bb74:	500a977a 	slli	r5,r10,29
   2bb78:	00880034 	movhi	r2,8192
   2bb7c:	10bfffc4 	addi	r2,r2,-1
   2bb80:	2084703a 	and	r2,r4,r2
   2bb84:	5014d0fa 	srli	r10,r10,3
   2bb88:	1144b03a 	or	r2,r2,r5
   2bb8c:	003f1006 	br	2b7d0 <__adddf3+0x324>
   2bb90:	5394b03a 	or	r10,r10,r14
   2bb94:	5022c03a 	cmpne	r17,r10,zero
   2bb98:	003f5006 	br	2b8dc <__adddf3+0x430>
   2bb9c:	1c7ff804 	addi	r17,r3,-32
   2bba0:	19400820 	cmpeqi	r5,r3,32
   2bba4:	5448d83a 	srl	r4,r10,r17
   2bba8:	2800041e 	bne	r5,zero,2bbbc <__adddf3+0x710>
   2bbac:	01401004 	movi	r5,64
   2bbb0:	28c7c83a 	sub	r3,r5,r3
   2bbb4:	50d4983a 	sll	r10,r10,r3
   2bbb8:	729cb03a 	or	r14,r14,r10
   2bbbc:	7022c03a 	cmpne	r17,r14,zero
   2bbc0:	8922b03a 	or	r17,r17,r4
   2bbc4:	003f9c06 	br	2ba38 <__adddf3+0x58c>
   2bbc8:	10005a1e 	bne	r2,zero,2bd34 <__adddf3+0x888>
   2bbcc:	4804977a 	slli	r2,r9,29
   2bbd0:	00c80034 	movhi	r3,8192
   2bbd4:	18ffffc4 	addi	r3,r3,-1
   2bbd8:	30cc703a 	and	r6,r6,r3
   2bbdc:	4814d0fa 	srli	r10,r9,3
   2bbe0:	1184b03a 	or	r2,r2,r6
   2bbe4:	003f1306 	br	2b834 <__adddf3+0x388>
   2bbe8:	6ba3c83a 	sub	r17,r13,r14
   2bbec:	4a95c83a 	sub	r10,r9,r10
   2bbf0:	6c51803a 	cmpltu	r8,r13,r17
   2bbf4:	5211c83a 	sub	r8,r10,r8
   2bbf8:	3821883a 	mov	r16,r7
   2bbfc:	04800044 	movi	r18,1
   2bc00:	003e5b06 	br	2b570 <__adddf3+0xc4>
   2bc04:	103f7126 	beq	r2,zero,2b9cc <__adddf3+0x520>
   2bc08:	4808977a 	slli	r4,r9,29
   2bc0c:	00880034 	movhi	r2,8192
   2bc10:	10bfffc4 	addi	r2,r2,-1
   2bc14:	3084703a 	and	r2,r6,r2
   2bc18:	4814d0fa 	srli	r10,r9,3
   2bc1c:	1104b03a 	or	r2,r2,r4
   2bc20:	3821883a 	mov	r16,r7
   2bc24:	003eea06 	br	2b7d0 <__adddf3+0x324>
   2bc28:	5006977a 	slli	r3,r10,29
   2bc2c:	00880034 	movhi	r2,8192
   2bc30:	10bfffc4 	addi	r2,r2,-1
   2bc34:	2084703a 	and	r2,r4,r2
   2bc38:	5014d0fa 	srli	r10,r10,3
   2bc3c:	10c4b03a 	or	r2,r2,r3
   2bc40:	003efc06 	br	2b834 <__adddf3+0x388>
   2bc44:	4806977a 	slli	r3,r9,29
   2bc48:	00880034 	movhi	r2,8192
   2bc4c:	10bfffc4 	addi	r2,r2,-1
   2bc50:	3084703a 	and	r2,r6,r2
   2bc54:	4814d0fa 	srli	r10,r9,3
   2bc58:	10c4b03a 	or	r2,r2,r3
   2bc5c:	003ef506 	br	2b834 <__adddf3+0x388>
   2bc60:	4808977a 	slli	r4,r9,29
   2bc64:	00880034 	movhi	r2,8192
   2bc68:	10bfffc4 	addi	r2,r2,-1
   2bc6c:	3084703a 	and	r2,r6,r2
   2bc70:	4814d0fa 	srli	r10,r9,3
   2bc74:	1104b03a 	or	r2,r2,r4
   2bc78:	003ed306 	br	2b7c8 <__adddf3+0x31c>
   2bc7c:	500a977a 	slli	r5,r10,29
   2bc80:	5014d0fa 	srli	r10,r10,3
   2bc84:	10001626 	beq	r2,zero,2bce0 <__adddf3+0x834>
   2bc88:	00c80034 	movhi	r3,8192
   2bc8c:	18ffffc4 	addi	r3,r3,-1
   2bc90:	20c4703a 	and	r2,r4,r3
   2bc94:	5100022c 	andhi	r4,r10,8
   2bc98:	1144b03a 	or	r2,r2,r5
   2bc9c:	203ee526 	beq	r4,zero,2b834 <__adddf3+0x388>
   2bca0:	4808d0fa 	srli	r4,r9,3
   2bca4:	2140022c 	andhi	r5,r4,8
   2bca8:	283ee21e 	bne	r5,zero,2b834 <__adddf3+0x388>
   2bcac:	4812977a 	slli	r9,r9,29
   2bcb0:	30c4703a 	and	r2,r6,r3
   2bcb4:	3821883a 	mov	r16,r7
   2bcb8:	1244b03a 	or	r2,r2,r9
   2bcbc:	2015883a 	mov	r10,r4
   2bcc0:	003edc06 	br	2b834 <__adddf3+0x388>
   2bcc4:	4804977a 	slli	r2,r9,29
   2bcc8:	01080034 	movhi	r4,8192
   2bccc:	213fffc4 	addi	r4,r4,-1
   2bcd0:	310c703a 	and	r6,r6,r4
   2bcd4:	4814d0fa 	srli	r10,r9,3
   2bcd8:	1184b03a 	or	r2,r2,r6
   2bcdc:	003ebc06 	br	2b7d0 <__adddf3+0x324>
   2bce0:	00880034 	movhi	r2,8192
   2bce4:	10bfffc4 	addi	r2,r2,-1
   2bce8:	2084703a 	and	r2,r4,r2
   2bcec:	1144b03a 	or	r2,r2,r5
   2bcf0:	003ed006 	br	2b834 <__adddf3+0x388>
   2bcf4:	193ff804 	addi	r4,r3,-32
   2bcf8:	19400820 	cmpeqi	r5,r3,32
   2bcfc:	5108d83a 	srl	r4,r10,r4
   2bd00:	2800041e 	bne	r5,zero,2bd14 <__adddf3+0x868>
   2bd04:	01401004 	movi	r5,64
   2bd08:	28c7c83a 	sub	r3,r5,r3
   2bd0c:	50d4983a 	sll	r10,r10,r3
   2bd10:	729cb03a 	or	r14,r14,r10
   2bd14:	7022c03a 	cmpne	r17,r14,zero
   2bd18:	8922b03a 	or	r17,r17,r4
   2bd1c:	003eef06 	br	2b8dc <__adddf3+0x430>
   2bd20:	7363883a 	add	r17,r14,r13
   2bd24:	5255883a 	add	r10,r10,r9
   2bd28:	8b51803a 	cmpltu	r8,r17,r13
   2bd2c:	5211883a 	add	r8,r10,r8
   2bd30:	003f7e06 	br	2bb2c <__adddf3+0x680>
   2bd34:	4b50b03a 	or	r8,r9,r13
   2bd38:	500a977a 	slli	r5,r10,29
   2bd3c:	5014d0fa 	srli	r10,r10,3
   2bd40:	403fe726 	beq	r8,zero,2bce0 <__adddf3+0x834>
   2bd44:	00c80034 	movhi	r3,8192
   2bd48:	18ffffc4 	addi	r3,r3,-1
   2bd4c:	20c4703a 	and	r2,r4,r3
   2bd50:	5100022c 	andhi	r4,r10,8
   2bd54:	1144b03a 	or	r2,r2,r5
   2bd58:	203eb626 	beq	r4,zero,2b834 <__adddf3+0x388>
   2bd5c:	4808d0fa 	srli	r4,r9,3
   2bd60:	2140022c 	andhi	r5,r4,8
   2bd64:	283eb31e 	bne	r5,zero,2b834 <__adddf3+0x388>
   2bd68:	4804977a 	slli	r2,r9,29
   2bd6c:	30cc703a 	and	r6,r6,r3
   2bd70:	3821883a 	mov	r16,r7
   2bd74:	3084b03a 	or	r2,r6,r2
   2bd78:	2015883a 	mov	r10,r4
   2bd7c:	003ead06 	br	2b834 <__adddf3+0x388>
   2bd80:	8a04b03a 	or	r2,r17,r8
   2bd84:	103f1126 	beq	r2,zero,2b9cc <__adddf3+0x520>
   2bd88:	003e8806 	br	2b7ac <__adddf3+0x300>
   2bd8c:	0005883a 	mov	r2,zero
   2bd90:	00c1ffc4 	movi	r3,2047
   2bd94:	0011883a 	mov	r8,zero
   2bd98:	003e2a06 	br	2b644 <__adddf3+0x198>

0002bd9c <__divdf3>:
   2bd9c:	2810d53a 	srli	r8,r5,20
   2bda0:	defff004 	addi	sp,sp,-64
   2bda4:	dc000615 	stw	r16,24(sp)
   2bda8:	04000434 	movhi	r16,16
   2bdac:	df000e15 	stw	fp,56(sp)
   2bdb0:	ddc00d15 	stw	r23,52(sp)
   2bdb4:	dd800c15 	stw	r22,48(sp)
   2bdb8:	dd000a15 	stw	r20,40(sp)
   2bdbc:	843fffc4 	addi	r16,r16,-1
   2bdc0:	dfc00f15 	stw	ra,60(sp)
   2bdc4:	dd400b15 	stw	r21,44(sp)
   2bdc8:	dcc00915 	stw	r19,36(sp)
   2bdcc:	dc800815 	stw	r18,32(sp)
   2bdd0:	dc400715 	stw	r17,28(sp)
   2bdd4:	4201ffcc 	andi	r8,r8,2047
   2bdd8:	282ed7fa 	srli	r23,r5,31
   2bddc:	3039883a 	mov	fp,r6
   2bde0:	382d883a 	mov	r22,r7
   2bde4:	2029883a 	mov	r20,r4
   2bde8:	2c20703a 	and	r16,r5,r16
   2bdec:	40006826 	beq	r8,zero,2bf90 <__divdf3+0x1f4>
   2bdf0:	4081ffe0 	cmpeqi	r2,r8,2047
   2bdf4:	1000791e 	bne	r2,zero,2bfdc <__divdf3+0x240>
   2bdf8:	2026d77a 	srli	r19,r4,29
   2bdfc:	800a90fa 	slli	r5,r16,3
   2be00:	202890fa 	slli	r20,r4,3
   2be04:	44bf0044 	addi	r18,r8,-1023
   2be08:	994ab03a 	or	r5,r19,r5
   2be0c:	2cc02034 	orhi	r19,r5,128
   2be10:	0021883a 	mov	r16,zero
   2be14:	0023883a 	mov	r17,zero
   2be18:	b010d53a 	srli	r8,r22,20
   2be1c:	00c00434 	movhi	r3,16
   2be20:	18ffffc4 	addi	r3,r3,-1
   2be24:	4201ffcc 	andi	r8,r8,2047
   2be28:	b02ad7fa 	srli	r21,r22,31
   2be2c:	b0ec703a 	and	r22,r22,r3
   2be30:	40004626 	beq	r8,zero,2bf4c <__divdf3+0x1b0>
   2be34:	4081ffe0 	cmpeqi	r2,r8,2047
   2be38:	10006f1e 	bne	r2,zero,2bff8 <__divdf3+0x25c>
   2be3c:	b00690fa 	slli	r3,r22,3
   2be40:	e004d77a 	srli	r2,fp,29
   2be44:	e01290fa 	slli	r9,fp,3
   2be48:	423f0044 	addi	r8,r8,-1023
   2be4c:	10c6b03a 	or	r3,r2,r3
   2be50:	1d802034 	orhi	r22,r3,128
   2be54:	9225c83a 	sub	r18,r18,r8
   2be58:	0007883a 	mov	r3,zero
   2be5c:	80800428 	cmpgeui	r2,r16,16
   2be60:	bd4ef03a 	xor	r7,r23,r21
   2be64:	1000a71e 	bne	r2,zero,2c104 <__divdf3+0x368>
   2be68:	800c90ba 	slli	r6,r16,2
   2be6c:	008000f4 	movhi	r2,3
   2be70:	3085883a 	add	r2,r6,r2
   2be74:	10af9f17 	ldw	r2,-16772(r2)
   2be78:	1000683a 	jmp	r2
   2be7c:	0002c104 	movi	zero,2820
   2be80:	0002bf28 	cmpgeui	zero,zero,2812
   2be84:	0002bed8 	cmpnei	zero,zero,2811
   2be88:	0002bf38 	rdprs	zero,zero,2812
   2be8c:	0002bed8 	cmpnei	zero,zero,2811
   2be90:	0002c0a8 	cmpgeui	zero,zero,2818
   2be94:	0002bed8 	cmpnei	zero,zero,2811
   2be98:	0002bf38 	rdprs	zero,zero,2812
   2be9c:	0002bf28 	cmpgeui	zero,zero,2812
   2bea0:	0002bf28 	cmpgeui	zero,zero,2812
   2bea4:	0002c0a8 	cmpgeui	zero,zero,2818
   2bea8:	0002bf38 	rdprs	zero,zero,2812
   2beac:	0002bebc 	xorhi	zero,zero,2810
   2beb0:	0002bebc 	xorhi	zero,zero,2810
   2beb4:	0002bebc 	xorhi	zero,zero,2810
   2beb8:	0002c0c0 	call	2c0c <__alt_mem_onchip_memory-0x1d3f4>
   2bebc:	b80f883a 	mov	r7,r23
   2bec0:	888000a0 	cmpeqi	r2,r17,2
   2bec4:	1000181e 	bne	r2,zero,2bf28 <__divdf3+0x18c>
   2bec8:	888000e0 	cmpeqi	r2,r17,3
   2becc:	1001f61e 	bne	r2,zero,2c6a8 <__divdf3+0x90c>
   2bed0:	88800060 	cmpeqi	r2,r17,1
   2bed4:	10006126 	beq	r2,zero,2c05c <__divdf3+0x2c0>
   2bed8:	0007883a 	mov	r3,zero
   2bedc:	000b883a 	mov	r5,zero
   2bee0:	0029883a 	mov	r20,zero
   2bee4:	1806953a 	slli	r3,r3,20
   2bee8:	380e97fa 	slli	r7,r7,31
   2beec:	a005883a 	mov	r2,r20
   2bef0:	1946b03a 	or	r3,r3,r5
   2bef4:	19c6b03a 	or	r3,r3,r7
   2bef8:	dfc00f17 	ldw	ra,60(sp)
   2befc:	df000e17 	ldw	fp,56(sp)
   2bf00:	ddc00d17 	ldw	r23,52(sp)
   2bf04:	dd800c17 	ldw	r22,48(sp)
   2bf08:	dd400b17 	ldw	r21,44(sp)
   2bf0c:	dd000a17 	ldw	r20,40(sp)
   2bf10:	dcc00917 	ldw	r19,36(sp)
   2bf14:	dc800817 	ldw	r18,32(sp)
   2bf18:	dc400717 	ldw	r17,28(sp)
   2bf1c:	dc000617 	ldw	r16,24(sp)
   2bf20:	dec01004 	addi	sp,sp,64
   2bf24:	f800283a 	ret
   2bf28:	00c1ffc4 	movi	r3,2047
   2bf2c:	000b883a 	mov	r5,zero
   2bf30:	0029883a 	mov	r20,zero
   2bf34:	003feb06 	br	2bee4 <__divdf3+0x148>
   2bf38:	a80f883a 	mov	r7,r21
   2bf3c:	b027883a 	mov	r19,r22
   2bf40:	4829883a 	mov	r20,r9
   2bf44:	1823883a 	mov	r17,r3
   2bf48:	003fdd06 	br	2bec0 <__divdf3+0x124>
   2bf4c:	b712b03a 	or	r9,r22,fp
   2bf50:	48003e26 	beq	r9,zero,2c04c <__divdf3+0x2b0>
   2bf54:	b0017726 	beq	r22,zero,2c534 <__divdf3+0x798>
   2bf58:	b009883a 	mov	r4,r22
   2bf5c:	002db980 	call	2db98 <__clzsi2>
   2bf60:	117ffd44 	addi	r5,r2,-11
   2bf64:	01000744 	movi	r4,29
   2bf68:	127ffe04 	addi	r9,r2,-8
   2bf6c:	2149c83a 	sub	r4,r4,r5
   2bf70:	b246983a 	sll	r3,r22,r9
   2bf74:	e108d83a 	srl	r4,fp,r4
   2bf78:	e252983a 	sll	r9,fp,r9
   2bf7c:	20ecb03a 	or	r22,r4,r3
   2bf80:	1491883a 	add	r8,r2,r18
   2bf84:	4480fcc4 	addi	r18,r8,1011
   2bf88:	0007883a 	mov	r3,zero
   2bf8c:	003fb306 	br	2be5c <__divdf3+0xc0>
   2bf90:	8126b03a 	or	r19,r16,r4
   2bf94:	2023883a 	mov	r17,r4
   2bf98:	98002726 	beq	r19,zero,2c038 <__divdf3+0x29c>
   2bf9c:	80017026 	beq	r16,zero,2c560 <__divdf3+0x7c4>
   2bfa0:	8009883a 	mov	r4,r16
   2bfa4:	002db980 	call	2db98 <__clzsi2>
   2bfa8:	113ffd44 	addi	r4,r2,-11
   2bfac:	00c00744 	movi	r3,29
   2bfb0:	14fffe04 	addi	r19,r2,-8
   2bfb4:	1907c83a 	sub	r3,r3,r4
   2bfb8:	84ca983a 	sll	r5,r16,r19
   2bfbc:	88c6d83a 	srl	r3,r17,r3
   2bfc0:	8ce8983a 	sll	r20,r17,r19
   2bfc4:	1966b03a 	or	r19,r3,r5
   2bfc8:	023f0344 	movi	r8,-1011
   2bfcc:	40a5c83a 	sub	r18,r8,r2
   2bfd0:	0021883a 	mov	r16,zero
   2bfd4:	0023883a 	mov	r17,zero
   2bfd8:	003f8f06 	br	2be18 <__divdf3+0x7c>
   2bfdc:	8126b03a 	or	r19,r16,r4
   2bfe0:	9800101e 	bne	r19,zero,2c024 <__divdf3+0x288>
   2bfe4:	0029883a 	mov	r20,zero
   2bfe8:	04000204 	movi	r16,8
   2bfec:	0481ffc4 	movi	r18,2047
   2bff0:	04400084 	movi	r17,2
   2bff4:	003f8806 	br	2be18 <__divdf3+0x7c>
   2bff8:	b712b03a 	or	r9,r22,fp
   2bffc:	94be0044 	addi	r18,r18,-2047
   2c000:	4800041e 	bne	r9,zero,2c014 <__divdf3+0x278>
   2c004:	84000094 	ori	r16,r16,2
   2c008:	002d883a 	mov	r22,zero
   2c00c:	00c00084 	movi	r3,2
   2c010:	003f9206 	br	2be5c <__divdf3+0xc0>
   2c014:	840000d4 	ori	r16,r16,3
   2c018:	e013883a 	mov	r9,fp
   2c01c:	00c000c4 	movi	r3,3
   2c020:	003f8e06 	br	2be5c <__divdf3+0xc0>
   2c024:	8027883a 	mov	r19,r16
   2c028:	0481ffc4 	movi	r18,2047
   2c02c:	04000304 	movi	r16,12
   2c030:	044000c4 	movi	r17,3
   2c034:	003f7806 	br	2be18 <__divdf3+0x7c>
   2c038:	0029883a 	mov	r20,zero
   2c03c:	04000104 	movi	r16,4
   2c040:	0025883a 	mov	r18,zero
   2c044:	04400044 	movi	r17,1
   2c048:	003f7306 	br	2be18 <__divdf3+0x7c>
   2c04c:	84000054 	ori	r16,r16,1
   2c050:	002d883a 	mov	r22,zero
   2c054:	00c00044 	movi	r3,1
   2c058:	003f8006 	br	2be5c <__divdf3+0xc0>
   2c05c:	9440ffc4 	addi	r17,r18,1023
   2c060:	0441050e 	bge	zero,r17,2c478 <__divdf3+0x6dc>
   2c064:	a08001cc 	andi	r2,r20,7
   2c068:	10016c1e 	bne	r2,zero,2c61c <__divdf3+0x880>
   2c06c:	a008d0fa 	srli	r4,r20,3
   2c070:	9880402c 	andhi	r2,r19,256
   2c074:	10000426 	beq	r2,zero,2c088 <__divdf3+0x2ec>
   2c078:	00bfc034 	movhi	r2,65280
   2c07c:	10bfffc4 	addi	r2,r2,-1
   2c080:	98a6703a 	and	r19,r19,r2
   2c084:	94410004 	addi	r17,r18,1024
   2c088:	8881ffc8 	cmpgei	r2,r17,2047
   2c08c:	103fa61e 	bne	r2,zero,2bf28 <__divdf3+0x18c>
   2c090:	9828977a 	slli	r20,r19,29
   2c094:	980a927a 	slli	r5,r19,9
   2c098:	88c1ffcc 	andi	r3,r17,2047
   2c09c:	a128b03a 	or	r20,r20,r4
   2c0a0:	280ad33a 	srli	r5,r5,12
   2c0a4:	003f8f06 	br	2bee4 <__divdf3+0x148>
   2c0a8:	01400434 	movhi	r5,16
   2c0ac:	000f883a 	mov	r7,zero
   2c0b0:	297fffc4 	addi	r5,r5,-1
   2c0b4:	053fffc4 	movi	r20,-1
   2c0b8:	00c1ffc4 	movi	r3,2047
   2c0bc:	003f8906 	br	2bee4 <__divdf3+0x148>
   2c0c0:	9880022c 	andhi	r2,r19,8
   2c0c4:	10000926 	beq	r2,zero,2c0ec <__divdf3+0x350>
   2c0c8:	b080022c 	andhi	r2,r22,8
   2c0cc:	1000071e 	bne	r2,zero,2c0ec <__divdf3+0x350>
   2c0d0:	00800434 	movhi	r2,16
   2c0d4:	b1400234 	orhi	r5,r22,8
   2c0d8:	10bfffc4 	addi	r2,r2,-1
   2c0dc:	288a703a 	and	r5,r5,r2
   2c0e0:	a80f883a 	mov	r7,r21
   2c0e4:	4829883a 	mov	r20,r9
   2c0e8:	003ff306 	br	2c0b8 <__divdf3+0x31c>
   2c0ec:	00800434 	movhi	r2,16
   2c0f0:	99400234 	orhi	r5,r19,8
   2c0f4:	10bfffc4 	addi	r2,r2,-1
   2c0f8:	288a703a 	and	r5,r5,r2
   2c0fc:	b80f883a 	mov	r7,r23
   2c100:	003fed06 	br	2c0b8 <__divdf3+0x31c>
   2c104:	b4c10536 	bltu	r22,r19,2c51c <__divdf3+0x780>
   2c108:	b4c10326 	beq	r22,r19,2c518 <__divdf3+0x77c>
   2c10c:	94bfffc4 	addi	r18,r18,-1
   2c110:	a039883a 	mov	fp,r20
   2c114:	9821883a 	mov	r16,r19
   2c118:	0023883a 	mov	r17,zero
   2c11c:	b006923a 	slli	r3,r22,8
   2c120:	482cd63a 	srli	r22,r9,24
   2c124:	8009883a 	mov	r4,r16
   2c128:	182ed43a 	srli	r23,r3,16
   2c12c:	b0ecb03a 	or	r22,r22,r3
   2c130:	d9c00015 	stw	r7,0(sp)
   2c134:	b80b883a 	mov	r5,r23
   2c138:	482a923a 	slli	r21,r9,8
   2c13c:	b53fffcc 	andi	r20,r22,65535
   2c140:	002b3c40 	call	2b3c4 <__udivsi3>
   2c144:	100b883a 	mov	r5,r2
   2c148:	a009883a 	mov	r4,r20
   2c14c:	1027883a 	mov	r19,r2
   2c150:	002b4840 	call	2b484 <__mulsi3>
   2c154:	8009883a 	mov	r4,r16
   2c158:	b80b883a 	mov	r5,r23
   2c15c:	1021883a 	mov	r16,r2
   2c160:	002b4280 	call	2b428 <__umodsi3>
   2c164:	1004943a 	slli	r2,r2,16
   2c168:	e008d43a 	srli	r4,fp,16
   2c16c:	d9c00017 	ldw	r7,0(sp)
   2c170:	2088b03a 	or	r4,r4,r2
   2c174:	2400042e 	bgeu	r4,r16,2c188 <__divdf3+0x3ec>
   2c178:	2589883a 	add	r4,r4,r22
   2c17c:	98bfffc4 	addi	r2,r19,-1
   2c180:	2581082e 	bgeu	r4,r22,2c5a4 <__divdf3+0x808>
   2c184:	1027883a 	mov	r19,r2
   2c188:	2421c83a 	sub	r16,r4,r16
   2c18c:	b80b883a 	mov	r5,r23
   2c190:	8009883a 	mov	r4,r16
   2c194:	d9c00215 	stw	r7,8(sp)
   2c198:	002b3c40 	call	2b3c4 <__udivsi3>
   2c19c:	100b883a 	mov	r5,r2
   2c1a0:	a009883a 	mov	r4,r20
   2c1a4:	d8800115 	stw	r2,4(sp)
   2c1a8:	002b4840 	call	2b484 <__mulsi3>
   2c1ac:	b80b883a 	mov	r5,r23
   2c1b0:	8009883a 	mov	r4,r16
   2c1b4:	d8800015 	stw	r2,0(sp)
   2c1b8:	002b4280 	call	2b428 <__umodsi3>
   2c1bc:	100c943a 	slli	r6,r2,16
   2c1c0:	d8c00017 	ldw	r3,0(sp)
   2c1c4:	e73fffcc 	andi	fp,fp,65535
   2c1c8:	e18cb03a 	or	r6,fp,r6
   2c1cc:	da000117 	ldw	r8,4(sp)
   2c1d0:	d9c00217 	ldw	r7,8(sp)
   2c1d4:	30c0042e 	bgeu	r6,r3,2c1e8 <__divdf3+0x44c>
   2c1d8:	358d883a 	add	r6,r6,r22
   2c1dc:	40bfffc4 	addi	r2,r8,-1
   2c1e0:	3580ec2e 	bgeu	r6,r22,2c594 <__divdf3+0x7f8>
   2c1e4:	1011883a 	mov	r8,r2
   2c1e8:	9826943a 	slli	r19,r19,16
   2c1ec:	af3fffcc 	andi	fp,r21,65535
   2c1f0:	30c7c83a 	sub	r3,r6,r3
   2c1f4:	9a26b03a 	or	r19,r19,r8
   2c1f8:	9810d43a 	srli	r8,r19,16
   2c1fc:	9abfffcc 	andi	r10,r19,65535
   2c200:	5009883a 	mov	r4,r10
   2c204:	e00b883a 	mov	r5,fp
   2c208:	d9c00515 	stw	r7,20(sp)
   2c20c:	d8c00315 	stw	r3,12(sp)
   2c210:	da800415 	stw	r10,16(sp)
   2c214:	da000015 	stw	r8,0(sp)
   2c218:	002b4840 	call	2b484 <__mulsi3>
   2c21c:	da000017 	ldw	r8,0(sp)
   2c220:	e00b883a 	mov	r5,fp
   2c224:	d8800215 	stw	r2,8(sp)
   2c228:	4009883a 	mov	r4,r8
   2c22c:	002b4840 	call	2b484 <__mulsi3>
   2c230:	da000017 	ldw	r8,0(sp)
   2c234:	a820d43a 	srli	r16,r21,16
   2c238:	d8800115 	stw	r2,4(sp)
   2c23c:	4009883a 	mov	r4,r8
   2c240:	800b883a 	mov	r5,r16
   2c244:	002b4840 	call	2b484 <__mulsi3>
   2c248:	da800417 	ldw	r10,16(sp)
   2c24c:	8009883a 	mov	r4,r16
   2c250:	d8800015 	stw	r2,0(sp)
   2c254:	500b883a 	mov	r5,r10
   2c258:	002b4840 	call	2b484 <__mulsi3>
   2c25c:	d9800217 	ldw	r6,8(sp)
   2c260:	da000117 	ldw	r8,4(sp)
   2c264:	da400017 	ldw	r9,0(sp)
   2c268:	3008d43a 	srli	r4,r6,16
   2c26c:	1205883a 	add	r2,r2,r8
   2c270:	d8c00317 	ldw	r3,12(sp)
   2c274:	2089883a 	add	r4,r4,r2
   2c278:	d9c00517 	ldw	r7,20(sp)
   2c27c:	2200022e 	bgeu	r4,r8,2c288 <__divdf3+0x4ec>
   2c280:	00800074 	movhi	r2,1
   2c284:	4893883a 	add	r9,r9,r2
   2c288:	200ad43a 	srli	r5,r4,16
   2c28c:	2008943a 	slli	r4,r4,16
   2c290:	31bfffcc 	andi	r6,r6,65535
   2c294:	2a4b883a 	add	r5,r5,r9
   2c298:	218d883a 	add	r6,r4,r6
   2c29c:	19409436 	bltu	r3,r5,2c4f0 <__divdf3+0x754>
   2c2a0:	19409226 	beq	r3,r5,2c4ec <__divdf3+0x750>
   2c2a4:	898dc83a 	sub	r6,r17,r6
   2c2a8:	89a3803a 	cmpltu	r17,r17,r6
   2c2ac:	1947c83a 	sub	r3,r3,r5
   2c2b0:	1c47c83a 	sub	r3,r3,r17
   2c2b4:	9440ffc4 	addi	r17,r18,1023
   2c2b8:	b0c0d326 	beq	r22,r3,2c608 <__divdf3+0x86c>
   2c2bc:	1809883a 	mov	r4,r3
   2c2c0:	b80b883a 	mov	r5,r23
   2c2c4:	d9800315 	stw	r6,12(sp)
   2c2c8:	d9c00215 	stw	r7,8(sp)
   2c2cc:	d8c00015 	stw	r3,0(sp)
   2c2d0:	002b3c40 	call	2b3c4 <__udivsi3>
   2c2d4:	100b883a 	mov	r5,r2
   2c2d8:	a009883a 	mov	r4,r20
   2c2dc:	d8800115 	stw	r2,4(sp)
   2c2e0:	002b4840 	call	2b484 <__mulsi3>
   2c2e4:	d8c00017 	ldw	r3,0(sp)
   2c2e8:	b80b883a 	mov	r5,r23
   2c2ec:	d8800015 	stw	r2,0(sp)
   2c2f0:	1809883a 	mov	r4,r3
   2c2f4:	002b4280 	call	2b428 <__umodsi3>
   2c2f8:	d9800317 	ldw	r6,12(sp)
   2c2fc:	1006943a 	slli	r3,r2,16
   2c300:	da400017 	ldw	r9,0(sp)
   2c304:	3008d43a 	srli	r4,r6,16
   2c308:	da000117 	ldw	r8,4(sp)
   2c30c:	d9c00217 	ldw	r7,8(sp)
   2c310:	20c6b03a 	or	r3,r4,r3
   2c314:	1a40062e 	bgeu	r3,r9,2c330 <__divdf3+0x594>
   2c318:	1d87883a 	add	r3,r3,r22
   2c31c:	40bfffc4 	addi	r2,r8,-1
   2c320:	1d80c836 	bltu	r3,r22,2c644 <__divdf3+0x8a8>
   2c324:	1a40c72e 	bgeu	r3,r9,2c644 <__divdf3+0x8a8>
   2c328:	423fff84 	addi	r8,r8,-2
   2c32c:	1d87883a 	add	r3,r3,r22
   2c330:	1a47c83a 	sub	r3,r3,r9
   2c334:	1809883a 	mov	r4,r3
   2c338:	b80b883a 	mov	r5,r23
   2c33c:	d9800415 	stw	r6,16(sp)
   2c340:	d9c00315 	stw	r7,12(sp)
   2c344:	da000215 	stw	r8,8(sp)
   2c348:	d8c00115 	stw	r3,4(sp)
   2c34c:	002b3c40 	call	2b3c4 <__udivsi3>
   2c350:	100b883a 	mov	r5,r2
   2c354:	a009883a 	mov	r4,r20
   2c358:	d8800015 	stw	r2,0(sp)
   2c35c:	002b4840 	call	2b484 <__mulsi3>
   2c360:	d8c00117 	ldw	r3,4(sp)
   2c364:	b80b883a 	mov	r5,r23
   2c368:	102f883a 	mov	r23,r2
   2c36c:	1809883a 	mov	r4,r3
   2c370:	002b4280 	call	2b428 <__umodsi3>
   2c374:	d9800417 	ldw	r6,16(sp)
   2c378:	1004943a 	slli	r2,r2,16
   2c37c:	da400017 	ldw	r9,0(sp)
   2c380:	31bfffcc 	andi	r6,r6,65535
   2c384:	308cb03a 	or	r6,r6,r2
   2c388:	da000217 	ldw	r8,8(sp)
   2c38c:	d9c00317 	ldw	r7,12(sp)
   2c390:	35c0062e 	bgeu	r6,r23,2c3ac <__divdf3+0x610>
   2c394:	358d883a 	add	r6,r6,r22
   2c398:	48bfffc4 	addi	r2,r9,-1
   2c39c:	3580a736 	bltu	r6,r22,2c63c <__divdf3+0x8a0>
   2c3a0:	35c0a62e 	bgeu	r6,r23,2c63c <__divdf3+0x8a0>
   2c3a4:	4a7fff84 	addi	r9,r9,-2
   2c3a8:	358d883a 	add	r6,r6,r22
   2c3ac:	4028943a 	slli	r20,r8,16
   2c3b0:	35d5c83a 	sub	r10,r6,r23
   2c3b4:	e009883a 	mov	r4,fp
   2c3b8:	a268b03a 	or	r20,r20,r9
   2c3bc:	a23fffcc 	andi	r8,r20,65535
   2c3c0:	a02ed43a 	srli	r23,r20,16
   2c3c4:	400b883a 	mov	r5,r8
   2c3c8:	d9c00315 	stw	r7,12(sp)
   2c3cc:	da800215 	stw	r10,8(sp)
   2c3d0:	da000115 	stw	r8,4(sp)
   2c3d4:	002b4840 	call	2b484 <__mulsi3>
   2c3d8:	e00b883a 	mov	r5,fp
   2c3dc:	b809883a 	mov	r4,r23
   2c3e0:	1039883a 	mov	fp,r2
   2c3e4:	002b4840 	call	2b484 <__mulsi3>
   2c3e8:	8009883a 	mov	r4,r16
   2c3ec:	b80b883a 	mov	r5,r23
   2c3f0:	d8800015 	stw	r2,0(sp)
   2c3f4:	002b4840 	call	2b484 <__mulsi3>
   2c3f8:	da000117 	ldw	r8,4(sp)
   2c3fc:	8009883a 	mov	r4,r16
   2c400:	1021883a 	mov	r16,r2
   2c404:	400b883a 	mov	r5,r8
   2c408:	002b4840 	call	2b484 <__mulsi3>
   2c40c:	d9800017 	ldw	r6,0(sp)
   2c410:	e006d43a 	srli	r3,fp,16
   2c414:	da800217 	ldw	r10,8(sp)
   2c418:	1185883a 	add	r2,r2,r6
   2c41c:	1887883a 	add	r3,r3,r2
   2c420:	d9c00317 	ldw	r7,12(sp)
   2c424:	1980022e 	bgeu	r3,r6,2c430 <__divdf3+0x694>
   2c428:	00800074 	movhi	r2,1
   2c42c:	80a1883a 	add	r16,r16,r2
   2c430:	1808d43a 	srli	r4,r3,16
   2c434:	1806943a 	slli	r3,r3,16
   2c438:	e73fffcc 	andi	fp,fp,65535
   2c43c:	2409883a 	add	r4,r4,r16
   2c440:	1f07883a 	add	r3,r3,fp
   2c444:	51000436 	bltu	r10,r4,2c458 <__divdf3+0x6bc>
   2c448:	51000226 	beq	r10,r4,2c454 <__divdf3+0x6b8>
   2c44c:	a5000054 	ori	r20,r20,1
   2c450:	003f0306 	br	2c060 <__divdf3+0x2c4>
   2c454:	183f0226 	beq	r3,zero,2c060 <__divdf3+0x2c4>
   2c458:	b28d883a 	add	r6,r22,r10
   2c45c:	a0bfffc4 	addi	r2,r20,-1
   2c460:	35806536 	bltu	r6,r22,2c5f8 <__divdf3+0x85c>
   2c464:	31008036 	bltu	r6,r4,2c668 <__divdf3+0x8cc>
   2c468:	31009426 	beq	r6,r4,2c6bc <__divdf3+0x920>
   2c46c:	1029883a 	mov	r20,r2
   2c470:	003ff606 	br	2c44c <__divdf3+0x6b0>
   2c474:	053fffc4 	movi	r20,-1
   2c478:	01400044 	movi	r5,1
   2c47c:	2c4bc83a 	sub	r5,r5,r17
   2c480:	28800e48 	cmpgei	r2,r5,57
   2c484:	103e941e 	bne	r2,zero,2bed8 <__divdf3+0x13c>
   2c488:	28800808 	cmpgei	r2,r5,32
   2c48c:	1000491e 	bne	r2,zero,2c5b4 <__divdf3+0x818>
   2c490:	92010784 	addi	r8,r18,1054
   2c494:	9a04983a 	sll	r2,r19,r8
   2c498:	a146d83a 	srl	r3,r20,r5
   2c49c:	a210983a 	sll	r8,r20,r8
   2c4a0:	994ad83a 	srl	r5,r19,r5
   2c4a4:	10e8b03a 	or	r20,r2,r3
   2c4a8:	4010c03a 	cmpne	r8,r8,zero
   2c4ac:	a228b03a 	or	r20,r20,r8
   2c4b0:	a08001cc 	andi	r2,r20,7
   2c4b4:	10000726 	beq	r2,zero,2c4d4 <__divdf3+0x738>
   2c4b8:	a08003cc 	andi	r2,r20,15
   2c4bc:	10800120 	cmpeqi	r2,r2,4
   2c4c0:	1000041e 	bne	r2,zero,2c4d4 <__divdf3+0x738>
   2c4c4:	a0800104 	addi	r2,r20,4
   2c4c8:	1529803a 	cmpltu	r20,r2,r20
   2c4cc:	2d0b883a 	add	r5,r5,r20
   2c4d0:	1029883a 	mov	r20,r2
   2c4d4:	2880202c 	andhi	r2,r5,128
   2c4d8:	10006f26 	beq	r2,zero,2c698 <__divdf3+0x8fc>
   2c4dc:	00c00044 	movi	r3,1
   2c4e0:	000b883a 	mov	r5,zero
   2c4e4:	0029883a 	mov	r20,zero
   2c4e8:	003e7e06 	br	2bee4 <__divdf3+0x148>
   2c4ec:	89bf6d2e 	bgeu	r17,r6,2c2a4 <__divdf3+0x508>
   2c4f0:	8d63883a 	add	r17,r17,r21
   2c4f4:	8d45803a 	cmpltu	r2,r17,r21
   2c4f8:	1585883a 	add	r2,r2,r22
   2c4fc:	1887883a 	add	r3,r3,r2
   2c500:	98bfffc4 	addi	r2,r19,-1
   2c504:	b0c0202e 	bgeu	r22,r3,2c588 <__divdf3+0x7ec>
   2c508:	19405136 	bltu	r3,r5,2c650 <__divdf3+0x8b4>
   2c50c:	28c04f26 	beq	r5,r3,2c64c <__divdf3+0x8b0>
   2c510:	1027883a 	mov	r19,r2
   2c514:	003f6306 	br	2c2a4 <__divdf3+0x508>
   2c518:	a27efc36 	bltu	r20,r9,2c10c <__divdf3+0x370>
   2c51c:	983897fa 	slli	fp,r19,31
   2c520:	a004d07a 	srli	r2,r20,1
   2c524:	9820d07a 	srli	r16,r19,1
   2c528:	a02297fa 	slli	r17,r20,31
   2c52c:	e0b8b03a 	or	fp,fp,r2
   2c530:	003efa06 	br	2c11c <__divdf3+0x380>
   2c534:	e009883a 	mov	r4,fp
   2c538:	002db980 	call	2db98 <__clzsi2>
   2c53c:	11400544 	addi	r5,r2,21
   2c540:	29000748 	cmpgei	r4,r5,29
   2c544:	1007883a 	mov	r3,r2
   2c548:	10800804 	addi	r2,r2,32
   2c54c:	203e8526 	beq	r4,zero,2bf64 <__divdf3+0x1c8>
   2c550:	18fffe04 	addi	r3,r3,-8
   2c554:	e0ec983a 	sll	r22,fp,r3
   2c558:	0013883a 	mov	r9,zero
   2c55c:	003e8806 	br	2bf80 <__divdf3+0x1e4>
   2c560:	002db980 	call	2db98 <__clzsi2>
   2c564:	11000544 	addi	r4,r2,21
   2c568:	20c00748 	cmpgei	r3,r4,29
   2c56c:	100b883a 	mov	r5,r2
   2c570:	10800804 	addi	r2,r2,32
   2c574:	183e8d26 	beq	r3,zero,2bfac <__divdf3+0x210>
   2c578:	297ffe04 	addi	r5,r5,-8
   2c57c:	a166983a 	sll	r19,r20,r5
   2c580:	0029883a 	mov	r20,zero
   2c584:	003e9006 	br	2bfc8 <__divdf3+0x22c>
   2c588:	b0ffe11e 	bne	r22,r3,2c510 <__divdf3+0x774>
   2c58c:	8d7fe036 	bltu	r17,r21,2c510 <__divdf3+0x774>
   2c590:	003fdd06 	br	2c508 <__divdf3+0x76c>
   2c594:	30ff132e 	bgeu	r6,r3,2c1e4 <__divdf3+0x448>
   2c598:	423fff84 	addi	r8,r8,-2
   2c59c:	358d883a 	add	r6,r6,r22
   2c5a0:	003f1106 	br	2c1e8 <__divdf3+0x44c>
   2c5a4:	243ef72e 	bgeu	r4,r16,2c184 <__divdf3+0x3e8>
   2c5a8:	9cffff84 	addi	r19,r19,-2
   2c5ac:	2589883a 	add	r4,r4,r22
   2c5b0:	003ef506 	br	2c188 <__divdf3+0x3ec>
   2c5b4:	00fff844 	movi	r3,-31
   2c5b8:	1c47c83a 	sub	r3,r3,r17
   2c5bc:	29400820 	cmpeqi	r5,r5,32
   2c5c0:	98c6d83a 	srl	r3,r19,r3
   2c5c4:	2800031e 	bne	r5,zero,2c5d4 <__divdf3+0x838>
   2c5c8:	91410f84 	addi	r5,r18,1086
   2c5cc:	994a983a 	sll	r5,r19,r5
   2c5d0:	a168b03a 	or	r20,r20,r5
   2c5d4:	a028c03a 	cmpne	r20,r20,zero
   2c5d8:	a0e8b03a 	or	r20,r20,r3
   2c5dc:	a4c001cc 	andi	r19,r20,7
   2c5e0:	9800291e 	bne	r19,zero,2c688 <__divdf3+0x8ec>
   2c5e4:	000b883a 	mov	r5,zero
   2c5e8:	a028d0fa 	srli	r20,r20,3
   2c5ec:	0007883a 	mov	r3,zero
   2c5f0:	a4e8b03a 	or	r20,r20,r19
   2c5f4:	003e3b06 	br	2bee4 <__divdf3+0x148>
   2c5f8:	1029883a 	mov	r20,r2
   2c5fc:	313f931e 	bne	r6,r4,2c44c <__divdf3+0x6b0>
   2c600:	1d7f921e 	bne	r3,r21,2c44c <__divdf3+0x6b0>
   2c604:	003e9606 	br	2c060 <__divdf3+0x2c4>
   2c608:	047f9a0e 	bge	zero,r17,2c474 <__divdf3+0x6d8>
   2c60c:	0009883a 	mov	r4,zero
   2c610:	05000044 	movi	r20,1
   2c614:	9d27883a 	add	r19,r19,r20
   2c618:	003e9506 	br	2c070 <__divdf3+0x2d4>
   2c61c:	a08003cc 	andi	r2,r20,15
   2c620:	10800118 	cmpnei	r2,r2,4
   2c624:	103e9126 	beq	r2,zero,2c06c <__divdf3+0x2d0>
   2c628:	a1000104 	addi	r4,r20,4
   2c62c:	00bffec4 	movi	r2,-5
   2c630:	2008d0fa 	srli	r4,r4,3
   2c634:	1529803a 	cmpltu	r20,r2,r20
   2c638:	003ff606 	br	2c614 <__divdf3+0x878>
   2c63c:	1013883a 	mov	r9,r2
   2c640:	003f5a06 	br	2c3ac <__divdf3+0x610>
   2c644:	1011883a 	mov	r8,r2
   2c648:	003f3906 	br	2c330 <__divdf3+0x594>
   2c64c:	89bfb02e 	bgeu	r17,r6,2c510 <__divdf3+0x774>
   2c650:	8d63883a 	add	r17,r17,r21
   2c654:	8d45803a 	cmpltu	r2,r17,r21
   2c658:	1585883a 	add	r2,r2,r22
   2c65c:	9cffff84 	addi	r19,r19,-2
   2c660:	1887883a 	add	r3,r3,r2
   2c664:	003f0f06 	br	2c2a4 <__divdf3+0x508>
   2c668:	ad45883a 	add	r2,r21,r21
   2c66c:	156b803a 	cmpltu	r21,r2,r21
   2c670:	adad883a 	add	r22,r21,r22
   2c674:	358d883a 	add	r6,r6,r22
   2c678:	a53fff84 	addi	r20,r20,-2
   2c67c:	102b883a 	mov	r21,r2
   2c680:	313fdf26 	beq	r6,r4,2c600 <__divdf3+0x864>
   2c684:	003f7106 	br	2c44c <__divdf3+0x6b0>
   2c688:	a08003cc 	andi	r2,r20,15
   2c68c:	10800118 	cmpnei	r2,r2,4
   2c690:	000b883a 	mov	r5,zero
   2c694:	103f8b1e 	bne	r2,zero,2c4c4 <__divdf3+0x728>
   2c698:	2804927a 	slli	r2,r5,9
   2c69c:	2826977a 	slli	r19,r5,29
   2c6a0:	100ad33a 	srli	r5,r2,12
   2c6a4:	003fd006 	br	2c5e8 <__divdf3+0x84c>
   2c6a8:	00800434 	movhi	r2,16
   2c6ac:	99400234 	orhi	r5,r19,8
   2c6b0:	10bfffc4 	addi	r2,r2,-1
   2c6b4:	288a703a 	and	r5,r5,r2
   2c6b8:	003e7f06 	br	2c0b8 <__divdf3+0x31c>
   2c6bc:	a8ffea36 	bltu	r21,r3,2c668 <__divdf3+0x8cc>
   2c6c0:	1029883a 	mov	r20,r2
   2c6c4:	1d7f611e 	bne	r3,r21,2c44c <__divdf3+0x6b0>
   2c6c8:	003e6506 	br	2c060 <__divdf3+0x2c4>

0002c6cc <__eqdf2>:
   2c6cc:	2810d53a 	srli	r8,r5,20
   2c6d0:	3806d53a 	srli	r3,r7,20
   2c6d4:	00800434 	movhi	r2,16
   2c6d8:	4201ffcc 	andi	r8,r8,2047
   2c6dc:	10bfffc4 	addi	r2,r2,-1
   2c6e0:	4241ffd8 	cmpnei	r9,r8,2047
   2c6e4:	2814d7fa 	srli	r10,r5,31
   2c6e8:	3816d7fa 	srli	r11,r7,31
   2c6ec:	288a703a 	and	r5,r5,r2
   2c6f0:	388e703a 	and	r7,r7,r2
   2c6f4:	1881ffcc 	andi	r2,r3,2047
   2c6f8:	48000626 	beq	r9,zero,2c714 <__eqdf2+0x48>
   2c6fc:	10c1ffe0 	cmpeqi	r3,r2,2047
   2c700:	1800021e 	bne	r3,zero,2c70c <__eqdf2+0x40>
   2c704:	4080011e 	bne	r8,r2,2c70c <__eqdf2+0x40>
   2c708:	29c00826 	beq	r5,r7,2c72c <__eqdf2+0x60>
   2c70c:	00800044 	movi	r2,1
   2c710:	f800283a 	ret
   2c714:	2906b03a 	or	r3,r5,r4
   2c718:	183ffc1e 	bne	r3,zero,2c70c <__eqdf2+0x40>
   2c71c:	1081ffd8 	cmpnei	r2,r2,2047
   2c720:	103ffa1e 	bne	r2,zero,2c70c <__eqdf2+0x40>
   2c724:	398eb03a 	or	r7,r7,r6
   2c728:	383ff81e 	bne	r7,zero,2c70c <__eqdf2+0x40>
   2c72c:	21bff71e 	bne	r4,r6,2c70c <__eqdf2+0x40>
   2c730:	52c00426 	beq	r10,r11,2c744 <__eqdf2+0x78>
   2c734:	403ff51e 	bne	r8,zero,2c70c <__eqdf2+0x40>
   2c738:	290ab03a 	or	r5,r5,r4
   2c73c:	2804c03a 	cmpne	r2,r5,zero
   2c740:	f800283a 	ret
   2c744:	0005883a 	mov	r2,zero
   2c748:	f800283a 	ret

0002c74c <__gedf2>:
   2c74c:	2810d53a 	srli	r8,r5,20
   2c750:	3812d53a 	srli	r9,r7,20
   2c754:	00c00434 	movhi	r3,16
   2c758:	4201ffcc 	andi	r8,r8,2047
   2c75c:	18ffffc4 	addi	r3,r3,-1
   2c760:	4281ffd8 	cmpnei	r10,r8,2047
   2c764:	2816d7fa 	srli	r11,r5,31
   2c768:	3804d7fa 	srli	r2,r7,31
   2c76c:	28ca703a 	and	r5,r5,r3
   2c770:	38ce703a 	and	r7,r7,r3
   2c774:	48c1ffcc 	andi	r3,r9,2047
   2c778:	50000a26 	beq	r10,zero,2c7a4 <__gedf2+0x58>
   2c77c:	1a41ffd8 	cmpnei	r9,r3,2047
   2c780:	48000c26 	beq	r9,zero,2c7b4 <__gedf2+0x68>
   2c784:	4000171e 	bne	r8,zero,2c7e4 <__gedf2+0x98>
   2c788:	2912b03a 	or	r9,r5,r4
   2c78c:	1800121e 	bne	r3,zero,2c7d8 <__gedf2+0x8c>
   2c790:	3994b03a 	or	r10,r7,r6
   2c794:	5000101e 	bne	r10,zero,2c7d8 <__gedf2+0x8c>
   2c798:	48000a1e 	bne	r9,zero,2c7c4 <__gedf2+0x78>
   2c79c:	0005883a 	mov	r2,zero
   2c7a0:	f800283a 	ret
   2c7a4:	2912b03a 	or	r9,r5,r4
   2c7a8:	48001d1e 	bne	r9,zero,2c820 <__gedf2+0xd4>
   2c7ac:	1a41ffe0 	cmpeqi	r9,r3,2047
   2c7b0:	48000c26 	beq	r9,zero,2c7e4 <__gedf2+0x98>
   2c7b4:	3992b03a 	or	r9,r7,r6
   2c7b8:	4800191e 	bne	r9,zero,2c820 <__gedf2+0xd4>
   2c7bc:	40000526 	beq	r8,zero,2c7d4 <__gedf2+0x88>
   2c7c0:	58800c26 	beq	r11,r2,2c7f4 <__gedf2+0xa8>
   2c7c4:	00800044 	movi	r2,1
   2c7c8:	58000526 	beq	r11,zero,2c7e0 <__gedf2+0x94>
   2c7cc:	00bfffc4 	movi	r2,-1
   2c7d0:	f800283a 	ret
   2c7d4:	2912b03a 	or	r9,r5,r4
   2c7d8:	483ff91e 	bne	r9,zero,2c7c0 <__gedf2+0x74>
   2c7dc:	103ffb26 	beq	r2,zero,2c7cc <__gedf2+0x80>
   2c7e0:	f800283a 	ret
   2c7e4:	183ff61e 	bne	r3,zero,2c7c0 <__gedf2+0x74>
   2c7e8:	3992b03a 	or	r9,r7,r6
   2c7ec:	483ff41e 	bne	r9,zero,2c7c0 <__gedf2+0x74>
   2c7f0:	003ff406 	br	2c7c4 <__gedf2+0x78>
   2c7f4:	1a000716 	blt	r3,r8,2c814 <__gedf2+0xc8>
   2c7f8:	40fff816 	blt	r8,r3,2c7dc <__gedf2+0x90>
   2c7fc:	397ff136 	bltu	r7,r5,2c7c4 <__gedf2+0x78>
   2c800:	29c00926 	beq	r5,r7,2c828 <__gedf2+0xdc>
   2c804:	29ffe52e 	bgeu	r5,r7,2c79c <__gedf2+0x50>
   2c808:	583ff026 	beq	r11,zero,2c7cc <__gedf2+0x80>
   2c80c:	5805883a 	mov	r2,r11
   2c810:	f800283a 	ret
   2c814:	103fed1e 	bne	r2,zero,2c7cc <__gedf2+0x80>
   2c818:	00800044 	movi	r2,1
   2c81c:	f800283a 	ret
   2c820:	00bfff84 	movi	r2,-2
   2c824:	f800283a 	ret
   2c828:	313fe636 	bltu	r6,r4,2c7c4 <__gedf2+0x78>
   2c82c:	21bfdb2e 	bgeu	r4,r6,2c79c <__gedf2+0x50>
   2c830:	003ff506 	br	2c808 <__gedf2+0xbc>

0002c834 <__ledf2>:
   2c834:	2810d53a 	srli	r8,r5,20
   2c838:	3812d53a 	srli	r9,r7,20
   2c83c:	00c00434 	movhi	r3,16
   2c840:	4201ffcc 	andi	r8,r8,2047
   2c844:	18ffffc4 	addi	r3,r3,-1
   2c848:	4281ffd8 	cmpnei	r10,r8,2047
   2c84c:	2816d7fa 	srli	r11,r5,31
   2c850:	3804d7fa 	srli	r2,r7,31
   2c854:	28ca703a 	and	r5,r5,r3
   2c858:	38ce703a 	and	r7,r7,r3
   2c85c:	48c1ffcc 	andi	r3,r9,2047
   2c860:	50000a26 	beq	r10,zero,2c88c <__ledf2+0x58>
   2c864:	1a41ffd8 	cmpnei	r9,r3,2047
   2c868:	48000c26 	beq	r9,zero,2c89c <__ledf2+0x68>
   2c86c:	4000191e 	bne	r8,zero,2c8d4 <__ledf2+0xa0>
   2c870:	2912b03a 	or	r9,r5,r4
   2c874:	18000d1e 	bne	r3,zero,2c8ac <__ledf2+0x78>
   2c878:	3994b03a 	or	r10,r7,r6
   2c87c:	50000b1e 	bne	r10,zero,2c8ac <__ledf2+0x78>
   2c880:	48000c1e 	bne	r9,zero,2c8b4 <__ledf2+0x80>
   2c884:	0005883a 	mov	r2,zero
   2c888:	f800283a 	ret
   2c88c:	2912b03a 	or	r9,r5,r4
   2c890:	48000c1e 	bne	r9,zero,2c8c4 <__ledf2+0x90>
   2c894:	1a41ffe0 	cmpeqi	r9,r3,2047
   2c898:	48000e26 	beq	r9,zero,2c8d4 <__ledf2+0xa0>
   2c89c:	3992b03a 	or	r9,r7,r6
   2c8a0:	4800081e 	bne	r9,zero,2c8c4 <__ledf2+0x90>
   2c8a4:	4000021e 	bne	r8,zero,2c8b0 <__ledf2+0x7c>
   2c8a8:	2912b03a 	or	r9,r5,r4
   2c8ac:	48000726 	beq	r9,zero,2c8cc <__ledf2+0x98>
   2c8b0:	58800c26 	beq	r11,r2,2c8e4 <__ledf2+0xb0>
   2c8b4:	00800044 	movi	r2,1
   2c8b8:	58000526 	beq	r11,zero,2c8d0 <__ledf2+0x9c>
   2c8bc:	00bfffc4 	movi	r2,-1
   2c8c0:	f800283a 	ret
   2c8c4:	00800084 	movi	r2,2
   2c8c8:	f800283a 	ret
   2c8cc:	103ffb26 	beq	r2,zero,2c8bc <__ledf2+0x88>
   2c8d0:	f800283a 	ret
   2c8d4:	183ff61e 	bne	r3,zero,2c8b0 <__ledf2+0x7c>
   2c8d8:	3992b03a 	or	r9,r7,r6
   2c8dc:	483ff41e 	bne	r9,zero,2c8b0 <__ledf2+0x7c>
   2c8e0:	003ff406 	br	2c8b4 <__ledf2+0x80>
   2c8e4:	1a00030e 	bge	r3,r8,2c8f4 <__ledf2+0xc0>
   2c8e8:	103ff41e 	bne	r2,zero,2c8bc <__ledf2+0x88>
   2c8ec:	00800044 	movi	r2,1
   2c8f0:	f800283a 	ret
   2c8f4:	40fff516 	blt	r8,r3,2c8cc <__ledf2+0x98>
   2c8f8:	397fee36 	bltu	r7,r5,2c8b4 <__ledf2+0x80>
   2c8fc:	29c00426 	beq	r5,r7,2c910 <__ledf2+0xdc>
   2c900:	29ffe02e 	bgeu	r5,r7,2c884 <__ledf2+0x50>
   2c904:	583fed26 	beq	r11,zero,2c8bc <__ledf2+0x88>
   2c908:	5805883a 	mov	r2,r11
   2c90c:	f800283a 	ret
   2c910:	313fe836 	bltu	r6,r4,2c8b4 <__ledf2+0x80>
   2c914:	21bfdb2e 	bgeu	r4,r6,2c884 <__ledf2+0x50>
   2c918:	003ffa06 	br	2c904 <__ledf2+0xd0>

0002c91c <__muldf3>:
   2c91c:	2810d53a 	srli	r8,r5,20
   2c920:	defff004 	addi	sp,sp,-64
   2c924:	00800434 	movhi	r2,16
   2c928:	df000e15 	stw	fp,56(sp)
   2c92c:	dd000a15 	stw	r20,40(sp)
   2c930:	dcc00915 	stw	r19,36(sp)
   2c934:	dc400715 	stw	r17,28(sp)
   2c938:	10bfffc4 	addi	r2,r2,-1
   2c93c:	dfc00f15 	stw	ra,60(sp)
   2c940:	ddc00d15 	stw	r23,52(sp)
   2c944:	dd800c15 	stw	r22,48(sp)
   2c948:	dd400b15 	stw	r21,44(sp)
   2c94c:	dc800815 	stw	r18,32(sp)
   2c950:	dc000615 	stw	r16,24(sp)
   2c954:	4201ffcc 	andi	r8,r8,2047
   2c958:	2828d7fa 	srli	r20,r5,31
   2c95c:	2023883a 	mov	r17,r4
   2c960:	3039883a 	mov	fp,r6
   2c964:	28a6703a 	and	r19,r5,r2
   2c968:	40013426 	beq	r8,zero,2ce3c <__muldf3+0x520>
   2c96c:	4081ffe0 	cmpeqi	r2,r8,2047
   2c970:	1001461e 	bne	r2,zero,2ce8c <__muldf3+0x570>
   2c974:	980a90fa 	slli	r5,r19,3
   2c978:	2026d77a 	srli	r19,r4,29
   2c97c:	202490fa 	slli	r18,r4,3
   2c980:	423f0044 	addi	r8,r8,-1023
   2c984:	9966b03a 	or	r19,r19,r5
   2c988:	9cc02034 	orhi	r19,r19,128
   2c98c:	002b883a 	mov	r21,zero
   2c990:	002d883a 	mov	r22,zero
   2c994:	3804d53a 	srli	r2,r7,20
   2c998:	00c00434 	movhi	r3,16
   2c99c:	18ffffc4 	addi	r3,r3,-1
   2c9a0:	1081ffcc 	andi	r2,r2,2047
   2c9a4:	382ed7fa 	srli	r23,r7,31
   2c9a8:	38e0703a 	and	r16,r7,r3
   2c9ac:	10011026 	beq	r2,zero,2cdf0 <__muldf3+0x4d4>
   2c9b0:	10c1ffe0 	cmpeqi	r3,r2,2047
   2c9b4:	18013c1e 	bne	r3,zero,2cea8 <__muldf3+0x58c>
   2c9b8:	e008d77a 	srli	r4,fp,29
   2c9bc:	802090fa 	slli	r16,r16,3
   2c9c0:	e02290fa 	slli	r17,fp,3
   2c9c4:	10bf0044 	addi	r2,r2,-1023
   2c9c8:	2420b03a 	or	r16,r4,r16
   2c9cc:	84002034 	orhi	r16,r16,128
   2c9d0:	4091883a 	add	r8,r8,r2
   2c9d4:	0009883a 	mov	r4,zero
   2c9d8:	a8800428 	cmpgeui	r2,r21,16
   2c9dc:	a5ccf03a 	xor	r6,r20,r23
   2c9e0:	41c00044 	addi	r7,r8,1
   2c9e4:	1000371e 	bne	r2,zero,2cac4 <__muldf3+0x1a8>
   2c9e8:	a80490ba 	slli	r2,r21,2
   2c9ec:	00c000f4 	movhi	r3,3
   2c9f0:	10c7883a 	add	r3,r2,r3
   2c9f4:	18b27f17 	ldw	r2,-13828(r3)
   2c9f8:	1000683a 	jmp	r2
   2c9fc:	0002cac4 	movi	zero,2859
   2ca00:	0002ca40 	call	2ca4 <__alt_mem_onchip_memory-0x1d35c>
   2ca04:	0002ca40 	call	2ca4 <__alt_mem_onchip_memory-0x1d35c>
   2ca08:	0002ca3c 	xorhi	zero,zero,2856
   2ca0c:	0002ca4c 	andi	zero,zero,2857
   2ca10:	0002ca4c 	andi	zero,zero,2857
   2ca14:	0002cf1c 	xori	zero,zero,2876
   2ca18:	0002ca3c 	xorhi	zero,zero,2856
   2ca1c:	0002ca4c 	andi	zero,zero,2857
   2ca20:	0002cf1c 	xori	zero,zero,2876
   2ca24:	0002ca4c 	andi	zero,zero,2857
   2ca28:	0002ca3c 	xorhi	zero,zero,2856
   2ca2c:	0002cec4 	movi	zero,2875
   2ca30:	0002cec4 	movi	zero,2875
   2ca34:	0002cec4 	movi	zero,2875
   2ca38:	0002cfa8 	cmpgeui	zero,zero,2878
   2ca3c:	b80d883a 	mov	r6,r23
   2ca40:	8027883a 	mov	r19,r16
   2ca44:	8825883a 	mov	r18,r17
   2ca48:	202d883a 	mov	r22,r4
   2ca4c:	b08000a0 	cmpeqi	r2,r22,2
   2ca50:	1000181e 	bne	r2,zero,2cab4 <__muldf3+0x198>
   2ca54:	b08000e0 	cmpeqi	r2,r22,3
   2ca58:	1001961e 	bne	r2,zero,2d0b4 <__muldf3+0x798>
   2ca5c:	b0800060 	cmpeqi	r2,r22,1
   2ca60:	1000c926 	beq	r2,zero,2cd88 <__muldf3+0x46c>
   2ca64:	0007883a 	mov	r3,zero
   2ca68:	0027883a 	mov	r19,zero
   2ca6c:	0025883a 	mov	r18,zero
   2ca70:	1806953a 	slli	r3,r3,20
   2ca74:	300c97fa 	slli	r6,r6,31
   2ca78:	9005883a 	mov	r2,r18
   2ca7c:	1cc6b03a 	or	r3,r3,r19
   2ca80:	1986b03a 	or	r3,r3,r6
   2ca84:	dfc00f17 	ldw	ra,60(sp)
   2ca88:	df000e17 	ldw	fp,56(sp)
   2ca8c:	ddc00d17 	ldw	r23,52(sp)
   2ca90:	dd800c17 	ldw	r22,48(sp)
   2ca94:	dd400b17 	ldw	r21,44(sp)
   2ca98:	dd000a17 	ldw	r20,40(sp)
   2ca9c:	dcc00917 	ldw	r19,36(sp)
   2caa0:	dc800817 	ldw	r18,32(sp)
   2caa4:	dc400717 	ldw	r17,28(sp)
   2caa8:	dc000617 	ldw	r16,24(sp)
   2caac:	dec01004 	addi	sp,sp,64
   2cab0:	f800283a 	ret
   2cab4:	00c1ffc4 	movi	r3,2047
   2cab8:	0027883a 	mov	r19,zero
   2cabc:	0025883a 	mov	r18,zero
   2cac0:	003feb06 	br	2ca70 <__muldf3+0x154>
   2cac4:	9028d43a 	srli	r20,r18,16
   2cac8:	8f3fffcc 	andi	fp,r17,65535
   2cacc:	957fffcc 	andi	r21,r18,65535
   2cad0:	a80b883a 	mov	r5,r21
   2cad4:	e009883a 	mov	r4,fp
   2cad8:	d9800315 	stw	r6,12(sp)
   2cadc:	da000215 	stw	r8,8(sp)
   2cae0:	d9c00115 	stw	r7,4(sp)
   2cae4:	8822d43a 	srli	r17,r17,16
   2cae8:	002b4840 	call	2b484 <__mulsi3>
   2caec:	e00b883a 	mov	r5,fp
   2caf0:	a009883a 	mov	r4,r20
   2caf4:	102d883a 	mov	r22,r2
   2caf8:	002b4840 	call	2b484 <__mulsi3>
   2cafc:	880b883a 	mov	r5,r17
   2cb00:	a009883a 	mov	r4,r20
   2cb04:	102f883a 	mov	r23,r2
   2cb08:	002b4840 	call	2b484 <__mulsi3>
   2cb0c:	a80b883a 	mov	r5,r21
   2cb10:	8809883a 	mov	r4,r17
   2cb14:	d8800015 	stw	r2,0(sp)
   2cb18:	002b4840 	call	2b484 <__mulsi3>
   2cb1c:	b006d43a 	srli	r3,r22,16
   2cb20:	15e5883a 	add	r18,r2,r23
   2cb24:	d9c00117 	ldw	r7,4(sp)
   2cb28:	1c87883a 	add	r3,r3,r18
   2cb2c:	da000217 	ldw	r8,8(sp)
   2cb30:	d9800317 	ldw	r6,12(sp)
   2cb34:	1dc0042e 	bgeu	r3,r23,2cb48 <__muldf3+0x22c>
   2cb38:	d9000017 	ldw	r4,0(sp)
   2cb3c:	00800074 	movhi	r2,1
   2cb40:	2085883a 	add	r2,r4,r2
   2cb44:	d8800015 	stw	r2,0(sp)
   2cb48:	1804943a 	slli	r2,r3,16
   2cb4c:	85ffffcc 	andi	r23,r16,65535
   2cb50:	b5bfffcc 	andi	r22,r22,65535
   2cb54:	1585883a 	add	r2,r2,r22
   2cb58:	a80b883a 	mov	r5,r21
   2cb5c:	b809883a 	mov	r4,r23
   2cb60:	1824d43a 	srli	r18,r3,16
   2cb64:	d9800515 	stw	r6,20(sp)
   2cb68:	da000415 	stw	r8,16(sp)
   2cb6c:	d9c00315 	stw	r7,12(sp)
   2cb70:	8020d43a 	srli	r16,r16,16
   2cb74:	d8800115 	stw	r2,4(sp)
   2cb78:	002b4840 	call	2b484 <__mulsi3>
   2cb7c:	a009883a 	mov	r4,r20
   2cb80:	b80b883a 	mov	r5,r23
   2cb84:	d8800215 	stw	r2,8(sp)
   2cb88:	002b4840 	call	2b484 <__mulsi3>
   2cb8c:	a009883a 	mov	r4,r20
   2cb90:	800b883a 	mov	r5,r16
   2cb94:	102d883a 	mov	r22,r2
   2cb98:	002b4840 	call	2b484 <__mulsi3>
   2cb9c:	a80b883a 	mov	r5,r21
   2cba0:	8009883a 	mov	r4,r16
   2cba4:	1029883a 	mov	r20,r2
   2cba8:	002b4840 	call	2b484 <__mulsi3>
   2cbac:	da800217 	ldw	r10,8(sp)
   2cbb0:	1585883a 	add	r2,r2,r22
   2cbb4:	d9c00317 	ldw	r7,12(sp)
   2cbb8:	5006d43a 	srli	r3,r10,16
   2cbbc:	da000417 	ldw	r8,16(sp)
   2cbc0:	d9800517 	ldw	r6,20(sp)
   2cbc4:	1887883a 	add	r3,r3,r2
   2cbc8:	1d80022e 	bgeu	r3,r22,2cbd4 <__muldf3+0x2b8>
   2cbcc:	00800074 	movhi	r2,1
   2cbd0:	a0a9883a 	add	r20,r20,r2
   2cbd4:	1804d43a 	srli	r2,r3,16
   2cbd8:	1806943a 	slli	r3,r3,16
   2cbdc:	982cd43a 	srli	r22,r19,16
   2cbe0:	9d7fffcc 	andi	r21,r19,65535
   2cbe4:	e009883a 	mov	r4,fp
   2cbe8:	54ffffcc 	andi	r19,r10,65535
   2cbec:	a80b883a 	mov	r5,r21
   2cbf0:	1ce7883a 	add	r19,r3,r19
   2cbf4:	d9800515 	stw	r6,20(sp)
   2cbf8:	da000415 	stw	r8,16(sp)
   2cbfc:	d9c00315 	stw	r7,12(sp)
   2cc00:	1529883a 	add	r20,r2,r20
   2cc04:	002b4840 	call	2b484 <__mulsi3>
   2cc08:	e00b883a 	mov	r5,fp
   2cc0c:	b009883a 	mov	r4,r22
   2cc10:	d8800215 	stw	r2,8(sp)
   2cc14:	002b4840 	call	2b484 <__mulsi3>
   2cc18:	8809883a 	mov	r4,r17
   2cc1c:	b00b883a 	mov	r5,r22
   2cc20:	1039883a 	mov	fp,r2
   2cc24:	002b4840 	call	2b484 <__mulsi3>
   2cc28:	8809883a 	mov	r4,r17
   2cc2c:	a80b883a 	mov	r5,r21
   2cc30:	1023883a 	mov	r17,r2
   2cc34:	002b4840 	call	2b484 <__mulsi3>
   2cc38:	d8c00217 	ldw	r3,8(sp)
   2cc3c:	1705883a 	add	r2,r2,fp
   2cc40:	d9c00317 	ldw	r7,12(sp)
   2cc44:	1808d43a 	srli	r4,r3,16
   2cc48:	da000417 	ldw	r8,16(sp)
   2cc4c:	d9800517 	ldw	r6,20(sp)
   2cc50:	2089883a 	add	r4,r4,r2
   2cc54:	94e5883a 	add	r18,r18,r19
   2cc58:	2700022e 	bgeu	r4,fp,2cc64 <__muldf3+0x348>
   2cc5c:	00800074 	movhi	r2,1
   2cc60:	88a3883a 	add	r17,r17,r2
   2cc64:	2004d43a 	srli	r2,r4,16
   2cc68:	2038943a 	slli	fp,r4,16
   2cc6c:	18ffffcc 	andi	r3,r3,65535
   2cc70:	b809883a 	mov	r4,r23
   2cc74:	a80b883a 	mov	r5,r21
   2cc78:	d9800415 	stw	r6,16(sp)
   2cc7c:	da000315 	stw	r8,12(sp)
   2cc80:	d9c00215 	stw	r7,8(sp)
   2cc84:	e0f9883a 	add	fp,fp,r3
   2cc88:	1463883a 	add	r17,r2,r17
   2cc8c:	002b4840 	call	2b484 <__mulsi3>
   2cc90:	b80b883a 	mov	r5,r23
   2cc94:	b009883a 	mov	r4,r22
   2cc98:	102f883a 	mov	r23,r2
   2cc9c:	002b4840 	call	2b484 <__mulsi3>
   2cca0:	b00b883a 	mov	r5,r22
   2cca4:	8009883a 	mov	r4,r16
   2cca8:	102d883a 	mov	r22,r2
   2ccac:	002b4840 	call	2b484 <__mulsi3>
   2ccb0:	a80b883a 	mov	r5,r21
   2ccb4:	8009883a 	mov	r4,r16
   2ccb8:	1021883a 	mov	r16,r2
   2ccbc:	002b4840 	call	2b484 <__mulsi3>
   2ccc0:	b80ad43a 	srli	r5,r23,16
   2ccc4:	1585883a 	add	r2,r2,r22
   2ccc8:	d9c00217 	ldw	r7,8(sp)
   2cccc:	288b883a 	add	r5,r5,r2
   2ccd0:	da000317 	ldw	r8,12(sp)
   2ccd4:	d9800417 	ldw	r6,16(sp)
   2ccd8:	2d80022e 	bgeu	r5,r22,2cce4 <__muldf3+0x3c8>
   2ccdc:	00800074 	movhi	r2,1
   2cce0:	80a1883a 	add	r16,r16,r2
   2cce4:	2806943a 	slli	r3,r5,16
   2cce8:	d8800017 	ldw	r2,0(sp)
   2ccec:	bdffffcc 	andi	r23,r23,65535
   2ccf0:	1dc7883a 	add	r3,r3,r23
   2ccf4:	90ab883a 	add	r21,r18,r2
   2ccf8:	acd5803a 	cmpltu	r10,r21,r19
   2ccfc:	1d07883a 	add	r3,r3,r20
   2cd00:	af2b883a 	add	r21,r21,fp
   2cd04:	1a97883a 	add	r11,r3,r10
   2cd08:	af09803a 	cmpltu	r4,r21,fp
   2cd0c:	2826d43a 	srli	r19,r5,16
   2cd10:	5c53883a 	add	r9,r11,r17
   2cd14:	4905883a 	add	r2,r9,r4
   2cd18:	1d07803a 	cmpltu	r3,r3,r20
   2cd1c:	5a95803a 	cmpltu	r10,r11,r10
   2cd20:	1a86b03a 	or	r3,r3,r10
   2cd24:	1109803a 	cmpltu	r4,r2,r4
   2cd28:	4c53803a 	cmpltu	r9,r9,r17
   2cd2c:	1ce7883a 	add	r19,r3,r19
   2cd30:	4908b03a 	or	r4,r9,r4
   2cd34:	a824927a 	slli	r18,r21,9
   2cd38:	d8c00117 	ldw	r3,4(sp)
   2cd3c:	9927883a 	add	r19,r19,r4
   2cd40:	9c27883a 	add	r19,r19,r16
   2cd44:	9826927a 	slli	r19,r19,9
   2cd48:	a82ad5fa 	srli	r21,r21,23
   2cd4c:	100ad5fa 	srli	r5,r2,23
   2cd50:	90e4b03a 	or	r18,r18,r3
   2cd54:	1004927a 	slli	r2,r2,9
   2cd58:	9024c03a 	cmpne	r18,r18,zero
   2cd5c:	9564b03a 	or	r18,r18,r21
   2cd60:	98c0402c 	andhi	r3,r19,256
   2cd64:	90a4b03a 	or	r18,r18,r2
   2cd68:	9966b03a 	or	r19,r19,r5
   2cd6c:	1800b626 	beq	r3,zero,2d048 <__muldf3+0x72c>
   2cd70:	9006d07a 	srli	r3,r18,1
   2cd74:	980497fa 	slli	r2,r19,31
   2cd78:	9480004c 	andi	r18,r18,1
   2cd7c:	9826d07a 	srli	r19,r19,1
   2cd80:	1c86b03a 	or	r3,r3,r18
   2cd84:	18a4b03a 	or	r18,r3,r2
   2cd88:	3900ffc4 	addi	r4,r7,1023
   2cd8c:	0100690e 	bge	zero,r4,2cf34 <__muldf3+0x618>
   2cd90:	908001cc 	andi	r2,r18,7
   2cd94:	10000726 	beq	r2,zero,2cdb4 <__muldf3+0x498>
   2cd98:	908003cc 	andi	r2,r18,15
   2cd9c:	10800120 	cmpeqi	r2,r2,4
   2cda0:	1000041e 	bne	r2,zero,2cdb4 <__muldf3+0x498>
   2cda4:	90800104 	addi	r2,r18,4
   2cda8:	14a5803a 	cmpltu	r18,r2,r18
   2cdac:	9ca7883a 	add	r19,r19,r18
   2cdb0:	1025883a 	mov	r18,r2
   2cdb4:	9880402c 	andhi	r2,r19,256
   2cdb8:	10000426 	beq	r2,zero,2cdcc <__muldf3+0x4b0>
   2cdbc:	00bfc034 	movhi	r2,65280
   2cdc0:	10bfffc4 	addi	r2,r2,-1
   2cdc4:	98a6703a 	and	r19,r19,r2
   2cdc8:	39010004 	addi	r4,r7,1024
   2cdcc:	2081ffc8 	cmpgei	r2,r4,2047
   2cdd0:	103f381e 	bne	r2,zero,2cab4 <__muldf3+0x198>
   2cdd4:	9804977a 	slli	r2,r19,29
   2cdd8:	9024d0fa 	srli	r18,r18,3
   2cddc:	9826927a 	slli	r19,r19,9
   2cde0:	20c1ffcc 	andi	r3,r4,2047
   2cde4:	14a4b03a 	or	r18,r2,r18
   2cde8:	9826d33a 	srli	r19,r19,12
   2cdec:	003f2006 	br	2ca70 <__muldf3+0x154>
   2cdf0:	8722b03a 	or	r17,r16,fp
   2cdf4:	88004526 	beq	r17,zero,2cf0c <__muldf3+0x5f0>
   2cdf8:	da000015 	stw	r8,0(sp)
   2cdfc:	80008626 	beq	r16,zero,2d018 <__muldf3+0x6fc>
   2ce00:	8009883a 	mov	r4,r16
   2ce04:	002db980 	call	2db98 <__clzsi2>
   2ce08:	da000017 	ldw	r8,0(sp)
   2ce0c:	117ffd44 	addi	r5,r2,-11
   2ce10:	01000744 	movi	r4,29
   2ce14:	147ffe04 	addi	r17,r2,-8
   2ce18:	2149c83a 	sub	r4,r4,r5
   2ce1c:	8460983a 	sll	r16,r16,r17
   2ce20:	e108d83a 	srl	r4,fp,r4
   2ce24:	e462983a 	sll	r17,fp,r17
   2ce28:	2420b03a 	or	r16,r4,r16
   2ce2c:	4091c83a 	sub	r8,r8,r2
   2ce30:	423f0344 	addi	r8,r8,-1011
   2ce34:	0009883a 	mov	r4,zero
   2ce38:	003ee706 	br	2c9d8 <__muldf3+0xbc>
   2ce3c:	9924b03a 	or	r18,r19,r4
   2ce40:	90002d26 	beq	r18,zero,2cef8 <__muldf3+0x5dc>
   2ce44:	d9c00015 	stw	r7,0(sp)
   2ce48:	98006826 	beq	r19,zero,2cfec <__muldf3+0x6d0>
   2ce4c:	9809883a 	mov	r4,r19
   2ce50:	002db980 	call	2db98 <__clzsi2>
   2ce54:	d9c00017 	ldw	r7,0(sp)
   2ce58:	113ffd44 	addi	r4,r2,-11
   2ce5c:	00c00744 	movi	r3,29
   2ce60:	14bffe04 	addi	r18,r2,-8
   2ce64:	1907c83a 	sub	r3,r3,r4
   2ce68:	9ca6983a 	sll	r19,r19,r18
   2ce6c:	88c6d83a 	srl	r3,r17,r3
   2ce70:	8ca4983a 	sll	r18,r17,r18
   2ce74:	1ce6b03a 	or	r19,r3,r19
   2ce78:	023f0344 	movi	r8,-1011
   2ce7c:	4091c83a 	sub	r8,r8,r2
   2ce80:	002b883a 	mov	r21,zero
   2ce84:	002d883a 	mov	r22,zero
   2ce88:	003ec206 	br	2c994 <__muldf3+0x78>
   2ce8c:	9924b03a 	or	r18,r19,r4
   2ce90:	9000141e 	bne	r18,zero,2cee4 <__muldf3+0x5c8>
   2ce94:	0027883a 	mov	r19,zero
   2ce98:	05400204 	movi	r21,8
   2ce9c:	0201ffc4 	movi	r8,2047
   2cea0:	05800084 	movi	r22,2
   2cea4:	003ebb06 	br	2c994 <__muldf3+0x78>
   2cea8:	8722b03a 	or	r17,r16,fp
   2ceac:	4201ffc4 	addi	r8,r8,2047
   2ceb0:	8800081e 	bne	r17,zero,2ced4 <__muldf3+0x5b8>
   2ceb4:	ad400094 	ori	r21,r21,2
   2ceb8:	0021883a 	mov	r16,zero
   2cebc:	01000084 	movi	r4,2
   2cec0:	003ec506 	br	2c9d8 <__muldf3+0xbc>
   2cec4:	b08000a0 	cmpeqi	r2,r22,2
   2cec8:	a00d883a 	mov	r6,r20
   2cecc:	103ee126 	beq	r2,zero,2ca54 <__muldf3+0x138>
   2ced0:	003ef806 	br	2cab4 <__muldf3+0x198>
   2ced4:	ad4000d4 	ori	r21,r21,3
   2ced8:	e023883a 	mov	r17,fp
   2cedc:	010000c4 	movi	r4,3
   2cee0:	003ebd06 	br	2c9d8 <__muldf3+0xbc>
   2cee4:	2025883a 	mov	r18,r4
   2cee8:	05400304 	movi	r21,12
   2ceec:	0201ffc4 	movi	r8,2047
   2cef0:	058000c4 	movi	r22,3
   2cef4:	003ea706 	br	2c994 <__muldf3+0x78>
   2cef8:	0027883a 	mov	r19,zero
   2cefc:	05400104 	movi	r21,4
   2cf00:	0011883a 	mov	r8,zero
   2cf04:	05800044 	movi	r22,1
   2cf08:	003ea206 	br	2c994 <__muldf3+0x78>
   2cf0c:	ad400054 	ori	r21,r21,1
   2cf10:	0021883a 	mov	r16,zero
   2cf14:	01000044 	movi	r4,1
   2cf18:	003eaf06 	br	2c9d8 <__muldf3+0xbc>
   2cf1c:	04c00434 	movhi	r19,16
   2cf20:	000d883a 	mov	r6,zero
   2cf24:	9cffffc4 	addi	r19,r19,-1
   2cf28:	04bfffc4 	movi	r18,-1
   2cf2c:	00c1ffc4 	movi	r3,2047
   2cf30:	003ecf06 	br	2ca70 <__muldf3+0x154>
   2cf34:	00800044 	movi	r2,1
   2cf38:	1105c83a 	sub	r2,r2,r4
   2cf3c:	10c00e48 	cmpgei	r3,r2,57
   2cf40:	183ec81e 	bne	r3,zero,2ca64 <__muldf3+0x148>
   2cf44:	10c00808 	cmpgei	r3,r2,32
   2cf48:	1800411e 	bne	r3,zero,2d050 <__muldf3+0x734>
   2cf4c:	39c10784 	addi	r7,r7,1054
   2cf50:	99c6983a 	sll	r3,r19,r7
   2cf54:	9088d83a 	srl	r4,r18,r2
   2cf58:	91ce983a 	sll	r7,r18,r7
   2cf5c:	98a6d83a 	srl	r19,r19,r2
   2cf60:	1904b03a 	or	r2,r3,r4
   2cf64:	3824c03a 	cmpne	r18,r7,zero
   2cf68:	1484b03a 	or	r2,r2,r18
   2cf6c:	10c001cc 	andi	r3,r2,7
   2cf70:	18000726 	beq	r3,zero,2cf90 <__muldf3+0x674>
   2cf74:	10c003cc 	andi	r3,r2,15
   2cf78:	18c00120 	cmpeqi	r3,r3,4
   2cf7c:	1800041e 	bne	r3,zero,2cf90 <__muldf3+0x674>
   2cf80:	10c00104 	addi	r3,r2,4
   2cf84:	1885803a 	cmpltu	r2,r3,r2
   2cf88:	98a7883a 	add	r19,r19,r2
   2cf8c:	1805883a 	mov	r2,r3
   2cf90:	98c0202c 	andhi	r3,r19,128
   2cf94:	18004326 	beq	r3,zero,2d0a4 <__muldf3+0x788>
   2cf98:	00c00044 	movi	r3,1
   2cf9c:	0027883a 	mov	r19,zero
   2cfa0:	0025883a 	mov	r18,zero
   2cfa4:	003eb206 	br	2ca70 <__muldf3+0x154>
   2cfa8:	9880022c 	andhi	r2,r19,8
   2cfac:	10000926 	beq	r2,zero,2cfd4 <__muldf3+0x6b8>
   2cfb0:	8080022c 	andhi	r2,r16,8
   2cfb4:	1000071e 	bne	r2,zero,2cfd4 <__muldf3+0x6b8>
   2cfb8:	00800434 	movhi	r2,16
   2cfbc:	84c00234 	orhi	r19,r16,8
   2cfc0:	10bfffc4 	addi	r2,r2,-1
   2cfc4:	98a6703a 	and	r19,r19,r2
   2cfc8:	b80d883a 	mov	r6,r23
   2cfcc:	8825883a 	mov	r18,r17
   2cfd0:	003fd606 	br	2cf2c <__muldf3+0x610>
   2cfd4:	00800434 	movhi	r2,16
   2cfd8:	9cc00234 	orhi	r19,r19,8
   2cfdc:	10bfffc4 	addi	r2,r2,-1
   2cfe0:	98a6703a 	and	r19,r19,r2
   2cfe4:	a00d883a 	mov	r6,r20
   2cfe8:	003fd006 	br	2cf2c <__muldf3+0x610>
   2cfec:	002db980 	call	2db98 <__clzsi2>
   2cff0:	11000544 	addi	r4,r2,21
   2cff4:	21400748 	cmpgei	r5,r4,29
   2cff8:	1007883a 	mov	r3,r2
   2cffc:	d9c00017 	ldw	r7,0(sp)
   2d000:	10800804 	addi	r2,r2,32
   2d004:	283f9526 	beq	r5,zero,2ce5c <__muldf3+0x540>
   2d008:	18fffe04 	addi	r3,r3,-8
   2d00c:	88e6983a 	sll	r19,r17,r3
   2d010:	0025883a 	mov	r18,zero
   2d014:	003f9806 	br	2ce78 <__muldf3+0x55c>
   2d018:	e009883a 	mov	r4,fp
   2d01c:	002db980 	call	2db98 <__clzsi2>
   2d020:	11400544 	addi	r5,r2,21
   2d024:	29000748 	cmpgei	r4,r5,29
   2d028:	1007883a 	mov	r3,r2
   2d02c:	da000017 	ldw	r8,0(sp)
   2d030:	10800804 	addi	r2,r2,32
   2d034:	203f7626 	beq	r4,zero,2ce10 <__muldf3+0x4f4>
   2d038:	1c3ffe04 	addi	r16,r3,-8
   2d03c:	e420983a 	sll	r16,fp,r16
   2d040:	0023883a 	mov	r17,zero
   2d044:	003f7906 	br	2ce2c <__muldf3+0x510>
   2d048:	400f883a 	mov	r7,r8
   2d04c:	003f4e06 	br	2cd88 <__muldf3+0x46c>
   2d050:	00fff844 	movi	r3,-31
   2d054:	1907c83a 	sub	r3,r3,r4
   2d058:	10800820 	cmpeqi	r2,r2,32
   2d05c:	98c6d83a 	srl	r3,r19,r3
   2d060:	1000031e 	bne	r2,zero,2d070 <__muldf3+0x754>
   2d064:	39c10f84 	addi	r7,r7,1086
   2d068:	99e6983a 	sll	r19,r19,r7
   2d06c:	94e4b03a 	or	r18,r18,r19
   2d070:	9024c03a 	cmpne	r18,r18,zero
   2d074:	90c4b03a 	or	r2,r18,r3
   2d078:	148001cc 	andi	r18,r2,7
   2d07c:	9000051e 	bne	r18,zero,2d094 <__muldf3+0x778>
   2d080:	0027883a 	mov	r19,zero
   2d084:	1004d0fa 	srli	r2,r2,3
   2d088:	0007883a 	mov	r3,zero
   2d08c:	14a4b03a 	or	r18,r2,r18
   2d090:	003e7706 	br	2ca70 <__muldf3+0x154>
   2d094:	10c003cc 	andi	r3,r2,15
   2d098:	18c00118 	cmpnei	r3,r3,4
   2d09c:	0027883a 	mov	r19,zero
   2d0a0:	183fb71e 	bne	r3,zero,2cf80 <__muldf3+0x664>
   2d0a4:	9806927a 	slli	r3,r19,9
   2d0a8:	9824977a 	slli	r18,r19,29
   2d0ac:	1826d33a 	srli	r19,r3,12
   2d0b0:	003ff406 	br	2d084 <__muldf3+0x768>
   2d0b4:	00800434 	movhi	r2,16
   2d0b8:	9cc00234 	orhi	r19,r19,8
   2d0bc:	10bfffc4 	addi	r2,r2,-1
   2d0c0:	98a6703a 	and	r19,r19,r2
   2d0c4:	003f9906 	br	2cf2c <__muldf3+0x610>

0002d0c8 <__subdf3>:
   2d0c8:	00800434 	movhi	r2,16
   2d0cc:	3810d53a 	srli	r8,r7,20
   2d0d0:	10bfffc4 	addi	r2,r2,-1
   2d0d4:	2806d53a 	srli	r3,r5,20
   2d0d8:	2892703a 	and	r9,r5,r2
   2d0dc:	3884703a 	and	r2,r7,r2
   2d0e0:	280ad7fa 	srli	r5,r5,31
   2d0e4:	481290fa 	slli	r9,r9,3
   2d0e8:	2018d77a 	srli	r12,r4,29
   2d0ec:	100490fa 	slli	r2,r2,3
   2d0f0:	3016d77a 	srli	r11,r6,29
   2d0f4:	defffb04 	addi	sp,sp,-20
   2d0f8:	4201ffcc 	andi	r8,r8,2047
   2d0fc:	dc800215 	stw	r18,8(sp)
   2d100:	dc400115 	stw	r17,4(sp)
   2d104:	1c81ffcc 	andi	r18,r3,2047
   2d108:	dfc00415 	stw	ra,16(sp)
   2d10c:	dcc00315 	stw	r19,12(sp)
   2d110:	dc000015 	stw	r16,0(sp)
   2d114:	4281ffd8 	cmpnei	r10,r8,2047
   2d118:	2823883a 	mov	r17,r5
   2d11c:	201c90fa 	slli	r14,r4,3
   2d120:	380ed7fa 	srli	r7,r7,31
   2d124:	301a90fa 	slli	r13,r6,3
   2d128:	29403fcc 	andi	r5,r5,255
   2d12c:	6252b03a 	or	r9,r12,r9
   2d130:	589eb03a 	or	r15,r11,r2
   2d134:	9207c83a 	sub	r3,r18,r8
   2d138:	50006826 	beq	r10,zero,2d2dc <__subdf3+0x214>
   2d13c:	3ac0005c 	xori	r11,r7,1
   2d140:	2ac07326 	beq	r5,r11,2d310 <__subdf3+0x248>
   2d144:	00c0590e 	bge	zero,r3,2d2ac <__subdf3+0x1e4>
   2d148:	4000691e 	bne	r8,zero,2d2f0 <__subdf3+0x228>
   2d14c:	7b44b03a 	or	r2,r15,r13
   2d150:	1000fb26 	beq	r2,zero,2d540 <__subdf3+0x478>
   2d154:	18bfffc4 	addi	r2,r3,-1
   2d158:	10019126 	beq	r2,zero,2d7a0 <__subdf3+0x6d8>
   2d15c:	18c1ffd8 	cmpnei	r3,r3,2047
   2d160:	1800c326 	beq	r3,zero,2d470 <__subdf3+0x3a8>
   2d164:	1007883a 	mov	r3,r2
   2d168:	18800e48 	cmpgei	r2,r3,57
   2d16c:	1000651e 	bne	r2,zero,2d304 <__subdf3+0x23c>
   2d170:	18800808 	cmpgei	r2,r3,32
   2d174:	1001331e 	bne	r2,zero,2d644 <__subdf3+0x57c>
   2d178:	00800804 	movi	r2,32
   2d17c:	10c5c83a 	sub	r2,r2,r3
   2d180:	78a0983a 	sll	r16,r15,r2
   2d184:	68c8d83a 	srl	r4,r13,r3
   2d188:	689a983a 	sll	r13,r13,r2
   2d18c:	78c4d83a 	srl	r2,r15,r3
   2d190:	8120b03a 	or	r16,r16,r4
   2d194:	681ac03a 	cmpne	r13,r13,zero
   2d198:	8360b03a 	or	r16,r16,r13
   2d19c:	4893c83a 	sub	r9,r9,r2
   2d1a0:	7421c83a 	sub	r16,r14,r16
   2d1a4:	7409803a 	cmpltu	r4,r14,r16
   2d1a8:	4909c83a 	sub	r4,r9,r4
   2d1ac:	2080202c 	andhi	r2,r4,128
   2d1b0:	10009326 	beq	r2,zero,2d400 <__subdf3+0x338>
   2d1b4:	04c02034 	movhi	r19,128
   2d1b8:	9cffffc4 	addi	r19,r19,-1
   2d1bc:	24e6703a 	and	r19,r4,r19
   2d1c0:	9800b926 	beq	r19,zero,2d4a8 <__subdf3+0x3e0>
   2d1c4:	9809883a 	mov	r4,r19
   2d1c8:	002db980 	call	2db98 <__clzsi2>
   2d1cc:	10fffe04 	addi	r3,r2,-8
   2d1d0:	01000804 	movi	r4,32
   2d1d4:	20c9c83a 	sub	r4,r4,r3
   2d1d8:	8108d83a 	srl	r4,r16,r4
   2d1dc:	98e6983a 	sll	r19,r19,r3
   2d1e0:	80e0983a 	sll	r16,r16,r3
   2d1e4:	24c8b03a 	or	r4,r4,r19
   2d1e8:	1c80b816 	blt	r3,r18,2d4cc <__subdf3+0x404>
   2d1ec:	1c87c83a 	sub	r3,r3,r18
   2d1f0:	19400044 	addi	r5,r3,1
   2d1f4:	28800808 	cmpgei	r2,r5,32
   2d1f8:	1000751e 	bne	r2,zero,2d3d0 <__subdf3+0x308>
   2d1fc:	00800804 	movi	r2,32
   2d200:	1145c83a 	sub	r2,r2,r5
   2d204:	8146d83a 	srl	r3,r16,r5
   2d208:	80a0983a 	sll	r16,r16,r2
   2d20c:	2084983a 	sll	r2,r4,r2
   2d210:	2148d83a 	srl	r4,r4,r5
   2d214:	8020c03a 	cmpne	r16,r16,zero
   2d218:	10c4b03a 	or	r2,r2,r3
   2d21c:	1420b03a 	or	r16,r2,r16
   2d220:	0025883a 	mov	r18,zero
   2d224:	808001cc 	andi	r2,r16,7
   2d228:	10000726 	beq	r2,zero,2d248 <__subdf3+0x180>
   2d22c:	808003cc 	andi	r2,r16,15
   2d230:	10800120 	cmpeqi	r2,r2,4
   2d234:	1000041e 	bne	r2,zero,2d248 <__subdf3+0x180>
   2d238:	80800104 	addi	r2,r16,4
   2d23c:	1421803a 	cmpltu	r16,r2,r16
   2d240:	2409883a 	add	r4,r4,r16
   2d244:	1021883a 	mov	r16,r2
   2d248:	2080202c 	andhi	r2,r4,128
   2d24c:	10006e26 	beq	r2,zero,2d408 <__subdf3+0x340>
   2d250:	90c00044 	addi	r3,r18,1
   2d254:	1881ffe0 	cmpeqi	r2,r3,2047
   2d258:	18c1ffcc 	andi	r3,r3,2047
   2d25c:	1000801e 	bne	r2,zero,2d460 <__subdf3+0x398>
   2d260:	00bfe034 	movhi	r2,65408
   2d264:	10bfffc4 	addi	r2,r2,-1
   2d268:	2088703a 	and	r4,r4,r2
   2d26c:	2004977a 	slli	r2,r4,29
   2d270:	2008927a 	slli	r4,r4,9
   2d274:	8020d0fa 	srli	r16,r16,3
   2d278:	2008d33a 	srli	r4,r4,12
   2d27c:	1404b03a 	or	r2,r2,r16
   2d280:	1806953a 	slli	r3,r3,20
   2d284:	882297fa 	slli	r17,r17,31
   2d288:	1906b03a 	or	r3,r3,r4
   2d28c:	1c46b03a 	or	r3,r3,r17
   2d290:	dfc00417 	ldw	ra,16(sp)
   2d294:	dcc00317 	ldw	r19,12(sp)
   2d298:	dc800217 	ldw	r18,8(sp)
   2d29c:	dc400117 	ldw	r17,4(sp)
   2d2a0:	dc000017 	ldw	r16,0(sp)
   2d2a4:	dec00504 	addi	sp,sp,20
   2d2a8:	f800283a 	ret
   2d2ac:	18002c26 	beq	r3,zero,2d360 <__subdf3+0x298>
   2d2b0:	4487c83a 	sub	r3,r8,r18
   2d2b4:	5823883a 	mov	r17,r11
   2d2b8:	9000bb1e 	bne	r18,zero,2d5a8 <__subdf3+0x4e0>
   2d2bc:	4b84b03a 	or	r2,r9,r14
   2d2c0:	10011726 	beq	r2,zero,2d720 <__subdf3+0x658>
   2d2c4:	18bfffc4 	addi	r2,r3,-1
   2d2c8:	10016326 	beq	r2,zero,2d858 <__subdf3+0x790>
   2d2cc:	18c1ffd8 	cmpnei	r3,r3,2047
   2d2d0:	18012c26 	beq	r3,zero,2d784 <__subdf3+0x6bc>
   2d2d4:	1007883a 	mov	r3,r2
   2d2d8:	0000b506 	br	2d5b0 <__subdf3+0x4e8>
   2d2dc:	7b44b03a 	or	r2,r15,r13
   2d2e0:	103f9626 	beq	r2,zero,2d13c <__subdf3+0x74>
   2d2e4:	3ac03fcc 	andi	r11,r7,255
   2d2e8:	29c07d26 	beq	r5,r7,2d4e0 <__subdf3+0x418>
   2d2ec:	00ffef0e 	bge	zero,r3,2d2ac <__subdf3+0x1e4>
   2d2f0:	9081ffd8 	cmpnei	r2,r18,2047
   2d2f4:	10005e26 	beq	r2,zero,2d470 <__subdf3+0x3a8>
   2d2f8:	18800e48 	cmpgei	r2,r3,57
   2d2fc:	7bc02034 	orhi	r15,r15,128
   2d300:	103f9b26 	beq	r2,zero,2d170 <__subdf3+0xa8>
   2d304:	7b60b03a 	or	r16,r15,r13
   2d308:	8020c03a 	cmpne	r16,r16,zero
   2d30c:	003fa406 	br	2d1a0 <__subdf3+0xd8>
   2d310:	00c0730e 	bge	zero,r3,2d4e0 <__subdf3+0x418>
   2d314:	40002626 	beq	r8,zero,2d3b0 <__subdf3+0x2e8>
   2d318:	9081ffd8 	cmpnei	r2,r18,2047
   2d31c:	10005426 	beq	r2,zero,2d470 <__subdf3+0x3a8>
   2d320:	7bc02034 	orhi	r15,r15,128
   2d324:	18800e48 	cmpgei	r2,r3,57
   2d328:	1000431e 	bne	r2,zero,2d438 <__subdf3+0x370>
   2d32c:	18800808 	cmpgei	r2,r3,32
   2d330:	1000de26 	beq	r2,zero,2d6ac <__subdf3+0x5e4>
   2d334:	1c3ff804 	addi	r16,r3,-32
   2d338:	18800820 	cmpeqi	r2,r3,32
   2d33c:	7c0ad83a 	srl	r5,r15,r16
   2d340:	1000041e 	bne	r2,zero,2d354 <__subdf3+0x28c>
   2d344:	00801004 	movi	r2,64
   2d348:	10c5c83a 	sub	r2,r2,r3
   2d34c:	7884983a 	sll	r2,r15,r2
   2d350:	689ab03a 	or	r13,r13,r2
   2d354:	6820c03a 	cmpne	r16,r13,zero
   2d358:	8160b03a 	or	r16,r16,r5
   2d35c:	00003806 	br	2d440 <__subdf3+0x378>
   2d360:	90800044 	addi	r2,r18,1
   2d364:	1081ff8c 	andi	r2,r2,2046
   2d368:	1000a01e 	bne	r2,zero,2d5ec <__subdf3+0x524>
   2d36c:	4b8ab03a 	or	r5,r9,r14
   2d370:	7b44b03a 	or	r2,r15,r13
   2d374:	9000f11e 	bne	r18,zero,2d73c <__subdf3+0x674>
   2d378:	28012e26 	beq	r5,zero,2d834 <__subdf3+0x76c>
   2d37c:	10010e26 	beq	r2,zero,2d7b8 <__subdf3+0x6f0>
   2d380:	7361c83a 	sub	r16,r14,r13
   2d384:	7405803a 	cmpltu	r2,r14,r16
   2d388:	4bc9c83a 	sub	r4,r9,r15
   2d38c:	2089c83a 	sub	r4,r4,r2
   2d390:	2080202c 	andhi	r2,r4,128
   2d394:	10016d26 	beq	r2,zero,2d94c <__subdf3+0x884>
   2d398:	6ba1c83a 	sub	r16,r13,r14
   2d39c:	7a49c83a 	sub	r4,r15,r9
   2d3a0:	6c1b803a 	cmpltu	r13,r13,r16
   2d3a4:	2349c83a 	sub	r4,r4,r13
   2d3a8:	5823883a 	mov	r17,r11
   2d3ac:	003f9d06 	br	2d224 <__subdf3+0x15c>
   2d3b0:	7b44b03a 	or	r2,r15,r13
   2d3b4:	10006226 	beq	r2,zero,2d540 <__subdf3+0x478>
   2d3b8:	18bfffc4 	addi	r2,r3,-1
   2d3bc:	1000e926 	beq	r2,zero,2d764 <__subdf3+0x69c>
   2d3c0:	18c1ffd8 	cmpnei	r3,r3,2047
   2d3c4:	18012a26 	beq	r3,zero,2d870 <__subdf3+0x7a8>
   2d3c8:	1007883a 	mov	r3,r2
   2d3cc:	003fd506 	br	2d324 <__subdf3+0x25c>
   2d3d0:	18fff844 	addi	r3,r3,-31
   2d3d4:	28800820 	cmpeqi	r2,r5,32
   2d3d8:	20c6d83a 	srl	r3,r4,r3
   2d3dc:	1000041e 	bne	r2,zero,2d3f0 <__subdf3+0x328>
   2d3e0:	00801004 	movi	r2,64
   2d3e4:	114bc83a 	sub	r5,r2,r5
   2d3e8:	2148983a 	sll	r4,r4,r5
   2d3ec:	8120b03a 	or	r16,r16,r4
   2d3f0:	8020c03a 	cmpne	r16,r16,zero
   2d3f4:	80e0b03a 	or	r16,r16,r3
   2d3f8:	0009883a 	mov	r4,zero
   2d3fc:	0025883a 	mov	r18,zero
   2d400:	808001cc 	andi	r2,r16,7
   2d404:	103f891e 	bne	r2,zero,2d22c <__subdf3+0x164>
   2d408:	8020d0fa 	srli	r16,r16,3
   2d40c:	2004977a 	slli	r2,r4,29
   2d410:	2012d0fa 	srli	r9,r4,3
   2d414:	9007883a 	mov	r3,r18
   2d418:	8084b03a 	or	r2,r16,r2
   2d41c:	1901ffe0 	cmpeqi	r4,r3,2047
   2d420:	2000191e 	bne	r4,zero,2d488 <__subdf3+0x3c0>
   2d424:	01000434 	movhi	r4,16
   2d428:	213fffc4 	addi	r4,r4,-1
   2d42c:	4908703a 	and	r4,r9,r4
   2d430:	18c1ffcc 	andi	r3,r3,2047
   2d434:	003f9206 	br	2d280 <__subdf3+0x1b8>
   2d438:	7b60b03a 	or	r16,r15,r13
   2d43c:	8020c03a 	cmpne	r16,r16,zero
   2d440:	83a1883a 	add	r16,r16,r14
   2d444:	8389803a 	cmpltu	r4,r16,r14
   2d448:	2249883a 	add	r4,r4,r9
   2d44c:	2080202c 	andhi	r2,r4,128
   2d450:	103feb26 	beq	r2,zero,2d400 <__subdf3+0x338>
   2d454:	94800044 	addi	r18,r18,1
   2d458:	9081ffe0 	cmpeqi	r2,r18,2047
   2d45c:	10006f26 	beq	r2,zero,2d61c <__subdf3+0x554>
   2d460:	00c1ffc4 	movi	r3,2047
   2d464:	0009883a 	mov	r4,zero
   2d468:	0005883a 	mov	r2,zero
   2d46c:	003f8406 	br	2d280 <__subdf3+0x1b8>
   2d470:	4806977a 	slli	r3,r9,29
   2d474:	00880034 	movhi	r2,8192
   2d478:	10bfffc4 	addi	r2,r2,-1
   2d47c:	4812d0fa 	srli	r9,r9,3
   2d480:	2088703a 	and	r4,r4,r2
   2d484:	20c4b03a 	or	r2,r4,r3
   2d488:	4886b03a 	or	r3,r9,r2
   2d48c:	18013726 	beq	r3,zero,2d96c <__subdf3+0x8a4>
   2d490:	00c00434 	movhi	r3,16
   2d494:	18ffffc4 	addi	r3,r3,-1
   2d498:	49000234 	orhi	r4,r9,8
   2d49c:	20c8703a 	and	r4,r4,r3
   2d4a0:	00c1ffc4 	movi	r3,2047
   2d4a4:	003f7606 	br	2d280 <__subdf3+0x1b8>
   2d4a8:	8009883a 	mov	r4,r16
   2d4ac:	002db980 	call	2db98 <__clzsi2>
   2d4b0:	10c00604 	addi	r3,r2,24
   2d4b4:	19000808 	cmpgei	r4,r3,32
   2d4b8:	203f4526 	beq	r4,zero,2d1d0 <__subdf3+0x108>
   2d4bc:	113ffe04 	addi	r4,r2,-8
   2d4c0:	8108983a 	sll	r4,r16,r4
   2d4c4:	0021883a 	mov	r16,zero
   2d4c8:	1cbf480e 	bge	r3,r18,2d1ec <__subdf3+0x124>
   2d4cc:	00bfe034 	movhi	r2,65408
   2d4d0:	10bfffc4 	addi	r2,r2,-1
   2d4d4:	90e5c83a 	sub	r18,r18,r3
   2d4d8:	2088703a 	and	r4,r4,r2
   2d4dc:	003f5106 	br	2d224 <__subdf3+0x15c>
   2d4e0:	18001e26 	beq	r3,zero,2d55c <__subdf3+0x494>
   2d4e4:	4487c83a 	sub	r3,r8,r18
   2d4e8:	90006826 	beq	r18,zero,2d68c <__subdf3+0x5c4>
   2d4ec:	5000a526 	beq	r10,zero,2d784 <__subdf3+0x6bc>
   2d4f0:	4a402034 	orhi	r9,r9,128
   2d4f4:	18800e48 	cmpgei	r2,r3,57
   2d4f8:	1000b61e 	bne	r2,zero,2d7d4 <__subdf3+0x70c>
   2d4fc:	18800808 	cmpgei	r2,r3,32
   2d500:	1001021e 	bne	r2,zero,2d90c <__subdf3+0x844>
   2d504:	00800804 	movi	r2,32
   2d508:	10c5c83a 	sub	r2,r2,r3
   2d50c:	48a0983a 	sll	r16,r9,r2
   2d510:	70c8d83a 	srl	r4,r14,r3
   2d514:	7084983a 	sll	r2,r14,r2
   2d518:	48d2d83a 	srl	r9,r9,r3
   2d51c:	8120b03a 	or	r16,r16,r4
   2d520:	1004c03a 	cmpne	r2,r2,zero
   2d524:	80a0b03a 	or	r16,r16,r2
   2d528:	7a5f883a 	add	r15,r15,r9
   2d52c:	8361883a 	add	r16,r16,r13
   2d530:	8349803a 	cmpltu	r4,r16,r13
   2d534:	23c9883a 	add	r4,r4,r15
   2d538:	4025883a 	mov	r18,r8
   2d53c:	003fc306 	br	2d44c <__subdf3+0x384>
   2d540:	480a977a 	slli	r5,r9,29
   2d544:	00880034 	movhi	r2,8192
   2d548:	10bfffc4 	addi	r2,r2,-1
   2d54c:	2088703a 	and	r4,r4,r2
   2d550:	4812d0fa 	srli	r9,r9,3
   2d554:	2144b03a 	or	r2,r4,r5
   2d558:	003fb006 	br	2d41c <__subdf3+0x354>
   2d55c:	90800044 	addi	r2,r18,1
   2d560:	1141ff8c 	andi	r5,r2,2046
   2d564:	28005c1e 	bne	r5,zero,2d6d8 <__subdf3+0x610>
   2d568:	4b84b03a 	or	r2,r9,r14
   2d56c:	9000a71e 	bne	r18,zero,2d80c <__subdf3+0x744>
   2d570:	1000df26 	beq	r2,zero,2d8f0 <__subdf3+0x828>
   2d574:	7b44b03a 	or	r2,r15,r13
   2d578:	10008f26 	beq	r2,zero,2d7b8 <__subdf3+0x6f0>
   2d57c:	7361883a 	add	r16,r14,r13
   2d580:	4bc9883a 	add	r4,r9,r15
   2d584:	839d803a 	cmpltu	r14,r16,r14
   2d588:	2389883a 	add	r4,r4,r14
   2d58c:	2080202c 	andhi	r2,r4,128
   2d590:	103f9b26 	beq	r2,zero,2d400 <__subdf3+0x338>
   2d594:	00bfe034 	movhi	r2,65408
   2d598:	10bfffc4 	addi	r2,r2,-1
   2d59c:	2088703a 	and	r4,r4,r2
   2d5a0:	04800044 	movi	r18,1
   2d5a4:	003f9606 	br	2d400 <__subdf3+0x338>
   2d5a8:	50007626 	beq	r10,zero,2d784 <__subdf3+0x6bc>
   2d5ac:	4a402034 	orhi	r9,r9,128
   2d5b0:	18800e48 	cmpgei	r2,r3,57
   2d5b4:	10002e1e 	bne	r2,zero,2d670 <__subdf3+0x5a8>
   2d5b8:	18800808 	cmpgei	r2,r3,32
   2d5bc:	1000881e 	bne	r2,zero,2d7e0 <__subdf3+0x718>
   2d5c0:	00800804 	movi	r2,32
   2d5c4:	10c5c83a 	sub	r2,r2,r3
   2d5c8:	48a0983a 	sll	r16,r9,r2
   2d5cc:	70c8d83a 	srl	r4,r14,r3
   2d5d0:	709c983a 	sll	r14,r14,r2
   2d5d4:	48d2d83a 	srl	r9,r9,r3
   2d5d8:	8120b03a 	or	r16,r16,r4
   2d5dc:	701cc03a 	cmpne	r14,r14,zero
   2d5e0:	83a0b03a 	or	r16,r16,r14
   2d5e4:	7a5fc83a 	sub	r15,r15,r9
   2d5e8:	00002306 	br	2d678 <__subdf3+0x5b0>
   2d5ec:	7361c83a 	sub	r16,r14,r13
   2d5f0:	4be7c83a 	sub	r19,r9,r15
   2d5f4:	7409803a 	cmpltu	r4,r14,r16
   2d5f8:	9927c83a 	sub	r19,r19,r4
   2d5fc:	9880202c 	andhi	r2,r19,128
   2d600:	1000411e 	bne	r2,zero,2d708 <__subdf3+0x640>
   2d604:	84c4b03a 	or	r2,r16,r19
   2d608:	103eed1e 	bne	r2,zero,2d1c0 <__subdf3+0xf8>
   2d60c:	0013883a 	mov	r9,zero
   2d610:	0023883a 	mov	r17,zero
   2d614:	003f8306 	br	2d424 <__subdf3+0x35c>
   2d618:	04800084 	movi	r18,2
   2d61c:	00bfe034 	movhi	r2,65408
   2d620:	10bfffc4 	addi	r2,r2,-1
   2d624:	8006d07a 	srli	r3,r16,1
   2d628:	2088703a 	and	r4,r4,r2
   2d62c:	200497fa 	slli	r2,r4,31
   2d630:	8400004c 	andi	r16,r16,1
   2d634:	1c20b03a 	or	r16,r3,r16
   2d638:	2008d07a 	srli	r4,r4,1
   2d63c:	1420b03a 	or	r16,r2,r16
   2d640:	003ef806 	br	2d224 <__subdf3+0x15c>
   2d644:	1c3ff804 	addi	r16,r3,-32
   2d648:	18800820 	cmpeqi	r2,r3,32
   2d64c:	7c0ad83a 	srl	r5,r15,r16
   2d650:	1000041e 	bne	r2,zero,2d664 <__subdf3+0x59c>
   2d654:	00801004 	movi	r2,64
   2d658:	10c5c83a 	sub	r2,r2,r3
   2d65c:	7884983a 	sll	r2,r15,r2
   2d660:	689ab03a 	or	r13,r13,r2
   2d664:	6820c03a 	cmpne	r16,r13,zero
   2d668:	8160b03a 	or	r16,r16,r5
   2d66c:	003ecc06 	br	2d1a0 <__subdf3+0xd8>
   2d670:	4b92b03a 	or	r9,r9,r14
   2d674:	4820c03a 	cmpne	r16,r9,zero
   2d678:	6c21c83a 	sub	r16,r13,r16
   2d67c:	6c09803a 	cmpltu	r4,r13,r16
   2d680:	7909c83a 	sub	r4,r15,r4
   2d684:	4025883a 	mov	r18,r8
   2d688:	003ec806 	br	2d1ac <__subdf3+0xe4>
   2d68c:	4b84b03a 	or	r2,r9,r14
   2d690:	10007e26 	beq	r2,zero,2d88c <__subdf3+0x7c4>
   2d694:	18bfffc4 	addi	r2,r3,-1
   2d698:	1000a726 	beq	r2,zero,2d938 <__subdf3+0x870>
   2d69c:	18c1ffd8 	cmpnei	r3,r3,2047
   2d6a0:	18003826 	beq	r3,zero,2d784 <__subdf3+0x6bc>
   2d6a4:	1007883a 	mov	r3,r2
   2d6a8:	003f9206 	br	2d4f4 <__subdf3+0x42c>
   2d6ac:	00800804 	movi	r2,32
   2d6b0:	10c5c83a 	sub	r2,r2,r3
   2d6b4:	78a0983a 	sll	r16,r15,r2
   2d6b8:	68c8d83a 	srl	r4,r13,r3
   2d6bc:	689a983a 	sll	r13,r13,r2
   2d6c0:	78c4d83a 	srl	r2,r15,r3
   2d6c4:	8120b03a 	or	r16,r16,r4
   2d6c8:	681ac03a 	cmpne	r13,r13,zero
   2d6cc:	8360b03a 	or	r16,r16,r13
   2d6d0:	4893883a 	add	r9,r9,r2
   2d6d4:	003f5a06 	br	2d440 <__subdf3+0x378>
   2d6d8:	10c1ffe0 	cmpeqi	r3,r2,2047
   2d6dc:	183f601e 	bne	r3,zero,2d460 <__subdf3+0x398>
   2d6e0:	735b883a 	add	r13,r14,r13
   2d6e4:	6b9d803a 	cmpltu	r14,r13,r14
   2d6e8:	4bc9883a 	add	r4,r9,r15
   2d6ec:	2389883a 	add	r4,r4,r14
   2d6f0:	202097fa 	slli	r16,r4,31
   2d6f4:	681ad07a 	srli	r13,r13,1
   2d6f8:	2008d07a 	srli	r4,r4,1
   2d6fc:	1025883a 	mov	r18,r2
   2d700:	8360b03a 	or	r16,r16,r13
   2d704:	003f3e06 	br	2d400 <__subdf3+0x338>
   2d708:	6ba1c83a 	sub	r16,r13,r14
   2d70c:	7a49c83a 	sub	r4,r15,r9
   2d710:	6c1b803a 	cmpltu	r13,r13,r16
   2d714:	2367c83a 	sub	r19,r4,r13
   2d718:	5823883a 	mov	r17,r11
   2d71c:	003ea806 	br	2d1c0 <__subdf3+0xf8>
   2d720:	7808977a 	slli	r4,r15,29
   2d724:	00880034 	movhi	r2,8192
   2d728:	10bfffc4 	addi	r2,r2,-1
   2d72c:	308c703a 	and	r6,r6,r2
   2d730:	7812d0fa 	srli	r9,r15,3
   2d734:	3104b03a 	or	r2,r6,r4
   2d738:	003f3806 	br	2d41c <__subdf3+0x354>
   2d73c:	28005a1e 	bne	r5,zero,2d8a8 <__subdf3+0x7e0>
   2d740:	10008526 	beq	r2,zero,2d958 <__subdf3+0x890>
   2d744:	7806977a 	slli	r3,r15,29
   2d748:	00880034 	movhi	r2,8192
   2d74c:	10bfffc4 	addi	r2,r2,-1
   2d750:	3084703a 	and	r2,r6,r2
   2d754:	7812d0fa 	srli	r9,r15,3
   2d758:	10c4b03a 	or	r2,r2,r3
   2d75c:	5823883a 	mov	r17,r11
   2d760:	003f4906 	br	2d488 <__subdf3+0x3c0>
   2d764:	7361883a 	add	r16,r14,r13
   2d768:	4bc9883a 	add	r4,r9,r15
   2d76c:	839d803a 	cmpltu	r14,r16,r14
   2d770:	2389883a 	add	r4,r4,r14
   2d774:	2080202c 	andhi	r2,r4,128
   2d778:	103fa71e 	bne	r2,zero,2d618 <__subdf3+0x550>
   2d77c:	04800044 	movi	r18,1
   2d780:	003f1f06 	br	2d400 <__subdf3+0x338>
   2d784:	7806977a 	slli	r3,r15,29
   2d788:	00880034 	movhi	r2,8192
   2d78c:	10bfffc4 	addi	r2,r2,-1
   2d790:	3084703a 	and	r2,r6,r2
   2d794:	7812d0fa 	srli	r9,r15,3
   2d798:	10c4b03a 	or	r2,r2,r3
   2d79c:	003f3a06 	br	2d488 <__subdf3+0x3c0>
   2d7a0:	7361c83a 	sub	r16,r14,r13
   2d7a4:	4bc9c83a 	sub	r4,r9,r15
   2d7a8:	741d803a 	cmpltu	r14,r14,r16
   2d7ac:	2389c83a 	sub	r4,r4,r14
   2d7b0:	04800044 	movi	r18,1
   2d7b4:	003e7d06 	br	2d1ac <__subdf3+0xe4>
   2d7b8:	480a977a 	slli	r5,r9,29
   2d7bc:	00880034 	movhi	r2,8192
   2d7c0:	10bfffc4 	addi	r2,r2,-1
   2d7c4:	2084703a 	and	r2,r4,r2
   2d7c8:	4812d0fa 	srli	r9,r9,3
   2d7cc:	1144b03a 	or	r2,r2,r5
   2d7d0:	003f1406 	br	2d424 <__subdf3+0x35c>
   2d7d4:	4b92b03a 	or	r9,r9,r14
   2d7d8:	4820c03a 	cmpne	r16,r9,zero
   2d7dc:	003f5306 	br	2d52c <__subdf3+0x464>
   2d7e0:	1c3ff804 	addi	r16,r3,-32
   2d7e4:	19000820 	cmpeqi	r4,r3,32
   2d7e8:	4c04d83a 	srl	r2,r9,r16
   2d7ec:	2000041e 	bne	r4,zero,2d800 <__subdf3+0x738>
   2d7f0:	01001004 	movi	r4,64
   2d7f4:	20c7c83a 	sub	r3,r4,r3
   2d7f8:	48d2983a 	sll	r9,r9,r3
   2d7fc:	725cb03a 	or	r14,r14,r9
   2d800:	7020c03a 	cmpne	r16,r14,zero
   2d804:	80a0b03a 	or	r16,r16,r2
   2d808:	003f9b06 	br	2d678 <__subdf3+0x5b0>
   2d80c:	103fdd26 	beq	r2,zero,2d784 <__subdf3+0x6bc>
   2d810:	7b5ab03a 	or	r13,r15,r13
   2d814:	480a977a 	slli	r5,r9,29
   2d818:	4812d0fa 	srli	r9,r9,3
   2d81c:	6800251e 	bne	r13,zero,2d8b4 <__subdf3+0x7ec>
   2d820:	00880034 	movhi	r2,8192
   2d824:	10bfffc4 	addi	r2,r2,-1
   2d828:	2084703a 	and	r2,r4,r2
   2d82c:	1144b03a 	or	r2,r2,r5
   2d830:	003f1506 	br	2d488 <__subdf3+0x3c0>
   2d834:	103f7526 	beq	r2,zero,2d60c <__subdf3+0x544>
   2d838:	7808977a 	slli	r4,r15,29
   2d83c:	00880034 	movhi	r2,8192
   2d840:	10bfffc4 	addi	r2,r2,-1
   2d844:	3084703a 	and	r2,r6,r2
   2d848:	7812d0fa 	srli	r9,r15,3
   2d84c:	1104b03a 	or	r2,r2,r4
   2d850:	5823883a 	mov	r17,r11
   2d854:	003ef306 	br	2d424 <__subdf3+0x35c>
   2d858:	6ba1c83a 	sub	r16,r13,r14
   2d85c:	7a49c83a 	sub	r4,r15,r9
   2d860:	6c1b803a 	cmpltu	r13,r13,r16
   2d864:	2349c83a 	sub	r4,r4,r13
   2d868:	04800044 	movi	r18,1
   2d86c:	003e4f06 	br	2d1ac <__subdf3+0xe4>
   2d870:	4806977a 	slli	r3,r9,29
   2d874:	00880034 	movhi	r2,8192
   2d878:	10bfffc4 	addi	r2,r2,-1
   2d87c:	2084703a 	and	r2,r4,r2
   2d880:	4812d0fa 	srli	r9,r9,3
   2d884:	10c4b03a 	or	r2,r2,r3
   2d888:	003eff06 	br	2d488 <__subdf3+0x3c0>
   2d88c:	7808977a 	slli	r4,r15,29
   2d890:	00880034 	movhi	r2,8192
   2d894:	10bfffc4 	addi	r2,r2,-1
   2d898:	3084703a 	and	r2,r6,r2
   2d89c:	7812d0fa 	srli	r9,r15,3
   2d8a0:	1104b03a 	or	r2,r2,r4
   2d8a4:	003edd06 	br	2d41c <__subdf3+0x354>
   2d8a8:	480a977a 	slli	r5,r9,29
   2d8ac:	4812d0fa 	srli	r9,r9,3
   2d8b0:	103fdb26 	beq	r2,zero,2d820 <__subdf3+0x758>
   2d8b4:	00c80034 	movhi	r3,8192
   2d8b8:	18ffffc4 	addi	r3,r3,-1
   2d8bc:	20c4703a 	and	r2,r4,r3
   2d8c0:	4900022c 	andhi	r4,r9,8
   2d8c4:	1144b03a 	or	r2,r2,r5
   2d8c8:	203eef26 	beq	r4,zero,2d488 <__subdf3+0x3c0>
   2d8cc:	7808d0fa 	srli	r4,r15,3
   2d8d0:	2140022c 	andhi	r5,r4,8
   2d8d4:	283eec1e 	bne	r5,zero,2d488 <__subdf3+0x3c0>
   2d8d8:	7804977a 	slli	r2,r15,29
   2d8dc:	30cc703a 	and	r6,r6,r3
   2d8e0:	5823883a 	mov	r17,r11
   2d8e4:	3084b03a 	or	r2,r6,r2
   2d8e8:	2013883a 	mov	r9,r4
   2d8ec:	003ee606 	br	2d488 <__subdf3+0x3c0>
   2d8f0:	7808977a 	slli	r4,r15,29
   2d8f4:	00880034 	movhi	r2,8192
   2d8f8:	10bfffc4 	addi	r2,r2,-1
   2d8fc:	3084703a 	and	r2,r6,r2
   2d900:	7812d0fa 	srli	r9,r15,3
   2d904:	1104b03a 	or	r2,r2,r4
   2d908:	003ec606 	br	2d424 <__subdf3+0x35c>
   2d90c:	18bff804 	addi	r2,r3,-32
   2d910:	19000820 	cmpeqi	r4,r3,32
   2d914:	4884d83a 	srl	r2,r9,r2
   2d918:	2000041e 	bne	r4,zero,2d92c <__subdf3+0x864>
   2d91c:	01001004 	movi	r4,64
   2d920:	20c7c83a 	sub	r3,r4,r3
   2d924:	48d2983a 	sll	r9,r9,r3
   2d928:	725cb03a 	or	r14,r14,r9
   2d92c:	7020c03a 	cmpne	r16,r14,zero
   2d930:	80a0b03a 	or	r16,r16,r2
   2d934:	003efd06 	br	2d52c <__subdf3+0x464>
   2d938:	7361883a 	add	r16,r14,r13
   2d93c:	4bc9883a 	add	r4,r9,r15
   2d940:	835b803a 	cmpltu	r13,r16,r13
   2d944:	2349883a 	add	r4,r4,r13
   2d948:	003f8a06 	br	2d774 <__subdf3+0x6ac>
   2d94c:	8104b03a 	or	r2,r16,r4
   2d950:	103f2e26 	beq	r2,zero,2d60c <__subdf3+0x544>
   2d954:	003eaa06 	br	2d400 <__subdf3+0x338>
   2d958:	02400434 	movhi	r9,16
   2d95c:	0023883a 	mov	r17,zero
   2d960:	00bfffc4 	movi	r2,-1
   2d964:	4a7fffc4 	addi	r9,r9,-1
   2d968:	003ec906 	br	2d490 <__subdf3+0x3c8>
   2d96c:	0005883a 	mov	r2,zero
   2d970:	00c1ffc4 	movi	r3,2047
   2d974:	0009883a 	mov	r4,zero
   2d978:	003e4106 	br	2d280 <__subdf3+0x1b8>

0002d97c <__unorddf2>:
   2d97c:	2806d53a 	srli	r3,r5,20
   2d980:	3810d53a 	srli	r8,r7,20
   2d984:	02400434 	movhi	r9,16
   2d988:	18c1ffcc 	andi	r3,r3,2047
   2d98c:	4a7fffc4 	addi	r9,r9,-1
   2d990:	18c1ffd8 	cmpnei	r3,r3,2047
   2d994:	2a4a703a 	and	r5,r5,r9
   2d998:	3a4e703a 	and	r7,r7,r9
   2d99c:	4201ffcc 	andi	r8,r8,2047
   2d9a0:	18000426 	beq	r3,zero,2d9b4 <__unorddf2+0x38>
   2d9a4:	4201ffd8 	cmpnei	r8,r8,2047
   2d9a8:	40000626 	beq	r8,zero,2d9c4 <__unorddf2+0x48>
   2d9ac:	0005883a 	mov	r2,zero
   2d9b0:	f800283a 	ret
   2d9b4:	290ab03a 	or	r5,r5,r4
   2d9b8:	283ffa26 	beq	r5,zero,2d9a4 <__unorddf2+0x28>
   2d9bc:	00800044 	movi	r2,1
   2d9c0:	f800283a 	ret
   2d9c4:	398eb03a 	or	r7,r7,r6
   2d9c8:	3804c03a 	cmpne	r2,r7,zero
   2d9cc:	f800283a 	ret

0002d9d0 <__fixdfsi>:
   2d9d0:	2806d53a 	srli	r3,r5,20
   2d9d4:	01800434 	movhi	r6,16
   2d9d8:	31bfffc4 	addi	r6,r6,-1
   2d9dc:	18c1ffcc 	andi	r3,r3,2047
   2d9e0:	19c0ffd0 	cmplti	r7,r3,1023
   2d9e4:	2810d7fa 	srli	r8,r5,31
   2d9e8:	298a703a 	and	r5,r5,r6
   2d9ec:	3800061e 	bne	r7,zero,2da08 <__fixdfsi+0x38>
   2d9f0:	18810790 	cmplti	r2,r3,1054
   2d9f4:	1000061e 	bne	r2,zero,2da10 <__fixdfsi+0x40>
   2d9f8:	00a00034 	movhi	r2,32768
   2d9fc:	10bfffc4 	addi	r2,r2,-1
   2da00:	4085883a 	add	r2,r8,r2
   2da04:	f800283a 	ret
   2da08:	0005883a 	mov	r2,zero
   2da0c:	f800283a 	ret
   2da10:	01810cc4 	movi	r6,1075
   2da14:	30cdc83a 	sub	r6,r6,r3
   2da18:	30800808 	cmpgei	r2,r6,32
   2da1c:	29400434 	orhi	r5,r5,16
   2da20:	1000071e 	bne	r2,zero,2da40 <__fixdfsi+0x70>
   2da24:	18befb44 	addi	r2,r3,-1043
   2da28:	2884983a 	sll	r2,r5,r2
   2da2c:	2188d83a 	srl	r4,r4,r6
   2da30:	1104b03a 	or	r2,r2,r4
   2da34:	403ff526 	beq	r8,zero,2da0c <__fixdfsi+0x3c>
   2da38:	0085c83a 	sub	r2,zero,r2
   2da3c:	f800283a 	ret
   2da40:	008104c4 	movi	r2,1043
   2da44:	10c5c83a 	sub	r2,r2,r3
   2da48:	2884d83a 	srl	r2,r5,r2
   2da4c:	003ff906 	br	2da34 <__fixdfsi+0x64>

0002da50 <__floatsidf>:
   2da50:	defffd04 	addi	sp,sp,-12
   2da54:	dfc00215 	stw	ra,8(sp)
   2da58:	dc400115 	stw	r17,4(sp)
   2da5c:	dc000015 	stw	r16,0(sp)
   2da60:	20001326 	beq	r4,zero,2dab0 <__floatsidf+0x60>
   2da64:	2022d7fa 	srli	r17,r4,31
   2da68:	2021883a 	mov	r16,r4
   2da6c:	20002416 	blt	r4,zero,2db00 <__floatsidf+0xb0>
   2da70:	8009883a 	mov	r4,r16
   2da74:	002db980 	call	2db98 <__clzsi2>
   2da78:	01010784 	movi	r4,1054
   2da7c:	2089c83a 	sub	r4,r4,r2
   2da80:	114002c8 	cmpgei	r5,r2,11
   2da84:	20c1ffcc 	andi	r3,r4,2047
   2da88:	2800161e 	bne	r5,zero,2dae4 <__floatsidf+0x94>
   2da8c:	010002c4 	movi	r4,11
   2da90:	2089c83a 	sub	r4,r4,r2
   2da94:	810ad83a 	srl	r5,r16,r4
   2da98:	01000434 	movhi	r4,16
   2da9c:	10800544 	addi	r2,r2,21
   2daa0:	213fffc4 	addi	r4,r4,-1
   2daa4:	8084983a 	sll	r2,r16,r2
   2daa8:	290a703a 	and	r5,r5,r4
   2daac:	00000406 	br	2dac0 <__floatsidf+0x70>
   2dab0:	0023883a 	mov	r17,zero
   2dab4:	0007883a 	mov	r3,zero
   2dab8:	000b883a 	mov	r5,zero
   2dabc:	0005883a 	mov	r2,zero
   2dac0:	1808953a 	slli	r4,r3,20
   2dac4:	880697fa 	slli	r3,r17,31
   2dac8:	2148b03a 	or	r4,r4,r5
   2dacc:	20c6b03a 	or	r3,r4,r3
   2dad0:	dfc00217 	ldw	ra,8(sp)
   2dad4:	dc400117 	ldw	r17,4(sp)
   2dad8:	dc000017 	ldw	r16,0(sp)
   2dadc:	dec00304 	addi	sp,sp,12
   2dae0:	f800283a 	ret
   2dae4:	10bffd44 	addi	r2,r2,-11
   2dae8:	808a983a 	sll	r5,r16,r2
   2daec:	00800434 	movhi	r2,16
   2daf0:	10bfffc4 	addi	r2,r2,-1
   2daf4:	288a703a 	and	r5,r5,r2
   2daf8:	0005883a 	mov	r2,zero
   2dafc:	003ff006 	br	2dac0 <__floatsidf+0x70>
   2db00:	0121c83a 	sub	r16,zero,r4
   2db04:	003fda06 	br	2da70 <__floatsidf+0x20>

0002db08 <__floatunsidf>:
   2db08:	defffe04 	addi	sp,sp,-8
   2db0c:	dc000015 	stw	r16,0(sp)
   2db10:	dfc00115 	stw	ra,4(sp)
   2db14:	2021883a 	mov	r16,r4
   2db18:	20000f26 	beq	r4,zero,2db58 <__floatunsidf+0x50>
   2db1c:	002db980 	call	2db98 <__clzsi2>
   2db20:	00c10784 	movi	r3,1054
   2db24:	1887c83a 	sub	r3,r3,r2
   2db28:	110002c8 	cmpgei	r4,r2,11
   2db2c:	18c1ffcc 	andi	r3,r3,2047
   2db30:	2000121e 	bne	r4,zero,2db7c <__floatunsidf+0x74>
   2db34:	014002c4 	movi	r5,11
   2db38:	288bc83a 	sub	r5,r5,r2
   2db3c:	814ad83a 	srl	r5,r16,r5
   2db40:	01000434 	movhi	r4,16
   2db44:	10800544 	addi	r2,r2,21
   2db48:	213fffc4 	addi	r4,r4,-1
   2db4c:	80a0983a 	sll	r16,r16,r2
   2db50:	290a703a 	and	r5,r5,r4
   2db54:	00000206 	br	2db60 <__floatunsidf+0x58>
   2db58:	0007883a 	mov	r3,zero
   2db5c:	000b883a 	mov	r5,zero
   2db60:	1806953a 	slli	r3,r3,20
   2db64:	8005883a 	mov	r2,r16
   2db68:	1946b03a 	or	r3,r3,r5
   2db6c:	dfc00117 	ldw	ra,4(sp)
   2db70:	dc000017 	ldw	r16,0(sp)
   2db74:	dec00204 	addi	sp,sp,8
   2db78:	f800283a 	ret
   2db7c:	117ffd44 	addi	r5,r2,-11
   2db80:	814a983a 	sll	r5,r16,r5
   2db84:	00800434 	movhi	r2,16
   2db88:	10bfffc4 	addi	r2,r2,-1
   2db8c:	288a703a 	and	r5,r5,r2
   2db90:	0021883a 	mov	r16,zero
   2db94:	003ff206 	br	2db60 <__floatunsidf+0x58>

0002db98 <__clzsi2>:
   2db98:	00bfffd4 	movui	r2,65535
   2db9c:	11000436 	bltu	r2,r4,2dbb0 <__clzsi2+0x18>
   2dba0:	20804030 	cmpltui	r2,r4,256
   2dba4:	10000e26 	beq	r2,zero,2dbe0 <__clzsi2+0x48>
   2dba8:	01400804 	movi	r5,32
   2dbac:	00000406 	br	2dbc0 <__clzsi2+0x28>
   2dbb0:	00804034 	movhi	r2,256
   2dbb4:	20800736 	bltu	r4,r2,2dbd4 <__clzsi2+0x3c>
   2dbb8:	2008d63a 	srli	r4,r4,24
   2dbbc:	01400204 	movi	r5,8
   2dbc0:	00c000f4 	movhi	r3,3
   2dbc4:	20c7883a 	add	r3,r4,r3
   2dbc8:	18830c03 	ldbu	r2,3120(r3)
   2dbcc:	2885c83a 	sub	r2,r5,r2
   2dbd0:	f800283a 	ret
   2dbd4:	2008d43a 	srli	r4,r4,16
   2dbd8:	01400404 	movi	r5,16
   2dbdc:	003ff806 	br	2dbc0 <__clzsi2+0x28>
   2dbe0:	2008d23a 	srli	r4,r4,8
   2dbe4:	01400604 	movi	r5,24
   2dbe8:	003ff506 	br	2dbc0 <__clzsi2+0x28>

0002dbec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2dbec:	defffe04 	addi	sp,sp,-8
   2dbf0:	dfc00115 	stw	ra,4(sp)
   2dbf4:	df000015 	stw	fp,0(sp)
   2dbf8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2dbfc:	d0a00d17 	ldw	r2,-32716(gp)
   2dc00:	10000326 	beq	r2,zero,2dc10 <alt_get_errno+0x24>
   2dc04:	d0a00d17 	ldw	r2,-32716(gp)
   2dc08:	103ee83a 	callr	r2
   2dc0c:	00000106 	br	2dc14 <alt_get_errno+0x28>
   2dc10:	d0a72604 	addi	r2,gp,-25448
}
   2dc14:	e037883a 	mov	sp,fp
   2dc18:	dfc00117 	ldw	ra,4(sp)
   2dc1c:	df000017 	ldw	fp,0(sp)
   2dc20:	dec00204 	addi	sp,sp,8
   2dc24:	f800283a 	ret

0002dc28 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   2dc28:	defffb04 	addi	sp,sp,-20
   2dc2c:	dfc00415 	stw	ra,16(sp)
   2dc30:	df000315 	stw	fp,12(sp)
   2dc34:	df000304 	addi	fp,sp,12
   2dc38:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   2dc3c:	e0bffd17 	ldw	r2,-12(fp)
   2dc40:	10000916 	blt	r2,zero,2dc68 <close+0x40>
   2dc44:	e0fffd17 	ldw	r3,-12(fp)
   2dc48:	1805883a 	mov	r2,r3
   2dc4c:	1085883a 	add	r2,r2,r2
   2dc50:	10c5883a 	add	r2,r2,r3
   2dc54:	100490ba 	slli	r2,r2,2
   2dc58:	00c000f4 	movhi	r3,3
   2dc5c:	18c5d604 	addi	r3,r3,5976
   2dc60:	10c5883a 	add	r2,r2,r3
   2dc64:	00000106 	br	2dc6c <close+0x44>
   2dc68:	0005883a 	mov	r2,zero
   2dc6c:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
   2dc70:	e0bfff17 	ldw	r2,-4(fp)
   2dc74:	10001926 	beq	r2,zero,2dcdc <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   2dc78:	e0bfff17 	ldw	r2,-4(fp)
   2dc7c:	10800017 	ldw	r2,0(r2)
   2dc80:	10800417 	ldw	r2,16(r2)
   2dc84:	10000626 	beq	r2,zero,2dca0 <close+0x78>
   2dc88:	e0bfff17 	ldw	r2,-4(fp)
   2dc8c:	10800017 	ldw	r2,0(r2)
   2dc90:	10800417 	ldw	r2,16(r2)
   2dc94:	e13fff17 	ldw	r4,-4(fp)
   2dc98:	103ee83a 	callr	r2
   2dc9c:	00000106 	br	2dca4 <close+0x7c>
   2dca0:	0005883a 	mov	r2,zero
   2dca4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   2dca8:	e13ffd17 	ldw	r4,-12(fp)
   2dcac:	002e6640 	call	2e664 <alt_release_fd>
    if (rval < 0)
   2dcb0:	e0bffe17 	ldw	r2,-8(fp)
   2dcb4:	1000070e 	bge	r2,zero,2dcd4 <close+0xac>
    {
      ALT_ERRNO = -rval;
   2dcb8:	002dbec0 	call	2dbec <alt_get_errno>
   2dcbc:	1007883a 	mov	r3,r2
   2dcc0:	e0bffe17 	ldw	r2,-8(fp)
   2dcc4:	0085c83a 	sub	r2,zero,r2
   2dcc8:	18800015 	stw	r2,0(r3)
      return -1;
   2dccc:	00bfffc4 	movi	r2,-1
   2dcd0:	00000706 	br	2dcf0 <close+0xc8>
    }
    return 0;
   2dcd4:	0005883a 	mov	r2,zero
   2dcd8:	00000506 	br	2dcf0 <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2dcdc:	002dbec0 	call	2dbec <alt_get_errno>
   2dce0:	1007883a 	mov	r3,r2
   2dce4:	00801444 	movi	r2,81
   2dce8:	18800015 	stw	r2,0(r3)
    return -1;
   2dcec:	00bfffc4 	movi	r2,-1
  }
}
   2dcf0:	e037883a 	mov	sp,fp
   2dcf4:	dfc00117 	ldw	ra,4(sp)
   2dcf8:	df000017 	ldw	fp,0(sp)
   2dcfc:	dec00204 	addi	sp,sp,8
   2dd00:	f800283a 	ret

0002dd04 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   2dd04:	defffc04 	addi	sp,sp,-16
   2dd08:	df000315 	stw	fp,12(sp)
   2dd0c:	df000304 	addi	fp,sp,12
   2dd10:	e13fff15 	stw	r4,-4(fp)
   2dd14:	e17ffe15 	stw	r5,-8(fp)
   2dd18:	e1bffd15 	stw	r6,-12(fp)
  return len;
   2dd1c:	e0bffd17 	ldw	r2,-12(fp)
}
   2dd20:	e037883a 	mov	sp,fp
   2dd24:	df000017 	ldw	fp,0(sp)
   2dd28:	dec00104 	addi	sp,sp,4
   2dd2c:	f800283a 	ret

0002dd30 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   2dd30:	defffd04 	addi	sp,sp,-12
   2dd34:	df000215 	stw	fp,8(sp)
   2dd38:	df000204 	addi	fp,sp,8
   2dd3c:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   2dd40:	0001883a 	nop
   2dd44:	e0bffe17 	ldw	r2,-8(fp)
   2dd48:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   2dd4c:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   2dd50:	10000226 	beq	r2,zero,2dd5c <_exit+0x2c>
    ALT_SIM_FAIL();
   2dd54:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
   2dd58:	00000106 	br	2dd60 <_exit+0x30>
    ALT_SIM_PASS();
   2dd5c:	002af0b0 	cmpltui	zero,zero,43970
}
   2dd60:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   2dd64:	003fff06 	br	2dd64 <_exit+0x34>

0002dd68 <alt_get_errno>:
{
   2dd68:	defffe04 	addi	sp,sp,-8
   2dd6c:	dfc00115 	stw	ra,4(sp)
   2dd70:	df000015 	stw	fp,0(sp)
   2dd74:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2dd78:	d0a00d17 	ldw	r2,-32716(gp)
   2dd7c:	10000326 	beq	r2,zero,2dd8c <alt_get_errno+0x24>
   2dd80:	d0a00d17 	ldw	r2,-32716(gp)
   2dd84:	103ee83a 	callr	r2
   2dd88:	00000106 	br	2dd90 <alt_get_errno+0x28>
   2dd8c:	d0a72604 	addi	r2,gp,-25448
}
   2dd90:	e037883a 	mov	sp,fp
   2dd94:	dfc00117 	ldw	ra,4(sp)
   2dd98:	df000017 	ldw	fp,0(sp)
   2dd9c:	dec00204 	addi	sp,sp,8
   2dda0:	f800283a 	ret

0002dda4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   2dda4:	defffb04 	addi	sp,sp,-20
   2dda8:	dfc00415 	stw	ra,16(sp)
   2ddac:	df000315 	stw	fp,12(sp)
   2ddb0:	df000304 	addi	fp,sp,12
   2ddb4:	e13ffe15 	stw	r4,-8(fp)
   2ddb8:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2ddbc:	e0bffe17 	ldw	r2,-8(fp)
   2ddc0:	10000916 	blt	r2,zero,2dde8 <fstat+0x44>
   2ddc4:	e0fffe17 	ldw	r3,-8(fp)
   2ddc8:	1805883a 	mov	r2,r3
   2ddcc:	1085883a 	add	r2,r2,r2
   2ddd0:	10c5883a 	add	r2,r2,r3
   2ddd4:	100490ba 	slli	r2,r2,2
   2ddd8:	00c000f4 	movhi	r3,3
   2dddc:	18c5d604 	addi	r3,r3,5976
   2dde0:	10c5883a 	add	r2,r2,r3
   2dde4:	00000106 	br	2ddec <fstat+0x48>
   2dde8:	0005883a 	mov	r2,zero
   2ddec:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2ddf0:	e0bfff17 	ldw	r2,-4(fp)
   2ddf4:	10001026 	beq	r2,zero,2de38 <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   2ddf8:	e0bfff17 	ldw	r2,-4(fp)
   2ddfc:	10800017 	ldw	r2,0(r2)
   2de00:	10800817 	ldw	r2,32(r2)
   2de04:	10000726 	beq	r2,zero,2de24 <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
   2de08:	e0bfff17 	ldw	r2,-4(fp)
   2de0c:	10800017 	ldw	r2,0(r2)
   2de10:	10800817 	ldw	r2,32(r2)
   2de14:	e17ffd17 	ldw	r5,-12(fp)
   2de18:	e13fff17 	ldw	r4,-4(fp)
   2de1c:	103ee83a 	callr	r2
   2de20:	00000a06 	br	2de4c <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   2de24:	e0bffd17 	ldw	r2,-12(fp)
   2de28:	00c80004 	movi	r3,8192
   2de2c:	10c00115 	stw	r3,4(r2)
      return 0;
   2de30:	0005883a 	mov	r2,zero
   2de34:	00000506 	br	2de4c <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2de38:	002dd680 	call	2dd68 <alt_get_errno>
   2de3c:	1007883a 	mov	r3,r2
   2de40:	00801444 	movi	r2,81
   2de44:	18800015 	stw	r2,0(r3)
    return -1;
   2de48:	00bfffc4 	movi	r2,-1
  }
}
   2de4c:	e037883a 	mov	sp,fp
   2de50:	dfc00117 	ldw	ra,4(sp)
   2de54:	df000017 	ldw	fp,0(sp)
   2de58:	dec00204 	addi	sp,sp,8
   2de5c:	f800283a 	ret

0002de60 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
   2de60:	deffff04 	addi	sp,sp,-4
   2de64:	df000015 	stw	fp,0(sp)
   2de68:	d839883a 	mov	fp,sp
  return 0;
   2de6c:	0005883a 	mov	r2,zero
}
   2de70:	e037883a 	mov	sp,fp
   2de74:	df000017 	ldw	fp,0(sp)
   2de78:	dec00104 	addi	sp,sp,4
   2de7c:	f800283a 	ret

0002de80 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
   2de80:	defff004 	addi	sp,sp,-64
   2de84:	df000f15 	stw	fp,60(sp)
   2de88:	df000f04 	addi	fp,sp,60
   2de8c:	e13ff315 	stw	r4,-52(fp)
   2de90:	e17ff215 	stw	r5,-56(fp)
   2de94:	e1bff115 	stw	r6,-60(fp)
  int rc = -EINVAL;  
   2de98:	00bffa84 	movi	r2,-22
   2de9c:	e0bfff15 	stw	r2,-4(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   2dea0:	e0bff317 	ldw	r2,-52(fp)
   2dea4:	10800828 	cmpgeui	r2,r2,32
   2dea8:	1000501e 	bne	r2,zero,2dfec <alt_irq_register+0x16c>
  NIOS2_READ_STATUS (context);
   2deac:	0005303a 	rdctl	r2,status
   2deb0:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2deb4:	e0fffd17 	ldw	r3,-12(fp)
   2deb8:	00bfff84 	movi	r2,-2
   2debc:	1884703a 	and	r2,r3,r2
   2dec0:	1001703a 	wrctl	status,r2
  return context;
   2dec4:	e0bffd17 	ldw	r2,-12(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
   2dec8:	e0bffe15 	stw	r2,-8(fp)

    alt_irq[id].handler = handler;
   2decc:	e0bff317 	ldw	r2,-52(fp)
   2ded0:	100890fa 	slli	r4,r2,3
   2ded4:	e0fff117 	ldw	r3,-60(fp)
   2ded8:	008000f4 	movhi	r2,3
   2dedc:	2085883a 	add	r2,r4,r2
   2dee0:	10d19815 	stw	r3,18016(r2)
    alt_irq[id].context = context;
   2dee4:	e0bff317 	ldw	r2,-52(fp)
   2dee8:	100890fa 	slli	r4,r2,3
   2deec:	e0fff217 	ldw	r3,-56(fp)
   2def0:	008000f4 	movhi	r2,3
   2def4:	2085883a 	add	r2,r4,r2
   2def8:	10d19915 	stw	r3,18020(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   2defc:	e0bff117 	ldw	r2,-60(fp)
   2df00:	10001a26 	beq	r2,zero,2df6c <alt_irq_register+0xec>
   2df04:	e0bff317 	ldw	r2,-52(fp)
   2df08:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_READ_STATUS (context);
   2df0c:	0005303a 	rdctl	r2,status
   2df10:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2df14:	e0fffb17 	ldw	r3,-20(fp)
   2df18:	00bfff84 	movi	r2,-2
   2df1c:	1884703a 	and	r2,r3,r2
   2df20:	1001703a 	wrctl	status,r2
  return context;
   2df24:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2df28:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active |= (1 << id);
   2df2c:	00c00044 	movi	r3,1
   2df30:	e0bffc17 	ldw	r2,-16(fp)
   2df34:	1884983a 	sll	r2,r3,r2
   2df38:	1007883a 	mov	r3,r2
   2df3c:	d0a72817 	ldw	r2,-25440(gp)
   2df40:	1884b03a 	or	r2,r3,r2
   2df44:	d0a72815 	stw	r2,-25440(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2df48:	d0a72817 	ldw	r2,-25440(gp)
   2df4c:	100170fa 	wrctl	ienable,r2
   2df50:	e0bffa17 	ldw	r2,-24(fp)
   2df54:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context);
   2df58:	e0bff917 	ldw	r2,-28(fp)
   2df5c:	1001703a 	wrctl	status,r2
}
   2df60:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
   2df64:	0005883a 	mov	r2,zero
   2df68:	00001a06 	br	2dfd4 <alt_irq_register+0x154>
   2df6c:	e0bff317 	ldw	r2,-52(fp)
   2df70:	e0bff815 	stw	r2,-32(fp)
  NIOS2_READ_STATUS (context);
   2df74:	0005303a 	rdctl	r2,status
   2df78:	e0bff715 	stw	r2,-36(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2df7c:	e0fff717 	ldw	r3,-36(fp)
   2df80:	00bfff84 	movi	r2,-2
   2df84:	1884703a 	and	r2,r3,r2
   2df88:	1001703a 	wrctl	status,r2
  return context;
   2df8c:	e0bff717 	ldw	r2,-36(fp)
  status = alt_irq_disable_all ();
   2df90:	e0bff615 	stw	r2,-40(fp)
  alt_irq_active &= ~(1 << id);
   2df94:	00c00044 	movi	r3,1
   2df98:	e0bff817 	ldw	r2,-32(fp)
   2df9c:	1884983a 	sll	r2,r3,r2
   2dfa0:	0084303a 	nor	r2,zero,r2
   2dfa4:	1007883a 	mov	r3,r2
   2dfa8:	d0a72817 	ldw	r2,-25440(gp)
   2dfac:	1884703a 	and	r2,r3,r2
   2dfb0:	d0a72815 	stw	r2,-25440(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2dfb4:	d0a72817 	ldw	r2,-25440(gp)
   2dfb8:	100170fa 	wrctl	ienable,r2
   2dfbc:	e0bff617 	ldw	r2,-40(fp)
   2dfc0:	e0bff515 	stw	r2,-44(fp)
  NIOS2_WRITE_STATUS (context);
   2dfc4:	e0bff517 	ldw	r2,-44(fp)
   2dfc8:	1001703a 	wrctl	status,r2
}
   2dfcc:	0001883a 	nop
  return 0;
   2dfd0:	0005883a 	mov	r2,zero
   2dfd4:	e0bfff15 	stw	r2,-4(fp)
   2dfd8:	e0bffe17 	ldw	r2,-8(fp)
   2dfdc:	e0bff415 	stw	r2,-48(fp)
  NIOS2_WRITE_STATUS (context);
   2dfe0:	e0bff417 	ldw	r2,-48(fp)
   2dfe4:	1001703a 	wrctl	status,r2
}
   2dfe8:	0001883a 	nop

    alt_irq_enable_all(status);
  }
  return rc; 
   2dfec:	e0bfff17 	ldw	r2,-4(fp)
}
   2dff0:	e037883a 	mov	sp,fp
   2dff4:	df000017 	ldw	fp,0(sp)
   2dff8:	dec00104 	addi	sp,sp,4
   2dffc:	f800283a 	ret

0002e000 <alt_get_errno>:
{
   2e000:	defffe04 	addi	sp,sp,-8
   2e004:	dfc00115 	stw	ra,4(sp)
   2e008:	df000015 	stw	fp,0(sp)
   2e00c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e010:	d0a00d17 	ldw	r2,-32716(gp)
   2e014:	10000326 	beq	r2,zero,2e024 <alt_get_errno+0x24>
   2e018:	d0a00d17 	ldw	r2,-32716(gp)
   2e01c:	103ee83a 	callr	r2
   2e020:	00000106 	br	2e028 <alt_get_errno+0x28>
   2e024:	d0a72604 	addi	r2,gp,-25448
}
   2e028:	e037883a 	mov	sp,fp
   2e02c:	dfc00117 	ldw	ra,4(sp)
   2e030:	df000017 	ldw	fp,0(sp)
   2e034:	dec00204 	addi	sp,sp,8
   2e038:	f800283a 	ret

0002e03c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   2e03c:	deffea04 	addi	sp,sp,-88
   2e040:	dfc01515 	stw	ra,84(sp)
   2e044:	df001415 	stw	fp,80(sp)
   2e048:	df001404 	addi	fp,sp,80
   2e04c:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2e050:	e0bfec17 	ldw	r2,-80(fp)
   2e054:	10000916 	blt	r2,zero,2e07c <isatty+0x40>
   2e058:	e0ffec17 	ldw	r3,-80(fp)
   2e05c:	1805883a 	mov	r2,r3
   2e060:	1085883a 	add	r2,r2,r2
   2e064:	10c5883a 	add	r2,r2,r3
   2e068:	100490ba 	slli	r2,r2,2
   2e06c:	00c000f4 	movhi	r3,3
   2e070:	18c5d604 	addi	r3,r3,5976
   2e074:	10c5883a 	add	r2,r2,r3
   2e078:	00000106 	br	2e080 <isatty+0x44>
   2e07c:	0005883a 	mov	r2,zero
   2e080:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2e084:	e0bfff17 	ldw	r2,-4(fp)
   2e088:	10000e26 	beq	r2,zero,2e0c4 <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   2e08c:	e0bfff17 	ldw	r2,-4(fp)
   2e090:	10800017 	ldw	r2,0(r2)
   2e094:	10800817 	ldw	r2,32(r2)
   2e098:	1000021e 	bne	r2,zero,2e0a4 <isatty+0x68>
    {
      return 1;
   2e09c:	00800044 	movi	r2,1
   2e0a0:	00000d06 	br	2e0d8 <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   2e0a4:	e0bfed04 	addi	r2,fp,-76
   2e0a8:	100b883a 	mov	r5,r2
   2e0ac:	e13fec17 	ldw	r4,-80(fp)
   2e0b0:	002dda40 	call	2dda4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   2e0b4:	e0bfee17 	ldw	r2,-72(fp)
   2e0b8:	10880020 	cmpeqi	r2,r2,8192
   2e0bc:	10803fcc 	andi	r2,r2,255
   2e0c0:	00000506 	br	2e0d8 <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2e0c4:	002e0000 	call	2e000 <alt_get_errno>
   2e0c8:	1007883a 	mov	r3,r2
   2e0cc:	00801444 	movi	r2,81
   2e0d0:	18800015 	stw	r2,0(r3)
    return 0;
   2e0d4:	0005883a 	mov	r2,zero
  }
}
   2e0d8:	e037883a 	mov	sp,fp
   2e0dc:	dfc00117 	ldw	ra,4(sp)
   2e0e0:	df000017 	ldw	fp,0(sp)
   2e0e4:	dec00204 	addi	sp,sp,8
   2e0e8:	f800283a 	ret

0002e0ec <alt_get_errno>:
{
   2e0ec:	defffe04 	addi	sp,sp,-8
   2e0f0:	dfc00115 	stw	ra,4(sp)
   2e0f4:	df000015 	stw	fp,0(sp)
   2e0f8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e0fc:	d0a00d17 	ldw	r2,-32716(gp)
   2e100:	10000326 	beq	r2,zero,2e110 <alt_get_errno+0x24>
   2e104:	d0a00d17 	ldw	r2,-32716(gp)
   2e108:	103ee83a 	callr	r2
   2e10c:	00000106 	br	2e114 <alt_get_errno+0x28>
   2e110:	d0a72604 	addi	r2,gp,-25448
}
   2e114:	e037883a 	mov	sp,fp
   2e118:	dfc00117 	ldw	ra,4(sp)
   2e11c:	df000017 	ldw	fp,0(sp)
   2e120:	dec00204 	addi	sp,sp,8
   2e124:	f800283a 	ret

0002e128 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
   2e128:	defffb04 	addi	sp,sp,-20
   2e12c:	dfc00415 	stw	ra,16(sp)
   2e130:	df000315 	stw	fp,12(sp)
   2e134:	df000304 	addi	fp,sp,12
   2e138:	e13ffe15 	stw	r4,-8(fp)
   2e13c:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
   2e140:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
   2e144:	e0bffe17 	ldw	r2,-8(fp)
   2e148:	00802e16 	blt	zero,r2,2e204 <kill+0xdc>
   2e14c:	e0bffd17 	ldw	r2,-12(fp)
   2e150:	10800828 	cmpgeui	r2,r2,32
   2e154:	1000281e 	bne	r2,zero,2e1f8 <kill+0xd0>
   2e158:	e0bffd17 	ldw	r2,-12(fp)
   2e15c:	100690ba 	slli	r3,r2,2
   2e160:	008000f4 	movhi	r2,3
   2e164:	1885883a 	add	r2,r3,r2
   2e168:	10b85c17 	ldw	r2,-7824(r2)
   2e16c:	1000683a 	jmp	r2
   2e170:	0002e218 	cmpnei	zero,zero,2952
   2e174:	0002e1f8 	rdprs	zero,zero,2951
   2e178:	0002e1f8 	rdprs	zero,zero,2951
   2e17c:	0002e1f0 	cmpltui	zero,zero,2951
   2e180:	0002e1f0 	cmpltui	zero,zero,2951
   2e184:	0002e1f0 	cmpltui	zero,zero,2951
   2e188:	0002e1f0 	cmpltui	zero,zero,2951
   2e18c:	0002e1f8 	rdprs	zero,zero,2951
   2e190:	0002e1f0 	cmpltui	zero,zero,2951
   2e194:	0002e1f0 	cmpltui	zero,zero,2951
   2e198:	0002e1f0 	cmpltui	zero,zero,2951
   2e19c:	0002e1f0 	cmpltui	zero,zero,2951
   2e1a0:	0002e1f0 	cmpltui	zero,zero,2951
   2e1a4:	0002e1f0 	cmpltui	zero,zero,2951
   2e1a8:	0002e1f0 	cmpltui	zero,zero,2951
   2e1ac:	0002e1f0 	cmpltui	zero,zero,2951
   2e1b0:	0002e218 	cmpnei	zero,zero,2952
   2e1b4:	0002e1f8 	rdprs	zero,zero,2951
   2e1b8:	0002e1f8 	rdprs	zero,zero,2951
   2e1bc:	0002e1f8 	rdprs	zero,zero,2951
   2e1c0:	0002e218 	cmpnei	zero,zero,2952
   2e1c4:	0002e1f8 	rdprs	zero,zero,2951
   2e1c8:	0002e1f8 	rdprs	zero,zero,2951
   2e1cc:	0002e1f0 	cmpltui	zero,zero,2951
   2e1d0:	0002e1f0 	cmpltui	zero,zero,2951
   2e1d4:	0002e1f0 	cmpltui	zero,zero,2951
   2e1d8:	0002e1f0 	cmpltui	zero,zero,2951
   2e1dc:	0002e1f0 	cmpltui	zero,zero,2951
   2e1e0:	0002e1f8 	rdprs	zero,zero,2951
   2e1e4:	0002e1f8 	rdprs	zero,zero,2951
   2e1e8:	0002e1f0 	cmpltui	zero,zero,2951
   2e1ec:	0002e1f0 	cmpltui	zero,zero,2951
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
   2e1f0:	0009883a 	mov	r4,zero
   2e1f4:	002dd300 	call	2dd30 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
   2e1f8:	00800584 	movi	r2,22
   2e1fc:	e0bfff15 	stw	r2,-4(fp)
   2e200:	00000606 	br	2e21c <kill+0xf4>
    }
  }

  else if (pid > 0)
   2e204:	e0bffe17 	ldw	r2,-8(fp)
   2e208:	0080040e 	bge	zero,r2,2e21c <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
   2e20c:	008000c4 	movi	r2,3
   2e210:	e0bfff15 	stw	r2,-4(fp)
   2e214:	00000106 	br	2e21c <kill+0xf4>
      break;
   2e218:	0001883a 	nop
  }

  if (status)
   2e21c:	e0bfff17 	ldw	r2,-4(fp)
   2e220:	10000626 	beq	r2,zero,2e23c <kill+0x114>
  {
    ALT_ERRNO = status;
   2e224:	002e0ec0 	call	2e0ec <alt_get_errno>
   2e228:	1007883a 	mov	r3,r2
   2e22c:	e0bfff17 	ldw	r2,-4(fp)
   2e230:	18800015 	stw	r2,0(r3)
    return -1;
   2e234:	00bfffc4 	movi	r2,-1
   2e238:	00000106 	br	2e240 <kill+0x118>
  }

  return 0;
   2e23c:	0005883a 	mov	r2,zero
}
   2e240:	e037883a 	mov	sp,fp
   2e244:	dfc00117 	ldw	ra,4(sp)
   2e248:	df000017 	ldw	fp,0(sp)
   2e24c:	dec00204 	addi	sp,sp,8
   2e250:	f800283a 	ret

0002e254 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   2e254:	defffc04 	addi	sp,sp,-16
   2e258:	df000315 	stw	fp,12(sp)
   2e25c:	df000304 	addi	fp,sp,12
   2e260:	e13fff15 	stw	r4,-4(fp)
   2e264:	e17ffe15 	stw	r5,-8(fp)
   2e268:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
   2e26c:	e0fffe17 	ldw	r3,-8(fp)
   2e270:	e0bfff17 	ldw	r2,-4(fp)
   2e274:	18800c26 	beq	r3,r2,2e2a8 <alt_load_section+0x54>
  {
    while( to != end )
   2e278:	00000806 	br	2e29c <alt_load_section+0x48>
    {
      *to++ = *from++;
   2e27c:	e0ffff17 	ldw	r3,-4(fp)
   2e280:	18800104 	addi	r2,r3,4
   2e284:	e0bfff15 	stw	r2,-4(fp)
   2e288:	e0bffe17 	ldw	r2,-8(fp)
   2e28c:	11000104 	addi	r4,r2,4
   2e290:	e13ffe15 	stw	r4,-8(fp)
   2e294:	18c00017 	ldw	r3,0(r3)
   2e298:	10c00015 	stw	r3,0(r2)
    while( to != end )
   2e29c:	e0fffe17 	ldw	r3,-8(fp)
   2e2a0:	e0bffd17 	ldw	r2,-12(fp)
   2e2a4:	18bff51e 	bne	r3,r2,2e27c <alt_load_section+0x28>
    }
  }
}
   2e2a8:	0001883a 	nop
   2e2ac:	e037883a 	mov	sp,fp
   2e2b0:	df000017 	ldw	fp,0(sp)
   2e2b4:	dec00104 	addi	sp,sp,4
   2e2b8:	f800283a 	ret

0002e2bc <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   2e2bc:	defffe04 	addi	sp,sp,-8
   2e2c0:	dfc00115 	stw	ra,4(sp)
   2e2c4:	df000015 	stw	fp,0(sp)
   2e2c8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   2e2cc:	018000f4 	movhi	r6,3
   2e2d0:	318a6b04 	addi	r6,r6,10668
   2e2d4:	014000f4 	movhi	r5,3
   2e2d8:	29435d04 	addi	r5,r5,3444
   2e2dc:	010000f4 	movhi	r4,3
   2e2e0:	210a6b04 	addi	r4,r4,10668
   2e2e4:	002e2540 	call	2e254 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   2e2e8:	018000b4 	movhi	r6,2
   2e2ec:	31808a04 	addi	r6,r6,552
   2e2f0:	014000b4 	movhi	r5,2
   2e2f4:	29400804 	addi	r5,r5,32
   2e2f8:	010000b4 	movhi	r4,2
   2e2fc:	21000804 	addi	r4,r4,32
   2e300:	002e2540 	call	2e254 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   2e304:	018000f4 	movhi	r6,3
   2e308:	31835d04 	addi	r6,r6,3444
   2e30c:	014000f4 	movhi	r5,3
   2e310:	2941bc04 	addi	r5,r5,1776
   2e314:	010000f4 	movhi	r4,3
   2e318:	2101bc04 	addi	r4,r4,1776
   2e31c:	002e2540 	call	2e254 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   2e320:	002fa140 	call	2fa14 <alt_dcache_flush_all>
  alt_icache_flush_all();
   2e324:	002fc700 	call	2fc70 <alt_icache_flush_all>
}
   2e328:	0001883a 	nop
   2e32c:	e037883a 	mov	sp,fp
   2e330:	dfc00117 	ldw	ra,4(sp)
   2e334:	df000017 	ldw	fp,0(sp)
   2e338:	dec00204 	addi	sp,sp,8
   2e33c:	f800283a 	ret

0002e340 <alt_get_errno>:
{
   2e340:	defffe04 	addi	sp,sp,-8
   2e344:	dfc00115 	stw	ra,4(sp)
   2e348:	df000015 	stw	fp,0(sp)
   2e34c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e350:	d0a00d17 	ldw	r2,-32716(gp)
   2e354:	10000326 	beq	r2,zero,2e364 <alt_get_errno+0x24>
   2e358:	d0a00d17 	ldw	r2,-32716(gp)
   2e35c:	103ee83a 	callr	r2
   2e360:	00000106 	br	2e368 <alt_get_errno+0x28>
   2e364:	d0a72604 	addi	r2,gp,-25448
}
   2e368:	e037883a 	mov	sp,fp
   2e36c:	dfc00117 	ldw	ra,4(sp)
   2e370:	df000017 	ldw	fp,0(sp)
   2e374:	dec00204 	addi	sp,sp,8
   2e378:	f800283a 	ret

0002e37c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   2e37c:	defff904 	addi	sp,sp,-28
   2e380:	dfc00615 	stw	ra,24(sp)
   2e384:	df000515 	stw	fp,20(sp)
   2e388:	df000504 	addi	fp,sp,20
   2e38c:	e13ffd15 	stw	r4,-12(fp)
   2e390:	e17ffc15 	stw	r5,-16(fp)
   2e394:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   2e398:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2e39c:	e0bffd17 	ldw	r2,-12(fp)
   2e3a0:	10000916 	blt	r2,zero,2e3c8 <lseek+0x4c>
   2e3a4:	e0fffd17 	ldw	r3,-12(fp)
   2e3a8:	1805883a 	mov	r2,r3
   2e3ac:	1085883a 	add	r2,r2,r2
   2e3b0:	10c5883a 	add	r2,r2,r3
   2e3b4:	100490ba 	slli	r2,r2,2
   2e3b8:	00c000f4 	movhi	r3,3
   2e3bc:	18c5d604 	addi	r3,r3,5976
   2e3c0:	10c5883a 	add	r2,r2,r3
   2e3c4:	00000106 	br	2e3cc <lseek+0x50>
   2e3c8:	0005883a 	mov	r2,zero
   2e3cc:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
   2e3d0:	e0bffe17 	ldw	r2,-8(fp)
   2e3d4:	10001026 	beq	r2,zero,2e418 <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   2e3d8:	e0bffe17 	ldw	r2,-8(fp)
   2e3dc:	10800017 	ldw	r2,0(r2)
   2e3e0:	10800717 	ldw	r2,28(r2)
   2e3e4:	10000926 	beq	r2,zero,2e40c <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   2e3e8:	e0bffe17 	ldw	r2,-8(fp)
   2e3ec:	10800017 	ldw	r2,0(r2)
   2e3f0:	10800717 	ldw	r2,28(r2)
   2e3f4:	e1bffb17 	ldw	r6,-20(fp)
   2e3f8:	e17ffc17 	ldw	r5,-16(fp)
   2e3fc:	e13ffe17 	ldw	r4,-8(fp)
   2e400:	103ee83a 	callr	r2
   2e404:	e0bfff15 	stw	r2,-4(fp)
   2e408:	00000506 	br	2e420 <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   2e40c:	00bfde84 	movi	r2,-134
   2e410:	e0bfff15 	stw	r2,-4(fp)
   2e414:	00000206 	br	2e420 <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
   2e418:	00bfebc4 	movi	r2,-81
   2e41c:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
   2e420:	e0bfff17 	ldw	r2,-4(fp)
   2e424:	1000070e 	bge	r2,zero,2e444 <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
   2e428:	002e3400 	call	2e340 <alt_get_errno>
   2e42c:	1007883a 	mov	r3,r2
   2e430:	e0bfff17 	ldw	r2,-4(fp)
   2e434:	0085c83a 	sub	r2,zero,r2
   2e438:	18800015 	stw	r2,0(r3)
    rc = -1;
   2e43c:	00bfffc4 	movi	r2,-1
   2e440:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
   2e444:	e0bfff17 	ldw	r2,-4(fp)
}
   2e448:	e037883a 	mov	sp,fp
   2e44c:	dfc00117 	ldw	ra,4(sp)
   2e450:	df000017 	ldw	fp,0(sp)
   2e454:	dec00204 	addi	sp,sp,8
   2e458:	f800283a 	ret

0002e45c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   2e45c:	defffd04 	addi	sp,sp,-12
   2e460:	dfc00215 	stw	ra,8(sp)
   2e464:	df000115 	stw	fp,4(sp)
   2e468:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   2e46c:	0009883a 	mov	r4,zero
   2e470:	002e9000 	call	2e900 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   2e474:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   2e478:	002e93c0 	call	2e93c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   2e47c:	018000f4 	movhi	r6,3
   2e480:	31834f04 	addi	r6,r6,3388
   2e484:	014000f4 	movhi	r5,3
   2e488:	29434f04 	addi	r5,r5,3388
   2e48c:	010000f4 	movhi	r4,3
   2e490:	21034f04 	addi	r4,r4,3388
   2e494:	002fd640 	call	2fd64 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   2e498:	002fb180 	call	2fb18 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   2e49c:	010000f4 	movhi	r4,3
   2e4a0:	213edf04 	addi	r4,r4,-1156
   2e4a4:	00304800 	call	30480 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   2e4a8:	d0a72917 	ldw	r2,-25436(gp)
   2e4ac:	d0e72a17 	ldw	r3,-25432(gp)
   2e4b0:	d1272b17 	ldw	r4,-25428(gp)
   2e4b4:	200d883a 	mov	r6,r4
   2e4b8:	180b883a 	mov	r5,r3
   2e4bc:	1009883a 	mov	r4,r2
   2e4c0:	00207a00 	call	207a0 <main>
   2e4c4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   2e4c8:	01000044 	movi	r4,1
   2e4cc:	002dc280 	call	2dc28 <close>
  exit (result);
   2e4d0:	e13fff17 	ldw	r4,-4(fp)
   2e4d4:	00304940 	call	30494 <exit>

0002e4d8 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   2e4d8:	defffe04 	addi	sp,sp,-8
   2e4dc:	df000115 	stw	fp,4(sp)
   2e4e0:	df000104 	addi	fp,sp,4
   2e4e4:	e13fff15 	stw	r4,-4(fp)
}
   2e4e8:	0001883a 	nop
   2e4ec:	e037883a 	mov	sp,fp
   2e4f0:	df000017 	ldw	fp,0(sp)
   2e4f4:	dec00104 	addi	sp,sp,4
   2e4f8:	f800283a 	ret

0002e4fc <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   2e4fc:	defffe04 	addi	sp,sp,-8
   2e500:	df000115 	stw	fp,4(sp)
   2e504:	df000104 	addi	fp,sp,4
   2e508:	e13fff15 	stw	r4,-4(fp)
}
   2e50c:	0001883a 	nop
   2e510:	e037883a 	mov	sp,fp
   2e514:	df000017 	ldw	fp,0(sp)
   2e518:	dec00104 	addi	sp,sp,4
   2e51c:	f800283a 	ret

0002e520 <alt_get_errno>:
{
   2e520:	defffe04 	addi	sp,sp,-8
   2e524:	dfc00115 	stw	ra,4(sp)
   2e528:	df000015 	stw	fp,0(sp)
   2e52c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e530:	d0a00d17 	ldw	r2,-32716(gp)
   2e534:	10000326 	beq	r2,zero,2e544 <alt_get_errno+0x24>
   2e538:	d0a00d17 	ldw	r2,-32716(gp)
   2e53c:	103ee83a 	callr	r2
   2e540:	00000106 	br	2e548 <alt_get_errno+0x28>
   2e544:	d0a72604 	addi	r2,gp,-25448
}
   2e548:	e037883a 	mov	sp,fp
   2e54c:	dfc00117 	ldw	ra,4(sp)
   2e550:	df000017 	ldw	fp,0(sp)
   2e554:	dec00204 	addi	sp,sp,8
   2e558:	f800283a 	ret

0002e55c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   2e55c:	defff904 	addi	sp,sp,-28
   2e560:	dfc00615 	stw	ra,24(sp)
   2e564:	df000515 	stw	fp,20(sp)
   2e568:	df000504 	addi	fp,sp,20
   2e56c:	e13ffd15 	stw	r4,-12(fp)
   2e570:	e17ffc15 	stw	r5,-16(fp)
   2e574:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2e578:	e0bffd17 	ldw	r2,-12(fp)
   2e57c:	10000916 	blt	r2,zero,2e5a4 <read+0x48>
   2e580:	e0fffd17 	ldw	r3,-12(fp)
   2e584:	1805883a 	mov	r2,r3
   2e588:	1085883a 	add	r2,r2,r2
   2e58c:	10c5883a 	add	r2,r2,r3
   2e590:	100490ba 	slli	r2,r2,2
   2e594:	00c000f4 	movhi	r3,3
   2e598:	18c5d604 	addi	r3,r3,5976
   2e59c:	10c5883a 	add	r2,r2,r3
   2e5a0:	00000106 	br	2e5a8 <read+0x4c>
   2e5a4:	0005883a 	mov	r2,zero
   2e5a8:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2e5ac:	e0bfff17 	ldw	r2,-4(fp)
   2e5b0:	10002226 	beq	r2,zero,2e63c <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2e5b4:	e0bfff17 	ldw	r2,-4(fp)
   2e5b8:	10800217 	ldw	r2,8(r2)
   2e5bc:	108000cc 	andi	r2,r2,3
   2e5c0:	10800060 	cmpeqi	r2,r2,1
   2e5c4:	1000181e 	bne	r2,zero,2e628 <read+0xcc>
        (fd->dev->read))
   2e5c8:	e0bfff17 	ldw	r2,-4(fp)
   2e5cc:	10800017 	ldw	r2,0(r2)
   2e5d0:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2e5d4:	10001426 	beq	r2,zero,2e628 <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   2e5d8:	e0bfff17 	ldw	r2,-4(fp)
   2e5dc:	10800017 	ldw	r2,0(r2)
   2e5e0:	10800517 	ldw	r2,20(r2)
   2e5e4:	e0fffb17 	ldw	r3,-20(fp)
   2e5e8:	180d883a 	mov	r6,r3
   2e5ec:	e17ffc17 	ldw	r5,-16(fp)
   2e5f0:	e13fff17 	ldw	r4,-4(fp)
   2e5f4:	103ee83a 	callr	r2
   2e5f8:	e0bffe15 	stw	r2,-8(fp)
   2e5fc:	e0bffe17 	ldw	r2,-8(fp)
   2e600:	1000070e 	bge	r2,zero,2e620 <read+0xc4>
        {
          ALT_ERRNO = -rval;
   2e604:	002e5200 	call	2e520 <alt_get_errno>
   2e608:	1007883a 	mov	r3,r2
   2e60c:	e0bffe17 	ldw	r2,-8(fp)
   2e610:	0085c83a 	sub	r2,zero,r2
   2e614:	18800015 	stw	r2,0(r3)
          return -1;
   2e618:	00bfffc4 	movi	r2,-1
   2e61c:	00000c06 	br	2e650 <read+0xf4>
        }
        return rval;
   2e620:	e0bffe17 	ldw	r2,-8(fp)
   2e624:	00000a06 	br	2e650 <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
   2e628:	002e5200 	call	2e520 <alt_get_errno>
   2e62c:	1007883a 	mov	r3,r2
   2e630:	00800344 	movi	r2,13
   2e634:	18800015 	stw	r2,0(r3)
   2e638:	00000406 	br	2e64c <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   2e63c:	002e5200 	call	2e520 <alt_get_errno>
   2e640:	1007883a 	mov	r3,r2
   2e644:	00801444 	movi	r2,81
   2e648:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2e64c:	00bfffc4 	movi	r2,-1
}
   2e650:	e037883a 	mov	sp,fp
   2e654:	dfc00117 	ldw	ra,4(sp)
   2e658:	df000017 	ldw	fp,0(sp)
   2e65c:	dec00204 	addi	sp,sp,8
   2e660:	f800283a 	ret

0002e664 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   2e664:	defffe04 	addi	sp,sp,-8
   2e668:	df000115 	stw	fp,4(sp)
   2e66c:	df000104 	addi	fp,sp,4
   2e670:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   2e674:	e0bfff17 	ldw	r2,-4(fp)
   2e678:	108000d0 	cmplti	r2,r2,3
   2e67c:	1000101e 	bne	r2,zero,2e6c0 <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
   2e680:	e0ffff17 	ldw	r3,-4(fp)
   2e684:	1805883a 	mov	r2,r3
   2e688:	1085883a 	add	r2,r2,r2
   2e68c:	10c5883a 	add	r2,r2,r3
   2e690:	100490ba 	slli	r2,r2,2
   2e694:	00c000f4 	movhi	r3,3
   2e698:	10c7883a 	add	r3,r2,r3
   2e69c:	1805d815 	stw	zero,5984(r3)
    alt_fd_list[fd].dev      = 0;
   2e6a0:	e0ffff17 	ldw	r3,-4(fp)
   2e6a4:	1805883a 	mov	r2,r3
   2e6a8:	1085883a 	add	r2,r2,r2
   2e6ac:	10c5883a 	add	r2,r2,r3
   2e6b0:	100490ba 	slli	r2,r2,2
   2e6b4:	00c000f4 	movhi	r3,3
   2e6b8:	10c7883a 	add	r3,r2,r3
   2e6bc:	1805d615 	stw	zero,5976(r3)
  }
}
   2e6c0:	0001883a 	nop
   2e6c4:	e037883a 	mov	sp,fp
   2e6c8:	df000017 	ldw	fp,0(sp)
   2e6cc:	dec00104 	addi	sp,sp,4
   2e6d0:	f800283a 	ret

0002e6d4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   2e6d4:	defff904 	addi	sp,sp,-28
   2e6d8:	df000615 	stw	fp,24(sp)
   2e6dc:	df000604 	addi	fp,sp,24
   2e6e0:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
   2e6e4:	0005303a 	rdctl	r2,status
   2e6e8:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e6ec:	e0fffd17 	ldw	r3,-12(fp)
   2e6f0:	00bfff84 	movi	r2,-2
   2e6f4:	1884703a 	and	r2,r3,r2
   2e6f8:	1001703a 	wrctl	status,r2
  return context;
   2e6fc:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   2e700:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   2e704:	d0a00f17 	ldw	r2,-32708(gp)
   2e708:	10c000c4 	addi	r3,r2,3
   2e70c:	00bfff04 	movi	r2,-4
   2e710:	1884703a 	and	r2,r3,r2
   2e714:	d0a00f15 	stw	r2,-32708(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   2e718:	d0e00f17 	ldw	r3,-32708(gp)
   2e71c:	e0bffa17 	ldw	r2,-24(fp)
   2e720:	1887883a 	add	r3,r3,r2
   2e724:	00800134 	movhi	r2,4
   2e728:	10800004 	addi	r2,r2,0
   2e72c:	10c0072e 	bgeu	r2,r3,2e74c <sbrk+0x78>
   2e730:	e0bfff17 	ldw	r2,-4(fp)
   2e734:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   2e738:	e0bffc17 	ldw	r2,-16(fp)
   2e73c:	1001703a 	wrctl	status,r2
}
   2e740:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   2e744:	00bfffc4 	movi	r2,-1
   2e748:	00000c06 	br	2e77c <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   2e74c:	d0a00f17 	ldw	r2,-32708(gp)
   2e750:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
   2e754:	d0e00f17 	ldw	r3,-32708(gp)
   2e758:	e0bffa17 	ldw	r2,-24(fp)
   2e75c:	1885883a 	add	r2,r3,r2
   2e760:	d0a00f15 	stw	r2,-32708(gp)
   2e764:	e0bfff17 	ldw	r2,-4(fp)
   2e768:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   2e76c:	e0bffb17 	ldw	r2,-20(fp)
   2e770:	1001703a 	wrctl	status,r2
}
   2e774:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   2e778:	e0bffe17 	ldw	r2,-8(fp)
} 
   2e77c:	e037883a 	mov	sp,fp
   2e780:	df000017 	ldw	fp,0(sp)
   2e784:	dec00104 	addi	sp,sp,4
   2e788:	f800283a 	ret

0002e78c <alt_get_errno>:
{
   2e78c:	defffe04 	addi	sp,sp,-8
   2e790:	dfc00115 	stw	ra,4(sp)
   2e794:	df000015 	stw	fp,0(sp)
   2e798:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e79c:	d0a00d17 	ldw	r2,-32716(gp)
   2e7a0:	10000326 	beq	r2,zero,2e7b0 <alt_get_errno+0x24>
   2e7a4:	d0a00d17 	ldw	r2,-32716(gp)
   2e7a8:	103ee83a 	callr	r2
   2e7ac:	00000106 	br	2e7b4 <alt_get_errno+0x28>
   2e7b0:	d0a72604 	addi	r2,gp,-25448
}
   2e7b4:	e037883a 	mov	sp,fp
   2e7b8:	dfc00117 	ldw	ra,4(sp)
   2e7bc:	df000017 	ldw	fp,0(sp)
   2e7c0:	dec00204 	addi	sp,sp,8
   2e7c4:	f800283a 	ret

0002e7c8 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   2e7c8:	defff904 	addi	sp,sp,-28
   2e7cc:	dfc00615 	stw	ra,24(sp)
   2e7d0:	df000515 	stw	fp,20(sp)
   2e7d4:	df000504 	addi	fp,sp,20
   2e7d8:	e13ffd15 	stw	r4,-12(fp)
   2e7dc:	e17ffc15 	stw	r5,-16(fp)
   2e7e0:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2e7e4:	e0bffd17 	ldw	r2,-12(fp)
   2e7e8:	10000916 	blt	r2,zero,2e810 <write+0x48>
   2e7ec:	e0fffd17 	ldw	r3,-12(fp)
   2e7f0:	1805883a 	mov	r2,r3
   2e7f4:	1085883a 	add	r2,r2,r2
   2e7f8:	10c5883a 	add	r2,r2,r3
   2e7fc:	100490ba 	slli	r2,r2,2
   2e800:	00c000f4 	movhi	r3,3
   2e804:	18c5d604 	addi	r3,r3,5976
   2e808:	10c5883a 	add	r2,r2,r3
   2e80c:	00000106 	br	2e814 <write+0x4c>
   2e810:	0005883a 	mov	r2,zero
   2e814:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2e818:	e0bfff17 	ldw	r2,-4(fp)
   2e81c:	10002126 	beq	r2,zero,2e8a4 <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   2e820:	e0bfff17 	ldw	r2,-4(fp)
   2e824:	10800217 	ldw	r2,8(r2)
   2e828:	108000cc 	andi	r2,r2,3
   2e82c:	10001826 	beq	r2,zero,2e890 <write+0xc8>
   2e830:	e0bfff17 	ldw	r2,-4(fp)
   2e834:	10800017 	ldw	r2,0(r2)
   2e838:	10800617 	ldw	r2,24(r2)
   2e83c:	10001426 	beq	r2,zero,2e890 <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   2e840:	e0bfff17 	ldw	r2,-4(fp)
   2e844:	10800017 	ldw	r2,0(r2)
   2e848:	10800617 	ldw	r2,24(r2)
   2e84c:	e0fffb17 	ldw	r3,-20(fp)
   2e850:	180d883a 	mov	r6,r3
   2e854:	e17ffc17 	ldw	r5,-16(fp)
   2e858:	e13fff17 	ldw	r4,-4(fp)
   2e85c:	103ee83a 	callr	r2
   2e860:	e0bffe15 	stw	r2,-8(fp)
   2e864:	e0bffe17 	ldw	r2,-8(fp)
   2e868:	1000070e 	bge	r2,zero,2e888 <write+0xc0>
      {
        ALT_ERRNO = -rval;
   2e86c:	002e78c0 	call	2e78c <alt_get_errno>
   2e870:	1007883a 	mov	r3,r2
   2e874:	e0bffe17 	ldw	r2,-8(fp)
   2e878:	0085c83a 	sub	r2,zero,r2
   2e87c:	18800015 	stw	r2,0(r3)
        return -1;
   2e880:	00bfffc4 	movi	r2,-1
   2e884:	00000c06 	br	2e8b8 <write+0xf0>
      }
      return rval;
   2e888:	e0bffe17 	ldw	r2,-8(fp)
   2e88c:	00000a06 	br	2e8b8 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
   2e890:	002e78c0 	call	2e78c <alt_get_errno>
   2e894:	1007883a 	mov	r3,r2
   2e898:	00800344 	movi	r2,13
   2e89c:	18800015 	stw	r2,0(r3)
   2e8a0:	00000406 	br	2e8b4 <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   2e8a4:	002e78c0 	call	2e78c <alt_get_errno>
   2e8a8:	1007883a 	mov	r3,r2
   2e8ac:	00801444 	movi	r2,81
   2e8b0:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2e8b4:	00bfffc4 	movi	r2,-1
}
   2e8b8:	e037883a 	mov	sp,fp
   2e8bc:	dfc00117 	ldw	ra,4(sp)
   2e8c0:	df000017 	ldw	fp,0(sp)
   2e8c4:	dec00204 	addi	sp,sp,8
   2e8c8:	f800283a 	ret

0002e8cc <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   2e8cc:	defffd04 	addi	sp,sp,-12
   2e8d0:	dfc00215 	stw	ra,8(sp)
   2e8d4:	df000115 	stw	fp,4(sp)
   2e8d8:	df000104 	addi	fp,sp,4
   2e8dc:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   2e8e0:	d1600a04 	addi	r5,gp,-32728
   2e8e4:	e13fff17 	ldw	r4,-4(fp)
   2e8e8:	002fa700 	call	2fa70 <alt_dev_llist_insert>
}
   2e8ec:	e037883a 	mov	sp,fp
   2e8f0:	dfc00117 	ldw	ra,4(sp)
   2e8f4:	df000017 	ldw	fp,0(sp)
   2e8f8:	dec00204 	addi	sp,sp,8
   2e8fc:	f800283a 	ret

0002e900 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   2e900:	defffd04 	addi	sp,sp,-12
   2e904:	dfc00215 	stw	ra,8(sp)
   2e908:	df000115 	stw	fp,4(sp)
   2e90c:	df000104 	addi	fp,sp,4
   2e910:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
   2e914:	00302040 	call	30204 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   2e918:	00800044 	movi	r2,1
   2e91c:	1001703a 	wrctl	status,r2
}
   2e920:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
   2e924:	0001883a 	nop
   2e928:	e037883a 	mov	sp,fp
   2e92c:	dfc00117 	ldw	ra,4(sp)
   2e930:	df000017 	ldw	fp,0(sp)
   2e934:	dec00204 	addi	sp,sp,8
   2e938:	f800283a 	ret

0002e93c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   2e93c:	defffe04 	addi	sp,sp,-8
   2e940:	dfc00115 	stw	ra,4(sp)
   2e944:	df000015 	stw	fp,0(sp)
   2e948:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   2e94c:	01c0fa04 	movi	r7,1000
   2e950:	000d883a 	mov	r6,zero
   2e954:	000b883a 	mov	r5,zero
   2e958:	01000134 	movhi	r4,4
   2e95c:	21040004 	addi	r4,r4,4096
   2e960:	002f4980 	call	2f498 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   2e964:	01800084 	movi	r6,2
   2e968:	000b883a 	mov	r5,zero
   2e96c:	010000f4 	movhi	r4,3
   2e970:	21064004 	addi	r4,r4,6400
   2e974:	002eb100 	call	2eb10 <altera_avalon_jtag_uart_init>
   2e978:	010000f4 	movhi	r4,3
   2e97c:	21063604 	addi	r4,r4,6360
   2e980:	002e8cc0 	call	2e8cc <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
   2e984:	0001883a 	nop
    ALTERA_UP_AVALON_ACCELEROMETER_SPI_INIT ( ACCELEROMETER_SPI, accelerometer_spi);
   2e988:	010000f4 	movhi	r4,3
   2e98c:	210a4e04 	addi	r4,r4,10552
   2e990:	002e8cc0 	call	2e8cc <alt_dev_reg>
}
   2e994:	0001883a 	nop
   2e998:	e037883a 	mov	sp,fp
   2e99c:	dfc00117 	ldw	ra,4(sp)
   2e9a0:	df000017 	ldw	fp,0(sp)
   2e9a4:	dec00204 	addi	sp,sp,8
   2e9a8:	f800283a 	ret

0002e9ac <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   2e9ac:	defffa04 	addi	sp,sp,-24
   2e9b0:	dfc00515 	stw	ra,20(sp)
   2e9b4:	df000415 	stw	fp,16(sp)
   2e9b8:	df000404 	addi	fp,sp,16
   2e9bc:	e13ffe15 	stw	r4,-8(fp)
   2e9c0:	e17ffd15 	stw	r5,-12(fp)
   2e9c4:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e9c8:	e0bffe17 	ldw	r2,-8(fp)
   2e9cc:	10800017 	ldw	r2,0(r2)
   2e9d0:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   2e9d4:	e0bfff17 	ldw	r2,-4(fp)
   2e9d8:	10c00a04 	addi	r3,r2,40
   2e9dc:	e0bffe17 	ldw	r2,-8(fp)
   2e9e0:	10800217 	ldw	r2,8(r2)
   2e9e4:	100f883a 	mov	r7,r2
   2e9e8:	e1bffc17 	ldw	r6,-16(fp)
   2e9ec:	e17ffd17 	ldw	r5,-12(fp)
   2e9f0:	1809883a 	mov	r4,r3
   2e9f4:	002efd00 	call	2efd0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   2e9f8:	e037883a 	mov	sp,fp
   2e9fc:	dfc00117 	ldw	ra,4(sp)
   2ea00:	df000017 	ldw	fp,0(sp)
   2ea04:	dec00204 	addi	sp,sp,8
   2ea08:	f800283a 	ret

0002ea0c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   2ea0c:	defffa04 	addi	sp,sp,-24
   2ea10:	dfc00515 	stw	ra,20(sp)
   2ea14:	df000415 	stw	fp,16(sp)
   2ea18:	df000404 	addi	fp,sp,16
   2ea1c:	e13ffe15 	stw	r4,-8(fp)
   2ea20:	e17ffd15 	stw	r5,-12(fp)
   2ea24:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2ea28:	e0bffe17 	ldw	r2,-8(fp)
   2ea2c:	10800017 	ldw	r2,0(r2)
   2ea30:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   2ea34:	e0bfff17 	ldw	r2,-4(fp)
   2ea38:	10c00a04 	addi	r3,r2,40
   2ea3c:	e0bffe17 	ldw	r2,-8(fp)
   2ea40:	10800217 	ldw	r2,8(r2)
   2ea44:	100f883a 	mov	r7,r2
   2ea48:	e1bffc17 	ldw	r6,-16(fp)
   2ea4c:	e17ffd17 	ldw	r5,-12(fp)
   2ea50:	1809883a 	mov	r4,r3
   2ea54:	002f1f00 	call	2f1f0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   2ea58:	e037883a 	mov	sp,fp
   2ea5c:	dfc00117 	ldw	ra,4(sp)
   2ea60:	df000017 	ldw	fp,0(sp)
   2ea64:	dec00204 	addi	sp,sp,8
   2ea68:	f800283a 	ret

0002ea6c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   2ea6c:	defffc04 	addi	sp,sp,-16
   2ea70:	dfc00315 	stw	ra,12(sp)
   2ea74:	df000215 	stw	fp,8(sp)
   2ea78:	df000204 	addi	fp,sp,8
   2ea7c:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2ea80:	e0bffe17 	ldw	r2,-8(fp)
   2ea84:	10800017 	ldw	r2,0(r2)
   2ea88:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   2ea8c:	e0bfff17 	ldw	r2,-4(fp)
   2ea90:	10c00a04 	addi	r3,r2,40
   2ea94:	e0bffe17 	ldw	r2,-8(fp)
   2ea98:	10800217 	ldw	r2,8(r2)
   2ea9c:	100b883a 	mov	r5,r2
   2eaa0:	1809883a 	mov	r4,r3
   2eaa4:	002ee740 	call	2ee74 <altera_avalon_jtag_uart_close>
}
   2eaa8:	e037883a 	mov	sp,fp
   2eaac:	dfc00117 	ldw	ra,4(sp)
   2eab0:	df000017 	ldw	fp,0(sp)
   2eab4:	dec00204 	addi	sp,sp,8
   2eab8:	f800283a 	ret

0002eabc <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   2eabc:	defffa04 	addi	sp,sp,-24
   2eac0:	dfc00515 	stw	ra,20(sp)
   2eac4:	df000415 	stw	fp,16(sp)
   2eac8:	df000404 	addi	fp,sp,16
   2eacc:	e13ffe15 	stw	r4,-8(fp)
   2ead0:	e17ffd15 	stw	r5,-12(fp)
   2ead4:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   2ead8:	e0bffe17 	ldw	r2,-8(fp)
   2eadc:	10800017 	ldw	r2,0(r2)
   2eae0:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   2eae4:	e0bfff17 	ldw	r2,-4(fp)
   2eae8:	10800a04 	addi	r2,r2,40
   2eaec:	e1bffc17 	ldw	r6,-16(fp)
   2eaf0:	e17ffd17 	ldw	r5,-12(fp)
   2eaf4:	1009883a 	mov	r4,r2
   2eaf8:	002eedc0 	call	2eedc <altera_avalon_jtag_uart_ioctl>
}
   2eafc:	e037883a 	mov	sp,fp
   2eb00:	dfc00117 	ldw	ra,4(sp)
   2eb04:	df000017 	ldw	fp,0(sp)
   2eb08:	dec00204 	addi	sp,sp,8
   2eb0c:	f800283a 	ret

0002eb10 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   2eb10:	defffb04 	addi	sp,sp,-20
   2eb14:	dfc00415 	stw	ra,16(sp)
   2eb18:	df000315 	stw	fp,12(sp)
   2eb1c:	df000304 	addi	fp,sp,12
   2eb20:	e13fff15 	stw	r4,-4(fp)
   2eb24:	e17ffe15 	stw	r5,-8(fp)
   2eb28:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2eb2c:	e0bfff17 	ldw	r2,-4(fp)
   2eb30:	00c00044 	movi	r3,1
   2eb34:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   2eb38:	e0bfff17 	ldw	r2,-4(fp)
   2eb3c:	10800017 	ldw	r2,0(r2)
   2eb40:	10800104 	addi	r2,r2,4
   2eb44:	1007883a 	mov	r3,r2
   2eb48:	e0bfff17 	ldw	r2,-4(fp)
   2eb4c:	10800817 	ldw	r2,32(r2)
   2eb50:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
   2eb54:	e0bffd17 	ldw	r2,-12(fp)
   2eb58:	018000f4 	movhi	r6,3
   2eb5c:	31baf104 	addi	r6,r6,-5180
   2eb60:	e17fff17 	ldw	r5,-4(fp)
   2eb64:	1009883a 	mov	r4,r2
   2eb68:	002de800 	call	2de80 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   2eb6c:	e0bfff17 	ldw	r2,-4(fp)
   2eb70:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   2eb74:	e0bfff17 	ldw	r2,-4(fp)
   2eb78:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2eb7c:	d0e72c17 	ldw	r3,-25424(gp)
   2eb80:	e1ffff17 	ldw	r7,-4(fp)
   2eb84:	018000f4 	movhi	r6,3
   2eb88:	31bb7504 	addi	r6,r6,-4652
   2eb8c:	180b883a 	mov	r5,r3
   2eb90:	1009883a 	mov	r4,r2
   2eb94:	002f8e00 	call	2f8e0 <alt_alarm_start>
   2eb98:	1000040e 	bge	r2,zero,2ebac <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   2eb9c:	e0ffff17 	ldw	r3,-4(fp)
   2eba0:	00a00034 	movhi	r2,32768
   2eba4:	10bfffc4 	addi	r2,r2,-1
   2eba8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   2ebac:	0001883a 	nop
   2ebb0:	e037883a 	mov	sp,fp
   2ebb4:	dfc00117 	ldw	ra,4(sp)
   2ebb8:	df000017 	ldw	fp,0(sp)
   2ebbc:	dec00204 	addi	sp,sp,8
   2ebc0:	f800283a 	ret

0002ebc4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   2ebc4:	defff704 	addi	sp,sp,-36
   2ebc8:	df000815 	stw	fp,32(sp)
   2ebcc:	df000804 	addi	fp,sp,32
   2ebd0:	e13ff915 	stw	r4,-28(fp)
   2ebd4:	e17ff815 	stw	r5,-32(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   2ebd8:	e0bff917 	ldw	r2,-28(fp)
   2ebdc:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
   2ebe0:	e0bffd17 	ldw	r2,-12(fp)
   2ebe4:	10800017 	ldw	r2,0(r2)
   2ebe8:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2ebec:	e0bffc17 	ldw	r2,-16(fp)
   2ebf0:	10800104 	addi	r2,r2,4
   2ebf4:	10800037 	ldwio	r2,0(r2)
   2ebf8:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   2ebfc:	e0bffb17 	ldw	r2,-20(fp)
   2ec00:	1080c00c 	andi	r2,r2,768
   2ec04:	10006d26 	beq	r2,zero,2edbc <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   2ec08:	e0bffb17 	ldw	r2,-20(fp)
   2ec0c:	1080400c 	andi	r2,r2,256
   2ec10:	10003526 	beq	r2,zero,2ece8 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   2ec14:	00800074 	movhi	r2,1
   2ec18:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2ec1c:	e0bffd17 	ldw	r2,-12(fp)
   2ec20:	10800a17 	ldw	r2,40(r2)
   2ec24:	10800044 	addi	r2,r2,1
   2ec28:	1081ffcc 	andi	r2,r2,2047
   2ec2c:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   2ec30:	e0bffd17 	ldw	r2,-12(fp)
   2ec34:	10800b17 	ldw	r2,44(r2)
   2ec38:	e0fffa17 	ldw	r3,-24(fp)
   2ec3c:	18801526 	beq	r3,r2,2ec94 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   2ec40:	e0bffc17 	ldw	r2,-16(fp)
   2ec44:	10800037 	ldwio	r2,0(r2)
   2ec48:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   2ec4c:	e0bfff17 	ldw	r2,-4(fp)
   2ec50:	10a0000c 	andi	r2,r2,32768
   2ec54:	10001126 	beq	r2,zero,2ec9c <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   2ec58:	e0bffd17 	ldw	r2,-12(fp)
   2ec5c:	10800a17 	ldw	r2,40(r2)
   2ec60:	e0ffff17 	ldw	r3,-4(fp)
   2ec64:	1809883a 	mov	r4,r3
   2ec68:	e0fffd17 	ldw	r3,-12(fp)
   2ec6c:	1885883a 	add	r2,r3,r2
   2ec70:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2ec74:	e0bffd17 	ldw	r2,-12(fp)
   2ec78:	10800a17 	ldw	r2,40(r2)
   2ec7c:	10800044 	addi	r2,r2,1
   2ec80:	10c1ffcc 	andi	r3,r2,2047
   2ec84:	e0bffd17 	ldw	r2,-12(fp)
   2ec88:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
   2ec8c:	0001883a 	nop
      {
   2ec90:	003fe206 	br	2ec1c <altera_avalon_jtag_uart_irq+0x58>
          break;
   2ec94:	0001883a 	nop
   2ec98:	00000106 	br	2eca0 <altera_avalon_jtag_uart_irq+0xdc>
          break;
   2ec9c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   2eca0:	e0bfff17 	ldw	r2,-4(fp)
   2eca4:	10bfffec 	andhi	r2,r2,65535
   2eca8:	10000f26 	beq	r2,zero,2ece8 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2ecac:	e0bffd17 	ldw	r2,-12(fp)
   2ecb0:	10c00817 	ldw	r3,32(r2)
   2ecb4:	00bfff84 	movi	r2,-2
   2ecb8:	1886703a 	and	r3,r3,r2
   2ecbc:	e0bffd17 	ldw	r2,-12(fp)
   2ecc0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   2ecc4:	e0bffc17 	ldw	r2,-16(fp)
   2ecc8:	10800104 	addi	r2,r2,4
   2eccc:	1007883a 	mov	r3,r2
   2ecd0:	e0bffd17 	ldw	r2,-12(fp)
   2ecd4:	10800817 	ldw	r2,32(r2)
   2ecd8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2ecdc:	e0bffc17 	ldw	r2,-16(fp)
   2ece0:	10800104 	addi	r2,r2,4
   2ece4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   2ece8:	e0bffb17 	ldw	r2,-20(fp)
   2ecec:	1080800c 	andi	r2,r2,512
   2ecf0:	103fbe26 	beq	r2,zero,2ebec <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   2ecf4:	e0bffb17 	ldw	r2,-20(fp)
   2ecf8:	1004d43a 	srli	r2,r2,16
   2ecfc:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   2ed00:	00001406 	br	2ed54 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   2ed04:	e0bffc17 	ldw	r2,-16(fp)
   2ed08:	e0fffd17 	ldw	r3,-12(fp)
   2ed0c:	18c00d17 	ldw	r3,52(r3)
   2ed10:	e13ffd17 	ldw	r4,-12(fp)
   2ed14:	20c7883a 	add	r3,r4,r3
   2ed18:	18c20e03 	ldbu	r3,2104(r3)
   2ed1c:	18c03fcc 	andi	r3,r3,255
   2ed20:	18c0201c 	xori	r3,r3,128
   2ed24:	18ffe004 	addi	r3,r3,-128
   2ed28:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2ed2c:	e0bffd17 	ldw	r2,-12(fp)
   2ed30:	10800d17 	ldw	r2,52(r2)
   2ed34:	10800044 	addi	r2,r2,1
   2ed38:	10c1ffcc 	andi	r3,r2,2047
   2ed3c:	e0bffd17 	ldw	r2,-12(fp)
   2ed40:	10c00d15 	stw	r3,52(r2)
   2ed44:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   2ed48:	e0bffe17 	ldw	r2,-8(fp)
   2ed4c:	10bfffc4 	addi	r2,r2,-1
   2ed50:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
   2ed54:	e0bffe17 	ldw	r2,-8(fp)
   2ed58:	10000526 	beq	r2,zero,2ed70 <altera_avalon_jtag_uart_irq+0x1ac>
   2ed5c:	e0bffd17 	ldw	r2,-12(fp)
   2ed60:	10c00d17 	ldw	r3,52(r2)
   2ed64:	e0bffd17 	ldw	r2,-12(fp)
   2ed68:	10800c17 	ldw	r2,48(r2)
   2ed6c:	18bfe51e 	bne	r3,r2,2ed04 <altera_avalon_jtag_uart_irq+0x140>
      }

      if (space > 0)
   2ed70:	e0bffe17 	ldw	r2,-8(fp)
   2ed74:	103f9d26 	beq	r2,zero,2ebec <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2ed78:	e0bffd17 	ldw	r2,-12(fp)
   2ed7c:	10c00817 	ldw	r3,32(r2)
   2ed80:	00bfff44 	movi	r2,-3
   2ed84:	1886703a 	and	r3,r3,r2
   2ed88:	e0bffd17 	ldw	r2,-12(fp)
   2ed8c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2ed90:	e0bffd17 	ldw	r2,-12(fp)
   2ed94:	10800017 	ldw	r2,0(r2)
   2ed98:	10800104 	addi	r2,r2,4
   2ed9c:	1007883a 	mov	r3,r2
   2eda0:	e0bffd17 	ldw	r2,-12(fp)
   2eda4:	10800817 	ldw	r2,32(r2)
   2eda8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2edac:	e0bffc17 	ldw	r2,-16(fp)
   2edb0:	10800104 	addi	r2,r2,4
   2edb4:	10800037 	ldwio	r2,0(r2)
  {
   2edb8:	003f8c06 	br	2ebec <altera_avalon_jtag_uart_irq+0x28>
      break;
   2edbc:	0001883a 	nop
      }
    }
  }
}
   2edc0:	0001883a 	nop
   2edc4:	e037883a 	mov	sp,fp
   2edc8:	df000017 	ldw	fp,0(sp)
   2edcc:	dec00104 	addi	sp,sp,4
   2edd0:	f800283a 	ret

0002edd4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   2edd4:	defffc04 	addi	sp,sp,-16
   2edd8:	df000315 	stw	fp,12(sp)
   2eddc:	df000304 	addi	fp,sp,12
   2ede0:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   2ede4:	e0bffd17 	ldw	r2,-12(fp)
   2ede8:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   2edec:	e0bfff17 	ldw	r2,-4(fp)
   2edf0:	10800017 	ldw	r2,0(r2)
   2edf4:	10800104 	addi	r2,r2,4
   2edf8:	10800037 	ldwio	r2,0(r2)
   2edfc:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   2ee00:	e0bffe17 	ldw	r2,-8(fp)
   2ee04:	1081000c 	andi	r2,r2,1024
   2ee08:	10000b26 	beq	r2,zero,2ee38 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   2ee0c:	e0bfff17 	ldw	r2,-4(fp)
   2ee10:	10800017 	ldw	r2,0(r2)
   2ee14:	10800104 	addi	r2,r2,4
   2ee18:	1007883a 	mov	r3,r2
   2ee1c:	e0bfff17 	ldw	r2,-4(fp)
   2ee20:	10800817 	ldw	r2,32(r2)
   2ee24:	10810014 	ori	r2,r2,1024
   2ee28:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   2ee2c:	e0bfff17 	ldw	r2,-4(fp)
   2ee30:	10000915 	stw	zero,36(r2)
   2ee34:	00000a06 	br	2ee60 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   2ee38:	e0bfff17 	ldw	r2,-4(fp)
   2ee3c:	10c00917 	ldw	r3,36(r2)
   2ee40:	00a00034 	movhi	r2,32768
   2ee44:	10bfff04 	addi	r2,r2,-4
   2ee48:	10c00536 	bltu	r2,r3,2ee60 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   2ee4c:	e0bfff17 	ldw	r2,-4(fp)
   2ee50:	10800917 	ldw	r2,36(r2)
   2ee54:	10c00044 	addi	r3,r2,1
   2ee58:	e0bfff17 	ldw	r2,-4(fp)
   2ee5c:	10c00915 	stw	r3,36(r2)
   2ee60:	d0a72c17 	ldw	r2,-25424(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   2ee64:	e037883a 	mov	sp,fp
   2ee68:	df000017 	ldw	fp,0(sp)
   2ee6c:	dec00104 	addi	sp,sp,4
   2ee70:	f800283a 	ret

0002ee74 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   2ee74:	defffd04 	addi	sp,sp,-12
   2ee78:	df000215 	stw	fp,8(sp)
   2ee7c:	df000204 	addi	fp,sp,8
   2ee80:	e13fff15 	stw	r4,-4(fp)
   2ee84:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2ee88:	00000506 	br	2eea0 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   2ee8c:	e0bffe17 	ldw	r2,-8(fp)
   2ee90:	1090000c 	andi	r2,r2,16384
   2ee94:	10000226 	beq	r2,zero,2eea0 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   2ee98:	00bffd44 	movi	r2,-11
   2ee9c:	00000b06 	br	2eecc <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2eea0:	e0bfff17 	ldw	r2,-4(fp)
   2eea4:	10c00d17 	ldw	r3,52(r2)
   2eea8:	e0bfff17 	ldw	r2,-4(fp)
   2eeac:	10800c17 	ldw	r2,48(r2)
   2eeb0:	18800526 	beq	r3,r2,2eec8 <altera_avalon_jtag_uart_close+0x54>
   2eeb4:	e0bfff17 	ldw	r2,-4(fp)
   2eeb8:	10c00917 	ldw	r3,36(r2)
   2eebc:	e0bfff17 	ldw	r2,-4(fp)
   2eec0:	10800117 	ldw	r2,4(r2)
   2eec4:	18bff136 	bltu	r3,r2,2ee8c <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
   2eec8:	0005883a 	mov	r2,zero
}
   2eecc:	e037883a 	mov	sp,fp
   2eed0:	df000017 	ldw	fp,0(sp)
   2eed4:	dec00104 	addi	sp,sp,4
   2eed8:	f800283a 	ret

0002eedc <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   2eedc:	defffa04 	addi	sp,sp,-24
   2eee0:	df000515 	stw	fp,20(sp)
   2eee4:	df000504 	addi	fp,sp,20
   2eee8:	e13ffd15 	stw	r4,-12(fp)
   2eeec:	e17ffc15 	stw	r5,-16(fp)
   2eef0:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
   2eef4:	00bff9c4 	movi	r2,-25
   2eef8:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
   2eefc:	e0bffc17 	ldw	r2,-16(fp)
   2ef00:	109a8060 	cmpeqi	r2,r2,27137
   2ef04:	1000041e 	bne	r2,zero,2ef18 <altera_avalon_jtag_uart_ioctl+0x3c>
   2ef08:	e0bffc17 	ldw	r2,-16(fp)
   2ef0c:	109a80a0 	cmpeqi	r2,r2,27138
   2ef10:	1000181e 	bne	r2,zero,2ef74 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
   2ef14:	00002906 	br	2efbc <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
   2ef18:	e0bffd17 	ldw	r2,-12(fp)
   2ef1c:	10c00117 	ldw	r3,4(r2)
   2ef20:	00a00034 	movhi	r2,32768
   2ef24:	10bfffc4 	addi	r2,r2,-1
   2ef28:	18802126 	beq	r3,r2,2efb0 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
   2ef2c:	e0bffb17 	ldw	r2,-20(fp)
   2ef30:	10800017 	ldw	r2,0(r2)
   2ef34:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   2ef38:	e0bffe17 	ldw	r2,-8(fp)
   2ef3c:	10800090 	cmplti	r2,r2,2
   2ef40:	1000061e 	bne	r2,zero,2ef5c <altera_avalon_jtag_uart_ioctl+0x80>
   2ef44:	e0fffe17 	ldw	r3,-8(fp)
   2ef48:	00a00034 	movhi	r2,32768
   2ef4c:	10bfffc4 	addi	r2,r2,-1
   2ef50:	18800226 	beq	r3,r2,2ef5c <altera_avalon_jtag_uart_ioctl+0x80>
   2ef54:	e0bffe17 	ldw	r2,-8(fp)
   2ef58:	00000206 	br	2ef64 <altera_avalon_jtag_uart_ioctl+0x88>
   2ef5c:	00a00034 	movhi	r2,32768
   2ef60:	10bfff84 	addi	r2,r2,-2
   2ef64:	e0fffd17 	ldw	r3,-12(fp)
   2ef68:	18800115 	stw	r2,4(r3)
      rc = 0;
   2ef6c:	e03fff15 	stw	zero,-4(fp)
    break;
   2ef70:	00000f06 	br	2efb0 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
   2ef74:	e0bffd17 	ldw	r2,-12(fp)
   2ef78:	10c00117 	ldw	r3,4(r2)
   2ef7c:	00a00034 	movhi	r2,32768
   2ef80:	10bfffc4 	addi	r2,r2,-1
   2ef84:	18800c26 	beq	r3,r2,2efb8 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   2ef88:	e0bffd17 	ldw	r2,-12(fp)
   2ef8c:	10c00917 	ldw	r3,36(r2)
   2ef90:	e0bffd17 	ldw	r2,-12(fp)
   2ef94:	10800117 	ldw	r2,4(r2)
   2ef98:	1885803a 	cmpltu	r2,r3,r2
   2ef9c:	10c03fcc 	andi	r3,r2,255
   2efa0:	e0bffb17 	ldw	r2,-20(fp)
   2efa4:	10c00015 	stw	r3,0(r2)
      rc = 0;
   2efa8:	e03fff15 	stw	zero,-4(fp)
    break;
   2efac:	00000206 	br	2efb8 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
   2efb0:	0001883a 	nop
   2efb4:	00000106 	br	2efbc <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
   2efb8:	0001883a 	nop
  }

  return rc;
   2efbc:	e0bfff17 	ldw	r2,-4(fp)
}
   2efc0:	e037883a 	mov	sp,fp
   2efc4:	df000017 	ldw	fp,0(sp)
   2efc8:	dec00104 	addi	sp,sp,4
   2efcc:	f800283a 	ret

0002efd0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   2efd0:	defff304 	addi	sp,sp,-52
   2efd4:	dfc00c15 	stw	ra,48(sp)
   2efd8:	df000b15 	stw	fp,44(sp)
   2efdc:	df000b04 	addi	fp,sp,44
   2efe0:	e13ff815 	stw	r4,-32(fp)
   2efe4:	e17ff715 	stw	r5,-36(fp)
   2efe8:	e1bff615 	stw	r6,-40(fp)
   2efec:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
   2eff0:	e0bff717 	ldw	r2,-36(fp)
   2eff4:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2eff8:	00004706 	br	2f118 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   2effc:	e0bff817 	ldw	r2,-32(fp)
   2f000:	10800a17 	ldw	r2,40(r2)
   2f004:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
   2f008:	e0bff817 	ldw	r2,-32(fp)
   2f00c:	10800b17 	ldw	r2,44(r2)
   2f010:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
   2f014:	e0fffd17 	ldw	r3,-12(fp)
   2f018:	e0bffc17 	ldw	r2,-16(fp)
   2f01c:	18800536 	bltu	r3,r2,2f034 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   2f020:	e0fffd17 	ldw	r3,-12(fp)
   2f024:	e0bffc17 	ldw	r2,-16(fp)
   2f028:	1885c83a 	sub	r2,r3,r2
   2f02c:	e0bffe15 	stw	r2,-8(fp)
   2f030:	00000406 	br	2f044 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   2f034:	00c20004 	movi	r3,2048
   2f038:	e0bffc17 	ldw	r2,-16(fp)
   2f03c:	1885c83a 	sub	r2,r3,r2
   2f040:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   2f044:	e0bffe17 	ldw	r2,-8(fp)
   2f048:	10001e26 	beq	r2,zero,2f0c4 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   2f04c:	e0fff617 	ldw	r3,-40(fp)
   2f050:	e0bffe17 	ldw	r2,-8(fp)
   2f054:	1880022e 	bgeu	r3,r2,2f060 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   2f058:	e0bff617 	ldw	r2,-40(fp)
   2f05c:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   2f060:	e0bff817 	ldw	r2,-32(fp)
   2f064:	10c00e04 	addi	r3,r2,56
   2f068:	e0bffc17 	ldw	r2,-16(fp)
   2f06c:	1885883a 	add	r2,r3,r2
   2f070:	e1bffe17 	ldw	r6,-8(fp)
   2f074:	100b883a 	mov	r5,r2
   2f078:	e13fff17 	ldw	r4,-4(fp)
   2f07c:	0025d440 	call	25d44 <memcpy>
      ptr   += n;
   2f080:	e0ffff17 	ldw	r3,-4(fp)
   2f084:	e0bffe17 	ldw	r2,-8(fp)
   2f088:	1885883a 	add	r2,r3,r2
   2f08c:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
   2f090:	e0fff617 	ldw	r3,-40(fp)
   2f094:	e0bffe17 	ldw	r2,-8(fp)
   2f098:	1885c83a 	sub	r2,r3,r2
   2f09c:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2f0a0:	e0fffc17 	ldw	r3,-16(fp)
   2f0a4:	e0bffe17 	ldw	r2,-8(fp)
   2f0a8:	1885883a 	add	r2,r3,r2
   2f0ac:	10c1ffcc 	andi	r3,r2,2047
   2f0b0:	e0bff817 	ldw	r2,-32(fp)
   2f0b4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   2f0b8:	e0bff617 	ldw	r2,-40(fp)
   2f0bc:	00bfcf16 	blt	zero,r2,2effc <altera_avalon_jtag_uart_read+0x2c>
   2f0c0:	00000106 	br	2f0c8 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
   2f0c4:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
   2f0c8:	e0ffff17 	ldw	r3,-4(fp)
   2f0cc:	e0bff717 	ldw	r2,-36(fp)
   2f0d0:	1880141e 	bne	r3,r2,2f124 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   2f0d4:	e0bff517 	ldw	r2,-44(fp)
   2f0d8:	1090000c 	andi	r2,r2,16384
   2f0dc:	1000131e 	bne	r2,zero,2f12c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   2f0e0:	0001883a 	nop
   2f0e4:	e0bff817 	ldw	r2,-32(fp)
   2f0e8:	10800a17 	ldw	r2,40(r2)
   2f0ec:	e0fffd17 	ldw	r3,-12(fp)
   2f0f0:	1880051e 	bne	r3,r2,2f108 <altera_avalon_jtag_uart_read+0x138>
   2f0f4:	e0bff817 	ldw	r2,-32(fp)
   2f0f8:	10c00917 	ldw	r3,36(r2)
   2f0fc:	e0bff817 	ldw	r2,-32(fp)
   2f100:	10800117 	ldw	r2,4(r2)
   2f104:	18bff736 	bltu	r3,r2,2f0e4 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   2f108:	e0bff817 	ldw	r2,-32(fp)
   2f10c:	10800a17 	ldw	r2,40(r2)
   2f110:	e0fffd17 	ldw	r3,-12(fp)
   2f114:	18800726 	beq	r3,r2,2f134 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
   2f118:	e0bff617 	ldw	r2,-40(fp)
   2f11c:	00bfb716 	blt	zero,r2,2effc <altera_avalon_jtag_uart_read+0x2c>
   2f120:	00000506 	br	2f138 <altera_avalon_jtag_uart_read+0x168>
      break;
   2f124:	0001883a 	nop
   2f128:	00000306 	br	2f138 <altera_avalon_jtag_uart_read+0x168>
      break;
   2f12c:	0001883a 	nop
   2f130:	00000106 	br	2f138 <altera_avalon_jtag_uart_read+0x168>
      break;
   2f134:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   2f138:	e0ffff17 	ldw	r3,-4(fp)
   2f13c:	e0bff717 	ldw	r2,-36(fp)
   2f140:	18801926 	beq	r3,r2,2f1a8 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
   2f144:	0005303a 	rdctl	r2,status
   2f148:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f14c:	e0fff917 	ldw	r3,-28(fp)
   2f150:	00bfff84 	movi	r2,-2
   2f154:	1884703a 	and	r2,r3,r2
   2f158:	1001703a 	wrctl	status,r2
  return context;
   2f15c:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   2f160:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2f164:	e0bff817 	ldw	r2,-32(fp)
   2f168:	10800817 	ldw	r2,32(r2)
   2f16c:	10c00054 	ori	r3,r2,1
   2f170:	e0bff817 	ldw	r2,-32(fp)
   2f174:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2f178:	e0bff817 	ldw	r2,-32(fp)
   2f17c:	10800017 	ldw	r2,0(r2)
   2f180:	10800104 	addi	r2,r2,4
   2f184:	1007883a 	mov	r3,r2
   2f188:	e0bff817 	ldw	r2,-32(fp)
   2f18c:	10800817 	ldw	r2,32(r2)
   2f190:	18800035 	stwio	r2,0(r3)
   2f194:	e0bffb17 	ldw	r2,-20(fp)
   2f198:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   2f19c:	e0bffa17 	ldw	r2,-24(fp)
   2f1a0:	1001703a 	wrctl	status,r2
}
   2f1a4:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   2f1a8:	e0ffff17 	ldw	r3,-4(fp)
   2f1ac:	e0bff717 	ldw	r2,-36(fp)
   2f1b0:	18800426 	beq	r3,r2,2f1c4 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
   2f1b4:	e0ffff17 	ldw	r3,-4(fp)
   2f1b8:	e0bff717 	ldw	r2,-36(fp)
   2f1bc:	1885c83a 	sub	r2,r3,r2
   2f1c0:	00000606 	br	2f1dc <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   2f1c4:	e0bff517 	ldw	r2,-44(fp)
   2f1c8:	1090000c 	andi	r2,r2,16384
   2f1cc:	10000226 	beq	r2,zero,2f1d8 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
   2f1d0:	00bffd44 	movi	r2,-11
   2f1d4:	00000106 	br	2f1dc <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   2f1d8:	00bffec4 	movi	r2,-5
}
   2f1dc:	e037883a 	mov	sp,fp
   2f1e0:	dfc00117 	ldw	ra,4(sp)
   2f1e4:	df000017 	ldw	fp,0(sp)
   2f1e8:	dec00204 	addi	sp,sp,8
   2f1ec:	f800283a 	ret

0002f1f0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   2f1f0:	defff304 	addi	sp,sp,-52
   2f1f4:	dfc00c15 	stw	ra,48(sp)
   2f1f8:	df000b15 	stw	fp,44(sp)
   2f1fc:	df000b04 	addi	fp,sp,44
   2f200:	e13ff815 	stw	r4,-32(fp)
   2f204:	e17ff715 	stw	r5,-36(fp)
   2f208:	e1bff615 	stw	r6,-40(fp)
   2f20c:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   2f210:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   2f214:	e0bff717 	ldw	r2,-36(fp)
   2f218:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2f21c:	00003706 	br	2f2fc <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   2f220:	e0bff817 	ldw	r2,-32(fp)
   2f224:	10800c17 	ldw	r2,48(r2)
   2f228:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
   2f22c:	e0bff817 	ldw	r2,-32(fp)
   2f230:	10800d17 	ldw	r2,52(r2)
   2f234:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
   2f238:	e0fffc17 	ldw	r3,-16(fp)
   2f23c:	e0bfff17 	ldw	r2,-4(fp)
   2f240:	1880062e 	bgeu	r3,r2,2f25c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   2f244:	e0ffff17 	ldw	r3,-4(fp)
   2f248:	e0bffc17 	ldw	r2,-16(fp)
   2f24c:	1885c83a 	sub	r2,r3,r2
   2f250:	10bfffc4 	addi	r2,r2,-1
   2f254:	e0bffe15 	stw	r2,-8(fp)
   2f258:	00000b06 	br	2f288 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   2f25c:	e0bfff17 	ldw	r2,-4(fp)
   2f260:	10000526 	beq	r2,zero,2f278 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   2f264:	00c20004 	movi	r3,2048
   2f268:	e0bffc17 	ldw	r2,-16(fp)
   2f26c:	1885c83a 	sub	r2,r3,r2
   2f270:	e0bffe15 	stw	r2,-8(fp)
   2f274:	00000406 	br	2f288 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   2f278:	00c1ffc4 	movi	r3,2047
   2f27c:	e0bffc17 	ldw	r2,-16(fp)
   2f280:	1885c83a 	sub	r2,r3,r2
   2f284:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   2f288:	e0bffe17 	ldw	r2,-8(fp)
   2f28c:	10001e26 	beq	r2,zero,2f308 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   2f290:	e0fff617 	ldw	r3,-40(fp)
   2f294:	e0bffe17 	ldw	r2,-8(fp)
   2f298:	1880022e 	bgeu	r3,r2,2f2a4 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   2f29c:	e0bff617 	ldw	r2,-40(fp)
   2f2a0:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   2f2a4:	e0bff817 	ldw	r2,-32(fp)
   2f2a8:	10c20e04 	addi	r3,r2,2104
   2f2ac:	e0bffc17 	ldw	r2,-16(fp)
   2f2b0:	1885883a 	add	r2,r3,r2
   2f2b4:	e1bffe17 	ldw	r6,-8(fp)
   2f2b8:	e17ff717 	ldw	r5,-36(fp)
   2f2bc:	1009883a 	mov	r4,r2
   2f2c0:	0025d440 	call	25d44 <memcpy>
      ptr   += n;
   2f2c4:	e0fff717 	ldw	r3,-36(fp)
   2f2c8:	e0bffe17 	ldw	r2,-8(fp)
   2f2cc:	1885883a 	add	r2,r3,r2
   2f2d0:	e0bff715 	stw	r2,-36(fp)
      count -= n;
   2f2d4:	e0fff617 	ldw	r3,-40(fp)
   2f2d8:	e0bffe17 	ldw	r2,-8(fp)
   2f2dc:	1885c83a 	sub	r2,r3,r2
   2f2e0:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2f2e4:	e0fffc17 	ldw	r3,-16(fp)
   2f2e8:	e0bffe17 	ldw	r2,-8(fp)
   2f2ec:	1885883a 	add	r2,r3,r2
   2f2f0:	10c1ffcc 	andi	r3,r2,2047
   2f2f4:	e0bff817 	ldw	r2,-32(fp)
   2f2f8:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
   2f2fc:	e0bff617 	ldw	r2,-40(fp)
   2f300:	00bfc716 	blt	zero,r2,2f220 <altera_avalon_jtag_uart_write+0x30>
   2f304:	00000106 	br	2f30c <altera_avalon_jtag_uart_write+0x11c>
        break;
   2f308:	0001883a 	nop
  NIOS2_READ_STATUS (context);
   2f30c:	0005303a 	rdctl	r2,status
   2f310:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f314:	e0fff917 	ldw	r3,-28(fp)
   2f318:	00bfff84 	movi	r2,-2
   2f31c:	1884703a 	and	r2,r3,r2
   2f320:	1001703a 	wrctl	status,r2
  return context;
   2f324:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   2f328:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2f32c:	e0bff817 	ldw	r2,-32(fp)
   2f330:	10800817 	ldw	r2,32(r2)
   2f334:	10c00094 	ori	r3,r2,2
   2f338:	e0bff817 	ldw	r2,-32(fp)
   2f33c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2f340:	e0bff817 	ldw	r2,-32(fp)
   2f344:	10800017 	ldw	r2,0(r2)
   2f348:	10800104 	addi	r2,r2,4
   2f34c:	1007883a 	mov	r3,r2
   2f350:	e0bff817 	ldw	r2,-32(fp)
   2f354:	10800817 	ldw	r2,32(r2)
   2f358:	18800035 	stwio	r2,0(r3)
   2f35c:	e0bffb17 	ldw	r2,-20(fp)
   2f360:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   2f364:	e0bffa17 	ldw	r2,-24(fp)
   2f368:	1001703a 	wrctl	status,r2
}
   2f36c:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   2f370:	e0bff617 	ldw	r2,-40(fp)
   2f374:	0080100e 	bge	zero,r2,2f3b8 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
   2f378:	e0bff517 	ldw	r2,-44(fp)
   2f37c:	1090000c 	andi	r2,r2,16384
   2f380:	1000101e 	bne	r2,zero,2f3c4 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   2f384:	0001883a 	nop
   2f388:	e0bff817 	ldw	r2,-32(fp)
   2f38c:	10800d17 	ldw	r2,52(r2)
   2f390:	e0ffff17 	ldw	r3,-4(fp)
   2f394:	1880051e 	bne	r3,r2,2f3ac <altera_avalon_jtag_uart_write+0x1bc>
   2f398:	e0bff817 	ldw	r2,-32(fp)
   2f39c:	10c00917 	ldw	r3,36(r2)
   2f3a0:	e0bff817 	ldw	r2,-32(fp)
   2f3a4:	10800117 	ldw	r2,4(r2)
   2f3a8:	18bff736 	bltu	r3,r2,2f388 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   2f3ac:	e0bff817 	ldw	r2,-32(fp)
   2f3b0:	10800917 	ldw	r2,36(r2)
   2f3b4:	1000051e 	bne	r2,zero,2f3cc <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
   2f3b8:	e0bff617 	ldw	r2,-40(fp)
   2f3bc:	00bfcf16 	blt	zero,r2,2f2fc <altera_avalon_jtag_uart_write+0x10c>
   2f3c0:	00000306 	br	2f3d0 <altera_avalon_jtag_uart_write+0x1e0>
        break;
   2f3c4:	0001883a 	nop
   2f3c8:	00000106 	br	2f3d0 <altera_avalon_jtag_uart_write+0x1e0>
         break;
   2f3cc:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   2f3d0:	e0fff717 	ldw	r3,-36(fp)
   2f3d4:	e0bffd17 	ldw	r2,-12(fp)
   2f3d8:	18800426 	beq	r3,r2,2f3ec <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
   2f3dc:	e0fff717 	ldw	r3,-36(fp)
   2f3e0:	e0bffd17 	ldw	r2,-12(fp)
   2f3e4:	1885c83a 	sub	r2,r3,r2
   2f3e8:	00000606 	br	2f404 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
   2f3ec:	e0bff517 	ldw	r2,-44(fp)
   2f3f0:	1090000c 	andi	r2,r2,16384
   2f3f4:	10000226 	beq	r2,zero,2f400 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
   2f3f8:	00bffd44 	movi	r2,-11
   2f3fc:	00000106 	br	2f404 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   2f400:	00bffec4 	movi	r2,-5
}
   2f404:	e037883a 	mov	sp,fp
   2f408:	dfc00117 	ldw	ra,4(sp)
   2f40c:	df000017 	ldw	fp,0(sp)
   2f410:	dec00204 	addi	sp,sp,8
   2f414:	f800283a 	ret

0002f418 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   2f418:	defff904 	addi	sp,sp,-28
   2f41c:	dfc00615 	stw	ra,24(sp)
   2f420:	df000515 	stw	fp,20(sp)
   2f424:	df000504 	addi	fp,sp,20
   2f428:	e13ffc15 	stw	r4,-16(fp)
   2f42c:	e17ffb15 	stw	r5,-20(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   2f430:	0007883a 	mov	r3,zero
   2f434:	e0bffc17 	ldw	r2,-16(fp)
   2f438:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   2f43c:	e0bffc17 	ldw	r2,-16(fp)
   2f440:	10800104 	addi	r2,r2,4
   2f444:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
   2f448:	0005303a 	rdctl	r2,status
   2f44c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f450:	e0fffd17 	ldw	r3,-12(fp)
   2f454:	00bfff84 	movi	r2,-2
   2f458:	1884703a 	and	r2,r3,r2
   2f45c:	1001703a 	wrctl	status,r2
  return context;
   2f460:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   2f464:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
   2f468:	00300fc0 	call	300fc <alt_tick>
   2f46c:	e0bfff17 	ldw	r2,-4(fp)
   2f470:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   2f474:	e0bffe17 	ldw	r2,-8(fp)
   2f478:	1001703a 	wrctl	status,r2
}
   2f47c:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
   2f480:	0001883a 	nop
   2f484:	e037883a 	mov	sp,fp
   2f488:	dfc00117 	ldw	ra,4(sp)
   2f48c:	df000017 	ldw	fp,0(sp)
   2f490:	dec00204 	addi	sp,sp,8
   2f494:	f800283a 	ret

0002f498 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   2f498:	defff904 	addi	sp,sp,-28
   2f49c:	dfc00615 	stw	ra,24(sp)
   2f4a0:	df000515 	stw	fp,20(sp)
   2f4a4:	df000504 	addi	fp,sp,20
   2f4a8:	e13ffe15 	stw	r4,-8(fp)
   2f4ac:	e17ffd15 	stw	r5,-12(fp)
   2f4b0:	e1bffc15 	stw	r6,-16(fp)
   2f4b4:	e1fffb15 	stw	r7,-20(fp)
   2f4b8:	e0bffb17 	ldw	r2,-20(fp)
   2f4bc:	e0bfff15 	stw	r2,-4(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   2f4c0:	d0a72c17 	ldw	r2,-25424(gp)
   2f4c4:	1000031e 	bne	r2,zero,2f4d4 <alt_avalon_timer_sc_init+0x3c>
  {
    _alt_tick_rate = nticks;
   2f4c8:	e0bfff17 	ldw	r2,-4(fp)
   2f4cc:	d0a72c15 	stw	r2,-25424(gp)
    return 0;
   2f4d0:	00000106 	br	2f4d8 <alt_avalon_timer_sc_init+0x40>
  }
  else
  {
    return -1;
   2f4d4:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   2f4d8:	e0bffe17 	ldw	r2,-8(fp)
   2f4dc:	10800104 	addi	r2,r2,4
   2f4e0:	00c001c4 	movi	r3,7
   2f4e4:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
   2f4e8:	018000f4 	movhi	r6,3
   2f4ec:	31bd0604 	addi	r6,r6,-3048
   2f4f0:	e17ffe17 	ldw	r5,-8(fp)
   2f4f4:	e13ffc17 	ldw	r4,-16(fp)
   2f4f8:	002de800 	call	2de80 <alt_irq_register>
#endif  
}
   2f4fc:	0001883a 	nop
   2f500:	e037883a 	mov	sp,fp
   2f504:	dfc00117 	ldw	ra,4(sp)
   2f508:	df000017 	ldw	fp,0(sp)
   2f50c:	dec00204 	addi	sp,sp,8
   2f510:	f800283a 	ret

0002f514 <alt_up_accelerometer_spi_open_dev>:

#include "altera_up_avalon_accelerometer_spi.h"
#include "altera_up_avalon_accelerometer_spi_regs.h"

alt_up_accelerometer_spi_dev* alt_up_accelerometer_spi_open_dev(const char* name)
{
   2f514:	defffc04 	addi	sp,sp,-16
   2f518:	dfc00315 	stw	ra,12(sp)
   2f51c:	df000215 	stw	fp,8(sp)
   2f520:	df000204 	addi	fp,sp,8
   2f524:	e13ffe15 	stw	r4,-8(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_accelerometer_spi_dev *dev = (alt_up_accelerometer_spi_dev*)alt_find_dev(name, &alt_dev_list);
   2f528:	d1600a04 	addi	r5,gp,-32728
   2f52c:	e13ffe17 	ldw	r4,-8(fp)
   2f530:	002fbe00 	call	2fbe0 <alt_find_dev>
   2f534:	e0bfff15 	stw	r2,-4(fp)

  return dev;
   2f538:	e0bfff17 	ldw	r2,-4(fp)
}
   2f53c:	e037883a 	mov	sp,fp
   2f540:	dfc00117 	ldw	ra,4(sp)
   2f544:	df000017 	ldw	fp,0(sp)
   2f548:	dec00204 	addi	sp,sp,8
   2f54c:	f800283a 	ret

0002f550 <alt_up_accelerometer_spi_read_address_register>:
 * @param addr -- a pointer to the location where the read address should be stored
 *
 * @return 0 for success 
 **/
int alt_up_accelerometer_spi_read_address_register(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 *addr)
{
   2f550:	defffd04 	addi	sp,sp,-12
   2f554:	df000215 	stw	fp,8(sp)
   2f558:	df000204 	addi	fp,sp,8
   2f55c:	e13fff15 	stw	r4,-4(fp)
   2f560:	e17ffe15 	stw	r5,-8(fp)
	// reads data from the device Address register
	*(addr) = IORD_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base); 
   2f564:	e0bfff17 	ldw	r2,-4(fp)
   2f568:	10800a17 	ldw	r2,40(r2)
   2f56c:	10800023 	ldbuio	r2,0(r2)
   2f570:	10803fcc 	andi	r2,r2,255
   2f574:	1007883a 	mov	r3,r2
   2f578:	e0bffe17 	ldw	r2,-8(fp)
   2f57c:	10c00005 	stb	r3,0(r2)

	return 0;
   2f580:	0005883a 	mov	r2,zero
}
   2f584:	e037883a 	mov	sp,fp
   2f588:	df000017 	ldw	fp,0(sp)
   2f58c:	dec00104 	addi	sp,sp,4
   2f590:	f800283a 	ret

0002f594 <alt_up_accelerometer_spi_read>:
 * @param data -- a pointer to the location where the read data should be stored
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_read(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 *data)
{
   2f594:	defffc04 	addi	sp,sp,-16
   2f598:	df000315 	stw	fp,12(sp)
   2f59c:	df000304 	addi	fp,sp,12
   2f5a0:	e13fff15 	stw	r4,-4(fp)
   2f5a4:	2805883a 	mov	r2,r5
   2f5a8:	e1bffd15 	stw	r6,-12(fp)
   2f5ac:	e0bffe05 	stb	r2,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f5b0:	e0bfff17 	ldw	r2,-4(fp)
   2f5b4:	10800a17 	ldw	r2,40(r2)
   2f5b8:	1007883a 	mov	r3,r2
   2f5bc:	e0bffe03 	ldbu	r2,-8(fp)
   2f5c0:	10800fcc 	andi	r2,r2,63
   2f5c4:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(data) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2f5c8:	e0bfff17 	ldw	r2,-4(fp)
   2f5cc:	10800a17 	ldw	r2,40(r2)
   2f5d0:	10800044 	addi	r2,r2,1
   2f5d4:	10800023 	ldbuio	r2,0(r2)
   2f5d8:	10803fcc 	andi	r2,r2,255
   2f5dc:	1007883a 	mov	r3,r2
   2f5e0:	e0bffd17 	ldw	r2,-12(fp)
   2f5e4:	10c00005 	stb	r3,0(r2)

	return 0;
   2f5e8:	0005883a 	mov	r2,zero
}
   2f5ec:	e037883a 	mov	sp,fp
   2f5f0:	df000017 	ldw	fp,0(sp)
   2f5f4:	dec00104 	addi	sp,sp,4
   2f5f8:	f800283a 	ret

0002f5fc <alt_up_accelerometer_spi_write>:
 * @param data -- the data to be written
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_write(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 data)
{
   2f5fc:	defffc04 	addi	sp,sp,-16
   2f600:	df000315 	stw	fp,12(sp)
   2f604:	df000304 	addi	fp,sp,12
   2f608:	e13fff15 	stw	r4,-4(fp)
   2f60c:	2805883a 	mov	r2,r5
   2f610:	3007883a 	mov	r3,r6
   2f614:	e0bffe05 	stb	r2,-8(fp)
   2f618:	1805883a 	mov	r2,r3
   2f61c:	e0bffd05 	stb	r2,-12(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f620:	e0bfff17 	ldw	r2,-4(fp)
   2f624:	10800a17 	ldw	r2,40(r2)
   2f628:	1007883a 	mov	r3,r2
   2f62c:	e0bffe03 	ldbu	r2,-8(fp)
   2f630:	10800fcc 	andi	r2,r2,63
   2f634:	18800025 	stbio	r2,0(r3)

	// write data to the device Data register
	IOWR_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base, data & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK); 
   2f638:	e0bfff17 	ldw	r2,-4(fp)
   2f63c:	10800a17 	ldw	r2,40(r2)
   2f640:	10800044 	addi	r2,r2,1
   2f644:	1007883a 	mov	r3,r2
   2f648:	e0bffd03 	ldbu	r2,-12(fp)
   2f64c:	18800025 	stbio	r2,0(r3)

	return 0;
   2f650:	0005883a 	mov	r2,zero
}
   2f654:	e037883a 	mov	sp,fp
   2f658:	df000017 	ldw	fp,0(sp)
   2f65c:	dec00104 	addi	sp,sp,4
   2f660:	f800283a 	ret

0002f664 <alt_up_accelerometer_spi_read_x_axis>:
 * @param x_axis -- a pointer to the location where the x axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_x_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *x_axis)
{
   2f664:	defffd04 	addi	sp,sp,-12
   2f668:	df000215 	stw	fp,8(sp)
   2f66c:	df000204 	addi	fp,sp,8
   2f670:	e13fff15 	stw	r4,-4(fp)
   2f674:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f678:	e0bfff17 	ldw	r2,-4(fp)
   2f67c:	10800a17 	ldw	r2,40(r2)
   2f680:	1007883a 	mov	r3,r2
   2f684:	00800c84 	movi	r2,50
   2f688:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2f68c:	e0bfff17 	ldw	r2,-4(fp)
   2f690:	10800a17 	ldw	r2,40(r2)
   2f694:	10800044 	addi	r2,r2,1
   2f698:	10800023 	ldbuio	r2,0(r2)
   2f69c:	10803fcc 	andi	r2,r2,255
   2f6a0:	10ffffcc 	andi	r3,r2,65535
   2f6a4:	e0bffe17 	ldw	r2,-8(fp)
   2f6a8:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f6ac:	e0bfff17 	ldw	r2,-4(fp)
   2f6b0:	10800a17 	ldw	r2,40(r2)
   2f6b4:	1007883a 	mov	r3,r2
   2f6b8:	00800cc4 	movi	r2,51
   2f6bc:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   2f6c0:	e0bfff17 	ldw	r2,-4(fp)
   2f6c4:	10800a17 	ldw	r2,40(r2)
   2f6c8:	10800044 	addi	r2,r2,1
   2f6cc:	10800023 	ldbuio	r2,0(r2)
   2f6d0:	10803fcc 	andi	r2,r2,255
   2f6d4:	1006923a 	slli	r3,r2,8
   2f6d8:	00804034 	movhi	r2,256
   2f6dc:	10bfc004 	addi	r2,r2,-256
   2f6e0:	1884703a 	and	r2,r3,r2
   2f6e4:	e0fffe17 	ldw	r3,-8(fp)
   2f6e8:	18c00017 	ldw	r3,0(r3)
   2f6ec:	10c5883a 	add	r2,r2,r3
   2f6f0:	1007883a 	mov	r3,r2
   2f6f4:	e0bffe17 	ldw	r2,-8(fp)
   2f6f8:	10c00015 	stw	r3,0(r2)

	if (*(x_axis) & 0x00008000)
   2f6fc:	e0bffe17 	ldw	r2,-8(fp)
   2f700:	10800017 	ldw	r2,0(r2)
   2f704:	10a0000c 	andi	r2,r2,32768
   2f708:	10000626 	beq	r2,zero,2f724 <alt_up_accelerometer_spi_read_x_axis+0xc0>
	{
		*(x_axis) |= 0xFFFF0000;
   2f70c:	e0bffe17 	ldw	r2,-8(fp)
   2f710:	10800017 	ldw	r2,0(r2)
   2f714:	10bffff4 	orhi	r2,r2,65535
   2f718:	1007883a 	mov	r3,r2
   2f71c:	e0bffe17 	ldw	r2,-8(fp)
   2f720:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   2f724:	0005883a 	mov	r2,zero
}
   2f728:	e037883a 	mov	sp,fp
   2f72c:	df000017 	ldw	fp,0(sp)
   2f730:	dec00104 	addi	sp,sp,4
   2f734:	f800283a 	ret

0002f738 <alt_up_accelerometer_spi_read_y_axis>:
 * @param y_axis -- a pointer to the location where the y axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_y_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *y_axis)
{
   2f738:	defffd04 	addi	sp,sp,-12
   2f73c:	df000215 	stw	fp,8(sp)
   2f740:	df000204 	addi	fp,sp,8
   2f744:	e13fff15 	stw	r4,-4(fp)
   2f748:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f74c:	e0bfff17 	ldw	r2,-4(fp)
   2f750:	10800a17 	ldw	r2,40(r2)
   2f754:	1007883a 	mov	r3,r2
   2f758:	00800d04 	movi	r2,52
   2f75c:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2f760:	e0bfff17 	ldw	r2,-4(fp)
   2f764:	10800a17 	ldw	r2,40(r2)
   2f768:	10800044 	addi	r2,r2,1
   2f76c:	10800023 	ldbuio	r2,0(r2)
   2f770:	10803fcc 	andi	r2,r2,255
   2f774:	10ffffcc 	andi	r3,r2,65535
   2f778:	e0bffe17 	ldw	r2,-8(fp)
   2f77c:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f780:	e0bfff17 	ldw	r2,-4(fp)
   2f784:	10800a17 	ldw	r2,40(r2)
   2f788:	1007883a 	mov	r3,r2
   2f78c:	00800d44 	movi	r2,53
   2f790:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   2f794:	e0bfff17 	ldw	r2,-4(fp)
   2f798:	10800a17 	ldw	r2,40(r2)
   2f79c:	10800044 	addi	r2,r2,1
   2f7a0:	10800023 	ldbuio	r2,0(r2)
   2f7a4:	10803fcc 	andi	r2,r2,255
   2f7a8:	1006923a 	slli	r3,r2,8
   2f7ac:	00804034 	movhi	r2,256
   2f7b0:	10bfc004 	addi	r2,r2,-256
   2f7b4:	1884703a 	and	r2,r3,r2
   2f7b8:	e0fffe17 	ldw	r3,-8(fp)
   2f7bc:	18c00017 	ldw	r3,0(r3)
   2f7c0:	10c5883a 	add	r2,r2,r3
   2f7c4:	1007883a 	mov	r3,r2
   2f7c8:	e0bffe17 	ldw	r2,-8(fp)
   2f7cc:	10c00015 	stw	r3,0(r2)

	if (*(y_axis) & 0x00008000)
   2f7d0:	e0bffe17 	ldw	r2,-8(fp)
   2f7d4:	10800017 	ldw	r2,0(r2)
   2f7d8:	10a0000c 	andi	r2,r2,32768
   2f7dc:	10000626 	beq	r2,zero,2f7f8 <alt_up_accelerometer_spi_read_y_axis+0xc0>
	{
		*(y_axis) |= 0xFFFF0000;
   2f7e0:	e0bffe17 	ldw	r2,-8(fp)
   2f7e4:	10800017 	ldw	r2,0(r2)
   2f7e8:	10bffff4 	orhi	r2,r2,65535
   2f7ec:	1007883a 	mov	r3,r2
   2f7f0:	e0bffe17 	ldw	r2,-8(fp)
   2f7f4:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   2f7f8:	0005883a 	mov	r2,zero
}
   2f7fc:	e037883a 	mov	sp,fp
   2f800:	df000017 	ldw	fp,0(sp)
   2f804:	dec00104 	addi	sp,sp,4
   2f808:	f800283a 	ret

0002f80c <alt_up_accelerometer_spi_read_z_axis>:
 * @param z_axis -- a pointer to the location where the z axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_z_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *z_axis)
{
   2f80c:	defffd04 	addi	sp,sp,-12
   2f810:	df000215 	stw	fp,8(sp)
   2f814:	df000204 	addi	fp,sp,8
   2f818:	e13fff15 	stw	r4,-4(fp)
   2f81c:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f820:	e0bfff17 	ldw	r2,-4(fp)
   2f824:	10800a17 	ldw	r2,40(r2)
   2f828:	1007883a 	mov	r3,r2
   2f82c:	00800d84 	movi	r2,54
   2f830:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2f834:	e0bfff17 	ldw	r2,-4(fp)
   2f838:	10800a17 	ldw	r2,40(r2)
   2f83c:	10800044 	addi	r2,r2,1
   2f840:	10800023 	ldbuio	r2,0(r2)
   2f844:	10803fcc 	andi	r2,r2,255
   2f848:	10ffffcc 	andi	r3,r2,65535
   2f84c:	e0bffe17 	ldw	r2,-8(fp)
   2f850:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f854:	e0bfff17 	ldw	r2,-4(fp)
   2f858:	10800a17 	ldw	r2,40(r2)
   2f85c:	1007883a 	mov	r3,r2
   2f860:	00800dc4 	movi	r2,55
   2f864:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   2f868:	e0bfff17 	ldw	r2,-4(fp)
   2f86c:	10800a17 	ldw	r2,40(r2)
   2f870:	10800044 	addi	r2,r2,1
   2f874:	10800023 	ldbuio	r2,0(r2)
   2f878:	10803fcc 	andi	r2,r2,255
   2f87c:	1006923a 	slli	r3,r2,8
   2f880:	00804034 	movhi	r2,256
   2f884:	10bfc004 	addi	r2,r2,-256
   2f888:	1884703a 	and	r2,r3,r2
   2f88c:	e0fffe17 	ldw	r3,-8(fp)
   2f890:	18c00017 	ldw	r3,0(r3)
   2f894:	10c5883a 	add	r2,r2,r3
   2f898:	1007883a 	mov	r3,r2
   2f89c:	e0bffe17 	ldw	r2,-8(fp)
   2f8a0:	10c00015 	stw	r3,0(r2)

	if (*(z_axis) & 0x00008000)
   2f8a4:	e0bffe17 	ldw	r2,-8(fp)
   2f8a8:	10800017 	ldw	r2,0(r2)
   2f8ac:	10a0000c 	andi	r2,r2,32768
   2f8b0:	10000626 	beq	r2,zero,2f8cc <alt_up_accelerometer_spi_read_z_axis+0xc0>
	{
		*(z_axis) |= 0xFFFF0000;
   2f8b4:	e0bffe17 	ldw	r2,-8(fp)
   2f8b8:	10800017 	ldw	r2,0(r2)
   2f8bc:	10bffff4 	orhi	r2,r2,65535
   2f8c0:	1007883a 	mov	r3,r2
   2f8c4:	e0bffe17 	ldw	r2,-8(fp)
   2f8c8:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   2f8cc:	0005883a 	mov	r2,zero
}
   2f8d0:	e037883a 	mov	sp,fp
   2f8d4:	df000017 	ldw	fp,0(sp)
   2f8d8:	dec00104 	addi	sp,sp,4
   2f8dc:	f800283a 	ret

0002f8e0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   2f8e0:	defff504 	addi	sp,sp,-44
   2f8e4:	df000a15 	stw	fp,40(sp)
   2f8e8:	df000a04 	addi	fp,sp,40
   2f8ec:	e13ff915 	stw	r4,-28(fp)
   2f8f0:	e17ff815 	stw	r5,-32(fp)
   2f8f4:	e1bff715 	stw	r6,-36(fp)
   2f8f8:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   2f8fc:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
   2f900:	d0a72c17 	ldw	r2,-25424(gp)
  
  if (alt_ticks_per_second ())
   2f904:	10003e26 	beq	r2,zero,2fa00 <alt_alarm_start+0x120>
  {
    if (alarm)
   2f908:	e0bff917 	ldw	r2,-28(fp)
   2f90c:	10003a26 	beq	r2,zero,2f9f8 <alt_alarm_start+0x118>
    {
      alarm->callback = callback;
   2f910:	e0bff917 	ldw	r2,-28(fp)
   2f914:	e0fff717 	ldw	r3,-36(fp)
   2f918:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   2f91c:	e0bff917 	ldw	r2,-28(fp)
   2f920:	e0fff617 	ldw	r3,-40(fp)
   2f924:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
   2f928:	0005303a 	rdctl	r2,status
   2f92c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f930:	e0fffd17 	ldw	r3,-12(fp)
   2f934:	00bfff84 	movi	r2,-2
   2f938:	1884703a 	and	r2,r3,r2
   2f93c:	1001703a 	wrctl	status,r2
  return context;
   2f940:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
   2f944:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   2f948:	d0a72d17 	ldw	r2,-25420(gp)
      
      current_nticks = alt_nticks();
   2f94c:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   2f950:	e0fff817 	ldw	r3,-32(fp)
   2f954:	e0bfff17 	ldw	r2,-4(fp)
   2f958:	1885883a 	add	r2,r3,r2
   2f95c:	10c00044 	addi	r3,r2,1
   2f960:	e0bff917 	ldw	r2,-28(fp)
   2f964:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   2f968:	e0bff917 	ldw	r2,-28(fp)
   2f96c:	10c00217 	ldw	r3,8(r2)
   2f970:	e0bfff17 	ldw	r2,-4(fp)
   2f974:	1880042e 	bgeu	r3,r2,2f988 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   2f978:	e0bff917 	ldw	r2,-28(fp)
   2f97c:	00c00044 	movi	r3,1
   2f980:	10c00405 	stb	r3,16(r2)
   2f984:	00000206 	br	2f990 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   2f988:	e0bff917 	ldw	r2,-28(fp)
   2f98c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   2f990:	e0bff917 	ldw	r2,-28(fp)
   2f994:	d0e01004 	addi	r3,gp,-32704
   2f998:	e0fffb15 	stw	r3,-20(fp)
   2f99c:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2f9a0:	e0bffa17 	ldw	r2,-24(fp)
   2f9a4:	e0fffb17 	ldw	r3,-20(fp)
   2f9a8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2f9ac:	e0bffb17 	ldw	r2,-20(fp)
   2f9b0:	10c00017 	ldw	r3,0(r2)
   2f9b4:	e0bffa17 	ldw	r2,-24(fp)
   2f9b8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2f9bc:	e0bffb17 	ldw	r2,-20(fp)
   2f9c0:	10800017 	ldw	r2,0(r2)
   2f9c4:	e0fffa17 	ldw	r3,-24(fp)
   2f9c8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2f9cc:	e0bffb17 	ldw	r2,-20(fp)
   2f9d0:	e0fffa17 	ldw	r3,-24(fp)
   2f9d4:	10c00015 	stw	r3,0(r2)
}
   2f9d8:	0001883a 	nop
   2f9dc:	e0bffe17 	ldw	r2,-8(fp)
   2f9e0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   2f9e4:	e0bffc17 	ldw	r2,-16(fp)
   2f9e8:	1001703a 	wrctl	status,r2
}
   2f9ec:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
   2f9f0:	0005883a 	mov	r2,zero
   2f9f4:	00000306 	br	2fa04 <alt_alarm_start+0x124>
    }
    else
    {
      return -EINVAL;
   2f9f8:	00bffa84 	movi	r2,-22
   2f9fc:	00000106 	br	2fa04 <alt_alarm_start+0x124>
    }
  }
  else
  {
    return -ENOTSUP;
   2fa00:	00bfde84 	movi	r2,-134
  }
}
   2fa04:	e037883a 	mov	sp,fp
   2fa08:	df000017 	ldw	fp,0(sp)
   2fa0c:	dec00104 	addi	sp,sp,4
   2fa10:	f800283a 	ret

0002fa14 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   2fa14:	deffff04 	addi	sp,sp,-4
   2fa18:	df000015 	stw	fp,0(sp)
   2fa1c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   2fa20:	0001883a 	nop
   2fa24:	e037883a 	mov	sp,fp
   2fa28:	df000017 	ldw	fp,0(sp)
   2fa2c:	dec00104 	addi	sp,sp,4
   2fa30:	f800283a 	ret

0002fa34 <alt_get_errno>:
{
   2fa34:	defffe04 	addi	sp,sp,-8
   2fa38:	dfc00115 	stw	ra,4(sp)
   2fa3c:	df000015 	stw	fp,0(sp)
   2fa40:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2fa44:	d0a00d17 	ldw	r2,-32716(gp)
   2fa48:	10000326 	beq	r2,zero,2fa58 <alt_get_errno+0x24>
   2fa4c:	d0a00d17 	ldw	r2,-32716(gp)
   2fa50:	103ee83a 	callr	r2
   2fa54:	00000106 	br	2fa5c <alt_get_errno+0x28>
   2fa58:	d0a72604 	addi	r2,gp,-25448
}
   2fa5c:	e037883a 	mov	sp,fp
   2fa60:	dfc00117 	ldw	ra,4(sp)
   2fa64:	df000017 	ldw	fp,0(sp)
   2fa68:	dec00204 	addi	sp,sp,8
   2fa6c:	f800283a 	ret

0002fa70 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   2fa70:	defffa04 	addi	sp,sp,-24
   2fa74:	dfc00515 	stw	ra,20(sp)
   2fa78:	df000415 	stw	fp,16(sp)
   2fa7c:	df000404 	addi	fp,sp,16
   2fa80:	e13ffd15 	stw	r4,-12(fp)
   2fa84:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   2fa88:	e0bffd17 	ldw	r2,-12(fp)
   2fa8c:	10000326 	beq	r2,zero,2fa9c <alt_dev_llist_insert+0x2c>
   2fa90:	e0bffd17 	ldw	r2,-12(fp)
   2fa94:	10800217 	ldw	r2,8(r2)
   2fa98:	1000061e 	bne	r2,zero,2fab4 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   2fa9c:	002fa340 	call	2fa34 <alt_get_errno>
   2faa0:	1007883a 	mov	r3,r2
   2faa4:	00800584 	movi	r2,22
   2faa8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   2faac:	00bffa84 	movi	r2,-22
   2fab0:	00001406 	br	2fb04 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   2fab4:	e0bffd17 	ldw	r2,-12(fp)
   2fab8:	e0fffc17 	ldw	r3,-16(fp)
   2fabc:	e0ffff15 	stw	r3,-4(fp)
   2fac0:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
   2fac4:	e0bffe17 	ldw	r2,-8(fp)
   2fac8:	e0ffff17 	ldw	r3,-4(fp)
   2facc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2fad0:	e0bfff17 	ldw	r2,-4(fp)
   2fad4:	10c00017 	ldw	r3,0(r2)
   2fad8:	e0bffe17 	ldw	r2,-8(fp)
   2fadc:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
   2fae0:	e0bfff17 	ldw	r2,-4(fp)
   2fae4:	10800017 	ldw	r2,0(r2)
   2fae8:	e0fffe17 	ldw	r3,-8(fp)
   2faec:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2faf0:	e0bfff17 	ldw	r2,-4(fp)
   2faf4:	e0fffe17 	ldw	r3,-8(fp)
   2faf8:	10c00015 	stw	r3,0(r2)
}
   2fafc:	0001883a 	nop

  return 0;  
   2fb00:	0005883a 	mov	r2,zero
}
   2fb04:	e037883a 	mov	sp,fp
   2fb08:	dfc00117 	ldw	ra,4(sp)
   2fb0c:	df000017 	ldw	fp,0(sp)
   2fb10:	dec00204 	addi	sp,sp,8
   2fb14:	f800283a 	ret

0002fb18 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   2fb18:	defffd04 	addi	sp,sp,-12
   2fb1c:	dfc00215 	stw	ra,8(sp)
   2fb20:	df000115 	stw	fp,4(sp)
   2fb24:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2fb28:	008000f4 	movhi	r2,3
   2fb2c:	1081bb04 	addi	r2,r2,1772
   2fb30:	e0bfff15 	stw	r2,-4(fp)
   2fb34:	00000606 	br	2fb50 <_do_ctors+0x38>
        (*ctor) (); 
   2fb38:	e0bfff17 	ldw	r2,-4(fp)
   2fb3c:	10800017 	ldw	r2,0(r2)
   2fb40:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2fb44:	e0bfff17 	ldw	r2,-4(fp)
   2fb48:	10bfff04 	addi	r2,r2,-4
   2fb4c:	e0bfff15 	stw	r2,-4(fp)
   2fb50:	e0ffff17 	ldw	r3,-4(fp)
   2fb54:	008000f4 	movhi	r2,3
   2fb58:	1081bc04 	addi	r2,r2,1776
   2fb5c:	18bff62e 	bgeu	r3,r2,2fb38 <_do_ctors+0x20>
}
   2fb60:	0001883a 	nop
   2fb64:	0001883a 	nop
   2fb68:	e037883a 	mov	sp,fp
   2fb6c:	dfc00117 	ldw	ra,4(sp)
   2fb70:	df000017 	ldw	fp,0(sp)
   2fb74:	dec00204 	addi	sp,sp,8
   2fb78:	f800283a 	ret

0002fb7c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   2fb7c:	defffd04 	addi	sp,sp,-12
   2fb80:	dfc00215 	stw	ra,8(sp)
   2fb84:	df000115 	stw	fp,4(sp)
   2fb88:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2fb8c:	008000f4 	movhi	r2,3
   2fb90:	1081bb04 	addi	r2,r2,1772
   2fb94:	e0bfff15 	stw	r2,-4(fp)
   2fb98:	00000606 	br	2fbb4 <_do_dtors+0x38>
        (*dtor) (); 
   2fb9c:	e0bfff17 	ldw	r2,-4(fp)
   2fba0:	10800017 	ldw	r2,0(r2)
   2fba4:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2fba8:	e0bfff17 	ldw	r2,-4(fp)
   2fbac:	10bfff04 	addi	r2,r2,-4
   2fbb0:	e0bfff15 	stw	r2,-4(fp)
   2fbb4:	e0ffff17 	ldw	r3,-4(fp)
   2fbb8:	008000f4 	movhi	r2,3
   2fbbc:	1081bc04 	addi	r2,r2,1776
   2fbc0:	18bff62e 	bgeu	r3,r2,2fb9c <_do_dtors+0x20>
}
   2fbc4:	0001883a 	nop
   2fbc8:	0001883a 	nop
   2fbcc:	e037883a 	mov	sp,fp
   2fbd0:	dfc00117 	ldw	ra,4(sp)
   2fbd4:	df000017 	ldw	fp,0(sp)
   2fbd8:	dec00204 	addi	sp,sp,8
   2fbdc:	f800283a 	ret

0002fbe0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   2fbe0:	defffa04 	addi	sp,sp,-24
   2fbe4:	dfc00515 	stw	ra,20(sp)
   2fbe8:	df000415 	stw	fp,16(sp)
   2fbec:	df000404 	addi	fp,sp,16
   2fbf0:	e13ffd15 	stw	r4,-12(fp)
   2fbf4:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
   2fbf8:	e0bffc17 	ldw	r2,-16(fp)
   2fbfc:	10800017 	ldw	r2,0(r2)
   2fc00:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   2fc04:	e13ffd17 	ldw	r4,-12(fp)
   2fc08:	00274680 	call	27468 <strlen>
   2fc0c:	10800044 	addi	r2,r2,1
   2fc10:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2fc14:	00000d06 	br	2fc4c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   2fc18:	e0bfff17 	ldw	r2,-4(fp)
   2fc1c:	10800217 	ldw	r2,8(r2)
   2fc20:	e0fffe17 	ldw	r3,-8(fp)
   2fc24:	180d883a 	mov	r6,r3
   2fc28:	e17ffd17 	ldw	r5,-12(fp)
   2fc2c:	1009883a 	mov	r4,r2
   2fc30:	00304c80 	call	304c8 <memcmp>
   2fc34:	1000021e 	bne	r2,zero,2fc40 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   2fc38:	e0bfff17 	ldw	r2,-4(fp)
   2fc3c:	00000706 	br	2fc5c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   2fc40:	e0bfff17 	ldw	r2,-4(fp)
   2fc44:	10800017 	ldw	r2,0(r2)
   2fc48:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
   2fc4c:	e0ffff17 	ldw	r3,-4(fp)
   2fc50:	e0bffc17 	ldw	r2,-16(fp)
   2fc54:	18bff01e 	bne	r3,r2,2fc18 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
   2fc58:	0005883a 	mov	r2,zero
}
   2fc5c:	e037883a 	mov	sp,fp
   2fc60:	dfc00117 	ldw	ra,4(sp)
   2fc64:	df000017 	ldw	fp,0(sp)
   2fc68:	dec00204 	addi	sp,sp,8
   2fc6c:	f800283a 	ret

0002fc70 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   2fc70:	deffff04 	addi	sp,sp,-4
   2fc74:	df000015 	stw	fp,0(sp)
   2fc78:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   2fc7c:	0001883a 	nop
   2fc80:	e037883a 	mov	sp,fp
   2fc84:	df000017 	ldw	fp,0(sp)
   2fc88:	dec00104 	addi	sp,sp,4
   2fc8c:	f800283a 	ret

0002fc90 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   2fc90:	defff904 	addi	sp,sp,-28
   2fc94:	dfc00615 	stw	ra,24(sp)
   2fc98:	df000515 	stw	fp,20(sp)
   2fc9c:	df000504 	addi	fp,sp,20
   2fca0:	e13ffe15 	stw	r4,-8(fp)
   2fca4:	e17ffd15 	stw	r5,-12(fp)
   2fca8:	e1bffc15 	stw	r6,-16(fp)
   2fcac:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
   2fcb0:	e1bffb17 	ldw	r6,-20(fp)
   2fcb4:	e17ffc17 	ldw	r5,-16(fp)
   2fcb8:	e13ffd17 	ldw	r4,-12(fp)
   2fcbc:	002fef80 	call	2fef8 <open>
   2fcc0:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
   2fcc4:	e0bfff17 	ldw	r2,-4(fp)
   2fcc8:	10002016 	blt	r2,zero,2fd4c <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
   2fccc:	e0ffff17 	ldw	r3,-4(fp)
   2fcd0:	1805883a 	mov	r2,r3
   2fcd4:	1085883a 	add	r2,r2,r2
   2fcd8:	10c5883a 	add	r2,r2,r3
   2fcdc:	100490ba 	slli	r2,r2,2
   2fce0:	00c000f4 	movhi	r3,3
   2fce4:	10c7883a 	add	r3,r2,r3
   2fce8:	18c5d617 	ldw	r3,5976(r3)
   2fcec:	e0bffe17 	ldw	r2,-8(fp)
   2fcf0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   2fcf4:	e0ffff17 	ldw	r3,-4(fp)
   2fcf8:	1805883a 	mov	r2,r3
   2fcfc:	1085883a 	add	r2,r2,r2
   2fd00:	10c5883a 	add	r2,r2,r3
   2fd04:	100490ba 	slli	r2,r2,2
   2fd08:	00c000f4 	movhi	r3,3
   2fd0c:	10c7883a 	add	r3,r2,r3
   2fd10:	18c5d717 	ldw	r3,5980(r3)
   2fd14:	e0bffe17 	ldw	r2,-8(fp)
   2fd18:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   2fd1c:	e0ffff17 	ldw	r3,-4(fp)
   2fd20:	1805883a 	mov	r2,r3
   2fd24:	1085883a 	add	r2,r2,r2
   2fd28:	10c5883a 	add	r2,r2,r3
   2fd2c:	100490ba 	slli	r2,r2,2
   2fd30:	00c000f4 	movhi	r3,3
   2fd34:	10c7883a 	add	r3,r2,r3
   2fd38:	18c5d817 	ldw	r3,5984(r3)
   2fd3c:	e0bffe17 	ldw	r2,-8(fp)
   2fd40:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   2fd44:	e13fff17 	ldw	r4,-4(fp)
   2fd48:	002e6640 	call	2e664 <alt_release_fd>
  }
} 
   2fd4c:	0001883a 	nop
   2fd50:	e037883a 	mov	sp,fp
   2fd54:	dfc00117 	ldw	ra,4(sp)
   2fd58:	df000017 	ldw	fp,0(sp)
   2fd5c:	dec00204 	addi	sp,sp,8
   2fd60:	f800283a 	ret

0002fd64 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   2fd64:	defffb04 	addi	sp,sp,-20
   2fd68:	dfc00415 	stw	ra,16(sp)
   2fd6c:	df000315 	stw	fp,12(sp)
   2fd70:	df000304 	addi	fp,sp,12
   2fd74:	e13fff15 	stw	r4,-4(fp)
   2fd78:	e17ffe15 	stw	r5,-8(fp)
   2fd7c:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   2fd80:	01c07fc4 	movi	r7,511
   2fd84:	01800044 	movi	r6,1
   2fd88:	e17fff17 	ldw	r5,-4(fp)
   2fd8c:	010000f4 	movhi	r4,3
   2fd90:	2105d904 	addi	r4,r4,5988
   2fd94:	002fc900 	call	2fc90 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   2fd98:	01c07fc4 	movi	r7,511
   2fd9c:	000d883a 	mov	r6,zero
   2fda0:	e17ffe17 	ldw	r5,-8(fp)
   2fda4:	010000f4 	movhi	r4,3
   2fda8:	2105d604 	addi	r4,r4,5976
   2fdac:	002fc900 	call	2fc90 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   2fdb0:	01c07fc4 	movi	r7,511
   2fdb4:	01800044 	movi	r6,1
   2fdb8:	e17ffd17 	ldw	r5,-12(fp)
   2fdbc:	010000f4 	movhi	r4,3
   2fdc0:	2105dc04 	addi	r4,r4,6000
   2fdc4:	002fc900 	call	2fc90 <alt_open_fd>
}  
   2fdc8:	0001883a 	nop
   2fdcc:	e037883a 	mov	sp,fp
   2fdd0:	dfc00117 	ldw	ra,4(sp)
   2fdd4:	df000017 	ldw	fp,0(sp)
   2fdd8:	dec00204 	addi	sp,sp,8
   2fddc:	f800283a 	ret

0002fde0 <alt_get_errno>:
{
   2fde0:	defffe04 	addi	sp,sp,-8
   2fde4:	dfc00115 	stw	ra,4(sp)
   2fde8:	df000015 	stw	fp,0(sp)
   2fdec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2fdf0:	d0a00d17 	ldw	r2,-32716(gp)
   2fdf4:	10000326 	beq	r2,zero,2fe04 <alt_get_errno+0x24>
   2fdf8:	d0a00d17 	ldw	r2,-32716(gp)
   2fdfc:	103ee83a 	callr	r2
   2fe00:	00000106 	br	2fe08 <alt_get_errno+0x28>
   2fe04:	d0a72604 	addi	r2,gp,-25448
}
   2fe08:	e037883a 	mov	sp,fp
   2fe0c:	dfc00117 	ldw	ra,4(sp)
   2fe10:	df000017 	ldw	fp,0(sp)
   2fe14:	dec00204 	addi	sp,sp,8
   2fe18:	f800283a 	ret

0002fe1c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   2fe1c:	defffd04 	addi	sp,sp,-12
   2fe20:	df000215 	stw	fp,8(sp)
   2fe24:	df000204 	addi	fp,sp,8
   2fe28:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   2fe2c:	e0bffe17 	ldw	r2,-8(fp)
   2fe30:	10800217 	ldw	r2,8(r2)
   2fe34:	10d00034 	orhi	r3,r2,16384
   2fe38:	e0bffe17 	ldw	r2,-8(fp)
   2fe3c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2fe40:	e03fff15 	stw	zero,-4(fp)
   2fe44:	00002306 	br	2fed4 <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2fe48:	e0ffff17 	ldw	r3,-4(fp)
   2fe4c:	1805883a 	mov	r2,r3
   2fe50:	1085883a 	add	r2,r2,r2
   2fe54:	10c5883a 	add	r2,r2,r3
   2fe58:	100490ba 	slli	r2,r2,2
   2fe5c:	00c000f4 	movhi	r3,3
   2fe60:	10c7883a 	add	r3,r2,r3
   2fe64:	18c5d617 	ldw	r3,5976(r3)
   2fe68:	e0bffe17 	ldw	r2,-8(fp)
   2fe6c:	10800017 	ldw	r2,0(r2)
   2fe70:	1880151e 	bne	r3,r2,2fec8 <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2fe74:	e0ffff17 	ldw	r3,-4(fp)
   2fe78:	1805883a 	mov	r2,r3
   2fe7c:	1085883a 	add	r2,r2,r2
   2fe80:	10c5883a 	add	r2,r2,r3
   2fe84:	100490ba 	slli	r2,r2,2
   2fe88:	00c000f4 	movhi	r3,3
   2fe8c:	10c7883a 	add	r3,r2,r3
   2fe90:	1885d817 	ldw	r2,5984(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
   2fe94:	10000c0e 	bge	r2,zero,2fec8 <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
   2fe98:	e0ffff17 	ldw	r3,-4(fp)
   2fe9c:	1805883a 	mov	r2,r3
   2fea0:	1085883a 	add	r2,r2,r2
   2fea4:	10c5883a 	add	r2,r2,r3
   2fea8:	100490ba 	slli	r2,r2,2
   2feac:	00c000f4 	movhi	r3,3
   2feb0:	18c5d604 	addi	r3,r3,5976
   2feb4:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2feb8:	e0fffe17 	ldw	r3,-8(fp)
   2febc:	18800226 	beq	r3,r2,2fec8 <alt_file_locked+0xac>
    {
      return -EACCES;
   2fec0:	00bffcc4 	movi	r2,-13
   2fec4:	00000806 	br	2fee8 <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
   2fec8:	e0bfff17 	ldw	r2,-4(fp)
   2fecc:	10800044 	addi	r2,r2,1
   2fed0:	e0bfff15 	stw	r2,-4(fp)
   2fed4:	d0a00c17 	ldw	r2,-32720(gp)
   2fed8:	1007883a 	mov	r3,r2
   2fedc:	e0bfff17 	ldw	r2,-4(fp)
   2fee0:	18bfd92e 	bgeu	r3,r2,2fe48 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   2fee4:	0005883a 	mov	r2,zero
}
   2fee8:	e037883a 	mov	sp,fp
   2feec:	df000017 	ldw	fp,0(sp)
   2fef0:	dec00104 	addi	sp,sp,4
   2fef4:	f800283a 	ret

0002fef8 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   2fef8:	defff604 	addi	sp,sp,-40
   2fefc:	dfc00915 	stw	ra,36(sp)
   2ff00:	df000815 	stw	fp,32(sp)
   2ff04:	df000804 	addi	fp,sp,32
   2ff08:	e13ffa15 	stw	r4,-24(fp)
   2ff0c:	e17ff915 	stw	r5,-28(fp)
   2ff10:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   2ff14:	00bfffc4 	movi	r2,-1
   2ff18:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
   2ff1c:	00bffb44 	movi	r2,-19
   2ff20:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
   2ff24:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   2ff28:	d1600a04 	addi	r5,gp,-32728
   2ff2c:	e13ffa17 	ldw	r4,-24(fp)
   2ff30:	002fbe00 	call	2fbe0 <alt_find_dev>
   2ff34:	e0bfff15 	stw	r2,-4(fp)
   2ff38:	e0bfff17 	ldw	r2,-4(fp)
   2ff3c:	1000051e 	bne	r2,zero,2ff54 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   2ff40:	e13ffa17 	ldw	r4,-24(fp)
   2ff44:	00302280 	call	30228 <alt_find_file>
   2ff48:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
   2ff4c:	00800044 	movi	r2,1
   2ff50:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   2ff54:	e0bfff17 	ldw	r2,-4(fp)
   2ff58:	10002c26 	beq	r2,zero,3000c <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
   2ff5c:	e13fff17 	ldw	r4,-4(fp)
   2ff60:	00303300 	call	30330 <alt_get_fd>
   2ff64:	e0bffe15 	stw	r2,-8(fp)
   2ff68:	e0bffe17 	ldw	r2,-8(fp)
   2ff6c:	1000030e 	bge	r2,zero,2ff7c <open+0x84>
    {
      status = index;
   2ff70:	e0bffe17 	ldw	r2,-8(fp)
   2ff74:	e0bffd15 	stw	r2,-12(fp)
   2ff78:	00002606 	br	30014 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
   2ff7c:	e0fffe17 	ldw	r3,-8(fp)
   2ff80:	1805883a 	mov	r2,r3
   2ff84:	1085883a 	add	r2,r2,r2
   2ff88:	10c5883a 	add	r2,r2,r3
   2ff8c:	100490ba 	slli	r2,r2,2
   2ff90:	00c000f4 	movhi	r3,3
   2ff94:	18c5d604 	addi	r3,r3,5976
   2ff98:	10c5883a 	add	r2,r2,r3
   2ff9c:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   2ffa0:	e0fff917 	ldw	r3,-28(fp)
   2ffa4:	00900034 	movhi	r2,16384
   2ffa8:	10bfffc4 	addi	r2,r2,-1
   2ffac:	1886703a 	and	r3,r3,r2
   2ffb0:	e0bffb17 	ldw	r2,-20(fp)
   2ffb4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   2ffb8:	e0bffc17 	ldw	r2,-16(fp)
   2ffbc:	1000051e 	bne	r2,zero,2ffd4 <open+0xdc>
   2ffc0:	e13ffb17 	ldw	r4,-20(fp)
   2ffc4:	002fe1c0 	call	2fe1c <alt_file_locked>
   2ffc8:	e0bffd15 	stw	r2,-12(fp)
   2ffcc:	e0bffd17 	ldw	r2,-12(fp)
   2ffd0:	10001016 	blt	r2,zero,30014 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   2ffd4:	e0bfff17 	ldw	r2,-4(fp)
   2ffd8:	10800317 	ldw	r2,12(r2)
   2ffdc:	10000826 	beq	r2,zero,30000 <open+0x108>
   2ffe0:	e0bfff17 	ldw	r2,-4(fp)
   2ffe4:	10800317 	ldw	r2,12(r2)
   2ffe8:	e1fff817 	ldw	r7,-32(fp)
   2ffec:	e1bff917 	ldw	r6,-28(fp)
   2fff0:	e17ffa17 	ldw	r5,-24(fp)
   2fff4:	e13ffb17 	ldw	r4,-20(fp)
   2fff8:	103ee83a 	callr	r2
   2fffc:	00000106 	br	30004 <open+0x10c>
   30000:	0005883a 	mov	r2,zero
   30004:	e0bffd15 	stw	r2,-12(fp)
   30008:	00000206 	br	30014 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
   3000c:	00bffb44 	movi	r2,-19
   30010:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   30014:	e0bffd17 	ldw	r2,-12(fp)
   30018:	1000090e 	bge	r2,zero,30040 <open+0x148>
  {
    alt_release_fd (index);  
   3001c:	e13ffe17 	ldw	r4,-8(fp)
   30020:	002e6640 	call	2e664 <alt_release_fd>
    ALT_ERRNO = -status;
   30024:	002fde00 	call	2fde0 <alt_get_errno>
   30028:	1007883a 	mov	r3,r2
   3002c:	e0bffd17 	ldw	r2,-12(fp)
   30030:	0085c83a 	sub	r2,zero,r2
   30034:	18800015 	stw	r2,0(r3)
    return -1;
   30038:	00bfffc4 	movi	r2,-1
   3003c:	00000106 	br	30044 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
   30040:	e0bffe17 	ldw	r2,-8(fp)
}
   30044:	e037883a 	mov	sp,fp
   30048:	dfc00117 	ldw	ra,4(sp)
   3004c:	df000017 	ldw	fp,0(sp)
   30050:	dec00204 	addi	sp,sp,8
   30054:	f800283a 	ret

00030058 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   30058:	defffa04 	addi	sp,sp,-24
   3005c:	df000515 	stw	fp,20(sp)
   30060:	df000504 	addi	fp,sp,20
   30064:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
   30068:	0005303a 	rdctl	r2,status
   3006c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   30070:	e0fffc17 	ldw	r3,-16(fp)
   30074:	00bfff84 	movi	r2,-2
   30078:	1884703a 	and	r2,r3,r2
   3007c:	1001703a 	wrctl	status,r2
  return context;
   30080:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   30084:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
   30088:	e0bffb17 	ldw	r2,-20(fp)
   3008c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   30090:	e0bffd17 	ldw	r2,-12(fp)
   30094:	10800017 	ldw	r2,0(r2)
   30098:	e0fffd17 	ldw	r3,-12(fp)
   3009c:	18c00117 	ldw	r3,4(r3)
   300a0:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   300a4:	e0bffd17 	ldw	r2,-12(fp)
   300a8:	10800117 	ldw	r2,4(r2)
   300ac:	e0fffd17 	ldw	r3,-12(fp)
   300b0:	18c00017 	ldw	r3,0(r3)
   300b4:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   300b8:	e0bffd17 	ldw	r2,-12(fp)
   300bc:	e0fffd17 	ldw	r3,-12(fp)
   300c0:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   300c4:	e0bffd17 	ldw	r2,-12(fp)
   300c8:	e0fffd17 	ldw	r3,-12(fp)
   300cc:	10c00015 	stw	r3,0(r2)
} 
   300d0:	0001883a 	nop
   300d4:	e0bfff17 	ldw	r2,-4(fp)
   300d8:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   300dc:	e0bffe17 	ldw	r2,-8(fp)
   300e0:	1001703a 	wrctl	status,r2
}
   300e4:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
   300e8:	0001883a 	nop
   300ec:	e037883a 	mov	sp,fp
   300f0:	df000017 	ldw	fp,0(sp)
   300f4:	dec00104 	addi	sp,sp,4
   300f8:	f800283a 	ret

000300fc <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   300fc:	defffb04 	addi	sp,sp,-20
   30100:	dfc00415 	stw	ra,16(sp)
   30104:	df000315 	stw	fp,12(sp)
   30108:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   3010c:	d0a01017 	ldw	r2,-32704(gp)
   30110:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   30114:	d0a72d17 	ldw	r2,-25420(gp)
   30118:	10800044 	addi	r2,r2,1
   3011c:	d0a72d15 	stw	r2,-25420(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   30120:	00002e06 	br	301dc <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   30124:	e0bfff17 	ldw	r2,-4(fp)
   30128:	10800017 	ldw	r2,0(r2)
   3012c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   30130:	e0bfff17 	ldw	r2,-4(fp)
   30134:	10800403 	ldbu	r2,16(r2)
   30138:	10803fcc 	andi	r2,r2,255
   3013c:	10000426 	beq	r2,zero,30150 <alt_tick+0x54>
   30140:	d0a72d17 	ldw	r2,-25420(gp)
   30144:	1000021e 	bne	r2,zero,30150 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   30148:	e0bfff17 	ldw	r2,-4(fp)
   3014c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   30150:	e0bfff17 	ldw	r2,-4(fp)
   30154:	10800217 	ldw	r2,8(r2)
   30158:	d0e72d17 	ldw	r3,-25420(gp)
   3015c:	18801d36 	bltu	r3,r2,301d4 <alt_tick+0xd8>
   30160:	e0bfff17 	ldw	r2,-4(fp)
   30164:	10800403 	ldbu	r2,16(r2)
   30168:	10803fcc 	andi	r2,r2,255
   3016c:	1000191e 	bne	r2,zero,301d4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   30170:	e0bfff17 	ldw	r2,-4(fp)
   30174:	10800317 	ldw	r2,12(r2)
   30178:	e0ffff17 	ldw	r3,-4(fp)
   3017c:	18c00517 	ldw	r3,20(r3)
   30180:	1809883a 	mov	r4,r3
   30184:	103ee83a 	callr	r2
   30188:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   3018c:	e0bffd17 	ldw	r2,-12(fp)
   30190:	1000031e 	bne	r2,zero,301a0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   30194:	e13fff17 	ldw	r4,-4(fp)
   30198:	00300580 	call	30058 <alt_alarm_stop>
   3019c:	00000d06 	br	301d4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   301a0:	e0bfff17 	ldw	r2,-4(fp)
   301a4:	10c00217 	ldw	r3,8(r2)
   301a8:	e0bffd17 	ldw	r2,-12(fp)
   301ac:	1887883a 	add	r3,r3,r2
   301b0:	e0bfff17 	ldw	r2,-4(fp)
   301b4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   301b8:	e0bfff17 	ldw	r2,-4(fp)
   301bc:	10c00217 	ldw	r3,8(r2)
   301c0:	d0a72d17 	ldw	r2,-25420(gp)
   301c4:	1880032e 	bgeu	r3,r2,301d4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   301c8:	e0bfff17 	ldw	r2,-4(fp)
   301cc:	00c00044 	movi	r3,1
   301d0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   301d4:	e0bffe17 	ldw	r2,-8(fp)
   301d8:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
   301dc:	e0ffff17 	ldw	r3,-4(fp)
   301e0:	d0a01004 	addi	r2,gp,-32704
   301e4:	18bfcf1e 	bne	r3,r2,30124 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   301e8:	0001883a 	nop
}
   301ec:	0001883a 	nop
   301f0:	e037883a 	mov	sp,fp
   301f4:	dfc00117 	ldw	ra,4(sp)
   301f8:	df000017 	ldw	fp,0(sp)
   301fc:	dec00204 	addi	sp,sp,8
   30200:	f800283a 	ret

00030204 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   30204:	deffff04 	addi	sp,sp,-4
   30208:	df000015 	stw	fp,0(sp)
   3020c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   30210:	000170fa 	wrctl	ienable,zero
}
   30214:	0001883a 	nop
   30218:	e037883a 	mov	sp,fp
   3021c:	df000017 	ldw	fp,0(sp)
   30220:	dec00104 	addi	sp,sp,4
   30224:	f800283a 	ret

00030228 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   30228:	defffb04 	addi	sp,sp,-20
   3022c:	dfc00415 	stw	ra,16(sp)
   30230:	df000315 	stw	fp,12(sp)
   30234:	df000304 	addi	fp,sp,12
   30238:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   3023c:	d0a00817 	ldw	r2,-32736(gp)
   30240:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   30244:	00003106 	br	3030c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   30248:	e0bfff17 	ldw	r2,-4(fp)
   3024c:	10800217 	ldw	r2,8(r2)
   30250:	1009883a 	mov	r4,r2
   30254:	00274680 	call	27468 <strlen>
   30258:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   3025c:	e0bfff17 	ldw	r2,-4(fp)
   30260:	10c00217 	ldw	r3,8(r2)
   30264:	e0bffe17 	ldw	r2,-8(fp)
   30268:	10bfffc4 	addi	r2,r2,-1
   3026c:	1885883a 	add	r2,r3,r2
   30270:	10800003 	ldbu	r2,0(r2)
   30274:	10803fcc 	andi	r2,r2,255
   30278:	1080201c 	xori	r2,r2,128
   3027c:	10bfe004 	addi	r2,r2,-128
   30280:	10800bd8 	cmpnei	r2,r2,47
   30284:	1000031e 	bne	r2,zero,30294 <alt_find_file+0x6c>
    {
      len -= 1;
   30288:	e0bffe17 	ldw	r2,-8(fp)
   3028c:	10bfffc4 	addi	r2,r2,-1
   30290:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   30294:	e0bffe17 	ldw	r2,-8(fp)
   30298:	e0fffd17 	ldw	r3,-12(fp)
   3029c:	1885883a 	add	r2,r3,r2
   302a0:	10800003 	ldbu	r2,0(r2)
   302a4:	10803fcc 	andi	r2,r2,255
   302a8:	1080201c 	xori	r2,r2,128
   302ac:	10bfe004 	addi	r2,r2,-128
   302b0:	10800be0 	cmpeqi	r2,r2,47
   302b4:	1000081e 	bne	r2,zero,302d8 <alt_find_file+0xb0>
   302b8:	e0bffe17 	ldw	r2,-8(fp)
   302bc:	e0fffd17 	ldw	r3,-12(fp)
   302c0:	1885883a 	add	r2,r3,r2
   302c4:	10800003 	ldbu	r2,0(r2)
   302c8:	10803fcc 	andi	r2,r2,255
   302cc:	1080201c 	xori	r2,r2,128
   302d0:	10bfe004 	addi	r2,r2,-128
   302d4:	10000a1e 	bne	r2,zero,30300 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   302d8:	e0bfff17 	ldw	r2,-4(fp)
   302dc:	10800217 	ldw	r2,8(r2)
   302e0:	e0fffe17 	ldw	r3,-8(fp)
   302e4:	180d883a 	mov	r6,r3
   302e8:	e17ffd17 	ldw	r5,-12(fp)
   302ec:	1009883a 	mov	r4,r2
   302f0:	00304c80 	call	304c8 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
   302f4:	1000021e 	bne	r2,zero,30300 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
   302f8:	e0bfff17 	ldw	r2,-4(fp)
   302fc:	00000706 	br	3031c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   30300:	e0bfff17 	ldw	r2,-4(fp)
   30304:	10800017 	ldw	r2,0(r2)
   30308:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
   3030c:	e0ffff17 	ldw	r3,-4(fp)
   30310:	d0a00804 	addi	r2,gp,-32736
   30314:	18bfcc1e 	bne	r3,r2,30248 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
   30318:	0005883a 	mov	r2,zero
}
   3031c:	e037883a 	mov	sp,fp
   30320:	dfc00117 	ldw	ra,4(sp)
   30324:	df000017 	ldw	fp,0(sp)
   30328:	dec00204 	addi	sp,sp,8
   3032c:	f800283a 	ret

00030330 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   30330:	defffc04 	addi	sp,sp,-16
   30334:	df000315 	stw	fp,12(sp)
   30338:	df000304 	addi	fp,sp,12
   3033c:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
   30340:	00bffa04 	movi	r2,-24
   30344:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   30348:	e03fff15 	stw	zero,-4(fp)
   3034c:	00001d06 	br	303c4 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
   30350:	e0ffff17 	ldw	r3,-4(fp)
   30354:	1805883a 	mov	r2,r3
   30358:	1085883a 	add	r2,r2,r2
   3035c:	10c5883a 	add	r2,r2,r3
   30360:	100490ba 	slli	r2,r2,2
   30364:	00c000f4 	movhi	r3,3
   30368:	10c7883a 	add	r3,r2,r3
   3036c:	1885d617 	ldw	r2,5976(r3)
   30370:	1000111e 	bne	r2,zero,303b8 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
   30374:	e0ffff17 	ldw	r3,-4(fp)
   30378:	1805883a 	mov	r2,r3
   3037c:	1085883a 	add	r2,r2,r2
   30380:	10c5883a 	add	r2,r2,r3
   30384:	100490ba 	slli	r2,r2,2
   30388:	e13ffd17 	ldw	r4,-12(fp)
   3038c:	00c000f4 	movhi	r3,3
   30390:	10c7883a 	add	r3,r2,r3
   30394:	1905d615 	stw	r4,5976(r3)
      if (i > alt_max_fd)
   30398:	d0e00c17 	ldw	r3,-32720(gp)
   3039c:	e0bfff17 	ldw	r2,-4(fp)
   303a0:	1880020e 	bge	r3,r2,303ac <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
   303a4:	e0bfff17 	ldw	r2,-4(fp)
   303a8:	d0a00c15 	stw	r2,-32720(gp)
      }
      rc = i;
   303ac:	e0bfff17 	ldw	r2,-4(fp)
   303b0:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   303b4:	00000706 	br	303d4 <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
   303b8:	e0bfff17 	ldw	r2,-4(fp)
   303bc:	10800044 	addi	r2,r2,1
   303c0:	e0bfff15 	stw	r2,-4(fp)
   303c4:	e0bfff17 	ldw	r2,-4(fp)
   303c8:	10800810 	cmplti	r2,r2,32
   303cc:	103fe01e 	bne	r2,zero,30350 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
   303d0:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   303d4:	e0bffe17 	ldw	r2,-8(fp)
}
   303d8:	e037883a 	mov	sp,fp
   303dc:	df000017 	ldw	fp,0(sp)
   303e0:	dec00104 	addi	sp,sp,4
   303e4:	f800283a 	ret

000303e8 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   303e8:	defffe04 	addi	sp,sp,-8
   303ec:	df000115 	stw	fp,4(sp)
   303f0:	df000104 	addi	fp,sp,4
   303f4:	e13fff15 	stw	r4,-4(fp)
   303f8:	e0bfff17 	ldw	r2,-4(fp)
   303fc:	10bffe84 	addi	r2,r2,-6
   30400:	10c00428 	cmpgeui	r3,r2,16
   30404:	1800191e 	bne	r3,zero,3046c <alt_exception_cause_generated_bad_addr+0x84>
   30408:	100690ba 	slli	r3,r2,2
   3040c:	008000f4 	movhi	r2,3
   30410:	1885883a 	add	r2,r3,r2
   30414:	10810717 	ldw	r2,1052(r2)
   30418:	1000683a 	jmp	r2
   3041c:	0003045c 	xori	zero,zero,3089
   30420:	0003045c 	xori	zero,zero,3089
   30424:	0003046c 	andhi	zero,zero,3089
   30428:	0003046c 	andhi	zero,zero,3089
   3042c:	0003046c 	andhi	zero,zero,3089
   30430:	0003045c 	xori	zero,zero,3089
   30434:	00030464 	muli	zero,zero,3089
   30438:	0003046c 	andhi	zero,zero,3089
   3043c:	0003045c 	xori	zero,zero,3089
   30440:	0003045c 	xori	zero,zero,3089
   30444:	0003046c 	andhi	zero,zero,3089
   30448:	0003045c 	xori	zero,zero,3089
   3044c:	00030464 	muli	zero,zero,3089
   30450:	0003046c 	andhi	zero,zero,3089
   30454:	0003046c 	andhi	zero,zero,3089
   30458:	0003045c 	xori	zero,zero,3089
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   3045c:	00800044 	movi	r2,1
   30460:	00000306 	br	30470 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   30464:	0005883a 	mov	r2,zero
   30468:	00000106 	br	30470 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
   3046c:	0005883a 	mov	r2,zero
  }
}
   30470:	e037883a 	mov	sp,fp
   30474:	df000017 	ldw	fp,0(sp)
   30478:	dec00104 	addi	sp,sp,4
   3047c:	f800283a 	ret

00030480 <atexit>:
   30480:	200b883a 	mov	r5,r4
   30484:	000f883a 	mov	r7,zero
   30488:	000d883a 	mov	r6,zero
   3048c:	0009883a 	mov	r4,zero
   30490:	00305401 	jmpi	30540 <__register_exitproc>

00030494 <exit>:
   30494:	defffe04 	addi	sp,sp,-8
   30498:	000b883a 	mov	r5,zero
   3049c:	dc000015 	stw	r16,0(sp)
   304a0:	dfc00115 	stw	ra,4(sp)
   304a4:	2021883a 	mov	r16,r4
   304a8:	00305d00 	call	305d0 <__call_exitprocs>
   304ac:	008000f4 	movhi	r2,3
   304b0:	110a5d17 	ldw	r4,10612(r2)
   304b4:	20800f17 	ldw	r2,60(r4)
   304b8:	10000126 	beq	r2,zero,304c0 <exit+0x2c>
   304bc:	103ee83a 	callr	r2
   304c0:	8009883a 	mov	r4,r16
   304c4:	002dd300 	call	2dd30 <_exit>

000304c8 <memcmp>:
   304c8:	30800130 	cmpltui	r2,r6,4
   304cc:	10000b1e 	bne	r2,zero,304fc <memcmp+0x34>
   304d0:	2144b03a 	or	r2,r4,r5
   304d4:	108000cc 	andi	r2,r2,3
   304d8:	1000171e 	bne	r2,zero,30538 <memcmp+0x70>
   304dc:	20c00017 	ldw	r3,0(r4)
   304e0:	28800017 	ldw	r2,0(r5)
   304e4:	1880141e 	bne	r3,r2,30538 <memcmp+0x70>
   304e8:	31bfff04 	addi	r6,r6,-4
   304ec:	30800128 	cmpgeui	r2,r6,4
   304f0:	21000104 	addi	r4,r4,4
   304f4:	29400104 	addi	r5,r5,4
   304f8:	103ff81e 	bne	r2,zero,304dc <memcmp+0x14>
   304fc:	30bfffc4 	addi	r2,r6,-1
   30500:	30000b26 	beq	r6,zero,30530 <memcmp+0x68>
   30504:	11800044 	addi	r6,r2,1
   30508:	218d883a 	add	r6,r4,r6
   3050c:	00000106 	br	30514 <memcmp+0x4c>
   30510:	21800726 	beq	r4,r6,30530 <memcmp+0x68>
   30514:	20800003 	ldbu	r2,0(r4)
   30518:	28c00003 	ldbu	r3,0(r5)
   3051c:	21000044 	addi	r4,r4,1
   30520:	29400044 	addi	r5,r5,1
   30524:	10fffa26 	beq	r2,r3,30510 <memcmp+0x48>
   30528:	10c5c83a 	sub	r2,r2,r3
   3052c:	f800283a 	ret
   30530:	0005883a 	mov	r2,zero
   30534:	f800283a 	ret
   30538:	30bfffc4 	addi	r2,r6,-1
   3053c:	003ff106 	br	30504 <memcmp+0x3c>

00030540 <__register_exitproc>:
   30540:	008000f4 	movhi	r2,3
   30544:	10ca5d17 	ldw	r3,10612(r2)
   30548:	18805217 	ldw	r2,328(r3)
   3054c:	10001726 	beq	r2,zero,305ac <__register_exitproc+0x6c>
   30550:	10c00117 	ldw	r3,4(r2)
   30554:	1a000808 	cmpgei	r8,r3,32
   30558:	40001b1e 	bne	r8,zero,305c8 <__register_exitproc+0x88>
   3055c:	20000b26 	beq	r4,zero,3058c <__register_exitproc+0x4c>
   30560:	181090ba 	slli	r8,r3,2
   30564:	02400044 	movi	r9,1
   30568:	48d2983a 	sll	r9,r9,r3
   3056c:	1211883a 	add	r8,r2,r8
   30570:	41802215 	stw	r6,136(r8)
   30574:	11806217 	ldw	r6,392(r2)
   30578:	21000098 	cmpnei	r4,r4,2
   3057c:	324cb03a 	or	r6,r6,r9
   30580:	11806215 	stw	r6,392(r2)
   30584:	41c04215 	stw	r7,264(r8)
   30588:	20000b26 	beq	r4,zero,305b8 <__register_exitproc+0x78>
   3058c:	19000084 	addi	r4,r3,2
   30590:	200890ba 	slli	r4,r4,2
   30594:	18c00044 	addi	r3,r3,1
   30598:	10c00115 	stw	r3,4(r2)
   3059c:	1105883a 	add	r2,r2,r4
   305a0:	11400015 	stw	r5,0(r2)
   305a4:	0005883a 	mov	r2,zero
   305a8:	f800283a 	ret
   305ac:	18805304 	addi	r2,r3,332
   305b0:	18805215 	stw	r2,328(r3)
   305b4:	003fe606 	br	30550 <__register_exitproc+0x10>
   305b8:	11006317 	ldw	r4,396(r2)
   305bc:	2252b03a 	or	r9,r4,r9
   305c0:	12406315 	stw	r9,396(r2)
   305c4:	003ff106 	br	3058c <__register_exitproc+0x4c>
   305c8:	00bfffc4 	movi	r2,-1
   305cc:	f800283a 	ret

000305d0 <__call_exitprocs>:
   305d0:	defff704 	addi	sp,sp,-36
   305d4:	008000f4 	movhi	r2,3
   305d8:	dcc00315 	stw	r19,12(sp)
   305dc:	14ca5d17 	ldw	r19,10612(r2)
   305e0:	dc800215 	stw	r18,8(sp)
   305e4:	dfc00815 	stw	ra,32(sp)
   305e8:	9c805217 	ldw	r18,328(r19)
   305ec:	ddc00715 	stw	r23,28(sp)
   305f0:	dd800615 	stw	r22,24(sp)
   305f4:	dd400515 	stw	r21,20(sp)
   305f8:	dd000415 	stw	r20,16(sp)
   305fc:	dc400115 	stw	r17,4(sp)
   30600:	dc000015 	stw	r16,0(sp)
   30604:	90001026 	beq	r18,zero,30648 <__call_exitprocs+0x78>
   30608:	202b883a 	mov	r21,r4
   3060c:	282d883a 	mov	r22,r5
   30610:	05000044 	movi	r20,1
   30614:	94000117 	ldw	r16,4(r18)
   30618:	847fffc4 	addi	r17,r16,-1
   3061c:	88000a16 	blt	r17,zero,30648 <__call_exitprocs+0x78>
   30620:	84000044 	addi	r16,r16,1
   30624:	802090ba 	slli	r16,r16,2
   30628:	9421883a 	add	r16,r18,r16
   3062c:	b0001126 	beq	r22,zero,30674 <__call_exitprocs+0xa4>
   30630:	80804017 	ldw	r2,256(r16)
   30634:	15800f26 	beq	r2,r22,30674 <__call_exitprocs+0xa4>
   30638:	8c7fffc4 	addi	r17,r17,-1
   3063c:	88bfffd8 	cmpnei	r2,r17,-1
   30640:	843fff04 	addi	r16,r16,-4
   30644:	103ff91e 	bne	r2,zero,3062c <__call_exitprocs+0x5c>
   30648:	dfc00817 	ldw	ra,32(sp)
   3064c:	ddc00717 	ldw	r23,28(sp)
   30650:	dd800617 	ldw	r22,24(sp)
   30654:	dd400517 	ldw	r21,20(sp)
   30658:	dd000417 	ldw	r20,16(sp)
   3065c:	dcc00317 	ldw	r19,12(sp)
   30660:	dc800217 	ldw	r18,8(sp)
   30664:	dc400117 	ldw	r17,4(sp)
   30668:	dc000017 	ldw	r16,0(sp)
   3066c:	dec00904 	addi	sp,sp,36
   30670:	f800283a 	ret
   30674:	90800117 	ldw	r2,4(r18)
   30678:	81800017 	ldw	r6,0(r16)
   3067c:	10bfffc4 	addi	r2,r2,-1
   30680:	14401726 	beq	r2,r17,306e0 <__call_exitprocs+0x110>
   30684:	80000015 	stw	zero,0(r16)
   30688:	303feb26 	beq	r6,zero,30638 <__call_exitprocs+0x68>
   3068c:	a446983a 	sll	r3,r20,r17
   30690:	90806217 	ldw	r2,392(r18)
   30694:	95c00117 	ldw	r23,4(r18)
   30698:	1884703a 	and	r2,r3,r2
   3069c:	1000081e 	bne	r2,zero,306c0 <__call_exitprocs+0xf0>
   306a0:	303ee83a 	callr	r6
   306a4:	90c00117 	ldw	r3,4(r18)
   306a8:	98805217 	ldw	r2,328(r19)
   306ac:	1dc0011e 	bne	r3,r23,306b4 <__call_exitprocs+0xe4>
   306b0:	90bfe126 	beq	r18,r2,30638 <__call_exitprocs+0x68>
   306b4:	103fe426 	beq	r2,zero,30648 <__call_exitprocs+0x78>
   306b8:	1025883a 	mov	r18,r2
   306bc:	003fd506 	br	30614 <__call_exitprocs+0x44>
   306c0:	90806317 	ldw	r2,396(r18)
   306c4:	81002017 	ldw	r4,128(r16)
   306c8:	1886703a 	and	r3,r3,r2
   306cc:	1800061e 	bne	r3,zero,306e8 <__call_exitprocs+0x118>
   306d0:	200b883a 	mov	r5,r4
   306d4:	a809883a 	mov	r4,r21
   306d8:	303ee83a 	callr	r6
   306dc:	003ff106 	br	306a4 <__call_exitprocs+0xd4>
   306e0:	94400115 	stw	r17,4(r18)
   306e4:	003fe806 	br	30688 <__call_exitprocs+0xb8>
   306e8:	303ee83a 	callr	r6
   306ec:	003fed06 	br	306a4 <__call_exitprocs+0xd4>
