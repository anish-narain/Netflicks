
nik_controller.elf:     file format elf32-littlenios2
nik_controller.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00020228

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x00010684 memsz 0x00010684 flags r-x
    LOAD off    0x000116a4 vaddr 0x000306a4 paddr 0x000322e0 align 2**12
         filesz 0x00001c3c memsz 0x00001c3c flags rw-
    LOAD off    0x00013f1c vaddr 0x00033f1c paddr 0x00033f1c align 2**12
         filesz 0x00000000 memsz 0x0000017c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000208  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fcb4  00020228  00020228  00001228  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000007c8  0002fedc  0002fedc  00010edc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c3c  000306a4  000322e0  000116a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000017c  00033f1c  00033f1c  00013f1c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory 00000000  00034098  00034098  000132e0  2**0
                  CONTENTS
  7 .comment      0000002c  00000000  00000000  000132e0  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001370  00000000  00000000  00013310  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000574bf  00000000  00000000  00014680  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00012319  00000000  00000000  0006bb3f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0001c09b  00000000  00000000  0007de58  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000029f4  00000000  00000000  00099ef4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00004a97  00000000  00000000  0009c8e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001cd0f  00000000  00000000  000a137f  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  000be090  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001fa0  00000000  00000000  000be0a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000c3c25  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  000c3c28  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000c3c2b  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000c3c2c  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000c3c2d  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000c3c31  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000c3c35  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  000c3c39  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  000c3c42  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  000c3c4b  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000f  00000000  00000000  000c3c54  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000033  00000000  00000000  000c3c63  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     0006bc9e  00000000  00000000  000c3c96  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
00020228 l    d  .text	00000000 .text
0002fedc l    d  .rodata	00000000 .rodata
000306a4 l    d  .rwdata	00000000 .rwdata
00033f1c l    d  .bss	00000000 .bss
00034098 l    d  .onchip_memory	00000000 .onchip_memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../nik_controller_bsp//obj/HAL/src/crt0.o
00020260 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 atof.c
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 impure.c
000306c8 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 refill.c
00021ba8 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strtod.c
00021fac l     F .text	00000064 sulp
0002ff48 l     O .rodata	00000028 tinytens
0002ff34 l     O .rodata	00000014 fpi.4065
0002ff20 l     O .rodata	00000014 fpinan.4101
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00023bcc l     F .text	00000008 __fp_lock
00023be0 l     F .text	00000168 __sinit.part.0
00023d48 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
00024530 l     F .text	000000dc rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lnumeric.c
000322b4 l     O .rwdata	00000002 numempty
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00030128 l     O .rodata	0000000c p05.3991
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 signal.c
00026b48 l     F .text	0000004c _init_signal_r.part.0
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 vfprintf.c
00026e60 l     F .text	000000f4 __sprint_r.part.0
0002829c l     F .text	000000c0 __sbprintf
00030550 l     O .rodata	00000010 blanks.5153
00030540 l     O .rodata	00000010 zeroes.5154
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 unordsf2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0002cfb0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0002d0c8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0002d12c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0002d3c4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0002d4b0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0002d618 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0002d704 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
0002d8e4 l     F .text	0000003c alt_get_errno
0002d920 l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_printf.c
00000000 l    df *ABS*	00000000 alt_putchar.c
00000000 l    df *ABS*	00000000 alt_read.c
0002ddb8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000322d4 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0002e024 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0002e164 l     F .text	00000034 alt_dev_reg
00031208 l     O .rwdata	00001060 jtag_uart
00032268 l     O .rwdata	0000002c accelerometer_spi
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0002e45c l     F .text	00000210 altera_avalon_jtag_uart_irq
0002e66c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0002ecb0 l     F .text	00000080 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_accelerometer_spi.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0002f2cc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0002f6e8 l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 putc.c
00033f54 g     O .bss	00000004 alt_instruction_exception_handler
0002fb68 g     F .text	00000018 putchar
000264a0 g     F .text	00000070 _mprec_log10
0002657c g     F .text	00000060 __any_on
00025108 g     F .text	00000058 _isatty_r
00030134 g     O .rodata	00000028 __mprec_tinytens
0002d820 g     F .text	0000007c alt_main
00033f98 g     O .bss	00000100 alt_irq
00025200 g     F .text	00000064 _lseek_r
0003229c g     O .rwdata	00000004 en_f
000322e0 g       *ABS*	00000000 __flash_rwdata_start
00023f20 g     F .text	000000b8 __sflags
0002b910 g     F .text	00000080 .hidden __eqdf2
00034098 g       *ABS*	00000000 __alt_heap_start
000296b4 g     F .text	00000070 .hidden __floatdidf
00026dfc g     F .text	00000060 _kill_r
00029448 g     F .text	0000006c _wcrtomb_r
00026ba8 g     F .text	00000084 _signal_r
00021f48 g     F .text	0000005c __sseek
00023ed8 g     F .text	00000010 __sinit
000292e8 g     F .text	00000148 __swbuf_r
00025168 g     F .text	00000074 _setlocale_r
00023d50 g     F .text	00000078 __sfmoreglue
0002d8c0 g     F .text	00000024 __malloc_unlock
0002359c g     F .text	0000000c _strtod_r
00028c58 g     F .text	0000012c memmove
00023ec4 g     F .text	00000014 _cleanup
000254a4 g     F .text	000000a4 _Balloc
000202e0 g     F .text	00000034 sys_timer_isr
000306bc g     O .rwdata	0000000c inact_thresh_coef
0002b990 g     F .text	000000f0 .hidden __gtdf2
0002f9e4 g     F .text	00000024 altera_nios2_gen2_irq_init
00020000 g     F .entry	0000000c __reset
0002eefc g     F .text	000000d4 alt_up_accelerometer_spi_read_x_axis
00020020 g       *ABS*	00000000 __flash_exceptions_start
00021000 g     F .text	00000060 _fstat_r
00033f28 g     O .bss	00000004 errno
00021e04 g     F .text	00000010 __srget
00021ec0 g     F .text	00000008 __seofread
00033f44 g     O .bss	00000004 alt_argv
0003a294 g       *ABS*	00000000 _gp
0002d224 g     F .text	00000020 getpid
00032294 g     O .rwdata	00000006 output
00033f58 g     O .bss	0000000c xyz
00031088 g     O .rwdata	00000180 alt_fd_list
00021060 g     F .text	0000007c _getc_r
000210dc g     F .text	00000090 getc
0002fb60 g     F .text	00000008 _putchar_r
0002f478 g     F .text	00000090 alt_find_dev
000252b4 g     F .text	00000100 memcpy
00024ea0 g     F .text	00000268 __hexnan
00023bd4 g     F .text	0000000c _cleanup_r
0002cca0 g     F .text	000000bc .hidden __floatsidf
0002f7bc g     F .text	0000007c alt_io_redirect
0002ba80 g     F .text	000000f0 .hidden __ltdf2
0002fedc g       *ABS*	00000000 __DTOR_END__
0002fa08 g     F .text	00000098 alt_exception_cause_generated_bad_addr
000306a4 g     O .rwdata	00000018 act_thresh_coef
000263fc g     F .text	000000a4 __ratio
00028280 g     F .text	0000001c __vfiprintf_internal
000322a0 g     O .rwdata	00000004 nox
0002e868 g     F .text	00000220 altera_avalon_jtag_uart_read
00021344 g     F .text	00000010 malloc
0002a3f8 g     F .text	00000064 .hidden __udivsi3
0002d400 g     F .text	000000b0 isatty
00026c2c g     F .text	000000c4 _raise_r
00026890 g     F .text	00000064 __assert_func
00030184 g     O .rodata	000000c8 __mprec_tens
00020380 g     F .text	0000006c read_accelerometer
0002a558 g     F .text	000000c0 .hidden __lesf2
0002953c g     F .text	00000074 .hidden __fixunsdfsi
00033f34 g     O .bss	00000004 __malloc_top_pad
00026e5c g     F .text	00000004 _getpid_r
000286b8 g     F .text	000004cc __sfvwrite_r
00025914 g     F .text	00000054 __i2b
00026cf0 g     F .text	000000b8 __sigtramp_r
00021e14 g     F .text	00000058 _sbrk_r
000265dc g     F .text	00000064 _read_r
000322c8 g     O .rwdata	00000004 alt_max_fd
000269cc g     F .text	000000f8 _fclose_r
00023ba4 g     F .text	00000028 fflush
00033f30 g     O .bss	00000004 __malloc_max_sbrked_mem
0002d244 g     F .text	00000180 alt_irq_register
0002a664 g     F .text	00000978 .hidden __adddf3
0002a4e0 g     F .text	00000078 .hidden __nesf2
00026194 g     F .text	00000104 __b2d
00029d40 g     F .text	000005c4 .hidden __umoddi3
0002d740 g     F .text	000000e0 lseek
000322a4 g     O .rwdata	00000004 _global_impure_ptr
00028d84 g     F .text	00000564 _realloc_r
00034098 g       *ABS*	00000000 __bss_end
0002f8dc g     F .text	00000108 alt_tick
0002ffcc g     O .rodata	00000100 __hexdig
00029724 g     F .text	0000061c .hidden __udivdi3
0002861c g     F .text	00000024 _fputwc_r
0003015c g     O .rodata	00000028 __mprec_bigtens
000256c8 g     F .text	00000138 __s2b
00026b30 g     F .text	00000018 abort
0002cd5c g     F .text	00000090 .hidden __floatunsidf
00025eb4 g     F .text	00000058 __mcmp
00023ef8 g     F .text	00000014 __fp_lock_all
0002f838 g     F .text	000000a4 alt_alarm_stop
00033f3c g     O .bss	00000004 alt_irq_active
00020b90 g     F .text	00000454 _fseeko_r
000200fc g     F .exceptions	000000cc alt_irq_handler
00031060 g     O .rwdata	00000028 alt_dev_null
00022010 g     F .text	0000158c _strtod_l
00024e50 g     F .text	00000050 __match
000206d4 g     F .text	00000084 detect_INACT
0002f2ac g     F .text	00000020 alt_dcache_flush_all
00025800 g     F .text	00000064 __hi0bits
000209e0 g     F .text	00000080 .hidden __fixdfsi
000235c4 g     F .text	00000020 strtod
000322e0 g       *ABS*	00000000 __ram_rwdata_end
00020264 g     F .text	0000007c timer_init
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory
000322c0 g     O .rwdata	00000008 alt_dev_list
0002e060 g     F .text	00000104 write
0002fd30 g     F .text	000000cc _putc_r
00020a60 g     F .text	00000008 atof
000306a4 g       *ABS*	00000000 __ram_rodata_end
0002d168 g     F .text	000000bc fstat
00020314 g     F .text	0000006c shift_xyz
0002d4ec g     F .text	0000012c kill
0002ba80 g     F .text	000000f0 .hidden __ledf2
000235e4 g     F .text	00000120 strtof_l
00025c14 g     F .text	00000118 __pow5mult
0003229a g     O .rwdata	00000001 led
00026f6c g     F .text	00001314 ___vfiprintf_internal_r
0002a45c g     F .text	0000005c .hidden __umodsi3
00034098 g       *ABS*	00000000 end
00020fe4 g     F .text	0000001c fseeko
00020b74 g     F .text	0000001c fseek
0002e3a8 g     F .text	000000b4 altera_avalon_jtag_uart_init
000201c8 g     F .exceptions	00000060 alt_instruction_exception_entry
0002fedc g       *ABS*	00000000 __CTOR_LIST__
00040000 g       *ABS*	00000000 __alt_stack_pointer
0002ed30 g     F .text	0000007c alt_avalon_timer_sc_init
0002cf5c g     F .text	00000054 .hidden __clzsi2
0002ea88 g     F .text	00000228 altera_avalon_jtag_uart_write
00023ee8 g     F .text	00000004 __sfp_lock_acquire
00028b84 g     F .text	000000d4 memchr
000240f4 g     F .text	000002fc _free_r
0002db5c g     F .text	0000022c alt_printf
00030390 g     O .rodata	00000180 _ctype_b
000251dc g     F .text	0000000c __locale_mb_cur_max
0002fc10 g     F .text	00000120 __call_exitprocs
00021d90 g     F .text	00000074 __srget_r
000322ac g     O .rwdata	00000004 __malloc_sbrk_base
00020228 g     F .text	0000003c _start
00033f4c g     O .bss	00000004 _alt_tick_rate
00025d2c g     F .text	00000188 __lshift
00033f50 g     O .bss	00000004 _alt_nticks
00026db8 g     F .text	00000018 signal
0002ddf4 g     F .text	00000108 read
0002e1d4 g     F .text	00000070 alt_sys_init
0002ede8 g     F .text	00000044 alt_up_accelerometer_spi_read_address_register
00021b44 g     F .text	00000064 _open_r
0002fb80 g     F .text	00000090 __register_exitproc
00026790 g     F .text	000000c4 strncmp
00025968 g     F .text	000002ac __multiply
0002e70c g     F .text	00000068 altera_avalon_jtag_uart_close
0002a4b8 g     F .text	00000028 .hidden __mulsi3
000306a4 g       *ABS*	00000000 __ram_rwdata_start
0002fedc g       *ABS*	00000000 __ram_rodata_start
00033f70 g     O .bss	00000028 __malloc_current_mallinfo
0002a4e0 g     F .text	00000078 .hidden __eqsf2
00026298 g     F .text	00000164 __d2b
0002e244 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0002f610 g     F .text	000000b8 alt_get_fd
0002efd0 g     F .text	000000d4 alt_up_accelerometer_spi_read_y_axis
000238c4 g     F .text	00000058 _close_r
000203ec g     F .text	000000bc max
0002fae8 g     F .text	00000078 memcmp
0002e304 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00034098 g       *ABS*	00000000 __alt_stack_base
0002e354 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0002835c g     F .text	0000015c __swsetup_r
0002afdc g     F .text	00000934 .hidden __divdf3
00023dc8 g     F .text	000000fc __sfp
00026510 g     F .text	0000006c __copybits
00030aec g     O .rwdata	00000408 __malloc_av_
00023ef4 g     F .text	00000004 __sinit_lock_release
0002bb70 g     F .text	000007a8 .hidden __muldf3
00021e6c g     F .text	00000054 __sread
0002f508 g     F .text	00000108 alt_find_file
0002f308 g     F .text	000000a8 alt_dev_llist_insert
0002d89c g     F .text	00000024 __malloc_lock
0002df6c g     F .text	000000b8 sbrk
00023b44 g     F .text	00000060 _fflush_r
00026908 g     F .text	000000c4 _calloc_r
00020b58 g     F .text	00000018 fopen
00033f1c g       *ABS*	00000000 __bss_start
000253b4 g     F .text	000000f0 memset
000207c0 g     F .text	00000220 main
00033f48 g     O .bss	00000004 alt_envp
00033f2c g     O .bss	00000004 __malloc_max_total_mem
0002e2a4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00029430 g     F .text	00000018 __swbuf
0002a558 g     F .text	000000c0 .hidden __ltsf2
00021fa4 g     F .text	00000008 __sclose
00040000 g       *ABS*	00000000 __alt_heap_limit
00026ac4 g     F .text	00000010 fclose
0002cdec g     F .text	00000170 .hidden __truncdfsf2
00021364 g     F .text	000007e0 _malloc_r
00026860 g     F .text	00000030 __ascii_wctomb
000322cc g     O .rwdata	00000004 alt_errno
00026ad4 g     F .text	00000020 _fiprintf_r
00026dd0 g     F .text	0000001c _init_signal
000243f0 g     F .text	00000098 _fwalk
00025264 g     F .text	0000000c _mbtowc_r
0002fdfc g     F .text	000000e0 putc
0002a304 g     F .text	00000080 .hidden __divsi3
00023fd8 g     F .text	0000011c _malloc_trim_r
0002fedc g       *ABS*	00000000 __CTOR_END__
00026640 g     F .text	000000b8 strcmp
0002fedc g       *ABS*	00000000 __flash_rodata_start
0002fedc g       *ABS*	00000000 __DTOR_LIST__
000204a8 g     F .text	000000bc min
00029624 g     F .text	00000090 .hidden __fixunsdfdi
0002b910 g     F .text	00000080 .hidden __nedf2
00033f20 g     O .bss	00000004 inact_counter
0002e198 g     F .text	0000003c alt_irq_init
0002defc g     F .text	00000070 alt_release_fd
00030560 g     O .rodata	00000100 .hidden __clz_tab
00033f38 g     O .bss	00000004 _PathLocale
000295b0 g     F .text	00000074 .hidden __fixdfdi
00023704 g     F .text	0000015c strtof
000235a8 g     F .text	0000001c strtod_l
0002faa0 g     F .text	00000014 atexit
00020564 g     F .text	00000170 detect_ACT
00023860 g     F .text	00000064 _write_r
000251e8 g     F .text	00000018 setlocale
000322a8 g     O .rwdata	00000004 _impure_ptr
00033f40 g     O .bss	00000004 alt_argc
0002391c g     F .text	00000228 __sflush_r
0002f414 g     F .text	00000064 _do_dtors
00020b70 g     F .text	00000004 _fseek_r
00021bc4 g     F .text	000001cc __srefill_r
00020020 g       .exceptions	00000000 alt_irq_entry
00025270 g     F .text	00000044 __ascii_mbtowc
00026138 g     F .text	0000005c __ulp
00023f0c g     F .text	00000014 __fp_unlock_all
000300d0 g     O .rodata	0000000c _C_numeric_locale
000322b8 g     O .rwdata	00000008 alt_fs_list
00020020 g       *ABS*	00000000 __ram_exceptions_start
0002edac g     F .text	0000003c alt_up_accelerometer_spi_open_dev
0002116c g     F .text	00000098 __swhatbuf_r
00033f64 g     O .bss	0000000c xyz_prev
000322e0 g       *ABS*	00000000 _edata
00034098 g       *ABS*	00000000 _end
0002a618 g     F .text	0000004c .hidden __unordsf2
000284b8 g     F .text	00000164 __fputwc
00020228 g       *ABS*	00000000 __ram_exceptions_end
0002e774 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
00021ec8 g     F .text	00000080 __swrite
000322b0 g     O .rwdata	00000004 __malloc_trim_threshold
0002fab4 g     F .text	00000034 exit
00026af4 g     F .text	00000038 fiprintf
00026b2c g     F .text	00000004 _vfiprintf_r
00024488 g     F .text	000000a8 _fwalk_reent
00025f0c g     F .text	0000022c __mdiff
0002a384 g     F .text	00000074 .hidden __modsi3
0002f0a4 g     F .text	000000d4 alt_up_accelerometer_spi_read_z_axis
00040000 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
00023eec g     F .text	00000004 __sfp_lock_release
00033f1c g     O .bss	00000004 timer_f
0003028c g     O .rodata	00000101 _ctype_
00020758 g     F .text	00000068 wait_INACT
0002cc4c g     F .text	00000054 .hidden __unorddf2
00020a68 g     F .text	000000f0 _fopen_r
0002d0f4 g     F .text	00000038 _exit
0002f178 g     F .text	00000134 alt_alarm_start
0002ee2c g     F .text	00000068 alt_up_accelerometer_spi_read
0002ee94 g     F .text	00000068 alt_up_accelerometer_spi_write
00021204 g     F .text	00000140 __smakebuf_r
000266f8 g     F .text	00000098 strlen
00026b94 g     F .text	00000014 _init_signal_r
0002d9fc g     F .text	00000160 open
0002b990 g     F .text	000000f0 .hidden __gedf2
0002dd88 g     F .text	00000030 alt_putchar
0002460c g     F .text	00000844 __gethex
000268f4 g     F .text	00000014 __assert
00026f54 g     F .text	00000018 __sprint_r
0002f6c8 g     F .text	00000020 alt_icache_flush_all
00025160 g     F .text	00000008 __numeric_load_locale
000322d0 g     O .rwdata	00000004 alt_priority_mask
00026854 g     F .text	0000000c _wctomb_r
0002c318 g     F .text	00000934 .hidden __subdf3
00033f24 g     O .bss	00000004 acc_dev
00025864 g     F .text	000000b0 __lo0bits
000322d8 g     O .rwdata	00000008 alt_alarm_list
0002f3b0 g     F .text	00000064 _do_ctors
00026dec g     F .text	00000010 __sigtramp
000294b4 g     F .text	00000088 wcrtomb
0002cfec g     F .text	000000dc close
00030ef4 g     O .rwdata	0000016c __global_locale
0002d680 g     F .text	00000084 alt_load
00028640 g     F .text	00000078 fputwc
00026da8 g     F .text	00000010 raise
00021354 g     F .text	00000010 free
00023ef0 g     F .text	00000004 __sinit_lock_acquire
0002556c g     F .text	0000015c __multadd
00025548 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20000:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20004:	08408a14 	ori	at,at,552
    jmp r1
   20008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201c80 	call	201c8 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffc15 	stw	r2,-16(fp)

  return active;
   20118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0ffff17 	ldw	r3,-4(fp)
   20130:	e0bffe17 	ldw	r2,-8(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001226 	beq	r2,zero,20184 <alt_irq_handler+0x88>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
   2013c:	e0bffd17 	ldw	r2,-12(fp)
   20140:	100690fa 	slli	r3,r2,3
   20144:	008000f4 	movhi	r2,3
   20148:	1885883a 	add	r2,r3,r2
   2014c:	10cfe617 	ldw	r3,16280(r2)
   20150:	e0bffd17 	ldw	r2,-12(fp)
   20154:	100890fa 	slli	r4,r2,3
   20158:	008000f4 	movhi	r2,3
   2015c:	2085883a 	add	r2,r4,r2
   20160:	108fe717 	ldw	r2,16284(r2)
   20164:	e17ffd17 	ldw	r5,-12(fp)
   20168:	1009883a 	mov	r4,r2
   2016c:	183ee83a 	callr	r3
#endif
        break;
   20170:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
   20174:	0005313a 	rdctl	r2,ipending
   20178:	e0bffb15 	stw	r2,-20(fp)
  return active;
   2017c:	e0bffb17 	ldw	r2,-20(fp)
   20180:	00000706 	br	201a0 <alt_irq_handler+0xa4>
      }
      mask <<= 1;
   20184:	e0bffe17 	ldw	r2,-8(fp)
   20188:	1085883a 	add	r2,r2,r2
   2018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
   20190:	e0bffd17 	ldw	r2,-12(fp)
   20194:	10800044 	addi	r2,r2,1
   20198:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
   2019c:	003fe306 	br	2012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
   201a0:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   201a4:	e0bfff17 	ldw	r2,-4(fp)
   201a8:	103fdd1e 	bne	r2,zero,20120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201ac:	0001883a 	nop
}
   201b0:	0001883a 	nop
   201b4:	e037883a 	mov	sp,fp
   201b8:	dfc00117 	ldw	ra,4(sp)
   201bc:	df000017 	ldw	fp,0(sp)
   201c0:	dec00204 	addi	sp,sp,8
   201c4:	f800283a 	ret

000201c8 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201c8:	defffb04 	addi	sp,sp,-20
   201cc:	dfc00415 	stw	ra,16(sp)
   201d0:	df000315 	stw	fp,12(sp)
   201d4:	df000304 	addi	fp,sp,12
   201d8:	e13ffd15 	stw	r4,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
   201dc:	00bfffc4 	movi	r2,-1
   201e0:	e0bfff15 	stw	r2,-4(fp)
  badaddr = 0;
   201e4:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   201e8:	d0a73017 	ldw	r2,-25408(gp)
   201ec:	10000726 	beq	r2,zero,2020c <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   201f0:	d0a73017 	ldw	r2,-25408(gp)
   201f4:	e0ffff17 	ldw	r3,-4(fp)
   201f8:	e1bffe17 	ldw	r6,-8(fp)
   201fc:	e17ffd17 	ldw	r5,-12(fp)
   20200:	1809883a 	mov	r4,r3
   20204:	103ee83a 	callr	r2
   20208:	00000206 	br	20214 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   2020c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   20210:	0005883a 	mov	r2,zero
}
   20214:	e037883a 	mov	sp,fp
   20218:	dfc00117 	ldw	ra,4(sp)
   2021c:	df000017 	ldw	fp,0(sp)
   20220:	dec00204 	addi	sp,sp,8
   20224:	f800283a 	ret

Disassembly of section .text:

00020228 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   20228:	06c00134 	movhi	sp,4
    ori sp, sp, %lo(__alt_stack_pointer)
   2022c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   20230:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   20234:	d6a8a514 	ori	gp,gp,41620
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   20238:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   2023c:	108fc714 	ori	r2,r2,16156

    movhi r3, %hi(__bss_end)
   20240:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20244:	18d02614 	ori	r3,r3,16536

    beq r2, r3, 1f
   20248:	10c00326 	beq	r2,r3,20258 <_start+0x30>

0:
    stw zero, (r2)
   2024c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   20250:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20254:	10fffd36 	bltu	r2,r3,2024c <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   20258:	002d6800 	call	2d680 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   2025c:	002d8200 	call	2d820 <alt_main>

00020260 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   20260:	003fff06 	br	20260 <alt_after_alt_main>

00020264 <timer_init>:
int inact_counter = 0;
int nox = 1; //flag to exclude F/B from detection
alt_up_accelerometer_spi_dev * acc_dev;

//Timer is used to regulate the maximum rate of data input to the game.
void timer_init(void * isr) { //initialises timer and specifies interrupt service routine
   20264:	defffd04 	addi	sp,sp,-12
   20268:	dfc00215 	stw	ra,8(sp)
   2026c:	df000115 	stw	fp,4(sp)
   20270:	df000104 	addi	fp,sp,4
   20274:	e13fff15 	stw	r4,-4(fp)
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0003);
   20278:	00c000c4 	movi	r3,3
   2027c:	00800134 	movhi	r2,4
   20280:	10c40135 	stwio	r3,4100(r2)
    IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_BASE, 0);
   20284:	0007883a 	mov	r3,zero
   20288:	00800134 	movhi	r2,4
   2028c:	10c40035 	stwio	r3,4096(r2)
    IOWR_ALTERA_AVALON_TIMER_PERIODL(TIMER_BASE, 0x0000); //change period of timer with these two registers
   20290:	0007883a 	mov	r3,zero
   20294:	00800134 	movhi	r2,4
   20298:	10c40235 	stwio	r3,4104(r2)
    IOWR_ALTERA_AVALON_TIMER_PERIODH(TIMER_BASE, 0x0008); // PERIOD = {PERIODH,PERIODL} (concatenated)
   2029c:	00c00204 	movi	r3,8
   202a0:	00800134 	movhi	r2,4
   202a4:	10c40335 	stwio	r3,4108(r2)
    alt_irq_register(TIMER_IRQ, 0, isr);
   202a8:	e0bfff17 	ldw	r2,-4(fp)
   202ac:	100d883a 	mov	r6,r2
   202b0:	000b883a 	mov	r5,zero
   202b4:	0009883a 	mov	r4,zero
   202b8:	002d2440 	call	2d244 <alt_irq_register>
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0007);
   202bc:	00c001c4 	movi	r3,7
   202c0:	00800134 	movhi	r2,4
   202c4:	10c40135 	stwio	r3,4100(r2)
}
   202c8:	0001883a 	nop
   202cc:	e037883a 	mov	sp,fp
   202d0:	dfc00117 	ldw	ra,4(sp)
   202d4:	df000017 	ldw	fp,0(sp)
   202d8:	dec00204 	addi	sp,sp,8
   202dc:	f800283a 	ret

000202e0 <sys_timer_isr>:

void sys_timer_isr() { //interrupt service routine
   202e0:	deffff04 	addi	sp,sp,-4
   202e4:	df000015 	stw	fp,0(sp)
   202e8:	d839883a 	mov	fp,sp
	IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_BASE, 0);
   202ec:	0007883a 	mov	r3,zero
   202f0:	00800134 	movhi	r2,4
   202f4:	10c40035 	stwio	r3,4096(r2)
	timer_f = 1;
   202f8:	00800044 	movi	r2,1
   202fc:	d0a72215 	stw	r2,-25464(gp)
}
   20300:	0001883a 	nop
   20304:	e037883a 	mov	sp,fp
   20308:	df000017 	ldw	fp,0(sp)
   2030c:	dec00104 	addi	sp,sp,4
   20310:	f800283a 	ret

00020314 <shift_xyz>:

void shift_xyz() {
   20314:	defffe04 	addi	sp,sp,-8
   20318:	df000115 	stw	fp,4(sp)
   2031c:	df000104 	addi	fp,sp,4
	//SHIFT SAMPLE
	for (int i=0; i<3; i++) {
   20320:	e03fff15 	stw	zero,-4(fp)
   20324:	00000d06 	br	2035c <shift_xyz+0x48>
		xyz_prev[i] = xyz[i];
   20328:	e0bfff17 	ldw	r2,-4(fp)
   2032c:	100690ba 	slli	r3,r2,2
   20330:	008000f4 	movhi	r2,3
   20334:	1885883a 	add	r2,r3,r2
   20338:	10cfd617 	ldw	r3,16216(r2)
   2033c:	e0bfff17 	ldw	r2,-4(fp)
   20340:	100890ba 	slli	r4,r2,2
   20344:	008000f4 	movhi	r2,3
   20348:	2085883a 	add	r2,r4,r2
   2034c:	10cfd915 	stw	r3,16228(r2)
	for (int i=0; i<3; i++) {
   20350:	e0bfff17 	ldw	r2,-4(fp)
   20354:	10800044 	addi	r2,r2,1
   20358:	e0bfff15 	stw	r2,-4(fp)
   2035c:	e0bfff17 	ldw	r2,-4(fp)
   20360:	108000d0 	cmplti	r2,r2,3
   20364:	103ff01e 	bne	r2,zero,20328 <shift_xyz+0x14>
	}
}
   20368:	0001883a 	nop
   2036c:	0001883a 	nop
   20370:	e037883a 	mov	sp,fp
   20374:	df000017 	ldw	fp,0(sp)
   20378:	dec00104 	addi	sp,sp,4
   2037c:	f800283a 	ret

00020380 <read_accelerometer>:

void read_accelerometer(alt_32* xyz) {
   20380:	defffd04 	addi	sp,sp,-12
   20384:	dfc00215 	stw	ra,8(sp)
   20388:	df000115 	stw	fp,4(sp)
   2038c:	df000104 	addi	fp,sp,4
   20390:	e13fff15 	stw	r4,-4(fp)
	//readings for all axes
	alt_up_accelerometer_spi_read_x_axis(acc_dev, xyz);
   20394:	d0a72417 	ldw	r2,-25456(gp)
   20398:	e17fff17 	ldw	r5,-4(fp)
   2039c:	1009883a 	mov	r4,r2
   203a0:	002eefc0 	call	2eefc <alt_up_accelerometer_spi_read_x_axis>
	alt_up_accelerometer_spi_read_y_axis(acc_dev, xyz+1);
   203a4:	d0e72417 	ldw	r3,-25456(gp)
   203a8:	e0bfff17 	ldw	r2,-4(fp)
   203ac:	10800104 	addi	r2,r2,4
   203b0:	100b883a 	mov	r5,r2
   203b4:	1809883a 	mov	r4,r3
   203b8:	002efd00 	call	2efd0 <alt_up_accelerometer_spi_read_y_axis>
	alt_up_accelerometer_spi_read_z_axis(acc_dev, xyz+2);
   203bc:	d0e72417 	ldw	r3,-25456(gp)
   203c0:	e0bfff17 	ldw	r2,-4(fp)
   203c4:	10800204 	addi	r2,r2,8
   203c8:	100b883a 	mov	r5,r2
   203cc:	1809883a 	mov	r4,r3
   203d0:	002f0a40 	call	2f0a4 <alt_up_accelerometer_spi_read_z_axis>
}
   203d4:	0001883a 	nop
   203d8:	e037883a 	mov	sp,fp
   203dc:	dfc00117 	ldw	ra,4(sp)
   203e0:	df000017 	ldw	fp,0(sp)
   203e4:	dec00204 	addi	sp,sp,8
   203e8:	f800283a 	ret

000203ec <max>:

int max() { //returns index of the maximum reading out of the 3 axes (current sample)
   203ec:	defffc04 	addi	sp,sp,-16
   203f0:	df000315 	stw	fp,12(sp)
   203f4:	df000304 	addi	fp,sp,12
	int max = abs(xyz[nox]);
   203f8:	d0a00317 	ldw	r2,-32756(gp)
   203fc:	100690ba 	slli	r3,r2,2
   20400:	008000f4 	movhi	r2,3
   20404:	1885883a 	add	r2,r3,r2
   20408:	108fd617 	ldw	r2,16216(r2)
   2040c:	1000010e 	bge	r2,zero,20414 <max+0x28>
   20410:	0085c83a 	sub	r2,zero,r2
   20414:	e0bfff15 	stw	r2,-4(fp)
	int index = nox;
   20418:	d0a00317 	ldw	r2,-32756(gp)
   2041c:	e0bffe15 	stw	r2,-8(fp)
	for (int i=1; i<3; i++) {
   20420:	00800044 	movi	r2,1
   20424:	e0bffd15 	stw	r2,-12(fp)
   20428:	00001706 	br	20488 <max+0x9c>
		if (abs(xyz[i]) > max) {
   2042c:	e0bffd17 	ldw	r2,-12(fp)
   20430:	100690ba 	slli	r3,r2,2
   20434:	008000f4 	movhi	r2,3
   20438:	1885883a 	add	r2,r3,r2
   2043c:	108fd617 	ldw	r2,16216(r2)
   20440:	1000010e 	bge	r2,zero,20448 <max+0x5c>
   20444:	0085c83a 	sub	r2,zero,r2
   20448:	1007883a 	mov	r3,r2
   2044c:	e0bfff17 	ldw	r2,-4(fp)
   20450:	10c00a0e 	bge	r2,r3,2047c <max+0x90>
			max = abs(xyz[i]);
   20454:	e0bffd17 	ldw	r2,-12(fp)
   20458:	100690ba 	slli	r3,r2,2
   2045c:	008000f4 	movhi	r2,3
   20460:	1885883a 	add	r2,r3,r2
   20464:	108fd617 	ldw	r2,16216(r2)
   20468:	1000010e 	bge	r2,zero,20470 <max+0x84>
   2046c:	0085c83a 	sub	r2,zero,r2
   20470:	e0bfff15 	stw	r2,-4(fp)
			index = i;
   20474:	e0bffd17 	ldw	r2,-12(fp)
   20478:	e0bffe15 	stw	r2,-8(fp)
	for (int i=1; i<3; i++) {
   2047c:	e0bffd17 	ldw	r2,-12(fp)
   20480:	10800044 	addi	r2,r2,1
   20484:	e0bffd15 	stw	r2,-12(fp)
   20488:	e0bffd17 	ldw	r2,-12(fp)
   2048c:	108000d0 	cmplti	r2,r2,3
   20490:	103fe61e 	bne	r2,zero,2042c <max+0x40>
		}
	}
	return index;
   20494:	e0bffe17 	ldw	r2,-8(fp)
}
   20498:	e037883a 	mov	sp,fp
   2049c:	df000017 	ldw	fp,0(sp)
   204a0:	dec00104 	addi	sp,sp,4
   204a4:	f800283a 	ret

000204a8 <min>:

int min() { //returns index of the maximum reading out of the 3 axes (current sample)
   204a8:	defffc04 	addi	sp,sp,-16
   204ac:	df000315 	stw	fp,12(sp)
   204b0:	df000304 	addi	fp,sp,12
	int min = abs(xyz[nox]);
   204b4:	d0a00317 	ldw	r2,-32756(gp)
   204b8:	100690ba 	slli	r3,r2,2
   204bc:	008000f4 	movhi	r2,3
   204c0:	1885883a 	add	r2,r3,r2
   204c4:	108fd617 	ldw	r2,16216(r2)
   204c8:	1000010e 	bge	r2,zero,204d0 <min+0x28>
   204cc:	0085c83a 	sub	r2,zero,r2
   204d0:	e0bfff15 	stw	r2,-4(fp)
	int index = nox;
   204d4:	d0a00317 	ldw	r2,-32756(gp)
   204d8:	e0bffe15 	stw	r2,-8(fp)
	for (int i=1; i<3; i++) {
   204dc:	00800044 	movi	r2,1
   204e0:	e0bffd15 	stw	r2,-12(fp)
   204e4:	00001706 	br	20544 <min+0x9c>
		if (abs(xyz[i]) < min) {
   204e8:	e0bffd17 	ldw	r2,-12(fp)
   204ec:	100690ba 	slli	r3,r2,2
   204f0:	008000f4 	movhi	r2,3
   204f4:	1885883a 	add	r2,r3,r2
   204f8:	108fd617 	ldw	r2,16216(r2)
   204fc:	1000010e 	bge	r2,zero,20504 <min+0x5c>
   20500:	0085c83a 	sub	r2,zero,r2
   20504:	1007883a 	mov	r3,r2
   20508:	e0bfff17 	ldw	r2,-4(fp)
   2050c:	18800a0e 	bge	r3,r2,20538 <min+0x90>
			min = abs(xyz[i]);
   20510:	e0bffd17 	ldw	r2,-12(fp)
   20514:	100690ba 	slli	r3,r2,2
   20518:	008000f4 	movhi	r2,3
   2051c:	1885883a 	add	r2,r3,r2
   20520:	108fd617 	ldw	r2,16216(r2)
   20524:	1000010e 	bge	r2,zero,2052c <min+0x84>
   20528:	0085c83a 	sub	r2,zero,r2
   2052c:	e0bfff15 	stw	r2,-4(fp)
			index = i;
   20530:	e0bffd17 	ldw	r2,-12(fp)
   20534:	e0bffe15 	stw	r2,-8(fp)
	for (int i=1; i<3; i++) {
   20538:	e0bffd17 	ldw	r2,-12(fp)
   2053c:	10800044 	addi	r2,r2,1
   20540:	e0bffd15 	stw	r2,-12(fp)
   20544:	e0bffd17 	ldw	r2,-12(fp)
   20548:	108000d0 	cmplti	r2,r2,3
   2054c:	103fe61e 	bne	r2,zero,204e8 <min+0x40>
		}
	}
	return index;
   20550:	e0bffe17 	ldw	r2,-8(fp)
}
   20554:	e037883a 	mov	sp,fp
   20558:	df000017 	ldw	fp,0(sp)
   2055c:	dec00104 	addi	sp,sp,4
   20560:	f800283a 	ret

00020564 <detect_ACT>:

int detect_ACT(FILE* uart) {
   20564:	defffc04 	addi	sp,sp,-16
   20568:	dfc00315 	stw	ra,12(sp)
   2056c:	df000215 	stw	fp,8(sp)
   20570:	df000204 	addi	fp,sp,8
   20574:	e13ffe15 	stw	r4,-8(fp)
	int i = max();
   20578:	00203ec0 	call	203ec <max>
   2057c:	e0bfff15 	stw	r2,-4(fp)

	//output char if the |acceleration|>threshold and gradient has same polarity
	if (xyz[i]*10 > (act_thresh_coef[i][0]*THRESHOLD_1G)) { //multiplied by 10 to fine-tune threshold
   20580:	e0bfff17 	ldw	r2,-4(fp)
   20584:	100690ba 	slli	r3,r2,2
   20588:	008000f4 	movhi	r2,3
   2058c:	1885883a 	add	r2,r3,r2
   20590:	10cfd617 	ldw	r3,16216(r2)
   20594:	1805883a 	mov	r2,r3
   20598:	100490ba 	slli	r2,r2,2
   2059c:	10c5883a 	add	r2,r2,r3
   205a0:	1085883a 	add	r2,r2,r2
   205a4:	1009883a 	mov	r4,r2
   205a8:	e0bfff17 	ldw	r2,-4(fp)
   205ac:	100690fa 	slli	r3,r2,3
   205b0:	008000f4 	movhi	r2,3
   205b4:	1885883a 	add	r2,r3,r2
   205b8:	10c1a917 	ldw	r3,1700(r2)
   205bc:	1805883a 	mov	r2,r3
   205c0:	1004923a 	slli	r2,r2,8
   205c4:	10c5c83a 	sub	r2,r2,r3
   205c8:	1100130e 	bge	r2,r4,20618 <detect_ACT+0xb4>
		if (uart) { alt_printf("%c\n", output[i][0]); }
   205cc:	e0bffe17 	ldw	r2,-8(fp)
   205d0:	10000c26 	beq	r2,zero,20604 <detect_ACT+0xa0>
   205d4:	e0bfff17 	ldw	r2,-4(fp)
   205d8:	1087883a 	add	r3,r2,r2
   205dc:	d0a00004 	addi	r2,gp,-32768
   205e0:	1885883a 	add	r2,r3,r2
   205e4:	10800003 	ldbu	r2,0(r2)
   205e8:	10803fcc 	andi	r2,r2,255
   205ec:	1080201c 	xori	r2,r2,128
   205f0:	10bfe004 	addi	r2,r2,-128
   205f4:	100b883a 	mov	r5,r2
   205f8:	010000f4 	movhi	r4,3
   205fc:	213fb704 	addi	r4,r4,-292
   20600:	002db5c0 	call	2db5c <alt_printf>
		led++;
   20604:	d0a00183 	ldbu	r2,-32762(gp)
   20608:	10800044 	addi	r2,r2,1
   2060c:	d0a00185 	stb	r2,-32762(gp)
		return 1;
   20610:	00800044 	movi	r2,1
   20614:	00002a06 	br	206c0 <detect_ACT+0x15c>
	} else if ((xyz[i]*10 < -(act_thresh_coef[i][1]*THRESHOLD_1G))) { //Threshold cannot be below 255 as tilting the controller can cause reading abs(255) in any axis
   20618:	e0bfff17 	ldw	r2,-4(fp)
   2061c:	100690ba 	slli	r3,r2,2
   20620:	008000f4 	movhi	r2,3
   20624:	1885883a 	add	r2,r3,r2
   20628:	10cfd617 	ldw	r3,16216(r2)
   2062c:	1805883a 	mov	r2,r3
   20630:	100490ba 	slli	r2,r2,2
   20634:	10c5883a 	add	r2,r2,r3
   20638:	1085883a 	add	r2,r2,r2
   2063c:	1009883a 	mov	r4,r2
   20640:	e0bfff17 	ldw	r2,-4(fp)
   20644:	100690fa 	slli	r3,r2,3
   20648:	008000f4 	movhi	r2,3
   2064c:	1885883a 	add	r2,r3,r2
   20650:	1081aa17 	ldw	r2,1704(r2)
   20654:	1007883a 	mov	r3,r2
   20658:	1004923a 	slli	r2,r2,8
   2065c:	1885c83a 	sub	r2,r3,r2
   20660:	2080130e 	bge	r4,r2,206b0 <detect_ACT+0x14c>
		if (uart) { alt_printf("%c\n", output[i][1]); }
   20664:	e0bffe17 	ldw	r2,-8(fp)
   20668:	10000c26 	beq	r2,zero,2069c <detect_ACT+0x138>
   2066c:	e0bfff17 	ldw	r2,-4(fp)
   20670:	1087883a 	add	r3,r2,r2
   20674:	d0a00044 	addi	r2,gp,-32767
   20678:	1885883a 	add	r2,r3,r2
   2067c:	10800003 	ldbu	r2,0(r2)
   20680:	10803fcc 	andi	r2,r2,255
   20684:	1080201c 	xori	r2,r2,128
   20688:	10bfe004 	addi	r2,r2,-128
   2068c:	100b883a 	mov	r5,r2
   20690:	010000f4 	movhi	r4,3
   20694:	213fb704 	addi	r4,r4,-292
   20698:	002db5c0 	call	2db5c <alt_printf>
		led++;
   2069c:	d0a00183 	ldbu	r2,-32762(gp)
   206a0:	10800044 	addi	r2,r2,1
   206a4:	d0a00185 	stb	r2,-32762(gp)
		return 1;
   206a8:	00800044 	movi	r2,1
   206ac:	00000406 	br	206c0 <detect_ACT+0x15c>
	} else {
//		putchar('0');
		alt_printf("0");
   206b0:	010000f4 	movhi	r4,3
   206b4:	213fb804 	addi	r4,r4,-288
   206b8:	002db5c0 	call	2db5c <alt_printf>
		return 0; //return 0 if reading magnitude too small
   206bc:	0005883a 	mov	r2,zero
	}
}
   206c0:	e037883a 	mov	sp,fp
   206c4:	dfc00117 	ldw	ra,4(sp)
   206c8:	df000017 	ldw	fp,0(sp)
   206cc:	dec00204 	addi	sp,sp,8
   206d0:	f800283a 	ret

000206d4 <detect_INACT>:

int detect_INACT(int i){
   206d4:	defffe04 	addi	sp,sp,-8
   206d8:	df000115 	stw	fp,4(sp)
   206dc:	df000104 	addi	fp,sp,4
   206e0:	e13fff15 	stw	r4,-4(fp)
	if ((abs(xyz[i])*10) < (inact_thresh_coef[i]*THRESHOLD_1G)) { //multiplied by 10 to fine-tune threshold
   206e4:	e0bfff17 	ldw	r2,-4(fp)
   206e8:	100690ba 	slli	r3,r2,2
   206ec:	008000f4 	movhi	r2,3
   206f0:	1885883a 	add	r2,r3,r2
   206f4:	108fd617 	ldw	r2,16216(r2)
   206f8:	1000010e 	bge	r2,zero,20700 <detect_INACT+0x2c>
   206fc:	0085c83a 	sub	r2,zero,r2
   20700:	1007883a 	mov	r3,r2
   20704:	1805883a 	mov	r2,r3
   20708:	100490ba 	slli	r2,r2,2
   2070c:	10c5883a 	add	r2,r2,r3
   20710:	1085883a 	add	r2,r2,r2
   20714:	1009883a 	mov	r4,r2
   20718:	e0bfff17 	ldw	r2,-4(fp)
   2071c:	100690ba 	slli	r3,r2,2
   20720:	008000f4 	movhi	r2,3
   20724:	1885883a 	add	r2,r3,r2
   20728:	10c1af17 	ldw	r3,1724(r2)
   2072c:	1805883a 	mov	r2,r3
   20730:	1004923a 	slli	r2,r2,8
   20734:	10c5c83a 	sub	r2,r2,r3
   20738:	2080020e 	bge	r4,r2,20744 <detect_INACT+0x70>
		return 1;
   2073c:	00800044 	movi	r2,1
   20740:	00000106 	br	20748 <detect_INACT+0x74>
	} else {
		return 0; //return 0 if reading magnitude too large
   20744:	0005883a 	mov	r2,zero
	}
}
   20748:	e037883a 	mov	sp,fp
   2074c:	df000017 	ldw	fp,0(sp)
   20750:	dec00104 	addi	sp,sp,4
   20754:	f800283a 	ret

00020758 <wait_INACT>:

int wait_INACT() {
   20758:	defffd04 	addi	sp,sp,-12
   2075c:	dfc00215 	stw	ra,8(sp)
   20760:	df000115 	stw	fp,4(sp)
   20764:	df000104 	addi	fp,sp,4
	int i = min();
   20768:	00204a80 	call	204a8 <min>
   2076c:	e0bfff15 	stw	r2,-4(fp)
	if (inact_counter < INACT_SAMPLES) {
   20770:	d0a72317 	ldw	r2,-25460(gp)
   20774:	10800288 	cmpgei	r2,r2,10
   20778:	10000a1e 	bne	r2,zero,207a4 <wait_INACT+0x4c>
		if (detect_INACT(i)) {
   2077c:	e13fff17 	ldw	r4,-4(fp)
   20780:	00206d40 	call	206d4 <detect_INACT>
   20784:	10000426 	beq	r2,zero,20798 <wait_INACT+0x40>
			inact_counter++;
   20788:	d0a72317 	ldw	r2,-25460(gp)
   2078c:	10800044 	addi	r2,r2,1
   20790:	d0a72315 	stw	r2,-25460(gp)
   20794:	00000106 	br	2079c <wait_INACT+0x44>
		} else {
			inact_counter = 0;
   20798:	d0272315 	stw	zero,-25460(gp)
		}
		return 0;
   2079c:	0005883a 	mov	r2,zero
   207a0:	00000206 	br	207ac <wait_INACT+0x54>
	} else {
		inact_counter = 0;
   207a4:	d0272315 	stw	zero,-25460(gp)
		return 1;
   207a8:	00800044 	movi	r2,1
	}

}
   207ac:	e037883a 	mov	sp,fp
   207b0:	dfc00117 	ldw	ra,4(sp)
   207b4:	df000017 	ldw	fp,0(sp)
   207b8:	dec00204 	addi	sp,sp,8
   207bc:	f800283a 	ret

000207c0 <main>:

int main(){
   207c0:	defff604 	addi	sp,sp,-40
   207c4:	dfc00915 	stw	ra,36(sp)
   207c8:	df000815 	stw	fp,32(sp)
   207cc:	df000804 	addi	fp,sp,32
	//INITIATING FILE FOR SENDING
	FILE* fp;
	char prompt;
	char* score = malloc(4);
   207d0:	01000104 	movi	r4,4
   207d4:	00213440 	call	21344 <malloc>
   207d8:	e0bffd15 	stw	r2,-12(fp)
	strcpy(score, "0000");
   207dc:	e0bffd17 	ldw	r2,-12(fp)
   207e0:	00c00c04 	movi	r3,48
   207e4:	10c00005 	stb	r3,0(r2)
   207e8:	00c00c04 	movi	r3,48
   207ec:	10c00045 	stb	r3,1(r2)
   207f0:	00c00c04 	movi	r3,48
   207f4:	10c00085 	stb	r3,2(r2)
   207f8:	00c00c04 	movi	r3,48
   207fc:	10c000c5 	stb	r3,3(r2)
   20800:	10000105 	stb	zero,4(r2)
	fp = fopen ("/dev/jtag_uart", "r+");
   20804:	014000f4 	movhi	r5,3
   20808:	297fb904 	addi	r5,r5,-284
   2080c:	010000f4 	movhi	r4,3
   20810:	213fba04 	addi	r4,r4,-280
   20814:	0020b580 	call	20b58 <fopen>
   20818:	e0bffc15 	stw	r2,-16(fp)

	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
   2081c:	010000f4 	movhi	r4,3
   20820:	213fbe04 	addi	r4,r4,-264
   20824:	002edac0 	call	2edac <alt_up_accelerometer_spi_open_dev>
   20828:	d0a72415 	stw	r2,-25456(gp)
	if (acc_dev == NULL) { // if return 1, check if the spi ip name is "accelerometer_spi"
   2082c:	d0a72417 	ldw	r2,-25456(gp)
   20830:	1000021e 	bne	r2,zero,2083c <main+0x7c>
		return 1;
   20834:	00800044 	movi	r2,1
   20838:	00006406 	br	209cc <main+0x20c>
	}
	alt_up_accelerometer_spi_write(acc_dev, 0x1F, -63);
   2083c:	d0a72417 	ldw	r2,-25456(gp)
   20840:	01803044 	movi	r6,193
   20844:	014007c4 	movi	r5,31
   20848:	1009883a 	mov	r4,r2
   2084c:	002ee940 	call	2ee94 <alt_up_accelerometer_spi_write>
	//By default accelerometer reads 0g,0g,1g
	//writing to Z OFFSET register on accelerometer, accounting for 1g caused by gravity.
	//The offset is scaled by a factor of 2 so (127 - 2*-63=0)(127=1G according to datasheet)
	//The output is scaled to 8 bits (255=1G), difference is confusing but worked.

	timer_init(sys_timer_isr); //initialising timer with isr
   20850:	010000b4 	movhi	r4,2
   20854:	2100b804 	addi	r4,r4,736
   20858:	00202640 	call	20264 <timer_init>

	while(1){
		//READ DATA

		for (int j = 0; j < 1000; j++) {
   2085c:	e03fff15 	stw	zero,-4(fp)
   20860:	00003e06 	br	2095c <main+0x19c>
			alt_32 xyz_raw[] = {0,0,0};
   20864:	e03ff815 	stw	zero,-32(fp)
   20868:	e03ff915 	stw	zero,-28(fp)
   2086c:	e03ffa15 	stw	zero,-24(fp)
			read_accelerometer(xyz_raw);
   20870:	e0bff804 	addi	r2,fp,-32
   20874:	1009883a 	mov	r4,r2
   20878:	00203800 	call	20380 <read_accelerometer>

			//FILTER DATA
			IOWR_ALTERA_AVALON_PIO_DATA(FILTER_X_IN_BASE, xyz_raw[0]);
   2087c:	e0fff817 	ldw	r3,-32(fp)
   20880:	00800134 	movhi	r2,4
   20884:	10c41835 	stwio	r3,4192(r2)
			IOWR_ALTERA_AVALON_PIO_DATA(FILTER_Y_IN_BASE, xyz_raw[1]);
   20888:	e0fff917 	ldw	r3,-28(fp)
   2088c:	00800134 	movhi	r2,4
   20890:	10c41435 	stwio	r3,4176(r2)
			IOWR_ALTERA_AVALON_PIO_DATA(FILTER_Z_IN_BASE, xyz_raw[2]);
   20894:	e0fffa17 	ldw	r3,-24(fp)
   20898:	00800134 	movhi	r2,4
   2089c:	10c40c35 	stwio	r3,4144(r2)

			xyz[0] = IORD_ALTERA_AVALON_PIO_DATA(FILTER_X_OUT_BASE);
   208a0:	00800134 	movhi	r2,4
   208a4:	10c41c37 	ldwio	r3,4208(r2)
   208a8:	008000f4 	movhi	r2,3
   208ac:	10cfd615 	stw	r3,16216(r2)
			xyz[1] = IORD_ALTERA_AVALON_PIO_DATA(FILTER_Y_OUT_BASE);
   208b0:	00800134 	movhi	r2,4
   208b4:	10c41037 	ldwio	r3,4160(r2)
   208b8:	008000f4 	movhi	r2,3
   208bc:	10cfd715 	stw	r3,16220(r2)
			xyz[2] = IORD_ALTERA_AVALON_PIO_DATA(FILTER_Z_OUT_BASE);
   208c0:	00800134 	movhi	r2,4
   208c4:	10c40837 	ldwio	r3,4128(r2)
   208c8:	008000f4 	movhi	r2,3
   208cc:	10cfd815 	stw	r3,16224(r2)

			//SUBROUTINE TRIGGERED BY TIMER
			if (timer_f & en_f) {
   208d0:	d0e72217 	ldw	r3,-25464(gp)
   208d4:	d0a00217 	ldw	r2,-32760(gp)
   208d8:	1884703a 	and	r2,r3,r2
   208dc:	10000826 	beq	r2,zero,20900 <main+0x140>
				en_f = !detect_ACT(fp);
   208e0:	e13ffc17 	ldw	r4,-16(fp)
   208e4:	00205640 	call	20564 <detect_ACT>
   208e8:	1005003a 	cmpeq	r2,r2,zero
   208ec:	10803fcc 	andi	r2,r2,255
   208f0:	d0a00215 	stw	r2,-32760(gp)
				shift_xyz();
   208f4:	00203140 	call	20314 <shift_xyz>
				timer_f = 0;
   208f8:	d0272215 	stw	zero,-25464(gp)
   208fc:	00000406 	br	20910 <main+0x150>
			} else if (!en_f) {
   20900:	d0a00217 	ldw	r2,-32760(gp)
   20904:	1000021e 	bne	r2,zero,20910 <main+0x150>
				en_f = wait_INACT();
   20908:	00207580 	call	20758 <wait_INACT>
   2090c:	d0a00215 	stw	r2,-32760(gp)
			}

			//TESTING HEX OUTPUTS
			IOWR_ALTERA_AVALON_PIO_DATA(HEX_DISPLAY_BASE, abs(atof(score)));
   20910:	e13ffd17 	ldw	r4,-12(fp)
   20914:	0020a600 	call	20a60 <atof>
   20918:	100d883a 	mov	r6,r2
   2091c:	180f883a 	mov	r7,r3
   20920:	3009883a 	mov	r4,r6
   20924:	380b883a 	mov	r5,r7
   20928:	00209e00 	call	209e0 <__fixdfsi>
   2092c:	1000010e 	bge	r2,zero,20934 <main+0x174>
   20930:	0085c83a 	sub	r2,zero,r2
   20934:	1007883a 	mov	r3,r2
   20938:	00800134 	movhi	r2,4
   2093c:	10c42035 	stwio	r3,4224(r2)
			IOWR_ALTERA_AVALON_PIO_DATA(LED_BASE, led);
   20940:	d0a00183 	ldbu	r2,-32762(gp)
   20944:	10c03fcc 	andi	r3,r2,255
   20948:	00800134 	movhi	r2,4
   2094c:	10c42435 	stwio	r3,4240(r2)
		for (int j = 0; j < 1000; j++) {
   20950:	e0bfff17 	ldw	r2,-4(fp)
   20954:	10800044 	addi	r2,r2,1
   20958:	e0bfff15 	stw	r2,-4(fp)
   2095c:	e0bfff17 	ldw	r2,-4(fp)
   20960:	1080fa10 	cmplti	r2,r2,1000
   20964:	103fbf1e 	bne	r2,zero,20864 <main+0xa4>
		}

		if (fp) {
   20968:	e0bffc17 	ldw	r2,-16(fp)
   2096c:	103fbb26 	beq	r2,zero,2085c <main+0x9c>
			prompt = getc(fp);
   20970:	e13ffc17 	ldw	r4,-16(fp)
   20974:	00210dc0 	call	210dc <getc>
   20978:	e0bffbc5 	stb	r2,-17(fp)
			if (prompt == 's') {
   2097c:	e0bffbc7 	ldb	r2,-17(fp)
   20980:	10801cd8 	cmpnei	r2,r2,115
   20984:	103fb51e 	bne	r2,zero,2085c <main+0x9c>
			// ASSIGN NEXT 4 CHARACTERS TO SCORE
				for(int s = 0; s < 4; s++){
   20988:	e03ffe15 	stw	zero,-8(fp)
   2098c:	00000b06 	br	209bc <main+0x1fc>
					prompt = getc(fp);
   20990:	e13ffc17 	ldw	r4,-16(fp)
   20994:	00210dc0 	call	210dc <getc>
   20998:	e0bffbc5 	stb	r2,-17(fp)
				    // fprintf(fp, "FPGA: %c\n", prompt);
				    score[s] = prompt;
   2099c:	e0bffe17 	ldw	r2,-8(fp)
   209a0:	e0fffd17 	ldw	r3,-12(fp)
   209a4:	1885883a 	add	r2,r3,r2
   209a8:	e0fffbc3 	ldbu	r3,-17(fp)
   209ac:	10c00005 	stb	r3,0(r2)
				for(int s = 0; s < 4; s++){
   209b0:	e0bffe17 	ldw	r2,-8(fp)
   209b4:	10800044 	addi	r2,r2,1
   209b8:	e0bffe15 	stw	r2,-8(fp)
   209bc:	e0bffe17 	ldw	r2,-8(fp)
   209c0:	10800110 	cmplti	r2,r2,4
   209c4:	103ff21e 	bne	r2,zero,20990 <main+0x1d0>
		for (int j = 0; j < 1000; j++) {
   209c8:	003fa406 	br	2085c <main+0x9c>
		// fprintf(fp, "score: %s\n", score);

	}

	return 0;
}
   209cc:	e037883a 	mov	sp,fp
   209d0:	dfc00117 	ldw	ra,4(sp)
   209d4:	df000017 	ldw	fp,0(sp)
   209d8:	dec00204 	addi	sp,sp,8
   209dc:	f800283a 	ret

000209e0 <__fixdfsi>:
   209e0:	2806d53a 	srli	r3,r5,20
   209e4:	01800434 	movhi	r6,16
   209e8:	31bfffc4 	addi	r6,r6,-1
   209ec:	18c1ffcc 	andi	r3,r3,2047
   209f0:	19c0ffd0 	cmplti	r7,r3,1023
   209f4:	2810d7fa 	srli	r8,r5,31
   209f8:	298a703a 	and	r5,r5,r6
   209fc:	3800061e 	bne	r7,zero,20a18 <__fixdfsi+0x38>
   20a00:	18810790 	cmplti	r2,r3,1054
   20a04:	1000061e 	bne	r2,zero,20a20 <__fixdfsi+0x40>
   20a08:	00a00034 	movhi	r2,32768
   20a0c:	10bfffc4 	addi	r2,r2,-1
   20a10:	4085883a 	add	r2,r8,r2
   20a14:	f800283a 	ret
   20a18:	0005883a 	mov	r2,zero
   20a1c:	f800283a 	ret
   20a20:	01810cc4 	movi	r6,1075
   20a24:	30cdc83a 	sub	r6,r6,r3
   20a28:	30800808 	cmpgei	r2,r6,32
   20a2c:	29400434 	orhi	r5,r5,16
   20a30:	1000071e 	bne	r2,zero,20a50 <__fixdfsi+0x70>
   20a34:	18befb44 	addi	r2,r3,-1043
   20a38:	2884983a 	sll	r2,r5,r2
   20a3c:	2188d83a 	srl	r4,r4,r6
   20a40:	1104b03a 	or	r2,r2,r4
   20a44:	403ff526 	beq	r8,zero,20a1c <__fixdfsi+0x3c>
   20a48:	0085c83a 	sub	r2,zero,r2
   20a4c:	f800283a 	ret
   20a50:	008104c4 	movi	r2,1043
   20a54:	10c5c83a 	sub	r2,r2,r3
   20a58:	2884d83a 	srl	r2,r5,r2
   20a5c:	003ff906 	br	20a44 <__fixdfsi+0x64>

00020a60 <atof>:
   20a60:	000b883a 	mov	r5,zero
   20a64:	00235c41 	jmpi	235c4 <strtod>

00020a68 <_fopen_r>:
   20a68:	defffa04 	addi	sp,sp,-24
   20a6c:	3007883a 	mov	r3,r6
   20a70:	dcc00415 	stw	r19,16(sp)
   20a74:	d80d883a 	mov	r6,sp
   20a78:	2827883a 	mov	r19,r5
   20a7c:	180b883a 	mov	r5,r3
   20a80:	dc800315 	stw	r18,12(sp)
   20a84:	dfc00515 	stw	ra,20(sp)
   20a88:	dc400215 	stw	r17,8(sp)
   20a8c:	dc000115 	stw	r16,4(sp)
   20a90:	2025883a 	mov	r18,r4
   20a94:	0023f200 	call	23f20 <__sflags>
   20a98:	10002726 	beq	r2,zero,20b38 <_fopen_r+0xd0>
   20a9c:	9009883a 	mov	r4,r18
   20aa0:	1023883a 	mov	r17,r2
   20aa4:	0023dc80 	call	23dc8 <__sfp>
   20aa8:	1021883a 	mov	r16,r2
   20aac:	10002226 	beq	r2,zero,20b38 <_fopen_r+0xd0>
   20ab0:	d9800017 	ldw	r6,0(sp)
   20ab4:	01c06d84 	movi	r7,438
   20ab8:	980b883a 	mov	r5,r19
   20abc:	9009883a 	mov	r4,r18
   20ac0:	0021b440 	call	21b44 <_open_r>
   20ac4:	10001916 	blt	r2,zero,20b2c <_fopen_r+0xc4>
   20ac8:	018000b4 	movhi	r6,2
   20acc:	014000b4 	movhi	r5,2
   20ad0:	010000b4 	movhi	r4,2
   20ad4:	00c000b4 	movhi	r3,2
   20ad8:	31879b04 	addi	r6,r6,7788
   20adc:	2947b204 	addi	r5,r5,7880
   20ae0:	2107d204 	addi	r4,r4,8008
   20ae4:	18c7e904 	addi	r3,r3,8100
   20ae8:	8440030d 	sth	r17,12(r16)
   20aec:	8080038d 	sth	r2,14(r16)
   20af0:	84000715 	stw	r16,28(r16)
   20af4:	81800815 	stw	r6,32(r16)
   20af8:	81400915 	stw	r5,36(r16)
   20afc:	81000a15 	stw	r4,40(r16)
   20b00:	80c00b15 	stw	r3,44(r16)
   20b04:	8c40400c 	andi	r17,r17,256
   20b08:	88000d1e 	bne	r17,zero,20b40 <_fopen_r+0xd8>
   20b0c:	8005883a 	mov	r2,r16
   20b10:	dfc00517 	ldw	ra,20(sp)
   20b14:	dcc00417 	ldw	r19,16(sp)
   20b18:	dc800317 	ldw	r18,12(sp)
   20b1c:	dc400217 	ldw	r17,8(sp)
   20b20:	dc000117 	ldw	r16,4(sp)
   20b24:	dec00604 	addi	sp,sp,24
   20b28:	f800283a 	ret
   20b2c:	0023ee80 	call	23ee8 <__sfp_lock_acquire>
   20b30:	8000030d 	sth	zero,12(r16)
   20b34:	0023eec0 	call	23eec <__sfp_lock_release>
   20b38:	0021883a 	mov	r16,zero
   20b3c:	003ff306 	br	20b0c <_fopen_r+0xa4>
   20b40:	01c00084 	movi	r7,2
   20b44:	000d883a 	mov	r6,zero
   20b48:	800b883a 	mov	r5,r16
   20b4c:	9009883a 	mov	r4,r18
   20b50:	0020b700 	call	20b70 <_fseek_r>
   20b54:	003fed06 	br	20b0c <_fopen_r+0xa4>

00020b58 <fopen>:
   20b58:	00c000f4 	movhi	r3,3
   20b5c:	2005883a 	mov	r2,r4
   20b60:	1908aa17 	ldw	r4,8872(r3)
   20b64:	280d883a 	mov	r6,r5
   20b68:	100b883a 	mov	r5,r2
   20b6c:	0020a681 	jmpi	20a68 <_fopen_r>

00020b70 <_fseek_r>:
   20b70:	0020b901 	jmpi	20b90 <_fseeko_r>

00020b74 <fseek>:
   20b74:	00c000f4 	movhi	r3,3
   20b78:	2005883a 	mov	r2,r4
   20b7c:	1908aa17 	ldw	r4,8872(r3)
   20b80:	300f883a 	mov	r7,r6
   20b84:	280d883a 	mov	r6,r5
   20b88:	100b883a 	mov	r5,r2
   20b8c:	0020b901 	jmpi	20b90 <_fseeko_r>

00020b90 <_fseeko_r>:
   20b90:	deffe504 	addi	sp,sp,-108
   20b94:	dd401715 	stw	r21,92(sp)
   20b98:	dcc01515 	stw	r19,84(sp)
   20b9c:	dc401315 	stw	r17,76(sp)
   20ba0:	dc001215 	stw	r16,72(sp)
   20ba4:	dfc01a15 	stw	ra,104(sp)
   20ba8:	ddc01915 	stw	r23,100(sp)
   20bac:	dd801815 	stw	r22,96(sp)
   20bb0:	dd001615 	stw	r20,88(sp)
   20bb4:	dc801415 	stw	r18,80(sp)
   20bb8:	2023883a 	mov	r17,r4
   20bbc:	2821883a 	mov	r16,r5
   20bc0:	3027883a 	mov	r19,r6
   20bc4:	382b883a 	mov	r21,r7
   20bc8:	20000226 	beq	r4,zero,20bd4 <_fseeko_r+0x44>
   20bcc:	20800e17 	ldw	r2,56(r4)
   20bd0:	10001a26 	beq	r2,zero,20c3c <_fseeko_r+0xac>
   20bd4:	8080030b 	ldhu	r2,12(r16)
   20bd8:	1080420c 	andi	r2,r2,264
   20bdc:	10804218 	cmpnei	r2,r2,264
   20be0:	10001b26 	beq	r2,zero,20c50 <_fseeko_r+0xc0>
   20be4:	85000a17 	ldw	r20,40(r16)
   20be8:	a000fa26 	beq	r20,zero,20fd4 <_fseeko_r+0x444>
   20bec:	a8800060 	cmpeqi	r2,r21,1
   20bf0:	10004a1e 	bne	r2,zero,20d1c <_fseeko_r+0x18c>
   20bf4:	04bfff44 	movi	r18,-3
   20bf8:	aca4703a 	and	r18,r21,r18
   20bfc:	90001826 	beq	r18,zero,20c60 <_fseeko_r+0xd0>
   20c00:	00800584 	movi	r2,22
   20c04:	88800015 	stw	r2,0(r17)
   20c08:	04bfffc4 	movi	r18,-1
   20c0c:	9005883a 	mov	r2,r18
   20c10:	dfc01a17 	ldw	ra,104(sp)
   20c14:	ddc01917 	ldw	r23,100(sp)
   20c18:	dd801817 	ldw	r22,96(sp)
   20c1c:	dd401717 	ldw	r21,92(sp)
   20c20:	dd001617 	ldw	r20,88(sp)
   20c24:	dcc01517 	ldw	r19,84(sp)
   20c28:	dc801417 	ldw	r18,80(sp)
   20c2c:	dc401317 	ldw	r17,76(sp)
   20c30:	dc001217 	ldw	r16,72(sp)
   20c34:	dec01b04 	addi	sp,sp,108
   20c38:	f800283a 	ret
   20c3c:	0023ed80 	call	23ed8 <__sinit>
   20c40:	8080030b 	ldhu	r2,12(r16)
   20c44:	1080420c 	andi	r2,r2,264
   20c48:	10804218 	cmpnei	r2,r2,264
   20c4c:	103fe51e 	bne	r2,zero,20be4 <_fseeko_r+0x54>
   20c50:	800b883a 	mov	r5,r16
   20c54:	8809883a 	mov	r4,r17
   20c58:	0023b440 	call	23b44 <_fflush_r>
   20c5c:	003fe106 	br	20be4 <_fseeko_r+0x54>
   20c60:	81000417 	ldw	r4,16(r16)
   20c64:	002f883a 	mov	r23,zero
   20c68:	20004826 	beq	r4,zero,20d8c <_fseeko_r+0x1fc>
   20c6c:	8080030b 	ldhu	r2,12(r16)
   20c70:	10c2068c 	andi	r3,r2,2074
   20c74:	1800071e 	bne	r3,zero,20c94 <_fseeko_r+0x104>
   20c78:	10c1000c 	andi	r3,r2,1024
   20c7c:	1800561e 	bne	r3,zero,20dd8 <_fseeko_r+0x248>
   20c80:	00c000b4 	movhi	r3,2
   20c84:	18c7d204 	addi	r3,r3,8008
   20c88:	a0c04426 	beq	r20,r3,20d9c <_fseeko_r+0x20c>
   20c8c:	10820014 	ori	r2,r2,2048
   20c90:	8080030d 	sth	r2,12(r16)
   20c94:	800b883a 	mov	r5,r16
   20c98:	8809883a 	mov	r4,r17
   20c9c:	0023b440 	call	23b44 <_fflush_r>
   20ca0:	1025883a 	mov	r18,r2
   20ca4:	103fd81e 	bne	r2,zero,20c08 <_fseeko_r+0x78>
   20ca8:	81400717 	ldw	r5,28(r16)
   20cac:	a80f883a 	mov	r7,r21
   20cb0:	980d883a 	mov	r6,r19
   20cb4:	8809883a 	mov	r4,r17
   20cb8:	a03ee83a 	callr	r20
   20cbc:	10bfffe0 	cmpeqi	r2,r2,-1
   20cc0:	103fd11e 	bne	r2,zero,20c08 <_fseeko_r+0x78>
   20cc4:	81400c17 	ldw	r5,48(r16)
   20cc8:	28000526 	beq	r5,zero,20ce0 <_fseeko_r+0x150>
   20ccc:	80801004 	addi	r2,r16,64
   20cd0:	28800226 	beq	r5,r2,20cdc <_fseeko_r+0x14c>
   20cd4:	8809883a 	mov	r4,r17
   20cd8:	00240f40 	call	240f4 <_free_r>
   20cdc:	80000c15 	stw	zero,48(r16)
   20ce0:	8080030b 	ldhu	r2,12(r16)
   20ce4:	80c00417 	ldw	r3,16(r16)
   20ce8:	80000115 	stw	zero,4(r16)
   20cec:	10bdf7cc 	andi	r2,r2,63455
   20cf0:	80c00015 	stw	r3,0(r16)
   20cf4:	8080030d 	sth	r2,12(r16)
   20cf8:	80001705 	stb	zero,92(r16)
   20cfc:	80001745 	stb	zero,93(r16)
   20d00:	80001785 	stb	zero,94(r16)
   20d04:	800017c5 	stb	zero,95(r16)
   20d08:	80001805 	stb	zero,96(r16)
   20d0c:	80001845 	stb	zero,97(r16)
   20d10:	80001885 	stb	zero,98(r16)
   20d14:	800018c5 	stb	zero,99(r16)
   20d18:	003fbc06 	br	20c0c <_fseeko_r+0x7c>
   20d1c:	800b883a 	mov	r5,r16
   20d20:	8809883a 	mov	r4,r17
   20d24:	0023b440 	call	23b44 <_fflush_r>
   20d28:	8080030b 	ldhu	r2,12(r16)
   20d2c:	10c4000c 	andi	r3,r2,4096
   20d30:	18006e1e 	bne	r3,zero,20eec <_fseeko_r+0x35c>
   20d34:	81400717 	ldw	r5,28(r16)
   20d38:	01c00044 	movi	r7,1
   20d3c:	000d883a 	mov	r6,zero
   20d40:	8809883a 	mov	r4,r17
   20d44:	a03ee83a 	callr	r20
   20d48:	1025883a 	mov	r18,r2
   20d4c:	10bfffd8 	cmpnei	r2,r2,-1
   20d50:	103fad26 	beq	r2,zero,20c08 <_fseeko_r+0x78>
   20d54:	8080030b 	ldhu	r2,12(r16)
   20d58:	81000417 	ldw	r4,16(r16)
   20d5c:	10c0010c 	andi	r3,r2,4
   20d60:	18006626 	beq	r3,zero,20efc <_fseeko_r+0x36c>
   20d64:	80c00117 	ldw	r3,4(r16)
   20d68:	80800c17 	ldw	r2,48(r16)
   20d6c:	90e5c83a 	sub	r18,r18,r3
   20d70:	10000226 	beq	r2,zero,20d7c <_fseeko_r+0x1ec>
   20d74:	81800f17 	ldw	r6,60(r16)
   20d78:	91a5c83a 	sub	r18,r18,r6
   20d7c:	9ca7883a 	add	r19,r19,r18
   20d80:	05c00044 	movi	r23,1
   20d84:	002b883a 	mov	r21,zero
   20d88:	203fb81e 	bne	r4,zero,20c6c <_fseeko_r+0xdc>
   20d8c:	800b883a 	mov	r5,r16
   20d90:	8809883a 	mov	r4,r17
   20d94:	00212040 	call	21204 <__smakebuf_r>
   20d98:	003fb406 	br	20c6c <_fseeko_r+0xdc>
   20d9c:	8140038f 	ldh	r5,14(r16)
   20da0:	283fba16 	blt	r5,zero,20c8c <_fseeko_r+0xfc>
   20da4:	d80d883a 	mov	r6,sp
   20da8:	8809883a 	mov	r4,r17
   20dac:	00210000 	call	21000 <_fstat_r>
   20db0:	1000761e 	bne	r2,zero,20f8c <_fseeko_r+0x3fc>
   20db4:	d8c00117 	ldw	r3,4(sp)
   20db8:	01200014 	movui	r4,32768
   20dbc:	8080030b 	ldhu	r2,12(r16)
   20dc0:	18fc000c 	andi	r3,r3,61440
   20dc4:	193fb11e 	bne	r3,r4,20c8c <_fseeko_r+0xfc>
   20dc8:	10810014 	ori	r2,r2,1024
   20dcc:	00c10004 	movi	r3,1024
   20dd0:	80c01315 	stw	r3,76(r16)
   20dd4:	8080030d 	sth	r2,12(r16)
   20dd8:	a8004f1e 	bne	r21,zero,20f18 <_fseeko_r+0x388>
   20ddc:	982d883a 	mov	r22,r19
   20de0:	b800551e 	bne	r23,zero,20f38 <_fseeko_r+0x3a8>
   20de4:	8080030b 	ldhu	r2,12(r16)
   20de8:	1084000c 	andi	r2,r2,4096
   20dec:	10005f26 	beq	r2,zero,20f6c <_fseeko_r+0x3dc>
   20df0:	80801417 	ldw	r2,80(r16)
   20df4:	80c00117 	ldw	r3,4(r16)
   20df8:	81400c17 	ldw	r5,48(r16)
   20dfc:	1809883a 	mov	r4,r3
   20e00:	10e5c83a 	sub	r18,r2,r3
   20e04:	28005226 	beq	r5,zero,20f50 <_fseeko_r+0x3c0>
   20e08:	81800f17 	ldw	r6,60(r16)
   20e0c:	91a5c83a 	sub	r18,r18,r6
   20e10:	80800e17 	ldw	r2,56(r16)
   20e14:	81c00417 	ldw	r7,16(r16)
   20e18:	90e5883a 	add	r18,r18,r3
   20e1c:	11c5c83a 	sub	r2,r2,r7
   20e20:	90a5c83a 	sub	r18,r18,r2
   20e24:	1185883a 	add	r2,r2,r6
   20e28:	b4800216 	blt	r22,r18,20e34 <_fseeko_r+0x2a4>
   20e2c:	9087883a 	add	r3,r18,r2
   20e30:	b0c05836 	bltu	r22,r3,20f94 <_fseeko_r+0x404>
   20e34:	84801317 	ldw	r18,76(r16)
   20e38:	81400717 	ldw	r5,28(r16)
   20e3c:	000f883a 	mov	r7,zero
   20e40:	04a5c83a 	sub	r18,zero,r18
   20e44:	95a4703a 	and	r18,r18,r22
   20e48:	900d883a 	mov	r6,r18
   20e4c:	8809883a 	mov	r4,r17
   20e50:	a03ee83a 	callr	r20
   20e54:	10bfffe0 	cmpeqi	r2,r2,-1
   20e58:	103f8e1e 	bne	r2,zero,20c94 <_fseeko_r+0x104>
   20e5c:	80800417 	ldw	r2,16(r16)
   20e60:	81400c17 	ldw	r5,48(r16)
   20e64:	80000115 	stw	zero,4(r16)
   20e68:	80800015 	stw	r2,0(r16)
   20e6c:	28000526 	beq	r5,zero,20e84 <_fseeko_r+0x2f4>
   20e70:	80801004 	addi	r2,r16,64
   20e74:	28800226 	beq	r5,r2,20e80 <_fseeko_r+0x2f0>
   20e78:	8809883a 	mov	r4,r17
   20e7c:	00240f40 	call	240f4 <_free_r>
   20e80:	80000c15 	stw	zero,48(r16)
   20e84:	8080030b 	ldhu	r2,12(r16)
   20e88:	b4afc83a 	sub	r23,r22,r18
   20e8c:	10bff7cc 	andi	r2,r2,65503
   20e90:	8080030d 	sth	r2,12(r16)
   20e94:	b4800b26 	beq	r22,r18,20ec4 <_fseeko_r+0x334>
   20e98:	800b883a 	mov	r5,r16
   20e9c:	8809883a 	mov	r4,r17
   20ea0:	0021bc40 	call	21bc4 <__srefill_r>
   20ea4:	103f7b1e 	bne	r2,zero,20c94 <_fseeko_r+0x104>
   20ea8:	80800117 	ldw	r2,4(r16)
   20eac:	15ff7936 	bltu	r2,r23,20c94 <_fseeko_r+0x104>
   20eb0:	80c00017 	ldw	r3,0(r16)
   20eb4:	15c5c83a 	sub	r2,r2,r23
   20eb8:	80800115 	stw	r2,4(r16)
   20ebc:	1def883a 	add	r23,r3,r23
   20ec0:	85c00015 	stw	r23,0(r16)
   20ec4:	80001705 	stb	zero,92(r16)
   20ec8:	80001745 	stb	zero,93(r16)
   20ecc:	80001785 	stb	zero,94(r16)
   20ed0:	800017c5 	stb	zero,95(r16)
   20ed4:	80001805 	stb	zero,96(r16)
   20ed8:	80001845 	stb	zero,97(r16)
   20edc:	80001885 	stb	zero,98(r16)
   20ee0:	800018c5 	stb	zero,99(r16)
   20ee4:	0025883a 	mov	r18,zero
   20ee8:	003f4806 	br	20c0c <_fseeko_r+0x7c>
   20eec:	10c0010c 	andi	r3,r2,4
   20ef0:	84801417 	ldw	r18,80(r16)
   20ef4:	81000417 	ldw	r4,16(r16)
   20ef8:	183f9a1e 	bne	r3,zero,20d64 <_fseeko_r+0x1d4>
   20efc:	1080020c 	andi	r2,r2,8
   20f00:	103f9e26 	beq	r2,zero,20d7c <_fseeko_r+0x1ec>
   20f04:	80800017 	ldw	r2,0(r16)
   20f08:	103f9c26 	beq	r2,zero,20d7c <_fseeko_r+0x1ec>
   20f0c:	1105c83a 	sub	r2,r2,r4
   20f10:	90a5883a 	add	r18,r18,r2
   20f14:	003f9906 	br	20d7c <_fseeko_r+0x1ec>
   20f18:	8140038f 	ldh	r5,14(r16)
   20f1c:	d80d883a 	mov	r6,sp
   20f20:	8809883a 	mov	r4,r17
   20f24:	00210000 	call	21000 <_fstat_r>
   20f28:	103f5a1e 	bne	r2,zero,20c94 <_fseeko_r+0x104>
   20f2c:	dd800417 	ldw	r22,16(sp)
   20f30:	9dad883a 	add	r22,r19,r22
   20f34:	b83fab26 	beq	r23,zero,20de4 <_fseeko_r+0x254>
   20f38:	81400c17 	ldw	r5,48(r16)
   20f3c:	28000326 	beq	r5,zero,20f4c <_fseeko_r+0x3bc>
   20f40:	80c00117 	ldw	r3,4(r16)
   20f44:	81800f17 	ldw	r6,60(r16)
   20f48:	003fb106 	br	20e10 <_fseeko_r+0x280>
   20f4c:	81000117 	ldw	r4,4(r16)
   20f50:	80800017 	ldw	r2,0(r16)
   20f54:	81c00417 	ldw	r7,16(r16)
   20f58:	000b883a 	mov	r5,zero
   20f5c:	11c5c83a 	sub	r2,r2,r7
   20f60:	90a5c83a 	sub	r18,r18,r2
   20f64:	2085883a 	add	r2,r4,r2
   20f68:	003faf06 	br	20e28 <_fseeko_r+0x298>
   20f6c:	81400717 	ldw	r5,28(r16)
   20f70:	01c00044 	movi	r7,1
   20f74:	000d883a 	mov	r6,zero
   20f78:	8809883a 	mov	r4,r17
   20f7c:	a03ee83a 	callr	r20
   20f80:	10ffffe0 	cmpeqi	r3,r2,-1
   20f84:	183f9b26 	beq	r3,zero,20df4 <_fseeko_r+0x264>
   20f88:	003f4206 	br	20c94 <_fseeko_r+0x104>
   20f8c:	8080030b 	ldhu	r2,12(r16)
   20f90:	003f3e06 	br	20c8c <_fseeko_r+0xfc>
   20f94:	b4a5c83a 	sub	r18,r22,r18
   20f98:	3c8f883a 	add	r7,r7,r18
   20f9c:	14a5c83a 	sub	r18,r2,r18
   20fa0:	81c00015 	stw	r7,0(r16)
   20fa4:	84800115 	stw	r18,4(r16)
   20fa8:	28000526 	beq	r5,zero,20fc0 <_fseeko_r+0x430>
   20fac:	80801004 	addi	r2,r16,64
   20fb0:	28800226 	beq	r5,r2,20fbc <_fseeko_r+0x42c>
   20fb4:	8809883a 	mov	r4,r17
   20fb8:	00240f40 	call	240f4 <_free_r>
   20fbc:	80000c15 	stw	zero,48(r16)
   20fc0:	80c0030b 	ldhu	r3,12(r16)
   20fc4:	80001705 	stb	zero,92(r16)
   20fc8:	18fff7cc 	andi	r3,r3,65503
   20fcc:	80c0030d 	sth	r3,12(r16)
   20fd0:	003fbd06 	br	20ec8 <_fseeko_r+0x338>
   20fd4:	00800744 	movi	r2,29
   20fd8:	88800015 	stw	r2,0(r17)
   20fdc:	04bfffc4 	movi	r18,-1
   20fe0:	003f0a06 	br	20c0c <_fseeko_r+0x7c>

00020fe4 <fseeko>:
   20fe4:	00c000f4 	movhi	r3,3
   20fe8:	2005883a 	mov	r2,r4
   20fec:	1908aa17 	ldw	r4,8872(r3)
   20ff0:	300f883a 	mov	r7,r6
   20ff4:	280d883a 	mov	r6,r5
   20ff8:	100b883a 	mov	r5,r2
   20ffc:	0020b901 	jmpi	20b90 <_fseeko_r>

00021000 <_fstat_r>:
   21000:	2807883a 	mov	r3,r5
   21004:	defffe04 	addi	sp,sp,-8
   21008:	dc000015 	stw	r16,0(sp)
   2100c:	008000f4 	movhi	r2,3
   21010:	300b883a 	mov	r5,r6
   21014:	2021883a 	mov	r16,r4
   21018:	1809883a 	mov	r4,r3
   2101c:	dfc00115 	stw	ra,4(sp)
   21020:	100fca15 	stw	zero,16168(r2)
   21024:	002d1680 	call	2d168 <fstat>
   21028:	10ffffd8 	cmpnei	r3,r2,-1
   2102c:	18000426 	beq	r3,zero,21040 <_fstat_r+0x40>
   21030:	dfc00117 	ldw	ra,4(sp)
   21034:	dc000017 	ldw	r16,0(sp)
   21038:	dec00204 	addi	sp,sp,8
   2103c:	f800283a 	ret
   21040:	00c000f4 	movhi	r3,3
   21044:	18cfca17 	ldw	r3,16168(r3)
   21048:	183ff926 	beq	r3,zero,21030 <_fstat_r+0x30>
   2104c:	80c00015 	stw	r3,0(r16)
   21050:	dfc00117 	ldw	ra,4(sp)
   21054:	dc000017 	ldw	r16,0(sp)
   21058:	dec00204 	addi	sp,sp,8
   2105c:	f800283a 	ret

00021060 <_getc_r>:
   21060:	defffd04 	addi	sp,sp,-12
   21064:	dc000115 	stw	r16,4(sp)
   21068:	dfc00215 	stw	ra,8(sp)
   2106c:	2021883a 	mov	r16,r4
   21070:	20000226 	beq	r4,zero,2107c <_getc_r+0x1c>
   21074:	20800e17 	ldw	r2,56(r4)
   21078:	10000c26 	beq	r2,zero,210ac <_getc_r+0x4c>
   2107c:	28800117 	ldw	r2,4(r5)
   21080:	10bfffc4 	addi	r2,r2,-1
   21084:	28800115 	stw	r2,4(r5)
   21088:	10000f16 	blt	r2,zero,210c8 <_getc_r+0x68>
   2108c:	28800017 	ldw	r2,0(r5)
   21090:	10c00044 	addi	r3,r2,1
   21094:	28c00015 	stw	r3,0(r5)
   21098:	10800003 	ldbu	r2,0(r2)
   2109c:	dfc00217 	ldw	ra,8(sp)
   210a0:	dc000117 	ldw	r16,4(sp)
   210a4:	dec00304 	addi	sp,sp,12
   210a8:	f800283a 	ret
   210ac:	d9400015 	stw	r5,0(sp)
   210b0:	0023ed80 	call	23ed8 <__sinit>
   210b4:	d9400017 	ldw	r5,0(sp)
   210b8:	28800117 	ldw	r2,4(r5)
   210bc:	10bfffc4 	addi	r2,r2,-1
   210c0:	28800115 	stw	r2,4(r5)
   210c4:	103ff10e 	bge	r2,zero,2108c <_getc_r+0x2c>
   210c8:	8009883a 	mov	r4,r16
   210cc:	dfc00217 	ldw	ra,8(sp)
   210d0:	dc000117 	ldw	r16,4(sp)
   210d4:	dec00304 	addi	sp,sp,12
   210d8:	0021d901 	jmpi	21d90 <__srget_r>

000210dc <getc>:
   210dc:	defffd04 	addi	sp,sp,-12
   210e0:	008000f4 	movhi	r2,3
   210e4:	dc400115 	stw	r17,4(sp)
   210e8:	1448aa17 	ldw	r17,8872(r2)
   210ec:	dc000015 	stw	r16,0(sp)
   210f0:	dfc00215 	stw	ra,8(sp)
   210f4:	2021883a 	mov	r16,r4
   210f8:	88000226 	beq	r17,zero,21104 <getc+0x28>
   210fc:	88800e17 	ldw	r2,56(r17)
   21100:	10000d26 	beq	r2,zero,21138 <getc+0x5c>
   21104:	80800117 	ldw	r2,4(r16)
   21108:	10bfffc4 	addi	r2,r2,-1
   2110c:	80800115 	stw	r2,4(r16)
   21110:	10000f16 	blt	r2,zero,21150 <getc+0x74>
   21114:	80800017 	ldw	r2,0(r16)
   21118:	10c00044 	addi	r3,r2,1
   2111c:	80c00015 	stw	r3,0(r16)
   21120:	10800003 	ldbu	r2,0(r2)
   21124:	dfc00217 	ldw	ra,8(sp)
   21128:	dc400117 	ldw	r17,4(sp)
   2112c:	dc000017 	ldw	r16,0(sp)
   21130:	dec00304 	addi	sp,sp,12
   21134:	f800283a 	ret
   21138:	8809883a 	mov	r4,r17
   2113c:	0023ed80 	call	23ed8 <__sinit>
   21140:	80800117 	ldw	r2,4(r16)
   21144:	10bfffc4 	addi	r2,r2,-1
   21148:	80800115 	stw	r2,4(r16)
   2114c:	103ff10e 	bge	r2,zero,21114 <getc+0x38>
   21150:	800b883a 	mov	r5,r16
   21154:	8809883a 	mov	r4,r17
   21158:	dfc00217 	ldw	ra,8(sp)
   2115c:	dc400117 	ldw	r17,4(sp)
   21160:	dc000017 	ldw	r16,0(sp)
   21164:	dec00304 	addi	sp,sp,12
   21168:	0021d901 	jmpi	21d90 <__srget_r>

0002116c <__swhatbuf_r>:
   2116c:	deffea04 	addi	sp,sp,-88
   21170:	dc001215 	stw	r16,72(sp)
   21174:	2821883a 	mov	r16,r5
   21178:	2940038f 	ldh	r5,14(r5)
   2117c:	dc801415 	stw	r18,80(sp)
   21180:	dc401315 	stw	r17,76(sp)
   21184:	dfc01515 	stw	ra,84(sp)
   21188:	3023883a 	mov	r17,r6
   2118c:	3825883a 	mov	r18,r7
   21190:	28001016 	blt	r5,zero,211d4 <__swhatbuf_r+0x68>
   21194:	d80d883a 	mov	r6,sp
   21198:	00210000 	call	21000 <_fstat_r>
   2119c:	10000d16 	blt	r2,zero,211d4 <__swhatbuf_r+0x68>
   211a0:	d8c00117 	ldw	r3,4(sp)
   211a4:	00820004 	movi	r2,2048
   211a8:	18fc000c 	andi	r3,r3,61440
   211ac:	18c80020 	cmpeqi	r3,r3,8192
   211b0:	90c00015 	stw	r3,0(r18)
   211b4:	00c10004 	movi	r3,1024
   211b8:	88c00015 	stw	r3,0(r17)
   211bc:	dfc01517 	ldw	ra,84(sp)
   211c0:	dc801417 	ldw	r18,80(sp)
   211c4:	dc401317 	ldw	r17,76(sp)
   211c8:	dc001217 	ldw	r16,72(sp)
   211cc:	dec01604 	addi	sp,sp,88
   211d0:	f800283a 	ret
   211d4:	8080030b 	ldhu	r2,12(r16)
   211d8:	90000015 	stw	zero,0(r18)
   211dc:	1080200c 	andi	r2,r2,128
   211e0:	10000426 	beq	r2,zero,211f4 <__swhatbuf_r+0x88>
   211e4:	00801004 	movi	r2,64
   211e8:	88800015 	stw	r2,0(r17)
   211ec:	0005883a 	mov	r2,zero
   211f0:	003ff206 	br	211bc <__swhatbuf_r+0x50>
   211f4:	00810004 	movi	r2,1024
   211f8:	88800015 	stw	r2,0(r17)
   211fc:	0005883a 	mov	r2,zero
   21200:	003fee06 	br	211bc <__swhatbuf_r+0x50>

00021204 <__smakebuf_r>:
   21204:	2880030b 	ldhu	r2,12(r5)
   21208:	defffa04 	addi	sp,sp,-24
   2120c:	dc000215 	stw	r16,8(sp)
   21210:	dfc00515 	stw	ra,20(sp)
   21214:	dc800415 	stw	r18,16(sp)
   21218:	dc400315 	stw	r17,12(sp)
   2121c:	1080008c 	andi	r2,r2,2
   21220:	2821883a 	mov	r16,r5
   21224:	10000b26 	beq	r2,zero,21254 <__smakebuf_r+0x50>
   21228:	288010c4 	addi	r2,r5,67
   2122c:	28800015 	stw	r2,0(r5)
   21230:	28800415 	stw	r2,16(r5)
   21234:	00800044 	movi	r2,1
   21238:	28800515 	stw	r2,20(r5)
   2123c:	dfc00517 	ldw	ra,20(sp)
   21240:	dc800417 	ldw	r18,16(sp)
   21244:	dc400317 	ldw	r17,12(sp)
   21248:	dc000217 	ldw	r16,8(sp)
   2124c:	dec00604 	addi	sp,sp,24
   21250:	f800283a 	ret
   21254:	d9c00104 	addi	r7,sp,4
   21258:	d80d883a 	mov	r6,sp
   2125c:	2023883a 	mov	r17,r4
   21260:	002116c0 	call	2116c <__swhatbuf_r>
   21264:	d9000117 	ldw	r4,4(sp)
   21268:	1025883a 	mov	r18,r2
   2126c:	2000131e 	bne	r4,zero,212bc <__smakebuf_r+0xb8>
   21270:	d9400017 	ldw	r5,0(sp)
   21274:	8809883a 	mov	r4,r17
   21278:	00213640 	call	21364 <_malloc_r>
   2127c:	10001c26 	beq	r2,zero,212f0 <__smakebuf_r+0xec>
   21280:	010000b4 	movhi	r4,2
   21284:	210ef504 	addi	r4,r4,15316
   21288:	80c0030b 	ldhu	r3,12(r16)
   2128c:	89000f15 	stw	r4,60(r17)
   21290:	80800015 	stw	r2,0(r16)
   21294:	80800415 	stw	r2,16(r16)
   21298:	d8800017 	ldw	r2,0(sp)
   2129c:	d9400117 	ldw	r5,4(sp)
   212a0:	18c02014 	ori	r3,r3,128
   212a4:	80c0030d 	sth	r3,12(r16)
   212a8:	80800515 	stw	r2,20(r16)
   212ac:	28001d1e 	bne	r5,zero,21324 <__smakebuf_r+0x120>
   212b0:	90c6b03a 	or	r3,r18,r3
   212b4:	80c0030d 	sth	r3,12(r16)
   212b8:	003fe006 	br	2123c <__smakebuf_r+0x38>
   212bc:	8140038f 	ldh	r5,14(r16)
   212c0:	8809883a 	mov	r4,r17
   212c4:	00251080 	call	25108 <_isatty_r>
   212c8:	103fe926 	beq	r2,zero,21270 <__smakebuf_r+0x6c>
   212cc:	8080030b 	ldhu	r2,12(r16)
   212d0:	80c010c4 	addi	r3,r16,67
   212d4:	80c00015 	stw	r3,0(r16)
   212d8:	10800054 	ori	r2,r2,1
   212dc:	8080030d 	sth	r2,12(r16)
   212e0:	00800044 	movi	r2,1
   212e4:	80c00415 	stw	r3,16(r16)
   212e8:	80800515 	stw	r2,20(r16)
   212ec:	003fe006 	br	21270 <__smakebuf_r+0x6c>
   212f0:	8080030b 	ldhu	r2,12(r16)
   212f4:	10c0800c 	andi	r3,r2,512
   212f8:	183fd01e 	bne	r3,zero,2123c <__smakebuf_r+0x38>
   212fc:	00ffff04 	movi	r3,-4
   21300:	10c4703a 	and	r2,r2,r3
   21304:	10800094 	ori	r2,r2,2
   21308:	80c010c4 	addi	r3,r16,67
   2130c:	8080030d 	sth	r2,12(r16)
   21310:	00800044 	movi	r2,1
   21314:	80c00015 	stw	r3,0(r16)
   21318:	80c00415 	stw	r3,16(r16)
   2131c:	80800515 	stw	r2,20(r16)
   21320:	003fc606 	br	2123c <__smakebuf_r+0x38>
   21324:	8140038f 	ldh	r5,14(r16)
   21328:	8809883a 	mov	r4,r17
   2132c:	00251080 	call	25108 <_isatty_r>
   21330:	80c0030b 	ldhu	r3,12(r16)
   21334:	103fde26 	beq	r2,zero,212b0 <__smakebuf_r+0xac>
   21338:	18ffff0c 	andi	r3,r3,65532
   2133c:	18c00054 	ori	r3,r3,1
   21340:	003fdb06 	br	212b0 <__smakebuf_r+0xac>

00021344 <malloc>:
   21344:	008000f4 	movhi	r2,3
   21348:	200b883a 	mov	r5,r4
   2134c:	1108aa17 	ldw	r4,8872(r2)
   21350:	00213641 	jmpi	21364 <_malloc_r>

00021354 <free>:
   21354:	008000f4 	movhi	r2,3
   21358:	200b883a 	mov	r5,r4
   2135c:	1108aa17 	ldw	r4,8872(r2)
   21360:	00240f41 	jmpi	240f4 <_free_r>

00021364 <_malloc_r>:
   21364:	defff604 	addi	sp,sp,-40
   21368:	dc400115 	stw	r17,4(sp)
   2136c:	2c4002c4 	addi	r17,r5,11
   21370:	dc800215 	stw	r18,8(sp)
   21374:	dfc00915 	stw	ra,36(sp)
   21378:	df000815 	stw	fp,32(sp)
   2137c:	ddc00715 	stw	r23,28(sp)
   21380:	dd800615 	stw	r22,24(sp)
   21384:	dd400515 	stw	r21,20(sp)
   21388:	dd000415 	stw	r20,16(sp)
   2138c:	dcc00315 	stw	r19,12(sp)
   21390:	dc000015 	stw	r16,0(sp)
   21394:	888005e8 	cmpgeui	r2,r17,23
   21398:	2025883a 	mov	r18,r4
   2139c:	10001b1e 	bne	r2,zero,2140c <_malloc_r+0xa8>
   213a0:	29400468 	cmpgeui	r5,r5,17
   213a4:	2800821e 	bne	r5,zero,215b0 <_malloc_r+0x24c>
   213a8:	002d89c0 	call	2d89c <__malloc_lock>
   213ac:	04400404 	movi	r17,16
   213b0:	01c00084 	movi	r7,2
   213b4:	00800604 	movi	r2,24
   213b8:	04c000f4 	movhi	r19,3
   213bc:	9cc2bb04 	addi	r19,r19,2796
   213c0:	9885883a 	add	r2,r19,r2
   213c4:	14000117 	ldw	r16,4(r2)
   213c8:	10fffe04 	addi	r3,r2,-8
   213cc:	80c08b26 	beq	r16,r3,215fc <_malloc_r+0x298>
   213d0:	80800117 	ldw	r2,4(r16)
   213d4:	81000317 	ldw	r4,12(r16)
   213d8:	00ffff04 	movi	r3,-4
   213dc:	10c4703a 	and	r2,r2,r3
   213e0:	81400217 	ldw	r5,8(r16)
   213e4:	8085883a 	add	r2,r16,r2
   213e8:	10c00117 	ldw	r3,4(r2)
   213ec:	29000315 	stw	r4,12(r5)
   213f0:	21400215 	stw	r5,8(r4)
   213f4:	18c00054 	ori	r3,r3,1
   213f8:	10c00115 	stw	r3,4(r2)
   213fc:	9009883a 	mov	r4,r18
   21400:	002d8c00 	call	2d8c0 <__malloc_unlock>
   21404:	80800204 	addi	r2,r16,8
   21408:	00006c06 	br	215bc <_malloc_r+0x258>
   2140c:	00bffe04 	movi	r2,-8
   21410:	88a2703a 	and	r17,r17,r2
   21414:	88006616 	blt	r17,zero,215b0 <_malloc_r+0x24c>
   21418:	89406536 	bltu	r17,r5,215b0 <_malloc_r+0x24c>
   2141c:	002d89c0 	call	2d89c <__malloc_lock>
   21420:	88807e28 	cmpgeui	r2,r17,504
   21424:	10012226 	beq	r2,zero,218b0 <_malloc_r+0x54c>
   21428:	8804d27a 	srli	r2,r17,9
   2142c:	10006f26 	beq	r2,zero,215ec <_malloc_r+0x288>
   21430:	10c00168 	cmpgeui	r3,r2,5
   21434:	1800fe1e 	bne	r3,zero,21830 <_malloc_r+0x4cc>
   21438:	8804d1ba 	srli	r2,r17,6
   2143c:	11c00e44 	addi	r7,r2,57
   21440:	380890fa 	slli	r4,r7,3
   21444:	12000e04 	addi	r8,r2,56
   21448:	04c000f4 	movhi	r19,3
   2144c:	9cc2bb04 	addi	r19,r19,2796
   21450:	9909883a 	add	r4,r19,r4
   21454:	24000117 	ldw	r16,4(r4)
   21458:	213ffe04 	addi	r4,r4,-8
   2145c:	24000b26 	beq	r4,r16,2148c <_malloc_r+0x128>
   21460:	01bfff04 	movi	r6,-4
   21464:	00000306 	br	21474 <_malloc_r+0x110>
   21468:	1800d60e 	bge	r3,zero,217c4 <_malloc_r+0x460>
   2146c:	84000317 	ldw	r16,12(r16)
   21470:	24000626 	beq	r4,r16,2148c <_malloc_r+0x128>
   21474:	80800117 	ldw	r2,4(r16)
   21478:	1184703a 	and	r2,r2,r6
   2147c:	1447c83a 	sub	r3,r2,r17
   21480:	19400408 	cmpgei	r5,r3,16
   21484:	283ff826 	beq	r5,zero,21468 <_malloc_r+0x104>
   21488:	400f883a 	mov	r7,r8
   2148c:	9c000417 	ldw	r16,16(r19)
   21490:	024000f4 	movhi	r9,3
   21494:	4a42bd04 	addi	r9,r9,2804
   21498:	82405f26 	beq	r16,r9,21618 <_malloc_r+0x2b4>
   2149c:	80c00117 	ldw	r3,4(r16)
   214a0:	00bfff04 	movi	r2,-4
   214a4:	1884703a 	and	r2,r3,r2
   214a8:	1447c83a 	sub	r3,r2,r17
   214ac:	19000410 	cmplti	r4,r3,16
   214b0:	20010a26 	beq	r4,zero,218dc <_malloc_r+0x578>
   214b4:	9a400515 	stw	r9,20(r19)
   214b8:	9a400415 	stw	r9,16(r19)
   214bc:	1800ff0e 	bge	r3,zero,218bc <_malloc_r+0x558>
   214c0:	10c08028 	cmpgeui	r3,r2,512
   214c4:	1800c11e 	bne	r3,zero,217cc <_malloc_r+0x468>
   214c8:	1006d0fa 	srli	r3,r2,3
   214cc:	1008d17a 	srli	r4,r2,5
   214d0:	00800044 	movi	r2,1
   214d4:	18c00044 	addi	r3,r3,1
   214d8:	180690fa 	slli	r3,r3,3
   214dc:	99400117 	ldw	r5,4(r19)
   214e0:	1104983a 	sll	r2,r2,r4
   214e4:	98c7883a 	add	r3,r19,r3
   214e8:	19000017 	ldw	r4,0(r3)
   214ec:	1144b03a 	or	r2,r2,r5
   214f0:	197ffe04 	addi	r5,r3,-8
   214f4:	81400315 	stw	r5,12(r16)
   214f8:	81000215 	stw	r4,8(r16)
   214fc:	98800115 	stw	r2,4(r19)
   21500:	1c000015 	stw	r16,0(r3)
   21504:	24000315 	stw	r16,12(r4)
   21508:	3807d0ba 	srai	r3,r7,2
   2150c:	01000044 	movi	r4,1
   21510:	20c8983a 	sll	r4,r4,r3
   21514:	11004536 	bltu	r2,r4,2162c <_malloc_r+0x2c8>
   21518:	2086703a 	and	r3,r4,r2
   2151c:	18000a1e 	bne	r3,zero,21548 <_malloc_r+0x1e4>
   21520:	00ffff04 	movi	r3,-4
   21524:	2109883a 	add	r4,r4,r4
   21528:	38ce703a 	and	r7,r7,r3
   2152c:	2086703a 	and	r3,r4,r2
   21530:	39c00104 	addi	r7,r7,4
   21534:	1800041e 	bne	r3,zero,21548 <_malloc_r+0x1e4>
   21538:	2109883a 	add	r4,r4,r4
   2153c:	2086703a 	and	r3,r4,r2
   21540:	39c00104 	addi	r7,r7,4
   21544:	183ffc26 	beq	r3,zero,21538 <_malloc_r+0x1d4>
   21548:	02bfff04 	movi	r10,-4
   2154c:	381690fa 	slli	r11,r7,3
   21550:	3819883a 	mov	r12,r7
   21554:	9ad7883a 	add	r11,r19,r11
   21558:	5811883a 	mov	r8,r11
   2155c:	40800317 	ldw	r2,12(r8)
   21560:	4080bc26 	beq	r8,r2,21854 <_malloc_r+0x4f0>
   21564:	10c00117 	ldw	r3,4(r2)
   21568:	1021883a 	mov	r16,r2
   2156c:	10800317 	ldw	r2,12(r2)
   21570:	1a86703a 	and	r3,r3,r10
   21574:	1c4bc83a 	sub	r5,r3,r17
   21578:	29800410 	cmplti	r6,r5,16
   2157c:	3000ba26 	beq	r6,zero,21868 <_malloc_r+0x504>
   21580:	283ff716 	blt	r5,zero,21560 <_malloc_r+0x1fc>
   21584:	80c7883a 	add	r3,r16,r3
   21588:	19400117 	ldw	r5,4(r3)
   2158c:	81800217 	ldw	r6,8(r16)
   21590:	9009883a 	mov	r4,r18
   21594:	29400054 	ori	r5,r5,1
   21598:	19400115 	stw	r5,4(r3)
   2159c:	30800315 	stw	r2,12(r6)
   215a0:	11800215 	stw	r6,8(r2)
   215a4:	002d8c00 	call	2d8c0 <__malloc_unlock>
   215a8:	80800204 	addi	r2,r16,8
   215ac:	00000306 	br	215bc <_malloc_r+0x258>
   215b0:	00800304 	movi	r2,12
   215b4:	90800015 	stw	r2,0(r18)
   215b8:	0005883a 	mov	r2,zero
   215bc:	dfc00917 	ldw	ra,36(sp)
   215c0:	df000817 	ldw	fp,32(sp)
   215c4:	ddc00717 	ldw	r23,28(sp)
   215c8:	dd800617 	ldw	r22,24(sp)
   215cc:	dd400517 	ldw	r21,20(sp)
   215d0:	dd000417 	ldw	r20,16(sp)
   215d4:	dcc00317 	ldw	r19,12(sp)
   215d8:	dc800217 	ldw	r18,8(sp)
   215dc:	dc400117 	ldw	r17,4(sp)
   215e0:	dc000017 	ldw	r16,0(sp)
   215e4:	dec00a04 	addi	sp,sp,40
   215e8:	f800283a 	ret
   215ec:	01008004 	movi	r4,512
   215f0:	01c01004 	movi	r7,64
   215f4:	02000fc4 	movi	r8,63
   215f8:	003f9306 	br	21448 <_malloc_r+0xe4>
   215fc:	14000317 	ldw	r16,12(r2)
   21600:	39c00084 	addi	r7,r7,2
   21604:	143f721e 	bne	r2,r16,213d0 <_malloc_r+0x6c>
   21608:	9c000417 	ldw	r16,16(r19)
   2160c:	024000f4 	movhi	r9,3
   21610:	4a42bd04 	addi	r9,r9,2804
   21614:	827fa11e 	bne	r16,r9,2149c <_malloc_r+0x138>
   21618:	3807d0ba 	srai	r3,r7,2
   2161c:	01000044 	movi	r4,1
   21620:	98800117 	ldw	r2,4(r19)
   21624:	20c8983a 	sll	r4,r4,r3
   21628:	113fbb2e 	bgeu	r2,r4,21518 <_malloc_r+0x1b4>
   2162c:	9c000217 	ldw	r16,8(r19)
   21630:	00bfff04 	movi	r2,-4
   21634:	85400117 	ldw	r21,4(r16)
   21638:	a8ac703a 	and	r22,r21,r2
   2163c:	b4400336 	bltu	r22,r17,2164c <_malloc_r+0x2e8>
   21640:	b445c83a 	sub	r2,r22,r17
   21644:	10c00408 	cmpgei	r3,r2,16
   21648:	1800541e 	bne	r3,zero,2179c <_malloc_r+0x438>
   2164c:	008000f4 	movhi	r2,3
   21650:	1088ab17 	ldw	r2,8876(r2)
   21654:	00c000f4 	movhi	r3,3
   21658:	1d4fcd17 	ldw	r21,16180(r3)
   2165c:	10bfffd8 	cmpnei	r2,r2,-1
   21660:	85b9883a 	add	fp,r16,r22
   21664:	8d6b883a 	add	r21,r17,r21
   21668:	1000d626 	beq	r2,zero,219c4 <_malloc_r+0x660>
   2166c:	ad4403c4 	addi	r21,r21,4111
   21670:	00bc0004 	movi	r2,-4096
   21674:	a8aa703a 	and	r21,r21,r2
   21678:	a80b883a 	mov	r5,r21
   2167c:	9009883a 	mov	r4,r18
   21680:	0021e140 	call	21e14 <_sbrk_r>
   21684:	102f883a 	mov	r23,r2
   21688:	10bfffd8 	cmpnei	r2,r2,-1
   2168c:	1000a826 	beq	r2,zero,21930 <_malloc_r+0x5cc>
   21690:	bf00a636 	bltu	r23,fp,2192c <_malloc_r+0x5c8>
   21694:	008000f4 	movhi	r2,3
   21698:	150fdc17 	ldw	r20,16240(r2)
   2169c:	ad29883a 	add	r20,r21,r20
   216a0:	150fdc15 	stw	r20,16240(r2)
   216a4:	a007883a 	mov	r3,r20
   216a8:	e5c0ec26 	beq	fp,r23,21a5c <_malloc_r+0x6f8>
   216ac:	008000f4 	movhi	r2,3
   216b0:	1088ab17 	ldw	r2,8876(r2)
   216b4:	10bfffd8 	cmpnei	r2,r2,-1
   216b8:	1000ef26 	beq	r2,zero,21a78 <_malloc_r+0x714>
   216bc:	bf39c83a 	sub	fp,r23,fp
   216c0:	e0c7883a 	add	r3,fp,r3
   216c4:	008000f4 	movhi	r2,3
   216c8:	10cfdc15 	stw	r3,16240(r2)
   216cc:	bf0001cc 	andi	fp,r23,7
   216d0:	e000c526 	beq	fp,zero,219e8 <_malloc_r+0x684>
   216d4:	bf2fc83a 	sub	r23,r23,fp
   216d8:	bdc00204 	addi	r23,r23,8
   216dc:	05040204 	movi	r20,4104
   216e0:	a729c83a 	sub	r20,r20,fp
   216e4:	bd6b883a 	add	r21,r23,r21
   216e8:	a569c83a 	sub	r20,r20,r21
   216ec:	a503ffcc 	andi	r20,r20,4095
   216f0:	a00b883a 	mov	r5,r20
   216f4:	9009883a 	mov	r4,r18
   216f8:	0021e140 	call	21e14 <_sbrk_r>
   216fc:	10ffffe0 	cmpeqi	r3,r2,-1
   21700:	1800f31e 	bne	r3,zero,21ad0 <_malloc_r+0x76c>
   21704:	15c5c83a 	sub	r2,r2,r23
   21708:	152b883a 	add	r21,r2,r20
   2170c:	008000f4 	movhi	r2,3
   21710:	114fdc17 	ldw	r5,16240(r2)
   21714:	9dc00215 	stw	r23,8(r19)
   21718:	ad400054 	ori	r21,r21,1
   2171c:	a169883a 	add	r20,r20,r5
   21720:	150fdc15 	stw	r20,16240(r2)
   21724:	bd400115 	stw	r21,4(r23)
   21728:	84c0d626 	beq	r16,r19,21a84 <_malloc_r+0x720>
   2172c:	b0800428 	cmpgeui	r2,r22,16
   21730:	1000d626 	beq	r2,zero,21a8c <_malloc_r+0x728>
   21734:	80c00117 	ldw	r3,4(r16)
   21738:	013ffe04 	movi	r4,-8
   2173c:	b0bffd04 	addi	r2,r22,-12
   21740:	1104703a 	and	r2,r2,r4
   21744:	18c0004c 	andi	r3,r3,1
   21748:	1886b03a 	or	r3,r3,r2
   2174c:	80c00115 	stw	r3,4(r16)
   21750:	01000144 	movi	r4,5
   21754:	8087883a 	add	r3,r16,r2
   21758:	19000115 	stw	r4,4(r3)
   2175c:	19000215 	stw	r4,8(r3)
   21760:	10800428 	cmpgeui	r2,r2,16
   21764:	1000df1e 	bne	r2,zero,21ae4 <_malloc_r+0x780>
   21768:	bd400117 	ldw	r21,4(r23)
   2176c:	b821883a 	mov	r16,r23
   21770:	008000f4 	movhi	r2,3
   21774:	108fcc17 	ldw	r2,16176(r2)
   21778:	1500022e 	bgeu	r2,r20,21784 <_malloc_r+0x420>
   2177c:	008000f4 	movhi	r2,3
   21780:	150fcc15 	stw	r20,16176(r2)
   21784:	008000f4 	movhi	r2,3
   21788:	108fcb17 	ldw	r2,16172(r2)
   2178c:	15006a2e 	bgeu	r2,r20,21938 <_malloc_r+0x5d4>
   21790:	008000f4 	movhi	r2,3
   21794:	150fcb15 	stw	r20,16172(r2)
   21798:	00006706 	br	21938 <_malloc_r+0x5d4>
   2179c:	88c00054 	ori	r3,r17,1
   217a0:	80c00115 	stw	r3,4(r16)
   217a4:	8463883a 	add	r17,r16,r17
   217a8:	10800054 	ori	r2,r2,1
   217ac:	9c400215 	stw	r17,8(r19)
   217b0:	88800115 	stw	r2,4(r17)
   217b4:	9009883a 	mov	r4,r18
   217b8:	002d8c00 	call	2d8c0 <__malloc_unlock>
   217bc:	80800204 	addi	r2,r16,8
   217c0:	003f7e06 	br	215bc <_malloc_r+0x258>
   217c4:	81000317 	ldw	r4,12(r16)
   217c8:	003f0506 	br	213e0 <_malloc_r+0x7c>
   217cc:	1006d27a 	srli	r3,r2,9
   217d0:	19000168 	cmpgeui	r4,r3,5
   217d4:	20005026 	beq	r4,zero,21918 <_malloc_r+0x5b4>
   217d8:	19000568 	cmpgeui	r4,r3,21
   217dc:	20008c1e 	bne	r4,zero,21a10 <_malloc_r+0x6ac>
   217e0:	19401704 	addi	r5,r3,92
   217e4:	280a90fa 	slli	r5,r5,3
   217e8:	190016c4 	addi	r4,r3,91
   217ec:	994b883a 	add	r5,r19,r5
   217f0:	28c00017 	ldw	r3,0(r5)
   217f4:	297ffe04 	addi	r5,r5,-8
   217f8:	28c07426 	beq	r5,r3,219cc <_malloc_r+0x668>
   217fc:	01bfff04 	movi	r6,-4
   21800:	19000117 	ldw	r4,4(r3)
   21804:	2188703a 	and	r4,r4,r6
   21808:	1100022e 	bgeu	r2,r4,21814 <_malloc_r+0x4b0>
   2180c:	18c00217 	ldw	r3,8(r3)
   21810:	28fffb1e 	bne	r5,r3,21800 <_malloc_r+0x49c>
   21814:	19400317 	ldw	r5,12(r3)
   21818:	98800117 	ldw	r2,4(r19)
   2181c:	81400315 	stw	r5,12(r16)
   21820:	80c00215 	stw	r3,8(r16)
   21824:	2c000215 	stw	r16,8(r5)
   21828:	1c000315 	stw	r16,12(r3)
   2182c:	003f3606 	br	21508 <_malloc_r+0x1a4>
   21830:	10c00568 	cmpgeui	r3,r2,21
   21834:	18004a26 	beq	r3,zero,21960 <_malloc_r+0x5fc>
   21838:	10c01568 	cmpgeui	r3,r2,85
   2183c:	18007b1e 	bne	r3,zero,21a2c <_malloc_r+0x6c8>
   21840:	8804d33a 	srli	r2,r17,12
   21844:	11c01bc4 	addi	r7,r2,111
   21848:	380890fa 	slli	r4,r7,3
   2184c:	12001b84 	addi	r8,r2,110
   21850:	003efd06 	br	21448 <_malloc_r+0xe4>
   21854:	63000044 	addi	r12,r12,1
   21858:	608000cc 	andi	r2,r12,3
   2185c:	42000204 	addi	r8,r8,8
   21860:	103f3e1e 	bne	r2,zero,2155c <_malloc_r+0x1f8>
   21864:	00004506 	br	2197c <_malloc_r+0x618>
   21868:	81000217 	ldw	r4,8(r16)
   2186c:	89800054 	ori	r6,r17,1
   21870:	81800115 	stw	r6,4(r16)
   21874:	20800315 	stw	r2,12(r4)
   21878:	11000215 	stw	r4,8(r2)
   2187c:	8463883a 	add	r17,r16,r17
   21880:	9c400515 	stw	r17,20(r19)
   21884:	9c400415 	stw	r17,16(r19)
   21888:	28800054 	ori	r2,r5,1
   2188c:	88800115 	stw	r2,4(r17)
   21890:	8a400315 	stw	r9,12(r17)
   21894:	8a400215 	stw	r9,8(r17)
   21898:	80c7883a 	add	r3,r16,r3
   2189c:	19400015 	stw	r5,0(r3)
   218a0:	9009883a 	mov	r4,r18
   218a4:	002d8c00 	call	2d8c0 <__malloc_unlock>
   218a8:	80800204 	addi	r2,r16,8
   218ac:	003f4306 	br	215bc <_malloc_r+0x258>
   218b0:	880ed0fa 	srli	r7,r17,3
   218b4:	88800204 	addi	r2,r17,8
   218b8:	003ebf06 	br	213b8 <_malloc_r+0x54>
   218bc:	8085883a 	add	r2,r16,r2
   218c0:	10c00117 	ldw	r3,4(r2)
   218c4:	9009883a 	mov	r4,r18
   218c8:	18c00054 	ori	r3,r3,1
   218cc:	10c00115 	stw	r3,4(r2)
   218d0:	002d8c00 	call	2d8c0 <__malloc_unlock>
   218d4:	80800204 	addi	r2,r16,8
   218d8:	003f3806 	br	215bc <_malloc_r+0x258>
   218dc:	89000054 	ori	r4,r17,1
   218e0:	81000115 	stw	r4,4(r16)
   218e4:	8463883a 	add	r17,r16,r17
   218e8:	9c400515 	stw	r17,20(r19)
   218ec:	9c400415 	stw	r17,16(r19)
   218f0:	19000054 	ori	r4,r3,1
   218f4:	89000115 	stw	r4,4(r17)
   218f8:	8085883a 	add	r2,r16,r2
   218fc:	8a400315 	stw	r9,12(r17)
   21900:	8a400215 	stw	r9,8(r17)
   21904:	10c00015 	stw	r3,0(r2)
   21908:	9009883a 	mov	r4,r18
   2190c:	002d8c00 	call	2d8c0 <__malloc_unlock>
   21910:	80800204 	addi	r2,r16,8
   21914:	003f2906 	br	215bc <_malloc_r+0x258>
   21918:	1006d1ba 	srli	r3,r2,6
   2191c:	19400e44 	addi	r5,r3,57
   21920:	280a90fa 	slli	r5,r5,3
   21924:	19000e04 	addi	r4,r3,56
   21928:	003fb006 	br	217ec <_malloc_r+0x488>
   2192c:	84c04626 	beq	r16,r19,21a48 <_malloc_r+0x6e4>
   21930:	9c000217 	ldw	r16,8(r19)
   21934:	85400117 	ldw	r21,4(r16)
   21938:	00bfff04 	movi	r2,-4
   2193c:	a8aa703a 	and	r21,r21,r2
   21940:	ac45c83a 	sub	r2,r21,r17
   21944:	ac400236 	bltu	r21,r17,21950 <_malloc_r+0x5ec>
   21948:	10c00408 	cmpgei	r3,r2,16
   2194c:	183f931e 	bne	r3,zero,2179c <_malloc_r+0x438>
   21950:	9009883a 	mov	r4,r18
   21954:	002d8c00 	call	2d8c0 <__malloc_unlock>
   21958:	0005883a 	mov	r2,zero
   2195c:	003f1706 	br	215bc <_malloc_r+0x258>
   21960:	11c01704 	addi	r7,r2,92
   21964:	380890fa 	slli	r4,r7,3
   21968:	120016c4 	addi	r8,r2,91
   2196c:	003eb606 	br	21448 <_malloc_r+0xe4>
   21970:	58800217 	ldw	r2,8(r11)
   21974:	39ffffc4 	addi	r7,r7,-1
   21978:	12c0701e 	bne	r2,r11,21b3c <_malloc_r+0x7d8>
   2197c:	388000cc 	andi	r2,r7,3
   21980:	5afffe04 	addi	r11,r11,-8
   21984:	103ffa1e 	bne	r2,zero,21970 <_malloc_r+0x60c>
   21988:	98c00117 	ldw	r3,4(r19)
   2198c:	0104303a 	nor	r2,zero,r4
   21990:	10c4703a 	and	r2,r2,r3
   21994:	98800115 	stw	r2,4(r19)
   21998:	2109883a 	add	r4,r4,r4
   2199c:	113f2336 	bltu	r2,r4,2162c <_malloc_r+0x2c8>
   219a0:	203f2226 	beq	r4,zero,2162c <_malloc_r+0x2c8>
   219a4:	2086703a 	and	r3,r4,r2
   219a8:	1800041e 	bne	r3,zero,219bc <_malloc_r+0x658>
   219ac:	2109883a 	add	r4,r4,r4
   219b0:	2086703a 	and	r3,r4,r2
   219b4:	63000104 	addi	r12,r12,4
   219b8:	183ffc26 	beq	r3,zero,219ac <_malloc_r+0x648>
   219bc:	600f883a 	mov	r7,r12
   219c0:	003ee206 	br	2154c <_malloc_r+0x1e8>
   219c4:	ad400404 	addi	r21,r21,16
   219c8:	003f2b06 	br	21678 <_malloc_r+0x314>
   219cc:	2009d0ba 	srai	r4,r4,2
   219d0:	00800044 	movi	r2,1
   219d4:	99800117 	ldw	r6,4(r19)
   219d8:	1104983a 	sll	r2,r2,r4
   219dc:	1184b03a 	or	r2,r2,r6
   219e0:	98800115 	stw	r2,4(r19)
   219e4:	003f8d06 	br	2181c <_malloc_r+0x4b8>
   219e8:	bd69883a 	add	r20,r23,r21
   219ec:	0529c83a 	sub	r20,zero,r20
   219f0:	a503ffcc 	andi	r20,r20,4095
   219f4:	a00b883a 	mov	r5,r20
   219f8:	9009883a 	mov	r4,r18
   219fc:	0021e140 	call	21e14 <_sbrk_r>
   21a00:	10ffffe0 	cmpeqi	r3,r2,-1
   21a04:	183f3f26 	beq	r3,zero,21704 <_malloc_r+0x3a0>
   21a08:	0029883a 	mov	r20,zero
   21a0c:	003f3f06 	br	2170c <_malloc_r+0x3a8>
   21a10:	19001568 	cmpgeui	r4,r3,85
   21a14:	2000201e 	bne	r4,zero,21a98 <_malloc_r+0x734>
   21a18:	1006d33a 	srli	r3,r2,12
   21a1c:	19401bc4 	addi	r5,r3,111
   21a20:	280a90fa 	slli	r5,r5,3
   21a24:	19001b84 	addi	r4,r3,110
   21a28:	003f7006 	br	217ec <_malloc_r+0x488>
   21a2c:	10c05568 	cmpgeui	r3,r2,341
   21a30:	1800201e 	bne	r3,zero,21ab4 <_malloc_r+0x750>
   21a34:	8804d3fa 	srli	r2,r17,15
   21a38:	11c01e04 	addi	r7,r2,120
   21a3c:	380890fa 	slli	r4,r7,3
   21a40:	12001dc4 	addi	r8,r2,119
   21a44:	003e8006 	br	21448 <_malloc_r+0xe4>
   21a48:	008000f4 	movhi	r2,3
   21a4c:	10cfdc17 	ldw	r3,16240(r2)
   21a50:	a8c7883a 	add	r3,r21,r3
   21a54:	10cfdc15 	stw	r3,16240(r2)
   21a58:	003f1406 	br	216ac <_malloc_r+0x348>
   21a5c:	e083ffcc 	andi	r2,fp,4095
   21a60:	103f121e 	bne	r2,zero,216ac <_malloc_r+0x348>
   21a64:	9c000217 	ldw	r16,8(r19)
   21a68:	b56b883a 	add	r21,r22,r21
   21a6c:	ad400054 	ori	r21,r21,1
   21a70:	85400115 	stw	r21,4(r16)
   21a74:	003f3e06 	br	21770 <_malloc_r+0x40c>
   21a78:	008000f4 	movhi	r2,3
   21a7c:	15c8ab15 	stw	r23,8876(r2)
   21a80:	003f1206 	br	216cc <_malloc_r+0x368>
   21a84:	b821883a 	mov	r16,r23
   21a88:	003f3906 	br	21770 <_malloc_r+0x40c>
   21a8c:	00800044 	movi	r2,1
   21a90:	b8800115 	stw	r2,4(r23)
   21a94:	003fae06 	br	21950 <_malloc_r+0x5ec>
   21a98:	19005568 	cmpgeui	r4,r3,341
   21a9c:	2000191e 	bne	r4,zero,21b04 <_malloc_r+0x7a0>
   21aa0:	1006d3fa 	srli	r3,r2,15
   21aa4:	19401e04 	addi	r5,r3,120
   21aa8:	280a90fa 	slli	r5,r5,3
   21aac:	19001dc4 	addi	r4,r3,119
   21ab0:	003f4e06 	br	217ec <_malloc_r+0x488>
   21ab4:	10815568 	cmpgeui	r2,r2,1365
   21ab8:	1000191e 	bne	r2,zero,21b20 <_malloc_r+0x7bc>
   21abc:	8804d4ba 	srli	r2,r17,18
   21ac0:	11c01f44 	addi	r7,r2,125
   21ac4:	380890fa 	slli	r4,r7,3
   21ac8:	12001f04 	addi	r8,r2,124
   21acc:	003e5e06 	br	21448 <_malloc_r+0xe4>
   21ad0:	e73ffe04 	addi	fp,fp,-8
   21ad4:	af2b883a 	add	r21,r21,fp
   21ad8:	adebc83a 	sub	r21,r21,r23
   21adc:	0029883a 	mov	r20,zero
   21ae0:	003f0a06 	br	2170c <_malloc_r+0x3a8>
   21ae4:	81400204 	addi	r5,r16,8
   21ae8:	9009883a 	mov	r4,r18
   21aec:	00240f40 	call	240f4 <_free_r>
   21af0:	9c000217 	ldw	r16,8(r19)
   21af4:	008000f4 	movhi	r2,3
   21af8:	150fdc17 	ldw	r20,16240(r2)
   21afc:	85400117 	ldw	r21,4(r16)
   21b00:	003f1b06 	br	21770 <_malloc_r+0x40c>
   21b04:	18c15568 	cmpgeui	r3,r3,1365
   21b08:	1800091e 	bne	r3,zero,21b30 <_malloc_r+0x7cc>
   21b0c:	1006d4ba 	srli	r3,r2,18
   21b10:	19401f44 	addi	r5,r3,125
   21b14:	280a90fa 	slli	r5,r5,3
   21b18:	19001f04 	addi	r4,r3,124
   21b1c:	003f3306 	br	217ec <_malloc_r+0x488>
   21b20:	0100fe04 	movi	r4,1016
   21b24:	01c01fc4 	movi	r7,127
   21b28:	02001f84 	movi	r8,126
   21b2c:	003e4606 	br	21448 <_malloc_r+0xe4>
   21b30:	0140fe04 	movi	r5,1016
   21b34:	01001f84 	movi	r4,126
   21b38:	003f2c06 	br	217ec <_malloc_r+0x488>
   21b3c:	98800117 	ldw	r2,4(r19)
   21b40:	003f9506 	br	21998 <_malloc_r+0x634>

00021b44 <_open_r>:
   21b44:	2807883a 	mov	r3,r5
   21b48:	defffe04 	addi	sp,sp,-8
   21b4c:	dc000015 	stw	r16,0(sp)
   21b50:	300b883a 	mov	r5,r6
   21b54:	008000f4 	movhi	r2,3
   21b58:	380d883a 	mov	r6,r7
   21b5c:	2021883a 	mov	r16,r4
   21b60:	1809883a 	mov	r4,r3
   21b64:	dfc00115 	stw	ra,4(sp)
   21b68:	100fca15 	stw	zero,16168(r2)
   21b6c:	002d9fc0 	call	2d9fc <open>
   21b70:	10ffffd8 	cmpnei	r3,r2,-1
   21b74:	18000426 	beq	r3,zero,21b88 <_open_r+0x44>
   21b78:	dfc00117 	ldw	ra,4(sp)
   21b7c:	dc000017 	ldw	r16,0(sp)
   21b80:	dec00204 	addi	sp,sp,8
   21b84:	f800283a 	ret
   21b88:	00c000f4 	movhi	r3,3
   21b8c:	18cfca17 	ldw	r3,16168(r3)
   21b90:	183ff926 	beq	r3,zero,21b78 <_open_r+0x34>
   21b94:	80c00015 	stw	r3,0(r16)
   21b98:	dfc00117 	ldw	ra,4(sp)
   21b9c:	dc000017 	ldw	r16,0(sp)
   21ba0:	dec00204 	addi	sp,sp,8
   21ba4:	f800283a 	ret

00021ba8 <lflush>:
   21ba8:	2080030b 	ldhu	r2,12(r4)
   21bac:	1080024c 	andi	r2,r2,9
   21bb0:	10800258 	cmpnei	r2,r2,9
   21bb4:	10000226 	beq	r2,zero,21bc0 <lflush+0x18>
   21bb8:	0005883a 	mov	r2,zero
   21bbc:	f800283a 	ret
   21bc0:	0023ba41 	jmpi	23ba4 <fflush>

00021bc4 <__srefill_r>:
   21bc4:	defffc04 	addi	sp,sp,-16
   21bc8:	dc400115 	stw	r17,4(sp)
   21bcc:	dc000015 	stw	r16,0(sp)
   21bd0:	dfc00315 	stw	ra,12(sp)
   21bd4:	dc800215 	stw	r18,8(sp)
   21bd8:	2023883a 	mov	r17,r4
   21bdc:	2821883a 	mov	r16,r5
   21be0:	20000226 	beq	r4,zero,21bec <__srefill_r+0x28>
   21be4:	20800e17 	ldw	r2,56(r4)
   21be8:	10003a26 	beq	r2,zero,21cd4 <__srefill_r+0x110>
   21bec:	80c0030b 	ldhu	r3,12(r16)
   21bf0:	1908000c 	andi	r4,r3,8192
   21bf4:	1805883a 	mov	r2,r3
   21bf8:	2000071e 	bne	r4,zero,21c18 <__srefill_r+0x54>
   21bfc:	81001917 	ldw	r4,100(r16)
   21c00:	18880014 	ori	r2,r3,8192
   21c04:	00f7ffc4 	movi	r3,-8193
   21c08:	20c8703a 	and	r4,r4,r3
   21c0c:	8080030d 	sth	r2,12(r16)
   21c10:	1007883a 	mov	r3,r2
   21c14:	81001915 	stw	r4,100(r16)
   21c18:	80000115 	stw	zero,4(r16)
   21c1c:	1100080c 	andi	r4,r2,32
   21c20:	20004d1e 	bne	r4,zero,21d58 <__srefill_r+0x194>
   21c24:	1100010c 	andi	r4,r2,4
   21c28:	20001c1e 	bne	r4,zero,21c9c <__srefill_r+0xd8>
   21c2c:	1100040c 	andi	r4,r2,16
   21c30:	20005126 	beq	r4,zero,21d78 <__srefill_r+0x1b4>
   21c34:	1080020c 	andi	r2,r2,8
   21c38:	1000371e 	bne	r2,zero,21d18 <__srefill_r+0x154>
   21c3c:	18c00114 	ori	r3,r3,4
   21c40:	80c0030d 	sth	r3,12(r16)
   21c44:	80800417 	ldw	r2,16(r16)
   21c48:	10003c26 	beq	r2,zero,21d3c <__srefill_r+0x178>
   21c4c:	8480030b 	ldhu	r18,12(r16)
   21c50:	908000cc 	andi	r2,r18,3
   21c54:	1000211e 	bne	r2,zero,21cdc <__srefill_r+0x118>
   21c58:	81800417 	ldw	r6,16(r16)
   21c5c:	80800817 	ldw	r2,32(r16)
   21c60:	81c00517 	ldw	r7,20(r16)
   21c64:	81400717 	ldw	r5,28(r16)
   21c68:	81800015 	stw	r6,0(r16)
   21c6c:	8809883a 	mov	r4,r17
   21c70:	103ee83a 	callr	r2
   21c74:	1007883a 	mov	r3,r2
   21c78:	80800115 	stw	r2,4(r16)
   21c7c:	0005883a 	mov	r2,zero
   21c80:	00c0370e 	bge	zero,r3,21d60 <__srefill_r+0x19c>
   21c84:	dfc00317 	ldw	ra,12(sp)
   21c88:	dc800217 	ldw	r18,8(sp)
   21c8c:	dc400117 	ldw	r17,4(sp)
   21c90:	dc000017 	ldw	r16,0(sp)
   21c94:	dec00404 	addi	sp,sp,16
   21c98:	f800283a 	ret
   21c9c:	81400c17 	ldw	r5,48(r16)
   21ca0:	283fe826 	beq	r5,zero,21c44 <__srefill_r+0x80>
   21ca4:	80801004 	addi	r2,r16,64
   21ca8:	28800226 	beq	r5,r2,21cb4 <__srefill_r+0xf0>
   21cac:	8809883a 	mov	r4,r17
   21cb0:	00240f40 	call	240f4 <_free_r>
   21cb4:	80800f17 	ldw	r2,60(r16)
   21cb8:	80000c15 	stw	zero,48(r16)
   21cbc:	80800115 	stw	r2,4(r16)
   21cc0:	103fe026 	beq	r2,zero,21c44 <__srefill_r+0x80>
   21cc4:	80c00e17 	ldw	r3,56(r16)
   21cc8:	0005883a 	mov	r2,zero
   21ccc:	80c00015 	stw	r3,0(r16)
   21cd0:	003fec06 	br	21c84 <__srefill_r+0xc0>
   21cd4:	0023ed80 	call	23ed8 <__sinit>
   21cd8:	003fc406 	br	21bec <__srefill_r+0x28>
   21cdc:	008000f4 	movhi	r2,3
   21ce0:	1108a917 	ldw	r4,8868(r2)
   21ce4:	014000b4 	movhi	r5,2
   21ce8:	00800044 	movi	r2,1
   21cec:	8080030d 	sth	r2,12(r16)
   21cf0:	2946ea04 	addi	r5,r5,7080
   21cf4:	00243f00 	call	243f0 <_fwalk>
   21cf8:	9080024c 	andi	r2,r18,9
   21cfc:	8480030d 	sth	r18,12(r16)
   21d00:	10800258 	cmpnei	r2,r2,9
   21d04:	103fd41e 	bne	r2,zero,21c58 <__srefill_r+0x94>
   21d08:	800b883a 	mov	r5,r16
   21d0c:	8809883a 	mov	r4,r17
   21d10:	002391c0 	call	2391c <__sflush_r>
   21d14:	003fd006 	br	21c58 <__srefill_r+0x94>
   21d18:	800b883a 	mov	r5,r16
   21d1c:	8809883a 	mov	r4,r17
   21d20:	0023b440 	call	23b44 <_fflush_r>
   21d24:	10000c1e 	bne	r2,zero,21d58 <__srefill_r+0x194>
   21d28:	80c0030b 	ldhu	r3,12(r16)
   21d2c:	80000215 	stw	zero,8(r16)
   21d30:	80000615 	stw	zero,24(r16)
   21d34:	18fffdcc 	andi	r3,r3,65527
   21d38:	003fc006 	br	21c3c <__srefill_r+0x78>
   21d3c:	800b883a 	mov	r5,r16
   21d40:	8809883a 	mov	r4,r17
   21d44:	00212040 	call	21204 <__smakebuf_r>
   21d48:	003fc006 	br	21c4c <__srefill_r+0x88>
   21d4c:	10801014 	ori	r2,r2,64
   21d50:	80000115 	stw	zero,4(r16)
   21d54:	8080030d 	sth	r2,12(r16)
   21d58:	00bfffc4 	movi	r2,-1
   21d5c:	003fc906 	br	21c84 <__srefill_r+0xc0>
   21d60:	8080030b 	ldhu	r2,12(r16)
   21d64:	183ff91e 	bne	r3,zero,21d4c <__srefill_r+0x188>
   21d68:	10800814 	ori	r2,r2,32
   21d6c:	8080030d 	sth	r2,12(r16)
   21d70:	00bfffc4 	movi	r2,-1
   21d74:	003fc306 	br	21c84 <__srefill_r+0xc0>
   21d78:	00800244 	movi	r2,9
   21d7c:	88800015 	stw	r2,0(r17)
   21d80:	18c01014 	ori	r3,r3,64
   21d84:	80c0030d 	sth	r3,12(r16)
   21d88:	00bfffc4 	movi	r2,-1
   21d8c:	003fbd06 	br	21c84 <__srefill_r+0xc0>

00021d90 <__srget_r>:
   21d90:	defffd04 	addi	sp,sp,-12
   21d94:	dc400115 	stw	r17,4(sp)
   21d98:	dc000015 	stw	r16,0(sp)
   21d9c:	dfc00215 	stw	ra,8(sp)
   21da0:	2023883a 	mov	r17,r4
   21da4:	2821883a 	mov	r16,r5
   21da8:	20000226 	beq	r4,zero,21db4 <__srget_r+0x24>
   21dac:	20800e17 	ldw	r2,56(r4)
   21db0:	10001026 	beq	r2,zero,21df4 <__srget_r+0x64>
   21db4:	800b883a 	mov	r5,r16
   21db8:	8809883a 	mov	r4,r17
   21dbc:	0021bc40 	call	21bc4 <__srefill_r>
   21dc0:	10000e1e 	bne	r2,zero,21dfc <__srget_r+0x6c>
   21dc4:	80c00017 	ldw	r3,0(r16)
   21dc8:	80800117 	ldw	r2,4(r16)
   21dcc:	19000044 	addi	r4,r3,1
   21dd0:	10bfffc4 	addi	r2,r2,-1
   21dd4:	80800115 	stw	r2,4(r16)
   21dd8:	81000015 	stw	r4,0(r16)
   21ddc:	18800003 	ldbu	r2,0(r3)
   21de0:	dfc00217 	ldw	ra,8(sp)
   21de4:	dc400117 	ldw	r17,4(sp)
   21de8:	dc000017 	ldw	r16,0(sp)
   21dec:	dec00304 	addi	sp,sp,12
   21df0:	f800283a 	ret
   21df4:	0023ed80 	call	23ed8 <__sinit>
   21df8:	003fee06 	br	21db4 <__srget_r+0x24>
   21dfc:	00bfffc4 	movi	r2,-1
   21e00:	003ff706 	br	21de0 <__srget_r+0x50>

00021e04 <__srget>:
   21e04:	008000f4 	movhi	r2,3
   21e08:	200b883a 	mov	r5,r4
   21e0c:	1108aa17 	ldw	r4,8872(r2)
   21e10:	0021d901 	jmpi	21d90 <__srget_r>

00021e14 <_sbrk_r>:
   21e14:	defffe04 	addi	sp,sp,-8
   21e18:	dc000015 	stw	r16,0(sp)
   21e1c:	008000f4 	movhi	r2,3
   21e20:	2021883a 	mov	r16,r4
   21e24:	2809883a 	mov	r4,r5
   21e28:	dfc00115 	stw	ra,4(sp)
   21e2c:	100fca15 	stw	zero,16168(r2)
   21e30:	002df6c0 	call	2df6c <sbrk>
   21e34:	10ffffd8 	cmpnei	r3,r2,-1
   21e38:	18000426 	beq	r3,zero,21e4c <_sbrk_r+0x38>
   21e3c:	dfc00117 	ldw	ra,4(sp)
   21e40:	dc000017 	ldw	r16,0(sp)
   21e44:	dec00204 	addi	sp,sp,8
   21e48:	f800283a 	ret
   21e4c:	00c000f4 	movhi	r3,3
   21e50:	18cfca17 	ldw	r3,16168(r3)
   21e54:	183ff926 	beq	r3,zero,21e3c <_sbrk_r+0x28>
   21e58:	80c00015 	stw	r3,0(r16)
   21e5c:	dfc00117 	ldw	ra,4(sp)
   21e60:	dc000017 	ldw	r16,0(sp)
   21e64:	dec00204 	addi	sp,sp,8
   21e68:	f800283a 	ret

00021e6c <__sread>:
   21e6c:	defffe04 	addi	sp,sp,-8
   21e70:	dc000015 	stw	r16,0(sp)
   21e74:	2821883a 	mov	r16,r5
   21e78:	2940038f 	ldh	r5,14(r5)
   21e7c:	dfc00115 	stw	ra,4(sp)
   21e80:	00265dc0 	call	265dc <_read_r>
   21e84:	10000716 	blt	r2,zero,21ea4 <__sread+0x38>
   21e88:	80c01417 	ldw	r3,80(r16)
   21e8c:	1887883a 	add	r3,r3,r2
   21e90:	80c01415 	stw	r3,80(r16)
   21e94:	dfc00117 	ldw	ra,4(sp)
   21e98:	dc000017 	ldw	r16,0(sp)
   21e9c:	dec00204 	addi	sp,sp,8
   21ea0:	f800283a 	ret
   21ea4:	80c0030b 	ldhu	r3,12(r16)
   21ea8:	18fbffcc 	andi	r3,r3,61439
   21eac:	80c0030d 	sth	r3,12(r16)
   21eb0:	dfc00117 	ldw	ra,4(sp)
   21eb4:	dc000017 	ldw	r16,0(sp)
   21eb8:	dec00204 	addi	sp,sp,8
   21ebc:	f800283a 	ret

00021ec0 <__seofread>:
   21ec0:	0005883a 	mov	r2,zero
   21ec4:	f800283a 	ret

00021ec8 <__swrite>:
   21ec8:	2880030b 	ldhu	r2,12(r5)
   21ecc:	defffb04 	addi	sp,sp,-20
   21ed0:	dcc00315 	stw	r19,12(sp)
   21ed4:	dc800215 	stw	r18,8(sp)
   21ed8:	dc400115 	stw	r17,4(sp)
   21edc:	dc000015 	stw	r16,0(sp)
   21ee0:	dfc00415 	stw	ra,16(sp)
   21ee4:	10c0400c 	andi	r3,r2,256
   21ee8:	2821883a 	mov	r16,r5
   21eec:	2023883a 	mov	r17,r4
   21ef0:	2940038f 	ldh	r5,14(r5)
   21ef4:	3025883a 	mov	r18,r6
   21ef8:	3827883a 	mov	r19,r7
   21efc:	18000c1e 	bne	r3,zero,21f30 <__swrite+0x68>
   21f00:	10bbffcc 	andi	r2,r2,61439
   21f04:	980f883a 	mov	r7,r19
   21f08:	900d883a 	mov	r6,r18
   21f0c:	8809883a 	mov	r4,r17
   21f10:	8080030d 	sth	r2,12(r16)
   21f14:	dfc00417 	ldw	ra,16(sp)
   21f18:	dcc00317 	ldw	r19,12(sp)
   21f1c:	dc800217 	ldw	r18,8(sp)
   21f20:	dc400117 	ldw	r17,4(sp)
   21f24:	dc000017 	ldw	r16,0(sp)
   21f28:	dec00504 	addi	sp,sp,20
   21f2c:	00238601 	jmpi	23860 <_write_r>
   21f30:	01c00084 	movi	r7,2
   21f34:	000d883a 	mov	r6,zero
   21f38:	00252000 	call	25200 <_lseek_r>
   21f3c:	8080030b 	ldhu	r2,12(r16)
   21f40:	8140038f 	ldh	r5,14(r16)
   21f44:	003fee06 	br	21f00 <__swrite+0x38>

00021f48 <__sseek>:
   21f48:	defffe04 	addi	sp,sp,-8
   21f4c:	dc000015 	stw	r16,0(sp)
   21f50:	2821883a 	mov	r16,r5
   21f54:	2940038f 	ldh	r5,14(r5)
   21f58:	dfc00115 	stw	ra,4(sp)
   21f5c:	00252000 	call	25200 <_lseek_r>
   21f60:	10ffffd8 	cmpnei	r3,r2,-1
   21f64:	18000826 	beq	r3,zero,21f88 <__sseek+0x40>
   21f68:	80c0030b 	ldhu	r3,12(r16)
   21f6c:	80801415 	stw	r2,80(r16)
   21f70:	18c40014 	ori	r3,r3,4096
   21f74:	80c0030d 	sth	r3,12(r16)
   21f78:	dfc00117 	ldw	ra,4(sp)
   21f7c:	dc000017 	ldw	r16,0(sp)
   21f80:	dec00204 	addi	sp,sp,8
   21f84:	f800283a 	ret
   21f88:	80c0030b 	ldhu	r3,12(r16)
   21f8c:	18fbffcc 	andi	r3,r3,61439
   21f90:	80c0030d 	sth	r3,12(r16)
   21f94:	dfc00117 	ldw	ra,4(sp)
   21f98:	dc000017 	ldw	r16,0(sp)
   21f9c:	dec00204 	addi	sp,sp,8
   21fa0:	f800283a 	ret

00021fa4 <__sclose>:
   21fa4:	2940038f 	ldh	r5,14(r5)
   21fa8:	00238c41 	jmpi	238c4 <_close_r>

00021fac <sulp>:
   21fac:	defffd04 	addi	sp,sp,-12
   21fb0:	dc400115 	stw	r17,4(sp)
   21fb4:	3023883a 	mov	r17,r6
   21fb8:	dc000015 	stw	r16,0(sp)
   21fbc:	dfc00215 	stw	ra,8(sp)
   21fc0:	2821883a 	mov	r16,r5
   21fc4:	00261380 	call	26138 <__ulp>
   21fc8:	88000c26 	beq	r17,zero,21ffc <sulp+0x50>
   21fcc:	8020d53a 	srli	r16,r16,20
   21fd0:	01c01ac4 	movi	r7,107
   21fd4:	8401ffcc 	andi	r16,r16,2047
   21fd8:	3c21c83a 	sub	r16,r7,r16
   21fdc:	0400070e 	bge	zero,r16,21ffc <sulp+0x50>
   21fe0:	8020953a 	slli	r16,r16,20
   21fe4:	01cffc34 	movhi	r7,16368
   21fe8:	1009883a 	mov	r4,r2
   21fec:	180b883a 	mov	r5,r3
   21ff0:	000d883a 	mov	r6,zero
   21ff4:	81cf883a 	add	r7,r16,r7
   21ff8:	002bb700 	call	2bb70 <__muldf3>
   21ffc:	dfc00217 	ldw	ra,8(sp)
   22000:	dc400117 	ldw	r17,4(sp)
   22004:	dc000017 	ldw	r16,0(sp)
   22008:	dec00304 	addi	sp,sp,12
   2200c:	f800283a 	ret

00022010 <_strtod_l>:
   22010:	deffdf04 	addi	sp,sp,-132
   22014:	008000f4 	movhi	r2,3
   22018:	dd401c15 	stw	r21,112(sp)
   2201c:	15403417 	ldw	r21,208(r2)
   22020:	dc001715 	stw	r16,92(sp)
   22024:	2021883a 	mov	r16,r4
   22028:	a809883a 	mov	r4,r21
   2202c:	dd801d15 	stw	r22,116(sp)
   22030:	dd001b15 	stw	r20,108(sp)
   22034:	282d883a 	mov	r22,r5
   22038:	dc801915 	stw	r18,100(sp)
   2203c:	dc401815 	stw	r17,96(sp)
   22040:	d9800315 	stw	r6,12(sp)
   22044:	dfc02015 	stw	ra,128(sp)
   22048:	df001f15 	stw	fp,124(sp)
   2204c:	ddc01e15 	stw	r23,120(sp)
   22050:	dcc01a15 	stw	r19,104(sp)
   22054:	3829883a 	mov	r20,r7
   22058:	d8001315 	stw	zero,76(sp)
   2205c:	00266f80 	call	266f8 <strlen>
   22060:	100d883a 	mov	r6,r2
   22064:	0025883a 	mov	r18,zero
   22068:	0023883a 	mov	r17,zero
   2206c:	dd801215 	stw	r22,72(sp)
   22070:	b007883a 	mov	r3,r22
   22074:	1cc00003 	ldbu	r19,0(r3)
   22078:	010000b4 	movhi	r4,2
   2207c:	1813883a 	mov	r9,r3
   22080:	98803fcc 	andi	r2,r19,255
   22084:	100a90ba 	slli	r5,r2,2
   22088:	10800ba8 	cmpgeui	r2,r2,46
   2208c:	1000311e 	bne	r2,zero,22154 <_strtod_l+0x144>
   22090:	2909883a 	add	r4,r5,r4
   22094:	20882717 	ldw	r2,8348(r4)
   22098:	1000683a 	jmp	r2
   2209c:	00022208 	cmpgei	zero,zero,2184
   220a0:	00022154 	movui	zero,2181
   220a4:	00022154 	movui	zero,2181
   220a8:	00022154 	movui	zero,2181
   220ac:	00022154 	movui	zero,2181
   220b0:	00022154 	movui	zero,2181
   220b4:	00022154 	movui	zero,2181
   220b8:	00022154 	movui	zero,2181
   220bc:	00022154 	movui	zero,2181
   220c0:	00022258 	cmpnei	zero,zero,2185
   220c4:	00022258 	cmpnei	zero,zero,2185
   220c8:	00022258 	cmpnei	zero,zero,2185
   220cc:	00022258 	cmpnei	zero,zero,2185
   220d0:	00022258 	cmpnei	zero,zero,2185
   220d4:	00022154 	movui	zero,2181
   220d8:	00022154 	movui	zero,2181
   220dc:	00022154 	movui	zero,2181
   220e0:	00022154 	movui	zero,2181
   220e4:	00022154 	movui	zero,2181
   220e8:	00022154 	movui	zero,2181
   220ec:	00022154 	movui	zero,2181
   220f0:	00022154 	movui	zero,2181
   220f4:	00022154 	movui	zero,2181
   220f8:	00022154 	movui	zero,2181
   220fc:	00022154 	movui	zero,2181
   22100:	00022154 	movui	zero,2181
   22104:	00022154 	movui	zero,2181
   22108:	00022154 	movui	zero,2181
   2210c:	00022154 	movui	zero,2181
   22110:	00022154 	movui	zero,2181
   22114:	00022154 	movui	zero,2181
   22118:	00022154 	movui	zero,2181
   2211c:	00022258 	cmpnei	zero,zero,2185
   22120:	00022154 	movui	zero,2181
   22124:	00022154 	movui	zero,2181
   22128:	00022154 	movui	zero,2181
   2212c:	00022154 	movui	zero,2181
   22130:	00022154 	movui	zero,2181
   22134:	00022154 	movui	zero,2181
   22138:	00022154 	movui	zero,2181
   2213c:	00022154 	movui	zero,2181
   22140:	00022154 	movui	zero,2181
   22144:	00022154 	movui	zero,2181
   22148:	00022e60 	cmpeqi	zero,zero,2233
   2214c:	00022154 	movui	zero,2181
   22150:	00022e3c 	xorhi	zero,zero,2232
   22154:	9cc03fcc 	andi	r19,r19,255
   22158:	9cc0201c 	xori	r19,r19,128
   2215c:	d8000415 	stw	zero,16(sp)
   22160:	9cffe004 	addi	r19,r19,-128
   22164:	98800c18 	cmpnei	r2,r19,48
   22168:	10008426 	beq	r2,zero,2237c <_strtod_l+0x36c>
   2216c:	0023883a 	mov	r17,zero
   22170:	98800c08 	cmpgei	r2,r19,48
   22174:	9825883a 	mov	r18,r19
   22178:	1003d526 	beq	r2,zero,230d0 <_strtod_l+0x10c0>
   2217c:	4829883a 	mov	r20,r9
   22180:	0011883a 	mov	r8,zero
   22184:	0039883a 	mov	fp,zero
   22188:	002f883a 	mov	r23,zero
   2218c:	00000806 	br	221b0 <_strtod_l+0x1a0>
   22190:	1f3ff404 	addi	fp,r3,-48
   22194:	a5000044 	addi	r20,r20,1
   22198:	dd001215 	stw	r20,72(sp)
   2219c:	a4800007 	ldb	r18,0(r20)
   221a0:	bdc00044 	addi	r23,r23,1
   221a4:	90800c10 	cmplti	r2,r18,48
   221a8:	9027883a 	mov	r19,r18
   221ac:	1000881e 	bne	r2,zero,223d0 <_strtod_l+0x3c0>
   221b0:	e00690ba 	slli	r3,fp,2
   221b4:	400490ba 	slli	r2,r8,2
   221b8:	99000e90 	cmplti	r4,r19,58
   221bc:	1f07883a 	add	r3,r3,fp
   221c0:	1205883a 	add	r2,r2,r8
   221c4:	18c7883a 	add	r3,r3,r3
   221c8:	1085883a 	add	r2,r2,r2
   221cc:	b9400248 	cmpgei	r5,r23,9
   221d0:	1cc7883a 	add	r3,r3,r19
   221d4:	14c5883a 	add	r2,r2,r19
   221d8:	20002226 	beq	r4,zero,22264 <_strtod_l+0x254>
   221dc:	283fec26 	beq	r5,zero,22190 <_strtod_l+0x180>
   221e0:	123ff404 	addi	r8,r2,-48
   221e4:	003feb06 	br	22194 <_strtod_l+0x184>
   221e8:	90c01960 	cmpeqi	r3,r18,101
   221ec:	01c00044 	movi	r7,1
   221f0:	1800c01e 	bne	r3,zero,224f4 <_strtod_l+0x4e4>
   221f4:	90c01160 	cmpeqi	r3,r18,69
   221f8:	18008326 	beq	r3,zero,22408 <_strtod_l+0x3f8>
   221fc:	b800bd1e 	bne	r23,zero,224f4 <_strtod_l+0x4e4>
   22200:	8886b03a 	or	r3,r17,r2
   22204:	1800ba1e 	bne	r3,zero,224f0 <_strtod_l+0x4e0>
   22208:	d8800317 	ldw	r2,12(sp)
   2220c:	10000226 	beq	r2,zero,22218 <_strtod_l+0x208>
   22210:	d8800317 	ldw	r2,12(sp)
   22214:	15800015 	stw	r22,0(r2)
   22218:	002d883a 	mov	r22,zero
   2221c:	002b883a 	mov	r21,zero
   22220:	b005883a 	mov	r2,r22
   22224:	a807883a 	mov	r3,r21
   22228:	dfc02017 	ldw	ra,128(sp)
   2222c:	df001f17 	ldw	fp,124(sp)
   22230:	ddc01e17 	ldw	r23,120(sp)
   22234:	dd801d17 	ldw	r22,116(sp)
   22238:	dd401c17 	ldw	r21,112(sp)
   2223c:	dd001b17 	ldw	r20,108(sp)
   22240:	dcc01a17 	ldw	r19,104(sp)
   22244:	dc801917 	ldw	r18,100(sp)
   22248:	dc401817 	ldw	r17,96(sp)
   2224c:	dc001717 	ldw	r16,92(sp)
   22250:	dec02104 	addi	sp,sp,132
   22254:	f800283a 	ret
   22258:	18c00044 	addi	r3,r3,1
   2225c:	d8c01215 	stw	r3,72(sp)
   22260:	003f8406 	br	22074 <_strtod_l+0x64>
   22264:	a80b883a 	mov	r5,r21
   22268:	a009883a 	mov	r4,r20
   2226c:	da000615 	stw	r8,24(sp)
   22270:	da400515 	stw	r9,20(sp)
   22274:	d9800715 	stw	r6,28(sp)
   22278:	00267900 	call	26790 <strncmp>
   2227c:	da400517 	ldw	r9,20(sp)
   22280:	da000617 	ldw	r8,24(sp)
   22284:	10004b1e 	bne	r2,zero,223b4 <_strtod_l+0x3a4>
   22288:	d9800717 	ldw	r6,28(sp)
   2228c:	a18d883a 	add	r6,r20,r6
   22290:	d9801215 	stw	r6,72(sp)
   22294:	34800007 	ldb	r18,0(r6)
   22298:	b803f81e 	bne	r23,zero,2327c <_strtod_l+0x126c>
   2229c:	90800c18 	cmpnei	r2,r18,48
   222a0:	1003ae1e 	bne	r2,zero,2315c <_strtod_l+0x114c>
   222a4:	d8c01217 	ldw	r3,72(sp)
   222a8:	01400044 	movi	r5,1
   222ac:	28cbc83a 	sub	r5,r5,r3
   222b0:	1945883a 	add	r2,r3,r5
   222b4:	18c00044 	addi	r3,r3,1
   222b8:	d8c01215 	stw	r3,72(sp)
   222bc:	1c800007 	ldb	r18,0(r3)
   222c0:	91000c20 	cmpeqi	r4,r18,48
   222c4:	203ffa1e 	bne	r4,zero,222b0 <_strtod_l+0x2a0>
   222c8:	90fff3c4 	addi	r3,r18,-49
   222cc:	18c00268 	cmpgeui	r3,r3,9
   222d0:	1802851e 	bne	r3,zero,22ce8 <_strtod_l+0xcd8>
   222d4:	da401217 	ldw	r9,72(sp)
   222d8:	94bff404 	addi	r18,r18,-48
   222dc:	15000044 	addi	r20,r2,1
   222e0:	480f883a 	mov	r7,r9
   222e4:	002b883a 	mov	r21,zero
   222e8:	05c00044 	movi	r23,1
   222ec:	e00690ba 	slli	r3,fp,2
   222f0:	0005883a 	mov	r2,zero
   222f4:	1f39883a 	add	fp,r3,fp
   222f8:	e739883a 	add	fp,fp,fp
   222fc:	9739883a 	add	fp,r18,fp
   22300:	38c00044 	addi	r3,r7,1
   22304:	d8c01215 	stw	r3,72(sp)
   22308:	3c800047 	ldb	r18,1(r7)
   2230c:	91bff404 	addi	r6,r18,-48
   22310:	30c002b0 	cmpltui	r3,r6,10
   22314:	183fb426 	beq	r3,zero,221e8 <_strtod_l+0x1d8>
   22318:	d9c01217 	ldw	r7,72(sp)
   2231c:	10800044 	addi	r2,r2,1
   22320:	3025883a 	mov	r18,r6
   22324:	303ff626 	beq	r6,zero,22300 <_strtod_l+0x2f0>
   22328:	10c00060 	cmpeqi	r3,r2,1
   2232c:	b9000044 	addi	r4,r23,1
   22330:	a0a9883a 	add	r20,r20,r2
   22334:	1804961e 	bne	r3,zero,23590 <_strtod_l+0x1580>
   22338:	15c5883a 	add	r2,r2,r23
   2233c:	12ffffc4 	addi	r11,r2,-1
   22340:	00000306 	br	22350 <_strtod_l+0x340>
   22344:	18f9883a 	add	fp,r3,r3
   22348:	282f883a 	mov	r23,r5
   2234c:	2ac35426 	beq	r5,r11,230a0 <_strtod_l+0x1090>
   22350:	e00690ba 	slli	r3,fp,2
   22354:	b9400044 	addi	r5,r23,1
   22358:	b9000248 	cmpgei	r4,r23,9
   2235c:	1f07883a 	add	r3,r3,fp
   22360:	2a800448 	cmpgei	r10,r5,17
   22364:	203ff726 	beq	r4,zero,22344 <_strtod_l+0x334>
   22368:	400690ba 	slli	r3,r8,2
   2236c:	503ff61e 	bne	r10,zero,22348 <_strtod_l+0x338>
   22370:	1a11883a 	add	r8,r3,r8
   22374:	4211883a 	add	r8,r8,r8
   22378:	003ff306 	br	22348 <_strtod_l+0x338>
   2237c:	48800043 	ldbu	r2,1(r9)
   22380:	4dc00044 	addi	r23,r9,1
   22384:	108037cc 	andi	r2,r2,223
   22388:	10801618 	cmpnei	r2,r2,88
   2238c:	10032c26 	beq	r2,zero,23040 <_strtod_l+0x1030>
   22390:	ddc01215 	stw	r23,72(sp)
   22394:	bcc00007 	ldb	r19,0(r23)
   22398:	b813883a 	mov	r9,r23
   2239c:	bdc00044 	addi	r23,r23,1
   223a0:	98800c20 	cmpeqi	r2,r19,48
   223a4:	103ffa1e 	bne	r2,zero,22390 <_strtod_l+0x380>
   223a8:	98009d26 	beq	r19,zero,22620 <_strtod_l+0x610>
   223ac:	04400044 	movi	r17,1
   223b0:	003f6f06 	br	22170 <_strtod_l+0x160>
   223b4:	9cc01960 	cmpeqi	r19,r19,101
   223b8:	b82b883a 	mov	r21,r23
   223bc:	0005883a 	mov	r2,zero
   223c0:	0029883a 	mov	r20,zero
   223c4:	000f883a 	mov	r7,zero
   223c8:	983f8c1e 	bne	r19,zero,221fc <_strtod_l+0x1ec>
   223cc:	003f8906 	br	221f4 <_strtod_l+0x1e4>
   223d0:	a80b883a 	mov	r5,r21
   223d4:	a009883a 	mov	r4,r20
   223d8:	da400715 	stw	r9,28(sp)
   223dc:	da000615 	stw	r8,24(sp)
   223e0:	d9800515 	stw	r6,20(sp)
   223e4:	00267900 	call	26790 <strncmp>
   223e8:	d9800517 	ldw	r6,20(sp)
   223ec:	da000617 	ldw	r8,24(sp)
   223f0:	da400717 	ldw	r9,28(sp)
   223f4:	10009426 	beq	r2,zero,22648 <_strtod_l+0x638>
   223f8:	b82b883a 	mov	r21,r23
   223fc:	000f883a 	mov	r7,zero
   22400:	0029883a 	mov	r20,zero
   22404:	0005883a 	mov	r2,zero
   22408:	0027883a 	mov	r19,zero
   2240c:	b8006d26 	beq	r23,zero,225c4 <_strtod_l+0x5b4>
   22410:	9d05c83a 	sub	r2,r19,r20
   22414:	d8800915 	stw	r2,36(sp)
   22418:	a800011e 	bne	r21,zero,22420 <_strtod_l+0x410>
   2241c:	b82b883a 	mov	r21,r23
   22420:	b8800450 	cmplti	r2,r23,17
   22424:	b82d883a 	mov	r22,r23
   22428:	1000011e 	bne	r2,zero,22430 <_strtod_l+0x420>
   2242c:	05800404 	movi	r22,16
   22430:	e009883a 	mov	r4,fp
   22434:	da400515 	stw	r9,20(sp)
   22438:	da000615 	stw	r8,24(sp)
   2243c:	002cd5c0 	call	2cd5c <__floatunsidf>
   22440:	b9000290 	cmplti	r4,r23,10
   22444:	da400517 	ldw	r9,20(sp)
   22448:	1025883a 	mov	r18,r2
   2244c:	1823883a 	mov	r17,r3
   22450:	2000171e 	bne	r4,zero,224b0 <_strtod_l+0x4a0>
   22454:	b0bffdc4 	addi	r2,r22,-9
   22458:	100690fa 	slli	r3,r2,3
   2245c:	008000f4 	movhi	r2,3
   22460:	10806104 	addi	r2,r2,388
   22464:	10c5883a 	add	r2,r2,r3
   22468:	11800017 	ldw	r6,0(r2)
   2246c:	11c00117 	ldw	r7,4(r2)
   22470:	880b883a 	mov	r5,r17
   22474:	9009883a 	mov	r4,r18
   22478:	002bb700 	call	2bb70 <__muldf3>
   2247c:	da000617 	ldw	r8,24(sp)
   22480:	1025883a 	mov	r18,r2
   22484:	1823883a 	mov	r17,r3
   22488:	4009883a 	mov	r4,r8
   2248c:	002cd5c0 	call	2cd5c <__floatunsidf>
   22490:	9009883a 	mov	r4,r18
   22494:	880b883a 	mov	r5,r17
   22498:	100d883a 	mov	r6,r2
   2249c:	180f883a 	mov	r7,r3
   224a0:	002a6640 	call	2a664 <__adddf3>
   224a4:	da400517 	ldw	r9,20(sp)
   224a8:	1025883a 	mov	r18,r2
   224ac:	1823883a 	mov	r17,r3
   224b0:	b8800408 	cmpgei	r2,r23,16
   224b4:	10006a1e 	bne	r2,zero,22660 <_strtod_l+0x650>
   224b8:	9d05c83a 	sub	r2,r19,r20
   224bc:	1002f526 	beq	r2,zero,23094 <_strtod_l+0x1084>
   224c0:	9d05c83a 	sub	r2,r19,r20
   224c4:	0082720e 	bge	zero,r2,22e90 <_strtod_l+0xe80>
   224c8:	108005c8 	cmpgei	r2,r2,23
   224cc:	10035e26 	beq	r2,zero,23248 <_strtod_l+0x1238>
   224d0:	00800944 	movi	r2,37
   224d4:	15c5c83a 	sub	r2,r2,r23
   224d8:	9d07c83a 	sub	r3,r19,r20
   224dc:	10c36f0e 	bge	r2,r3,2329c <_strtod_l+0x128c>
   224e0:	bdadc83a 	sub	r22,r23,r22
   224e4:	9d05c83a 	sub	r2,r19,r20
   224e8:	b0ad883a 	add	r22,r22,r2
   224ec:	00006006 	br	22670 <_strtod_l+0x660>
   224f0:	002f883a 	mov	r23,zero
   224f4:	dd801217 	ldw	r22,72(sp)
   224f8:	b0c00044 	addi	r3,r22,1
   224fc:	d8c01215 	stw	r3,72(sp)
   22500:	b4800047 	ldb	r18,1(r22)
   22504:	90c00ae0 	cmpeqi	r3,r18,43
   22508:	1801f51e 	bne	r3,zero,22ce0 <_strtod_l+0xcd0>
   2250c:	90c00b60 	cmpeqi	r3,r18,45
   22510:	1801c11e 	bne	r3,zero,22c18 <_strtod_l+0xc08>
   22514:	0015883a 	mov	r10,zero
   22518:	90fff404 	addi	r3,r18,-48
   2251c:	18c002a8 	cmpgeui	r3,r3,10
   22520:	1801ba1e 	bne	r3,zero,22c0c <_strtod_l+0xbfc>
   22524:	90c00c18 	cmpnei	r3,r18,48
   22528:	1800071e 	bne	r3,zero,22548 <_strtod_l+0x538>
   2252c:	d8c01217 	ldw	r3,72(sp)
   22530:	18c00044 	addi	r3,r3,1
   22534:	d8c01215 	stw	r3,72(sp)
   22538:	1c800007 	ldb	r18,0(r3)
   2253c:	18c00044 	addi	r3,r3,1
   22540:	91000c20 	cmpeqi	r4,r18,48
   22544:	203ffb1e 	bne	r4,zero,22534 <_strtod_l+0x524>
   22548:	90fff3c4 	addi	r3,r18,-49
   2254c:	18c00268 	cmpgeui	r3,r3,9
   22550:	183fad1e 	bne	r3,zero,22408 <_strtod_l+0x3f8>
   22554:	dac01217 	ldw	r11,72(sp)
   22558:	94fff404 	addi	r19,r18,-48
   2255c:	59000044 	addi	r4,r11,1
   22560:	d9001215 	stw	r4,72(sp)
   22564:	5c800047 	ldb	r18,1(r11)
   22568:	90c00c08 	cmpgei	r3,r18,48
   2256c:	1800071e 	bne	r3,zero,2258c <_strtod_l+0x57c>
   22570:	0002e406 	br	23104 <_strtod_l+0x10f4>
   22574:	21000044 	addi	r4,r4,1
   22578:	d9001215 	stw	r4,72(sp)
   2257c:	34800047 	ldb	r18,1(r6)
   22580:	1cfff404 	addi	r19,r3,-48
   22584:	90c00c08 	cmpgei	r3,r18,48
   22588:	18000726 	beq	r3,zero,225a8 <_strtod_l+0x598>
   2258c:	980690ba 	slli	r3,r19,2
   22590:	91400e90 	cmplti	r5,r18,58
   22594:	200d883a 	mov	r6,r4
   22598:	1cc7883a 	add	r3,r3,r19
   2259c:	18c7883a 	add	r3,r3,r3
   225a0:	1c87883a 	add	r3,r3,r18
   225a4:	283ff31e 	bne	r5,zero,22574 <_strtod_l+0x564>
   225a8:	22c9c83a 	sub	r4,r4,r11
   225ac:	20c00248 	cmpgei	r3,r4,9
   225b0:	1802d426 	beq	r3,zero,23104 <_strtod_l+0x10f4>
   225b4:	04d387c4 	movi	r19,19999
   225b8:	503f9426 	beq	r10,zero,2240c <_strtod_l+0x3fc>
   225bc:	04e7c83a 	sub	r19,zero,r19
   225c0:	b83f931e 	bne	r23,zero,22410 <_strtod_l+0x400>
   225c4:	8884b03a 	or	r2,r17,r2
   225c8:	1000151e 	bne	r2,zero,22620 <_strtod_l+0x610>
   225cc:	383f0e1e 	bne	r7,zero,22208 <_strtod_l+0x1f8>
   225d0:	90801a60 	cmpeqi	r2,r18,105
   225d4:	1002d01e 	bne	r2,zero,23118 <_strtod_l+0x1108>
   225d8:	90801a88 	cmpgei	r2,r18,106
   225dc:	1002401e 	bne	r2,zero,22ee0 <_strtod_l+0xed0>
   225e0:	90801260 	cmpeqi	r2,r18,73
   225e4:	1002cc1e 	bne	r2,zero,23118 <_strtod_l+0x1108>
   225e8:	948013a0 	cmpeqi	r18,r18,78
   225ec:	903f0626 	beq	r18,zero,22208 <_strtod_l+0x1f8>
   225f0:	014000f4 	movhi	r5,3
   225f4:	297fc704 	addi	r5,r5,-228
   225f8:	d9001204 	addi	r4,sp,72
   225fc:	0024e500 	call	24e50 <__match>
   22600:	103f0126 	beq	r2,zero,22208 <_strtod_l+0x1f8>
   22604:	d8801217 	ldw	r2,72(sp)
   22608:	10800007 	ldb	r2,0(r2)
   2260c:	10800a18 	cmpnei	r2,r2,40
   22610:	10039826 	beq	r2,zero,23474 <_strtod_l+0x1464>
   22614:	002d883a 	mov	r22,zero
   22618:	055ffe34 	movhi	r21,32760
   2261c:	00000206 	br	22628 <_strtod_l+0x618>
   22620:	002d883a 	mov	r22,zero
   22624:	002b883a 	mov	r21,zero
   22628:	d8c00317 	ldw	r3,12(sp)
   2262c:	18000226 	beq	r3,zero,22638 <_strtod_l+0x628>
   22630:	d8801217 	ldw	r2,72(sp)
   22634:	18800015 	stw	r2,0(r3)
   22638:	d8800417 	ldw	r2,16(sp)
   2263c:	103ef826 	beq	r2,zero,22220 <_strtod_l+0x210>
   22640:	ad60003c 	xorhi	r21,r21,32768
   22644:	003ef606 	br	22220 <_strtod_l+0x210>
   22648:	a18d883a 	add	r6,r20,r6
   2264c:	d9801215 	stw	r6,72(sp)
   22650:	34800007 	ldb	r18,0(r6)
   22654:	b82b883a 	mov	r21,r23
   22658:	0029883a 	mov	r20,zero
   2265c:	003f2b06 	br	2230c <_strtod_l+0x2fc>
   22660:	bdadc83a 	sub	r22,r23,r22
   22664:	9d05c83a 	sub	r2,r19,r20
   22668:	b0ad883a 	add	r22,r22,r2
   2266c:	05821f0e 	bge	zero,r22,22eec <_strtod_l+0xedc>
   22670:	b08003cc 	andi	r2,r22,15
   22674:	10000d26 	beq	r2,zero,226ac <_strtod_l+0x69c>
   22678:	100690fa 	slli	r3,r2,3
   2267c:	008000f4 	movhi	r2,3
   22680:	10806104 	addi	r2,r2,388
   22684:	10c5883a 	add	r2,r2,r3
   22688:	11000017 	ldw	r4,0(r2)
   2268c:	11400117 	ldw	r5,4(r2)
   22690:	900d883a 	mov	r6,r18
   22694:	880f883a 	mov	r7,r17
   22698:	da400515 	stw	r9,20(sp)
   2269c:	002bb700 	call	2bb70 <__muldf3>
   226a0:	da400517 	ldw	r9,20(sp)
   226a4:	1025883a 	mov	r18,r2
   226a8:	1823883a 	mov	r17,r3
   226ac:	023ffc04 	movi	r8,-16
   226b0:	b210703a 	and	r8,r22,r8
   226b4:	40003f26 	beq	r8,zero,227b4 <_strtod_l+0x7a4>
   226b8:	40804d50 	cmplti	r2,r8,309
   226bc:	10025b26 	beq	r2,zero,2302c <_strtod_l+0x101c>
   226c0:	4011d13a 	srai	r8,r8,4
   226c4:	40800090 	cmplti	r2,r8,2
   226c8:	1003651e 	bne	r2,zero,23460 <_strtod_l+0x1450>
   226cc:	008000f4 	movhi	r2,3
   226d0:	10805704 	addi	r2,r2,348
   226d4:	002d883a 	mov	r22,zero
   226d8:	9009883a 	mov	r4,r18
   226dc:	880b883a 	mov	r5,r17
   226e0:	dc000715 	stw	r16,28(sp)
   226e4:	dc800815 	stw	r18,32(sp)
   226e8:	d8800515 	stw	r2,20(sp)
   226ec:	b025883a 	mov	r18,r22
   226f0:	0007883a 	mov	r3,zero
   226f4:	882d883a 	mov	r22,r17
   226f8:	da400615 	stw	r9,24(sp)
   226fc:	4021883a 	mov	r16,r8
   22700:	1023883a 	mov	r17,r2
   22704:	8080004c 	andi	r2,r16,1
   22708:	8021d07a 	srai	r16,r16,1
   2270c:	10000626 	beq	r2,zero,22728 <_strtod_l+0x718>
   22710:	89800017 	ldw	r6,0(r17)
   22714:	89c00117 	ldw	r7,4(r17)
   22718:	002bb700 	call	2bb70 <__muldf3>
   2271c:	180b883a 	mov	r5,r3
   22720:	1009883a 	mov	r4,r2
   22724:	00c00044 	movi	r3,1
   22728:	81800058 	cmpnei	r6,r16,1
   2272c:	94800044 	addi	r18,r18,1
   22730:	8c400204 	addi	r17,r17,8
   22734:	303ff31e 	bne	r6,zero,22704 <_strtod_l+0x6f4>
   22738:	18c03fcc 	andi	r3,r3,255
   2273c:	b023883a 	mov	r17,r22
   22740:	da400617 	ldw	r9,24(sp)
   22744:	902d883a 	mov	r22,r18
   22748:	dc000717 	ldw	r16,28(sp)
   2274c:	dc800817 	ldw	r18,32(sp)
   22750:	18000226 	beq	r3,zero,2275c <_strtod_l+0x74c>
   22754:	2025883a 	mov	r18,r4
   22758:	2823883a 	mov	r17,r5
   2275c:	d8800517 	ldw	r2,20(sp)
   22760:	b01690fa 	slli	r11,r22,3
   22764:	01ff2c34 	movhi	r7,64688
   22768:	900d883a 	mov	r6,r18
   2276c:	12d7883a 	add	r11,r2,r11
   22770:	59000017 	ldw	r4,0(r11)
   22774:	59400117 	ldw	r5,4(r11)
   22778:	89cf883a 	add	r7,r17,r7
   2277c:	da400615 	stw	r9,24(sp)
   22780:	002bb700 	call	2bb70 <__muldf3>
   22784:	191ffc2c 	andhi	r4,r3,32752
   22788:	015f2834 	movhi	r5,31904
   2278c:	1025883a 	mov	r18,r2
   22790:	29022636 	bltu	r5,r4,2302c <_strtod_l+0x101c>
   22794:	009f2434 	movhi	r2,31888
   22798:	da400617 	ldw	r9,24(sp)
   2279c:	1103022e 	bgeu	r2,r4,233a8 <_strtod_l+0x1398>
   227a0:	045ffc34 	movhi	r17,32752
   227a4:	8c7fffc4 	addi	r17,r17,-1
   227a8:	04bfffc4 	movi	r18,-1
   227ac:	d8001015 	stw	zero,64(sp)
   227b0:	00000106 	br	227b8 <_strtod_l+0x7a8>
   227b4:	d8001015 	stw	zero,64(sp)
   227b8:	df000015 	stw	fp,0(sp)
   227bc:	b80f883a 	mov	r7,r23
   227c0:	a80d883a 	mov	r6,r21
   227c4:	480b883a 	mov	r5,r9
   227c8:	8009883a 	mov	r4,r16
   227cc:	00256c80 	call	256c8 <__s2b>
   227d0:	d8800715 	stw	r2,28(sp)
   227d4:	10021526 	beq	r2,zero,2302c <_strtod_l+0x101c>
   227d8:	d8c00917 	ldw	r3,36(sp)
   227dc:	a4e7c83a 	sub	r19,r20,r19
   227e0:	1805d7fa 	srai	r2,r3,31
   227e4:	d8c00815 	stw	r3,32(sp)
   227e8:	9884703a 	and	r2,r19,r2
   227ec:	d8800515 	stw	r2,20(sp)
   227f0:	18019d16 	blt	r3,zero,22e68 <_strtod_l+0xe58>
   227f4:	d8c00717 	ldw	r3,28(sp)
   227f8:	00800434 	movhi	r2,16
   227fc:	dd401017 	ldw	r21,64(sp)
   22800:	18c00304 	addi	r3,r3,12
   22804:	10bfffc4 	addi	r2,r2,-1
   22808:	002f883a 	mov	r23,zero
   2280c:	0027883a 	mov	r19,zero
   22810:	d8c00d15 	stw	r3,52(sp)
   22814:	d8801115 	stw	r2,68(sp)
   22818:	dd800717 	ldw	r22,28(sp)
   2281c:	8009883a 	mov	r4,r16
   22820:	b1400117 	ldw	r5,4(r22)
   22824:	00254a40 	call	254a4 <_Balloc>
   22828:	1029883a 	mov	r20,r2
   2282c:	1000ce26 	beq	r2,zero,22b68 <_strtod_l+0xb58>
   22830:	b1800417 	ldw	r6,16(r22)
   22834:	d9400d17 	ldw	r5,52(sp)
   22838:	11000304 	addi	r4,r2,12
   2283c:	31800084 	addi	r6,r6,2
   22840:	300c90ba 	slli	r6,r6,2
   22844:	dc800b15 	stw	r18,44(sp)
   22848:	dc400a15 	stw	r17,40(sp)
   2284c:	00252b40 	call	252b4 <memcpy>
   22850:	d8801504 	addi	r2,sp,84
   22854:	d9c01404 	addi	r7,sp,80
   22858:	d8800015 	stw	r2,0(sp)
   2285c:	900b883a 	mov	r5,r18
   22860:	880d883a 	mov	r6,r17
   22864:	8009883a 	mov	r4,r16
   22868:	00262980 	call	26298 <__d2b>
   2286c:	d8801315 	stw	r2,76(sp)
   22870:	1000b526 	beq	r2,zero,22b48 <_strtod_l+0xb38>
   22874:	01400044 	movi	r5,1
   22878:	8009883a 	mov	r4,r16
   2287c:	00259140 	call	25914 <__i2b>
   22880:	1027883a 	mov	r19,r2
   22884:	1000b826 	beq	r2,zero,22b68 <_strtod_l+0xb58>
   22888:	d8801417 	ldw	r2,80(sp)
   2288c:	1000d316 	blt	r2,zero,22bdc <_strtod_l+0xbcc>
   22890:	d8c00517 	ldw	r3,20(sp)
   22894:	d9c00817 	ldw	r7,32(sp)
   22898:	10f9883a 	add	fp,r2,r3
   2289c:	d9001517 	ldw	r4,84(sp)
   228a0:	1545c83a 	sub	r2,r2,r21
   228a4:	00c00d84 	movi	r3,54
   228a8:	1105883a 	add	r2,r2,r4
   228ac:	10bfffc4 	addi	r2,r2,-1
   228b0:	117f0088 	cmpgei	r5,r2,-1022
   228b4:	1907c83a 	sub	r3,r3,r4
   228b8:	2800b81e 	bne	r5,zero,22b9c <_strtod_l+0xb8c>
   228bc:	05bf0084 	movi	r22,-1022
   228c0:	b089c83a 	sub	r4,r22,r2
   228c4:	21400808 	cmpgei	r5,r4,32
   228c8:	1907c83a 	sub	r3,r3,r4
   228cc:	2800c71e 	bne	r5,zero,22bec <_strtod_l+0xbdc>
   228d0:	05800044 	movi	r22,1
   228d4:	b104983a 	sll	r2,r22,r4
   228d8:	d8000e15 	stw	zero,56(sp)
   228dc:	d8800c15 	stw	r2,48(sp)
   228e0:	38cf883a 	add	r7,r7,r3
   228e4:	e0c7883a 	add	r3,fp,r3
   228e8:	a9ed883a 	add	r22,r21,r7
   228ec:	e005883a 	mov	r2,fp
   228f0:	1f00010e 	bge	r3,fp,228f8 <_strtod_l+0x8e8>
   228f4:	1805883a 	mov	r2,r3
   228f8:	b080010e 	bge	r22,r2,22900 <_strtod_l+0x8f0>
   228fc:	b005883a 	mov	r2,r22
   22900:	0080030e 	bge	zero,r2,22910 <_strtod_l+0x900>
   22904:	1887c83a 	sub	r3,r3,r2
   22908:	b0adc83a 	sub	r22,r22,r2
   2290c:	e0b9c83a 	sub	fp,fp,r2
   22910:	d9800517 	ldw	r6,20(sp)
   22914:	01806f16 	blt	zero,r6,22ad4 <_strtod_l+0xac4>
   22918:	00c08516 	blt	zero,r3,22b30 <_strtod_l+0xb20>
   2291c:	d8800917 	ldw	r2,36(sp)
   22920:	00808b16 	blt	zero,r2,22b50 <_strtod_l+0xb40>
   22924:	05809616 	blt	zero,r22,22b80 <_strtod_l+0xb70>
   22928:	0700060e 	bge	zero,fp,22944 <_strtod_l+0x934>
   2292c:	980b883a 	mov	r5,r19
   22930:	e00d883a 	mov	r6,fp
   22934:	8009883a 	mov	r4,r16
   22938:	0025d2c0 	call	25d2c <__lshift>
   2293c:	1027883a 	mov	r19,r2
   22940:	10008926 	beq	r2,zero,22b68 <_strtod_l+0xb58>
   22944:	d9401317 	ldw	r5,76(sp)
   22948:	a00d883a 	mov	r6,r20
   2294c:	8009883a 	mov	r4,r16
   22950:	0025f0c0 	call	25f0c <__mdiff>
   22954:	102f883a 	mov	r23,r2
   22958:	10008326 	beq	r2,zero,22b68 <_strtod_l+0xb58>
   2295c:	10800317 	ldw	r2,12(r2)
   22960:	980b883a 	mov	r5,r19
   22964:	b8000315 	stw	zero,12(r23)
   22968:	b809883a 	mov	r4,r23
   2296c:	d8800615 	stw	r2,24(sp)
   22970:	0025eb40 	call	25eb4 <__mcmp>
   22974:	10029016 	blt	r2,zero,233b8 <_strtod_l+0x13a8>
   22978:	10026126 	beq	r2,zero,23300 <_strtod_l+0x12f0>
   2297c:	980b883a 	mov	r5,r19
   22980:	b809883a 	mov	r4,r23
   22984:	00263fc0 	call	263fc <__ratio>
   22988:	000d883a 	mov	r6,zero
   2298c:	01d00034 	movhi	r7,16384
   22990:	1009883a 	mov	r4,r2
   22994:	180b883a 	mov	r5,r3
   22998:	1039883a 	mov	fp,r2
   2299c:	182d883a 	mov	r22,r3
   229a0:	002ba800 	call	2ba80 <__ledf2>
   229a4:	00808116 	blt	zero,r2,22bac <_strtod_l+0xb9c>
   229a8:	d8800617 	ldw	r2,24(sp)
   229ac:	10009f26 	beq	r2,zero,22c2c <_strtod_l+0xc1c>
   229b0:	0011883a 	mov	r8,zero
   229b4:	024ffc34 	movhi	r9,16368
   229b8:	d8000c15 	stw	zero,48(sp)
   229bc:	058ffc34 	movhi	r22,16368
   229c0:	8f1ffc2c 	andhi	fp,r17,32752
   229c4:	009ff834 	movhi	r2,32736
   229c8:	e080a326 	beq	fp,r2,22c58 <_strtod_l+0xc48>
   229cc:	a8001d26 	beq	r21,zero,22a44 <_strtod_l+0xa34>
   229d0:	0081a834 	movhi	r2,1696
   229d4:	17001b36 	bltu	r2,fp,22a44 <_strtod_l+0xa34>
   229d8:	d9000c17 	ldw	r4,48(sp)
   229dc:	01d07834 	movhi	r7,16864
   229e0:	01bff034 	movhi	r6,65472
   229e4:	39ffffc4 	addi	r7,r7,-1
   229e8:	b00b883a 	mov	r5,r22
   229ec:	da400b15 	stw	r9,44(sp)
   229f0:	da000a15 	stw	r8,40(sp)
   229f4:	002ba800 	call	2ba80 <__ledf2>
   229f8:	da000a17 	ldw	r8,40(sp)
   229fc:	da400b17 	ldw	r9,44(sp)
   22a00:	00800d16 	blt	zero,r2,22a38 <_strtod_l+0xa28>
   22a04:	d9000c17 	ldw	r4,48(sp)
   22a08:	b00b883a 	mov	r5,r22
   22a0c:	002953c0 	call	2953c <__fixunsdfsi>
   22a10:	1009883a 	mov	r4,r2
   22a14:	1000011e 	bne	r2,zero,22a1c <_strtod_l+0xa0c>
   22a18:	01000044 	movi	r4,1
   22a1c:	002cd5c0 	call	2cd5c <__floatunsidf>
   22a20:	1011883a 	mov	r8,r2
   22a24:	d8800c15 	stw	r2,48(sp)
   22a28:	d8800617 	ldw	r2,24(sp)
   22a2c:	182d883a 	mov	r22,r3
   22a30:	1001b71e 	bne	r2,zero,23110 <_strtod_l+0x1100>
   22a34:	1a60003c 	xorhi	r9,r3,32768
   22a38:	0081ac34 	movhi	r2,1712
   22a3c:	4893883a 	add	r9,r9,r2
   22a40:	4f13c83a 	sub	r9,r9,fp
   22a44:	9009883a 	mov	r4,r18
   22a48:	880b883a 	mov	r5,r17
   22a4c:	da400b15 	stw	r9,44(sp)
   22a50:	da000a15 	stw	r8,40(sp)
   22a54:	00261380 	call	26138 <__ulp>
   22a58:	da000a17 	ldw	r8,40(sp)
   22a5c:	da400b17 	ldw	r9,44(sp)
   22a60:	100d883a 	mov	r6,r2
   22a64:	4009883a 	mov	r4,r8
   22a68:	480b883a 	mov	r5,r9
   22a6c:	180f883a 	mov	r7,r3
   22a70:	002bb700 	call	2bb70 <__muldf3>
   22a74:	900d883a 	mov	r6,r18
   22a78:	880f883a 	mov	r7,r17
   22a7c:	1009883a 	mov	r4,r2
   22a80:	180b883a 	mov	r5,r3
   22a84:	002a6640 	call	2a664 <__adddf3>
   22a88:	1823883a 	mov	r17,r3
   22a8c:	1025883a 	mov	r18,r2
   22a90:	1811883a 	mov	r8,r3
   22a94:	a800021e 	bne	r21,zero,22aa0 <_strtod_l+0xa90>
   22a98:	409ffc2c 	andhi	r2,r8,32752
   22a9c:	e0809826 	beq	fp,r2,22d00 <_strtod_l+0xcf0>
   22aa0:	d9401317 	ldw	r5,76(sp)
   22aa4:	8009883a 	mov	r4,r16
   22aa8:	00255480 	call	25548 <_Bfree>
   22aac:	a00b883a 	mov	r5,r20
   22ab0:	8009883a 	mov	r4,r16
   22ab4:	00255480 	call	25548 <_Bfree>
   22ab8:	980b883a 	mov	r5,r19
   22abc:	8009883a 	mov	r4,r16
   22ac0:	00255480 	call	25548 <_Bfree>
   22ac4:	b80b883a 	mov	r5,r23
   22ac8:	8009883a 	mov	r4,r16
   22acc:	00255480 	call	25548 <_Bfree>
   22ad0:	003f5106 	br	22818 <_strtod_l+0x808>
   22ad4:	980b883a 	mov	r5,r19
   22ad8:	8009883a 	mov	r4,r16
   22adc:	d8c00615 	stw	r3,24(sp)
   22ae0:	0025c140 	call	25c14 <__pow5mult>
   22ae4:	d8c00617 	ldw	r3,24(sp)
   22ae8:	1027883a 	mov	r19,r2
   22aec:	10001e26 	beq	r2,zero,22b68 <_strtod_l+0xb58>
   22af0:	d9801317 	ldw	r6,76(sp)
   22af4:	100b883a 	mov	r5,r2
   22af8:	8009883a 	mov	r4,r16
   22afc:	d8c00615 	stw	r3,24(sp)
   22b00:	00259680 	call	25968 <__multiply>
   22b04:	d8c00617 	ldw	r3,24(sp)
   22b08:	10001726 	beq	r2,zero,22b68 <_strtod_l+0xb58>
   22b0c:	d9401317 	ldw	r5,76(sp)
   22b10:	8009883a 	mov	r4,r16
   22b14:	d8800f15 	stw	r2,60(sp)
   22b18:	d8c00615 	stw	r3,24(sp)
   22b1c:	00255480 	call	25548 <_Bfree>
   22b20:	d8800f17 	ldw	r2,60(sp)
   22b24:	d8c00617 	ldw	r3,24(sp)
   22b28:	d8801315 	stw	r2,76(sp)
   22b2c:	00ff7b0e 	bge	zero,r3,2291c <_strtod_l+0x90c>
   22b30:	d9401317 	ldw	r5,76(sp)
   22b34:	180d883a 	mov	r6,r3
   22b38:	8009883a 	mov	r4,r16
   22b3c:	0025d2c0 	call	25d2c <__lshift>
   22b40:	d8801315 	stw	r2,76(sp)
   22b44:	103f751e 	bne	r2,zero,2291c <_strtod_l+0x90c>
   22b48:	1013883a 	mov	r9,r2
   22b4c:	00000706 	br	22b6c <_strtod_l+0xb5c>
   22b50:	d9800817 	ldw	r6,32(sp)
   22b54:	a00b883a 	mov	r5,r20
   22b58:	8009883a 	mov	r4,r16
   22b5c:	0025c140 	call	25c14 <__pow5mult>
   22b60:	1029883a 	mov	r20,r2
   22b64:	103f6f1e 	bne	r2,zero,22924 <_strtod_l+0x914>
   22b68:	da401317 	ldw	r9,76(sp)
   22b6c:	00800884 	movi	r2,34
   22b70:	80800015 	stw	r2,0(r16)
   22b74:	002d883a 	mov	r22,zero
   22b78:	055ffc34 	movhi	r21,32752
   22b7c:	00008806 	br	22da0 <_strtod_l+0xd90>
   22b80:	a00b883a 	mov	r5,r20
   22b84:	b00d883a 	mov	r6,r22
   22b88:	8009883a 	mov	r4,r16
   22b8c:	0025d2c0 	call	25d2c <__lshift>
   22b90:	1029883a 	mov	r20,r2
   22b94:	103f641e 	bne	r2,zero,22928 <_strtod_l+0x918>
   22b98:	003ff306 	br	22b68 <_strtod_l+0xb58>
   22b9c:	00800044 	movi	r2,1
   22ba0:	d8000e15 	stw	zero,56(sp)
   22ba4:	d8800c15 	stw	r2,48(sp)
   22ba8:	003f4d06 	br	228e0 <_strtod_l+0x8d0>
   22bac:	b00b883a 	mov	r5,r22
   22bb0:	000d883a 	mov	r6,zero
   22bb4:	01cff834 	movhi	r7,16352
   22bb8:	e009883a 	mov	r4,fp
   22bbc:	002bb700 	call	2bb70 <__muldf3>
   22bc0:	1011883a 	mov	r8,r2
   22bc4:	d8800c15 	stw	r2,48(sp)
   22bc8:	d8800617 	ldw	r2,24(sp)
   22bcc:	182d883a 	mov	r22,r3
   22bd0:	10001f1e 	bne	r2,zero,22c50 <_strtod_l+0xc40>
   22bd4:	1a60003c 	xorhi	r9,r3,32768
   22bd8:	003f7906 	br	229c0 <_strtod_l+0x9b0>
   22bdc:	d8c00817 	ldw	r3,32(sp)
   22be0:	df000517 	ldw	fp,20(sp)
   22be4:	188fc83a 	sub	r7,r3,r2
   22be8:	003f2c06 	br	2289c <_strtod_l+0x88c>
   22bec:	013ef884 	movi	r4,-1054
   22bf0:	2085c83a 	sub	r2,r4,r2
   22bf4:	01000044 	movi	r4,1
   22bf8:	2084983a 	sll	r2,r4,r2
   22bfc:	d8800e15 	stw	r2,56(sp)
   22c00:	00800044 	movi	r2,1
   22c04:	d8800c15 	stw	r2,48(sp)
   22c08:	003f3506 	br	228e0 <_strtod_l+0x8d0>
   22c0c:	dd801215 	stw	r22,72(sp)
   22c10:	0027883a 	mov	r19,zero
   22c14:	003dfd06 	br	2240c <_strtod_l+0x3fc>
   22c18:	02800044 	movi	r10,1
   22c1c:	b0c00084 	addi	r3,r22,2
   22c20:	d8c01215 	stw	r3,72(sp)
   22c24:	b4800087 	ldb	r18,2(r22)
   22c28:	003e3b06 	br	22518 <_strtod_l+0x508>
   22c2c:	90006c26 	beq	r18,zero,22de0 <_strtod_l+0xdd0>
   22c30:	90800058 	cmpnei	r2,r18,1
   22c34:	1000011e 	bne	r2,zero,22c3c <_strtod_l+0xc2c>
   22c38:	88022726 	beq	r17,zero,234d8 <_strtod_l+0x14c8>
   22c3c:	0011883a 	mov	r8,zero
   22c40:	026ffc34 	movhi	r9,49136
   22c44:	d8000c15 	stw	zero,48(sp)
   22c48:	058ffc34 	movhi	r22,16368
   22c4c:	003f5c06 	br	229c0 <_strtod_l+0x9b0>
   22c50:	1813883a 	mov	r9,r3
   22c54:	003f5a06 	br	229c0 <_strtod_l+0x9b0>
   22c58:	00bf2c34 	movhi	r2,64688
   22c5c:	88a3883a 	add	r17,r17,r2
   22c60:	9009883a 	mov	r4,r18
   22c64:	880b883a 	mov	r5,r17
   22c68:	da400f15 	stw	r9,60(sp)
   22c6c:	da000e15 	stw	r8,56(sp)
   22c70:	00261380 	call	26138 <__ulp>
   22c74:	da000e17 	ldw	r8,56(sp)
   22c78:	da400f17 	ldw	r9,60(sp)
   22c7c:	100d883a 	mov	r6,r2
   22c80:	4009883a 	mov	r4,r8
   22c84:	480b883a 	mov	r5,r9
   22c88:	180f883a 	mov	r7,r3
   22c8c:	002bb700 	call	2bb70 <__muldf3>
   22c90:	900d883a 	mov	r6,r18
   22c94:	1009883a 	mov	r4,r2
   22c98:	180b883a 	mov	r5,r3
   22c9c:	880f883a 	mov	r7,r17
   22ca0:	002a6640 	call	2a664 <__adddf3>
   22ca4:	195ffc2c 	andhi	r5,r3,32752
   22ca8:	011f2834 	movhi	r4,31904
   22cac:	1025883a 	mov	r18,r2
   22cb0:	29005e36 	bltu	r5,r4,22e2c <_strtod_l+0xe1c>
   22cb4:	d8c00a17 	ldw	r3,40(sp)
   22cb8:	009ffc34 	movhi	r2,32752
   22cbc:	10bfffc4 	addi	r2,r2,-1
   22cc0:	1880031e 	bne	r3,r2,22cd0 <_strtod_l+0xcc0>
   22cc4:	d8800b17 	ldw	r2,44(sp)
   22cc8:	10bfffd8 	cmpnei	r2,r2,-1
   22ccc:	103fa626 	beq	r2,zero,22b68 <_strtod_l+0xb58>
   22cd0:	045ffc34 	movhi	r17,32752
   22cd4:	8c7fffc4 	addi	r17,r17,-1
   22cd8:	04bfffc4 	movi	r18,-1
   22cdc:	003f7006 	br	22aa0 <_strtod_l+0xa90>
   22ce0:	0015883a 	mov	r10,zero
   22ce4:	003fcd06 	br	22c1c <_strtod_l+0xc0c>
   22ce8:	90c01960 	cmpeqi	r3,r18,101
   22cec:	1800781e 	bne	r3,zero,22ed0 <_strtod_l+0xec0>
   22cf0:	90c01160 	cmpeqi	r3,r18,69
   22cf4:	1800761e 	bne	r3,zero,22ed0 <_strtod_l+0xec0>
   22cf8:	01c00044 	movi	r7,1
   22cfc:	003e3106 	br	225c4 <_strtod_l+0x5b4>
   22d00:	df000c17 	ldw	fp,48(sp)
   22d04:	b00b883a 	mov	r5,r22
   22d08:	da000a15 	stw	r8,40(sp)
   22d0c:	e009883a 	mov	r4,fp
   22d10:	00295b00 	call	295b0 <__fixdfdi>
   22d14:	1009883a 	mov	r4,r2
   22d18:	180b883a 	mov	r5,r3
   22d1c:	00296b40 	call	296b4 <__floatdidf>
   22d20:	e009883a 	mov	r4,fp
   22d24:	b00b883a 	mov	r5,r22
   22d28:	100d883a 	mov	r6,r2
   22d2c:	180f883a 	mov	r7,r3
   22d30:	002c3180 	call	2c318 <__subdf3>
   22d34:	d9000617 	ldw	r4,24(sp)
   22d38:	d9401117 	ldw	r5,68(sp)
   22d3c:	da000a17 	ldw	r8,40(sp)
   22d40:	2488b03a 	or	r4,r4,r18
   22d44:	1039883a 	mov	fp,r2
   22d48:	4150703a 	and	r8,r8,r5
   22d4c:	2210b03a 	or	r8,r4,r8
   22d50:	182d883a 	mov	r22,r3
   22d54:	01a52834 	movhi	r6,38048
   22d58:	40004526 	beq	r8,zero,22e70 <_strtod_l+0xe60>
   22d5c:	01cff834 	movhi	r7,16352
   22d60:	318d6544 	addi	r6,r6,13717
   22d64:	39ffffc4 	addi	r7,r7,-1
   22d68:	1009883a 	mov	r4,r2
   22d6c:	180b883a 	mov	r5,r3
   22d70:	002ba800 	call	2ba80 <__ledf2>
   22d74:	10000716 	blt	r2,zero,22d94 <_strtod_l+0xd84>
   22d78:	018d6c34 	movhi	r6,13744
   22d7c:	31b94d44 	addi	r6,r6,-6859
   22d80:	01cff834 	movhi	r7,16352
   22d84:	e009883a 	mov	r4,fp
   22d88:	b00b883a 	mov	r5,r22
   22d8c:	002b9900 	call	2b990 <__gedf2>
   22d90:	00bf430e 	bge	zero,r2,22aa0 <_strtod_l+0xa90>
   22d94:	da401317 	ldw	r9,76(sp)
   22d98:	902d883a 	mov	r22,r18
   22d9c:	882b883a 	mov	r21,r17
   22da0:	480b883a 	mov	r5,r9
   22da4:	8009883a 	mov	r4,r16
   22da8:	00255480 	call	25548 <_Bfree>
   22dac:	a00b883a 	mov	r5,r20
   22db0:	8009883a 	mov	r4,r16
   22db4:	00255480 	call	25548 <_Bfree>
   22db8:	980b883a 	mov	r5,r19
   22dbc:	8009883a 	mov	r4,r16
   22dc0:	00255480 	call	25548 <_Bfree>
   22dc4:	d9400717 	ldw	r5,28(sp)
   22dc8:	8009883a 	mov	r4,r16
   22dcc:	00255480 	call	25548 <_Bfree>
   22dd0:	b80b883a 	mov	r5,r23
   22dd4:	8009883a 	mov	r4,r16
   22dd8:	00255480 	call	25548 <_Bfree>
   22ddc:	003e1206 	br	22628 <_strtod_l+0x618>
   22de0:	d8801117 	ldw	r2,68(sp)
   22de4:	8884703a 	and	r2,r17,r2
   22de8:	103f941e 	bne	r2,zero,22c3c <_strtod_l+0xc2c>
   22dec:	000d883a 	mov	r6,zero
   22df0:	01cffc34 	movhi	r7,16368
   22df4:	e009883a 	mov	r4,fp
   22df8:	b00b883a 	mov	r5,r22
   22dfc:	002ba800 	call	2ba80 <__ledf2>
   22e00:	10012116 	blt	r2,zero,23288 <_strtod_l+0x1278>
   22e04:	b00b883a 	mov	r5,r22
   22e08:	000d883a 	mov	r6,zero
   22e0c:	01cff834 	movhi	r7,16352
   22e10:	e009883a 	mov	r4,fp
   22e14:	002bb700 	call	2bb70 <__muldf3>
   22e18:	d8800c15 	stw	r2,48(sp)
   22e1c:	182d883a 	mov	r22,r3
   22e20:	1011883a 	mov	r8,r2
   22e24:	1a60003c 	xorhi	r9,r3,32768
   22e28:	003ee506 	br	229c0 <_strtod_l+0x9b0>
   22e2c:	0440d434 	movhi	r17,848
   22e30:	1c63883a 	add	r17,r3,r17
   22e34:	8811883a 	mov	r8,r17
   22e38:	003f1606 	br	22a94 <_strtod_l+0xa84>
   22e3c:	00800044 	movi	r2,1
   22e40:	d8800415 	stw	r2,16(sp)
   22e44:	1a400044 	addi	r9,r3,1
   22e48:	da401215 	stw	r9,72(sp)
   22e4c:	1cc00047 	ldb	r19,1(r3)
   22e50:	983cc41e 	bne	r19,zero,22164 <_strtod_l+0x154>
   22e54:	d8800317 	ldw	r2,12(sp)
   22e58:	103ced1e 	bne	r2,zero,22210 <_strtod_l+0x200>
   22e5c:	003cee06 	br	22218 <_strtod_l+0x208>
   22e60:	d8000415 	stw	zero,16(sp)
   22e64:	003ff706 	br	22e44 <_strtod_l+0xe34>
   22e68:	d8000815 	stw	zero,32(sp)
   22e6c:	003e6106 	br	227f4 <_strtod_l+0x7e4>
   22e70:	01cff434 	movhi	r7,16336
   22e74:	318d6544 	addi	r6,r6,13717
   22e78:	39ffffc4 	addi	r7,r7,-1
   22e7c:	1009883a 	mov	r4,r2
   22e80:	180b883a 	mov	r5,r3
   22e84:	002ba800 	call	2ba80 <__ledf2>
   22e88:	103f050e 	bge	r2,zero,22aa0 <_strtod_l+0xa90>
   22e8c:	003fc106 	br	22d94 <_strtod_l+0xd84>
   22e90:	9d05c83a 	sub	r2,r19,r20
   22e94:	10bffa90 	cmplti	r2,r2,-22
   22e98:	103df11e 	bne	r2,zero,22660 <_strtod_l+0x650>
   22e9c:	a4c5c83a 	sub	r2,r20,r19
   22ea0:	100690fa 	slli	r3,r2,3
   22ea4:	008000f4 	movhi	r2,3
   22ea8:	10806104 	addi	r2,r2,388
   22eac:	10c5883a 	add	r2,r2,r3
   22eb0:	11800017 	ldw	r6,0(r2)
   22eb4:	11c00117 	ldw	r7,4(r2)
   22eb8:	9009883a 	mov	r4,r18
   22ebc:	880b883a 	mov	r5,r17
   22ec0:	002afdc0 	call	2afdc <__divdf3>
   22ec4:	102d883a 	mov	r22,r2
   22ec8:	182b883a 	mov	r21,r3
   22ecc:	003dd606 	br	22628 <_strtod_l+0x618>
   22ed0:	002b883a 	mov	r21,zero
   22ed4:	0029883a 	mov	r20,zero
   22ed8:	01c00044 	movi	r7,1
   22edc:	003cc806 	br	22200 <_strtod_l+0x1f0>
   22ee0:	94801ba0 	cmpeqi	r18,r18,110
   22ee4:	903dc21e 	bne	r18,zero,225f0 <_strtod_l+0x5e0>
   22ee8:	003cc706 	br	22208 <_strtod_l+0x1f8>
   22eec:	b03e3126 	beq	r22,zero,227b4 <_strtod_l+0x7a4>
   22ef0:	05adc83a 	sub	r22,zero,r22
   22ef4:	b08003cc 	andi	r2,r22,15
   22ef8:	10000d26 	beq	r2,zero,22f30 <_strtod_l+0xf20>
   22efc:	100490fa 	slli	r2,r2,3
   22f00:	00c000f4 	movhi	r3,3
   22f04:	18c06104 	addi	r3,r3,388
   22f08:	1885883a 	add	r2,r3,r2
   22f0c:	11800017 	ldw	r6,0(r2)
   22f10:	11c00117 	ldw	r7,4(r2)
   22f14:	9009883a 	mov	r4,r18
   22f18:	880b883a 	mov	r5,r17
   22f1c:	da400515 	stw	r9,20(sp)
   22f20:	002afdc0 	call	2afdc <__divdf3>
   22f24:	da400517 	ldw	r9,20(sp)
   22f28:	1025883a 	mov	r18,r2
   22f2c:	1823883a 	mov	r17,r3
   22f30:	b02dd13a 	srai	r22,r22,4
   22f34:	b03e1f26 	beq	r22,zero,227b4 <_strtod_l+0x7a4>
   22f38:	b0800808 	cmpgei	r2,r22,32
   22f3c:	1000361e 	bne	r2,zero,23018 <_strtod_l+0x1008>
   22f40:	b080040c 	andi	r2,r22,16
   22f44:	d8801015 	stw	r2,64(sp)
   22f48:	10000226 	beq	r2,zero,22f54 <_strtod_l+0xf44>
   22f4c:	00801a84 	movi	r2,106
   22f50:	d8801015 	stw	r2,64(sp)
   22f54:	020000f4 	movhi	r8,3
   22f58:	423fd204 	addi	r8,r8,-184
   22f5c:	880b883a 	mov	r5,r17
   22f60:	dc000615 	stw	r16,24(sp)
   22f64:	9009883a 	mov	r4,r18
   22f68:	b021883a 	mov	r16,r22
   22f6c:	0007883a 	mov	r3,zero
   22f70:	882d883a 	mov	r22,r17
   22f74:	da400515 	stw	r9,20(sp)
   22f78:	4023883a 	mov	r17,r8
   22f7c:	8080004c 	andi	r2,r16,1
   22f80:	8021d07a 	srai	r16,r16,1
   22f84:	10000626 	beq	r2,zero,22fa0 <_strtod_l+0xf90>
   22f88:	89800017 	ldw	r6,0(r17)
   22f8c:	89c00117 	ldw	r7,4(r17)
   22f90:	002bb700 	call	2bb70 <__muldf3>
   22f94:	180b883a 	mov	r5,r3
   22f98:	1009883a 	mov	r4,r2
   22f9c:	00c00044 	movi	r3,1
   22fa0:	8c400204 	addi	r17,r17,8
   22fa4:	803ff51e 	bne	r16,zero,22f7c <_strtod_l+0xf6c>
   22fa8:	18c03fcc 	andi	r3,r3,255
   22fac:	da400517 	ldw	r9,20(sp)
   22fb0:	dc000617 	ldw	r16,24(sp)
   22fb4:	b023883a 	mov	r17,r22
   22fb8:	18000226 	beq	r3,zero,22fc4 <_strtod_l+0xfb4>
   22fbc:	2025883a 	mov	r18,r4
   22fc0:	2823883a 	mov	r17,r5
   22fc4:	d8801017 	ldw	r2,64(sp)
   22fc8:	10000b26 	beq	r2,zero,22ff8 <_strtod_l+0xfe8>
   22fcc:	8804d53a 	srli	r2,r17,20
   22fd0:	10c1ffcc 	andi	r3,r2,2047
   22fd4:	00801ac4 	movi	r2,107
   22fd8:	10c5c83a 	sub	r2,r2,r3
   22fdc:	0080060e 	bge	zero,r2,22ff8 <_strtod_l+0xfe8>
   22fe0:	10c00810 	cmplti	r3,r2,32
   22fe4:	1801421e 	bne	r3,zero,234f0 <_strtod_l+0x14e0>
   22fe8:	10c00d50 	cmplti	r3,r2,53
   22fec:	0025883a 	mov	r18,zero
   22ff0:	18015f1e 	bne	r3,zero,23570 <_strtod_l+0x1560>
   22ff4:	0440dc34 	movhi	r17,880
   22ff8:	000d883a 	mov	r6,zero
   22ffc:	000f883a 	mov	r7,zero
   23000:	9009883a 	mov	r4,r18
   23004:	880b883a 	mov	r5,r17
   23008:	da400515 	stw	r9,20(sp)
   2300c:	002b9100 	call	2b910 <__eqdf2>
   23010:	da400517 	ldw	r9,20(sp)
   23014:	103de81e 	bne	r2,zero,227b8 <_strtod_l+0x7a8>
   23018:	00800884 	movi	r2,34
   2301c:	80800015 	stw	r2,0(r16)
   23020:	002d883a 	mov	r22,zero
   23024:	002b883a 	mov	r21,zero
   23028:	003d7f06 	br	22628 <_strtod_l+0x618>
   2302c:	00800884 	movi	r2,34
   23030:	80800015 	stw	r2,0(r16)
   23034:	002d883a 	mov	r22,zero
   23038:	055ffc34 	movhi	r21,32752
   2303c:	003d7a06 	br	22628 <_strtod_l+0x618>
   23040:	d8800417 	ldw	r2,16(sp)
   23044:	018000f4 	movhi	r6,3
   23048:	dd000215 	stw	r20,8(sp)
   2304c:	d8800115 	stw	r2,4(sp)
   23050:	d8801304 	addi	r2,sp,76
   23054:	d8800015 	stw	r2,0(sp)
   23058:	d9c01404 	addi	r7,sp,80
   2305c:	31bfcd04 	addi	r6,r6,-204
   23060:	d9401204 	addi	r5,sp,72
   23064:	8009883a 	mov	r4,r16
   23068:	002460c0 	call	2460c <__gethex>
   2306c:	14c001cc 	andi	r19,r2,7
   23070:	983d6b26 	beq	r19,zero,22620 <_strtod_l+0x610>
   23074:	98c00198 	cmpnei	r3,r19,6
   23078:	18003a1e 	bne	r3,zero,23164 <_strtod_l+0x1154>
   2307c:	d8800317 	ldw	r2,12(sp)
   23080:	103c6526 	beq	r2,zero,22218 <_strtod_l+0x208>
   23084:	15c00015 	stw	r23,0(r2)
   23088:	002d883a 	mov	r22,zero
   2308c:	002b883a 	mov	r21,zero
   23090:	003c6306 	br	22220 <_strtod_l+0x210>
   23094:	902d883a 	mov	r22,r18
   23098:	882b883a 	mov	r21,r17
   2309c:	003d6206 	br	22628 <_strtod_l+0x618>
   230a0:	2807883a 	mov	r3,r5
   230a4:	102f883a 	mov	r23,r2
   230a8:	18c00248 	cmpgei	r3,r3,9
   230ac:	183c8f26 	beq	r3,zero,222ec <_strtod_l+0x2dc>
   230b0:	b8800448 	cmpgei	r2,r23,17
   230b4:	1000901e 	bne	r2,zero,232f8 <_strtod_l+0x12e8>
   230b8:	400690ba 	slli	r3,r8,2
   230bc:	0005883a 	mov	r2,zero
   230c0:	1a11883a 	add	r8,r3,r8
   230c4:	4211883a 	add	r8,r8,r8
   230c8:	3211883a 	add	r8,r6,r8
   230cc:	003c8c06 	br	22300 <_strtod_l+0x2f0>
   230d0:	4809883a 	mov	r4,r9
   230d4:	a80b883a 	mov	r5,r21
   230d8:	d9800615 	stw	r6,24(sp)
   230dc:	da400515 	stw	r9,20(sp)
   230e0:	00267900 	call	26790 <strncmp>
   230e4:	da400517 	ldw	r9,20(sp)
   230e8:	d9800617 	ldw	r6,24(sp)
   230ec:	10005026 	beq	r2,zero,23230 <_strtod_l+0x1220>
   230f0:	002b883a 	mov	r21,zero
   230f4:	0011883a 	mov	r8,zero
   230f8:	0039883a 	mov	fp,zero
   230fc:	002f883a 	mov	r23,zero
   23100:	003cbe06 	br	223fc <_strtod_l+0x3ec>
   23104:	98d38810 	cmplti	r3,r19,20000
   23108:	183d2b1e 	bne	r3,zero,225b8 <_strtod_l+0x5a8>
   2310c:	003d2906 	br	225b4 <_strtod_l+0x5a4>
   23110:	1813883a 	mov	r9,r3
   23114:	003e4806 	br	22a38 <_strtod_l+0xa28>
   23118:	014000f4 	movhi	r5,3
   2311c:	297fc404 	addi	r5,r5,-240
   23120:	d9001204 	addi	r4,sp,72
   23124:	0024e500 	call	24e50 <__match>
   23128:	103c3726 	beq	r2,zero,22208 <_strtod_l+0x1f8>
   2312c:	d8801217 	ldw	r2,72(sp)
   23130:	014000f4 	movhi	r5,3
   23134:	297fc504 	addi	r5,r5,-236
   23138:	10bfffc4 	addi	r2,r2,-1
   2313c:	d9001204 	addi	r4,sp,72
   23140:	d8801215 	stw	r2,72(sp)
   23144:	0024e500 	call	24e50 <__match>
   23148:	103fba1e 	bne	r2,zero,23034 <_strtod_l+0x1024>
   2314c:	d8801217 	ldw	r2,72(sp)
   23150:	10800044 	addi	r2,r2,1
   23154:	d8801215 	stw	r2,72(sp)
   23158:	003fb606 	br	23034 <_strtod_l+0x1024>
   2315c:	0005883a 	mov	r2,zero
   23160:	003c5906 	br	222c8 <_strtod_l+0x2b8>
   23164:	d9801317 	ldw	r6,76(sp)
   23168:	30000826 	beq	r6,zero,2318c <_strtod_l+0x117c>
   2316c:	01400d44 	movi	r5,53
   23170:	d9001504 	addi	r4,sp,84
   23174:	d8800515 	stw	r2,20(sp)
   23178:	00265100 	call	26510 <__copybits>
   2317c:	d9401317 	ldw	r5,76(sp)
   23180:	8009883a 	mov	r4,r16
   23184:	00255480 	call	25548 <_Bfree>
   23188:	d8800517 	ldw	r2,20(sp)
   2318c:	98c001e8 	cmpgeui	r3,r19,7
   23190:	1800151e 	bne	r3,zero,231e8 <_strtod_l+0x11d8>
   23194:	982690ba 	slli	r19,r19,2
   23198:	00c000b4 	movhi	r3,2
   2319c:	98c7883a 	add	r3,r19,r3
   231a0:	18cc6a17 	ldw	r3,12712(r3)
   231a4:	1800683a 	jmp	r3
   231a8:	000231e8 	cmpgeui	zero,zero,2247
   231ac:	000231c4 	movi	zero,2247
   231b0:	00023224 	muli	zero,zero,2248
   231b4:	00023218 	cmpnei	zero,zero,2248
   231b8:	00023208 	cmpgei	zero,zero,2248
   231bc:	000231c4 	movi	zero,2247
   231c0:	000231fc 	xorhi	zero,zero,2247
   231c4:	d8c01417 	ldw	r3,80(sp)
   231c8:	dc401617 	ldw	r17,88(sp)
   231cc:	013ffc34 	movhi	r4,65520
   231d0:	18c10cc4 	addi	r3,r3,1075
   231d4:	1806953a 	slli	r3,r3,20
   231d8:	213fffc4 	addi	r4,r4,-1
   231dc:	dc801517 	ldw	r18,84(sp)
   231e0:	8922703a 	and	r17,r17,r4
   231e4:	88e2b03a 	or	r17,r17,r3
   231e8:	1080020c 	andi	r2,r2,8
   231ec:	902d883a 	mov	r22,r18
   231f0:	103fa926 	beq	r2,zero,23098 <_strtod_l+0x1088>
   231f4:	8d600034 	orhi	r21,r17,32768
   231f8:	003d0b06 	br	22628 <_strtod_l+0x618>
   231fc:	0023883a 	mov	r17,zero
   23200:	0025883a 	mov	r18,zero
   23204:	003ff806 	br	231e8 <_strtod_l+0x11d8>
   23208:	04600034 	movhi	r17,32768
   2320c:	8c7fffc4 	addi	r17,r17,-1
   23210:	04bfffc4 	movi	r18,-1
   23214:	003ff406 	br	231e8 <_strtod_l+0x11d8>
   23218:	045ffc34 	movhi	r17,32752
   2321c:	0025883a 	mov	r18,zero
   23220:	003ff106 	br	231e8 <_strtod_l+0x11d8>
   23224:	dc801517 	ldw	r18,84(sp)
   23228:	dc401617 	ldw	r17,88(sp)
   2322c:	003fee06 	br	231e8 <_strtod_l+0x11d8>
   23230:	498d883a 	add	r6,r9,r6
   23234:	d9801215 	stw	r6,72(sp)
   23238:	34800007 	ldb	r18,0(r6)
   2323c:	0039883a 	mov	fp,zero
   23240:	0011883a 	mov	r8,zero
   23244:	003c1506 	br	2229c <_strtod_l+0x28c>
   23248:	d8800917 	ldw	r2,36(sp)
   2324c:	900d883a 	mov	r6,r18
   23250:	880f883a 	mov	r7,r17
   23254:	100690fa 	slli	r3,r2,3
   23258:	008000f4 	movhi	r2,3
   2325c:	10806104 	addi	r2,r2,388
   23260:	10c5883a 	add	r2,r2,r3
   23264:	11000017 	ldw	r4,0(r2)
   23268:	11400117 	ldw	r5,4(r2)
   2326c:	002bb700 	call	2bb70 <__muldf3>
   23270:	102d883a 	mov	r22,r2
   23274:	182b883a 	mov	r21,r3
   23278:	003ceb06 	br	22628 <_strtod_l+0x618>
   2327c:	b82b883a 	mov	r21,r23
   23280:	0029883a 	mov	r20,zero
   23284:	003c2106 	br	2230c <_strtod_l+0x2fc>
   23288:	0011883a 	mov	r8,zero
   2328c:	026ff834 	movhi	r9,49120
   23290:	d8000c15 	stw	zero,48(sp)
   23294:	058ff834 	movhi	r22,16352
   23298:	003dc906 	br	229c0 <_strtod_l+0x9b0>
   2329c:	008003c4 	movi	r2,15
   232a0:	15efc83a 	sub	r23,r2,r23
   232a4:	b80490fa 	slli	r2,r23,3
   232a8:	040000f4 	movhi	r16,3
   232ac:	84006104 	addi	r16,r16,388
   232b0:	8085883a 	add	r2,r16,r2
   232b4:	11000017 	ldw	r4,0(r2)
   232b8:	11400117 	ldw	r5,4(r2)
   232bc:	900d883a 	mov	r6,r18
   232c0:	880f883a 	mov	r7,r17
   232c4:	002bb700 	call	2bb70 <__muldf3>
   232c8:	d9000917 	ldw	r4,36(sp)
   232cc:	180b883a 	mov	r5,r3
   232d0:	25efc83a 	sub	r23,r4,r23
   232d4:	b80c90fa 	slli	r6,r23,3
   232d8:	1009883a 	mov	r4,r2
   232dc:	81a1883a 	add	r16,r16,r6
   232e0:	81800017 	ldw	r6,0(r16)
   232e4:	81c00117 	ldw	r7,4(r16)
   232e8:	002bb700 	call	2bb70 <__muldf3>
   232ec:	102d883a 	mov	r22,r2
   232f0:	182b883a 	mov	r21,r3
   232f4:	003ccc06 	br	22628 <_strtod_l+0x618>
   232f8:	0005883a 	mov	r2,zero
   232fc:	003c0006 	br	22300 <_strtod_l+0x2f0>
   23300:	d9000617 	ldw	r4,24(sp)
   23304:	00c00434 	movhi	r3,16
   23308:	18ffffc4 	addi	r3,r3,-1
   2330c:	dd800b17 	ldw	r22,44(sp)
   23310:	dd400a17 	ldw	r21,40(sp)
   23314:	88c4703a 	and	r2,r17,r3
   23318:	20004926 	beq	r4,zero,23440 <_strtod_l+0x1430>
   2331c:	10c07826 	beq	r2,r3,23500 <_strtod_l+0x14f0>
   23320:	d8800e17 	ldw	r2,56(sp)
   23324:	10004a26 	beq	r2,zero,23450 <_strtod_l+0x1440>
   23328:	1444703a 	and	r2,r2,r17
   2332c:	10000d26 	beq	r2,zero,23364 <_strtod_l+0x1354>
   23330:	d8800617 	ldw	r2,24(sp)
   23334:	d9801017 	ldw	r6,64(sp)
   23338:	9009883a 	mov	r4,r18
   2333c:	880b883a 	mov	r5,r17
   23340:	10005726 	beq	r2,zero,234a0 <_strtod_l+0x1490>
   23344:	0021fac0 	call	21fac <sulp>
   23348:	100d883a 	mov	r6,r2
   2334c:	180f883a 	mov	r7,r3
   23350:	9009883a 	mov	r4,r18
   23354:	880b883a 	mov	r5,r17
   23358:	002a6640 	call	2a664 <__adddf3>
   2335c:	102d883a 	mov	r22,r2
   23360:	182b883a 	mov	r21,r3
   23364:	d8801017 	ldw	r2,64(sp)
   23368:	da401317 	ldw	r9,76(sp)
   2336c:	103e8c26 	beq	r2,zero,22da0 <_strtod_l+0xd90>
   23370:	b009883a 	mov	r4,r22
   23374:	a80b883a 	mov	r5,r21
   23378:	000d883a 	mov	r6,zero
   2337c:	01ce5434 	movhi	r7,14672
   23380:	da400515 	stw	r9,20(sp)
   23384:	002bb700 	call	2bb70 <__muldf3>
   23388:	102d883a 	mov	r22,r2
   2338c:	1884b03a 	or	r2,r3,r2
   23390:	da400517 	ldw	r9,20(sp)
   23394:	182b883a 	mov	r21,r3
   23398:	103e811e 	bne	r2,zero,22da0 <_strtod_l+0xd90>
   2339c:	00800884 	movi	r2,34
   233a0:	80800015 	stw	r2,0(r16)
   233a4:	003e7e06 	br	22da0 <_strtod_l+0xd90>
   233a8:	0440d434 	movhi	r17,848
   233ac:	1c63883a 	add	r17,r3,r17
   233b0:	d8001015 	stw	zero,64(sp)
   233b4:	003d0006 	br	227b8 <_strtod_l+0x7a8>
   233b8:	d8800617 	ldw	r2,24(sp)
   233bc:	dd800b17 	ldw	r22,44(sp)
   233c0:	dd400a17 	ldw	r21,40(sp)
   233c4:	14a4b03a 	or	r18,r2,r18
   233c8:	903fe61e 	bne	r18,zero,23364 <_strtod_l+0x1354>
   233cc:	00800434 	movhi	r2,16
   233d0:	10bfffc4 	addi	r2,r2,-1
   233d4:	8884703a 	and	r2,r17,r2
   233d8:	103fe21e 	bne	r2,zero,23364 <_strtod_l+0x1354>
   233dc:	8c5ffc2c 	andhi	r17,r17,32752
   233e0:	0081ac34 	movhi	r2,1712
   233e4:	147fdf2e 	bgeu	r2,r17,23364 <_strtod_l+0x1354>
   233e8:	b8800517 	ldw	r2,20(r23)
   233ec:	1000031e 	bne	r2,zero,233fc <_strtod_l+0x13ec>
   233f0:	b8800417 	ldw	r2,16(r23)
   233f4:	10800090 	cmplti	r2,r2,2
   233f8:	103fda1e 	bne	r2,zero,23364 <_strtod_l+0x1354>
   233fc:	b80b883a 	mov	r5,r23
   23400:	8009883a 	mov	r4,r16
   23404:	01800044 	movi	r6,1
   23408:	0025d2c0 	call	25d2c <__lshift>
   2340c:	980b883a 	mov	r5,r19
   23410:	1009883a 	mov	r4,r2
   23414:	102f883a 	mov	r23,r2
   23418:	0025eb40 	call	25eb4 <__mcmp>
   2341c:	00bfd10e 	bge	zero,r2,23364 <_strtod_l+0x1354>
   23420:	d8801017 	ldw	r2,64(sp)
   23424:	10004b26 	beq	r2,zero,23554 <_strtod_l+0x1544>
   23428:	0081ac34 	movhi	r2,1712
   2342c:	14404916 	blt	r2,r17,23554 <_strtod_l+0x1544>
   23430:	0080dc34 	movhi	r2,880
   23434:	1440280e 	bge	r2,r17,234d8 <_strtod_l+0x14c8>
   23438:	da401317 	ldw	r9,76(sp)
   2343c:	003fcc06 	br	23370 <_strtod_l+0x1360>
   23440:	1484b03a 	or	r2,r2,r18
   23444:	103fb61e 	bne	r2,zero,23320 <_strtod_l+0x1310>
   23448:	8c5ffc2c 	andhi	r17,r17,32752
   2344c:	003ff406 	br	23420 <_strtod_l+0x1410>
   23450:	d8800c17 	ldw	r2,48(sp)
   23454:	14b8703a 	and	fp,r2,r18
   23458:	e03fc226 	beq	fp,zero,23364 <_strtod_l+0x1354>
   2345c:	003fb406 	br	23330 <_strtod_l+0x1320>
   23460:	008000f4 	movhi	r2,3
   23464:	10805704 	addi	r2,r2,348
   23468:	002d883a 	mov	r22,zero
   2346c:	d8800515 	stw	r2,20(sp)
   23470:	003cba06 	br	2275c <_strtod_l+0x74c>
   23474:	014000f4 	movhi	r5,3
   23478:	d9801504 	addi	r6,sp,84
   2347c:	297fc804 	addi	r5,r5,-224
   23480:	d9001204 	addi	r4,sp,72
   23484:	0024ea00 	call	24ea0 <__hexnan>
   23488:	10800158 	cmpnei	r2,r2,5
   2348c:	103c611e 	bne	r2,zero,22614 <_strtod_l+0x604>
   23490:	dd401617 	ldw	r21,88(sp)
   23494:	dd801517 	ldw	r22,84(sp)
   23498:	ad5ffc34 	orhi	r21,r21,32752
   2349c:	003c6206 	br	22628 <_strtod_l+0x618>
   234a0:	0021fac0 	call	21fac <sulp>
   234a4:	100d883a 	mov	r6,r2
   234a8:	180f883a 	mov	r7,r3
   234ac:	9009883a 	mov	r4,r18
   234b0:	880b883a 	mov	r5,r17
   234b4:	002c3180 	call	2c318 <__subdf3>
   234b8:	000d883a 	mov	r6,zero
   234bc:	000f883a 	mov	r7,zero
   234c0:	1009883a 	mov	r4,r2
   234c4:	180b883a 	mov	r5,r3
   234c8:	102d883a 	mov	r22,r2
   234cc:	182b883a 	mov	r21,r3
   234d0:	002b9100 	call	2b910 <__eqdf2>
   234d4:	103fa31e 	bne	r2,zero,23364 <_strtod_l+0x1354>
   234d8:	00800884 	movi	r2,34
   234dc:	da401317 	ldw	r9,76(sp)
   234e0:	80800015 	stw	r2,0(r16)
   234e4:	002d883a 	mov	r22,zero
   234e8:	002b883a 	mov	r21,zero
   234ec:	003e2c06 	br	22da0 <_strtod_l+0xd90>
   234f0:	00ffffc4 	movi	r3,-1
   234f4:	1884983a 	sll	r2,r3,r2
   234f8:	14a4703a 	and	r18,r2,r18
   234fc:	003ebe06 	br	22ff8 <_strtod_l+0xfe8>
   23500:	d8801017 	ldw	r2,64(sp)
   23504:	10001126 	beq	r2,zero,2354c <_strtod_l+0x153c>
   23508:	889ffc2c 	andhi	r2,r17,32752
   2350c:	00c1a834 	movhi	r3,1696
   23510:	18800e36 	bltu	r3,r2,2354c <_strtod_l+0x153c>
   23514:	1004d53a 	srli	r2,r2,20
   23518:	00c01ac4 	movi	r3,107
   2351c:	1887c83a 	sub	r3,r3,r2
   23520:	00bfffc4 	movi	r2,-1
   23524:	10c4983a 	sll	r2,r2,r3
   23528:	90bf7d1e 	bne	r18,r2,23320 <_strtod_l+0x1310>
   2352c:	009ffc34 	movhi	r2,32752
   23530:	10bfffc4 	addi	r2,r2,-1
   23534:	88801326 	beq	r17,r2,23584 <_strtod_l+0x1574>
   23538:	8c5ffc2c 	andhi	r17,r17,32752
   2353c:	00800434 	movhi	r2,16
   23540:	002d883a 	mov	r22,zero
   23544:	88ab883a 	add	r21,r17,r2
   23548:	003f8606 	br	23364 <_strtod_l+0x1354>
   2354c:	00bfffc4 	movi	r2,-1
   23550:	003ff506 	br	23528 <_strtod_l+0x1518>
   23554:	05400434 	movhi	r21,16
   23558:	00bffc34 	movhi	r2,65520
   2355c:	88a3883a 	add	r17,r17,r2
   23560:	ad7fffc4 	addi	r21,r21,-1
   23564:	05bfffc4 	movi	r22,-1
   23568:	8d6ab03a 	or	r21,r17,r21
   2356c:	003f7d06 	br	23364 <_strtod_l+0x1354>
   23570:	10bff804 	addi	r2,r2,-32
   23574:	00ffffc4 	movi	r3,-1
   23578:	1884983a 	sll	r2,r3,r2
   2357c:	1462703a 	and	r17,r2,r17
   23580:	003e9d06 	br	22ff8 <_strtod_l+0xfe8>
   23584:	94bfffd8 	cmpnei	r18,r18,-1
   23588:	903feb1e 	bne	r18,zero,23538 <_strtod_l+0x1528>
   2358c:	003d7606 	br	22b68 <_strtod_l+0xb58>
   23590:	b807883a 	mov	r3,r23
   23594:	202f883a 	mov	r23,r4
   23598:	003ec306 	br	230a8 <_strtod_l+0x1098>

0002359c <_strtod_r>:
   2359c:	01c000f4 	movhi	r7,3
   235a0:	39c3bd04 	addi	r7,r7,3828
   235a4:	00220101 	jmpi	22010 <_strtod_l>

000235a8 <strtod_l>:
   235a8:	00c000f4 	movhi	r3,3
   235ac:	2005883a 	mov	r2,r4
   235b0:	1908aa17 	ldw	r4,8872(r3)
   235b4:	300f883a 	mov	r7,r6
   235b8:	280d883a 	mov	r6,r5
   235bc:	100b883a 	mov	r5,r2
   235c0:	00220101 	jmpi	22010 <_strtod_l>

000235c4 <strtod>:
   235c4:	00c000f4 	movhi	r3,3
   235c8:	2005883a 	mov	r2,r4
   235cc:	1908aa17 	ldw	r4,8872(r3)
   235d0:	01c000f4 	movhi	r7,3
   235d4:	280d883a 	mov	r6,r5
   235d8:	39c3bd04 	addi	r7,r7,3828
   235dc:	100b883a 	mov	r5,r2
   235e0:	00220101 	jmpi	22010 <_strtod_l>

000235e4 <strtof_l>:
   235e4:	00c000f4 	movhi	r3,3
   235e8:	2005883a 	mov	r2,r4
   235ec:	1908aa17 	ldw	r4,8872(r3)
   235f0:	defffa04 	addi	sp,sp,-24
   235f4:	300f883a 	mov	r7,r6
   235f8:	280d883a 	mov	r6,r5
   235fc:	100b883a 	mov	r5,r2
   23600:	dc400115 	stw	r17,4(sp)
   23604:	dc000015 	stw	r16,0(sp)
   23608:	dfc00515 	stw	ra,20(sp)
   2360c:	dd000415 	stw	r20,16(sp)
   23610:	dcc00315 	stw	r19,12(sp)
   23614:	dc800215 	stw	r18,8(sp)
   23618:	00220100 	call	22010 <_strtod_l>
   2361c:	100d883a 	mov	r6,r2
   23620:	180f883a 	mov	r7,r3
   23624:	1009883a 	mov	r4,r2
   23628:	180b883a 	mov	r5,r3
   2362c:	1023883a 	mov	r17,r2
   23630:	1821883a 	mov	r16,r3
   23634:	002cc4c0 	call	2cc4c <__unorddf2>
   23638:	10002d1e 	bne	r2,zero,236f0 <strtof_l+0x10c>
   2363c:	8809883a 	mov	r4,r17
   23640:	800b883a 	mov	r5,r16
   23644:	04a00034 	movhi	r18,32768
   23648:	002cdec0 	call	2cdec <__truncdfsf2>
   2364c:	94bfffc4 	addi	r18,r18,-1
   23650:	90a8703a 	and	r20,r18,r2
   23654:	015fe034 	movhi	r5,32640
   23658:	297fffc4 	addi	r5,r5,-1
   2365c:	a009883a 	mov	r4,r20
   23660:	1027883a 	mov	r19,r2
   23664:	002a6180 	call	2a618 <__unordsf2>
   23668:	1000181e 	bne	r2,zero,236cc <strtof_l+0xe8>
   2366c:	015fe034 	movhi	r5,32640
   23670:	297fffc4 	addi	r5,r5,-1
   23674:	a009883a 	mov	r4,r20
   23678:	002a5580 	call	2a558 <__lesf2>
   2367c:	0080130e 	bge	zero,r2,236cc <strtof_l+0xe8>
   23680:	84a0703a 	and	r16,r16,r18
   23684:	01dffc34 	movhi	r7,32752
   23688:	01bfffc4 	movi	r6,-1
   2368c:	39ffffc4 	addi	r7,r7,-1
   23690:	8809883a 	mov	r4,r17
   23694:	800b883a 	mov	r5,r16
   23698:	002cc4c0 	call	2cc4c <__unorddf2>
   2369c:	1000071e 	bne	r2,zero,236bc <strtof_l+0xd8>
   236a0:	01dffc34 	movhi	r7,32752
   236a4:	01bfffc4 	movi	r6,-1
   236a8:	39ffffc4 	addi	r7,r7,-1
   236ac:	8809883a 	mov	r4,r17
   236b0:	800b883a 	mov	r5,r16
   236b4:	002ba800 	call	2ba80 <__ledf2>
   236b8:	00800416 	blt	zero,r2,236cc <strtof_l+0xe8>
   236bc:	008000f4 	movhi	r2,3
   236c0:	1088aa17 	ldw	r2,8872(r2)
   236c4:	00c00884 	movi	r3,34
   236c8:	10c00015 	stw	r3,0(r2)
   236cc:	9805883a 	mov	r2,r19
   236d0:	dfc00517 	ldw	ra,20(sp)
   236d4:	dd000417 	ldw	r20,16(sp)
   236d8:	dcc00317 	ldw	r19,12(sp)
   236dc:	dc800217 	ldw	r18,8(sp)
   236e0:	dc400117 	ldw	r17,4(sp)
   236e4:	dc000017 	ldw	r16,0(sp)
   236e8:	dec00604 	addi	sp,sp,24
   236ec:	f800283a 	ret
   236f0:	8000020e 	bge	r16,zero,236fc <strtof_l+0x118>
   236f4:	04fff034 	movhi	r19,65472
   236f8:	003ff406 	br	236cc <strtof_l+0xe8>
   236fc:	04dff034 	movhi	r19,32704
   23700:	003ff206 	br	236cc <strtof_l+0xe8>

00023704 <strtof>:
   23704:	00c000f4 	movhi	r3,3
   23708:	2005883a 	mov	r2,r4
   2370c:	1908aa17 	ldw	r4,8872(r3)
   23710:	01c000f4 	movhi	r7,3
   23714:	defff904 	addi	sp,sp,-28
   23718:	280d883a 	mov	r6,r5
   2371c:	39c3bd04 	addi	r7,r7,3828
   23720:	100b883a 	mov	r5,r2
   23724:	dc400115 	stw	r17,4(sp)
   23728:	dc000015 	stw	r16,0(sp)
   2372c:	dfc00615 	stw	ra,24(sp)
   23730:	dd400515 	stw	r21,20(sp)
   23734:	dd000415 	stw	r20,16(sp)
   23738:	dcc00315 	stw	r19,12(sp)
   2373c:	dc800215 	stw	r18,8(sp)
   23740:	00220100 	call	22010 <_strtod_l>
   23744:	100d883a 	mov	r6,r2
   23748:	180f883a 	mov	r7,r3
   2374c:	1009883a 	mov	r4,r2
   23750:	180b883a 	mov	r5,r3
   23754:	1021883a 	mov	r16,r2
   23758:	1823883a 	mov	r17,r3
   2375c:	002cc4c0 	call	2cc4c <__unorddf2>
   23760:	10003a1e 	bne	r2,zero,2384c <strtof+0x148>
   23764:	8009883a 	mov	r4,r16
   23768:	880b883a 	mov	r5,r17
   2376c:	04a00034 	movhi	r18,32768
   23770:	002cdec0 	call	2cdec <__truncdfsf2>
   23774:	94bfffc4 	addi	r18,r18,-1
   23778:	90a8703a 	and	r20,r18,r2
   2377c:	015fe034 	movhi	r5,32640
   23780:	297fffc4 	addi	r5,r5,-1
   23784:	a009883a 	mov	r4,r20
   23788:	1027883a 	mov	r19,r2
   2378c:	002a6180 	call	2a618 <__unordsf2>
   23790:	982b883a 	mov	r21,r19
   23794:	1000221e 	bne	r2,zero,23820 <strtof+0x11c>
   23798:	015fe034 	movhi	r5,32640
   2379c:	297fffc4 	addi	r5,r5,-1
   237a0:	a009883a 	mov	r4,r20
   237a4:	002a5580 	call	2a558 <__lesf2>
   237a8:	00801d0e 	bge	zero,r2,23820 <strtof+0x11c>
   237ac:	8ca4703a 	and	r18,r17,r18
   237b0:	01dffc34 	movhi	r7,32752
   237b4:	01bfffc4 	movi	r6,-1
   237b8:	39ffffc4 	addi	r7,r7,-1
   237bc:	8009883a 	mov	r4,r16
   237c0:	900b883a 	mov	r5,r18
   237c4:	002cc4c0 	call	2cc4c <__unorddf2>
   237c8:	1000071e 	bne	r2,zero,237e8 <strtof+0xe4>
   237cc:	01dffc34 	movhi	r7,32752
   237d0:	01bfffc4 	movi	r6,-1
   237d4:	39ffffc4 	addi	r7,r7,-1
   237d8:	8009883a 	mov	r4,r16
   237dc:	900b883a 	mov	r5,r18
   237e0:	002ba800 	call	2ba80 <__ledf2>
   237e4:	00800e16 	blt	zero,r2,23820 <strtof+0x11c>
   237e8:	008000f4 	movhi	r2,3
   237ec:	1088aa17 	ldw	r2,8872(r2)
   237f0:	00c00884 	movi	r3,34
   237f4:	10c00015 	stw	r3,0(r2)
   237f8:	a805883a 	mov	r2,r21
   237fc:	dfc00617 	ldw	ra,24(sp)
   23800:	dd400517 	ldw	r21,20(sp)
   23804:	dd000417 	ldw	r20,16(sp)
   23808:	dcc00317 	ldw	r19,12(sp)
   2380c:	dc800217 	ldw	r18,8(sp)
   23810:	dc400117 	ldw	r17,4(sp)
   23814:	dc000017 	ldw	r16,0(sp)
   23818:	dec00704 	addi	sp,sp,28
   2381c:	f800283a 	ret
   23820:	000b883a 	mov	r5,zero
   23824:	9809883a 	mov	r4,r19
   23828:	002a4e00 	call	2a4e0 <__eqsf2>
   2382c:	103ff21e 	bne	r2,zero,237f8 <strtof+0xf4>
   23830:	000d883a 	mov	r6,zero
   23834:	000f883a 	mov	r7,zero
   23838:	8009883a 	mov	r4,r16
   2383c:	880b883a 	mov	r5,r17
   23840:	002b9100 	call	2b910 <__eqdf2>
   23844:	103fec26 	beq	r2,zero,237f8 <strtof+0xf4>
   23848:	003fe706 	br	237e8 <strtof+0xe4>
   2384c:	8800020e 	bge	r17,zero,23858 <strtof+0x154>
   23850:	057ff034 	movhi	r21,65472
   23854:	003fe806 	br	237f8 <strtof+0xf4>
   23858:	055ff034 	movhi	r21,32704
   2385c:	003fe606 	br	237f8 <strtof+0xf4>

00023860 <_write_r>:
   23860:	2807883a 	mov	r3,r5
   23864:	defffe04 	addi	sp,sp,-8
   23868:	dc000015 	stw	r16,0(sp)
   2386c:	300b883a 	mov	r5,r6
   23870:	008000f4 	movhi	r2,3
   23874:	380d883a 	mov	r6,r7
   23878:	2021883a 	mov	r16,r4
   2387c:	1809883a 	mov	r4,r3
   23880:	dfc00115 	stw	ra,4(sp)
   23884:	100fca15 	stw	zero,16168(r2)
   23888:	002e0600 	call	2e060 <write>
   2388c:	10ffffd8 	cmpnei	r3,r2,-1
   23890:	18000426 	beq	r3,zero,238a4 <_write_r+0x44>
   23894:	dfc00117 	ldw	ra,4(sp)
   23898:	dc000017 	ldw	r16,0(sp)
   2389c:	dec00204 	addi	sp,sp,8
   238a0:	f800283a 	ret
   238a4:	00c000f4 	movhi	r3,3
   238a8:	18cfca17 	ldw	r3,16168(r3)
   238ac:	183ff926 	beq	r3,zero,23894 <_write_r+0x34>
   238b0:	80c00015 	stw	r3,0(r16)
   238b4:	dfc00117 	ldw	ra,4(sp)
   238b8:	dc000017 	ldw	r16,0(sp)
   238bc:	dec00204 	addi	sp,sp,8
   238c0:	f800283a 	ret

000238c4 <_close_r>:
   238c4:	defffe04 	addi	sp,sp,-8
   238c8:	dc000015 	stw	r16,0(sp)
   238cc:	008000f4 	movhi	r2,3
   238d0:	2021883a 	mov	r16,r4
   238d4:	2809883a 	mov	r4,r5
   238d8:	dfc00115 	stw	ra,4(sp)
   238dc:	100fca15 	stw	zero,16168(r2)
   238e0:	002cfec0 	call	2cfec <close>
   238e4:	10ffffd8 	cmpnei	r3,r2,-1
   238e8:	18000426 	beq	r3,zero,238fc <_close_r+0x38>
   238ec:	dfc00117 	ldw	ra,4(sp)
   238f0:	dc000017 	ldw	r16,0(sp)
   238f4:	dec00204 	addi	sp,sp,8
   238f8:	f800283a 	ret
   238fc:	00c000f4 	movhi	r3,3
   23900:	18cfca17 	ldw	r3,16168(r3)
   23904:	183ff926 	beq	r3,zero,238ec <_close_r+0x28>
   23908:	80c00015 	stw	r3,0(r16)
   2390c:	dfc00117 	ldw	ra,4(sp)
   23910:	dc000017 	ldw	r16,0(sp)
   23914:	dec00204 	addi	sp,sp,8
   23918:	f800283a 	ret

0002391c <__sflush_r>:
   2391c:	2880030b 	ldhu	r2,12(r5)
   23920:	defffb04 	addi	sp,sp,-20
   23924:	dcc00315 	stw	r19,12(sp)
   23928:	dc000015 	stw	r16,0(sp)
   2392c:	dfc00415 	stw	ra,16(sp)
   23930:	dc800215 	stw	r18,8(sp)
   23934:	dc400115 	stw	r17,4(sp)
   23938:	10c0020c 	andi	r3,r2,8
   2393c:	2821883a 	mov	r16,r5
   23940:	2027883a 	mov	r19,r4
   23944:	18003f1e 	bne	r3,zero,23a44 <__sflush_r+0x128>
   23948:	28c00117 	ldw	r3,4(r5)
   2394c:	10820014 	ori	r2,r2,2048
   23950:	2880030d 	sth	r2,12(r5)
   23954:	00c0550e 	bge	zero,r3,23aac <__sflush_r+0x190>
   23958:	82000a17 	ldw	r8,40(r16)
   2395c:	40003126 	beq	r8,zero,23a24 <__sflush_r+0x108>
   23960:	9c400017 	ldw	r17,0(r19)
   23964:	1104000c 	andi	r4,r2,4096
   23968:	98000015 	stw	zero,0(r19)
   2396c:	81400717 	ldw	r5,28(r16)
   23970:	1007883a 	mov	r3,r2
   23974:	2000521e 	bne	r4,zero,23ac0 <__sflush_r+0x1a4>
   23978:	01c00044 	movi	r7,1
   2397c:	000d883a 	mov	r6,zero
   23980:	9809883a 	mov	r4,r19
   23984:	403ee83a 	callr	r8
   23988:	10ffffd8 	cmpnei	r3,r2,-1
   2398c:	18005826 	beq	r3,zero,23af0 <__sflush_r+0x1d4>
   23990:	80c0030b 	ldhu	r3,12(r16)
   23994:	82000a17 	ldw	r8,40(r16)
   23998:	81400717 	ldw	r5,28(r16)
   2399c:	18c0010c 	andi	r3,r3,4
   239a0:	18000626 	beq	r3,zero,239bc <__sflush_r+0xa0>
   239a4:	81000117 	ldw	r4,4(r16)
   239a8:	80c00c17 	ldw	r3,48(r16)
   239ac:	1105c83a 	sub	r2,r2,r4
   239b0:	18000226 	beq	r3,zero,239bc <__sflush_r+0xa0>
   239b4:	80c00f17 	ldw	r3,60(r16)
   239b8:	10c5c83a 	sub	r2,r2,r3
   239bc:	100d883a 	mov	r6,r2
   239c0:	000f883a 	mov	r7,zero
   239c4:	9809883a 	mov	r4,r19
   239c8:	403ee83a 	callr	r8
   239cc:	10ffffd8 	cmpnei	r3,r2,-1
   239d0:	18003d1e 	bne	r3,zero,23ac8 <__sflush_r+0x1ac>
   239d4:	99000017 	ldw	r4,0(r19)
   239d8:	80c0030b 	ldhu	r3,12(r16)
   239dc:	20004e26 	beq	r4,zero,23b18 <__sflush_r+0x1fc>
   239e0:	21400760 	cmpeqi	r5,r4,29
   239e4:	2800021e 	bne	r5,zero,239f0 <__sflush_r+0xd4>
   239e8:	210005a0 	cmpeqi	r4,r4,22
   239ec:	20002c26 	beq	r4,zero,23aa0 <__sflush_r+0x184>
   239f0:	80800417 	ldw	r2,16(r16)
   239f4:	18fdffcc 	andi	r3,r3,63487
   239f8:	80c0030d 	sth	r3,12(r16)
   239fc:	80000115 	stw	zero,4(r16)
   23a00:	80800015 	stw	r2,0(r16)
   23a04:	81400c17 	ldw	r5,48(r16)
   23a08:	9c400015 	stw	r17,0(r19)
   23a0c:	28000526 	beq	r5,zero,23a24 <__sflush_r+0x108>
   23a10:	80801004 	addi	r2,r16,64
   23a14:	28800226 	beq	r5,r2,23a20 <__sflush_r+0x104>
   23a18:	9809883a 	mov	r4,r19
   23a1c:	00240f40 	call	240f4 <_free_r>
   23a20:	80000c15 	stw	zero,48(r16)
   23a24:	0005883a 	mov	r2,zero
   23a28:	dfc00417 	ldw	ra,16(sp)
   23a2c:	dcc00317 	ldw	r19,12(sp)
   23a30:	dc800217 	ldw	r18,8(sp)
   23a34:	dc400117 	ldw	r17,4(sp)
   23a38:	dc000017 	ldw	r16,0(sp)
   23a3c:	dec00504 	addi	sp,sp,20
   23a40:	f800283a 	ret
   23a44:	2c800417 	ldw	r18,16(r5)
   23a48:	903ff626 	beq	r18,zero,23a24 <__sflush_r+0x108>
   23a4c:	2c400017 	ldw	r17,0(r5)
   23a50:	108000cc 	andi	r2,r2,3
   23a54:	2c800015 	stw	r18,0(r5)
   23a58:	8ca3c83a 	sub	r17,r17,r18
   23a5c:	1000161e 	bne	r2,zero,23ab8 <__sflush_r+0x19c>
   23a60:	28800517 	ldw	r2,20(r5)
   23a64:	80800215 	stw	r2,8(r16)
   23a68:	04400316 	blt	zero,r17,23a78 <__sflush_r+0x15c>
   23a6c:	003fed06 	br	23a24 <__sflush_r+0x108>
   23a70:	90a5883a 	add	r18,r18,r2
   23a74:	047feb0e 	bge	zero,r17,23a24 <__sflush_r+0x108>
   23a78:	80800917 	ldw	r2,36(r16)
   23a7c:	81400717 	ldw	r5,28(r16)
   23a80:	880f883a 	mov	r7,r17
   23a84:	900d883a 	mov	r6,r18
   23a88:	9809883a 	mov	r4,r19
   23a8c:	103ee83a 	callr	r2
   23a90:	88a3c83a 	sub	r17,r17,r2
   23a94:	00bff616 	blt	zero,r2,23a70 <__sflush_r+0x154>
   23a98:	80c0030b 	ldhu	r3,12(r16)
   23a9c:	00bfffc4 	movi	r2,-1
   23aa0:	18c01014 	ori	r3,r3,64
   23aa4:	80c0030d 	sth	r3,12(r16)
   23aa8:	003fdf06 	br	23a28 <__sflush_r+0x10c>
   23aac:	28c00f17 	ldw	r3,60(r5)
   23ab0:	00ffa916 	blt	zero,r3,23958 <__sflush_r+0x3c>
   23ab4:	003fdb06 	br	23a24 <__sflush_r+0x108>
   23ab8:	0005883a 	mov	r2,zero
   23abc:	003fe906 	br	23a64 <__sflush_r+0x148>
   23ac0:	80801417 	ldw	r2,80(r16)
   23ac4:	003fb506 	br	2399c <__sflush_r+0x80>
   23ac8:	80c0030b 	ldhu	r3,12(r16)
   23acc:	81000417 	ldw	r4,16(r16)
   23ad0:	80000115 	stw	zero,4(r16)
   23ad4:	197dffcc 	andi	r5,r3,63487
   23ad8:	8140030d 	sth	r5,12(r16)
   23adc:	81000015 	stw	r4,0(r16)
   23ae0:	18c4000c 	andi	r3,r3,4096
   23ae4:	183fc726 	beq	r3,zero,23a04 <__sflush_r+0xe8>
   23ae8:	80801415 	stw	r2,80(r16)
   23aec:	003fc506 	br	23a04 <__sflush_r+0xe8>
   23af0:	98c00017 	ldw	r3,0(r19)
   23af4:	183fa626 	beq	r3,zero,23990 <__sflush_r+0x74>
   23af8:	19000760 	cmpeqi	r4,r3,29
   23afc:	20000e1e 	bne	r4,zero,23b38 <__sflush_r+0x21c>
   23b00:	18c00598 	cmpnei	r3,r3,22
   23b04:	18000c26 	beq	r3,zero,23b38 <__sflush_r+0x21c>
   23b08:	80c0030b 	ldhu	r3,12(r16)
   23b0c:	18c01014 	ori	r3,r3,64
   23b10:	80c0030d 	sth	r3,12(r16)
   23b14:	003fc406 	br	23a28 <__sflush_r+0x10c>
   23b18:	81000417 	ldw	r4,16(r16)
   23b1c:	197dffcc 	andi	r5,r3,63487
   23b20:	8140030d 	sth	r5,12(r16)
   23b24:	80000115 	stw	zero,4(r16)
   23b28:	81000015 	stw	r4,0(r16)
   23b2c:	18c4000c 	andi	r3,r3,4096
   23b30:	183fb426 	beq	r3,zero,23a04 <__sflush_r+0xe8>
   23b34:	003fec06 	br	23ae8 <__sflush_r+0x1cc>
   23b38:	9c400015 	stw	r17,0(r19)
   23b3c:	0005883a 	mov	r2,zero
   23b40:	003fb906 	br	23a28 <__sflush_r+0x10c>

00023b44 <_fflush_r>:
   23b44:	defffd04 	addi	sp,sp,-12
   23b48:	dc000115 	stw	r16,4(sp)
   23b4c:	dfc00215 	stw	ra,8(sp)
   23b50:	2021883a 	mov	r16,r4
   23b54:	20000226 	beq	r4,zero,23b60 <_fflush_r+0x1c>
   23b58:	20800e17 	ldw	r2,56(r4)
   23b5c:	10000726 	beq	r2,zero,23b7c <_fflush_r+0x38>
   23b60:	2880030f 	ldh	r2,12(r5)
   23b64:	10000a1e 	bne	r2,zero,23b90 <_fflush_r+0x4c>
   23b68:	0005883a 	mov	r2,zero
   23b6c:	dfc00217 	ldw	ra,8(sp)
   23b70:	dc000117 	ldw	r16,4(sp)
   23b74:	dec00304 	addi	sp,sp,12
   23b78:	f800283a 	ret
   23b7c:	d9400015 	stw	r5,0(sp)
   23b80:	0023ed80 	call	23ed8 <__sinit>
   23b84:	d9400017 	ldw	r5,0(sp)
   23b88:	2880030f 	ldh	r2,12(r5)
   23b8c:	103ff626 	beq	r2,zero,23b68 <_fflush_r+0x24>
   23b90:	8009883a 	mov	r4,r16
   23b94:	dfc00217 	ldw	ra,8(sp)
   23b98:	dc000117 	ldw	r16,4(sp)
   23b9c:	dec00304 	addi	sp,sp,12
   23ba0:	002391c1 	jmpi	2391c <__sflush_r>

00023ba4 <fflush>:
   23ba4:	200b883a 	mov	r5,r4
   23ba8:	20000326 	beq	r4,zero,23bb8 <fflush+0x14>
   23bac:	008000f4 	movhi	r2,3
   23bb0:	1108aa17 	ldw	r4,8872(r2)
   23bb4:	0023b441 	jmpi	23b44 <_fflush_r>
   23bb8:	008000f4 	movhi	r2,3
   23bbc:	1108a917 	ldw	r4,8868(r2)
   23bc0:	014000b4 	movhi	r5,2
   23bc4:	294ed104 	addi	r5,r5,15172
   23bc8:	00244881 	jmpi	24488 <_fwalk_reent>

00023bcc <__fp_lock>:
   23bcc:	0005883a 	mov	r2,zero
   23bd0:	f800283a 	ret

00023bd4 <_cleanup_r>:
   23bd4:	014000b4 	movhi	r5,2
   23bd8:	295a7304 	addi	r5,r5,27084
   23bdc:	00244881 	jmpi	24488 <_fwalk_reent>

00023be0 <__sinit.part.0>:
   23be0:	00c000b4 	movhi	r3,2
   23be4:	20800117 	ldw	r2,4(r4)
   23be8:	18cef504 	addi	r3,r3,15316
   23bec:	20c00f15 	stw	r3,60(r4)
   23bf0:	2140bb04 	addi	r5,r4,748
   23bf4:	00c000c4 	movi	r3,3
   23bf8:	20c0b915 	stw	r3,740(r4)
   23bfc:	2140ba15 	stw	r5,744(r4)
   23c00:	2000b815 	stw	zero,736(r4)
   23c04:	10001705 	stb	zero,92(r2)
   23c08:	10001745 	stb	zero,93(r2)
   23c0c:	10001785 	stb	zero,94(r2)
   23c10:	100017c5 	stb	zero,95(r2)
   23c14:	10001805 	stb	zero,96(r2)
   23c18:	10001845 	stb	zero,97(r2)
   23c1c:	10001885 	stb	zero,98(r2)
   23c20:	100018c5 	stb	zero,99(r2)
   23c24:	00c00104 	movi	r3,4
   23c28:	10c00315 	stw	r3,12(r2)
   23c2c:	020000b4 	movhi	r8,2
   23c30:	20c00217 	ldw	r3,8(r4)
   23c34:	01c000b4 	movhi	r7,2
   23c38:	018000b4 	movhi	r6,2
   23c3c:	014000b4 	movhi	r5,2
   23c40:	42079b04 	addi	r8,r8,7788
   23c44:	39c7b204 	addi	r7,r7,7880
   23c48:	3187d204 	addi	r6,r6,8008
   23c4c:	2947e904 	addi	r5,r5,8100
   23c50:	02400074 	movhi	r9,1
   23c54:	10001915 	stw	zero,100(r2)
   23c58:	10000015 	stw	zero,0(r2)
   23c5c:	10000115 	stw	zero,4(r2)
   23c60:	10000215 	stw	zero,8(r2)
   23c64:	10000415 	stw	zero,16(r2)
   23c68:	10000515 	stw	zero,20(r2)
   23c6c:	10000615 	stw	zero,24(r2)
   23c70:	10800715 	stw	r2,28(r2)
   23c74:	12000815 	stw	r8,32(r2)
   23c78:	11c00915 	stw	r7,36(r2)
   23c7c:	11800a15 	stw	r6,40(r2)
   23c80:	11400b15 	stw	r5,44(r2)
   23c84:	4a400284 	addi	r9,r9,10
   23c88:	1a400315 	stw	r9,12(r3)
   23c8c:	18001915 	stw	zero,100(r3)
   23c90:	18000015 	stw	zero,0(r3)
   23c94:	18000115 	stw	zero,4(r3)
   23c98:	18000215 	stw	zero,8(r3)
   23c9c:	18000415 	stw	zero,16(r3)
   23ca0:	18001705 	stb	zero,92(r3)
   23ca4:	18001745 	stb	zero,93(r3)
   23ca8:	18001785 	stb	zero,94(r3)
   23cac:	180017c5 	stb	zero,95(r3)
   23cb0:	18001805 	stb	zero,96(r3)
   23cb4:	18001845 	stb	zero,97(r3)
   23cb8:	18001885 	stb	zero,98(r3)
   23cbc:	180018c5 	stb	zero,99(r3)
   23cc0:	20800317 	ldw	r2,12(r4)
   23cc4:	024000b4 	movhi	r9,2
   23cc8:	18000515 	stw	zero,20(r3)
   23ccc:	18000615 	stw	zero,24(r3)
   23cd0:	18c00715 	stw	r3,28(r3)
   23cd4:	1a000815 	stw	r8,32(r3)
   23cd8:	19c00915 	stw	r7,36(r3)
   23cdc:	19800a15 	stw	r6,40(r3)
   23ce0:	19400b15 	stw	r5,44(r3)
   23ce4:	4a400484 	addi	r9,r9,18
   23ce8:	10001915 	stw	zero,100(r2)
   23cec:	10000015 	stw	zero,0(r2)
   23cf0:	10000115 	stw	zero,4(r2)
   23cf4:	10000215 	stw	zero,8(r2)
   23cf8:	12400315 	stw	r9,12(r2)
   23cfc:	10000415 	stw	zero,16(r2)
   23d00:	10000515 	stw	zero,20(r2)
   23d04:	10000615 	stw	zero,24(r2)
   23d08:	10001705 	stb	zero,92(r2)
   23d0c:	10001745 	stb	zero,93(r2)
   23d10:	10001785 	stb	zero,94(r2)
   23d14:	100017c5 	stb	zero,95(r2)
   23d18:	10001805 	stb	zero,96(r2)
   23d1c:	10001845 	stb	zero,97(r2)
   23d20:	10001885 	stb	zero,98(r2)
   23d24:	100018c5 	stb	zero,99(r2)
   23d28:	10800715 	stw	r2,28(r2)
   23d2c:	12000815 	stw	r8,32(r2)
   23d30:	11c00915 	stw	r7,36(r2)
   23d34:	11800a15 	stw	r6,40(r2)
   23d38:	11400b15 	stw	r5,44(r2)
   23d3c:	00800044 	movi	r2,1
   23d40:	20800e15 	stw	r2,56(r4)
   23d44:	f800283a 	ret

00023d48 <__fp_unlock>:
   23d48:	0005883a 	mov	r2,zero
   23d4c:	f800283a 	ret

00023d50 <__sfmoreglue>:
   23d50:	defffc04 	addi	sp,sp,-16
   23d54:	dc800215 	stw	r18,8(sp)
   23d58:	2825883a 	mov	r18,r5
   23d5c:	dc000015 	stw	r16,0(sp)
   23d60:	01401a04 	movi	r5,104
   23d64:	2021883a 	mov	r16,r4
   23d68:	913fffc4 	addi	r4,r18,-1
   23d6c:	dfc00315 	stw	ra,12(sp)
   23d70:	dc400115 	stw	r17,4(sp)
   23d74:	002a4b80 	call	2a4b8 <__mulsi3>
   23d78:	8009883a 	mov	r4,r16
   23d7c:	11401d04 	addi	r5,r2,116
   23d80:	1023883a 	mov	r17,r2
   23d84:	00213640 	call	21364 <_malloc_r>
   23d88:	1021883a 	mov	r16,r2
   23d8c:	10000726 	beq	r2,zero,23dac <__sfmoreglue+0x5c>
   23d90:	11000304 	addi	r4,r2,12
   23d94:	10000015 	stw	zero,0(r2)
   23d98:	14800115 	stw	r18,4(r2)
   23d9c:	11000215 	stw	r4,8(r2)
   23da0:	89801a04 	addi	r6,r17,104
   23da4:	000b883a 	mov	r5,zero
   23da8:	00253b40 	call	253b4 <memset>
   23dac:	8005883a 	mov	r2,r16
   23db0:	dfc00317 	ldw	ra,12(sp)
   23db4:	dc800217 	ldw	r18,8(sp)
   23db8:	dc400117 	ldw	r17,4(sp)
   23dbc:	dc000017 	ldw	r16,0(sp)
   23dc0:	dec00404 	addi	sp,sp,16
   23dc4:	f800283a 	ret

00023dc8 <__sfp>:
   23dc8:	defffd04 	addi	sp,sp,-12
   23dcc:	008000f4 	movhi	r2,3
   23dd0:	dc000015 	stw	r16,0(sp)
   23dd4:	1408a917 	ldw	r16,8868(r2)
   23dd8:	dc400115 	stw	r17,4(sp)
   23ddc:	dfc00215 	stw	ra,8(sp)
   23de0:	80800e17 	ldw	r2,56(r16)
   23de4:	2023883a 	mov	r17,r4
   23de8:	10002b26 	beq	r2,zero,23e98 <__sfp+0xd0>
   23dec:	8400b804 	addi	r16,r16,736
   23df0:	80c00117 	ldw	r3,4(r16)
   23df4:	80800217 	ldw	r2,8(r16)
   23df8:	18ffffc4 	addi	r3,r3,-1
   23dfc:	1800030e 	bge	r3,zero,23e0c <__sfp+0x44>
   23e00:	00002106 	br	23e88 <__sfp+0xc0>
   23e04:	10801a04 	addi	r2,r2,104
   23e08:	30001f26 	beq	r6,zero,23e88 <__sfp+0xc0>
   23e0c:	1140030f 	ldh	r5,12(r2)
   23e10:	18ffffc4 	addi	r3,r3,-1
   23e14:	19bfffd8 	cmpnei	r6,r3,-1
   23e18:	283ffa1e 	bne	r5,zero,23e04 <__sfp+0x3c>
   23e1c:	00fffff4 	movhi	r3,65535
   23e20:	18c00044 	addi	r3,r3,1
   23e24:	10001915 	stw	zero,100(r2)
   23e28:	10000015 	stw	zero,0(r2)
   23e2c:	10000115 	stw	zero,4(r2)
   23e30:	10000215 	stw	zero,8(r2)
   23e34:	10c00315 	stw	r3,12(r2)
   23e38:	10000415 	stw	zero,16(r2)
   23e3c:	10000515 	stw	zero,20(r2)
   23e40:	10000615 	stw	zero,24(r2)
   23e44:	10001705 	stb	zero,92(r2)
   23e48:	10001745 	stb	zero,93(r2)
   23e4c:	10001785 	stb	zero,94(r2)
   23e50:	100017c5 	stb	zero,95(r2)
   23e54:	10001805 	stb	zero,96(r2)
   23e58:	10001845 	stb	zero,97(r2)
   23e5c:	10001885 	stb	zero,98(r2)
   23e60:	100018c5 	stb	zero,99(r2)
   23e64:	10000c15 	stw	zero,48(r2)
   23e68:	10000d15 	stw	zero,52(r2)
   23e6c:	10001115 	stw	zero,68(r2)
   23e70:	10001215 	stw	zero,72(r2)
   23e74:	dfc00217 	ldw	ra,8(sp)
   23e78:	dc400117 	ldw	r17,4(sp)
   23e7c:	dc000017 	ldw	r16,0(sp)
   23e80:	dec00304 	addi	sp,sp,12
   23e84:	f800283a 	ret
   23e88:	80800017 	ldw	r2,0(r16)
   23e8c:	10000526 	beq	r2,zero,23ea4 <__sfp+0xdc>
   23e90:	1021883a 	mov	r16,r2
   23e94:	003fd606 	br	23df0 <__sfp+0x28>
   23e98:	8009883a 	mov	r4,r16
   23e9c:	0023be00 	call	23be0 <__sinit.part.0>
   23ea0:	003fd206 	br	23dec <__sfp+0x24>
   23ea4:	01400104 	movi	r5,4
   23ea8:	8809883a 	mov	r4,r17
   23eac:	0023d500 	call	23d50 <__sfmoreglue>
   23eb0:	80800015 	stw	r2,0(r16)
   23eb4:	103ff61e 	bne	r2,zero,23e90 <__sfp+0xc8>
   23eb8:	00c00304 	movi	r3,12
   23ebc:	88c00015 	stw	r3,0(r17)
   23ec0:	003fec06 	br	23e74 <__sfp+0xac>

00023ec4 <_cleanup>:
   23ec4:	008000f4 	movhi	r2,3
   23ec8:	1108a917 	ldw	r4,8868(r2)
   23ecc:	014000b4 	movhi	r5,2
   23ed0:	295a7304 	addi	r5,r5,27084
   23ed4:	00244881 	jmpi	24488 <_fwalk_reent>

00023ed8 <__sinit>:
   23ed8:	20800e17 	ldw	r2,56(r4)
   23edc:	10000126 	beq	r2,zero,23ee4 <__sinit+0xc>
   23ee0:	f800283a 	ret
   23ee4:	0023be01 	jmpi	23be0 <__sinit.part.0>

00023ee8 <__sfp_lock_acquire>:
   23ee8:	f800283a 	ret

00023eec <__sfp_lock_release>:
   23eec:	f800283a 	ret

00023ef0 <__sinit_lock_acquire>:
   23ef0:	f800283a 	ret

00023ef4 <__sinit_lock_release>:
   23ef4:	f800283a 	ret

00023ef8 <__fp_lock_all>:
   23ef8:	008000f4 	movhi	r2,3
   23efc:	1108aa17 	ldw	r4,8872(r2)
   23f00:	014000b4 	movhi	r5,2
   23f04:	294ef304 	addi	r5,r5,15308
   23f08:	00243f01 	jmpi	243f0 <_fwalk>

00023f0c <__fp_unlock_all>:
   23f0c:	008000f4 	movhi	r2,3
   23f10:	1108aa17 	ldw	r4,8872(r2)
   23f14:	014000b4 	movhi	r5,2
   23f18:	294f5204 	addi	r5,r5,15688
   23f1c:	00243f01 	jmpi	243f0 <_fwalk>

00023f20 <__sflags>:
   23f20:	28800007 	ldb	r2,0(r5)
   23f24:	10c01ca0 	cmpeqi	r3,r2,114
   23f28:	1800271e 	bne	r3,zero,23fc8 <__sflags+0xa8>
   23f2c:	10c01de0 	cmpeqi	r3,r2,119
   23f30:	1800061e 	bne	r3,zero,23f4c <__sflags+0x2c>
   23f34:	10801860 	cmpeqi	r2,r2,97
   23f38:	10001f1e 	bne	r2,zero,23fb8 <__sflags+0x98>
   23f3c:	00800584 	movi	r2,22
   23f40:	20800015 	stw	r2,0(r4)
   23f44:	0005883a 	mov	r2,zero
   23f48:	f800283a 	ret
   23f4c:	02018004 	movi	r8,1536
   23f50:	01000044 	movi	r4,1
   23f54:	00800204 	movi	r2,8
   23f58:	28c00047 	ldb	r3,1(r5)
   23f5c:	29400044 	addi	r5,r5,1
   23f60:	18001226 	beq	r3,zero,23fac <__sflags+0x8c>
   23f64:	02bff8c4 	movi	r10,-29
   23f68:	027fff04 	movi	r9,-4
   23f6c:	00000506 	br	23f84 <__sflags+0x64>
   23f70:	18000126 	beq	r3,zero,23f78 <__sflags+0x58>
   23f74:	21020014 	ori	r4,r4,2048
   23f78:	28c00047 	ldb	r3,1(r5)
   23f7c:	29400044 	addi	r5,r5,1
   23f80:	18000a26 	beq	r3,zero,23fac <__sflags+0x8c>
   23f84:	19c00ae0 	cmpeqi	r7,r3,43
   23f88:	18c01e20 	cmpeqi	r3,r3,120
   23f8c:	383ff826 	beq	r7,zero,23f70 <__sflags+0x50>
   23f90:	28c00047 	ldb	r3,1(r5)
   23f94:	1284703a 	and	r2,r2,r10
   23f98:	2248703a 	and	r4,r4,r9
   23f9c:	10800414 	ori	r2,r2,16
   23fa0:	21000094 	ori	r4,r4,2
   23fa4:	29400044 	addi	r5,r5,1
   23fa8:	183ff61e 	bne	r3,zero,23f84 <__sflags+0x64>
   23fac:	4108b03a 	or	r4,r8,r4
   23fb0:	31000015 	stw	r4,0(r6)
   23fb4:	f800283a 	ret
   23fb8:	02008204 	movi	r8,520
   23fbc:	01000044 	movi	r4,1
   23fc0:	00804204 	movi	r2,264
   23fc4:	003fe406 	br	23f58 <__sflags+0x38>
   23fc8:	0011883a 	mov	r8,zero
   23fcc:	0009883a 	mov	r4,zero
   23fd0:	00800104 	movi	r2,4
   23fd4:	003fe006 	br	23f58 <__sflags+0x38>

00023fd8 <_malloc_trim_r>:
   23fd8:	defffb04 	addi	sp,sp,-20
   23fdc:	dcc00315 	stw	r19,12(sp)
   23fe0:	04c000f4 	movhi	r19,3
   23fe4:	dc800215 	stw	r18,8(sp)
   23fe8:	dc400115 	stw	r17,4(sp)
   23fec:	dc000015 	stw	r16,0(sp)
   23ff0:	dfc00415 	stw	ra,16(sp)
   23ff4:	2821883a 	mov	r16,r5
   23ff8:	9cc2bb04 	addi	r19,r19,2796
   23ffc:	2025883a 	mov	r18,r4
   24000:	002d89c0 	call	2d89c <__malloc_lock>
   24004:	98800217 	ldw	r2,8(r19)
   24008:	14400117 	ldw	r17,4(r2)
   2400c:	00bfff04 	movi	r2,-4
   24010:	88a2703a 	and	r17,r17,r2
   24014:	8c21c83a 	sub	r16,r17,r16
   24018:	8403fbc4 	addi	r16,r16,4079
   2401c:	8020d33a 	srli	r16,r16,12
   24020:	843fffc4 	addi	r16,r16,-1
   24024:	8020933a 	slli	r16,r16,12
   24028:	80840008 	cmpgei	r2,r16,4096
   2402c:	10000626 	beq	r2,zero,24048 <_malloc_trim_r+0x70>
   24030:	000b883a 	mov	r5,zero
   24034:	9009883a 	mov	r4,r18
   24038:	0021e140 	call	21e14 <_sbrk_r>
   2403c:	98c00217 	ldw	r3,8(r19)
   24040:	1c47883a 	add	r3,r3,r17
   24044:	10c00a26 	beq	r2,r3,24070 <_malloc_trim_r+0x98>
   24048:	9009883a 	mov	r4,r18
   2404c:	002d8c00 	call	2d8c0 <__malloc_unlock>
   24050:	0005883a 	mov	r2,zero
   24054:	dfc00417 	ldw	ra,16(sp)
   24058:	dcc00317 	ldw	r19,12(sp)
   2405c:	dc800217 	ldw	r18,8(sp)
   24060:	dc400117 	ldw	r17,4(sp)
   24064:	dc000017 	ldw	r16,0(sp)
   24068:	dec00504 	addi	sp,sp,20
   2406c:	f800283a 	ret
   24070:	040bc83a 	sub	r5,zero,r16
   24074:	9009883a 	mov	r4,r18
   24078:	0021e140 	call	21e14 <_sbrk_r>
   2407c:	10bfffd8 	cmpnei	r2,r2,-1
   24080:	10000d26 	beq	r2,zero,240b8 <_malloc_trim_r+0xe0>
   24084:	008000f4 	movhi	r2,3
   24088:	108fdc17 	ldw	r2,16240(r2)
   2408c:	98c00217 	ldw	r3,8(r19)
   24090:	8c23c83a 	sub	r17,r17,r16
   24094:	8c400054 	ori	r17,r17,1
   24098:	1421c83a 	sub	r16,r2,r16
   2409c:	1c400115 	stw	r17,4(r3)
   240a0:	008000f4 	movhi	r2,3
   240a4:	9009883a 	mov	r4,r18
   240a8:	140fdc15 	stw	r16,16240(r2)
   240ac:	002d8c00 	call	2d8c0 <__malloc_unlock>
   240b0:	00800044 	movi	r2,1
   240b4:	003fe706 	br	24054 <_malloc_trim_r+0x7c>
   240b8:	000b883a 	mov	r5,zero
   240bc:	9009883a 	mov	r4,r18
   240c0:	0021e140 	call	21e14 <_sbrk_r>
   240c4:	99000217 	ldw	r4,8(r19)
   240c8:	1107c83a 	sub	r3,r2,r4
   240cc:	19400410 	cmplti	r5,r3,16
   240d0:	283fdd1e 	bne	r5,zero,24048 <_malloc_trim_r+0x70>
   240d4:	014000f4 	movhi	r5,3
   240d8:	2948ab17 	ldw	r5,8876(r5)
   240dc:	18c00054 	ori	r3,r3,1
   240e0:	20c00115 	stw	r3,4(r4)
   240e4:	1145c83a 	sub	r2,r2,r5
   240e8:	014000f4 	movhi	r5,3
   240ec:	288fdc15 	stw	r2,16240(r5)
   240f0:	003fd506 	br	24048 <_malloc_trim_r+0x70>

000240f4 <_free_r>:
   240f4:	28004f26 	beq	r5,zero,24234 <_free_r+0x140>
   240f8:	defffd04 	addi	sp,sp,-12
   240fc:	dc400115 	stw	r17,4(sp)
   24100:	dc000015 	stw	r16,0(sp)
   24104:	2023883a 	mov	r17,r4
   24108:	2821883a 	mov	r16,r5
   2410c:	dfc00215 	stw	ra,8(sp)
   24110:	002d89c0 	call	2d89c <__malloc_lock>
   24114:	81ffff17 	ldw	r7,-4(r16)
   24118:	00bfff84 	movi	r2,-2
   2411c:	80fffe04 	addi	r3,r16,-8
   24120:	3884703a 	and	r2,r7,r2
   24124:	010000f4 	movhi	r4,3
   24128:	188d883a 	add	r6,r3,r2
   2412c:	2102bb04 	addi	r4,r4,2796
   24130:	31400117 	ldw	r5,4(r6)
   24134:	22000217 	ldw	r8,8(r4)
   24138:	027fff04 	movi	r9,-4
   2413c:	2a4a703a 	and	r5,r5,r9
   24140:	41806426 	beq	r8,r6,242d4 <_free_r+0x1e0>
   24144:	31400115 	stw	r5,4(r6)
   24148:	39c0004c 	andi	r7,r7,1
   2414c:	3151883a 	add	r8,r6,r5
   24150:	3800281e 	bne	r7,zero,241f4 <_free_r+0x100>
   24154:	82bffe17 	ldw	r10,-8(r16)
   24158:	42000117 	ldw	r8,4(r8)
   2415c:	01c000f4 	movhi	r7,3
   24160:	1a87c83a 	sub	r3,r3,r10
   24164:	1a400217 	ldw	r9,8(r3)
   24168:	39c2bd04 	addi	r7,r7,2804
   2416c:	1285883a 	add	r2,r2,r10
   24170:	4200004c 	andi	r8,r8,1
   24174:	49c04c26 	beq	r9,r7,242a8 <_free_r+0x1b4>
   24178:	1a800317 	ldw	r10,12(r3)
   2417c:	4a800315 	stw	r10,12(r9)
   24180:	52400215 	stw	r9,8(r10)
   24184:	40007126 	beq	r8,zero,2434c <_free_r+0x258>
   24188:	11400054 	ori	r5,r2,1
   2418c:	19400115 	stw	r5,4(r3)
   24190:	30800015 	stw	r2,0(r6)
   24194:	11408028 	cmpgeui	r5,r2,512
   24198:	28002c1e 	bne	r5,zero,2424c <_free_r+0x158>
   2419c:	100ad0fa 	srli	r5,r2,3
   241a0:	100cd17a 	srli	r6,r2,5
   241a4:	00800044 	movi	r2,1
   241a8:	29400044 	addi	r5,r5,1
   241ac:	280a90fa 	slli	r5,r5,3
   241b0:	21c00117 	ldw	r7,4(r4)
   241b4:	1184983a 	sll	r2,r2,r6
   241b8:	214b883a 	add	r5,r4,r5
   241bc:	29800017 	ldw	r6,0(r5)
   241c0:	11c4b03a 	or	r2,r2,r7
   241c4:	29fffe04 	addi	r7,r5,-8
   241c8:	19c00315 	stw	r7,12(r3)
   241cc:	19800215 	stw	r6,8(r3)
   241d0:	20800115 	stw	r2,4(r4)
   241d4:	28c00015 	stw	r3,0(r5)
   241d8:	30c00315 	stw	r3,12(r6)
   241dc:	8809883a 	mov	r4,r17
   241e0:	dfc00217 	ldw	ra,8(sp)
   241e4:	dc400117 	ldw	r17,4(sp)
   241e8:	dc000017 	ldw	r16,0(sp)
   241ec:	dec00304 	addi	sp,sp,12
   241f0:	002d8c01 	jmpi	2d8c0 <__malloc_unlock>
   241f4:	41c00117 	ldw	r7,4(r8)
   241f8:	39c0004c 	andi	r7,r7,1
   241fc:	38000e1e 	bne	r7,zero,24238 <_free_r+0x144>
   24200:	01c000f4 	movhi	r7,3
   24204:	1145883a 	add	r2,r2,r5
   24208:	39c2bd04 	addi	r7,r7,2804
   2420c:	31400217 	ldw	r5,8(r6)
   24210:	12400054 	ori	r9,r2,1
   24214:	1891883a 	add	r8,r3,r2
   24218:	29c05226 	beq	r5,r7,24364 <_free_r+0x270>
   2421c:	31800317 	ldw	r6,12(r6)
   24220:	29800315 	stw	r6,12(r5)
   24224:	31400215 	stw	r5,8(r6)
   24228:	1a400115 	stw	r9,4(r3)
   2422c:	40800015 	stw	r2,0(r8)
   24230:	003fd806 	br	24194 <_free_r+0xa0>
   24234:	f800283a 	ret
   24238:	11400054 	ori	r5,r2,1
   2423c:	817fff15 	stw	r5,-4(r16)
   24240:	30800015 	stw	r2,0(r6)
   24244:	11408028 	cmpgeui	r5,r2,512
   24248:	283fd426 	beq	r5,zero,2419c <_free_r+0xa8>
   2424c:	100ad27a 	srli	r5,r2,9
   24250:	29800168 	cmpgeui	r6,r5,5
   24254:	3000341e 	bne	r6,zero,24328 <_free_r+0x234>
   24258:	100ad1ba 	srli	r5,r2,6
   2425c:	29800e44 	addi	r6,r5,57
   24260:	300c90fa 	slli	r6,r6,3
   24264:	29c00e04 	addi	r7,r5,56
   24268:	218d883a 	add	r6,r4,r6
   2426c:	31400017 	ldw	r5,0(r6)
   24270:	31bffe04 	addi	r6,r6,-8
   24274:	31404226 	beq	r6,r5,24380 <_free_r+0x28c>
   24278:	01ffff04 	movi	r7,-4
   2427c:	29000117 	ldw	r4,4(r5)
   24280:	21c8703a 	and	r4,r4,r7
   24284:	1100022e 	bgeu	r2,r4,24290 <_free_r+0x19c>
   24288:	29400217 	ldw	r5,8(r5)
   2428c:	317ffb1e 	bne	r6,r5,2427c <_free_r+0x188>
   24290:	29800317 	ldw	r6,12(r5)
   24294:	19800315 	stw	r6,12(r3)
   24298:	19400215 	stw	r5,8(r3)
   2429c:	30c00215 	stw	r3,8(r6)
   242a0:	28c00315 	stw	r3,12(r5)
   242a4:	003fcd06 	br	241dc <_free_r+0xe8>
   242a8:	40004d1e 	bne	r8,zero,243e0 <_free_r+0x2ec>
   242ac:	31000317 	ldw	r4,12(r6)
   242b0:	31800217 	ldw	r6,8(r6)
   242b4:	2885883a 	add	r2,r5,r2
   242b8:	11400054 	ori	r5,r2,1
   242bc:	31000315 	stw	r4,12(r6)
   242c0:	21800215 	stw	r6,8(r4)
   242c4:	19400115 	stw	r5,4(r3)
   242c8:	1887883a 	add	r3,r3,r2
   242cc:	18800015 	stw	r2,0(r3)
   242d0:	003fc206 	br	241dc <_free_r+0xe8>
   242d4:	39c0004c 	andi	r7,r7,1
   242d8:	1145883a 	add	r2,r2,r5
   242dc:	3800071e 	bne	r7,zero,242fc <_free_r+0x208>
   242e0:	81fffe17 	ldw	r7,-8(r16)
   242e4:	19c7c83a 	sub	r3,r3,r7
   242e8:	19400317 	ldw	r5,12(r3)
   242ec:	19800217 	ldw	r6,8(r3)
   242f0:	11c5883a 	add	r2,r2,r7
   242f4:	31400315 	stw	r5,12(r6)
   242f8:	29800215 	stw	r6,8(r5)
   242fc:	014000f4 	movhi	r5,3
   24300:	11800054 	ori	r6,r2,1
   24304:	2948ac17 	ldw	r5,8880(r5)
   24308:	19800115 	stw	r6,4(r3)
   2430c:	20c00215 	stw	r3,8(r4)
   24310:	117fb236 	bltu	r2,r5,241dc <_free_r+0xe8>
   24314:	008000f4 	movhi	r2,3
   24318:	114fcd17 	ldw	r5,16180(r2)
   2431c:	8809883a 	mov	r4,r17
   24320:	0023fd80 	call	23fd8 <_malloc_trim_r>
   24324:	003fad06 	br	241dc <_free_r+0xe8>
   24328:	29800568 	cmpgeui	r6,r5,21
   2432c:	30000926 	beq	r6,zero,24354 <_free_r+0x260>
   24330:	29801568 	cmpgeui	r6,r5,85
   24334:	3000191e 	bne	r6,zero,2439c <_free_r+0x2a8>
   24338:	100ad33a 	srli	r5,r2,12
   2433c:	29801bc4 	addi	r6,r5,111
   24340:	300c90fa 	slli	r6,r6,3
   24344:	29c01b84 	addi	r7,r5,110
   24348:	003fc706 	br	24268 <_free_r+0x174>
   2434c:	1145883a 	add	r2,r2,r5
   24350:	003fae06 	br	2420c <_free_r+0x118>
   24354:	29801704 	addi	r6,r5,92
   24358:	300c90fa 	slli	r6,r6,3
   2435c:	29c016c4 	addi	r7,r5,91
   24360:	003fc106 	br	24268 <_free_r+0x174>
   24364:	20c00515 	stw	r3,20(r4)
   24368:	20c00415 	stw	r3,16(r4)
   2436c:	19c00315 	stw	r7,12(r3)
   24370:	19c00215 	stw	r7,8(r3)
   24374:	1a400115 	stw	r9,4(r3)
   24378:	40800015 	stw	r2,0(r8)
   2437c:	003f9706 	br	241dc <_free_r+0xe8>
   24380:	380fd0ba 	srai	r7,r7,2
   24384:	00800044 	movi	r2,1
   24388:	22000117 	ldw	r8,4(r4)
   2438c:	11ce983a 	sll	r7,r2,r7
   24390:	3a0eb03a 	or	r7,r7,r8
   24394:	21c00115 	stw	r7,4(r4)
   24398:	003fbe06 	br	24294 <_free_r+0x1a0>
   2439c:	29805568 	cmpgeui	r6,r5,341
   243a0:	3000051e 	bne	r6,zero,243b8 <_free_r+0x2c4>
   243a4:	100ad3fa 	srli	r5,r2,15
   243a8:	29801e04 	addi	r6,r5,120
   243ac:	300c90fa 	slli	r6,r6,3
   243b0:	29c01dc4 	addi	r7,r5,119
   243b4:	003fac06 	br	24268 <_free_r+0x174>
   243b8:	29415568 	cmpgeui	r5,r5,1365
   243bc:	2800051e 	bne	r5,zero,243d4 <_free_r+0x2e0>
   243c0:	100ad4ba 	srli	r5,r2,18
   243c4:	29801f44 	addi	r6,r5,125
   243c8:	300c90fa 	slli	r6,r6,3
   243cc:	29c01f04 	addi	r7,r5,124
   243d0:	003fa506 	br	24268 <_free_r+0x174>
   243d4:	0180fe04 	movi	r6,1016
   243d8:	01c01f84 	movi	r7,126
   243dc:	003fa206 	br	24268 <_free_r+0x174>
   243e0:	11000054 	ori	r4,r2,1
   243e4:	19000115 	stw	r4,4(r3)
   243e8:	30800015 	stw	r2,0(r6)
   243ec:	003f7b06 	br	241dc <_free_r+0xe8>

000243f0 <_fwalk>:
   243f0:	defffa04 	addi	sp,sp,-24
   243f4:	dd000415 	stw	r20,16(sp)
   243f8:	dcc00315 	stw	r19,12(sp)
   243fc:	dc800215 	stw	r18,8(sp)
   24400:	dfc00515 	stw	ra,20(sp)
   24404:	dc400115 	stw	r17,4(sp)
   24408:	dc000015 	stw	r16,0(sp)
   2440c:	2827883a 	mov	r19,r5
   24410:	2480b804 	addi	r18,r4,736
   24414:	0029883a 	mov	r20,zero
   24418:	94400117 	ldw	r17,4(r18)
   2441c:	94000217 	ldw	r16,8(r18)
   24420:	8c7fffc4 	addi	r17,r17,-1
   24424:	88000d16 	blt	r17,zero,2445c <_fwalk+0x6c>
   24428:	8080030b 	ldhu	r2,12(r16)
   2442c:	8c7fffc4 	addi	r17,r17,-1
   24430:	108000b0 	cmpltui	r2,r2,2
   24434:	1000061e 	bne	r2,zero,24450 <_fwalk+0x60>
   24438:	8080038f 	ldh	r2,14(r16)
   2443c:	8009883a 	mov	r4,r16
   24440:	10bfffe0 	cmpeqi	r2,r2,-1
   24444:	1000021e 	bne	r2,zero,24450 <_fwalk+0x60>
   24448:	983ee83a 	callr	r19
   2444c:	a0a8b03a 	or	r20,r20,r2
   24450:	88bfffd8 	cmpnei	r2,r17,-1
   24454:	84001a04 	addi	r16,r16,104
   24458:	103ff31e 	bne	r2,zero,24428 <_fwalk+0x38>
   2445c:	94800017 	ldw	r18,0(r18)
   24460:	903fed1e 	bne	r18,zero,24418 <_fwalk+0x28>
   24464:	a005883a 	mov	r2,r20
   24468:	dfc00517 	ldw	ra,20(sp)
   2446c:	dd000417 	ldw	r20,16(sp)
   24470:	dcc00317 	ldw	r19,12(sp)
   24474:	dc800217 	ldw	r18,8(sp)
   24478:	dc400117 	ldw	r17,4(sp)
   2447c:	dc000017 	ldw	r16,0(sp)
   24480:	dec00604 	addi	sp,sp,24
   24484:	f800283a 	ret

00024488 <_fwalk_reent>:
   24488:	defff904 	addi	sp,sp,-28
   2448c:	dd400515 	stw	r21,20(sp)
   24490:	dd000415 	stw	r20,16(sp)
   24494:	dcc00315 	stw	r19,12(sp)
   24498:	dc800215 	stw	r18,8(sp)
   2449c:	dfc00615 	stw	ra,24(sp)
   244a0:	dc400115 	stw	r17,4(sp)
   244a4:	dc000015 	stw	r16,0(sp)
   244a8:	202b883a 	mov	r21,r4
   244ac:	2827883a 	mov	r19,r5
   244b0:	2480b804 	addi	r18,r4,736
   244b4:	0029883a 	mov	r20,zero
   244b8:	94400117 	ldw	r17,4(r18)
   244bc:	94000217 	ldw	r16,8(r18)
   244c0:	8c7fffc4 	addi	r17,r17,-1
   244c4:	88000e16 	blt	r17,zero,24500 <_fwalk_reent+0x78>
   244c8:	8080030b 	ldhu	r2,12(r16)
   244cc:	8c7fffc4 	addi	r17,r17,-1
   244d0:	108000b0 	cmpltui	r2,r2,2
   244d4:	1000071e 	bne	r2,zero,244f4 <_fwalk_reent+0x6c>
   244d8:	8080038f 	ldh	r2,14(r16)
   244dc:	800b883a 	mov	r5,r16
   244e0:	a809883a 	mov	r4,r21
   244e4:	10bfffe0 	cmpeqi	r2,r2,-1
   244e8:	1000021e 	bne	r2,zero,244f4 <_fwalk_reent+0x6c>
   244ec:	983ee83a 	callr	r19
   244f0:	a0a8b03a 	or	r20,r20,r2
   244f4:	88bfffd8 	cmpnei	r2,r17,-1
   244f8:	84001a04 	addi	r16,r16,104
   244fc:	103ff21e 	bne	r2,zero,244c8 <_fwalk_reent+0x40>
   24500:	94800017 	ldw	r18,0(r18)
   24504:	903fec1e 	bne	r18,zero,244b8 <_fwalk_reent+0x30>
   24508:	a005883a 	mov	r2,r20
   2450c:	dfc00617 	ldw	ra,24(sp)
   24510:	dd400517 	ldw	r21,20(sp)
   24514:	dd000417 	ldw	r20,16(sp)
   24518:	dcc00317 	ldw	r19,12(sp)
   2451c:	dc800217 	ldw	r18,8(sp)
   24520:	dc400117 	ldw	r17,4(sp)
   24524:	dc000017 	ldw	r16,0(sp)
   24528:	dec00704 	addi	sp,sp,28
   2452c:	f800283a 	ret

00024530 <rshift>:
   24530:	2817d17a 	srai	r11,r5,5
   24534:	21c00417 	ldw	r7,16(r4)
   24538:	59c0220e 	bge	r11,r7,245c4 <rshift+0x94>
   2453c:	381090ba 	slli	r8,r7,2
   24540:	580490ba 	slli	r2,r11,2
   24544:	22400504 	addi	r9,r4,20
   24548:	298007cc 	andi	r6,r5,31
   2454c:	4a11883a 	add	r8,r9,r8
   24550:	4885883a 	add	r2,r9,r2
   24554:	30001e26 	beq	r6,zero,245d0 <rshift+0xa0>
   24558:	10c00017 	ldw	r3,0(r2)
   2455c:	03000804 	movi	r12,32
   24560:	10800104 	addi	r2,r2,4
   24564:	198ad83a 	srl	r5,r3,r6
   24568:	6199c83a 	sub	r12,r12,r6
   2456c:	1200122e 	bgeu	r2,r8,245b8 <rshift+0x88>
   24570:	4815883a 	mov	r10,r9
   24574:	10c00017 	ldw	r3,0(r2)
   24578:	52800104 	addi	r10,r10,4
   2457c:	10800104 	addi	r2,r2,4
   24580:	1b06983a 	sll	r3,r3,r12
   24584:	1946b03a 	or	r3,r3,r5
   24588:	50ffff15 	stw	r3,-4(r10)
   2458c:	10ffff17 	ldw	r3,-4(r2)
   24590:	198ad83a 	srl	r5,r3,r6
   24594:	123ff736 	bltu	r2,r8,24574 <rshift+0x44>
   24598:	3acfc83a 	sub	r7,r7,r11
   2459c:	380e90ba 	slli	r7,r7,2
   245a0:	39ffff04 	addi	r7,r7,-4
   245a4:	49cf883a 	add	r7,r9,r7
   245a8:	39400015 	stw	r5,0(r7)
   245ac:	28001226 	beq	r5,zero,245f8 <rshift+0xc8>
   245b0:	39c00104 	addi	r7,r7,4
   245b4:	00001006 	br	245f8 <rshift+0xc8>
   245b8:	21400515 	stw	r5,20(r4)
   245bc:	480f883a 	mov	r7,r9
   245c0:	283ffb1e 	bne	r5,zero,245b0 <rshift+0x80>
   245c4:	20000415 	stw	zero,16(r4)
   245c8:	20000515 	stw	zero,20(r4)
   245cc:	f800283a 	ret
   245d0:	4807883a 	mov	r3,r9
   245d4:	123ffb2e 	bgeu	r2,r8,245c4 <rshift+0x94>
   245d8:	11400017 	ldw	r5,0(r2)
   245dc:	10800104 	addi	r2,r2,4
   245e0:	18c00104 	addi	r3,r3,4
   245e4:	197fff15 	stw	r5,-4(r3)
   245e8:	123ffb36 	bltu	r2,r8,245d8 <rshift+0xa8>
   245ec:	3acfc83a 	sub	r7,r7,r11
   245f0:	380e90ba 	slli	r7,r7,2
   245f4:	49cf883a 	add	r7,r9,r7
   245f8:	3a45c83a 	sub	r2,r7,r9
   245fc:	1005d0ba 	srai	r2,r2,2
   24600:	20800415 	stw	r2,16(r4)
   24604:	3a7ff026 	beq	r7,r9,245c8 <rshift+0x98>
   24608:	f800283a 	ret

0002460c <__gethex>:
   2460c:	deffec04 	addi	sp,sp,-80
   24610:	008000f4 	movhi	r2,3
   24614:	dc800c15 	stw	r18,48(sp)
   24618:	14803417 	ldw	r18,208(r2)
   2461c:	dd000e15 	stw	r20,56(sp)
   24620:	2029883a 	mov	r20,r4
   24624:	9009883a 	mov	r4,r18
   24628:	dd801015 	stw	r22,64(sp)
   2462c:	dd400f15 	stw	r21,60(sp)
   24630:	dc400b15 	stw	r17,44(sp)
   24634:	282d883a 	mov	r22,r5
   24638:	d9c00915 	stw	r7,36(sp)
   2463c:	dfc01315 	stw	ra,76(sp)
   24640:	df001215 	stw	fp,72(sp)
   24644:	ddc01115 	stw	r23,68(sp)
   24648:	dcc00d15 	stw	r19,52(sp)
   2464c:	dc000a15 	stw	r16,40(sp)
   24650:	dd000015 	stw	r20,0(sp)
   24654:	3023883a 	mov	r17,r6
   24658:	00266f80 	call	266f8 <strlen>
   2465c:	b1c00017 	ldw	r7,0(r22)
   24660:	9089883a 	add	r4,r18,r2
   24664:	213fffc3 	ldbu	r4,-1(r4)
   24668:	102b883a 	mov	r21,r2
   2466c:	38800083 	ldbu	r2,2(r7)
   24670:	d9000205 	stb	r4,8(sp)
   24674:	10c00c18 	cmpnei	r3,r2,48
   24678:	1801661e 	bne	r3,zero,24c14 <__gethex+0x608>
   2467c:	017fff84 	movi	r5,-2
   24680:	38c000c4 	addi	r3,r7,3
   24684:	29cbc83a 	sub	r5,r5,r7
   24688:	18800003 	ldbu	r2,0(r3)
   2468c:	28ef883a 	add	r23,r5,r3
   24690:	1829883a 	mov	r20,r3
   24694:	11000c20 	cmpeqi	r4,r2,48
   24698:	18c00044 	addi	r3,r3,1
   2469c:	203ffa1e 	bne	r4,zero,24688 <__gethex+0x7c>
   246a0:	00c000f4 	movhi	r3,3
   246a4:	10c7883a 	add	r3,r2,r3
   246a8:	18bff303 	ldbu	r2,-52(r3)
   246ac:	1000191e 	bne	r2,zero,24714 <__gethex+0x108>
   246b0:	a80d883a 	mov	r6,r21
   246b4:	900b883a 	mov	r5,r18
   246b8:	a009883a 	mov	r4,r20
   246bc:	00267900 	call	26790 <strncmp>
   246c0:	1000e51e 	bne	r2,zero,24a58 <__gethex+0x44c>
   246c4:	a561883a 	add	r16,r20,r21
   246c8:	80c00003 	ldbu	r3,0(r16)
   246cc:	008000f4 	movhi	r2,3
   246d0:	19003fcc 	andi	r4,r3,255
   246d4:	2085883a 	add	r2,r4,r2
   246d8:	10bff303 	ldbu	r2,-52(r2)
   246dc:	1000e026 	beq	r2,zero,24a60 <__gethex+0x454>
   246e0:	21000c18 	cmpnei	r4,r4,48
   246e4:	8029883a 	mov	r20,r16
   246e8:	2000071e 	bne	r4,zero,24708 <__gethex+0xfc>
   246ec:	a0800043 	ldbu	r2,1(r20)
   246f0:	a5000044 	addi	r20,r20,1
   246f4:	10c00c20 	cmpeqi	r3,r2,48
   246f8:	183ffc1e 	bne	r3,zero,246ec <__gethex+0xe0>
   246fc:	00c000f4 	movhi	r3,3
   24700:	10c7883a 	add	r3,r2,r3
   24704:	18bff303 	ldbu	r2,-52(r3)
   24708:	1013003a 	cmpeq	r9,r2,zero
   2470c:	05c00044 	movi	r23,1
   24710:	00000606 	br	2472c <__gethex+0x120>
   24714:	a0c00003 	ldbu	r3,0(r20)
   24718:	008000f4 	movhi	r2,3
   2471c:	0013883a 	mov	r9,zero
   24720:	1885883a 	add	r2,r3,r2
   24724:	10bff303 	ldbu	r2,-52(r2)
   24728:	0021883a 	mov	r16,zero
   2472c:	a039883a 	mov	fp,r20
   24730:	10000626 	beq	r2,zero,2474c <__gethex+0x140>
   24734:	e0800043 	ldbu	r2,1(fp)
   24738:	00c000f4 	movhi	r3,3
   2473c:	e7000044 	addi	fp,fp,1
   24740:	10c7883a 	add	r3,r2,r3
   24744:	18bff303 	ldbu	r2,-52(r3)
   24748:	103ffa1e 	bne	r2,zero,24734 <__gethex+0x128>
   2474c:	a80d883a 	mov	r6,r21
   24750:	900b883a 	mov	r5,r18
   24754:	e009883a 	mov	r4,fp
   24758:	da400115 	stw	r9,4(sp)
   2475c:	00267900 	call	26790 <strncmp>
   24760:	da400117 	ldw	r9,4(sp)
   24764:	1000031e 	bne	r2,zero,24774 <__gethex+0x168>
   24768:	80012d26 	beq	r16,zero,24c20 <__gethex+0x614>
   2476c:	e0800003 	ldbu	r2,0(fp)
   24770:	00000206 	br	2477c <__gethex+0x170>
   24774:	e0800003 	ldbu	r2,0(fp)
   24778:	8000de26 	beq	r16,zero,24af4 <__gethex+0x4e8>
   2477c:	8721c83a 	sub	r16,r16,fp
   24780:	802690ba 	slli	r19,r16,2
   24784:	108037cc 	andi	r2,r2,223
   24788:	10801418 	cmpnei	r2,r2,80
   2478c:	e021883a 	mov	r16,fp
   24790:	10006a26 	beq	r2,zero,2493c <__gethex+0x330>
   24794:	b7000015 	stw	fp,0(r22)
   24798:	4800831e 	bne	r9,zero,249a8 <__gethex+0x39c>
   2479c:	8505c83a 	sub	r2,r16,r20
   247a0:	10bfffc4 	addi	r2,r2,-1
   247a4:	10c00210 	cmplti	r3,r2,8
   247a8:	000b883a 	mov	r5,zero
   247ac:	1800041e 	bne	r3,zero,247c0 <__gethex+0x1b4>
   247b0:	1005d07a 	srai	r2,r2,1
   247b4:	29400044 	addi	r5,r5,1
   247b8:	10c00208 	cmpgei	r3,r2,8
   247bc:	183ffc1e 	bne	r3,zero,247b0 <__gethex+0x1a4>
   247c0:	d9000017 	ldw	r4,0(sp)
   247c4:	00254a40 	call	254a4 <_Balloc>
   247c8:	102d883a 	mov	r22,r2
   247cc:	10019226 	beq	r2,zero,24e18 <__gethex+0x80c>
   247d0:	12400504 	addi	r9,r2,20
   247d4:	da400115 	stw	r9,4(sp)
   247d8:	a4013d2e 	bgeu	r20,r16,24cd0 <__gethex+0x6c4>
   247dc:	dac00203 	ldbu	r11,8(sp)
   247e0:	03000044 	movi	r12,1
   247e4:	0039883a 	mov	fp,zero
   247e8:	0011883a 	mov	r8,zero
   247ec:	6559c83a 	sub	r12,r12,r21
   247f0:	83bfffc3 	ldbu	r14,-1(r16)
   247f4:	837fffc4 	addi	r13,r16,-1
   247f8:	4dc00104 	addi	r23,r9,4
   247fc:	72c02d26 	beq	r14,r11,248b4 <__gethex+0x2a8>
   24800:	e0800820 	cmpeqi	r2,fp,32
   24804:	1000421e 	bne	r2,zero,24910 <__gethex+0x304>
   24808:	e009883a 	mov	r4,fp
   2480c:	e7000104 	addi	fp,fp,4
   24810:	008000f4 	movhi	r2,3
   24814:	7085883a 	add	r2,r14,r2
   24818:	10fff303 	ldbu	r3,-52(r2)
   2481c:	6821883a 	mov	r16,r13
   24820:	18c003cc 	andi	r3,r3,15
   24824:	1906983a 	sll	r3,r3,r4
   24828:	40d0b03a 	or	r8,r8,r3
   2482c:	a43ff036 	bltu	r20,r16,247f0 <__gethex+0x1e4>
   24830:	d8800117 	ldw	r2,4(sp)
   24834:	4a000015 	stw	r8,0(r9)
   24838:	4009883a 	mov	r4,r8
   2483c:	b8afc83a 	sub	r23,r23,r2
   24840:	b82fd0ba 	srai	r23,r23,2
   24844:	b820917a 	slli	r16,r23,5
   24848:	b5c00415 	stw	r23,16(r22)
   2484c:	00258000 	call	25800 <__hi0bits>
   24850:	8c800017 	ldw	r18,0(r17)
   24854:	8085c83a 	sub	r2,r16,r2
   24858:	90808d16 	blt	r18,r2,24a90 <__gethex+0x484>
   2485c:	1480e216 	blt	r2,r18,24be8 <__gethex+0x5dc>
   24860:	002f883a 	mov	r23,zero
   24864:	88800217 	ldw	r2,8(r17)
   24868:	14c11016 	blt	r2,r19,24cac <__gethex+0x6a0>
   2486c:	88800117 	ldw	r2,4(r17)
   24870:	98805e0e 	bge	r19,r2,249ec <__gethex+0x3e0>
   24874:	14e7c83a 	sub	r19,r2,r19
   24878:	9c80a216 	blt	r19,r18,24b04 <__gethex+0x4f8>
   2487c:	88c00317 	ldw	r3,12(r17)
   24880:	190000a0 	cmpeqi	r4,r3,2
   24884:	2001381e 	bne	r4,zero,24d68 <__gethex+0x75c>
   24888:	190000e0 	cmpeqi	r4,r3,3
   2488c:	2001331e 	bne	r4,zero,24d5c <__gethex+0x750>
   24890:	18c00058 	cmpnei	r3,r3,1
   24894:	18011f26 	beq	r3,zero,24d14 <__gethex+0x708>
   24898:	d9000017 	ldw	r4,0(sp)
   2489c:	b00b883a 	mov	r5,r22
   248a0:	04001404 	movi	r16,80
   248a4:	00255480 	call	25548 <_Bfree>
   248a8:	d8801417 	ldw	r2,80(sp)
   248ac:	10000015 	stw	zero,0(r2)
   248b0:	00005c06 	br	24a24 <__gethex+0x418>
   248b4:	6b09883a 	add	r4,r13,r12
   248b8:	253fd136 	bltu	r4,r20,24800 <__gethex+0x1f4>
   248bc:	a80d883a 	mov	r6,r21
   248c0:	900b883a 	mov	r5,r18
   248c4:	db000815 	stw	r12,32(sp)
   248c8:	db800715 	stw	r14,28(sp)
   248cc:	dac00615 	stw	r11,24(sp)
   248d0:	db400515 	stw	r13,20(sp)
   248d4:	da000415 	stw	r8,16(sp)
   248d8:	da400315 	stw	r9,12(sp)
   248dc:	d9000215 	stw	r4,8(sp)
   248e0:	00267900 	call	26790 <strncmp>
   248e4:	d9000217 	ldw	r4,8(sp)
   248e8:	da400317 	ldw	r9,12(sp)
   248ec:	da000417 	ldw	r8,16(sp)
   248f0:	db400517 	ldw	r13,20(sp)
   248f4:	dac00617 	ldw	r11,24(sp)
   248f8:	db800717 	ldw	r14,28(sp)
   248fc:	db000817 	ldw	r12,32(sp)
   24900:	103fbf1e 	bne	r2,zero,24800 <__gethex+0x1f4>
   24904:	2021883a 	mov	r16,r4
   24908:	a43fb936 	bltu	r20,r16,247f0 <__gethex+0x1e4>
   2490c:	003fc806 	br	24830 <__gethex+0x224>
   24910:	4a000015 	stw	r8,0(r9)
   24914:	48800204 	addi	r2,r9,8
   24918:	83bfffc3 	ldbu	r14,-1(r16)
   2491c:	b813883a 	mov	r9,r23
   24920:	0009883a 	mov	r4,zero
   24924:	07000104 	movi	fp,4
   24928:	102f883a 	mov	r23,r2
   2492c:	0011883a 	mov	r8,zero
   24930:	003fb706 	br	24810 <__gethex+0x204>
   24934:	0027883a 	mov	r19,zero
   24938:	02400044 	movi	r9,1
   2493c:	80800043 	ldbu	r2,1(r16)
   24940:	10c00ae0 	cmpeqi	r3,r2,43
   24944:	1800a61e 	bne	r3,zero,24be0 <__gethex+0x5d4>
   24948:	10c00b60 	cmpeqi	r3,r2,45
   2494c:	18004c1e 	bne	r3,zero,24a80 <__gethex+0x474>
   24950:	87000044 	addi	fp,r16,1
   24954:	0015883a 	mov	r10,zero
   24958:	00c000f4 	movhi	r3,3
   2495c:	10c7883a 	add	r3,r2,r3
   24960:	18bff303 	ldbu	r2,-52(r3)
   24964:	10ffffc4 	addi	r3,r2,-1
   24968:	18c03fcc 	andi	r3,r3,255
   2496c:	18c00668 	cmpgeui	r3,r3,25
   24970:	1800411e 	bne	r3,zero,24a78 <__gethex+0x46c>
   24974:	e1000043 	ldbu	r4,1(fp)
   24978:	00c000f4 	movhi	r3,3
   2497c:	10803fcc 	andi	r2,r2,255
   24980:	20c7883a 	add	r3,r4,r3
   24984:	193ff303 	ldbu	r4,-52(r3)
   24988:	e7000044 	addi	fp,fp,1
   2498c:	10fffc04 	addi	r3,r2,-16
   24990:	2000131e 	bne	r4,zero,249e0 <__gethex+0x3d4>
   24994:	50000126 	beq	r10,zero,2499c <__gethex+0x390>
   24998:	00c7c83a 	sub	r3,zero,r3
   2499c:	b7000015 	stw	fp,0(r22)
   249a0:	98e7883a 	add	r19,r19,r3
   249a4:	483f7d26 	beq	r9,zero,2479c <__gethex+0x190>
   249a8:	b8005426 	beq	r23,zero,24afc <__gethex+0x4f0>
   249ac:	0021883a 	mov	r16,zero
   249b0:	00001c06 	br	24a24 <__gethex+0x418>
   249b4:	180490ba 	slli	r2,r3,2
   249b8:	e2c00043 	ldbu	r11,1(fp)
   249bc:	014000f4 	movhi	r5,3
   249c0:	10c5883a 	add	r2,r2,r3
   249c4:	1085883a 	add	r2,r2,r2
   249c8:	594b883a 	add	r5,r11,r5
   249cc:	1105883a 	add	r2,r2,r4
   249d0:	293ff303 	ldbu	r4,-52(r5)
   249d4:	e7000044 	addi	fp,fp,1
   249d8:	10fffc04 	addi	r3,r2,-16
   249dc:	203fed26 	beq	r4,zero,24994 <__gethex+0x388>
   249e0:	20800690 	cmplti	r2,r4,26
   249e4:	103ff31e 	bne	r2,zero,249b4 <__gethex+0x3a8>
   249e8:	003fea06 	br	24994 <__gethex+0x388>
   249ec:	04000044 	movi	r16,1
   249f0:	b8000826 	beq	r23,zero,24a14 <__gethex+0x408>
   249f4:	88800317 	ldw	r2,12(r17)
   249f8:	10c000a0 	cmpeqi	r3,r2,2
   249fc:	1800561e 	bne	r3,zero,24b58 <__gethex+0x54c>
   24a00:	10c000e0 	cmpeqi	r3,r2,3
   24a04:	1800581e 	bne	r3,zero,24b68 <__gethex+0x55c>
   24a08:	10800058 	cmpnei	r2,r2,1
   24a0c:	10006c26 	beq	r2,zero,24bc0 <__gethex+0x5b4>
   24a10:	84000414 	ori	r16,r16,16
   24a14:	d8801417 	ldw	r2,80(sp)
   24a18:	15800015 	stw	r22,0(r2)
   24a1c:	d8800917 	ldw	r2,36(sp)
   24a20:	14c00015 	stw	r19,0(r2)
   24a24:	8005883a 	mov	r2,r16
   24a28:	dfc01317 	ldw	ra,76(sp)
   24a2c:	df001217 	ldw	fp,72(sp)
   24a30:	ddc01117 	ldw	r23,68(sp)
   24a34:	dd801017 	ldw	r22,64(sp)
   24a38:	dd400f17 	ldw	r21,60(sp)
   24a3c:	dd000e17 	ldw	r20,56(sp)
   24a40:	dcc00d17 	ldw	r19,52(sp)
   24a44:	dc800c17 	ldw	r18,48(sp)
   24a48:	dc400b17 	ldw	r17,44(sp)
   24a4c:	dc000a17 	ldw	r16,40(sp)
   24a50:	dec01404 	addi	sp,sp,80
   24a54:	f800283a 	ret
   24a58:	a0c00003 	ldbu	r3,0(r20)
   24a5c:	a021883a 	mov	r16,r20
   24a60:	18c037cc 	andi	r3,r3,223
   24a64:	18c01420 	cmpeqi	r3,r3,80
   24a68:	183fb21e 	bne	r3,zero,24934 <__gethex+0x328>
   24a6c:	b4000015 	stw	r16,0(r22)
   24a70:	b83fce1e 	bne	r23,zero,249ac <__gethex+0x3a0>
   24a74:	00002106 	br	24afc <__gethex+0x4f0>
   24a78:	8039883a 	mov	fp,r16
   24a7c:	003f4506 	br	24794 <__gethex+0x188>
   24a80:	02800044 	movi	r10,1
   24a84:	80800083 	ldbu	r2,2(r16)
   24a88:	87000084 	addi	fp,r16,2
   24a8c:	003fb206 	br	24958 <__gethex+0x34c>
   24a90:	14a1c83a 	sub	r16,r2,r18
   24a94:	800b883a 	mov	r5,r16
   24a98:	b009883a 	mov	r4,r22
   24a9c:	002657c0 	call	2657c <__any_on>
   24aa0:	102f883a 	mov	r23,r2
   24aa4:	10000e26 	beq	r2,zero,24ae0 <__gethex+0x4d4>
   24aa8:	813fffc4 	addi	r4,r16,-1
   24aac:	2007d17a 	srai	r3,r4,5
   24ab0:	214007cc 	andi	r5,r4,31
   24ab4:	00800044 	movi	r2,1
   24ab8:	1144983a 	sll	r2,r2,r5
   24abc:	180690ba 	slli	r3,r3,2
   24ac0:	d9400117 	ldw	r5,4(sp)
   24ac4:	28c7883a 	add	r3,r5,r3
   24ac8:	18c00017 	ldw	r3,0(r3)
   24acc:	10c4703a 	and	r2,r2,r3
   24ad0:	10008326 	beq	r2,zero,24ce0 <__gethex+0x6d4>
   24ad4:	21000090 	cmplti	r4,r4,2
   24ad8:	20008826 	beq	r4,zero,24cfc <__gethex+0x6f0>
   24adc:	05c00084 	movi	r23,2
   24ae0:	800b883a 	mov	r5,r16
   24ae4:	b009883a 	mov	r4,r22
   24ae8:	00245300 	call	24530 <rshift>
   24aec:	9c27883a 	add	r19,r19,r16
   24af0:	003f5c06 	br	24864 <__gethex+0x258>
   24af4:	0027883a 	mov	r19,zero
   24af8:	003f2206 	br	24784 <__gethex+0x178>
   24afc:	04000184 	movi	r16,6
   24b00:	003fc806 	br	24a24 <__gethex+0x418>
   24b04:	9c3fffc4 	addi	r16,r19,-1
   24b08:	b8006f1e 	bne	r23,zero,24cc8 <__gethex+0x6bc>
   24b0c:	8000761e 	bne	r16,zero,24ce8 <__gethex+0x6dc>
   24b10:	8007d17a 	srai	r3,r16,5
   24b14:	d9000117 	ldw	r4,4(sp)
   24b18:	840007cc 	andi	r16,r16,31
   24b1c:	180690ba 	slli	r3,r3,2
   24b20:	00800044 	movi	r2,1
   24b24:	1404983a 	sll	r2,r2,r16
   24b28:	20c7883a 	add	r3,r4,r3
   24b2c:	18c00017 	ldw	r3,0(r3)
   24b30:	10c4703a 	and	r2,r2,r3
   24b34:	10000126 	beq	r2,zero,24b3c <__gethex+0x530>
   24b38:	bdc00094 	ori	r23,r23,2
   24b3c:	980b883a 	mov	r5,r19
   24b40:	b009883a 	mov	r4,r22
   24b44:	00245300 	call	24530 <rshift>
   24b48:	94e5c83a 	sub	r18,r18,r19
   24b4c:	04000084 	movi	r16,2
   24b50:	8cc00117 	ldw	r19,4(r17)
   24b54:	003fa606 	br	249f0 <__gethex+0x3e4>
   24b58:	d8c01517 	ldw	r3,84(sp)
   24b5c:	00800044 	movi	r2,1
   24b60:	10c5c83a 	sub	r2,r2,r3
   24b64:	d8801515 	stw	r2,84(sp)
   24b68:	d8801517 	ldw	r2,84(sp)
   24b6c:	103fa826 	beq	r2,zero,24a10 <__gethex+0x404>
   24b70:	b5c00417 	ldw	r23,16(r22)
   24b74:	d9800117 	ldw	r6,4(sp)
   24b78:	b83890ba 	slli	fp,r23,2
   24b7c:	3005883a 	mov	r2,r6
   24b80:	370b883a 	add	r5,r6,fp
   24b84:	00000306 	br	24b94 <__gethex+0x588>
   24b88:	10800104 	addi	r2,r2,4
   24b8c:	103fff15 	stw	zero,-4(r2)
   24b90:	1140332e 	bgeu	r2,r5,24c60 <__gethex+0x654>
   24b94:	10c00017 	ldw	r3,0(r2)
   24b98:	193fffe0 	cmpeqi	r4,r3,-1
   24b9c:	203ffa1e 	bne	r4,zero,24b88 <__gethex+0x57c>
   24ba0:	18c00044 	addi	r3,r3,1
   24ba4:	10c00015 	stw	r3,0(r2)
   24ba8:	840000a0 	cmpeqi	r16,r16,2
   24bac:	8000711e 	bne	r16,zero,24d74 <__gethex+0x768>
   24bb0:	948007cc 	andi	r18,r18,31
   24bb4:	9000871e 	bne	r18,zero,24dd4 <__gethex+0x7c8>
   24bb8:	04000844 	movi	r16,33
   24bbc:	003f9506 	br	24a14 <__gethex+0x408>
   24bc0:	b880008c 	andi	r2,r23,2
   24bc4:	103f9226 	beq	r2,zero,24a10 <__gethex+0x404>
   24bc8:	d8800117 	ldw	r2,4(sp)
   24bcc:	10800017 	ldw	r2,0(r2)
   24bd0:	b884b03a 	or	r2,r23,r2
   24bd4:	1080004c 	andi	r2,r2,1
   24bd8:	103fe51e 	bne	r2,zero,24b70 <__gethex+0x564>
   24bdc:	003f8c06 	br	24a10 <__gethex+0x404>
   24be0:	0015883a 	mov	r10,zero
   24be4:	003fa706 	br	24a84 <__gethex+0x478>
   24be8:	d9000017 	ldw	r4,0(sp)
   24bec:	90a1c83a 	sub	r16,r18,r2
   24bf0:	b00b883a 	mov	r5,r22
   24bf4:	800d883a 	mov	r6,r16
   24bf8:	0025d2c0 	call	25d2c <__lshift>
   24bfc:	102d883a 	mov	r22,r2
   24c00:	10800504 	addi	r2,r2,20
   24c04:	9c27c83a 	sub	r19,r19,r16
   24c08:	d8800115 	stw	r2,4(sp)
   24c0c:	002f883a 	mov	r23,zero
   24c10:	003f1406 	br	24864 <__gethex+0x258>
   24c14:	3d000084 	addi	r20,r7,2
   24c18:	002f883a 	mov	r23,zero
   24c1c:	003ea006 	br	246a0 <__gethex+0x94>
   24c20:	e561883a 	add	r16,fp,r21
   24c24:	80800003 	ldbu	r2,0(r16)
   24c28:	00c000f4 	movhi	r3,3
   24c2c:	8039883a 	mov	fp,r16
   24c30:	11003fcc 	andi	r4,r2,255
   24c34:	20c7883a 	add	r3,r4,r3
   24c38:	18fff303 	ldbu	r3,-52(r3)
   24c3c:	183ece26 	beq	r3,zero,24778 <__gethex+0x16c>
   24c40:	e0800043 	ldbu	r2,1(fp)
   24c44:	00c000f4 	movhi	r3,3
   24c48:	e7000044 	addi	fp,fp,1
   24c4c:	11003fcc 	andi	r4,r2,255
   24c50:	20c7883a 	add	r3,r4,r3
   24c54:	18fff303 	ldbu	r3,-52(r3)
   24c58:	183ff91e 	bne	r3,zero,24c40 <__gethex+0x634>
   24c5c:	003ec606 	br	24778 <__gethex+0x16c>
   24c60:	b0800217 	ldw	r2,8(r22)
   24c64:	b880480e 	bge	r23,r2,24d88 <__gethex+0x77c>
   24c68:	b807883a 	mov	r3,r23
   24c6c:	18800144 	addi	r2,r3,5
   24c70:	100490ba 	slli	r2,r2,2
   24c74:	18c00044 	addi	r3,r3,1
   24c78:	b0c00415 	stw	r3,16(r22)
   24c7c:	b085883a 	add	r2,r22,r2
   24c80:	01000044 	movi	r4,1
   24c84:	11000015 	stw	r4,0(r2)
   24c88:	84000098 	cmpnei	r16,r16,2
   24c8c:	80003926 	beq	r16,zero,24d74 <__gethex+0x768>
   24c90:	b8ffc70e 	bge	r23,r3,24bb0 <__gethex+0x5a4>
   24c94:	01400044 	movi	r5,1
   24c98:	b009883a 	mov	r4,r22
   24c9c:	00245300 	call	24530 <rshift>
   24ca0:	88800217 	ldw	r2,8(r17)
   24ca4:	9cc00044 	addi	r19,r19,1
   24ca8:	14ffc30e 	bge	r2,r19,24bb8 <__gethex+0x5ac>
   24cac:	d9000017 	ldw	r4,0(sp)
   24cb0:	b00b883a 	mov	r5,r22
   24cb4:	040028c4 	movi	r16,163
   24cb8:	00255480 	call	25548 <_Bfree>
   24cbc:	d8801417 	ldw	r2,80(sp)
   24cc0:	10000015 	stw	zero,0(r2)
   24cc4:	003f5706 	br	24a24 <__gethex+0x418>
   24cc8:	05c00044 	movi	r23,1
   24ccc:	003f9006 	br	24b10 <__gethex+0x504>
   24cd0:	da400117 	ldw	r9,4(sp)
   24cd4:	15c00604 	addi	r23,r2,24
   24cd8:	0011883a 	mov	r8,zero
   24cdc:	003ed406 	br	24830 <__gethex+0x224>
   24ce0:	05c00044 	movi	r23,1
   24ce4:	003f7e06 	br	24ae0 <__gethex+0x4d4>
   24ce8:	800b883a 	mov	r5,r16
   24cec:	b009883a 	mov	r4,r22
   24cf0:	002657c0 	call	2657c <__any_on>
   24cf4:	102f883a 	mov	r23,r2
   24cf8:	003f8506 	br	24b10 <__gethex+0x504>
   24cfc:	817fff84 	addi	r5,r16,-2
   24d00:	b009883a 	mov	r4,r22
   24d04:	002657c0 	call	2657c <__any_on>
   24d08:	103f7426 	beq	r2,zero,24adc <__gethex+0x4d0>
   24d0c:	05c000c4 	movi	r23,3
   24d10:	003f7306 	br	24ae0 <__gethex+0x4d4>
   24d14:	94fee01e 	bne	r18,r19,24898 <__gethex+0x28c>
   24d18:	90c00060 	cmpeqi	r3,r18,1
   24d1c:	1800051e 	bne	r3,zero,24d34 <__gethex+0x728>
   24d20:	917fffc4 	addi	r5,r18,-1
   24d24:	b009883a 	mov	r4,r22
   24d28:	002657c0 	call	2657c <__any_on>
   24d2c:	103eda26 	beq	r2,zero,24898 <__gethex+0x28c>
   24d30:	88800117 	ldw	r2,4(r17)
   24d34:	d8c00917 	ldw	r3,36(sp)
   24d38:	04001884 	movi	r16,98
   24d3c:	18800015 	stw	r2,0(r3)
   24d40:	d8c00117 	ldw	r3,4(sp)
   24d44:	00800044 	movi	r2,1
   24d48:	b0800415 	stw	r2,16(r22)
   24d4c:	18800015 	stw	r2,0(r3)
   24d50:	d8801417 	ldw	r2,80(sp)
   24d54:	15800015 	stw	r22,0(r2)
   24d58:	003f3206 	br	24a24 <__gethex+0x418>
   24d5c:	d8c01517 	ldw	r3,84(sp)
   24d60:	183ecd26 	beq	r3,zero,24898 <__gethex+0x28c>
   24d64:	003ff306 	br	24d34 <__gethex+0x728>
   24d68:	d8c01517 	ldw	r3,84(sp)
   24d6c:	183eca1e 	bne	r3,zero,24898 <__gethex+0x28c>
   24d70:	003ff006 	br	24d34 <__gethex+0x728>
   24d74:	88800017 	ldw	r2,0(r17)
   24d78:	10bfffc4 	addi	r2,r2,-1
   24d7c:	14801c26 	beq	r2,r18,24df0 <__gethex+0x7e4>
   24d80:	04000884 	movi	r16,34
   24d84:	003f2306 	br	24a14 <__gethex+0x408>
   24d88:	b1400117 	ldw	r5,4(r22)
   24d8c:	d9000017 	ldw	r4,0(sp)
   24d90:	29400044 	addi	r5,r5,1
   24d94:	00254a40 	call	254a4 <_Balloc>
   24d98:	1029883a 	mov	r20,r2
   24d9c:	10002526 	beq	r2,zero,24e34 <__gethex+0x828>
   24da0:	b1800417 	ldw	r6,16(r22)
   24da4:	b1400304 	addi	r5,r22,12
   24da8:	11000304 	addi	r4,r2,12
   24dac:	31800084 	addi	r6,r6,2
   24db0:	300c90ba 	slli	r6,r6,2
   24db4:	00252b40 	call	252b4 <memcpy>
   24db8:	d9000017 	ldw	r4,0(sp)
   24dbc:	b00b883a 	mov	r5,r22
   24dc0:	a02d883a 	mov	r22,r20
   24dc4:	00255480 	call	25548 <_Bfree>
   24dc8:	a0c00417 	ldw	r3,16(r20)
   24dcc:	a1800504 	addi	r6,r20,20
   24dd0:	003fa606 	br	24c6c <__gethex+0x660>
   24dd4:	3705883a 	add	r2,r6,fp
   24dd8:	113fff17 	ldw	r4,-4(r2)
   24ddc:	00258000 	call	25800 <__hi0bits>
   24de0:	00c00804 	movi	r3,32
   24de4:	1ca5c83a 	sub	r18,r3,r18
   24de8:	14bf730e 	bge	r2,r18,24bb8 <__gethex+0x5ac>
   24dec:	003fa906 	br	24c94 <__gethex+0x688>
   24df0:	9007d17a 	srai	r3,r18,5
   24df4:	00800044 	movi	r2,1
   24df8:	948007cc 	andi	r18,r18,31
   24dfc:	180690ba 	slli	r3,r3,2
   24e00:	1484983a 	sll	r2,r2,r18
   24e04:	30c7883a 	add	r3,r6,r3
   24e08:	18c00017 	ldw	r3,0(r3)
   24e0c:	10c4703a 	and	r2,r2,r3
   24e10:	103fdb26 	beq	r2,zero,24d80 <__gethex+0x774>
   24e14:	003f6806 	br	24bb8 <__gethex+0x5ac>
   24e18:	01c000f4 	movhi	r7,3
   24e1c:	010000f4 	movhi	r4,3
   24e20:	39ffdc04 	addi	r7,r7,-144
   24e24:	000d883a 	mov	r6,zero
   24e28:	01403784 	movi	r5,222
   24e2c:	213fe104 	addi	r4,r4,-124
   24e30:	00268900 	call	26890 <__assert_func>
   24e34:	01c000f4 	movhi	r7,3
   24e38:	010000f4 	movhi	r4,3
   24e3c:	39ffdc04 	addi	r7,r7,-144
   24e40:	000d883a 	mov	r6,zero
   24e44:	01402104 	movi	r5,132
   24e48:	213fe104 	addi	r4,r4,-124
   24e4c:	00268900 	call	26890 <__assert_func>

00024e50 <__match>:
   24e50:	21800017 	ldw	r6,0(r4)
   24e54:	29c00007 	ldb	r7,0(r5)
   24e58:	31800044 	addi	r6,r6,1
   24e5c:	29400044 	addi	r5,r5,1
   24e60:	38000c26 	beq	r7,zero,24e94 <__match+0x44>
   24e64:	30c00003 	ldbu	r3,0(r6)
   24e68:	18bfefc4 	addi	r2,r3,-65
   24e6c:	10803fcc 	andi	r2,r2,255
   24e70:	18c03fcc 	andi	r3,r3,255
   24e74:	18c0201c 	xori	r3,r3,128
   24e78:	108006a8 	cmpgeui	r2,r2,26
   24e7c:	18ffe004 	addi	r3,r3,-128
   24e80:	1000011e 	bne	r2,zero,24e88 <__match+0x38>
   24e84:	18c00804 	addi	r3,r3,32
   24e88:	19fff226 	beq	r3,r7,24e54 <__match+0x4>
   24e8c:	0005883a 	mov	r2,zero
   24e90:	f800283a 	ret
   24e94:	21800015 	stw	r6,0(r4)
   24e98:	00800044 	movi	r2,1
   24e9c:	f800283a 	ret

00024ea0 <__hexnan>:
   24ea0:	2bc00017 	ldw	r15,0(r5)
   24ea4:	7805d17a 	srai	r2,r15,5
   24ea8:	7bc007cc 	andi	r15,r15,31
   24eac:	100490ba 	slli	r2,r2,2
   24eb0:	3085883a 	add	r2,r6,r2
   24eb4:	7800661e 	bne	r15,zero,25050 <__hexnan+0x1b0>
   24eb8:	127fff04 	addi	r9,r2,-4
   24ebc:	1019883a 	mov	r12,r2
   24ec0:	21c00017 	ldw	r7,0(r4)
   24ec4:	603fff15 	stw	zero,-4(r12)
   24ec8:	39400043 	ldbu	r5,1(r7)
   24ecc:	28008c26 	beq	r5,zero,25100 <__hexnan+0x260>
   24ed0:	defffc04 	addi	sp,sp,-16
   24ed4:	dfc00315 	stw	ra,12(sp)
   24ed8:	dc000015 	stw	r16,0(sp)
   24edc:	dc800215 	stw	r18,8(sp)
   24ee0:	dc400115 	stw	r17,4(sp)
   24ee4:	481b883a 	mov	r13,r9
   24ee8:	4807883a 	mov	r3,r9
   24eec:	0011883a 	mov	r8,zero
   24ef0:	001d883a 	mov	r14,zero
   24ef4:	0017883a 	mov	r11,zero
   24ef8:	04000204 	movi	r16,8
   24efc:	07c00804 	movi	ra,32
   24f00:	008000f4 	movhi	r2,3
   24f04:	2885883a 	add	r2,r5,r2
   24f08:	10bff303 	ldbu	r2,-52(r2)
   24f0c:	12803fcc 	andi	r10,r2,255
   24f10:	5000391e 	bne	r10,zero,24ff8 <__hexnan+0x158>
   24f14:	28800868 	cmpgeui	r2,r5,33
   24f18:	1000671e 	bne	r2,zero,250b8 <__hexnan+0x218>
   24f1c:	72c0050e 	bge	r14,r11,24f34 <__hexnan+0x94>
   24f20:	1b40022e 	bgeu	r3,r13,24f2c <__hexnan+0x8c>
   24f24:	40800208 	cmpgei	r2,r8,8
   24f28:	10004c26 	beq	r2,zero,2505c <__hexnan+0x1bc>
   24f2c:	30c04236 	bltu	r6,r3,25038 <__hexnan+0x198>
   24f30:	02000204 	movi	r8,8
   24f34:	39400083 	ldbu	r5,2(r7)
   24f38:	39c00044 	addi	r7,r7,1
   24f3c:	283ff01e 	bne	r5,zero,24f00 <__hexnan+0x60>
   24f40:	58005f26 	beq	r11,zero,250c0 <__hexnan+0x220>
   24f44:	1b40112e 	bgeu	r3,r13,24f8c <__hexnan+0xec>
   24f48:	40800208 	cmpgei	r2,r8,8
   24f4c:	10000f1e 	bne	r2,zero,24f8c <__hexnan+0xec>
   24f50:	00800204 	movi	r2,8
   24f54:	1211c83a 	sub	r8,r2,r8
   24f58:	401090ba 	slli	r8,r8,2
   24f5c:	19400017 	ldw	r5,0(r3)
   24f60:	02800804 	movi	r10,32
   24f64:	5215c83a 	sub	r10,r10,r8
   24f68:	1805883a 	mov	r2,r3
   24f6c:	11c00117 	ldw	r7,4(r2)
   24f70:	10800104 	addi	r2,r2,4
   24f74:	3a88983a 	sll	r4,r7,r10
   24f78:	2148b03a 	or	r4,r4,r5
   24f7c:	3a0ad83a 	srl	r5,r7,r8
   24f80:	113fff15 	stw	r4,-4(r2)
   24f84:	11400015 	stw	r5,0(r2)
   24f88:	137ff836 	bltu	r2,r13,24f6c <__hexnan+0xcc>
   24f8c:	30c0412e 	bgeu	r6,r3,25094 <__hexnan+0x1f4>
   24f90:	3009883a 	mov	r4,r6
   24f94:	1805883a 	mov	r2,r3
   24f98:	11400017 	ldw	r5,0(r2)
   24f9c:	10800104 	addi	r2,r2,4
   24fa0:	21000104 	addi	r4,r4,4
   24fa4:	217fff15 	stw	r5,-4(r4)
   24fa8:	48bffb2e 	bgeu	r9,r2,24f98 <__hexnan+0xf8>
   24fac:	48800044 	addi	r2,r9,1
   24fb0:	19000044 	addi	r4,r3,1
   24fb4:	11005036 	bltu	r2,r4,250f8 <__hexnan+0x258>
   24fb8:	48c5c83a 	sub	r2,r9,r3
   24fbc:	1004d0ba 	srli	r2,r2,2
   24fc0:	10800044 	addi	r2,r2,1
   24fc4:	100490ba 	slli	r2,r2,2
   24fc8:	3085883a 	add	r2,r6,r2
   24fcc:	10800104 	addi	r2,r2,4
   24fd0:	103fff15 	stw	zero,-4(r2)
   24fd4:	48bffd2e 	bgeu	r9,r2,24fcc <__hexnan+0x12c>
   24fd8:	60bfff17 	ldw	r2,-4(r12)
   24fdc:	1000041e 	bne	r2,zero,24ff0 <__hexnan+0x150>
   24fe0:	32403e26 	beq	r6,r9,250dc <__hexnan+0x23c>
   24fe4:	48bfff17 	ldw	r2,-4(r9)
   24fe8:	4a7fff04 	addi	r9,r9,-4
   24fec:	103ffc26 	beq	r2,zero,24fe0 <__hexnan+0x140>
   24ff0:	00800144 	movi	r2,5
   24ff4:	00003306 	br	250c4 <__hexnan+0x224>
   24ff8:	42000044 	addi	r8,r8,1
   24ffc:	41400248 	cmpgei	r5,r8,9
   25000:	5ac00044 	addi	r11,r11,1
   25004:	2800061e 	bne	r5,zero,25020 <__hexnan+0x180>
   25008:	19400017 	ldw	r5,0(r3)
   2500c:	280a913a 	slli	r5,r5,4
   25010:	108003cc 	andi	r2,r2,15
   25014:	1144b03a 	or	r2,r2,r5
   25018:	18800015 	stw	r2,0(r3)
   2501c:	003fc506 	br	24f34 <__hexnan+0x94>
   25020:	30ffc42e 	bgeu	r6,r3,24f34 <__hexnan+0x94>
   25024:	183fff15 	stw	zero,-4(r3)
   25028:	000b883a 	mov	r5,zero
   2502c:	18ffff04 	addi	r3,r3,-4
   25030:	02000044 	movi	r8,1
   25034:	003ff606 	br	25010 <__hexnan+0x170>
   25038:	1b7fff04 	addi	r13,r3,-4
   2503c:	183fff15 	stw	zero,-4(r3)
   25040:	581d883a 	mov	r14,r11
   25044:	6807883a 	mov	r3,r13
   25048:	0011883a 	mov	r8,zero
   2504c:	003fb906 	br	24f34 <__hexnan+0x94>
   25050:	13000104 	addi	r12,r2,4
   25054:	1013883a 	mov	r9,r2
   25058:	003f9906 	br	24ec0 <__hexnan+0x20>
   2505c:	8211c83a 	sub	r8,r16,r8
   25060:	402290ba 	slli	r17,r8,2
   25064:	1a800017 	ldw	r10,0(r3)
   25068:	1805883a 	mov	r2,r3
   2506c:	fc65c83a 	sub	r18,ra,r17
   25070:	12000117 	ldw	r8,4(r2)
   25074:	10800104 	addi	r2,r2,4
   25078:	448a983a 	sll	r5,r8,r18
   2507c:	2a8ab03a 	or	r5,r5,r10
   25080:	4454d83a 	srl	r10,r8,r17
   25084:	117fff15 	stw	r5,-4(r2)
   25088:	12800015 	stw	r10,0(r2)
   2508c:	137ff836 	bltu	r2,r13,25070 <__hexnan+0x1d0>
   25090:	003fa606 	br	24f2c <__hexnan+0x8c>
   25094:	60bfff17 	ldw	r2,-4(r12)
   25098:	783fd026 	beq	r15,zero,24fdc <__hexnan+0x13c>
   2509c:	00c00804 	movi	r3,32
   250a0:	1bdfc83a 	sub	r15,r3,r15
   250a4:	00ffffc4 	movi	r3,-1
   250a8:	1bc6d83a 	srl	r3,r3,r15
   250ac:	10c4703a 	and	r2,r2,r3
   250b0:	60bfff15 	stw	r2,-4(r12)
   250b4:	003fc906 	br	24fdc <__hexnan+0x13c>
   250b8:	29400a58 	cmpnei	r5,r5,41
   250bc:	28000b26 	beq	r5,zero,250ec <__hexnan+0x24c>
   250c0:	00800104 	movi	r2,4
   250c4:	dfc00317 	ldw	ra,12(sp)
   250c8:	dc800217 	ldw	r18,8(sp)
   250cc:	dc400117 	ldw	r17,4(sp)
   250d0:	dc000017 	ldw	r16,0(sp)
   250d4:	dec00404 	addi	sp,sp,16
   250d8:	f800283a 	ret
   250dc:	00800044 	movi	r2,1
   250e0:	48800015 	stw	r2,0(r9)
   250e4:	00800144 	movi	r2,5
   250e8:	003ff606 	br	250c4 <__hexnan+0x224>
   250ec:	39c00084 	addi	r7,r7,2
   250f0:	21c00015 	stw	r7,0(r4)
   250f4:	003f9206 	br	24f40 <__hexnan+0xa0>
   250f8:	00800104 	movi	r2,4
   250fc:	003fb206 	br	24fc8 <__hexnan+0x128>
   25100:	00800104 	movi	r2,4
   25104:	f800283a 	ret

00025108 <_isatty_r>:
   25108:	defffe04 	addi	sp,sp,-8
   2510c:	dc000015 	stw	r16,0(sp)
   25110:	008000f4 	movhi	r2,3
   25114:	2021883a 	mov	r16,r4
   25118:	2809883a 	mov	r4,r5
   2511c:	dfc00115 	stw	ra,4(sp)
   25120:	100fca15 	stw	zero,16168(r2)
   25124:	002d4000 	call	2d400 <isatty>
   25128:	10ffffd8 	cmpnei	r3,r2,-1
   2512c:	18000426 	beq	r3,zero,25140 <_isatty_r+0x38>
   25130:	dfc00117 	ldw	ra,4(sp)
   25134:	dc000017 	ldw	r16,0(sp)
   25138:	dec00204 	addi	sp,sp,8
   2513c:	f800283a 	ret
   25140:	00c000f4 	movhi	r3,3
   25144:	18cfca17 	ldw	r3,16168(r3)
   25148:	183ff926 	beq	r3,zero,25130 <_isatty_r+0x28>
   2514c:	80c00015 	stw	r3,0(r16)
   25150:	dfc00117 	ldw	ra,4(sp)
   25154:	dc000017 	ldw	r16,0(sp)
   25158:	dec00204 	addi	sp,sp,8
   2515c:	f800283a 	ret

00025160 <__numeric_load_locale>:
   25160:	0005883a 	mov	r2,zero
   25164:	f800283a 	ret

00025168 <_setlocale_r>:
   25168:	30001626 	beq	r6,zero,251c4 <_setlocale_r+0x5c>
   2516c:	014000f4 	movhi	r5,3
   25170:	defffe04 	addi	sp,sp,-8
   25174:	29403804 	addi	r5,r5,224
   25178:	3009883a 	mov	r4,r6
   2517c:	dc000015 	stw	r16,0(sp)
   25180:	dfc00115 	stw	ra,4(sp)
   25184:	3021883a 	mov	r16,r6
   25188:	00266400 	call	26640 <strcmp>
   2518c:	1000061e 	bne	r2,zero,251a8 <_setlocale_r+0x40>
   25190:	008000f4 	movhi	r2,3
   25194:	10803704 	addi	r2,r2,220
   25198:	dfc00117 	ldw	ra,4(sp)
   2519c:	dc000017 	ldw	r16,0(sp)
   251a0:	dec00204 	addi	sp,sp,8
   251a4:	f800283a 	ret
   251a8:	80800003 	ldbu	r2,0(r16)
   251ac:	10bfef44 	addi	r2,r2,-67
   251b0:	10000726 	beq	r2,zero,251d0 <_setlocale_r+0x68>
   251b4:	80800003 	ldbu	r2,0(r16)
   251b8:	103ff526 	beq	r2,zero,25190 <_setlocale_r+0x28>
   251bc:	0005883a 	mov	r2,zero
   251c0:	003ff506 	br	25198 <_setlocale_r+0x30>
   251c4:	008000f4 	movhi	r2,3
   251c8:	10803704 	addi	r2,r2,220
   251cc:	f800283a 	ret
   251d0:	80800043 	ldbu	r2,1(r16)
   251d4:	103fee26 	beq	r2,zero,25190 <_setlocale_r+0x28>
   251d8:	003ff606 	br	251b4 <_setlocale_r+0x4c>

000251dc <__locale_mb_cur_max>:
   251dc:	008000f4 	movhi	r2,3
   251e0:	10840707 	ldb	r2,4124(r2)
   251e4:	f800283a 	ret

000251e8 <setlocale>:
   251e8:	00c000f4 	movhi	r3,3
   251ec:	2005883a 	mov	r2,r4
   251f0:	1908aa17 	ldw	r4,8872(r3)
   251f4:	280d883a 	mov	r6,r5
   251f8:	100b883a 	mov	r5,r2
   251fc:	00251681 	jmpi	25168 <_setlocale_r>

00025200 <_lseek_r>:
   25200:	2807883a 	mov	r3,r5
   25204:	defffe04 	addi	sp,sp,-8
   25208:	dc000015 	stw	r16,0(sp)
   2520c:	300b883a 	mov	r5,r6
   25210:	008000f4 	movhi	r2,3
   25214:	380d883a 	mov	r6,r7
   25218:	2021883a 	mov	r16,r4
   2521c:	1809883a 	mov	r4,r3
   25220:	dfc00115 	stw	ra,4(sp)
   25224:	100fca15 	stw	zero,16168(r2)
   25228:	002d7400 	call	2d740 <lseek>
   2522c:	10ffffd8 	cmpnei	r3,r2,-1
   25230:	18000426 	beq	r3,zero,25244 <_lseek_r+0x44>
   25234:	dfc00117 	ldw	ra,4(sp)
   25238:	dc000017 	ldw	r16,0(sp)
   2523c:	dec00204 	addi	sp,sp,8
   25240:	f800283a 	ret
   25244:	00c000f4 	movhi	r3,3
   25248:	18cfca17 	ldw	r3,16168(r3)
   2524c:	183ff926 	beq	r3,zero,25234 <_lseek_r+0x34>
   25250:	80c00015 	stw	r3,0(r16)
   25254:	dfc00117 	ldw	ra,4(sp)
   25258:	dc000017 	ldw	r16,0(sp)
   2525c:	dec00204 	addi	sp,sp,8
   25260:	f800283a 	ret

00025264 <_mbtowc_r>:
   25264:	008000f4 	movhi	r2,3
   25268:	1083f617 	ldw	r2,4056(r2)
   2526c:	1000683a 	jmp	r2

00025270 <__ascii_mbtowc>:
   25270:	deffff04 	addi	sp,sp,-4
   25274:	28000826 	beq	r5,zero,25298 <__ascii_mbtowc+0x28>
   25278:	30000926 	beq	r6,zero,252a0 <__ascii_mbtowc+0x30>
   2527c:	38000b26 	beq	r7,zero,252ac <__ascii_mbtowc+0x3c>
   25280:	30800003 	ldbu	r2,0(r6)
   25284:	28800015 	stw	r2,0(r5)
   25288:	30800003 	ldbu	r2,0(r6)
   2528c:	1004c03a 	cmpne	r2,r2,zero
   25290:	dec00104 	addi	sp,sp,4
   25294:	f800283a 	ret
   25298:	d80b883a 	mov	r5,sp
   2529c:	303ff71e 	bne	r6,zero,2527c <__ascii_mbtowc+0xc>
   252a0:	0005883a 	mov	r2,zero
   252a4:	dec00104 	addi	sp,sp,4
   252a8:	f800283a 	ret
   252ac:	00bfff84 	movi	r2,-2
   252b0:	003ff706 	br	25290 <__ascii_mbtowc+0x20>

000252b4 <memcpy>:
   252b4:	30c00430 	cmpltui	r3,r6,16
   252b8:	2005883a 	mov	r2,r4
   252bc:	18002d1e 	bne	r3,zero,25374 <memcpy+0xc0>
   252c0:	2906b03a 	or	r3,r5,r4
   252c4:	18c000cc 	andi	r3,r3,3
   252c8:	1800351e 	bne	r3,zero,253a0 <memcpy+0xec>
   252cc:	32fffc04 	addi	r11,r6,-16
   252d0:	5816d13a 	srli	r11,r11,4
   252d4:	280f883a 	mov	r7,r5
   252d8:	2007883a 	mov	r3,r4
   252dc:	5ac00044 	addi	r11,r11,1
   252e0:	5816913a 	slli	r11,r11,4
   252e4:	22d5883a 	add	r10,r4,r11
   252e8:	39000117 	ldw	r4,4(r7)
   252ec:	3a400017 	ldw	r9,0(r7)
   252f0:	3a000217 	ldw	r8,8(r7)
   252f4:	19000115 	stw	r4,4(r3)
   252f8:	39000317 	ldw	r4,12(r7)
   252fc:	1a400015 	stw	r9,0(r3)
   25300:	1a000215 	stw	r8,8(r3)
   25304:	19000315 	stw	r4,12(r3)
   25308:	18c00404 	addi	r3,r3,16
   2530c:	39c00404 	addi	r7,r7,16
   25310:	50fff51e 	bne	r10,r3,252e8 <memcpy+0x34>
   25314:	3100030c 	andi	r4,r6,12
   25318:	2acb883a 	add	r5,r5,r11
   2531c:	320003cc 	andi	r8,r6,15
   25320:	20002226 	beq	r4,zero,253ac <memcpy+0xf8>
   25324:	280f883a 	mov	r7,r5
   25328:	1813883a 	mov	r9,r3
   2532c:	39c00104 	addi	r7,r7,4
   25330:	3abfff17 	ldw	r10,-4(r7)
   25334:	41c9c83a 	sub	r4,r8,r7
   25338:	2909883a 	add	r4,r5,r4
   2533c:	4a800015 	stw	r10,0(r9)
   25340:	21000128 	cmpgeui	r4,r4,4
   25344:	4a400104 	addi	r9,r9,4
   25348:	203ff81e 	bne	r4,zero,2532c <memcpy+0x78>
   2534c:	413fff04 	addi	r4,r8,-4
   25350:	2008d0ba 	srli	r4,r4,2
   25354:	318000cc 	andi	r6,r6,3
   25358:	31ffffc4 	addi	r7,r6,-1
   2535c:	21000044 	addi	r4,r4,1
   25360:	200890ba 	slli	r4,r4,2
   25364:	1907883a 	add	r3,r3,r4
   25368:	290b883a 	add	r5,r5,r4
   2536c:	3000041e 	bne	r6,zero,25380 <memcpy+0xcc>
   25370:	f800283a 	ret
   25374:	2007883a 	mov	r3,r4
   25378:	31ffffc4 	addi	r7,r6,-1
   2537c:	303ffc26 	beq	r6,zero,25370 <memcpy+0xbc>
   25380:	39c00044 	addi	r7,r7,1
   25384:	19cf883a 	add	r7,r3,r7
   25388:	29800003 	ldbu	r6,0(r5)
   2538c:	18c00044 	addi	r3,r3,1
   25390:	29400044 	addi	r5,r5,1
   25394:	19bfffc5 	stb	r6,-1(r3)
   25398:	38fffb1e 	bne	r7,r3,25388 <memcpy+0xd4>
   2539c:	f800283a 	ret
   253a0:	31ffffc4 	addi	r7,r6,-1
   253a4:	2007883a 	mov	r3,r4
   253a8:	003ff506 	br	25380 <memcpy+0xcc>
   253ac:	400d883a 	mov	r6,r8
   253b0:	003ff106 	br	25378 <memcpy+0xc4>

000253b4 <memset>:
   253b4:	20c000cc 	andi	r3,r4,3
   253b8:	2005883a 	mov	r2,r4
   253bc:	18003626 	beq	r3,zero,25498 <memset+0xe4>
   253c0:	31ffffc4 	addi	r7,r6,-1
   253c4:	30003326 	beq	r6,zero,25494 <memset+0xe0>
   253c8:	2811883a 	mov	r8,r5
   253cc:	2007883a 	mov	r3,r4
   253d0:	00000306 	br	253e0 <memset+0x2c>
   253d4:	39ffffc4 	addi	r7,r7,-1
   253d8:	39bfffe0 	cmpeqi	r6,r7,-1
   253dc:	30002d1e 	bne	r6,zero,25494 <memset+0xe0>
   253e0:	18c00044 	addi	r3,r3,1
   253e4:	198000cc 	andi	r6,r3,3
   253e8:	1a3fffc5 	stb	r8,-1(r3)
   253ec:	303ff91e 	bne	r6,zero,253d4 <memset+0x20>
   253f0:	39000130 	cmpltui	r4,r7,4
   253f4:	2000221e 	bne	r4,zero,25480 <memset+0xcc>
   253f8:	29003fcc 	andi	r4,r5,255
   253fc:	200c923a 	slli	r6,r4,8
   25400:	3a000430 	cmpltui	r8,r7,16
   25404:	3108b03a 	or	r4,r6,r4
   25408:	200c943a 	slli	r6,r4,16
   2540c:	310cb03a 	or	r6,r6,r4
   25410:	40000e1e 	bne	r8,zero,2544c <memset+0x98>
   25414:	393ffc04 	addi	r4,r7,-16
   25418:	2008d13a 	srli	r4,r4,4
   2541c:	21000044 	addi	r4,r4,1
   25420:	2008913a 	slli	r4,r4,4
   25424:	1909883a 	add	r4,r3,r4
   25428:	19800015 	stw	r6,0(r3)
   2542c:	19800115 	stw	r6,4(r3)
   25430:	19800215 	stw	r6,8(r3)
   25434:	19800315 	stw	r6,12(r3)
   25438:	18c00404 	addi	r3,r3,16
   2543c:	20fffa1e 	bne	r4,r3,25428 <memset+0x74>
   25440:	3900030c 	andi	r4,r7,12
   25444:	39c003cc 	andi	r7,r7,15
   25448:	20000d26 	beq	r4,zero,25480 <memset+0xcc>
   2544c:	1811883a 	mov	r8,r3
   25450:	42000104 	addi	r8,r8,4
   25454:	3a09c83a 	sub	r4,r7,r8
   25458:	1909883a 	add	r4,r3,r4
   2545c:	21000128 	cmpgeui	r4,r4,4
   25460:	41bfff15 	stw	r6,-4(r8)
   25464:	203ffa1e 	bne	r4,zero,25450 <memset+0x9c>
   25468:	393fff04 	addi	r4,r7,-4
   2546c:	2008d0ba 	srli	r4,r4,2
   25470:	39c000cc 	andi	r7,r7,3
   25474:	21000044 	addi	r4,r4,1
   25478:	200890ba 	slli	r4,r4,2
   2547c:	1907883a 	add	r3,r3,r4
   25480:	38000426 	beq	r7,zero,25494 <memset+0xe0>
   25484:	19cf883a 	add	r7,r3,r7
   25488:	18c00044 	addi	r3,r3,1
   2548c:	197fffc5 	stb	r5,-1(r3)
   25490:	38fffd1e 	bne	r7,r3,25488 <memset+0xd4>
   25494:	f800283a 	ret
   25498:	2007883a 	mov	r3,r4
   2549c:	300f883a 	mov	r7,r6
   254a0:	003fd306 	br	253f0 <memset+0x3c>

000254a4 <_Balloc>:
   254a4:	20801317 	ldw	r2,76(r4)
   254a8:	defffc04 	addi	sp,sp,-16
   254ac:	dc400115 	stw	r17,4(sp)
   254b0:	dc000015 	stw	r16,0(sp)
   254b4:	dfc00315 	stw	ra,12(sp)
   254b8:	dc800215 	stw	r18,8(sp)
   254bc:	2021883a 	mov	r16,r4
   254c0:	2823883a 	mov	r17,r5
   254c4:	10000e26 	beq	r2,zero,25500 <_Balloc+0x5c>
   254c8:	880690ba 	slli	r3,r17,2
   254cc:	10c7883a 	add	r3,r2,r3
   254d0:	18800017 	ldw	r2,0(r3)
   254d4:	10001126 	beq	r2,zero,2551c <_Balloc+0x78>
   254d8:	11000017 	ldw	r4,0(r2)
   254dc:	19000015 	stw	r4,0(r3)
   254e0:	10000415 	stw	zero,16(r2)
   254e4:	10000315 	stw	zero,12(r2)
   254e8:	dfc00317 	ldw	ra,12(sp)
   254ec:	dc800217 	ldw	r18,8(sp)
   254f0:	dc400117 	ldw	r17,4(sp)
   254f4:	dc000017 	ldw	r16,0(sp)
   254f8:	dec00404 	addi	sp,sp,16
   254fc:	f800283a 	ret
   25500:	01800844 	movi	r6,33
   25504:	01400104 	movi	r5,4
   25508:	00269080 	call	26908 <_calloc_r>
   2550c:	80801315 	stw	r2,76(r16)
   25510:	103fed1e 	bne	r2,zero,254c8 <_Balloc+0x24>
   25514:	0005883a 	mov	r2,zero
   25518:	003ff306 	br	254e8 <_Balloc+0x44>
   2551c:	04800044 	movi	r18,1
   25520:	9464983a 	sll	r18,r18,r17
   25524:	01400044 	movi	r5,1
   25528:	8009883a 	mov	r4,r16
   2552c:	91800144 	addi	r6,r18,5
   25530:	300c90ba 	slli	r6,r6,2
   25534:	00269080 	call	26908 <_calloc_r>
   25538:	103ff626 	beq	r2,zero,25514 <_Balloc+0x70>
   2553c:	14400115 	stw	r17,4(r2)
   25540:	14800215 	stw	r18,8(r2)
   25544:	003fe606 	br	254e0 <_Balloc+0x3c>

00025548 <_Bfree>:
   25548:	28000726 	beq	r5,zero,25568 <_Bfree+0x20>
   2554c:	28c00117 	ldw	r3,4(r5)
   25550:	20801317 	ldw	r2,76(r4)
   25554:	180690ba 	slli	r3,r3,2
   25558:	10c5883a 	add	r2,r2,r3
   2555c:	10c00017 	ldw	r3,0(r2)
   25560:	28c00015 	stw	r3,0(r5)
   25564:	11400015 	stw	r5,0(r2)
   25568:	f800283a 	ret

0002556c <__multadd>:
   2556c:	defff704 	addi	sp,sp,-36
   25570:	dc800215 	stw	r18,8(sp)
   25574:	2c800417 	ldw	r18,16(r5)
   25578:	ddc00715 	stw	r23,28(sp)
   2557c:	dd800615 	stw	r22,24(sp)
   25580:	dd400515 	stw	r21,20(sp)
   25584:	dd000415 	stw	r20,16(sp)
   25588:	dcc00315 	stw	r19,12(sp)
   2558c:	dc400115 	stw	r17,4(sp)
   25590:	dfc00815 	stw	ra,32(sp)
   25594:	dc000015 	stw	r16,0(sp)
   25598:	2827883a 	mov	r19,r5
   2559c:	2029883a 	mov	r20,r4
   255a0:	302b883a 	mov	r21,r6
   255a4:	3823883a 	mov	r17,r7
   255a8:	2d800504 	addi	r22,r5,20
   255ac:	002f883a 	mov	r23,zero
   255b0:	b4000017 	ldw	r16,0(r22)
   255b4:	a80b883a 	mov	r5,r21
   255b8:	b5800104 	addi	r22,r22,4
   255bc:	813fffcc 	andi	r4,r16,65535
   255c0:	002a4b80 	call	2a4b8 <__mulsi3>
   255c4:	8008d43a 	srli	r4,r16,16
   255c8:	a80b883a 	mov	r5,r21
   255cc:	1461883a 	add	r16,r2,r17
   255d0:	002a4b80 	call	2a4b8 <__mulsi3>
   255d4:	800ed43a 	srli	r7,r16,16
   255d8:	843fffcc 	andi	r16,r16,65535
   255dc:	bdc00044 	addi	r23,r23,1
   255e0:	11c5883a 	add	r2,r2,r7
   255e4:	1006943a 	slli	r3,r2,16
   255e8:	1022d43a 	srli	r17,r2,16
   255ec:	1c21883a 	add	r16,r3,r16
   255f0:	b43fff15 	stw	r16,-4(r22)
   255f4:	bcbfee16 	blt	r23,r18,255b0 <__multadd+0x44>
   255f8:	88000826 	beq	r17,zero,2561c <__multadd+0xb0>
   255fc:	98800217 	ldw	r2,8(r19)
   25600:	9080120e 	bge	r18,r2,2564c <__multadd+0xe0>
   25604:	90800144 	addi	r2,r18,5
   25608:	100490ba 	slli	r2,r2,2
   2560c:	94800044 	addi	r18,r18,1
   25610:	9885883a 	add	r2,r19,r2
   25614:	14400015 	stw	r17,0(r2)
   25618:	9c800415 	stw	r18,16(r19)
   2561c:	9805883a 	mov	r2,r19
   25620:	dfc00817 	ldw	ra,32(sp)
   25624:	ddc00717 	ldw	r23,28(sp)
   25628:	dd800617 	ldw	r22,24(sp)
   2562c:	dd400517 	ldw	r21,20(sp)
   25630:	dd000417 	ldw	r20,16(sp)
   25634:	dcc00317 	ldw	r19,12(sp)
   25638:	dc800217 	ldw	r18,8(sp)
   2563c:	dc400117 	ldw	r17,4(sp)
   25640:	dc000017 	ldw	r16,0(sp)
   25644:	dec00904 	addi	sp,sp,36
   25648:	f800283a 	ret
   2564c:	99400117 	ldw	r5,4(r19)
   25650:	a009883a 	mov	r4,r20
   25654:	29400044 	addi	r5,r5,1
   25658:	00254a40 	call	254a4 <_Balloc>
   2565c:	1021883a 	mov	r16,r2
   25660:	10001226 	beq	r2,zero,256ac <__multadd+0x140>
   25664:	99800417 	ldw	r6,16(r19)
   25668:	99400304 	addi	r5,r19,12
   2566c:	11000304 	addi	r4,r2,12
   25670:	31800084 	addi	r6,r6,2
   25674:	300c90ba 	slli	r6,r6,2
   25678:	00252b40 	call	252b4 <memcpy>
   2567c:	98000926 	beq	r19,zero,256a4 <__multadd+0x138>
   25680:	98c00117 	ldw	r3,4(r19)
   25684:	a0801317 	ldw	r2,76(r20)
   25688:	180690ba 	slli	r3,r3,2
   2568c:	10c5883a 	add	r2,r2,r3
   25690:	10c00017 	ldw	r3,0(r2)
   25694:	98c00015 	stw	r3,0(r19)
   25698:	14c00015 	stw	r19,0(r2)
   2569c:	8027883a 	mov	r19,r16
   256a0:	003fd806 	br	25604 <__multadd+0x98>
   256a4:	8027883a 	mov	r19,r16
   256a8:	003fd606 	br	25604 <__multadd+0x98>
   256ac:	01c000f4 	movhi	r7,3
   256b0:	010000f4 	movhi	r4,3
   256b4:	39ffdc04 	addi	r7,r7,-144
   256b8:	000d883a 	mov	r6,zero
   256bc:	01402d44 	movi	r5,181
   256c0:	21003a04 	addi	r4,r4,232
   256c4:	00268900 	call	26890 <__assert_func>

000256c8 <__s2b>:
   256c8:	defff904 	addi	sp,sp,-28
   256cc:	dc800215 	stw	r18,8(sp)
   256d0:	dc000015 	stw	r16,0(sp)
   256d4:	2025883a 	mov	r18,r4
   256d8:	2821883a 	mov	r16,r5
   256dc:	39000204 	addi	r4,r7,8
   256e0:	01400244 	movi	r5,9
   256e4:	dcc00315 	stw	r19,12(sp)
   256e8:	dc400115 	stw	r17,4(sp)
   256ec:	dfc00615 	stw	ra,24(sp)
   256f0:	3823883a 	mov	r17,r7
   256f4:	dd400515 	stw	r21,20(sp)
   256f8:	dd000415 	stw	r20,16(sp)
   256fc:	3027883a 	mov	r19,r6
   25700:	002a3040 	call	2a304 <__divsi3>
   25704:	88c00290 	cmplti	r3,r17,10
   25708:	1800341e 	bne	r3,zero,257dc <__s2b+0x114>
   2570c:	00c00044 	movi	r3,1
   25710:	000b883a 	mov	r5,zero
   25714:	18c7883a 	add	r3,r3,r3
   25718:	29400044 	addi	r5,r5,1
   2571c:	18bffd16 	blt	r3,r2,25714 <__s2b+0x4c>
   25720:	9009883a 	mov	r4,r18
   25724:	00254a40 	call	254a4 <_Balloc>
   25728:	100b883a 	mov	r5,r2
   2572c:	10002d26 	beq	r2,zero,257e4 <__s2b+0x11c>
   25730:	d8800717 	ldw	r2,28(sp)
   25734:	28800515 	stw	r2,20(r5)
   25738:	00800044 	movi	r2,1
   2573c:	28800415 	stw	r2,16(r5)
   25740:	98800290 	cmplti	r2,r19,10
   25744:	1000221e 	bne	r2,zero,257d0 <__s2b+0x108>
   25748:	85400244 	addi	r21,r16,9
   2574c:	a829883a 	mov	r20,r21
   25750:	84e1883a 	add	r16,r16,r19
   25754:	a1c00007 	ldb	r7,0(r20)
   25758:	01800284 	movi	r6,10
   2575c:	9009883a 	mov	r4,r18
   25760:	39fff404 	addi	r7,r7,-48
   25764:	002556c0 	call	2556c <__multadd>
   25768:	a5000044 	addi	r20,r20,1
   2576c:	100b883a 	mov	r5,r2
   25770:	a43ff81e 	bne	r20,r16,25754 <__s2b+0x8c>
   25774:	9c3ffe04 	addi	r16,r19,-8
   25778:	ac21883a 	add	r16,r21,r16
   2577c:	9c400a0e 	bge	r19,r17,257a8 <__s2b+0xe0>
   25780:	8ce3c83a 	sub	r17,r17,r19
   25784:	8463883a 	add	r17,r16,r17
   25788:	81c00007 	ldb	r7,0(r16)
   2578c:	01800284 	movi	r6,10
   25790:	9009883a 	mov	r4,r18
   25794:	39fff404 	addi	r7,r7,-48
   25798:	002556c0 	call	2556c <__multadd>
   2579c:	84000044 	addi	r16,r16,1
   257a0:	100b883a 	mov	r5,r2
   257a4:	8c3ff81e 	bne	r17,r16,25788 <__s2b+0xc0>
   257a8:	2805883a 	mov	r2,r5
   257ac:	dfc00617 	ldw	ra,24(sp)
   257b0:	dd400517 	ldw	r21,20(sp)
   257b4:	dd000417 	ldw	r20,16(sp)
   257b8:	dcc00317 	ldw	r19,12(sp)
   257bc:	dc800217 	ldw	r18,8(sp)
   257c0:	dc400117 	ldw	r17,4(sp)
   257c4:	dc000017 	ldw	r16,0(sp)
   257c8:	dec00704 	addi	sp,sp,28
   257cc:	f800283a 	ret
   257d0:	84000284 	addi	r16,r16,10
   257d4:	04c00244 	movi	r19,9
   257d8:	003fe806 	br	2577c <__s2b+0xb4>
   257dc:	000b883a 	mov	r5,zero
   257e0:	003fcf06 	br	25720 <__s2b+0x58>
   257e4:	01c000f4 	movhi	r7,3
   257e8:	010000f4 	movhi	r4,3
   257ec:	39ffdc04 	addi	r7,r7,-144
   257f0:	000d883a 	mov	r6,zero
   257f4:	01403384 	movi	r5,206
   257f8:	21003a04 	addi	r4,r4,232
   257fc:	00268900 	call	26890 <__assert_func>

00025800 <__hi0bits>:
   25800:	20bfffec 	andhi	r2,r4,65535
   25804:	1000131e 	bne	r2,zero,25854 <__hi0bits+0x54>
   25808:	2008943a 	slli	r4,r4,16
   2580c:	00800404 	movi	r2,16
   25810:	20ffc02c 	andhi	r3,r4,65280
   25814:	1800021e 	bne	r3,zero,25820 <__hi0bits+0x20>
   25818:	2008923a 	slli	r4,r4,8
   2581c:	10800204 	addi	r2,r2,8
   25820:	20fc002c 	andhi	r3,r4,61440
   25824:	1800021e 	bne	r3,zero,25830 <__hi0bits+0x30>
   25828:	2008913a 	slli	r4,r4,4
   2582c:	10800104 	addi	r2,r2,4
   25830:	20f0002c 	andhi	r3,r4,49152
   25834:	1800021e 	bne	r3,zero,25840 <__hi0bits+0x40>
   25838:	200890ba 	slli	r4,r4,2
   2583c:	10800084 	addi	r2,r2,2
   25840:	20000316 	blt	r4,zero,25850 <__hi0bits+0x50>
   25844:	2110002c 	andhi	r4,r4,16384
   25848:	10800044 	addi	r2,r2,1
   2584c:	20000326 	beq	r4,zero,2585c <__hi0bits+0x5c>
   25850:	f800283a 	ret
   25854:	0005883a 	mov	r2,zero
   25858:	003fed06 	br	25810 <__hi0bits+0x10>
   2585c:	00800804 	movi	r2,32
   25860:	f800283a 	ret

00025864 <__lo0bits>:
   25864:	20c00017 	ldw	r3,0(r4)
   25868:	188001cc 	andi	r2,r3,7
   2586c:	10000826 	beq	r2,zero,25890 <__lo0bits+0x2c>
   25870:	1880004c 	andi	r2,r3,1
   25874:	10001f1e 	bne	r2,zero,258f4 <__lo0bits+0x90>
   25878:	1880008c 	andi	r2,r3,2
   2587c:	10002126 	beq	r2,zero,25904 <__lo0bits+0xa0>
   25880:	1806d07a 	srli	r3,r3,1
   25884:	00800044 	movi	r2,1
   25888:	20c00015 	stw	r3,0(r4)
   2588c:	f800283a 	ret
   25890:	18bfffcc 	andi	r2,r3,65535
   25894:	10001426 	beq	r2,zero,258e8 <__lo0bits+0x84>
   25898:	0005883a 	mov	r2,zero
   2589c:	19403fcc 	andi	r5,r3,255
   258a0:	2800021e 	bne	r5,zero,258ac <__lo0bits+0x48>
   258a4:	1806d23a 	srli	r3,r3,8
   258a8:	10800204 	addi	r2,r2,8
   258ac:	194003cc 	andi	r5,r3,15
   258b0:	2800021e 	bne	r5,zero,258bc <__lo0bits+0x58>
   258b4:	1806d13a 	srli	r3,r3,4
   258b8:	10800104 	addi	r2,r2,4
   258bc:	194000cc 	andi	r5,r3,3
   258c0:	2800021e 	bne	r5,zero,258cc <__lo0bits+0x68>
   258c4:	1806d0ba 	srli	r3,r3,2
   258c8:	10800084 	addi	r2,r2,2
   258cc:	1940004c 	andi	r5,r3,1
   258d0:	2800031e 	bne	r5,zero,258e0 <__lo0bits+0x7c>
   258d4:	1806d07a 	srli	r3,r3,1
   258d8:	10800044 	addi	r2,r2,1
   258dc:	18000726 	beq	r3,zero,258fc <__lo0bits+0x98>
   258e0:	20c00015 	stw	r3,0(r4)
   258e4:	f800283a 	ret
   258e8:	1806d43a 	srli	r3,r3,16
   258ec:	00800404 	movi	r2,16
   258f0:	003fea06 	br	2589c <__lo0bits+0x38>
   258f4:	0005883a 	mov	r2,zero
   258f8:	f800283a 	ret
   258fc:	00800804 	movi	r2,32
   25900:	f800283a 	ret
   25904:	1806d0ba 	srli	r3,r3,2
   25908:	00800084 	movi	r2,2
   2590c:	20c00015 	stw	r3,0(r4)
   25910:	f800283a 	ret

00025914 <__i2b>:
   25914:	defffe04 	addi	sp,sp,-8
   25918:	dc000015 	stw	r16,0(sp)
   2591c:	2821883a 	mov	r16,r5
   25920:	01400044 	movi	r5,1
   25924:	dfc00115 	stw	ra,4(sp)
   25928:	00254a40 	call	254a4 <_Balloc>
   2592c:	10000726 	beq	r2,zero,2594c <__i2b+0x38>
   25930:	01000044 	movi	r4,1
   25934:	14000515 	stw	r16,20(r2)
   25938:	11000415 	stw	r4,16(r2)
   2593c:	dfc00117 	ldw	ra,4(sp)
   25940:	dc000017 	ldw	r16,0(sp)
   25944:	dec00204 	addi	sp,sp,8
   25948:	f800283a 	ret
   2594c:	01c000f4 	movhi	r7,3
   25950:	010000f4 	movhi	r4,3
   25954:	39ffdc04 	addi	r7,r7,-144
   25958:	000d883a 	mov	r6,zero
   2595c:	01405004 	movi	r5,320
   25960:	21003a04 	addi	r4,r4,232
   25964:	00268900 	call	26890 <__assert_func>

00025968 <__multiply>:
   25968:	defff004 	addi	sp,sp,-64
   2596c:	dd800c15 	stw	r22,48(sp)
   25970:	dc400715 	stw	r17,28(sp)
   25974:	2d800417 	ldw	r22,16(r5)
   25978:	34400417 	ldw	r17,16(r6)
   2597c:	dc800815 	stw	r18,32(sp)
   25980:	dc000615 	stw	r16,24(sp)
   25984:	dfc00f15 	stw	ra,60(sp)
   25988:	df000e15 	stw	fp,56(sp)
   2598c:	ddc00d15 	stw	r23,52(sp)
   25990:	dd400b15 	stw	r21,44(sp)
   25994:	dd000a15 	stw	r20,40(sp)
   25998:	dcc00915 	stw	r19,36(sp)
   2599c:	2825883a 	mov	r18,r5
   259a0:	3021883a 	mov	r16,r6
   259a4:	b4400516 	blt	r22,r17,259bc <__multiply+0x54>
   259a8:	8807883a 	mov	r3,r17
   259ac:	2821883a 	mov	r16,r5
   259b0:	b023883a 	mov	r17,r22
   259b4:	3025883a 	mov	r18,r6
   259b8:	182d883a 	mov	r22,r3
   259bc:	80800217 	ldw	r2,8(r16)
   259c0:	8d87883a 	add	r3,r17,r22
   259c4:	d8c00115 	stw	r3,4(sp)
   259c8:	81400117 	ldw	r5,4(r16)
   259cc:	10c0010e 	bge	r2,r3,259d4 <__multiply+0x6c>
   259d0:	29400044 	addi	r5,r5,1
   259d4:	00254a40 	call	254a4 <_Balloc>
   259d8:	d8800515 	stw	r2,20(sp)
   259dc:	10008626 	beq	r2,zero,25bf8 <__multiply+0x290>
   259e0:	d8800117 	ldw	r2,4(sp)
   259e4:	102690ba 	slli	r19,r2,2
   259e8:	d8800517 	ldw	r2,20(sp)
   259ec:	10c00504 	addi	r3,r2,20
   259f0:	d8c00015 	stw	r3,0(sp)
   259f4:	1ce7883a 	add	r19,r3,r19
   259f8:	1805883a 	mov	r2,r3
   259fc:	1cc0032e 	bgeu	r3,r19,25a0c <__multiply+0xa4>
   25a00:	10000015 	stw	zero,0(r2)
   25a04:	10800104 	addi	r2,r2,4
   25a08:	14fffd36 	bltu	r2,r19,25a00 <__multiply+0x98>
   25a0c:	b02c90ba 	slli	r22,r22,2
   25a10:	882290ba 	slli	r17,r17,2
   25a14:	94800504 	addi	r18,r18,20
   25a18:	80800504 	addi	r2,r16,20
   25a1c:	9587883a 	add	r3,r18,r22
   25a20:	d8800315 	stw	r2,12(sp)
   25a24:	d8c00215 	stw	r3,8(sp)
   25a28:	1463883a 	add	r17,r2,r17
   25a2c:	90c0342e 	bgeu	r18,r3,25b00 <__multiply+0x198>
   25a30:	80800544 	addi	r2,r16,21
   25a34:	88804b36 	bltu	r17,r2,25b64 <__multiply+0x1fc>
   25a38:	8c05c83a 	sub	r2,r17,r16
   25a3c:	10bffac4 	addi	r2,r2,-21
   25a40:	1004d0ba 	srli	r2,r2,2
   25a44:	10800044 	addi	r2,r2,1
   25a48:	100490ba 	slli	r2,r2,2
   25a4c:	d8800415 	stw	r2,16(sp)
   25a50:	00000606 	br	25a6c <__multiply+0x104>
   25a54:	d8800017 	ldw	r2,0(sp)
   25a58:	94800104 	addi	r18,r18,4
   25a5c:	10800104 	addi	r2,r2,4
   25a60:	d8800015 	stw	r2,0(sp)
   25a64:	d8800217 	ldw	r2,8(sp)
   25a68:	9080252e 	bgeu	r18,r2,25b00 <__multiply+0x198>
   25a6c:	90800017 	ldw	r2,0(r18)
   25a70:	15ffffcc 	andi	r23,r2,65535
   25a74:	b800401e 	bne	r23,zero,25b78 <__multiply+0x210>
   25a78:	1028d43a 	srli	r20,r2,16
   25a7c:	a03ff526 	beq	r20,zero,25a54 <__multiply+0xec>
   25a80:	dd400017 	ldw	r21,0(sp)
   25a84:	dd800317 	ldw	r22,12(sp)
   25a88:	0039883a 	mov	fp,zero
   25a8c:	adc00017 	ldw	r23,0(r21)
   25a90:	b821883a 	mov	r16,r23
   25a94:	b100000b 	ldhu	r4,0(r22)
   25a98:	a00b883a 	mov	r5,r20
   25a9c:	ad400104 	addi	r21,r21,4
   25aa0:	002a4b80 	call	2a4b8 <__mulsi3>
   25aa4:	800cd43a 	srli	r6,r16,16
   25aa8:	b8ffffcc 	andi	r3,r23,65535
   25aac:	b5800104 	addi	r22,r22,4
   25ab0:	118d883a 	add	r6,r2,r6
   25ab4:	3739883a 	add	fp,r6,fp
   25ab8:	e004943a 	slli	r2,fp,16
   25abc:	ac000017 	ldw	r16,0(r21)
   25ac0:	a00b883a 	mov	r5,r20
   25ac4:	10c6b03a 	or	r3,r2,r3
   25ac8:	a8ffff15 	stw	r3,-4(r21)
   25acc:	b13fff8b 	ldhu	r4,-2(r22)
   25ad0:	002a4b80 	call	2a4b8 <__mulsi3>
   25ad4:	e00cd43a 	srli	r6,fp,16
   25ad8:	80ffffcc 	andi	r3,r16,65535
   25adc:	10c7883a 	add	r3,r2,r3
   25ae0:	19af883a 	add	r23,r3,r6
   25ae4:	b838d43a 	srli	fp,r23,16
   25ae8:	b47fea36 	bltu	r22,r17,25a94 <__multiply+0x12c>
   25aec:	d8800017 	ldw	r2,0(sp)
   25af0:	d8c00417 	ldw	r3,16(sp)
   25af4:	10c5883a 	add	r2,r2,r3
   25af8:	15c00015 	stw	r23,0(r2)
   25afc:	003fd506 	br	25a54 <__multiply+0xec>
   25b00:	d8800117 	ldw	r2,4(sp)
   25b04:	00800516 	blt	zero,r2,25b1c <__multiply+0x1b4>
   25b08:	00000706 	br	25b28 <__multiply+0x1c0>
   25b0c:	d8800117 	ldw	r2,4(sp)
   25b10:	10bfffc4 	addi	r2,r2,-1
   25b14:	d8800115 	stw	r2,4(sp)
   25b18:	10000326 	beq	r2,zero,25b28 <__multiply+0x1c0>
   25b1c:	98bfff17 	ldw	r2,-4(r19)
   25b20:	9cffff04 	addi	r19,r19,-4
   25b24:	103ff926 	beq	r2,zero,25b0c <__multiply+0x1a4>
   25b28:	d8800517 	ldw	r2,20(sp)
   25b2c:	d8c00117 	ldw	r3,4(sp)
   25b30:	10c00415 	stw	r3,16(r2)
   25b34:	dfc00f17 	ldw	ra,60(sp)
   25b38:	df000e17 	ldw	fp,56(sp)
   25b3c:	ddc00d17 	ldw	r23,52(sp)
   25b40:	dd800c17 	ldw	r22,48(sp)
   25b44:	dd400b17 	ldw	r21,44(sp)
   25b48:	dd000a17 	ldw	r20,40(sp)
   25b4c:	dcc00917 	ldw	r19,36(sp)
   25b50:	dc800817 	ldw	r18,32(sp)
   25b54:	dc400717 	ldw	r17,28(sp)
   25b58:	dc000617 	ldw	r16,24(sp)
   25b5c:	dec01004 	addi	sp,sp,64
   25b60:	f800283a 	ret
   25b64:	00800104 	movi	r2,4
   25b68:	d8800415 	stw	r2,16(sp)
   25b6c:	90800017 	ldw	r2,0(r18)
   25b70:	15ffffcc 	andi	r23,r2,65535
   25b74:	b83fc026 	beq	r23,zero,25a78 <__multiply+0x110>
   25b78:	dd800017 	ldw	r22,0(sp)
   25b7c:	dd400317 	ldw	r21,12(sp)
   25b80:	0029883a 	mov	r20,zero
   25b84:	af000017 	ldw	fp,0(r21)
   25b88:	b4000017 	ldw	r16,0(r22)
   25b8c:	b80b883a 	mov	r5,r23
   25b90:	e13fffcc 	andi	r4,fp,65535
   25b94:	002a4b80 	call	2a4b8 <__mulsi3>
   25b98:	e008d43a 	srli	r4,fp,16
   25b9c:	823fffcc 	andi	r8,r16,65535
   25ba0:	1205883a 	add	r2,r2,r8
   25ba4:	b80b883a 	mov	r5,r23
   25ba8:	1529883a 	add	r20,r2,r20
   25bac:	8020d43a 	srli	r16,r16,16
   25bb0:	002a4b80 	call	2a4b8 <__mulsi3>
   25bb4:	a008d43a 	srli	r4,r20,16
   25bb8:	1405883a 	add	r2,r2,r16
   25bbc:	a0ffffcc 	andi	r3,r20,65535
   25bc0:	1105883a 	add	r2,r2,r4
   25bc4:	1008943a 	slli	r4,r2,16
   25bc8:	b5800104 	addi	r22,r22,4
   25bcc:	ad400104 	addi	r21,r21,4
   25bd0:	20c6b03a 	or	r3,r4,r3
   25bd4:	b0ffff15 	stw	r3,-4(r22)
   25bd8:	1028d43a 	srli	r20,r2,16
   25bdc:	ac7fe936 	bltu	r21,r17,25b84 <__multiply+0x21c>
   25be0:	d8800017 	ldw	r2,0(sp)
   25be4:	d8c00417 	ldw	r3,16(sp)
   25be8:	10c5883a 	add	r2,r2,r3
   25bec:	15000015 	stw	r20,0(r2)
   25bf0:	90800017 	ldw	r2,0(r18)
   25bf4:	003fa006 	br	25a78 <__multiply+0x110>
   25bf8:	01c000f4 	movhi	r7,3
   25bfc:	010000f4 	movhi	r4,3
   25c00:	39ffdc04 	addi	r7,r7,-144
   25c04:	000d883a 	mov	r6,zero
   25c08:	01405744 	movi	r5,349
   25c0c:	21003a04 	addi	r4,r4,232
   25c10:	00268900 	call	26890 <__assert_func>

00025c14 <__pow5mult>:
   25c14:	defffb04 	addi	sp,sp,-20
   25c18:	dcc00315 	stw	r19,12(sp)
   25c1c:	dc000015 	stw	r16,0(sp)
   25c20:	dfc00415 	stw	ra,16(sp)
   25c24:	dc800215 	stw	r18,8(sp)
   25c28:	dc400115 	stw	r17,4(sp)
   25c2c:	308000cc 	andi	r2,r6,3
   25c30:	3021883a 	mov	r16,r6
   25c34:	2027883a 	mov	r19,r4
   25c38:	10002d1e 	bne	r2,zero,25cf0 <__pow5mult+0xdc>
   25c3c:	2825883a 	mov	r18,r5
   25c40:	8021d0ba 	srai	r16,r16,2
   25c44:	80001926 	beq	r16,zero,25cac <__pow5mult+0x98>
   25c48:	9c401217 	ldw	r17,72(r19)
   25c4c:	8800061e 	bne	r17,zero,25c68 <__pow5mult+0x54>
   25c50:	00002f06 	br	25d10 <__pow5mult+0xfc>
   25c54:	8021d07a 	srai	r16,r16,1
   25c58:	80001426 	beq	r16,zero,25cac <__pow5mult+0x98>
   25c5c:	88800017 	ldw	r2,0(r17)
   25c60:	10001a26 	beq	r2,zero,25ccc <__pow5mult+0xb8>
   25c64:	1023883a 	mov	r17,r2
   25c68:	8080004c 	andi	r2,r16,1
   25c6c:	103ff926 	beq	r2,zero,25c54 <__pow5mult+0x40>
   25c70:	880d883a 	mov	r6,r17
   25c74:	900b883a 	mov	r5,r18
   25c78:	9809883a 	mov	r4,r19
   25c7c:	00259680 	call	25968 <__multiply>
   25c80:	90001926 	beq	r18,zero,25ce8 <__pow5mult+0xd4>
   25c84:	91000117 	ldw	r4,4(r18)
   25c88:	98c01317 	ldw	r3,76(r19)
   25c8c:	8021d07a 	srai	r16,r16,1
   25c90:	200890ba 	slli	r4,r4,2
   25c94:	1907883a 	add	r3,r3,r4
   25c98:	19000017 	ldw	r4,0(r3)
   25c9c:	91000015 	stw	r4,0(r18)
   25ca0:	1c800015 	stw	r18,0(r3)
   25ca4:	1025883a 	mov	r18,r2
   25ca8:	803fec1e 	bne	r16,zero,25c5c <__pow5mult+0x48>
   25cac:	9005883a 	mov	r2,r18
   25cb0:	dfc00417 	ldw	ra,16(sp)
   25cb4:	dcc00317 	ldw	r19,12(sp)
   25cb8:	dc800217 	ldw	r18,8(sp)
   25cbc:	dc400117 	ldw	r17,4(sp)
   25cc0:	dc000017 	ldw	r16,0(sp)
   25cc4:	dec00504 	addi	sp,sp,20
   25cc8:	f800283a 	ret
   25ccc:	880d883a 	mov	r6,r17
   25cd0:	880b883a 	mov	r5,r17
   25cd4:	9809883a 	mov	r4,r19
   25cd8:	00259680 	call	25968 <__multiply>
   25cdc:	88800015 	stw	r2,0(r17)
   25ce0:	10000015 	stw	zero,0(r2)
   25ce4:	003fdf06 	br	25c64 <__pow5mult+0x50>
   25ce8:	1025883a 	mov	r18,r2
   25cec:	003fd906 	br	25c54 <__pow5mult+0x40>
   25cf0:	100490ba 	slli	r2,r2,2
   25cf4:	00c000f4 	movhi	r3,3
   25cf8:	000f883a 	mov	r7,zero
   25cfc:	10c7883a 	add	r3,r2,r3
   25d00:	19804917 	ldw	r6,292(r3)
   25d04:	002556c0 	call	2556c <__multadd>
   25d08:	1025883a 	mov	r18,r2
   25d0c:	003fcc06 	br	25c40 <__pow5mult+0x2c>
   25d10:	01409c44 	movi	r5,625
   25d14:	9809883a 	mov	r4,r19
   25d18:	00259140 	call	25914 <__i2b>
   25d1c:	98801215 	stw	r2,72(r19)
   25d20:	1023883a 	mov	r17,r2
   25d24:	10000015 	stw	zero,0(r2)
   25d28:	003fcf06 	br	25c68 <__pow5mult+0x54>

00025d2c <__lshift>:
   25d2c:	defff904 	addi	sp,sp,-28
   25d30:	dd400515 	stw	r21,20(sp)
   25d34:	dc800215 	stw	r18,8(sp)
   25d38:	302bd17a 	srai	r21,r6,5
   25d3c:	2c800417 	ldw	r18,16(r5)
   25d40:	28800217 	ldw	r2,8(r5)
   25d44:	dd000415 	stw	r20,16(sp)
   25d48:	aca5883a 	add	r18,r21,r18
   25d4c:	dcc00315 	stw	r19,12(sp)
   25d50:	dc400115 	stw	r17,4(sp)
   25d54:	dc000015 	stw	r16,0(sp)
   25d58:	dfc00615 	stw	ra,24(sp)
   25d5c:	94400044 	addi	r17,r18,1
   25d60:	2821883a 	mov	r16,r5
   25d64:	3029883a 	mov	r20,r6
   25d68:	29400117 	ldw	r5,4(r5)
   25d6c:	2027883a 	mov	r19,r4
   25d70:	1440030e 	bge	r2,r17,25d80 <__lshift+0x54>
   25d74:	1085883a 	add	r2,r2,r2
   25d78:	29400044 	addi	r5,r5,1
   25d7c:	147ffd16 	blt	r2,r17,25d74 <__lshift+0x48>
   25d80:	9809883a 	mov	r4,r19
   25d84:	00254a40 	call	254a4 <_Balloc>
   25d88:	10004326 	beq	r2,zero,25e98 <__lshift+0x16c>
   25d8c:	12000504 	addi	r8,r2,20
   25d90:	0540090e 	bge	zero,r21,25db8 <__lshift+0x8c>
   25d94:	ad400144 	addi	r21,r21,5
   25d98:	a82a90ba 	slli	r21,r21,2
   25d9c:	4007883a 	mov	r3,r8
   25da0:	1549883a 	add	r4,r2,r21
   25da4:	18c00104 	addi	r3,r3,4
   25da8:	183fff15 	stw	zero,-4(r3)
   25dac:	193ffd1e 	bne	r3,r4,25da4 <__lshift+0x78>
   25db0:	ad7ffb04 	addi	r21,r21,-20
   25db4:	4551883a 	add	r8,r8,r21
   25db8:	82400417 	ldw	r9,16(r16)
   25dbc:	80c00504 	addi	r3,r16,20
   25dc0:	a14007cc 	andi	r5,r20,31
   25dc4:	481290ba 	slli	r9,r9,2
   25dc8:	1a53883a 	add	r9,r3,r9
   25dcc:	28002a26 	beq	r5,zero,25e78 <__lshift+0x14c>
   25dd0:	02800804 	movi	r10,32
   25dd4:	5155c83a 	sub	r10,r10,r5
   25dd8:	4009883a 	mov	r4,r8
   25ddc:	000f883a 	mov	r7,zero
   25de0:	19800017 	ldw	r6,0(r3)
   25de4:	21000104 	addi	r4,r4,4
   25de8:	18c00104 	addi	r3,r3,4
   25dec:	314c983a 	sll	r6,r6,r5
   25df0:	31ccb03a 	or	r6,r6,r7
   25df4:	21bfff15 	stw	r6,-4(r4)
   25df8:	19bfff17 	ldw	r6,-4(r3)
   25dfc:	328ed83a 	srl	r7,r6,r10
   25e00:	1a7ff736 	bltu	r3,r9,25de0 <__lshift+0xb4>
   25e04:	80c00544 	addi	r3,r16,21
   25e08:	48c02136 	bltu	r9,r3,25e90 <__lshift+0x164>
   25e0c:	4c07c83a 	sub	r3,r9,r16
   25e10:	18fffac4 	addi	r3,r3,-21
   25e14:	1806d0ba 	srli	r3,r3,2
   25e18:	18c00044 	addi	r3,r3,1
   25e1c:	180690ba 	slli	r3,r3,2
   25e20:	40d1883a 	add	r8,r8,r3
   25e24:	41c00015 	stw	r7,0(r8)
   25e28:	38000126 	beq	r7,zero,25e30 <__lshift+0x104>
   25e2c:	8825883a 	mov	r18,r17
   25e30:	14800415 	stw	r18,16(r2)
   25e34:	80000726 	beq	r16,zero,25e54 <__lshift+0x128>
   25e38:	81000117 	ldw	r4,4(r16)
   25e3c:	98c01317 	ldw	r3,76(r19)
   25e40:	200890ba 	slli	r4,r4,2
   25e44:	1907883a 	add	r3,r3,r4
   25e48:	19000017 	ldw	r4,0(r3)
   25e4c:	81000015 	stw	r4,0(r16)
   25e50:	1c000015 	stw	r16,0(r3)
   25e54:	dfc00617 	ldw	ra,24(sp)
   25e58:	dd400517 	ldw	r21,20(sp)
   25e5c:	dd000417 	ldw	r20,16(sp)
   25e60:	dcc00317 	ldw	r19,12(sp)
   25e64:	dc800217 	ldw	r18,8(sp)
   25e68:	dc400117 	ldw	r17,4(sp)
   25e6c:	dc000017 	ldw	r16,0(sp)
   25e70:	dec00704 	addi	sp,sp,28
   25e74:	f800283a 	ret
   25e78:	19000017 	ldw	r4,0(r3)
   25e7c:	18c00104 	addi	r3,r3,4
   25e80:	42000104 	addi	r8,r8,4
   25e84:	413fff15 	stw	r4,-4(r8)
   25e88:	1a7ffb36 	bltu	r3,r9,25e78 <__lshift+0x14c>
   25e8c:	003fe806 	br	25e30 <__lshift+0x104>
   25e90:	00c00104 	movi	r3,4
   25e94:	003fe206 	br	25e20 <__lshift+0xf4>
   25e98:	01c000f4 	movhi	r7,3
   25e9c:	010000f4 	movhi	r4,3
   25ea0:	39ffdc04 	addi	r7,r7,-144
   25ea4:	000d883a 	mov	r6,zero
   25ea8:	01407644 	movi	r5,473
   25eac:	21003a04 	addi	r4,r4,232
   25eb0:	00268900 	call	26890 <__assert_func>

00025eb4 <__mcmp>:
   25eb4:	21800417 	ldw	r6,16(r4)
   25eb8:	28c00417 	ldw	r3,16(r5)
   25ebc:	30c5c83a 	sub	r2,r6,r3
   25ec0:	30c00e1e 	bne	r6,r3,25efc <__mcmp+0x48>
   25ec4:	180690ba 	slli	r3,r3,2
   25ec8:	21c00504 	addi	r7,r4,20
   25ecc:	29400504 	addi	r5,r5,20
   25ed0:	38c9883a 	add	r4,r7,r3
   25ed4:	28c7883a 	add	r3,r5,r3
   25ed8:	00000106 	br	25ee0 <__mcmp+0x2c>
   25edc:	3900082e 	bgeu	r7,r4,25f00 <__mcmp+0x4c>
   25ee0:	21bfff17 	ldw	r6,-4(r4)
   25ee4:	197fff17 	ldw	r5,-4(r3)
   25ee8:	213fff04 	addi	r4,r4,-4
   25eec:	18ffff04 	addi	r3,r3,-4
   25ef0:	317ffa26 	beq	r6,r5,25edc <__mcmp+0x28>
   25ef4:	3140032e 	bgeu	r6,r5,25f04 <__mcmp+0x50>
   25ef8:	00bfffc4 	movi	r2,-1
   25efc:	f800283a 	ret
   25f00:	f800283a 	ret
   25f04:	00800044 	movi	r2,1
   25f08:	f800283a 	ret

00025f0c <__mdiff>:
   25f0c:	28800417 	ldw	r2,16(r5)
   25f10:	30c00417 	ldw	r3,16(r6)
   25f14:	defffc04 	addi	sp,sp,-16
   25f18:	dc800215 	stw	r18,8(sp)
   25f1c:	dc400115 	stw	r17,4(sp)
   25f20:	dc000015 	stw	r16,0(sp)
   25f24:	dfc00315 	stw	ra,12(sp)
   25f28:	2823883a 	mov	r17,r5
   25f2c:	3021883a 	mov	r16,r6
   25f30:	10e5c83a 	sub	r18,r2,r3
   25f34:	10c0641e 	bne	r2,r3,260c8 <__mdiff+0x1bc>
   25f38:	180c90ba 	slli	r6,r3,2
   25f3c:	29400504 	addi	r5,r5,20
   25f40:	80c00504 	addi	r3,r16,20
   25f44:	2985883a 	add	r2,r5,r6
   25f48:	1987883a 	add	r3,r3,r6
   25f4c:	00000106 	br	25f54 <__mdiff+0x48>
   25f50:	2880642e 	bgeu	r5,r2,260e4 <__mdiff+0x1d8>
   25f54:	11ffff17 	ldw	r7,-4(r2)
   25f58:	19bfff17 	ldw	r6,-4(r3)
   25f5c:	10bfff04 	addi	r2,r2,-4
   25f60:	18ffff04 	addi	r3,r3,-4
   25f64:	39bffa26 	beq	r7,r6,25f50 <__mdiff+0x44>
   25f68:	39805236 	bltu	r7,r6,260b4 <__mdiff+0x1a8>
   25f6c:	89400117 	ldw	r5,4(r17)
   25f70:	00254a40 	call	254a4 <_Balloc>
   25f74:	10006226 	beq	r2,zero,26100 <__mdiff+0x1f4>
   25f78:	8a400417 	ldw	r9,16(r17)
   25f7c:	83000417 	ldw	r12,16(r16)
   25f80:	8ac00504 	addi	r11,r17,20
   25f84:	481090ba 	slli	r8,r9,2
   25f88:	601890ba 	slli	r12,r12,2
   25f8c:	81800504 	addi	r6,r16,20
   25f90:	13400504 	addi	r13,r2,20
   25f94:	14800315 	stw	r18,12(r2)
   25f98:	5a11883a 	add	r8,r11,r8
   25f9c:	3319883a 	add	r12,r6,r12
   25fa0:	681d883a 	mov	r14,r13
   25fa4:	5815883a 	mov	r10,r11
   25fa8:	0007883a 	mov	r3,zero
   25fac:	51000017 	ldw	r4,0(r10)
   25fb0:	31c00017 	ldw	r7,0(r6)
   25fb4:	73800104 	addi	r14,r14,4
   25fb8:	217fffcc 	andi	r5,r4,65535
   25fbc:	28cb883a 	add	r5,r5,r3
   25fc0:	38ffffcc 	andi	r3,r7,65535
   25fc4:	28cbc83a 	sub	r5,r5,r3
   25fc8:	380ed43a 	srli	r7,r7,16
   25fcc:	2006d43a 	srli	r3,r4,16
   25fd0:	2809d43a 	srai	r4,r5,16
   25fd4:	297fffcc 	andi	r5,r5,65535
   25fd8:	19c7c83a 	sub	r3,r3,r7
   25fdc:	1907883a 	add	r3,r3,r4
   25fe0:	1808943a 	slli	r4,r3,16
   25fe4:	31800104 	addi	r6,r6,4
   25fe8:	1807d43a 	srai	r3,r3,16
   25fec:	214ab03a 	or	r5,r4,r5
   25ff0:	717fff15 	stw	r5,-4(r14)
   25ff4:	52800104 	addi	r10,r10,4
   25ff8:	333fec36 	bltu	r6,r12,25fac <__mdiff+0xa0>
   25ffc:	640fc83a 	sub	r7,r12,r16
   26000:	39fffac4 	addi	r7,r7,-21
   26004:	84000544 	addi	r16,r16,21
   26008:	380ed0ba 	srli	r7,r7,2
   2600c:	64003336 	bltu	r12,r16,260dc <__mdiff+0x1d0>
   26010:	380890ba 	slli	r4,r7,2
   26014:	6909883a 	add	r4,r13,r4
   26018:	64002e36 	bltu	r12,r16,260d4 <__mdiff+0x1c8>
   2601c:	39800044 	addi	r6,r7,1
   26020:	300c90ba 	slli	r6,r6,2
   26024:	5997883a 	add	r11,r11,r6
   26028:	699b883a 	add	r13,r13,r6
   2602c:	5a00152e 	bgeu	r11,r8,26084 <__mdiff+0x178>
   26030:	680f883a 	mov	r7,r13
   26034:	580d883a 	mov	r6,r11
   26038:	31000017 	ldw	r4,0(r6)
   2603c:	39c00104 	addi	r7,r7,4
   26040:	31800104 	addi	r6,r6,4
   26044:	217fffcc 	andi	r5,r4,65535
   26048:	28cb883a 	add	r5,r5,r3
   2604c:	2815d43a 	srai	r10,r5,16
   26050:	2006d43a 	srli	r3,r4,16
   26054:	297fffcc 	andi	r5,r5,65535
   26058:	1a87883a 	add	r3,r3,r10
   2605c:	1814943a 	slli	r10,r3,16
   26060:	1807d43a 	srai	r3,r3,16
   26064:	514ab03a 	or	r5,r10,r5
   26068:	397fff15 	stw	r5,-4(r7)
   2606c:	323ff236 	bltu	r6,r8,26038 <__mdiff+0x12c>
   26070:	413fffc4 	addi	r4,r8,-1
   26074:	22c9c83a 	sub	r4,r4,r11
   26078:	2008d0ba 	srli	r4,r4,2
   2607c:	200890ba 	slli	r4,r4,2
   26080:	6909883a 	add	r4,r13,r4
   26084:	2800041e 	bne	r5,zero,26098 <__mdiff+0x18c>
   26088:	20ffff17 	ldw	r3,-4(r4)
   2608c:	4a7fffc4 	addi	r9,r9,-1
   26090:	213fff04 	addi	r4,r4,-4
   26094:	183ffc26 	beq	r3,zero,26088 <__mdiff+0x17c>
   26098:	12400415 	stw	r9,16(r2)
   2609c:	dfc00317 	ldw	ra,12(sp)
   260a0:	dc800217 	ldw	r18,8(sp)
   260a4:	dc400117 	ldw	r17,4(sp)
   260a8:	dc000017 	ldw	r16,0(sp)
   260ac:	dec00404 	addi	sp,sp,16
   260b0:	f800283a 	ret
   260b4:	8805883a 	mov	r2,r17
   260b8:	04800044 	movi	r18,1
   260bc:	8023883a 	mov	r17,r16
   260c0:	1021883a 	mov	r16,r2
   260c4:	003fa906 	br	25f6c <__mdiff+0x60>
   260c8:	903ffa16 	blt	r18,zero,260b4 <__mdiff+0x1a8>
   260cc:	0025883a 	mov	r18,zero
   260d0:	003fa606 	br	25f6c <__mdiff+0x60>
   260d4:	01800104 	movi	r6,4
   260d8:	003fd206 	br	26024 <__mdiff+0x118>
   260dc:	0009883a 	mov	r4,zero
   260e0:	003fcc06 	br	26014 <__mdiff+0x108>
   260e4:	000b883a 	mov	r5,zero
   260e8:	00254a40 	call	254a4 <_Balloc>
   260ec:	10000b26 	beq	r2,zero,2611c <__mdiff+0x210>
   260f0:	00c00044 	movi	r3,1
   260f4:	10c00415 	stw	r3,16(r2)
   260f8:	10000515 	stw	zero,20(r2)
   260fc:	003fe706 	br	2609c <__mdiff+0x190>
   26100:	01c000f4 	movhi	r7,3
   26104:	010000f4 	movhi	r4,3
   26108:	39ffdc04 	addi	r7,r7,-144
   2610c:	000d883a 	mov	r6,zero
   26110:	01409004 	movi	r5,576
   26114:	21003a04 	addi	r4,r4,232
   26118:	00268900 	call	26890 <__assert_func>
   2611c:	01c000f4 	movhi	r7,3
   26120:	010000f4 	movhi	r4,3
   26124:	39ffdc04 	addi	r7,r7,-144
   26128:	000d883a 	mov	r6,zero
   2612c:	01408c84 	movi	r5,562
   26130:	21003a04 	addi	r4,r4,232
   26134:	00268900 	call	26890 <__assert_func>

00026138 <__ulp>:
   26138:	28dffc2c 	andhi	r3,r5,32752
   2613c:	017f3034 	movhi	r5,64704
   26140:	1947883a 	add	r3,r3,r5
   26144:	00c0020e 	bge	zero,r3,26150 <__ulp+0x18>
   26148:	0005883a 	mov	r2,zero
   2614c:	f800283a 	ret
   26150:	00c7c83a 	sub	r3,zero,r3
   26154:	1807d53a 	srai	r3,r3,20
   26158:	18800508 	cmpgei	r2,r3,20
   2615c:	1000041e 	bne	r2,zero,26170 <__ulp+0x38>
   26160:	00800234 	movhi	r2,8
   26164:	10c7d83a 	sra	r3,r2,r3
   26168:	0005883a 	mov	r2,zero
   2616c:	f800283a 	ret
   26170:	193ffb04 	addi	r4,r3,-20
   26174:	208007c8 	cmpgei	r2,r4,31
   26178:	0007883a 	mov	r3,zero
   2617c:	1000031e 	bne	r2,zero,2618c <__ulp+0x54>
   26180:	00a00034 	movhi	r2,32768
   26184:	1104d83a 	srl	r2,r2,r4
   26188:	f800283a 	ret
   2618c:	00800044 	movi	r2,1
   26190:	f800283a 	ret

00026194 <__b2d>:
   26194:	defffa04 	addi	sp,sp,-24
   26198:	dc400115 	stw	r17,4(sp)
   2619c:	24400417 	ldw	r17,16(r4)
   261a0:	dc000015 	stw	r16,0(sp)
   261a4:	24000504 	addi	r16,r4,20
   261a8:	882290ba 	slli	r17,r17,2
   261ac:	dc800215 	stw	r18,8(sp)
   261b0:	dd000415 	stw	r20,16(sp)
   261b4:	8463883a 	add	r17,r16,r17
   261b8:	8cbfff17 	ldw	r18,-4(r17)
   261bc:	dcc00315 	stw	r19,12(sp)
   261c0:	dfc00515 	stw	ra,20(sp)
   261c4:	9009883a 	mov	r4,r18
   261c8:	2827883a 	mov	r19,r5
   261cc:	00258000 	call	25800 <__hi0bits>
   261d0:	01000804 	movi	r4,32
   261d4:	2087c83a 	sub	r3,r4,r2
   261d8:	98c00015 	stw	r3,0(r19)
   261dc:	10c002c8 	cmpgei	r3,r2,11
   261e0:	8d3fff04 	addi	r20,r17,-4
   261e4:	18001f26 	beq	r3,zero,26264 <__b2d+0xd0>
   261e8:	10fffd44 	addi	r3,r2,-11
   261ec:	85000e2e 	bgeu	r16,r20,26228 <__b2d+0x94>
   261f0:	88bffe17 	ldw	r2,-8(r17)
   261f4:	18001226 	beq	r3,zero,26240 <__b2d+0xac>
   261f8:	20c9c83a 	sub	r4,r4,r3
   261fc:	110cd83a 	srl	r6,r2,r4
   26200:	90e4983a 	sll	r18,r18,r3
   26204:	10c4983a 	sll	r2,r2,r3
   26208:	897ffe04 	addi	r5,r17,-8
   2620c:	9186b03a 	or	r3,r18,r6
   26210:	18cffc34 	orhi	r3,r3,16368
   26214:	81400b2e 	bgeu	r16,r5,26244 <__b2d+0xb0>
   26218:	897ffd17 	ldw	r5,-12(r17)
   2621c:	2908d83a 	srl	r4,r5,r4
   26220:	1104b03a 	or	r2,r2,r4
   26224:	00000706 	br	26244 <__b2d+0xb0>
   26228:	18000426 	beq	r3,zero,2623c <__b2d+0xa8>
   2622c:	90c6983a 	sll	r3,r18,r3
   26230:	0005883a 	mov	r2,zero
   26234:	18cffc34 	orhi	r3,r3,16368
   26238:	00000206 	br	26244 <__b2d+0xb0>
   2623c:	0005883a 	mov	r2,zero
   26240:	90cffc34 	orhi	r3,r18,16368
   26244:	dfc00517 	ldw	ra,20(sp)
   26248:	dd000417 	ldw	r20,16(sp)
   2624c:	dcc00317 	ldw	r19,12(sp)
   26250:	dc800217 	ldw	r18,8(sp)
   26254:	dc400117 	ldw	r17,4(sp)
   26258:	dc000017 	ldw	r16,0(sp)
   2625c:	dec00604 	addi	sp,sp,24
   26260:	f800283a 	ret
   26264:	014002c4 	movi	r5,11
   26268:	2889c83a 	sub	r4,r5,r2
   2626c:	9106d83a 	srl	r3,r18,r4
   26270:	18cffc34 	orhi	r3,r3,16368
   26274:	85000536 	bltu	r16,r20,2628c <__b2d+0xf8>
   26278:	000b883a 	mov	r5,zero
   2627c:	10800544 	addi	r2,r2,21
   26280:	9084983a 	sll	r2,r18,r2
   26284:	1144b03a 	or	r2,r2,r5
   26288:	003fee06 	br	26244 <__b2d+0xb0>
   2628c:	897ffe17 	ldw	r5,-8(r17)
   26290:	290ad83a 	srl	r5,r5,r4
   26294:	003ff906 	br	2627c <__b2d+0xe8>

00026298 <__d2b>:
   26298:	defff804 	addi	sp,sp,-32
   2629c:	dd000615 	stw	r20,24(sp)
   262a0:	2829883a 	mov	r20,r5
   262a4:	01400044 	movi	r5,1
   262a8:	dcc00515 	stw	r19,20(sp)
   262ac:	dc000215 	stw	r16,8(sp)
   262b0:	dfc00715 	stw	ra,28(sp)
   262b4:	dc800415 	stw	r18,16(sp)
   262b8:	dc400315 	stw	r17,12(sp)
   262bc:	3021883a 	mov	r16,r6
   262c0:	3827883a 	mov	r19,r7
   262c4:	00254a40 	call	254a4 <_Balloc>
   262c8:	10004526 	beq	r2,zero,263e0 <__d2b+0x148>
   262cc:	8024d53a 	srli	r18,r16,20
   262d0:	01800434 	movhi	r6,16
   262d4:	31bfffc4 	addi	r6,r6,-1
   262d8:	9481ffcc 	andi	r18,r18,2047
   262dc:	1023883a 	mov	r17,r2
   262e0:	81a0703a 	and	r16,r16,r6
   262e4:	90000126 	beq	r18,zero,262ec <__d2b+0x54>
   262e8:	84000434 	orhi	r16,r16,16
   262ec:	dc000115 	stw	r16,4(sp)
   262f0:	a0002226 	beq	r20,zero,2637c <__d2b+0xe4>
   262f4:	d809883a 	mov	r4,sp
   262f8:	dd000015 	stw	r20,0(sp)
   262fc:	00258640 	call	25864 <__lo0bits>
   26300:	d8c00117 	ldw	r3,4(sp)
   26304:	10003326 	beq	r2,zero,263d4 <__d2b+0x13c>
   26308:	01000804 	movi	r4,32
   2630c:	2089c83a 	sub	r4,r4,r2
   26310:	1908983a 	sll	r4,r3,r4
   26314:	d9400017 	ldw	r5,0(sp)
   26318:	1886d83a 	srl	r3,r3,r2
   2631c:	2148b03a 	or	r4,r4,r5
   26320:	89000515 	stw	r4,20(r17)
   26324:	d8c00115 	stw	r3,4(sp)
   26328:	88c00615 	stw	r3,24(r17)
   2632c:	1800271e 	bne	r3,zero,263cc <__d2b+0x134>
   26330:	04000044 	movi	r16,1
   26334:	8c000415 	stw	r16,16(r17)
   26338:	90001926 	beq	r18,zero,263a0 <__d2b+0x108>
   2633c:	00c00d44 	movi	r3,53
   26340:	94bef344 	addi	r18,r18,-1075
   26344:	90a5883a 	add	r18,r18,r2
   26348:	1885c83a 	sub	r2,r3,r2
   2634c:	d8c00817 	ldw	r3,32(sp)
   26350:	9c800015 	stw	r18,0(r19)
   26354:	18800015 	stw	r2,0(r3)
   26358:	8805883a 	mov	r2,r17
   2635c:	dfc00717 	ldw	ra,28(sp)
   26360:	dd000617 	ldw	r20,24(sp)
   26364:	dcc00517 	ldw	r19,20(sp)
   26368:	dc800417 	ldw	r18,16(sp)
   2636c:	dc400317 	ldw	r17,12(sp)
   26370:	dc000217 	ldw	r16,8(sp)
   26374:	dec00804 	addi	sp,sp,32
   26378:	f800283a 	ret
   2637c:	d9000104 	addi	r4,sp,4
   26380:	00258640 	call	25864 <__lo0bits>
   26384:	00c00044 	movi	r3,1
   26388:	88c00415 	stw	r3,16(r17)
   2638c:	d8c00117 	ldw	r3,4(sp)
   26390:	10800804 	addi	r2,r2,32
   26394:	04000044 	movi	r16,1
   26398:	88c00515 	stw	r3,20(r17)
   2639c:	903fe71e 	bne	r18,zero,2633c <__d2b+0xa4>
   263a0:	800690ba 	slli	r3,r16,2
   263a4:	10bef384 	addi	r2,r2,-1074
   263a8:	98800015 	stw	r2,0(r19)
   263ac:	88c5883a 	add	r2,r17,r3
   263b0:	11000417 	ldw	r4,16(r2)
   263b4:	8020917a 	slli	r16,r16,5
   263b8:	00258000 	call	25800 <__hi0bits>
   263bc:	80a1c83a 	sub	r16,r16,r2
   263c0:	d8800817 	ldw	r2,32(sp)
   263c4:	14000015 	stw	r16,0(r2)
   263c8:	003fe306 	br	26358 <__d2b+0xc0>
   263cc:	04000084 	movi	r16,2
   263d0:	003fd806 	br	26334 <__d2b+0x9c>
   263d4:	d9000017 	ldw	r4,0(sp)
   263d8:	89000515 	stw	r4,20(r17)
   263dc:	003fd206 	br	26328 <__d2b+0x90>
   263e0:	01c000f4 	movhi	r7,3
   263e4:	010000f4 	movhi	r4,3
   263e8:	39ffdc04 	addi	r7,r7,-144
   263ec:	000d883a 	mov	r6,zero
   263f0:	0140c284 	movi	r5,778
   263f4:	21003a04 	addi	r4,r4,232
   263f8:	00268900 	call	26890 <__assert_func>

000263fc <__ratio>:
   263fc:	defff904 	addi	sp,sp,-28
   26400:	dc400315 	stw	r17,12(sp)
   26404:	2823883a 	mov	r17,r5
   26408:	d80b883a 	mov	r5,sp
   2640c:	dfc00615 	stw	ra,24(sp)
   26410:	dcc00515 	stw	r19,20(sp)
   26414:	dc800415 	stw	r18,16(sp)
   26418:	2027883a 	mov	r19,r4
   2641c:	dc000215 	stw	r16,8(sp)
   26420:	00261940 	call	26194 <__b2d>
   26424:	d9400104 	addi	r5,sp,4
   26428:	8809883a 	mov	r4,r17
   2642c:	1025883a 	mov	r18,r2
   26430:	1821883a 	mov	r16,r3
   26434:	00261940 	call	26194 <__b2d>
   26438:	89400417 	ldw	r5,16(r17)
   2643c:	99000417 	ldw	r4,16(r19)
   26440:	d9800117 	ldw	r6,4(sp)
   26444:	180f883a 	mov	r7,r3
   26448:	2149c83a 	sub	r4,r4,r5
   2644c:	d9400017 	ldw	r5,0(sp)
   26450:	2008917a 	slli	r4,r4,5
   26454:	298bc83a 	sub	r5,r5,r6
   26458:	2149883a 	add	r4,r4,r5
   2645c:	100d883a 	mov	r6,r2
   26460:	01000c0e 	bge	zero,r4,26494 <__ratio+0x98>
   26464:	2008953a 	slli	r4,r4,20
   26468:	2421883a 	add	r16,r4,r16
   2646c:	9009883a 	mov	r4,r18
   26470:	800b883a 	mov	r5,r16
   26474:	002afdc0 	call	2afdc <__divdf3>
   26478:	dfc00617 	ldw	ra,24(sp)
   2647c:	dcc00517 	ldw	r19,20(sp)
   26480:	dc800417 	ldw	r18,16(sp)
   26484:	dc400317 	ldw	r17,12(sp)
   26488:	dc000217 	ldw	r16,8(sp)
   2648c:	dec00704 	addi	sp,sp,28
   26490:	f800283a 	ret
   26494:	2008953a 	slli	r4,r4,20
   26498:	190fc83a 	sub	r7,r3,r4
   2649c:	003ff306 	br	2646c <__ratio+0x70>

000264a0 <_mprec_log10>:
   264a0:	defffe04 	addi	sp,sp,-8
   264a4:	dc000015 	stw	r16,0(sp)
   264a8:	dfc00115 	stw	ra,4(sp)
   264ac:	20800608 	cmpgei	r2,r4,24
   264b0:	2021883a 	mov	r16,r4
   264b4:	10000f26 	beq	r2,zero,264f4 <_mprec_log10+0x54>
   264b8:	0009883a 	mov	r4,zero
   264bc:	014ffc34 	movhi	r5,16368
   264c0:	000d883a 	mov	r6,zero
   264c4:	01d00934 	movhi	r7,16420
   264c8:	002bb700 	call	2bb70 <__muldf3>
   264cc:	843fffc4 	addi	r16,r16,-1
   264d0:	1009883a 	mov	r4,r2
   264d4:	180b883a 	mov	r5,r3
   264d8:	803ff91e 	bne	r16,zero,264c0 <_mprec_log10+0x20>
   264dc:	2005883a 	mov	r2,r4
   264e0:	2807883a 	mov	r3,r5
   264e4:	dfc00117 	ldw	ra,4(sp)
   264e8:	dc000017 	ldw	r16,0(sp)
   264ec:	dec00204 	addi	sp,sp,8
   264f0:	f800283a 	ret
   264f4:	202090fa 	slli	r16,r4,3
   264f8:	008000f4 	movhi	r2,3
   264fc:	10806104 	addi	r2,r2,388
   26500:	1421883a 	add	r16,r2,r16
   26504:	81000017 	ldw	r4,0(r16)
   26508:	81400117 	ldw	r5,4(r16)
   2650c:	003ff306 	br	264dc <_mprec_log10+0x3c>

00026510 <__copybits>:
   26510:	297fffc4 	addi	r5,r5,-1
   26514:	280fd17a 	srai	r7,r5,5
   26518:	31400417 	ldw	r5,16(r6)
   2651c:	30800504 	addi	r2,r6,20
   26520:	39c00044 	addi	r7,r7,1
   26524:	280a90ba 	slli	r5,r5,2
   26528:	380e90ba 	slli	r7,r7,2
   2652c:	114b883a 	add	r5,r2,r5
   26530:	21cf883a 	add	r7,r4,r7
   26534:	11400c2e 	bgeu	r2,r5,26568 <__copybits+0x58>
   26538:	2007883a 	mov	r3,r4
   2653c:	12000017 	ldw	r8,0(r2)
   26540:	10800104 	addi	r2,r2,4
   26544:	18c00104 	addi	r3,r3,4
   26548:	1a3fff15 	stw	r8,-4(r3)
   2654c:	117ffb36 	bltu	r2,r5,2653c <__copybits+0x2c>
   26550:	2985c83a 	sub	r2,r5,r6
   26554:	10bffac4 	addi	r2,r2,-21
   26558:	1004d0ba 	srli	r2,r2,2
   2655c:	10800044 	addi	r2,r2,1
   26560:	100490ba 	slli	r2,r2,2
   26564:	2089883a 	add	r4,r4,r2
   26568:	21c0032e 	bgeu	r4,r7,26578 <__copybits+0x68>
   2656c:	21000104 	addi	r4,r4,4
   26570:	203fff15 	stw	zero,-4(r4)
   26574:	21fffd36 	bltu	r4,r7,2656c <__copybits+0x5c>
   26578:	f800283a 	ret

0002657c <__any_on>:
   2657c:	20c00417 	ldw	r3,16(r4)
   26580:	280dd17a 	srai	r6,r5,5
   26584:	21000504 	addi	r4,r4,20
   26588:	1980080e 	bge	r3,r6,265ac <__any_on+0x30>
   2658c:	180490ba 	slli	r2,r3,2
   26590:	2085883a 	add	r2,r4,r2
   26594:	20800f2e 	bgeu	r4,r2,265d4 <__any_on+0x58>
   26598:	10ffff17 	ldw	r3,-4(r2)
   2659c:	10bfff04 	addi	r2,r2,-4
   265a0:	183ffc26 	beq	r3,zero,26594 <__any_on+0x18>
   265a4:	00800044 	movi	r2,1
   265a8:	f800283a 	ret
   265ac:	300490ba 	slli	r2,r6,2
   265b0:	2085883a 	add	r2,r4,r2
   265b4:	30fff70e 	bge	r6,r3,26594 <__any_on+0x18>
   265b8:	294007cc 	andi	r5,r5,31
   265bc:	283ff526 	beq	r5,zero,26594 <__any_on+0x18>
   265c0:	11800017 	ldw	r6,0(r2)
   265c4:	3146d83a 	srl	r3,r6,r5
   265c8:	194a983a 	sll	r5,r3,r5
   265cc:	317ff51e 	bne	r6,r5,265a4 <__any_on+0x28>
   265d0:	003ff006 	br	26594 <__any_on+0x18>
   265d4:	0005883a 	mov	r2,zero
   265d8:	f800283a 	ret

000265dc <_read_r>:
   265dc:	2807883a 	mov	r3,r5
   265e0:	defffe04 	addi	sp,sp,-8
   265e4:	dc000015 	stw	r16,0(sp)
   265e8:	300b883a 	mov	r5,r6
   265ec:	008000f4 	movhi	r2,3
   265f0:	380d883a 	mov	r6,r7
   265f4:	2021883a 	mov	r16,r4
   265f8:	1809883a 	mov	r4,r3
   265fc:	dfc00115 	stw	ra,4(sp)
   26600:	100fca15 	stw	zero,16168(r2)
   26604:	002ddf40 	call	2ddf4 <read>
   26608:	10ffffd8 	cmpnei	r3,r2,-1
   2660c:	18000426 	beq	r3,zero,26620 <_read_r+0x44>
   26610:	dfc00117 	ldw	ra,4(sp)
   26614:	dc000017 	ldw	r16,0(sp)
   26618:	dec00204 	addi	sp,sp,8
   2661c:	f800283a 	ret
   26620:	00c000f4 	movhi	r3,3
   26624:	18cfca17 	ldw	r3,16168(r3)
   26628:	183ff926 	beq	r3,zero,26610 <_read_r+0x34>
   2662c:	80c00015 	stw	r3,0(r16)
   26630:	dfc00117 	ldw	ra,4(sp)
   26634:	dc000017 	ldw	r16,0(sp)
   26638:	dec00204 	addi	sp,sp,8
   2663c:	f800283a 	ret

00026640 <strcmp>:
   26640:	2144b03a 	or	r2,r4,r5
   26644:	108000cc 	andi	r2,r2,3
   26648:	1000141e 	bne	r2,zero,2669c <strcmp+0x5c>
   2664c:	20800017 	ldw	r2,0(r4)
   26650:	28c00017 	ldw	r3,0(r5)
   26654:	10c0111e 	bne	r2,r3,2669c <strcmp+0x5c>
   26658:	01ffbff4 	movhi	r7,65279
   2665c:	01a02074 	movhi	r6,32897
   26660:	39ffbfc4 	addi	r7,r7,-257
   26664:	31a02004 	addi	r6,r6,-32640
   26668:	00000306 	br	26678 <strcmp+0x38>
   2666c:	20800017 	ldw	r2,0(r4)
   26670:	28c00017 	ldw	r3,0(r5)
   26674:	10c0091e 	bne	r2,r3,2669c <strcmp+0x5c>
   26678:	11c7883a 	add	r3,r2,r7
   2667c:	0084303a 	nor	r2,zero,r2
   26680:	1884703a 	and	r2,r3,r2
   26684:	1184703a 	and	r2,r2,r6
   26688:	21000104 	addi	r4,r4,4
   2668c:	29400104 	addi	r5,r5,4
   26690:	103ff626 	beq	r2,zero,2666c <strcmp+0x2c>
   26694:	0005883a 	mov	r2,zero
   26698:	f800283a 	ret
   2669c:	20c00003 	ldbu	r3,0(r4)
   266a0:	18803fcc 	andi	r2,r3,255
   266a4:	1080201c 	xori	r2,r2,128
   266a8:	10bfe004 	addi	r2,r2,-128
   266ac:	1000071e 	bne	r2,zero,266cc <strcmp+0x8c>
   266b0:	00000a06 	br	266dc <strcmp+0x9c>
   266b4:	20c00003 	ldbu	r3,0(r4)
   266b8:	29400044 	addi	r5,r5,1
   266bc:	18803fcc 	andi	r2,r3,255
   266c0:	1080201c 	xori	r2,r2,128
   266c4:	10bfe004 	addi	r2,r2,-128
   266c8:	10000726 	beq	r2,zero,266e8 <strcmp+0xa8>
   266cc:	29800007 	ldb	r6,0(r5)
   266d0:	21000044 	addi	r4,r4,1
   266d4:	30bff726 	beq	r6,r2,266b4 <strcmp+0x74>
   266d8:	18803fcc 	andi	r2,r3,255
   266dc:	28c00003 	ldbu	r3,0(r5)
   266e0:	10c5c83a 	sub	r2,r2,r3
   266e4:	f800283a 	ret
   266e8:	28c00003 	ldbu	r3,0(r5)
   266ec:	0005883a 	mov	r2,zero
   266f0:	10c5c83a 	sub	r2,r2,r3
   266f4:	f800283a 	ret

000266f8 <strlen>:
   266f8:	208000cc 	andi	r2,r4,3
   266fc:	10000926 	beq	r2,zero,26724 <strlen+0x2c>
   26700:	2005883a 	mov	r2,r4
   26704:	00000306 	br	26714 <strlen+0x1c>
   26708:	10800044 	addi	r2,r2,1
   2670c:	10c000cc 	andi	r3,r2,3
   26710:	18000526 	beq	r3,zero,26728 <strlen+0x30>
   26714:	10c00007 	ldb	r3,0(r2)
   26718:	183ffb1e 	bne	r3,zero,26708 <strlen+0x10>
   2671c:	1105c83a 	sub	r2,r2,r4
   26720:	f800283a 	ret
   26724:	2005883a 	mov	r2,r4
   26728:	11400017 	ldw	r5,0(r2)
   2672c:	01ffbff4 	movhi	r7,65279
   26730:	39ffbfc4 	addi	r7,r7,-257
   26734:	29c7883a 	add	r3,r5,r7
   26738:	01a02074 	movhi	r6,32897
   2673c:	014a303a 	nor	r5,zero,r5
   26740:	1946703a 	and	r3,r3,r5
   26744:	31a02004 	addi	r6,r6,-32640
   26748:	1986703a 	and	r3,r3,r6
   2674c:	1800071e 	bne	r3,zero,2676c <strlen+0x74>
   26750:	11400117 	ldw	r5,4(r2)
   26754:	10800104 	addi	r2,r2,4
   26758:	29c7883a 	add	r3,r5,r7
   2675c:	014a303a 	nor	r5,zero,r5
   26760:	1946703a 	and	r3,r3,r5
   26764:	1986703a 	and	r3,r3,r6
   26768:	183ff926 	beq	r3,zero,26750 <strlen+0x58>
   2676c:	10c00007 	ldb	r3,0(r2)
   26770:	183fea26 	beq	r3,zero,2671c <strlen+0x24>
   26774:	10c00047 	ldb	r3,1(r2)
   26778:	10800044 	addi	r2,r2,1
   2677c:	183fe726 	beq	r3,zero,2671c <strlen+0x24>
   26780:	10c00047 	ldb	r3,1(r2)
   26784:	10800044 	addi	r2,r2,1
   26788:	183ffa1e 	bne	r3,zero,26774 <strlen+0x7c>
   2678c:	003fe306 	br	2671c <strlen+0x24>

00026790 <strncmp>:
   26790:	30002926 	beq	r6,zero,26838 <strncmp+0xa8>
   26794:	2144b03a 	or	r2,r4,r5
   26798:	108000cc 	andi	r2,r2,3
   2679c:	1000151e 	bne	r2,zero,267f4 <strncmp+0x64>
   267a0:	30800128 	cmpgeui	r2,r6,4
   267a4:	10001326 	beq	r2,zero,267f4 <strncmp+0x64>
   267a8:	02bfbff4 	movhi	r10,65279
   267ac:	02602074 	movhi	r9,32897
   267b0:	52bfbfc4 	addi	r10,r10,-257
   267b4:	4a602004 	addi	r9,r9,-32640
   267b8:	00000706 	br	267d8 <strncmp+0x48>
   267bc:	31bfff04 	addi	r6,r6,-4
   267c0:	30c00130 	cmpltui	r3,r6,4
   267c4:	30001c26 	beq	r6,zero,26838 <strncmp+0xa8>
   267c8:	10001b1e 	bne	r2,zero,26838 <strncmp+0xa8>
   267cc:	21000104 	addi	r4,r4,4
   267d0:	29400104 	addi	r5,r5,4
   267d4:	1800071e 	bne	r3,zero,267f4 <strncmp+0x64>
   267d8:	20c00017 	ldw	r3,0(r4)
   267dc:	29c00017 	ldw	r7,0(r5)
   267e0:	1a85883a 	add	r2,r3,r10
   267e4:	00d0303a 	nor	r8,zero,r3
   267e8:	1204703a 	and	r2,r2,r8
   267ec:	1244703a 	and	r2,r2,r9
   267f0:	19fff226 	beq	r3,r7,267bc <strncmp+0x2c>
   267f4:	21c00007 	ldb	r7,0(r4)
   267f8:	28800007 	ldb	r2,0(r5)
   267fc:	3880101e 	bne	r7,r2,26840 <strncmp+0xb0>
   26800:	30800060 	cmpeqi	r2,r6,1
   26804:	10000c1e 	bne	r2,zero,26838 <strncmp+0xa8>
   26808:	2807883a 	mov	r3,r5
   2680c:	00000406 	br	26820 <strncmp+0x90>
   26810:	21c00007 	ldb	r7,0(r4)
   26814:	1a000007 	ldb	r8,0(r3)
   26818:	3a000a1e 	bne	r7,r8,26844 <strncmp+0xb4>
   2681c:	10000626 	beq	r2,zero,26838 <strncmp+0xa8>
   26820:	18c00044 	addi	r3,r3,1
   26824:	00c4303a 	nor	r2,zero,r3
   26828:	1185883a 	add	r2,r2,r6
   2682c:	21000044 	addi	r4,r4,1
   26830:	2885883a 	add	r2,r5,r2
   26834:	383ff61e 	bne	r7,zero,26810 <strncmp+0x80>
   26838:	0005883a 	mov	r2,zero
   2683c:	f800283a 	ret
   26840:	2807883a 	mov	r3,r5
   26844:	20800003 	ldbu	r2,0(r4)
   26848:	18c00003 	ldbu	r3,0(r3)
   2684c:	10c5c83a 	sub	r2,r2,r3
   26850:	f800283a 	ret

00026854 <_wctomb_r>:
   26854:	008000f4 	movhi	r2,3
   26858:	1083f517 	ldw	r2,4052(r2)
   2685c:	1000683a 	jmp	r2

00026860 <__ascii_wctomb>:
   26860:	28000926 	beq	r5,zero,26888 <__ascii_wctomb+0x28>
   26864:	30804030 	cmpltui	r2,r6,256
   26868:	10000326 	beq	r2,zero,26878 <__ascii_wctomb+0x18>
   2686c:	29800005 	stb	r6,0(r5)
   26870:	00800044 	movi	r2,1
   26874:	f800283a 	ret
   26878:	00802284 	movi	r2,138
   2687c:	20800015 	stw	r2,0(r4)
   26880:	00bfffc4 	movi	r2,-1
   26884:	f800283a 	ret
   26888:	0005883a 	mov	r2,zero
   2688c:	f800283a 	ret

00026890 <__assert_func>:
   26890:	008000f4 	movhi	r2,3
   26894:	1208aa17 	ldw	r8,8872(r2)
   26898:	defffc04 	addi	sp,sp,-16
   2689c:	3807883a 	mov	r3,r7
   268a0:	3005883a 	mov	r2,r6
   268a4:	dfc00315 	stw	ra,12(sp)
   268a8:	42400317 	ldw	r9,12(r8)
   268ac:	200f883a 	mov	r7,r4
   268b0:	2811883a 	mov	r8,r5
   268b4:	180d883a 	mov	r6,r3
   268b8:	10000a26 	beq	r2,zero,268e4 <__assert_func+0x54>
   268bc:	00c000f4 	movhi	r3,3
   268c0:	18c09304 	addi	r3,r3,588
   268c4:	014000f4 	movhi	r5,3
   268c8:	29409704 	addi	r5,r5,604
   268cc:	4809883a 	mov	r4,r9
   268d0:	d8c00115 	stw	r3,4(sp)
   268d4:	da000015 	stw	r8,0(sp)
   268d8:	d8800215 	stw	r2,8(sp)
   268dc:	0026af40 	call	26af4 <fiprintf>
   268e0:	0026b300 	call	26b30 <abort>
   268e4:	00c000f4 	movhi	r3,3
   268e8:	18c09604 	addi	r3,r3,600
   268ec:	1805883a 	mov	r2,r3
   268f0:	003ff406 	br	268c4 <__assert_func+0x34>

000268f4 <__assert>:
   268f4:	deffff04 	addi	sp,sp,-4
   268f8:	300f883a 	mov	r7,r6
   268fc:	000d883a 	mov	r6,zero
   26900:	dfc00015 	stw	ra,0(sp)
   26904:	00268900 	call	26890 <__assert_func>

00026908 <_calloc_r>:
   26908:	defffe04 	addi	sp,sp,-8
   2690c:	dc000015 	stw	r16,0(sp)
   26910:	2021883a 	mov	r16,r4
   26914:	2809883a 	mov	r4,r5
   26918:	300b883a 	mov	r5,r6
   2691c:	dfc00115 	stw	ra,4(sp)
   26920:	002a4b80 	call	2a4b8 <__mulsi3>
   26924:	8009883a 	mov	r4,r16
   26928:	100b883a 	mov	r5,r2
   2692c:	00213640 	call	21364 <_malloc_r>
   26930:	1009883a 	mov	r4,r2
   26934:	10000c26 	beq	r2,zero,26968 <_calloc_r+0x60>
   26938:	11bfff17 	ldw	r6,-4(r2)
   2693c:	00bfff04 	movi	r2,-4
   26940:	308c703a 	and	r6,r6,r2
   26944:	31bfff04 	addi	r6,r6,-4
   26948:	30800968 	cmpgeui	r2,r6,37
   2694c:	1000151e 	bne	r2,zero,269a4 <_calloc_r+0x9c>
   26950:	30800530 	cmpltui	r2,r6,20
   26954:	10000926 	beq	r2,zero,2697c <_calloc_r+0x74>
   26958:	2005883a 	mov	r2,r4
   2695c:	10000015 	stw	zero,0(r2)
   26960:	10000115 	stw	zero,4(r2)
   26964:	10000215 	stw	zero,8(r2)
   26968:	2005883a 	mov	r2,r4
   2696c:	dfc00117 	ldw	ra,4(sp)
   26970:	dc000017 	ldw	r16,0(sp)
   26974:	dec00204 	addi	sp,sp,8
   26978:	f800283a 	ret
   2697c:	20000015 	stw	zero,0(r4)
   26980:	20000115 	stw	zero,4(r4)
   26984:	30800728 	cmpgeui	r2,r6,28
   26988:	10000a26 	beq	r2,zero,269b4 <_calloc_r+0xac>
   2698c:	20000215 	stw	zero,8(r4)
   26990:	20000315 	stw	zero,12(r4)
   26994:	31800920 	cmpeqi	r6,r6,36
   26998:	3000081e 	bne	r6,zero,269bc <_calloc_r+0xb4>
   2699c:	20800404 	addi	r2,r4,16
   269a0:	003fee06 	br	2695c <_calloc_r+0x54>
   269a4:	000b883a 	mov	r5,zero
   269a8:	00253b40 	call	253b4 <memset>
   269ac:	1009883a 	mov	r4,r2
   269b0:	003fed06 	br	26968 <_calloc_r+0x60>
   269b4:	20800204 	addi	r2,r4,8
   269b8:	003fe806 	br	2695c <_calloc_r+0x54>
   269bc:	20000415 	stw	zero,16(r4)
   269c0:	20800604 	addi	r2,r4,24
   269c4:	20000515 	stw	zero,20(r4)
   269c8:	003fe406 	br	2695c <_calloc_r+0x54>

000269cc <_fclose_r>:
   269cc:	defffc04 	addi	sp,sp,-16
   269d0:	dfc00315 	stw	ra,12(sp)
   269d4:	dc800215 	stw	r18,8(sp)
   269d8:	dc400115 	stw	r17,4(sp)
   269dc:	dc000015 	stw	r16,0(sp)
   269e0:	28000726 	beq	r5,zero,26a00 <_fclose_r+0x34>
   269e4:	2821883a 	mov	r16,r5
   269e8:	2023883a 	mov	r17,r4
   269ec:	20000226 	beq	r4,zero,269f8 <_fclose_r+0x2c>
   269f0:	20800e17 	ldw	r2,56(r4)
   269f4:	10002726 	beq	r2,zero,26a94 <_fclose_r+0xc8>
   269f8:	8080030f 	ldh	r2,12(r16)
   269fc:	1000081e 	bne	r2,zero,26a20 <_fclose_r+0x54>
   26a00:	0025883a 	mov	r18,zero
   26a04:	9005883a 	mov	r2,r18
   26a08:	dfc00317 	ldw	ra,12(sp)
   26a0c:	dc800217 	ldw	r18,8(sp)
   26a10:	dc400117 	ldw	r17,4(sp)
   26a14:	dc000017 	ldw	r16,0(sp)
   26a18:	dec00404 	addi	sp,sp,16
   26a1c:	f800283a 	ret
   26a20:	800b883a 	mov	r5,r16
   26a24:	8809883a 	mov	r4,r17
   26a28:	002391c0 	call	2391c <__sflush_r>
   26a2c:	80c00b17 	ldw	r3,44(r16)
   26a30:	1025883a 	mov	r18,r2
   26a34:	18000426 	beq	r3,zero,26a48 <_fclose_r+0x7c>
   26a38:	81400717 	ldw	r5,28(r16)
   26a3c:	8809883a 	mov	r4,r17
   26a40:	183ee83a 	callr	r3
   26a44:	10001716 	blt	r2,zero,26aa4 <_fclose_r+0xd8>
   26a48:	8080030b 	ldhu	r2,12(r16)
   26a4c:	1080200c 	andi	r2,r2,128
   26a50:	1000181e 	bne	r2,zero,26ab4 <_fclose_r+0xe8>
   26a54:	81400c17 	ldw	r5,48(r16)
   26a58:	28000526 	beq	r5,zero,26a70 <_fclose_r+0xa4>
   26a5c:	80801004 	addi	r2,r16,64
   26a60:	28800226 	beq	r5,r2,26a6c <_fclose_r+0xa0>
   26a64:	8809883a 	mov	r4,r17
   26a68:	00240f40 	call	240f4 <_free_r>
   26a6c:	80000c15 	stw	zero,48(r16)
   26a70:	81401117 	ldw	r5,68(r16)
   26a74:	28000326 	beq	r5,zero,26a84 <_fclose_r+0xb8>
   26a78:	8809883a 	mov	r4,r17
   26a7c:	00240f40 	call	240f4 <_free_r>
   26a80:	80001115 	stw	zero,68(r16)
   26a84:	0023ee80 	call	23ee8 <__sfp_lock_acquire>
   26a88:	8000030d 	sth	zero,12(r16)
   26a8c:	0023eec0 	call	23eec <__sfp_lock_release>
   26a90:	003fdc06 	br	26a04 <_fclose_r+0x38>
   26a94:	0023ed80 	call	23ed8 <__sinit>
   26a98:	8080030f 	ldh	r2,12(r16)
   26a9c:	103fd826 	beq	r2,zero,26a00 <_fclose_r+0x34>
   26aa0:	003fdf06 	br	26a20 <_fclose_r+0x54>
   26aa4:	8080030b 	ldhu	r2,12(r16)
   26aa8:	04bfffc4 	movi	r18,-1
   26aac:	1080200c 	andi	r2,r2,128
   26ab0:	103fe826 	beq	r2,zero,26a54 <_fclose_r+0x88>
   26ab4:	81400417 	ldw	r5,16(r16)
   26ab8:	8809883a 	mov	r4,r17
   26abc:	00240f40 	call	240f4 <_free_r>
   26ac0:	003fe406 	br	26a54 <_fclose_r+0x88>

00026ac4 <fclose>:
   26ac4:	008000f4 	movhi	r2,3
   26ac8:	200b883a 	mov	r5,r4
   26acc:	1108aa17 	ldw	r4,8872(r2)
   26ad0:	00269cc1 	jmpi	269cc <_fclose_r>

00026ad4 <_fiprintf_r>:
   26ad4:	defffe04 	addi	sp,sp,-8
   26ad8:	dfc00015 	stw	ra,0(sp)
   26adc:	d9c00115 	stw	r7,4(sp)
   26ae0:	d9c00104 	addi	r7,sp,4
   26ae4:	0026b2c0 	call	26b2c <_vfiprintf_r>
   26ae8:	dfc00017 	ldw	ra,0(sp)
   26aec:	dec00204 	addi	sp,sp,8
   26af0:	f800283a 	ret

00026af4 <fiprintf>:
   26af4:	defffd04 	addi	sp,sp,-12
   26af8:	2005883a 	mov	r2,r4
   26afc:	dfc00015 	stw	ra,0(sp)
   26b00:	d9800115 	stw	r6,4(sp)
   26b04:	d9c00215 	stw	r7,8(sp)
   26b08:	00c000f4 	movhi	r3,3
   26b0c:	1908aa17 	ldw	r4,8872(r3)
   26b10:	280d883a 	mov	r6,r5
   26b14:	d9c00104 	addi	r7,sp,4
   26b18:	100b883a 	mov	r5,r2
   26b1c:	0026b2c0 	call	26b2c <_vfiprintf_r>
   26b20:	dfc00017 	ldw	ra,0(sp)
   26b24:	dec00304 	addi	sp,sp,12
   26b28:	f800283a 	ret

00026b2c <_vfiprintf_r>:
   26b2c:	0026f6c1 	jmpi	26f6c <___vfiprintf_internal_r>

00026b30 <abort>:
   26b30:	deffff04 	addi	sp,sp,-4
   26b34:	01000184 	movi	r4,6
   26b38:	dfc00015 	stw	ra,0(sp)
   26b3c:	0026da80 	call	26da8 <raise>
   26b40:	01000044 	movi	r4,1
   26b44:	002d0f40 	call	2d0f4 <_exit>

00026b48 <_init_signal_r.part.0>:
   26b48:	defffe04 	addi	sp,sp,-8
   26b4c:	01402004 	movi	r5,128
   26b50:	dc000015 	stw	r16,0(sp)
   26b54:	dfc00115 	stw	ra,4(sp)
   26b58:	2021883a 	mov	r16,r4
   26b5c:	00213640 	call	21364 <_malloc_r>
   26b60:	8080b715 	stw	r2,732(r16)
   26b64:	10000926 	beq	r2,zero,26b8c <_init_signal_r.part.0+0x44>
   26b68:	10c02004 	addi	r3,r2,128
   26b6c:	10000015 	stw	zero,0(r2)
   26b70:	10800104 	addi	r2,r2,4
   26b74:	10fffd1e 	bne	r2,r3,26b6c <_init_signal_r.part.0+0x24>
   26b78:	0005883a 	mov	r2,zero
   26b7c:	dfc00117 	ldw	ra,4(sp)
   26b80:	dc000017 	ldw	r16,0(sp)
   26b84:	dec00204 	addi	sp,sp,8
   26b88:	f800283a 	ret
   26b8c:	00bfffc4 	movi	r2,-1
   26b90:	003ffa06 	br	26b7c <_init_signal_r.part.0+0x34>

00026b94 <_init_signal_r>:
   26b94:	2080b717 	ldw	r2,732(r4)
   26b98:	10000226 	beq	r2,zero,26ba4 <_init_signal_r+0x10>
   26b9c:	0005883a 	mov	r2,zero
   26ba0:	f800283a 	ret
   26ba4:	0026b481 	jmpi	26b48 <_init_signal_r.part.0>

00026ba8 <_signal_r>:
   26ba8:	defffc04 	addi	sp,sp,-16
   26bac:	dc000215 	stw	r16,8(sp)
   26bb0:	dfc00315 	stw	ra,12(sp)
   26bb4:	28800830 	cmpltui	r2,r5,32
   26bb8:	2021883a 	mov	r16,r4
   26bbc:	10000a26 	beq	r2,zero,26be8 <_signal_r+0x40>
   26bc0:	2080b717 	ldw	r2,732(r4)
   26bc4:	10000f26 	beq	r2,zero,26c04 <_signal_r+0x5c>
   26bc8:	280a90ba 	slli	r5,r5,2
   26bcc:	114b883a 	add	r5,r2,r5
   26bd0:	28800017 	ldw	r2,0(r5)
   26bd4:	29800015 	stw	r6,0(r5)
   26bd8:	dfc00317 	ldw	ra,12(sp)
   26bdc:	dc000217 	ldw	r16,8(sp)
   26be0:	dec00404 	addi	sp,sp,16
   26be4:	f800283a 	ret
   26be8:	00800584 	movi	r2,22
   26bec:	20800015 	stw	r2,0(r4)
   26bf0:	00bfffc4 	movi	r2,-1
   26bf4:	dfc00317 	ldw	ra,12(sp)
   26bf8:	dc000217 	ldw	r16,8(sp)
   26bfc:	dec00404 	addi	sp,sp,16
   26c00:	f800283a 	ret
   26c04:	d9800115 	stw	r6,4(sp)
   26c08:	d9400015 	stw	r5,0(sp)
   26c0c:	0026b480 	call	26b48 <_init_signal_r.part.0>
   26c10:	1000041e 	bne	r2,zero,26c24 <_signal_r+0x7c>
   26c14:	8080b717 	ldw	r2,732(r16)
   26c18:	d9800117 	ldw	r6,4(sp)
   26c1c:	d9400017 	ldw	r5,0(sp)
   26c20:	003fe906 	br	26bc8 <_signal_r+0x20>
   26c24:	00bfffc4 	movi	r2,-1
   26c28:	003feb06 	br	26bd8 <_signal_r+0x30>

00026c2c <_raise_r>:
   26c2c:	28800830 	cmpltui	r2,r5,32
   26c30:	10002b26 	beq	r2,zero,26ce0 <_raise_r+0xb4>
   26c34:	2080b717 	ldw	r2,732(r4)
   26c38:	defffd04 	addi	sp,sp,-12
   26c3c:	dc000115 	stw	r16,4(sp)
   26c40:	dfc00215 	stw	ra,8(sp)
   26c44:	2821883a 	mov	r16,r5
   26c48:	10001026 	beq	r2,zero,26c8c <_raise_r+0x60>
   26c4c:	280690ba 	slli	r3,r5,2
   26c50:	10c5883a 	add	r2,r2,r3
   26c54:	10c00017 	ldw	r3,0(r2)
   26c58:	18000c26 	beq	r3,zero,26c8c <_raise_r+0x60>
   26c5c:	19400060 	cmpeqi	r5,r3,1
   26c60:	28001a1e 	bne	r5,zero,26ccc <_raise_r+0xa0>
   26c64:	197fffd8 	cmpnei	r5,r3,-1
   26c68:	28001126 	beq	r5,zero,26cb0 <_raise_r+0x84>
   26c6c:	10000015 	stw	zero,0(r2)
   26c70:	8009883a 	mov	r4,r16
   26c74:	183ee83a 	callr	r3
   26c78:	0005883a 	mov	r2,zero
   26c7c:	dfc00217 	ldw	ra,8(sp)
   26c80:	dc000117 	ldw	r16,4(sp)
   26c84:	dec00304 	addi	sp,sp,12
   26c88:	f800283a 	ret
   26c8c:	d9000015 	stw	r4,0(sp)
   26c90:	0026e5c0 	call	26e5c <_getpid_r>
   26c94:	d9000017 	ldw	r4,0(sp)
   26c98:	800d883a 	mov	r6,r16
   26c9c:	100b883a 	mov	r5,r2
   26ca0:	dfc00217 	ldw	ra,8(sp)
   26ca4:	dc000117 	ldw	r16,4(sp)
   26ca8:	dec00304 	addi	sp,sp,12
   26cac:	0026dfc1 	jmpi	26dfc <_kill_r>
   26cb0:	00800584 	movi	r2,22
   26cb4:	20800015 	stw	r2,0(r4)
   26cb8:	00800044 	movi	r2,1
   26cbc:	dfc00217 	ldw	ra,8(sp)
   26cc0:	dc000117 	ldw	r16,4(sp)
   26cc4:	dec00304 	addi	sp,sp,12
   26cc8:	f800283a 	ret
   26ccc:	0005883a 	mov	r2,zero
   26cd0:	dfc00217 	ldw	ra,8(sp)
   26cd4:	dc000117 	ldw	r16,4(sp)
   26cd8:	dec00304 	addi	sp,sp,12
   26cdc:	f800283a 	ret
   26ce0:	00800584 	movi	r2,22
   26ce4:	20800015 	stw	r2,0(r4)
   26ce8:	00bfffc4 	movi	r2,-1
   26cec:	f800283a 	ret

00026cf0 <__sigtramp_r>:
   26cf0:	28800830 	cmpltui	r2,r5,32
   26cf4:	10002a26 	beq	r2,zero,26da0 <__sigtramp_r+0xb0>
   26cf8:	2080b717 	ldw	r2,732(r4)
   26cfc:	defffd04 	addi	sp,sp,-12
   26d00:	dc400115 	stw	r17,4(sp)
   26d04:	dfc00215 	stw	ra,8(sp)
   26d08:	2023883a 	mov	r17,r4
   26d0c:	10001526 	beq	r2,zero,26d64 <__sigtramp_r+0x74>
   26d10:	280690ba 	slli	r3,r5,2
   26d14:	10c5883a 	add	r2,r2,r3
   26d18:	10c00017 	ldw	r3,0(r2)
   26d1c:	18000c26 	beq	r3,zero,26d50 <__sigtramp_r+0x60>
   26d20:	193fffe0 	cmpeqi	r4,r3,-1
   26d24:	20001a1e 	bne	r4,zero,26d90 <__sigtramp_r+0xa0>
   26d28:	19000060 	cmpeqi	r4,r3,1
   26d2c:	2000131e 	bne	r4,zero,26d7c <__sigtramp_r+0x8c>
   26d30:	10000015 	stw	zero,0(r2)
   26d34:	2809883a 	mov	r4,r5
   26d38:	183ee83a 	callr	r3
   26d3c:	0005883a 	mov	r2,zero
   26d40:	dfc00217 	ldw	ra,8(sp)
   26d44:	dc400117 	ldw	r17,4(sp)
   26d48:	dec00304 	addi	sp,sp,12
   26d4c:	f800283a 	ret
   26d50:	00800044 	movi	r2,1
   26d54:	dfc00217 	ldw	ra,8(sp)
   26d58:	dc400117 	ldw	r17,4(sp)
   26d5c:	dec00304 	addi	sp,sp,12
   26d60:	f800283a 	ret
   26d64:	d9400015 	stw	r5,0(sp)
   26d68:	0026b480 	call	26b48 <_init_signal_r.part.0>
   26d6c:	10000a1e 	bne	r2,zero,26d98 <__sigtramp_r+0xa8>
   26d70:	8880b717 	ldw	r2,732(r17)
   26d74:	d9400017 	ldw	r5,0(sp)
   26d78:	003fe506 	br	26d10 <__sigtramp_r+0x20>
   26d7c:	008000c4 	movi	r2,3
   26d80:	dfc00217 	ldw	ra,8(sp)
   26d84:	dc400117 	ldw	r17,4(sp)
   26d88:	dec00304 	addi	sp,sp,12
   26d8c:	f800283a 	ret
   26d90:	00800084 	movi	r2,2
   26d94:	003fea06 	br	26d40 <__sigtramp_r+0x50>
   26d98:	00bfffc4 	movi	r2,-1
   26d9c:	003fe806 	br	26d40 <__sigtramp_r+0x50>
   26da0:	00bfffc4 	movi	r2,-1
   26da4:	f800283a 	ret

00026da8 <raise>:
   26da8:	008000f4 	movhi	r2,3
   26dac:	200b883a 	mov	r5,r4
   26db0:	1108aa17 	ldw	r4,8872(r2)
   26db4:	0026c2c1 	jmpi	26c2c <_raise_r>

00026db8 <signal>:
   26db8:	00c000f4 	movhi	r3,3
   26dbc:	2005883a 	mov	r2,r4
   26dc0:	1908aa17 	ldw	r4,8872(r3)
   26dc4:	280d883a 	mov	r6,r5
   26dc8:	100b883a 	mov	r5,r2
   26dcc:	0026ba81 	jmpi	26ba8 <_signal_r>

00026dd0 <_init_signal>:
   26dd0:	008000f4 	movhi	r2,3
   26dd4:	1108aa17 	ldw	r4,8872(r2)
   26dd8:	2080b717 	ldw	r2,732(r4)
   26ddc:	10000226 	beq	r2,zero,26de8 <_init_signal+0x18>
   26de0:	0005883a 	mov	r2,zero
   26de4:	f800283a 	ret
   26de8:	0026b481 	jmpi	26b48 <_init_signal_r.part.0>

00026dec <__sigtramp>:
   26dec:	008000f4 	movhi	r2,3
   26df0:	200b883a 	mov	r5,r4
   26df4:	1108aa17 	ldw	r4,8872(r2)
   26df8:	0026cf01 	jmpi	26cf0 <__sigtramp_r>

00026dfc <_kill_r>:
   26dfc:	2807883a 	mov	r3,r5
   26e00:	defffe04 	addi	sp,sp,-8
   26e04:	dc000015 	stw	r16,0(sp)
   26e08:	008000f4 	movhi	r2,3
   26e0c:	300b883a 	mov	r5,r6
   26e10:	2021883a 	mov	r16,r4
   26e14:	1809883a 	mov	r4,r3
   26e18:	dfc00115 	stw	ra,4(sp)
   26e1c:	100fca15 	stw	zero,16168(r2)
   26e20:	002d4ec0 	call	2d4ec <kill>
   26e24:	10ffffd8 	cmpnei	r3,r2,-1
   26e28:	18000426 	beq	r3,zero,26e3c <_kill_r+0x40>
   26e2c:	dfc00117 	ldw	ra,4(sp)
   26e30:	dc000017 	ldw	r16,0(sp)
   26e34:	dec00204 	addi	sp,sp,8
   26e38:	f800283a 	ret
   26e3c:	00c000f4 	movhi	r3,3
   26e40:	18cfca17 	ldw	r3,16168(r3)
   26e44:	183ff926 	beq	r3,zero,26e2c <_kill_r+0x30>
   26e48:	80c00015 	stw	r3,0(r16)
   26e4c:	dfc00117 	ldw	ra,4(sp)
   26e50:	dc000017 	ldw	r16,0(sp)
   26e54:	dec00204 	addi	sp,sp,8
   26e58:	f800283a 	ret

00026e5c <_getpid_r>:
   26e5c:	002d2241 	jmpi	2d224 <getpid>

00026e60 <__sprint_r.part.0>:
   26e60:	28801917 	ldw	r2,100(r5)
   26e64:	defff604 	addi	sp,sp,-40
   26e68:	dcc00315 	stw	r19,12(sp)
   26e6c:	dfc00915 	stw	ra,36(sp)
   26e70:	df000815 	stw	fp,32(sp)
   26e74:	ddc00715 	stw	r23,28(sp)
   26e78:	dd800615 	stw	r22,24(sp)
   26e7c:	dd400515 	stw	r21,20(sp)
   26e80:	dd000415 	stw	r20,16(sp)
   26e84:	dc800215 	stw	r18,8(sp)
   26e88:	dc400115 	stw	r17,4(sp)
   26e8c:	dc000015 	stw	r16,0(sp)
   26e90:	1088000c 	andi	r2,r2,8192
   26e94:	3027883a 	mov	r19,r6
   26e98:	10002c26 	beq	r2,zero,26f4c <__sprint_r.part.0+0xec>
   26e9c:	30800217 	ldw	r2,8(r6)
   26ea0:	35000017 	ldw	r20,0(r6)
   26ea4:	2821883a 	mov	r16,r5
   26ea8:	2023883a 	mov	r17,r4
   26eac:	05bfff04 	movi	r22,-4
   26eb0:	10002426 	beq	r2,zero,26f44 <__sprint_r.part.0+0xe4>
   26eb4:	a5400117 	ldw	r21,4(r20)
   26eb8:	a5c00017 	ldw	r23,0(r20)
   26ebc:	a824d0ba 	srli	r18,r21,2
   26ec0:	90001b26 	beq	r18,zero,26f30 <__sprint_r.part.0+0xd0>
   26ec4:	0039883a 	mov	fp,zero
   26ec8:	00000206 	br	26ed4 <__sprint_r.part.0+0x74>
   26ecc:	bdc00104 	addi	r23,r23,4
   26ed0:	97001626 	beq	r18,fp,26f2c <__sprint_r.part.0+0xcc>
   26ed4:	b9400017 	ldw	r5,0(r23)
   26ed8:	800d883a 	mov	r6,r16
   26edc:	8809883a 	mov	r4,r17
   26ee0:	002861c0 	call	2861c <_fputwc_r>
   26ee4:	10bfffe0 	cmpeqi	r2,r2,-1
   26ee8:	e7000044 	addi	fp,fp,1
   26eec:	103ff726 	beq	r2,zero,26ecc <__sprint_r.part.0+0x6c>
   26ef0:	00bfffc4 	movi	r2,-1
   26ef4:	98000215 	stw	zero,8(r19)
   26ef8:	98000115 	stw	zero,4(r19)
   26efc:	dfc00917 	ldw	ra,36(sp)
   26f00:	df000817 	ldw	fp,32(sp)
   26f04:	ddc00717 	ldw	r23,28(sp)
   26f08:	dd800617 	ldw	r22,24(sp)
   26f0c:	dd400517 	ldw	r21,20(sp)
   26f10:	dd000417 	ldw	r20,16(sp)
   26f14:	dcc00317 	ldw	r19,12(sp)
   26f18:	dc800217 	ldw	r18,8(sp)
   26f1c:	dc400117 	ldw	r17,4(sp)
   26f20:	dc000017 	ldw	r16,0(sp)
   26f24:	dec00a04 	addi	sp,sp,40
   26f28:	f800283a 	ret
   26f2c:	98800217 	ldw	r2,8(r19)
   26f30:	adaa703a 	and	r21,r21,r22
   26f34:	1545c83a 	sub	r2,r2,r21
   26f38:	98800215 	stw	r2,8(r19)
   26f3c:	a5000204 	addi	r20,r20,8
   26f40:	103fdc1e 	bne	r2,zero,26eb4 <__sprint_r.part.0+0x54>
   26f44:	0005883a 	mov	r2,zero
   26f48:	003fea06 	br	26ef4 <__sprint_r.part.0+0x94>
   26f4c:	00286b80 	call	286b8 <__sfvwrite_r>
   26f50:	003fe806 	br	26ef4 <__sprint_r.part.0+0x94>

00026f54 <__sprint_r>:
   26f54:	30c00217 	ldw	r3,8(r6)
   26f58:	18000126 	beq	r3,zero,26f60 <__sprint_r+0xc>
   26f5c:	0026e601 	jmpi	26e60 <__sprint_r.part.0>
   26f60:	30000115 	stw	zero,4(r6)
   26f64:	0005883a 	mov	r2,zero
   26f68:	f800283a 	ret

00026f6c <___vfiprintf_internal_r>:
   26f6c:	deffcf04 	addi	sp,sp,-196
   26f70:	dd802d15 	stw	r22,180(sp)
   26f74:	dd402c15 	stw	r21,176(sp)
   26f78:	dd002b15 	stw	r20,172(sp)
   26f7c:	dfc03015 	stw	ra,192(sp)
   26f80:	df002f15 	stw	fp,188(sp)
   26f84:	ddc02e15 	stw	r23,184(sp)
   26f88:	dcc02a15 	stw	r19,168(sp)
   26f8c:	dc802915 	stw	r18,164(sp)
   26f90:	dc402815 	stw	r17,160(sp)
   26f94:	dc002715 	stw	r16,156(sp)
   26f98:	d9c00415 	stw	r7,16(sp)
   26f9c:	202d883a 	mov	r22,r4
   26fa0:	282b883a 	mov	r21,r5
   26fa4:	3029883a 	mov	r20,r6
   26fa8:	20000226 	beq	r4,zero,26fb4 <___vfiprintf_internal_r+0x48>
   26fac:	20800e17 	ldw	r2,56(r4)
   26fb0:	1001b426 	beq	r2,zero,27684 <___vfiprintf_internal_r+0x718>
   26fb4:	a880030b 	ldhu	r2,12(r21)
   26fb8:	10c8000c 	andi	r3,r2,8192
   26fbc:	1800061e 	bne	r3,zero,26fd8 <___vfiprintf_internal_r+0x6c>
   26fc0:	a8c01917 	ldw	r3,100(r21)
   26fc4:	0137ffc4 	movi	r4,-8193
   26fc8:	10880014 	ori	r2,r2,8192
   26fcc:	1906703a 	and	r3,r3,r4
   26fd0:	a880030d 	sth	r2,12(r21)
   26fd4:	a8c01915 	stw	r3,100(r21)
   26fd8:	10c0020c 	andi	r3,r2,8
   26fdc:	18010826 	beq	r3,zero,27400 <___vfiprintf_internal_r+0x494>
   26fe0:	a8c00417 	ldw	r3,16(r21)
   26fe4:	18010626 	beq	r3,zero,27400 <___vfiprintf_internal_r+0x494>
   26fe8:	1080068c 	andi	r2,r2,26
   26fec:	10800298 	cmpnei	r2,r2,10
   26ff0:	10010b26 	beq	r2,zero,27420 <___vfiprintf_internal_r+0x4b4>
   26ff4:	dc801704 	addi	r18,sp,92
   26ff8:	dc800a15 	stw	r18,40(sp)
   26ffc:	d8000c15 	stw	zero,48(sp)
   27000:	d8000b15 	stw	zero,44(sp)
   27004:	9021883a 	mov	r16,r18
   27008:	d8000515 	stw	zero,20(sp)
   2700c:	d8000115 	stw	zero,4(sp)
   27010:	a0c00007 	ldb	r3,0(r20)
   27014:	1800e826 	beq	r3,zero,273b8 <___vfiprintf_internal_r+0x44c>
   27018:	a023883a 	mov	r17,r20
   2701c:	00000306 	br	2702c <___vfiprintf_internal_r+0xc0>
   27020:	88c00047 	ldb	r3,1(r17)
   27024:	8c400044 	addi	r17,r17,1
   27028:	18012a26 	beq	r3,zero,274d4 <___vfiprintf_internal_r+0x568>
   2702c:	18c00958 	cmpnei	r3,r3,37
   27030:	183ffb1e 	bne	r3,zero,27020 <___vfiprintf_internal_r+0xb4>
   27034:	8d27c83a 	sub	r19,r17,r20
   27038:	8d01281e 	bne	r17,r20,274dc <___vfiprintf_internal_r+0x570>
   2703c:	88800003 	ldbu	r2,0(r17)
   27040:	10803fcc 	andi	r2,r2,255
   27044:	1080201c 	xori	r2,r2,128
   27048:	10bfe004 	addi	r2,r2,-128
   2704c:	1000da26 	beq	r2,zero,273b8 <___vfiprintf_internal_r+0x44c>
   27050:	88800047 	ldb	r2,1(r17)
   27054:	8d000044 	addi	r20,r17,1
   27058:	d8000945 	stb	zero,37(sp)
   2705c:	000b883a 	mov	r5,zero
   27060:	000d883a 	mov	r6,zero
   27064:	023fffc4 	movi	r8,-1
   27068:	0023883a 	mov	r17,zero
   2706c:	001b883a 	mov	r13,zero
   27070:	a5000044 	addi	r20,r20,1
   27074:	10fff804 	addi	r3,r2,-32
   27078:	19001668 	cmpgeui	r4,r3,89
   2707c:	20006c1e 	bne	r4,zero,27230 <___vfiprintf_internal_r+0x2c4>
   27080:	180690ba 	slli	r3,r3,2
   27084:	010000b4 	movhi	r4,2
   27088:	1909883a 	add	r4,r3,r4
   2708c:	20dc2517 	ldw	r3,28820(r4)
   27090:	1800683a 	jmp	r3
   27094:	00027994 	movui	zero,2534
   27098:	00027230 	cmpltui	zero,zero,2504
   2709c:	00027230 	cmpltui	zero,zero,2504
   270a0:	00027988 	cmpgei	zero,zero,2534
   270a4:	00027230 	cmpltui	zero,zero,2504
   270a8:	00027230 	cmpltui	zero,zero,2504
   270ac:	00027230 	cmpltui	zero,zero,2504
   270b0:	00027230 	cmpltui	zero,zero,2504
   270b4:	00027230 	cmpltui	zero,zero,2504
   270b8:	00027230 	cmpltui	zero,zero,2504
   270bc:	00027960 	cmpeqi	zero,zero,2533
   270c0:	00027950 	cmplti	zero,zero,2533
   270c4:	00027230 	cmpltui	zero,zero,2504
   270c8:	00027938 	rdprs	zero,zero,2532
   270cc:	000278ec 	andhi	zero,zero,2531
   270d0:	00027230 	cmpltui	zero,zero,2504
   270d4:	000278e0 	cmpeqi	zero,zero,2531
   270d8:	000271f8 	rdprs	zero,zero,2503
   270dc:	000271f8 	rdprs	zero,zero,2503
   270e0:	000271f8 	rdprs	zero,zero,2503
   270e4:	000271f8 	rdprs	zero,zero,2503
   270e8:	000271f8 	rdprs	zero,zero,2503
   270ec:	000271f8 	rdprs	zero,zero,2503
   270f0:	000271f8 	rdprs	zero,zero,2503
   270f4:	000271f8 	rdprs	zero,zero,2503
   270f8:	000271f8 	rdprs	zero,zero,2503
   270fc:	00027230 	cmpltui	zero,zero,2504
   27100:	00027230 	cmpltui	zero,zero,2504
   27104:	00027230 	cmpltui	zero,zero,2504
   27108:	00027230 	cmpltui	zero,zero,2504
   2710c:	00027230 	cmpltui	zero,zero,2504
   27110:	00027230 	cmpltui	zero,zero,2504
   27114:	00027230 	cmpltui	zero,zero,2504
   27118:	00027230 	cmpltui	zero,zero,2504
   2711c:	00027230 	cmpltui	zero,zero,2504
   27120:	00027230 	cmpltui	zero,zero,2504
   27124:	000277fc 	xorhi	zero,zero,2527
   27128:	00027230 	cmpltui	zero,zero,2504
   2712c:	00027230 	cmpltui	zero,zero,2504
   27130:	00027230 	cmpltui	zero,zero,2504
   27134:	00027230 	cmpltui	zero,zero,2504
   27138:	00027230 	cmpltui	zero,zero,2504
   2713c:	00027230 	cmpltui	zero,zero,2504
   27140:	00027230 	cmpltui	zero,zero,2504
   27144:	00027230 	cmpltui	zero,zero,2504
   27148:	00027230 	cmpltui	zero,zero,2504
   2714c:	00027230 	cmpltui	zero,zero,2504
   27150:	0002746c 	andhi	zero,zero,2513
   27154:	00027230 	cmpltui	zero,zero,2504
   27158:	00027230 	cmpltui	zero,zero,2504
   2715c:	00027230 	cmpltui	zero,zero,2504
   27160:	00027230 	cmpltui	zero,zero,2504
   27164:	00027230 	cmpltui	zero,zero,2504
   27168:	00027444 	movi	zero,2513
   2716c:	00027230 	cmpltui	zero,zero,2504
   27170:	00027230 	cmpltui	zero,zero,2504
   27174:	000277b4 	movhi	zero,2526
   27178:	00027230 	cmpltui	zero,zero,2504
   2717c:	00027230 	cmpltui	zero,zero,2504
   27180:	00027230 	cmpltui	zero,zero,2504
   27184:	00027230 	cmpltui	zero,zero,2504
   27188:	00027230 	cmpltui	zero,zero,2504
   2718c:	00027230 	cmpltui	zero,zero,2504
   27190:	00027230 	cmpltui	zero,zero,2504
   27194:	00027230 	cmpltui	zero,zero,2504
   27198:	00027230 	cmpltui	zero,zero,2504
   2719c:	00027230 	cmpltui	zero,zero,2504
   271a0:	0002778c 	andi	zero,zero,2526
   271a4:	0002768c 	andi	zero,zero,2522
   271a8:	00027230 	cmpltui	zero,zero,2504
   271ac:	00027230 	cmpltui	zero,zero,2504
   271b0:	00027230 	cmpltui	zero,zero,2504
   271b4:	00027730 	cmpltui	zero,zero,2524
   271b8:	0002768c 	andi	zero,zero,2522
   271bc:	00027230 	cmpltui	zero,zero,2504
   271c0:	00027230 	cmpltui	zero,zero,2504
   271c4:	00027778 	rdprs	zero,zero,2525
   271c8:	00027230 	cmpltui	zero,zero,2504
   271cc:	0002773c 	xorhi	zero,zero,2524
   271d0:	00027470 	cmpltui	zero,zero,2513
   271d4:	00027a6c 	andhi	zero,zero,2537
   271d8:	00027a60 	cmpeqi	zero,zero,2537
   271dc:	00027230 	cmpltui	zero,zero,2504
   271e0:	00027a08 	cmpgei	zero,zero,2536
   271e4:	00027230 	cmpltui	zero,zero,2504
   271e8:	00027448 	cmpgei	zero,zero,2513
   271ec:	00027230 	cmpltui	zero,zero,2504
   271f0:	00027230 	cmpltui	zero,zero,2504
   271f4:	000279c0 	call	279c <__alt_mem_onchip_memory-0x1d864>
   271f8:	0023883a 	mov	r17,zero
   271fc:	113ff404 	addi	r4,r2,-48
   27200:	880690ba 	slli	r3,r17,2
   27204:	a0800007 	ldb	r2,0(r20)
   27208:	a5000044 	addi	r20,r20,1
   2720c:	1c63883a 	add	r17,r3,r17
   27210:	8c63883a 	add	r17,r17,r17
   27214:	2463883a 	add	r17,r4,r17
   27218:	113ff404 	addi	r4,r2,-48
   2721c:	20c002b0 	cmpltui	r3,r4,10
   27220:	183ff71e 	bne	r3,zero,27200 <___vfiprintf_internal_r+0x294>
   27224:	10fff804 	addi	r3,r2,-32
   27228:	19001668 	cmpgeui	r4,r3,89
   2722c:	203f9426 	beq	r4,zero,27080 <___vfiprintf_internal_r+0x114>
   27230:	29403fcc 	andi	r5,r5,255
   27234:	2803e31e 	bne	r5,zero,281c4 <___vfiprintf_internal_r+0x1258>
   27238:	10005f26 	beq	r2,zero,273b8 <___vfiprintf_internal_r+0x44c>
   2723c:	d8800d05 	stb	r2,52(sp)
   27240:	d8000945 	stb	zero,37(sp)
   27244:	05c00044 	movi	r23,1
   27248:	07000044 	movi	fp,1
   2724c:	dcc00d04 	addi	r19,sp,52
   27250:	db400015 	stw	r13,0(sp)
   27254:	0011883a 	mov	r8,zero
   27258:	d8800017 	ldw	r2,0(sp)
   2725c:	1380008c 	andi	r14,r2,2
   27260:	70000126 	beq	r14,zero,27268 <___vfiprintf_internal_r+0x2fc>
   27264:	bdc00084 	addi	r23,r23,2
   27268:	d8800017 	ldw	r2,0(sp)
   2726c:	d9000b17 	ldw	r4,44(sp)
   27270:	1340210c 	andi	r13,r2,132
   27274:	21800044 	addi	r6,r4,1
   27278:	d8800c17 	ldw	r2,48(sp)
   2727c:	300b883a 	mov	r5,r6
   27280:	6800021e 	bne	r13,zero,2728c <___vfiprintf_internal_r+0x320>
   27284:	8dc7c83a 	sub	r3,r17,r23
   27288:	00c2d716 	blt	zero,r3,27de8 <___vfiprintf_internal_r+0xe7c>
   2728c:	d8c00947 	ldb	r3,37(sp)
   27290:	81800204 	addi	r6,r16,8
   27294:	18000d26 	beq	r3,zero,272cc <___vfiprintf_internal_r+0x360>
   27298:	d8c00944 	addi	r3,sp,37
   2729c:	10800044 	addi	r2,r2,1
   272a0:	80c00015 	stw	r3,0(r16)
   272a4:	00c00044 	movi	r3,1
   272a8:	80c00115 	stw	r3,4(r16)
   272ac:	d8800c15 	stw	r2,48(sp)
   272b0:	d9400b15 	stw	r5,44(sp)
   272b4:	28c00208 	cmpgei	r3,r5,8
   272b8:	1802ac1e 	bne	r3,zero,27d6c <___vfiprintf_internal_r+0xe00>
   272bc:	2809883a 	mov	r4,r5
   272c0:	3021883a 	mov	r16,r6
   272c4:	29400044 	addi	r5,r5,1
   272c8:	31800204 	addi	r6,r6,8
   272cc:	70001826 	beq	r14,zero,27330 <___vfiprintf_internal_r+0x3c4>
   272d0:	d8c00984 	addi	r3,sp,38
   272d4:	10800084 	addi	r2,r2,2
   272d8:	80c00015 	stw	r3,0(r16)
   272dc:	00c00084 	movi	r3,2
   272e0:	80c00115 	stw	r3,4(r16)
   272e4:	d8800c15 	stw	r2,48(sp)
   272e8:	d9400b15 	stw	r5,44(sp)
   272ec:	28c00208 	cmpgei	r3,r5,8
   272f0:	1802b626 	beq	r3,zero,27dcc <___vfiprintf_internal_r+0xe60>
   272f4:	10031226 	beq	r2,zero,27f40 <___vfiprintf_internal_r+0xfd4>
   272f8:	d9800a04 	addi	r6,sp,40
   272fc:	a80b883a 	mov	r5,r21
   27300:	b009883a 	mov	r4,r22
   27304:	da000315 	stw	r8,12(sp)
   27308:	db400215 	stw	r13,8(sp)
   2730c:	0026e600 	call	26e60 <__sprint_r.part.0>
   27310:	10002b1e 	bne	r2,zero,273c0 <___vfiprintf_internal_r+0x454>
   27314:	d9000b17 	ldw	r4,44(sp)
   27318:	d8800c17 	ldw	r2,48(sp)
   2731c:	da000317 	ldw	r8,12(sp)
   27320:	db400217 	ldw	r13,8(sp)
   27324:	d9801904 	addi	r6,sp,100
   27328:	21400044 	addi	r5,r4,1
   2732c:	9021883a 	mov	r16,r18
   27330:	6b402018 	cmpnei	r13,r13,128
   27334:	68020c26 	beq	r13,zero,27b68 <___vfiprintf_internal_r+0xbfc>
   27338:	4711c83a 	sub	r8,r8,fp
   2733c:	02024b16 	blt	zero,r8,27c6c <___vfiprintf_internal_r+0xd00>
   27340:	e085883a 	add	r2,fp,r2
   27344:	d9400b15 	stw	r5,44(sp)
   27348:	84c00015 	stw	r19,0(r16)
   2734c:	87000115 	stw	fp,4(r16)
   27350:	d8800c15 	stw	r2,48(sp)
   27354:	29400210 	cmplti	r5,r5,8
   27358:	2800081e 	bne	r5,zero,2737c <___vfiprintf_internal_r+0x410>
   2735c:	10008f26 	beq	r2,zero,2759c <___vfiprintf_internal_r+0x630>
   27360:	d9800a04 	addi	r6,sp,40
   27364:	a80b883a 	mov	r5,r21
   27368:	b009883a 	mov	r4,r22
   2736c:	0026e600 	call	26e60 <__sprint_r.part.0>
   27370:	1000131e 	bne	r2,zero,273c0 <___vfiprintf_internal_r+0x454>
   27374:	d8800c17 	ldw	r2,48(sp)
   27378:	900d883a 	mov	r6,r18
   2737c:	d8c00017 	ldw	r3,0(sp)
   27380:	1cc0010c 	andi	r19,r3,4
   27384:	98000226 	beq	r19,zero,27390 <___vfiprintf_internal_r+0x424>
   27388:	8de1c83a 	sub	r16,r17,r23
   2738c:	04008a16 	blt	zero,r16,275b8 <___vfiprintf_internal_r+0x64c>
   27390:	8dc0010e 	bge	r17,r23,27398 <___vfiprintf_internal_r+0x42c>
   27394:	b823883a 	mov	r17,r23
   27398:	d8c00117 	ldw	r3,4(sp)
   2739c:	1c47883a 	add	r3,r3,r17
   273a0:	d8c00115 	stw	r3,4(sp)
   273a4:	1002671e 	bne	r2,zero,27d44 <___vfiprintf_internal_r+0xdd8>
   273a8:	a0c00007 	ldb	r3,0(r20)
   273ac:	d8000b15 	stw	zero,44(sp)
   273b0:	9021883a 	mov	r16,r18
   273b4:	183f181e 	bne	r3,zero,27018 <___vfiprintf_internal_r+0xac>
   273b8:	d8800c17 	ldw	r2,48(sp)
   273bc:	1003831e 	bne	r2,zero,281cc <___vfiprintf_internal_r+0x1260>
   273c0:	a880030b 	ldhu	r2,12(r21)
   273c4:	1080100c 	andi	r2,r2,64
   273c8:	10039e1e 	bne	r2,zero,28244 <___vfiprintf_internal_r+0x12d8>
   273cc:	d8800117 	ldw	r2,4(sp)
   273d0:	dfc03017 	ldw	ra,192(sp)
   273d4:	df002f17 	ldw	fp,188(sp)
   273d8:	ddc02e17 	ldw	r23,184(sp)
   273dc:	dd802d17 	ldw	r22,180(sp)
   273e0:	dd402c17 	ldw	r21,176(sp)
   273e4:	dd002b17 	ldw	r20,172(sp)
   273e8:	dcc02a17 	ldw	r19,168(sp)
   273ec:	dc802917 	ldw	r18,164(sp)
   273f0:	dc402817 	ldw	r17,160(sp)
   273f4:	dc002717 	ldw	r16,156(sp)
   273f8:	dec03104 	addi	sp,sp,196
   273fc:	f800283a 	ret
   27400:	a80b883a 	mov	r5,r21
   27404:	b009883a 	mov	r4,r22
   27408:	002835c0 	call	2835c <__swsetup_r>
   2740c:	10038d1e 	bne	r2,zero,28244 <___vfiprintf_internal_r+0x12d8>
   27410:	a880030b 	ldhu	r2,12(r21)
   27414:	1080068c 	andi	r2,r2,26
   27418:	10800298 	cmpnei	r2,r2,10
   2741c:	103ef51e 	bne	r2,zero,26ff4 <___vfiprintf_internal_r+0x88>
   27420:	a880038f 	ldh	r2,14(r21)
   27424:	103ef316 	blt	r2,zero,26ff4 <___vfiprintf_internal_r+0x88>
   27428:	d9c00417 	ldw	r7,16(sp)
   2742c:	a00d883a 	mov	r6,r20
   27430:	a80b883a 	mov	r5,r21
   27434:	b009883a 	mov	r4,r22
   27438:	002829c0 	call	2829c <__sbprintf>
   2743c:	d8800115 	stw	r2,4(sp)
   27440:	003fe206 	br	273cc <___vfiprintf_internal_r+0x460>
   27444:	6b400414 	ori	r13,r13,16
   27448:	6880080c 	andi	r2,r13,32
   2744c:	10004726 	beq	r2,zero,2756c <___vfiprintf_internal_r+0x600>
   27450:	d8c00417 	ldw	r3,16(sp)
   27454:	00800044 	movi	r2,1
   27458:	1dc00017 	ldw	r23,0(r3)
   2745c:	1f000117 	ldw	fp,4(r3)
   27460:	18c00204 	addi	r3,r3,8
   27464:	d8c00415 	stw	r3,16(sp)
   27468:	00000906 	br	27490 <___vfiprintf_internal_r+0x524>
   2746c:	6b400414 	ori	r13,r13,16
   27470:	6880080c 	andi	r2,r13,32
   27474:	10003126 	beq	r2,zero,2753c <___vfiprintf_internal_r+0x5d0>
   27478:	d8c00417 	ldw	r3,16(sp)
   2747c:	0005883a 	mov	r2,zero
   27480:	1dc00017 	ldw	r23,0(r3)
   27484:	1f000117 	ldw	fp,4(r3)
   27488:	18c00204 	addi	r3,r3,8
   2748c:	d8c00415 	stw	r3,16(sp)
   27490:	d8000945 	stb	zero,37(sp)
   27494:	40ffffe0 	cmpeqi	r3,r8,-1
   27498:	001d883a 	mov	r14,zero
   2749c:	1800f21e 	bne	r3,zero,27868 <___vfiprintf_internal_r+0x8fc>
   274a0:	04ffdfc4 	movi	r19,-129
   274a4:	6cc8703a 	and	r4,r13,r19
   274a8:	bf06b03a 	or	r3,r23,fp
   274ac:	d9000015 	stw	r4,0(sp)
   274b0:	18024b1e 	bne	r3,zero,27de0 <___vfiprintf_internal_r+0xe74>
   274b4:	4003091e 	bne	r8,zero,280dc <___vfiprintf_internal_r+0x1170>
   274b8:	1002a61e 	bne	r2,zero,27f54 <___vfiprintf_internal_r+0xfe8>
   274bc:	6f00004c 	andi	fp,r13,1
   274c0:	e002b826 	beq	fp,zero,27fa4 <___vfiprintf_internal_r+0x1038>
   274c4:	00800c04 	movi	r2,48
   274c8:	d88016c5 	stb	r2,91(sp)
   274cc:	dcc016c4 	addi	r19,sp,91
   274d0:	00008e06 	br	2770c <___vfiprintf_internal_r+0x7a0>
   274d4:	8d27c83a 	sub	r19,r17,r20
   274d8:	8d3fb726 	beq	r17,r20,273b8 <___vfiprintf_internal_r+0x44c>
   274dc:	d8c00c17 	ldw	r3,48(sp)
   274e0:	d8800b17 	ldw	r2,44(sp)
   274e4:	85000015 	stw	r20,0(r16)
   274e8:	98c7883a 	add	r3,r19,r3
   274ec:	10800044 	addi	r2,r2,1
   274f0:	d8800b15 	stw	r2,44(sp)
   274f4:	84c00115 	stw	r19,4(r16)
   274f8:	d8c00c15 	stw	r3,48(sp)
   274fc:	10800208 	cmpgei	r2,r2,8
   27500:	1000061e 	bne	r2,zero,2751c <___vfiprintf_internal_r+0x5b0>
   27504:	84000204 	addi	r16,r16,8
   27508:	d8c00117 	ldw	r3,4(sp)
   2750c:	88800003 	ldbu	r2,0(r17)
   27510:	1cc7883a 	add	r3,r3,r19
   27514:	d8c00115 	stw	r3,4(sp)
   27518:	003ec906 	br	27040 <___vfiprintf_internal_r+0xd4>
   2751c:	18027f26 	beq	r3,zero,27f1c <___vfiprintf_internal_r+0xfb0>
   27520:	d9800a04 	addi	r6,sp,40
   27524:	a80b883a 	mov	r5,r21
   27528:	b009883a 	mov	r4,r22
   2752c:	0026e600 	call	26e60 <__sprint_r.part.0>
   27530:	103fa31e 	bne	r2,zero,273c0 <___vfiprintf_internal_r+0x454>
   27534:	9021883a 	mov	r16,r18
   27538:	003ff306 	br	27508 <___vfiprintf_internal_r+0x59c>
   2753c:	d9000417 	ldw	r4,16(sp)
   27540:	6880040c 	andi	r2,r13,16
   27544:	20c00104 	addi	r3,r4,4
   27548:	1002a31e 	bne	r2,zero,27fd8 <___vfiprintf_internal_r+0x106c>
   2754c:	6880100c 	andi	r2,r13,64
   27550:	1002f626 	beq	r2,zero,2812c <___vfiprintf_internal_r+0x11c0>
   27554:	d8800417 	ldw	r2,16(sp)
   27558:	0039883a 	mov	fp,zero
   2755c:	d8c00415 	stw	r3,16(sp)
   27560:	15c0000b 	ldhu	r23,0(r2)
   27564:	0005883a 	mov	r2,zero
   27568:	003fc906 	br	27490 <___vfiprintf_internal_r+0x524>
   2756c:	d9000417 	ldw	r4,16(sp)
   27570:	6880040c 	andi	r2,r13,16
   27574:	20c00104 	addi	r3,r4,4
   27578:	1002ab1e 	bne	r2,zero,28028 <___vfiprintf_internal_r+0x10bc>
   2757c:	6880100c 	andi	r2,r13,64
   27580:	1002f026 	beq	r2,zero,28144 <___vfiprintf_internal_r+0x11d8>
   27584:	d8800417 	ldw	r2,16(sp)
   27588:	0039883a 	mov	fp,zero
   2758c:	d8c00415 	stw	r3,16(sp)
   27590:	15c0000b 	ldhu	r23,0(r2)
   27594:	00800044 	movi	r2,1
   27598:	003fbd06 	br	27490 <___vfiprintf_internal_r+0x524>
   2759c:	d8c00017 	ldw	r3,0(sp)
   275a0:	d8000b15 	stw	zero,44(sp)
   275a4:	1cc0010c 	andi	r19,r3,4
   275a8:	98024a26 	beq	r19,zero,27ed4 <___vfiprintf_internal_r+0xf68>
   275ac:	8de1c83a 	sub	r16,r17,r23
   275b0:	0402480e 	bge	zero,r16,27ed4 <___vfiprintf_internal_r+0xf68>
   275b4:	900d883a 	mov	r6,r18
   275b8:	80c00450 	cmplti	r3,r16,17
   275bc:	d9000b17 	ldw	r4,44(sp)
   275c0:	01c000f4 	movhi	r7,3
   275c4:	1803171e 	bne	r3,zero,28224 <___vfiprintf_internal_r+0x12b8>
   275c8:	39c15404 	addi	r7,r7,1360
   275cc:	04c00404 	movi	r19,16
   275d0:	00000606 	br	275ec <___vfiprintf_internal_r+0x680>
   275d4:	21400084 	addi	r5,r4,2
   275d8:	31800204 	addi	r6,r6,8
   275dc:	1809883a 	mov	r4,r3
   275e0:	843ffc04 	addi	r16,r16,-16
   275e4:	80c00448 	cmpgei	r3,r16,17
   275e8:	18001726 	beq	r3,zero,27648 <___vfiprintf_internal_r+0x6dc>
   275ec:	20c00044 	addi	r3,r4,1
   275f0:	10800404 	addi	r2,r2,16
   275f4:	31c00015 	stw	r7,0(r6)
   275f8:	34c00115 	stw	r19,4(r6)
   275fc:	d8800c15 	stw	r2,48(sp)
   27600:	d8c00b15 	stw	r3,44(sp)
   27604:	19400208 	cmpgei	r5,r3,8
   27608:	283ff226 	beq	r5,zero,275d4 <___vfiprintf_internal_r+0x668>
   2760c:	d9800a04 	addi	r6,sp,40
   27610:	a80b883a 	mov	r5,r21
   27614:	b009883a 	mov	r4,r22
   27618:	10014f26 	beq	r2,zero,27b58 <___vfiprintf_internal_r+0xbec>
   2761c:	d9c00015 	stw	r7,0(sp)
   27620:	0026e600 	call	26e60 <__sprint_r.part.0>
   27624:	103f661e 	bne	r2,zero,273c0 <___vfiprintf_internal_r+0x454>
   27628:	d9000b17 	ldw	r4,44(sp)
   2762c:	843ffc04 	addi	r16,r16,-16
   27630:	80c00448 	cmpgei	r3,r16,17
   27634:	d8800c17 	ldw	r2,48(sp)
   27638:	d9c00017 	ldw	r7,0(sp)
   2763c:	900d883a 	mov	r6,r18
   27640:	21400044 	addi	r5,r4,1
   27644:	183fe91e 	bne	r3,zero,275ec <___vfiprintf_internal_r+0x680>
   27648:	1405883a 	add	r2,r2,r16
   2764c:	d9400b15 	stw	r5,44(sp)
   27650:	31c00015 	stw	r7,0(r6)
   27654:	34000115 	stw	r16,4(r6)
   27658:	d8800c15 	stw	r2,48(sp)
   2765c:	29400210 	cmplti	r5,r5,8
   27660:	283f4b1e 	bne	r5,zero,27390 <___vfiprintf_internal_r+0x424>
   27664:	10021b26 	beq	r2,zero,27ed4 <___vfiprintf_internal_r+0xf68>
   27668:	d9800a04 	addi	r6,sp,40
   2766c:	a80b883a 	mov	r5,r21
   27670:	b009883a 	mov	r4,r22
   27674:	0026e600 	call	26e60 <__sprint_r.part.0>
   27678:	103f511e 	bne	r2,zero,273c0 <___vfiprintf_internal_r+0x454>
   2767c:	d8800c17 	ldw	r2,48(sp)
   27680:	003f4306 	br	27390 <___vfiprintf_internal_r+0x424>
   27684:	0023ed80 	call	23ed8 <__sinit>
   27688:	003e4a06 	br	26fb4 <___vfiprintf_internal_r+0x48>
   2768c:	29403fcc 	andi	r5,r5,255
   27690:	2802e01e 	bne	r5,zero,28214 <___vfiprintf_internal_r+0x12a8>
   27694:	6880080c 	andi	r2,r13,32
   27698:	10005d26 	beq	r2,zero,27810 <___vfiprintf_internal_r+0x8a4>
   2769c:	d8c00417 	ldw	r3,16(sp)
   276a0:	18800117 	ldw	r2,4(r3)
   276a4:	1dc00017 	ldw	r23,0(r3)
   276a8:	18c00204 	addi	r3,r3,8
   276ac:	d8c00415 	stw	r3,16(sp)
   276b0:	1039883a 	mov	fp,r2
   276b4:	10006216 	blt	r2,zero,27840 <___vfiprintf_internal_r+0x8d4>
   276b8:	40bfffd8 	cmpnei	r2,r8,-1
   276bc:	10000a26 	beq	r2,zero,276e8 <___vfiprintf_internal_r+0x77c>
   276c0:	00ffdfc4 	movi	r3,-129
   276c4:	bf04b03a 	or	r2,r23,fp
   276c8:	db800943 	ldbu	r14,37(sp)
   276cc:	68da703a 	and	r13,r13,r3
   276d0:	1000061e 	bne	r2,zero,276ec <___vfiprintf_internal_r+0x780>
   276d4:	4000081e 	bne	r8,zero,276f8 <___vfiprintf_internal_r+0x78c>
   276d8:	0039883a 	mov	fp,zero
   276dc:	db400015 	stw	r13,0(sp)
   276e0:	9027883a 	mov	r19,r18
   276e4:	00000906 	br	2770c <___vfiprintf_internal_r+0x7a0>
   276e8:	db800943 	ldbu	r14,37(sp)
   276ec:	e000ee1e 	bne	fp,zero,27aa8 <___vfiprintf_internal_r+0xb3c>
   276f0:	b88002a8 	cmpgeui	r2,r23,10
   276f4:	1000ec1e 	bne	r2,zero,27aa8 <___vfiprintf_internal_r+0xb3c>
   276f8:	bdc00c04 	addi	r23,r23,48
   276fc:	ddc016c5 	stb	r23,91(sp)
   27700:	db400015 	stw	r13,0(sp)
   27704:	07000044 	movi	fp,1
   27708:	dcc016c4 	addi	r19,sp,91
   2770c:	402f883a 	mov	r23,r8
   27710:	4700010e 	bge	r8,fp,27718 <___vfiprintf_internal_r+0x7ac>
   27714:	e02f883a 	mov	r23,fp
   27718:	73803fcc 	andi	r14,r14,255
   2771c:	7380201c 	xori	r14,r14,128
   27720:	73bfe004 	addi	r14,r14,-128
   27724:	703ecc26 	beq	r14,zero,27258 <___vfiprintf_internal_r+0x2ec>
   27728:	bdc00044 	addi	r23,r23,1
   2772c:	003eca06 	br	27258 <___vfiprintf_internal_r+0x2ec>
   27730:	a0800007 	ldb	r2,0(r20)
   27734:	6b401014 	ori	r13,r13,64
   27738:	003e4d06 	br	27070 <___vfiprintf_internal_r+0x104>
   2773c:	29403fcc 	andi	r5,r5,255
   27740:	2802b21e 	bne	r5,zero,2820c <___vfiprintf_internal_r+0x12a0>
   27744:	d9000417 	ldw	r4,16(sp)
   27748:	6880080c 	andi	r2,r13,32
   2774c:	20c00017 	ldw	r3,0(r4)
   27750:	21000104 	addi	r4,r4,4
   27754:	1002251e 	bne	r2,zero,27fec <___vfiprintf_internal_r+0x1080>
   27758:	6880040c 	andi	r2,r13,16
   2775c:	1002531e 	bne	r2,zero,280ac <___vfiprintf_internal_r+0x1140>
   27760:	6b40100c 	andi	r13,r13,64
   27764:	68025126 	beq	r13,zero,280ac <___vfiprintf_internal_r+0x1140>
   27768:	d8800117 	ldw	r2,4(sp)
   2776c:	d9000415 	stw	r4,16(sp)
   27770:	1880000d 	sth	r2,0(r3)
   27774:	003e2606 	br	27010 <___vfiprintf_internal_r+0xa4>
   27778:	a0800007 	ldb	r2,0(r20)
   2777c:	10c01b18 	cmpnei	r3,r2,108
   27780:	18025a26 	beq	r3,zero,280ec <___vfiprintf_internal_r+0x1180>
   27784:	6b400414 	ori	r13,r13,16
   27788:	003e3906 	br	27070 <___vfiprintf_internal_r+0x104>
   2778c:	d8c00417 	ldw	r3,16(sp)
   27790:	d8000945 	stb	zero,37(sp)
   27794:	05c00044 	movi	r23,1
   27798:	18800017 	ldw	r2,0(r3)
   2779c:	18c00104 	addi	r3,r3,4
   277a0:	d8c00415 	stw	r3,16(sp)
   277a4:	d8800d05 	stb	r2,52(sp)
   277a8:	07000044 	movi	fp,1
   277ac:	dcc00d04 	addi	r19,sp,52
   277b0:	003ea706 	br	27250 <___vfiprintf_internal_r+0x2e4>
   277b4:	29403fcc 	andi	r5,r5,255
   277b8:	2802981e 	bne	r5,zero,2821c <___vfiprintf_internal_r+0x12b0>
   277bc:	00c000f4 	movhi	r3,3
   277c0:	18c14404 	addi	r3,r3,1296
   277c4:	d8c00515 	stw	r3,20(sp)
   277c8:	68c0080c 	andi	r3,r13,32
   277cc:	18008326 	beq	r3,zero,279dc <___vfiprintf_internal_r+0xa70>
   277d0:	d8c00417 	ldw	r3,16(sp)
   277d4:	1dc00017 	ldw	r23,0(r3)
   277d8:	1f000117 	ldw	fp,4(r3)
   277dc:	18c00204 	addi	r3,r3,8
   277e0:	d8c00415 	stw	r3,16(sp)
   277e4:	68c0004c 	andi	r3,r13,1
   277e8:	18000226 	beq	r3,zero,277f4 <___vfiprintf_internal_r+0x888>
   277ec:	bf06b03a 	or	r3,r23,fp
   277f0:	1801f31e 	bne	r3,zero,27fc0 <___vfiprintf_internal_r+0x1054>
   277f4:	00800084 	movi	r2,2
   277f8:	003f2506 	br	27490 <___vfiprintf_internal_r+0x524>
   277fc:	29403fcc 	andi	r5,r5,255
   27800:	2802801e 	bne	r5,zero,28204 <___vfiprintf_internal_r+0x1298>
   27804:	6b400414 	ori	r13,r13,16
   27808:	6880080c 	andi	r2,r13,32
   2780c:	103fa31e 	bne	r2,zero,2769c <___vfiprintf_internal_r+0x730>
   27810:	d9000417 	ldw	r4,16(sp)
   27814:	6880040c 	andi	r2,r13,16
   27818:	20c00104 	addi	r3,r4,4
   2781c:	1001f91e 	bne	r2,zero,28004 <___vfiprintf_internal_r+0x1098>
   27820:	6880100c 	andi	r2,r13,64
   27824:	10025226 	beq	r2,zero,28170 <___vfiprintf_internal_r+0x1204>
   27828:	d8800417 	ldw	r2,16(sp)
   2782c:	d8c00415 	stw	r3,16(sp)
   27830:	15c0000f 	ldh	r23,0(r2)
   27834:	b839d7fa 	srai	fp,r23,31
   27838:	e005883a 	mov	r2,fp
   2783c:	103f9e0e 	bge	r2,zero,276b8 <___vfiprintf_internal_r+0x74c>
   27840:	b804c03a 	cmpne	r2,r23,zero
   27844:	0739c83a 	sub	fp,zero,fp
   27848:	e0b9c83a 	sub	fp,fp,r2
   2784c:	00800b44 	movi	r2,45
   27850:	d8800945 	stb	r2,37(sp)
   27854:	40ffffe0 	cmpeqi	r3,r8,-1
   27858:	05efc83a 	sub	r23,zero,r23
   2785c:	03800b44 	movi	r14,45
   27860:	00800044 	movi	r2,1
   27864:	183f0e26 	beq	r3,zero,274a0 <___vfiprintf_internal_r+0x534>
   27868:	10c00060 	cmpeqi	r3,r2,1
   2786c:	183f9f1e 	bne	r3,zero,276ec <___vfiprintf_internal_r+0x780>
   27870:	108000a0 	cmpeqi	r2,r2,2
   27874:	9027883a 	mov	r19,r18
   27878:	1000a81e 	bne	r2,zero,27b1c <___vfiprintf_internal_r+0xbb0>
   2787c:	e006977a 	slli	r3,fp,29
   27880:	b804d0fa 	srli	r2,r23,3
   27884:	e038d0fa 	srli	fp,fp,3
   27888:	b90001cc 	andi	r4,r23,7
   2788c:	21000c04 	addi	r4,r4,48
   27890:	18aeb03a 	or	r23,r3,r2
   27894:	993fffc5 	stb	r4,-1(r19)
   27898:	bf04b03a 	or	r2,r23,fp
   2789c:	980b883a 	mov	r5,r19
   278a0:	9cffffc4 	addi	r19,r19,-1
   278a4:	103ff51e 	bne	r2,zero,2787c <___vfiprintf_internal_r+0x910>
   278a8:	6880004c 	andi	r2,r13,1
   278ac:	1000a726 	beq	r2,zero,27b4c <___vfiprintf_internal_r+0xbe0>
   278b0:	21003fcc 	andi	r4,r4,255
   278b4:	2100201c 	xori	r4,r4,128
   278b8:	213fe004 	addi	r4,r4,-128
   278bc:	20800c18 	cmpnei	r2,r4,48
   278c0:	1000a226 	beq	r2,zero,27b4c <___vfiprintf_internal_r+0xbe0>
   278c4:	297fff84 	addi	r5,r5,-2
   278c8:	00800c04 	movi	r2,48
   278cc:	98bfffc5 	stb	r2,-1(r19)
   278d0:	9179c83a 	sub	fp,r18,r5
   278d4:	db400015 	stw	r13,0(sp)
   278d8:	2827883a 	mov	r19,r5
   278dc:	003f8b06 	br	2770c <___vfiprintf_internal_r+0x7a0>
   278e0:	a0800007 	ldb	r2,0(r20)
   278e4:	6b402014 	ori	r13,r13,128
   278e8:	003de106 	br	27070 <___vfiprintf_internal_r+0x104>
   278ec:	a0800007 	ldb	r2,0(r20)
   278f0:	a0c00044 	addi	r3,r20,1
   278f4:	11000aa0 	cmpeqi	r4,r2,42
   278f8:	2002551e 	bne	r4,zero,28250 <___vfiprintf_internal_r+0x12e4>
   278fc:	113ff404 	addi	r4,r2,-48
   27900:	21c002b0 	cmpltui	r7,r4,10
   27904:	1829883a 	mov	r20,r3
   27908:	0011883a 	mov	r8,zero
   2790c:	383dd926 	beq	r7,zero,27074 <___vfiprintf_internal_r+0x108>
   27910:	400690ba 	slli	r3,r8,2
   27914:	a0800007 	ldb	r2,0(r20)
   27918:	a5000044 	addi	r20,r20,1
   2791c:	1a11883a 	add	r8,r3,r8
   27920:	4211883a 	add	r8,r8,r8
   27924:	4111883a 	add	r8,r8,r4
   27928:	113ff404 	addi	r4,r2,-48
   2792c:	20c002b0 	cmpltui	r3,r4,10
   27930:	183ff71e 	bne	r3,zero,27910 <___vfiprintf_internal_r+0x9a4>
   27934:	003dcf06 	br	27074 <___vfiprintf_internal_r+0x108>
   27938:	a0800003 	ldbu	r2,0(r20)
   2793c:	10803fcc 	andi	r2,r2,255
   27940:	1080201c 	xori	r2,r2,128
   27944:	6b400114 	ori	r13,r13,4
   27948:	10bfe004 	addi	r2,r2,-128
   2794c:	003dc806 	br	27070 <___vfiprintf_internal_r+0x104>
   27950:	a0800007 	ldb	r2,0(r20)
   27954:	01400044 	movi	r5,1
   27958:	01800ac4 	movi	r6,43
   2795c:	003dc406 	br	27070 <___vfiprintf_internal_r+0x104>
   27960:	d8c00417 	ldw	r3,16(sp)
   27964:	a0800003 	ldbu	r2,0(r20)
   27968:	1c400017 	ldw	r17,0(r3)
   2796c:	18c00104 	addi	r3,r3,4
   27970:	8801b916 	blt	r17,zero,28058 <___vfiprintf_internal_r+0x10ec>
   27974:	d8c00415 	stw	r3,16(sp)
   27978:	10803fcc 	andi	r2,r2,255
   2797c:	1080201c 	xori	r2,r2,128
   27980:	10bfe004 	addi	r2,r2,-128
   27984:	003dba06 	br	27070 <___vfiprintf_internal_r+0x104>
   27988:	a0800007 	ldb	r2,0(r20)
   2798c:	6b400054 	ori	r13,r13,1
   27990:	003db706 	br	27070 <___vfiprintf_internal_r+0x104>
   27994:	30c03fcc 	andi	r3,r6,255
   27998:	18c0201c 	xori	r3,r3,128
   2799c:	18ffe004 	addi	r3,r3,-128
   279a0:	a0800003 	ldbu	r2,0(r20)
   279a4:	183ff41e 	bne	r3,zero,27978 <___vfiprintf_internal_r+0xa0c>
   279a8:	10803fcc 	andi	r2,r2,255
   279ac:	1080201c 	xori	r2,r2,128
   279b0:	01400044 	movi	r5,1
   279b4:	01800804 	movi	r6,32
   279b8:	10bfe004 	addi	r2,r2,-128
   279bc:	003dac06 	br	27070 <___vfiprintf_internal_r+0x104>
   279c0:	29403fcc 	andi	r5,r5,255
   279c4:	28020a1e 	bne	r5,zero,281f0 <___vfiprintf_internal_r+0x1284>
   279c8:	00c000f4 	movhi	r3,3
   279cc:	18c14904 	addi	r3,r3,1316
   279d0:	d8c00515 	stw	r3,20(sp)
   279d4:	68c0080c 	andi	r3,r13,32
   279d8:	183f7d1e 	bne	r3,zero,277d0 <___vfiprintf_internal_r+0x864>
   279dc:	d9400417 	ldw	r5,16(sp)
   279e0:	68c0040c 	andi	r3,r13,16
   279e4:	29000104 	addi	r4,r5,4
   279e8:	18018b1e 	bne	r3,zero,28018 <___vfiprintf_internal_r+0x10ac>
   279ec:	68c0100c 	andi	r3,r13,64
   279f0:	1801da26 	beq	r3,zero,2815c <___vfiprintf_internal_r+0x11f0>
   279f4:	d8c00417 	ldw	r3,16(sp)
   279f8:	0039883a 	mov	fp,zero
   279fc:	d9000415 	stw	r4,16(sp)
   27a00:	1dc0000b 	ldhu	r23,0(r3)
   27a04:	003f7706 	br	277e4 <___vfiprintf_internal_r+0x878>
   27a08:	d8800417 	ldw	r2,16(sp)
   27a0c:	d8000945 	stb	zero,37(sp)
   27a10:	14c00017 	ldw	r19,0(r2)
   27a14:	10c00104 	addi	r3,r2,4
   27a18:	9801bb26 	beq	r19,zero,28108 <___vfiprintf_internal_r+0x119c>
   27a1c:	40bfffe0 	cmpeqi	r2,r8,-1
   27a20:	1001901e 	bne	r2,zero,28064 <___vfiprintf_internal_r+0x10f8>
   27a24:	400d883a 	mov	r6,r8
   27a28:	000b883a 	mov	r5,zero
   27a2c:	9809883a 	mov	r4,r19
   27a30:	d8c00315 	stw	r3,12(sp)
   27a34:	db400215 	stw	r13,8(sp)
   27a38:	da000015 	stw	r8,0(sp)
   27a3c:	0028b840 	call	28b84 <memchr>
   27a40:	da000017 	ldw	r8,0(sp)
   27a44:	db400217 	ldw	r13,8(sp)
   27a48:	d8c00317 	ldw	r3,12(sp)
   27a4c:	1001e426 	beq	r2,zero,281e0 <___vfiprintf_internal_r+0x1274>
   27a50:	14f9c83a 	sub	fp,r2,r19
   27a54:	e02f883a 	mov	r23,fp
   27a58:	d8c00415 	stw	r3,16(sp)
   27a5c:	003dfc06 	br	27250 <___vfiprintf_internal_r+0x2e4>
   27a60:	a0800007 	ldb	r2,0(r20)
   27a64:	6b400814 	ori	r13,r13,32
   27a68:	003d8106 	br	27070 <___vfiprintf_internal_r+0x104>
   27a6c:	d8c00417 	ldw	r3,16(sp)
   27a70:	00800c04 	movi	r2,48
   27a74:	d8800985 	stb	r2,38(sp)
   27a78:	00801e04 	movi	r2,120
   27a7c:	010000f4 	movhi	r4,3
   27a80:	d88009c5 	stb	r2,39(sp)
   27a84:	18800104 	addi	r2,r3,4
   27a88:	d8800415 	stw	r2,16(sp)
   27a8c:	20814904 	addi	r2,r4,1316
   27a90:	d8800515 	stw	r2,20(sp)
   27a94:	1dc00017 	ldw	r23,0(r3)
   27a98:	0039883a 	mov	fp,zero
   27a9c:	6b400094 	ori	r13,r13,2
   27aa0:	00800084 	movi	r2,2
   27aa4:	003e7a06 	br	27490 <___vfiprintf_internal_r+0x524>
   27aa8:	9027883a 	mov	r19,r18
   27aac:	b809883a 	mov	r4,r23
   27ab0:	e00b883a 	mov	r5,fp
   27ab4:	01800284 	movi	r6,10
   27ab8:	000f883a 	mov	r7,zero
   27abc:	db800315 	stw	r14,12(sp)
   27ac0:	da000215 	stw	r8,8(sp)
   27ac4:	db400015 	stw	r13,0(sp)
   27ac8:	0029d400 	call	29d40 <__umoddi3>
   27acc:	10800c04 	addi	r2,r2,48
   27ad0:	b809883a 	mov	r4,r23
   27ad4:	e00b883a 	mov	r5,fp
   27ad8:	98bfffc5 	stb	r2,-1(r19)
   27adc:	01800284 	movi	r6,10
   27ae0:	000f883a 	mov	r7,zero
   27ae4:	00297240 	call	29724 <__udivdi3>
   27ae8:	e009883a 	mov	r4,fp
   27aec:	b80b883a 	mov	r5,r23
   27af0:	db400017 	ldw	r13,0(sp)
   27af4:	da000217 	ldw	r8,8(sp)
   27af8:	db800317 	ldw	r14,12(sp)
   27afc:	9cffffc4 	addi	r19,r19,-1
   27b00:	102f883a 	mov	r23,r2
   27b04:	1839883a 	mov	fp,r3
   27b08:	203fe81e 	bne	r4,zero,27aac <___vfiprintf_internal_r+0xb40>
   27b0c:	294002a8 	cmpgeui	r5,r5,10
   27b10:	283fe61e 	bne	r5,zero,27aac <___vfiprintf_internal_r+0xb40>
   27b14:	94f9c83a 	sub	fp,r18,r19
   27b18:	003efc06 	br	2770c <___vfiprintf_internal_r+0x7a0>
   27b1c:	d9000517 	ldw	r4,20(sp)
   27b20:	b88003cc 	andi	r2,r23,15
   27b24:	e006973a 	slli	r3,fp,28
   27b28:	b82ed13a 	srli	r23,r23,4
   27b2c:	2085883a 	add	r2,r4,r2
   27b30:	10800003 	ldbu	r2,0(r2)
   27b34:	e038d13a 	srli	fp,fp,4
   27b38:	1deeb03a 	or	r23,r3,r23
   27b3c:	98bfffc5 	stb	r2,-1(r19)
   27b40:	bf04b03a 	or	r2,r23,fp
   27b44:	9cffffc4 	addi	r19,r19,-1
   27b48:	103ff41e 	bne	r2,zero,27b1c <___vfiprintf_internal_r+0xbb0>
   27b4c:	94f9c83a 	sub	fp,r18,r19
   27b50:	db400015 	stw	r13,0(sp)
   27b54:	003eed06 	br	2770c <___vfiprintf_internal_r+0x7a0>
   27b58:	01400044 	movi	r5,1
   27b5c:	0009883a 	mov	r4,zero
   27b60:	900d883a 	mov	r6,r18
   27b64:	003e9e06 	br	275e0 <___vfiprintf_internal_r+0x674>
   27b68:	8dc7c83a 	sub	r3,r17,r23
   27b6c:	00fdf20e 	bge	zero,r3,27338 <___vfiprintf_internal_r+0x3cc>
   27b70:	19c00450 	cmplti	r7,r3,17
   27b74:	3801ae1e 	bne	r7,zero,28230 <___vfiprintf_internal_r+0x12c4>
   27b78:	01c000f4 	movhi	r7,3
   27b7c:	39c15004 	addi	r7,r7,1344
   27b80:	03400404 	movi	r13,16
   27b84:	00000606 	br	27ba0 <___vfiprintf_internal_r+0xc34>
   27b88:	23800084 	addi	r14,r4,2
   27b8c:	84000204 	addi	r16,r16,8
   27b90:	2809883a 	mov	r4,r5
   27b94:	18fffc04 	addi	r3,r3,-16
   27b98:	19400448 	cmpgei	r5,r3,17
   27b9c:	28001c26 	beq	r5,zero,27c10 <___vfiprintf_internal_r+0xca4>
   27ba0:	21400044 	addi	r5,r4,1
   27ba4:	10800404 	addi	r2,r2,16
   27ba8:	81c00015 	stw	r7,0(r16)
   27bac:	83400115 	stw	r13,4(r16)
   27bb0:	d8800c15 	stw	r2,48(sp)
   27bb4:	d9400b15 	stw	r5,44(sp)
   27bb8:	29800208 	cmpgei	r6,r5,8
   27bbc:	303ff226 	beq	r6,zero,27b88 <___vfiprintf_internal_r+0xc1c>
   27bc0:	d9800a04 	addi	r6,sp,40
   27bc4:	a80b883a 	mov	r5,r21
   27bc8:	b009883a 	mov	r4,r22
   27bcc:	10006326 	beq	r2,zero,27d5c <___vfiprintf_internal_r+0xdf0>
   27bd0:	d9c00615 	stw	r7,24(sp)
   27bd4:	d8c00315 	stw	r3,12(sp)
   27bd8:	da000215 	stw	r8,8(sp)
   27bdc:	0026e600 	call	26e60 <__sprint_r.part.0>
   27be0:	103df71e 	bne	r2,zero,273c0 <___vfiprintf_internal_r+0x454>
   27be4:	d8c00317 	ldw	r3,12(sp)
   27be8:	d9000b17 	ldw	r4,44(sp)
   27bec:	d8800c17 	ldw	r2,48(sp)
   27bf0:	18fffc04 	addi	r3,r3,-16
   27bf4:	19400448 	cmpgei	r5,r3,17
   27bf8:	d9c00617 	ldw	r7,24(sp)
   27bfc:	da000217 	ldw	r8,8(sp)
   27c00:	9021883a 	mov	r16,r18
   27c04:	23800044 	addi	r14,r4,1
   27c08:	03400404 	movi	r13,16
   27c0c:	283fe41e 	bne	r5,zero,27ba0 <___vfiprintf_internal_r+0xc34>
   27c10:	83400204 	addi	r13,r16,8
   27c14:	10c5883a 	add	r2,r2,r3
   27c18:	80c00115 	stw	r3,4(r16)
   27c1c:	81c00015 	stw	r7,0(r16)
   27c20:	d8800c15 	stw	r2,48(sp)
   27c24:	db800b15 	stw	r14,44(sp)
   27c28:	70c00208 	cmpgei	r3,r14,8
   27c2c:	1800df26 	beq	r3,zero,27fac <___vfiprintf_internal_r+0x1040>
   27c30:	10015826 	beq	r2,zero,28194 <___vfiprintf_internal_r+0x1228>
   27c34:	d9800a04 	addi	r6,sp,40
   27c38:	a80b883a 	mov	r5,r21
   27c3c:	b009883a 	mov	r4,r22
   27c40:	da000215 	stw	r8,8(sp)
   27c44:	0026e600 	call	26e60 <__sprint_r.part.0>
   27c48:	103ddd1e 	bne	r2,zero,273c0 <___vfiprintf_internal_r+0x454>
   27c4c:	da000217 	ldw	r8,8(sp)
   27c50:	d9000b17 	ldw	r4,44(sp)
   27c54:	d8800c17 	ldw	r2,48(sp)
   27c58:	4711c83a 	sub	r8,r8,fp
   27c5c:	d9801904 	addi	r6,sp,100
   27c60:	21400044 	addi	r5,r4,1
   27c64:	9021883a 	mov	r16,r18
   27c68:	023db50e 	bge	zero,r8,27340 <___vfiprintf_internal_r+0x3d4>
   27c6c:	40c00450 	cmplti	r3,r8,17
   27c70:	01c000f4 	movhi	r7,3
   27c74:	1801441e 	bne	r3,zero,28188 <___vfiprintf_internal_r+0x121c>
   27c78:	39c15004 	addi	r7,r7,1344
   27c7c:	03400404 	movi	r13,16
   27c80:	00000606 	br	27c9c <___vfiprintf_internal_r+0xd30>
   27c84:	21400084 	addi	r5,r4,2
   27c88:	84000204 	addi	r16,r16,8
   27c8c:	1809883a 	mov	r4,r3
   27c90:	423ffc04 	addi	r8,r8,-16
   27c94:	40c00448 	cmpgei	r3,r8,17
   27c98:	18001a26 	beq	r3,zero,27d04 <___vfiprintf_internal_r+0xd98>
   27c9c:	20c00044 	addi	r3,r4,1
   27ca0:	10800404 	addi	r2,r2,16
   27ca4:	81c00015 	stw	r7,0(r16)
   27ca8:	83400115 	stw	r13,4(r16)
   27cac:	d8800c15 	stw	r2,48(sp)
   27cb0:	d8c00b15 	stw	r3,44(sp)
   27cb4:	19400208 	cmpgei	r5,r3,8
   27cb8:	283ff226 	beq	r5,zero,27c84 <___vfiprintf_internal_r+0xd18>
   27cbc:	d9800a04 	addi	r6,sp,40
   27cc0:	a80b883a 	mov	r5,r21
   27cc4:	b009883a 	mov	r4,r22
   27cc8:	10001a26 	beq	r2,zero,27d34 <___vfiprintf_internal_r+0xdc8>
   27ccc:	d9c00315 	stw	r7,12(sp)
   27cd0:	da000215 	stw	r8,8(sp)
   27cd4:	0026e600 	call	26e60 <__sprint_r.part.0>
   27cd8:	103db91e 	bne	r2,zero,273c0 <___vfiprintf_internal_r+0x454>
   27cdc:	da000217 	ldw	r8,8(sp)
   27ce0:	d9000b17 	ldw	r4,44(sp)
   27ce4:	d8800c17 	ldw	r2,48(sp)
   27ce8:	423ffc04 	addi	r8,r8,-16
   27cec:	40c00448 	cmpgei	r3,r8,17
   27cf0:	d9c00317 	ldw	r7,12(sp)
   27cf4:	9021883a 	mov	r16,r18
   27cf8:	21400044 	addi	r5,r4,1
   27cfc:	03400404 	movi	r13,16
   27d00:	183fe61e 	bne	r3,zero,27c9c <___vfiprintf_internal_r+0xd30>
   27d04:	81000204 	addi	r4,r16,8
   27d08:	1205883a 	add	r2,r2,r8
   27d0c:	81c00015 	stw	r7,0(r16)
   27d10:	82000115 	stw	r8,4(r16)
   27d14:	d8800c15 	stw	r2,48(sp)
   27d18:	d9400b15 	stw	r5,44(sp)
   27d1c:	28c00208 	cmpgei	r3,r5,8
   27d20:	1800721e 	bne	r3,zero,27eec <___vfiprintf_internal_r+0xf80>
   27d24:	29400044 	addi	r5,r5,1
   27d28:	21800204 	addi	r6,r4,8
   27d2c:	2021883a 	mov	r16,r4
   27d30:	003d8306 	br	27340 <___vfiprintf_internal_r+0x3d4>
   27d34:	01400044 	movi	r5,1
   27d38:	0009883a 	mov	r4,zero
   27d3c:	9021883a 	mov	r16,r18
   27d40:	003fd306 	br	27c90 <___vfiprintf_internal_r+0xd24>
   27d44:	d9800a04 	addi	r6,sp,40
   27d48:	a80b883a 	mov	r5,r21
   27d4c:	b009883a 	mov	r4,r22
   27d50:	0026e600 	call	26e60 <__sprint_r.part.0>
   27d54:	103d9426 	beq	r2,zero,273a8 <___vfiprintf_internal_r+0x43c>
   27d58:	003d9906 	br	273c0 <___vfiprintf_internal_r+0x454>
   27d5c:	03800044 	movi	r14,1
   27d60:	0009883a 	mov	r4,zero
   27d64:	9021883a 	mov	r16,r18
   27d68:	003f8a06 	br	27b94 <___vfiprintf_internal_r+0xc28>
   27d6c:	10006e26 	beq	r2,zero,27f28 <___vfiprintf_internal_r+0xfbc>
   27d70:	d9800a04 	addi	r6,sp,40
   27d74:	a80b883a 	mov	r5,r21
   27d78:	b009883a 	mov	r4,r22
   27d7c:	da000615 	stw	r8,24(sp)
   27d80:	db400315 	stw	r13,12(sp)
   27d84:	db800215 	stw	r14,8(sp)
   27d88:	0026e600 	call	26e60 <__sprint_r.part.0>
   27d8c:	103d8c1e 	bne	r2,zero,273c0 <___vfiprintf_internal_r+0x454>
   27d90:	d9000b17 	ldw	r4,44(sp)
   27d94:	d8800c17 	ldw	r2,48(sp)
   27d98:	da000617 	ldw	r8,24(sp)
   27d9c:	db400317 	ldw	r13,12(sp)
   27da0:	db800217 	ldw	r14,8(sp)
   27da4:	d9801904 	addi	r6,sp,100
   27da8:	21400044 	addi	r5,r4,1
   27dac:	9021883a 	mov	r16,r18
   27db0:	003d4606 	br	272cc <___vfiprintf_internal_r+0x360>
   27db4:	d8800984 	addi	r2,sp,38
   27db8:	d8801715 	stw	r2,92(sp)
   27dbc:	00800084 	movi	r2,2
   27dc0:	d8801815 	stw	r2,96(sp)
   27dc4:	d9801904 	addi	r6,sp,100
   27dc8:	01400044 	movi	r5,1
   27dcc:	3021883a 	mov	r16,r6
   27dd0:	2809883a 	mov	r4,r5
   27dd4:	21400044 	addi	r5,r4,1
   27dd8:	81800204 	addi	r6,r16,8
   27ddc:	003d5406 	br	27330 <___vfiprintf_internal_r+0x3c4>
   27de0:	db400017 	ldw	r13,0(sp)
   27de4:	003ea006 	br	27868 <___vfiprintf_internal_r+0x8fc>
   27de8:	19400450 	cmplti	r5,r3,17
   27dec:	01c000f4 	movhi	r7,3
   27df0:	2801011e 	bne	r5,zero,281f8 <___vfiprintf_internal_r+0x128c>
   27df4:	39c15404 	addi	r7,r7,1360
   27df8:	03c00404 	movi	r15,16
   27dfc:	00000706 	br	27e1c <___vfiprintf_internal_r+0xeb0>
   27e00:	27c00084 	addi	ra,r4,2
   27e04:	84000204 	addi	r16,r16,8
   27e08:	3009883a 	mov	r4,r6
   27e0c:	18fffc04 	addi	r3,r3,-16
   27e10:	19400448 	cmpgei	r5,r3,17
   27e14:	28002026 	beq	r5,zero,27e98 <___vfiprintf_internal_r+0xf2c>
   27e18:	21800044 	addi	r6,r4,1
   27e1c:	10800404 	addi	r2,r2,16
   27e20:	81c00015 	stw	r7,0(r16)
   27e24:	83c00115 	stw	r15,4(r16)
   27e28:	d8800c15 	stw	r2,48(sp)
   27e2c:	d9800b15 	stw	r6,44(sp)
   27e30:	31400208 	cmpgei	r5,r6,8
   27e34:	283ff226 	beq	r5,zero,27e00 <___vfiprintf_internal_r+0xe94>
   27e38:	d9800a04 	addi	r6,sp,40
   27e3c:	a80b883a 	mov	r5,r21
   27e40:	b009883a 	mov	r4,r22
   27e44:	10001f26 	beq	r2,zero,27ec4 <___vfiprintf_internal_r+0xf58>
   27e48:	d9c00815 	stw	r7,32(sp)
   27e4c:	d8c00715 	stw	r3,28(sp)
   27e50:	da000615 	stw	r8,24(sp)
   27e54:	db400315 	stw	r13,12(sp)
   27e58:	db800215 	stw	r14,8(sp)
   27e5c:	0026e600 	call	26e60 <__sprint_r.part.0>
   27e60:	103d571e 	bne	r2,zero,273c0 <___vfiprintf_internal_r+0x454>
   27e64:	d8c00717 	ldw	r3,28(sp)
   27e68:	d9000b17 	ldw	r4,44(sp)
   27e6c:	d8800c17 	ldw	r2,48(sp)
   27e70:	18fffc04 	addi	r3,r3,-16
   27e74:	19400448 	cmpgei	r5,r3,17
   27e78:	d9c00817 	ldw	r7,32(sp)
   27e7c:	da000617 	ldw	r8,24(sp)
   27e80:	db400317 	ldw	r13,12(sp)
   27e84:	db800217 	ldw	r14,8(sp)
   27e88:	9021883a 	mov	r16,r18
   27e8c:	27c00044 	addi	ra,r4,1
   27e90:	03c00404 	movi	r15,16
   27e94:	283fe01e 	bne	r5,zero,27e18 <___vfiprintf_internal_r+0xeac>
   27e98:	10c5883a 	add	r2,r2,r3
   27e9c:	80c00115 	stw	r3,4(r16)
   27ea0:	81c00015 	stw	r7,0(r16)
   27ea4:	d8800c15 	stw	r2,48(sp)
   27ea8:	dfc00b15 	stw	ra,44(sp)
   27eac:	f8c00208 	cmpgei	r3,ra,8
   27eb0:	18002b1e 	bne	r3,zero,27f60 <___vfiprintf_internal_r+0xff4>
   27eb4:	84000204 	addi	r16,r16,8
   27eb8:	f9400044 	addi	r5,ra,1
   27ebc:	f809883a 	mov	r4,ra
   27ec0:	003cf206 	br	2728c <___vfiprintf_internal_r+0x320>
   27ec4:	0009883a 	mov	r4,zero
   27ec8:	07c00044 	movi	ra,1
   27ecc:	9021883a 	mov	r16,r18
   27ed0:	003fce06 	br	27e0c <___vfiprintf_internal_r+0xea0>
   27ed4:	8dc0010e 	bge	r17,r23,27edc <___vfiprintf_internal_r+0xf70>
   27ed8:	b823883a 	mov	r17,r23
   27edc:	d8800117 	ldw	r2,4(sp)
   27ee0:	1445883a 	add	r2,r2,r17
   27ee4:	d8800115 	stw	r2,4(sp)
   27ee8:	003d2f06 	br	273a8 <___vfiprintf_internal_r+0x43c>
   27eec:	10007326 	beq	r2,zero,280bc <___vfiprintf_internal_r+0x1150>
   27ef0:	d9800a04 	addi	r6,sp,40
   27ef4:	a80b883a 	mov	r5,r21
   27ef8:	b009883a 	mov	r4,r22
   27efc:	0026e600 	call	26e60 <__sprint_r.part.0>
   27f00:	103d2f1e 	bne	r2,zero,273c0 <___vfiprintf_internal_r+0x454>
   27f04:	d9400b17 	ldw	r5,44(sp)
   27f08:	d8800c17 	ldw	r2,48(sp)
   27f0c:	d9801904 	addi	r6,sp,100
   27f10:	29400044 	addi	r5,r5,1
   27f14:	9021883a 	mov	r16,r18
   27f18:	003d0906 	br	27340 <___vfiprintf_internal_r+0x3d4>
   27f1c:	d8000b15 	stw	zero,44(sp)
   27f20:	9021883a 	mov	r16,r18
   27f24:	003d7806 	br	27508 <___vfiprintf_internal_r+0x59c>
   27f28:	7000441e 	bne	r14,zero,2803c <___vfiprintf_internal_r+0x10d0>
   27f2c:	0009883a 	mov	r4,zero
   27f30:	d9801904 	addi	r6,sp,100
   27f34:	01400044 	movi	r5,1
   27f38:	9021883a 	mov	r16,r18
   27f3c:	003cfc06 	br	27330 <___vfiprintf_internal_r+0x3c4>
   27f40:	d9801904 	addi	r6,sp,100
   27f44:	01400044 	movi	r5,1
   27f48:	0009883a 	mov	r4,zero
   27f4c:	9021883a 	mov	r16,r18
   27f50:	003cf706 	br	27330 <___vfiprintf_internal_r+0x3c4>
   27f54:	0039883a 	mov	fp,zero
   27f58:	9027883a 	mov	r19,r18
   27f5c:	003deb06 	br	2770c <___vfiprintf_internal_r+0x7a0>
   27f60:	10004a26 	beq	r2,zero,2808c <___vfiprintf_internal_r+0x1120>
   27f64:	d9800a04 	addi	r6,sp,40
   27f68:	a80b883a 	mov	r5,r21
   27f6c:	b009883a 	mov	r4,r22
   27f70:	da000615 	stw	r8,24(sp)
   27f74:	db400315 	stw	r13,12(sp)
   27f78:	db800215 	stw	r14,8(sp)
   27f7c:	0026e600 	call	26e60 <__sprint_r.part.0>
   27f80:	103d0f1e 	bne	r2,zero,273c0 <___vfiprintf_internal_r+0x454>
   27f84:	d9000b17 	ldw	r4,44(sp)
   27f88:	d8800c17 	ldw	r2,48(sp)
   27f8c:	da000617 	ldw	r8,24(sp)
   27f90:	db400317 	ldw	r13,12(sp)
   27f94:	db800217 	ldw	r14,8(sp)
   27f98:	9021883a 	mov	r16,r18
   27f9c:	21400044 	addi	r5,r4,1
   27fa0:	003cba06 	br	2728c <___vfiprintf_internal_r+0x320>
   27fa4:	9027883a 	mov	r19,r18
   27fa8:	003dd806 	br	2770c <___vfiprintf_internal_r+0x7a0>
   27fac:	71400044 	addi	r5,r14,1
   27fb0:	69800204 	addi	r6,r13,8
   27fb4:	7009883a 	mov	r4,r14
   27fb8:	6821883a 	mov	r16,r13
   27fbc:	003cde06 	br	27338 <___vfiprintf_internal_r+0x3cc>
   27fc0:	00c00c04 	movi	r3,48
   27fc4:	d88009c5 	stb	r2,39(sp)
   27fc8:	d8c00985 	stb	r3,38(sp)
   27fcc:	6b400094 	ori	r13,r13,2
   27fd0:	00800084 	movi	r2,2
   27fd4:	003d2e06 	br	27490 <___vfiprintf_internal_r+0x524>
   27fd8:	25c00017 	ldw	r23,0(r4)
   27fdc:	0039883a 	mov	fp,zero
   27fe0:	d8c00415 	stw	r3,16(sp)
   27fe4:	0005883a 	mov	r2,zero
   27fe8:	003d2906 	br	27490 <___vfiprintf_internal_r+0x524>
   27fec:	d9400117 	ldw	r5,4(sp)
   27ff0:	d9000415 	stw	r4,16(sp)
   27ff4:	2805d7fa 	srai	r2,r5,31
   27ff8:	19400015 	stw	r5,0(r3)
   27ffc:	18800115 	stw	r2,4(r3)
   28000:	003c0306 	br	27010 <___vfiprintf_internal_r+0xa4>
   28004:	25c00017 	ldw	r23,0(r4)
   28008:	d8c00415 	stw	r3,16(sp)
   2800c:	b839d7fa 	srai	fp,r23,31
   28010:	e005883a 	mov	r2,fp
   28014:	003da706 	br	276b4 <___vfiprintf_internal_r+0x748>
   28018:	2dc00017 	ldw	r23,0(r5)
   2801c:	0039883a 	mov	fp,zero
   28020:	d9000415 	stw	r4,16(sp)
   28024:	003def06 	br	277e4 <___vfiprintf_internal_r+0x878>
   28028:	25c00017 	ldw	r23,0(r4)
   2802c:	0039883a 	mov	fp,zero
   28030:	d8c00415 	stw	r3,16(sp)
   28034:	00800044 	movi	r2,1
   28038:	003d1506 	br	27490 <___vfiprintf_internal_r+0x524>
   2803c:	d8800984 	addi	r2,sp,38
   28040:	d8801715 	stw	r2,92(sp)
   28044:	00800084 	movi	r2,2
   28048:	d8801815 	stw	r2,96(sp)
   2804c:	dc001904 	addi	r16,sp,100
   28050:	01000044 	movi	r4,1
   28054:	003f5f06 	br	27dd4 <___vfiprintf_internal_r+0xe68>
   28058:	0463c83a 	sub	r17,zero,r17
   2805c:	d8c00415 	stw	r3,16(sp)
   28060:	003e3606 	br	2793c <___vfiprintf_internal_r+0x9d0>
   28064:	9809883a 	mov	r4,r19
   28068:	d8c00215 	stw	r3,8(sp)
   2806c:	db400015 	stw	r13,0(sp)
   28070:	00266f80 	call	266f8 <strlen>
   28074:	d8c00217 	ldw	r3,8(sp)
   28078:	db400017 	ldw	r13,0(sp)
   2807c:	1039883a 	mov	fp,r2
   28080:	102f883a 	mov	r23,r2
   28084:	d8c00415 	stw	r3,16(sp)
   28088:	003c7106 	br	27250 <___vfiprintf_internal_r+0x2e4>
   2808c:	d8c00947 	ldb	r3,37(sp)
   28090:	1800451e 	bne	r3,zero,281a8 <___vfiprintf_internal_r+0x123c>
   28094:	703f471e 	bne	r14,zero,27db4 <___vfiprintf_internal_r+0xe48>
   28098:	0009883a 	mov	r4,zero
   2809c:	d9801904 	addi	r6,sp,100
   280a0:	01400044 	movi	r5,1
   280a4:	9021883a 	mov	r16,r18
   280a8:	003ca306 	br	27338 <___vfiprintf_internal_r+0x3cc>
   280ac:	d8800117 	ldw	r2,4(sp)
   280b0:	18800015 	stw	r2,0(r3)
   280b4:	d9000415 	stw	r4,16(sp)
   280b8:	003bd506 	br	27010 <___vfiprintf_internal_r+0xa4>
   280bc:	00c00044 	movi	r3,1
   280c0:	e005883a 	mov	r2,fp
   280c4:	dcc01715 	stw	r19,92(sp)
   280c8:	df001815 	stw	fp,96(sp)
   280cc:	df000c15 	stw	fp,48(sp)
   280d0:	d8c00b15 	stw	r3,44(sp)
   280d4:	d9801904 	addi	r6,sp,100
   280d8:	003ca806 	br	2737c <___vfiprintf_internal_r+0x410>
   280dc:	10c00060 	cmpeqi	r3,r2,1
   280e0:	db400017 	ldw	r13,0(sp)
   280e4:	183de226 	beq	r3,zero,27870 <___vfiprintf_internal_r+0x904>
   280e8:	003d8306 	br	276f8 <___vfiprintf_internal_r+0x78c>
   280ec:	a0800043 	ldbu	r2,1(r20)
   280f0:	6b400814 	ori	r13,r13,32
   280f4:	a5000044 	addi	r20,r20,1
   280f8:	10803fcc 	andi	r2,r2,255
   280fc:	1080201c 	xori	r2,r2,128
   28100:	10bfe004 	addi	r2,r2,-128
   28104:	003bda06 	br	27070 <___vfiprintf_internal_r+0x104>
   28108:	408001f0 	cmpltui	r2,r8,7
   2810c:	4039883a 	mov	fp,r8
   28110:	1000011e 	bne	r2,zero,28118 <___vfiprintf_internal_r+0x11ac>
   28114:	07000184 	movi	fp,6
   28118:	04c000f4 	movhi	r19,3
   2811c:	e02f883a 	mov	r23,fp
   28120:	d8c00415 	stw	r3,16(sp)
   28124:	9cc14e04 	addi	r19,r19,1336
   28128:	003c4906 	br	27250 <___vfiprintf_internal_r+0x2e4>
   2812c:	d8800417 	ldw	r2,16(sp)
   28130:	0039883a 	mov	fp,zero
   28134:	d8c00415 	stw	r3,16(sp)
   28138:	15c00017 	ldw	r23,0(r2)
   2813c:	0005883a 	mov	r2,zero
   28140:	003cd306 	br	27490 <___vfiprintf_internal_r+0x524>
   28144:	d8800417 	ldw	r2,16(sp)
   28148:	0039883a 	mov	fp,zero
   2814c:	d8c00415 	stw	r3,16(sp)
   28150:	15c00017 	ldw	r23,0(r2)
   28154:	00800044 	movi	r2,1
   28158:	003ccd06 	br	27490 <___vfiprintf_internal_r+0x524>
   2815c:	d8c00417 	ldw	r3,16(sp)
   28160:	0039883a 	mov	fp,zero
   28164:	d9000415 	stw	r4,16(sp)
   28168:	1dc00017 	ldw	r23,0(r3)
   2816c:	003d9d06 	br	277e4 <___vfiprintf_internal_r+0x878>
   28170:	d8800417 	ldw	r2,16(sp)
   28174:	d8c00415 	stw	r3,16(sp)
   28178:	15c00017 	ldw	r23,0(r2)
   2817c:	b839d7fa 	srai	fp,r23,31
   28180:	e005883a 	mov	r2,fp
   28184:	003d4b06 	br	276b4 <___vfiprintf_internal_r+0x748>
   28188:	3009883a 	mov	r4,r6
   2818c:	39c15004 	addi	r7,r7,1344
   28190:	003edd06 	br	27d08 <___vfiprintf_internal_r+0xd9c>
   28194:	d9801904 	addi	r6,sp,100
   28198:	01400044 	movi	r5,1
   2819c:	0009883a 	mov	r4,zero
   281a0:	9021883a 	mov	r16,r18
   281a4:	003c6406 	br	27338 <___vfiprintf_internal_r+0x3cc>
   281a8:	d8800944 	addi	r2,sp,37
   281ac:	d8801715 	stw	r2,92(sp)
   281b0:	00800044 	movi	r2,1
   281b4:	d8801815 	stw	r2,96(sp)
   281b8:	d9801904 	addi	r6,sp,100
   281bc:	01400044 	movi	r5,1
   281c0:	003c3e06 	br	272bc <___vfiprintf_internal_r+0x350>
   281c4:	d9800945 	stb	r6,37(sp)
   281c8:	003c1b06 	br	27238 <___vfiprintf_internal_r+0x2cc>
   281cc:	d9800a04 	addi	r6,sp,40
   281d0:	a80b883a 	mov	r5,r21
   281d4:	b009883a 	mov	r4,r22
   281d8:	0026e600 	call	26e60 <__sprint_r.part.0>
   281dc:	003c7806 	br	273c0 <___vfiprintf_internal_r+0x454>
   281e0:	402f883a 	mov	r23,r8
   281e4:	d8c00415 	stw	r3,16(sp)
   281e8:	4039883a 	mov	fp,r8
   281ec:	003c1806 	br	27250 <___vfiprintf_internal_r+0x2e4>
   281f0:	d9800945 	stb	r6,37(sp)
   281f4:	003df406 	br	279c8 <___vfiprintf_internal_r+0xa5c>
   281f8:	303f883a 	mov	ra,r6
   281fc:	39c15404 	addi	r7,r7,1360
   28200:	003f2506 	br	27e98 <___vfiprintf_internal_r+0xf2c>
   28204:	d9800945 	stb	r6,37(sp)
   28208:	003d7e06 	br	27804 <___vfiprintf_internal_r+0x898>
   2820c:	d9800945 	stb	r6,37(sp)
   28210:	003d4c06 	br	27744 <___vfiprintf_internal_r+0x7d8>
   28214:	d9800945 	stb	r6,37(sp)
   28218:	003d1e06 	br	27694 <___vfiprintf_internal_r+0x728>
   2821c:	d9800945 	stb	r6,37(sp)
   28220:	003d6606 	br	277bc <___vfiprintf_internal_r+0x850>
   28224:	21400044 	addi	r5,r4,1
   28228:	39c15404 	addi	r7,r7,1360
   2822c:	003d0606 	br	27648 <___vfiprintf_internal_r+0x6dc>
   28230:	01c000f4 	movhi	r7,3
   28234:	301b883a 	mov	r13,r6
   28238:	281d883a 	mov	r14,r5
   2823c:	39c15004 	addi	r7,r7,1344
   28240:	003e7406 	br	27c14 <___vfiprintf_internal_r+0xca8>
   28244:	00bfffc4 	movi	r2,-1
   28248:	d8800115 	stw	r2,4(sp)
   2824c:	003c5f06 	br	273cc <___vfiprintf_internal_r+0x460>
   28250:	d8800417 	ldw	r2,16(sp)
   28254:	12000017 	ldw	r8,0(r2)
   28258:	11000104 	addi	r4,r2,4
   2825c:	4000010e 	bge	r8,zero,28264 <___vfiprintf_internal_r+0x12f8>
   28260:	023fffc4 	movi	r8,-1
   28264:	a0800043 	ldbu	r2,1(r20)
   28268:	d9000415 	stw	r4,16(sp)
   2826c:	1829883a 	mov	r20,r3
   28270:	10803fcc 	andi	r2,r2,255
   28274:	1080201c 	xori	r2,r2,128
   28278:	10bfe004 	addi	r2,r2,-128
   2827c:	003b7c06 	br	27070 <___vfiprintf_internal_r+0x104>

00028280 <__vfiprintf_internal>:
   28280:	00c000f4 	movhi	r3,3
   28284:	2005883a 	mov	r2,r4
   28288:	1908aa17 	ldw	r4,8872(r3)
   2828c:	300f883a 	mov	r7,r6
   28290:	280d883a 	mov	r6,r5
   28294:	100b883a 	mov	r5,r2
   28298:	0026f6c1 	jmpi	26f6c <___vfiprintf_internal_r>

0002829c <__sbprintf>:
   2829c:	2880030b 	ldhu	r2,12(r5)
   282a0:	2b001917 	ldw	r12,100(r5)
   282a4:	2ac0038b 	ldhu	r11,14(r5)
   282a8:	2a800717 	ldw	r10,28(r5)
   282ac:	2a400917 	ldw	r9,36(r5)
   282b0:	defee204 	addi	sp,sp,-1144
   282b4:	da001a04 	addi	r8,sp,104
   282b8:	00c10004 	movi	r3,1024
   282bc:	dc011a15 	stw	r16,1128(sp)
   282c0:	10bfff4c 	andi	r2,r2,65533
   282c4:	2821883a 	mov	r16,r5
   282c8:	d80b883a 	mov	r5,sp
   282cc:	dc811c15 	stw	r18,1136(sp)
   282d0:	dc411b15 	stw	r17,1132(sp)
   282d4:	dfc11d15 	stw	ra,1140(sp)
   282d8:	2025883a 	mov	r18,r4
   282dc:	d880030d 	sth	r2,12(sp)
   282e0:	db001915 	stw	r12,100(sp)
   282e4:	dac0038d 	sth	r11,14(sp)
   282e8:	da800715 	stw	r10,28(sp)
   282ec:	da400915 	stw	r9,36(sp)
   282f0:	da000015 	stw	r8,0(sp)
   282f4:	da000415 	stw	r8,16(sp)
   282f8:	d8c00215 	stw	r3,8(sp)
   282fc:	d8c00515 	stw	r3,20(sp)
   28300:	d8000615 	stw	zero,24(sp)
   28304:	0026f6c0 	call	26f6c <___vfiprintf_internal_r>
   28308:	1023883a 	mov	r17,r2
   2830c:	10000d0e 	bge	r2,zero,28344 <__sbprintf+0xa8>
   28310:	d880030b 	ldhu	r2,12(sp)
   28314:	1080100c 	andi	r2,r2,64
   28318:	10000326 	beq	r2,zero,28328 <__sbprintf+0x8c>
   2831c:	8080030b 	ldhu	r2,12(r16)
   28320:	10801014 	ori	r2,r2,64
   28324:	8080030d 	sth	r2,12(r16)
   28328:	8805883a 	mov	r2,r17
   2832c:	dfc11d17 	ldw	ra,1140(sp)
   28330:	dc811c17 	ldw	r18,1136(sp)
   28334:	dc411b17 	ldw	r17,1132(sp)
   28338:	dc011a17 	ldw	r16,1128(sp)
   2833c:	dec11e04 	addi	sp,sp,1144
   28340:	f800283a 	ret
   28344:	d80b883a 	mov	r5,sp
   28348:	9009883a 	mov	r4,r18
   2834c:	0023b440 	call	23b44 <_fflush_r>
   28350:	103fef26 	beq	r2,zero,28310 <__sbprintf+0x74>
   28354:	047fffc4 	movi	r17,-1
   28358:	003fed06 	br	28310 <__sbprintf+0x74>

0002835c <__swsetup_r>:
   2835c:	008000f4 	movhi	r2,3
   28360:	1088aa17 	ldw	r2,8872(r2)
   28364:	defffd04 	addi	sp,sp,-12
   28368:	dc400115 	stw	r17,4(sp)
   2836c:	dc000015 	stw	r16,0(sp)
   28370:	dfc00215 	stw	ra,8(sp)
   28374:	2023883a 	mov	r17,r4
   28378:	2821883a 	mov	r16,r5
   2837c:	10000226 	beq	r2,zero,28388 <__swsetup_r+0x2c>
   28380:	10c00e17 	ldw	r3,56(r2)
   28384:	18003326 	beq	r3,zero,28454 <__swsetup_r+0xf8>
   28388:	8180030b 	ldhu	r6,12(r16)
   2838c:	30c0020c 	andi	r3,r6,8
   28390:	3005883a 	mov	r2,r6
   28394:	18000f26 	beq	r3,zero,283d4 <__swsetup_r+0x78>
   28398:	80c00417 	ldw	r3,16(r16)
   2839c:	18001626 	beq	r3,zero,283f8 <__swsetup_r+0x9c>
   283a0:	1100004c 	andi	r4,r2,1
   283a4:	20001f1e 	bne	r4,zero,28424 <__swsetup_r+0xc8>
   283a8:	1100008c 	andi	r4,r2,2
   283ac:	20002c1e 	bne	r4,zero,28460 <__swsetup_r+0x104>
   283b0:	81000517 	ldw	r4,20(r16)
   283b4:	81000215 	stw	r4,8(r16)
   283b8:	18001f26 	beq	r3,zero,28438 <__swsetup_r+0xdc>
   283bc:	0005883a 	mov	r2,zero
   283c0:	dfc00217 	ldw	ra,8(sp)
   283c4:	dc400117 	ldw	r17,4(sp)
   283c8:	dc000017 	ldw	r16,0(sp)
   283cc:	dec00304 	addi	sp,sp,12
   283d0:	f800283a 	ret
   283d4:	3080040c 	andi	r2,r6,16
   283d8:	10003126 	beq	r2,zero,284a0 <__swsetup_r+0x144>
   283dc:	3080010c 	andi	r2,r6,4
   283e0:	1000211e 	bne	r2,zero,28468 <__swsetup_r+0x10c>
   283e4:	80c00417 	ldw	r3,16(r16)
   283e8:	30800214 	ori	r2,r6,8
   283ec:	8080030d 	sth	r2,12(r16)
   283f0:	100d883a 	mov	r6,r2
   283f4:	183fea1e 	bne	r3,zero,283a0 <__swsetup_r+0x44>
   283f8:	1100a00c 	andi	r4,r2,640
   283fc:	21008020 	cmpeqi	r4,r4,512
   28400:	203fe71e 	bne	r4,zero,283a0 <__swsetup_r+0x44>
   28404:	8809883a 	mov	r4,r17
   28408:	800b883a 	mov	r5,r16
   2840c:	00212040 	call	21204 <__smakebuf_r>
   28410:	8180030b 	ldhu	r6,12(r16)
   28414:	80c00417 	ldw	r3,16(r16)
   28418:	3005883a 	mov	r2,r6
   2841c:	1100004c 	andi	r4,r2,1
   28420:	203fe126 	beq	r4,zero,283a8 <__swsetup_r+0x4c>
   28424:	81000517 	ldw	r4,20(r16)
   28428:	80000215 	stw	zero,8(r16)
   2842c:	0109c83a 	sub	r4,zero,r4
   28430:	81000615 	stw	r4,24(r16)
   28434:	183fe11e 	bne	r3,zero,283bc <__swsetup_r+0x60>
   28438:	10c0200c 	andi	r3,r2,128
   2843c:	0005883a 	mov	r2,zero
   28440:	183fdf26 	beq	r3,zero,283c0 <__swsetup_r+0x64>
   28444:	31801014 	ori	r6,r6,64
   28448:	8180030d 	sth	r6,12(r16)
   2844c:	00bfffc4 	movi	r2,-1
   28450:	003fdb06 	br	283c0 <__swsetup_r+0x64>
   28454:	1009883a 	mov	r4,r2
   28458:	0023ed80 	call	23ed8 <__sinit>
   2845c:	003fca06 	br	28388 <__swsetup_r+0x2c>
   28460:	0009883a 	mov	r4,zero
   28464:	003fd306 	br	283b4 <__swsetup_r+0x58>
   28468:	81400c17 	ldw	r5,48(r16)
   2846c:	28000626 	beq	r5,zero,28488 <__swsetup_r+0x12c>
   28470:	80801004 	addi	r2,r16,64
   28474:	28800326 	beq	r5,r2,28484 <__swsetup_r+0x128>
   28478:	8809883a 	mov	r4,r17
   2847c:	00240f40 	call	240f4 <_free_r>
   28480:	8180030b 	ldhu	r6,12(r16)
   28484:	80000c15 	stw	zero,48(r16)
   28488:	80c00417 	ldw	r3,16(r16)
   2848c:	00bff6c4 	movi	r2,-37
   28490:	118c703a 	and	r6,r2,r6
   28494:	80000115 	stw	zero,4(r16)
   28498:	80c00015 	stw	r3,0(r16)
   2849c:	003fd206 	br	283e8 <__swsetup_r+0x8c>
   284a0:	00800244 	movi	r2,9
   284a4:	88800015 	stw	r2,0(r17)
   284a8:	31801014 	ori	r6,r6,64
   284ac:	8180030d 	sth	r6,12(r16)
   284b0:	00bfffc4 	movi	r2,-1
   284b4:	003fc206 	br	283c0 <__swsetup_r+0x64>

000284b8 <__fputwc>:
   284b8:	defff904 	addi	sp,sp,-28
   284bc:	dcc00415 	stw	r19,16(sp)
   284c0:	dc800315 	stw	r18,12(sp)
   284c4:	dc000115 	stw	r16,4(sp)
   284c8:	dfc00615 	stw	ra,24(sp)
   284cc:	dd000515 	stw	r20,20(sp)
   284d0:	dc400215 	stw	r17,8(sp)
   284d4:	2025883a 	mov	r18,r4
   284d8:	2827883a 	mov	r19,r5
   284dc:	3021883a 	mov	r16,r6
   284e0:	00251dc0 	call	251dc <__locale_mb_cur_max>
   284e4:	10800058 	cmpnei	r2,r2,1
   284e8:	1000071e 	bne	r2,zero,28508 <__fputwc+0x50>
   284ec:	98bfffc4 	addi	r2,r19,-1
   284f0:	10803fe8 	cmpgeui	r2,r2,255
   284f4:	1000041e 	bne	r2,zero,28508 <__fputwc+0x50>
   284f8:	980b883a 	mov	r5,r19
   284fc:	dcc000c5 	stb	r19,3(sp)
   28500:	05000044 	movi	r20,1
   28504:	00000a06 	br	28530 <__fputwc+0x78>
   28508:	81c01704 	addi	r7,r16,92
   2850c:	980d883a 	mov	r6,r19
   28510:	d94000c4 	addi	r5,sp,3
   28514:	9009883a 	mov	r4,r18
   28518:	00294480 	call	29448 <_wcrtomb_r>
   2851c:	1029883a 	mov	r20,r2
   28520:	10bfffd8 	cmpnei	r2,r2,-1
   28524:	10003926 	beq	r2,zero,2860c <__fputwc+0x154>
   28528:	a0001f26 	beq	r20,zero,285a8 <__fputwc+0xf0>
   2852c:	d94000c3 	ldbu	r5,3(sp)
   28530:	0023883a 	mov	r17,zero
   28534:	00000a06 	br	28560 <__fputwc+0xa8>
   28538:	80800017 	ldw	r2,0(r16)
   2853c:	11400005 	stb	r5,0(r2)
   28540:	80c00017 	ldw	r3,0(r16)
   28544:	18c00044 	addi	r3,r3,1
   28548:	80c00015 	stw	r3,0(r16)
   2854c:	8c400044 	addi	r17,r17,1
   28550:	d88000c4 	addi	r2,sp,3
   28554:	1447883a 	add	r3,r2,r17
   28558:	8d00132e 	bgeu	r17,r20,285a8 <__fputwc+0xf0>
   2855c:	19400003 	ldbu	r5,0(r3)
   28560:	80c00217 	ldw	r3,8(r16)
   28564:	18ffffc4 	addi	r3,r3,-1
   28568:	80c00215 	stw	r3,8(r16)
   2856c:	183ff20e 	bge	r3,zero,28538 <__fputwc+0x80>
   28570:	80800617 	ldw	r2,24(r16)
   28574:	18801616 	blt	r3,r2,285d0 <__fputwc+0x118>
   28578:	80800017 	ldw	r2,0(r16)
   2857c:	11400005 	stb	r5,0(r2)
   28580:	80800017 	ldw	r2,0(r16)
   28584:	10c00003 	ldbu	r3,0(r2)
   28588:	10800044 	addi	r2,r2,1
   2858c:	18c002a0 	cmpeqi	r3,r3,10
   28590:	1800181e 	bne	r3,zero,285f4 <__fputwc+0x13c>
   28594:	80800015 	stw	r2,0(r16)
   28598:	8c400044 	addi	r17,r17,1
   2859c:	d88000c4 	addi	r2,sp,3
   285a0:	1447883a 	add	r3,r2,r17
   285a4:	8d3fed36 	bltu	r17,r20,2855c <__fputwc+0xa4>
   285a8:	9829883a 	mov	r20,r19
   285ac:	a005883a 	mov	r2,r20
   285b0:	dfc00617 	ldw	ra,24(sp)
   285b4:	dd000517 	ldw	r20,20(sp)
   285b8:	dcc00417 	ldw	r19,16(sp)
   285bc:	dc800317 	ldw	r18,12(sp)
   285c0:	dc400217 	ldw	r17,8(sp)
   285c4:	dc000117 	ldw	r16,4(sp)
   285c8:	dec00704 	addi	sp,sp,28
   285cc:	f800283a 	ret
   285d0:	29403fcc 	andi	r5,r5,255
   285d4:	800d883a 	mov	r6,r16
   285d8:	9009883a 	mov	r4,r18
   285dc:	00292e80 	call	292e8 <__swbuf_r>
   285e0:	10ffffe0 	cmpeqi	r3,r2,-1
   285e4:	18c03fcc 	andi	r3,r3,255
   285e8:	183fd826 	beq	r3,zero,2854c <__fputwc+0x94>
   285ec:	053fffc4 	movi	r20,-1
   285f0:	003fee06 	br	285ac <__fputwc+0xf4>
   285f4:	800d883a 	mov	r6,r16
   285f8:	01400284 	movi	r5,10
   285fc:	9009883a 	mov	r4,r18
   28600:	00292e80 	call	292e8 <__swbuf_r>
   28604:	10ffffe0 	cmpeqi	r3,r2,-1
   28608:	003ff606 	br	285e4 <__fputwc+0x12c>
   2860c:	8080030b 	ldhu	r2,12(r16)
   28610:	10801014 	ori	r2,r2,64
   28614:	8080030d 	sth	r2,12(r16)
   28618:	003fe406 	br	285ac <__fputwc+0xf4>

0002861c <_fputwc_r>:
   2861c:	3080030b 	ldhu	r2,12(r6)
   28620:	10c8000c 	andi	r3,r2,8192
   28624:	1800051e 	bne	r3,zero,2863c <_fputwc_r+0x20>
   28628:	30c01917 	ldw	r3,100(r6)
   2862c:	10880014 	ori	r2,r2,8192
   28630:	3080030d 	sth	r2,12(r6)
   28634:	18880014 	ori	r2,r3,8192
   28638:	30801915 	stw	r2,100(r6)
   2863c:	00284b81 	jmpi	284b8 <__fputwc>

00028640 <fputwc>:
   28640:	defffc04 	addi	sp,sp,-16
   28644:	008000f4 	movhi	r2,3
   28648:	dc000215 	stw	r16,8(sp)
   2864c:	1408aa17 	ldw	r16,8872(r2)
   28650:	dfc00315 	stw	ra,12(sp)
   28654:	280d883a 	mov	r6,r5
   28658:	200b883a 	mov	r5,r4
   2865c:	80000226 	beq	r16,zero,28668 <fputwc+0x28>
   28660:	80800e17 	ldw	r2,56(r16)
   28664:	10000d26 	beq	r2,zero,2869c <fputwc+0x5c>
   28668:	3080030b 	ldhu	r2,12(r6)
   2866c:	10c8000c 	andi	r3,r2,8192
   28670:	1800051e 	bne	r3,zero,28688 <fputwc+0x48>
   28674:	30c01917 	ldw	r3,100(r6)
   28678:	10880014 	ori	r2,r2,8192
   2867c:	3080030d 	sth	r2,12(r6)
   28680:	18880014 	ori	r2,r3,8192
   28684:	30801915 	stw	r2,100(r6)
   28688:	8009883a 	mov	r4,r16
   2868c:	dfc00317 	ldw	ra,12(sp)
   28690:	dc000217 	ldw	r16,8(sp)
   28694:	dec00404 	addi	sp,sp,16
   28698:	00284b81 	jmpi	284b8 <__fputwc>
   2869c:	d9000015 	stw	r4,0(sp)
   286a0:	8009883a 	mov	r4,r16
   286a4:	d9800115 	stw	r6,4(sp)
   286a8:	0023ed80 	call	23ed8 <__sinit>
   286ac:	d9800117 	ldw	r6,4(sp)
   286b0:	d9400017 	ldw	r5,0(sp)
   286b4:	003fec06 	br	28668 <fputwc+0x28>

000286b8 <__sfvwrite_r>:
   286b8:	30800217 	ldw	r2,8(r6)
   286bc:	1000c826 	beq	r2,zero,289e0 <__sfvwrite_r+0x328>
   286c0:	29c0030b 	ldhu	r7,12(r5)
   286c4:	defff404 	addi	sp,sp,-48
   286c8:	dd800815 	stw	r22,32(sp)
   286cc:	dd400715 	stw	r21,28(sp)
   286d0:	dc000215 	stw	r16,8(sp)
   286d4:	dfc00b15 	stw	ra,44(sp)
   286d8:	df000a15 	stw	fp,40(sp)
   286dc:	ddc00915 	stw	r23,36(sp)
   286e0:	dd000615 	stw	r20,24(sp)
   286e4:	dcc00515 	stw	r19,20(sp)
   286e8:	dc800415 	stw	r18,16(sp)
   286ec:	dc400315 	stw	r17,12(sp)
   286f0:	3880020c 	andi	r2,r7,8
   286f4:	302d883a 	mov	r22,r6
   286f8:	202b883a 	mov	r21,r4
   286fc:	2821883a 	mov	r16,r5
   28700:	10002226 	beq	r2,zero,2878c <__sfvwrite_r+0xd4>
   28704:	28800417 	ldw	r2,16(r5)
   28708:	10002026 	beq	r2,zero,2878c <__sfvwrite_r+0xd4>
   2870c:	3880008c 	andi	r2,r7,2
   28710:	b4400017 	ldw	r17,0(r22)
   28714:	10002526 	beq	r2,zero,287ac <__sfvwrite_r+0xf4>
   28718:	80800917 	ldw	r2,36(r16)
   2871c:	81400717 	ldw	r5,28(r16)
   28720:	05200034 	movhi	r20,32768
   28724:	0027883a 	mov	r19,zero
   28728:	0025883a 	mov	r18,zero
   2872c:	a53f0004 	addi	r20,r20,-1024
   28730:	980d883a 	mov	r6,r19
   28734:	a809883a 	mov	r4,r21
   28738:	90001026 	beq	r18,zero,2877c <__sfvwrite_r+0xc4>
   2873c:	900f883a 	mov	r7,r18
   28740:	a480012e 	bgeu	r20,r18,28748 <__sfvwrite_r+0x90>
   28744:	a00f883a 	mov	r7,r20
   28748:	103ee83a 	callr	r2
   2874c:	00809f0e 	bge	zero,r2,289cc <__sfvwrite_r+0x314>
   28750:	b1000217 	ldw	r4,8(r22)
   28754:	98a7883a 	add	r19,r19,r2
   28758:	90a5c83a 	sub	r18,r18,r2
   2875c:	2085c83a 	sub	r2,r4,r2
   28760:	b0800215 	stw	r2,8(r22)
   28764:	10006326 	beq	r2,zero,288f4 <__sfvwrite_r+0x23c>
   28768:	80800917 	ldw	r2,36(r16)
   2876c:	81400717 	ldw	r5,28(r16)
   28770:	980d883a 	mov	r6,r19
   28774:	a809883a 	mov	r4,r21
   28778:	903ff01e 	bne	r18,zero,2873c <__sfvwrite_r+0x84>
   2877c:	8cc00017 	ldw	r19,0(r17)
   28780:	8c800117 	ldw	r18,4(r17)
   28784:	8c400204 	addi	r17,r17,8
   28788:	003fe906 	br	28730 <__sfvwrite_r+0x78>
   2878c:	800b883a 	mov	r5,r16
   28790:	a809883a 	mov	r4,r21
   28794:	002835c0 	call	2835c <__swsetup_r>
   28798:	1000f81e 	bne	r2,zero,28b7c <__sfvwrite_r+0x4c4>
   2879c:	81c0030b 	ldhu	r7,12(r16)
   287a0:	b4400017 	ldw	r17,0(r22)
   287a4:	3880008c 	andi	r2,r7,2
   287a8:	103fdb1e 	bne	r2,zero,28718 <__sfvwrite_r+0x60>
   287ac:	3880004c 	andi	r2,r7,1
   287b0:	84800217 	ldw	r18,8(r16)
   287b4:	82000017 	ldw	r8,0(r16)
   287b8:	10008b1e 	bne	r2,zero,289e8 <__sfvwrite_r+0x330>
   287bc:	00a00034 	movhi	r2,32768
   287c0:	10bfff84 	addi	r2,r2,-2
   287c4:	00e00034 	movhi	r3,32768
   287c8:	d8800015 	stw	r2,0(sp)
   287cc:	18bfffc4 	addi	r2,r3,-1
   287d0:	0039883a 	mov	fp,zero
   287d4:	0027883a 	mov	r19,zero
   287d8:	d8800115 	stw	r2,4(sp)
   287dc:	98004126 	beq	r19,zero,288e4 <__sfvwrite_r+0x22c>
   287e0:	3880800c 	andi	r2,r7,512
   287e4:	10009326 	beq	r2,zero,28a34 <__sfvwrite_r+0x37c>
   287e8:	902f883a 	mov	r23,r18
   287ec:	9c80ba36 	bltu	r19,r18,28ad8 <__sfvwrite_r+0x420>
   287f0:	3881200c 	andi	r2,r7,1152
   287f4:	10002626 	beq	r2,zero,28890 <__sfvwrite_r+0x1d8>
   287f8:	81800517 	ldw	r6,20(r16)
   287fc:	81400417 	ldw	r5,16(r16)
   28800:	98800044 	addi	r2,r19,1
   28804:	3189883a 	add	r4,r6,r6
   28808:	2189883a 	add	r4,r4,r6
   2880c:	2028d7fa 	srli	r20,r4,31
   28810:	4165c83a 	sub	r18,r8,r5
   28814:	1485883a 	add	r2,r2,r18
   28818:	a109883a 	add	r4,r20,r4
   2881c:	2029d07a 	srai	r20,r4,1
   28820:	a00d883a 	mov	r6,r20
   28824:	a080022e 	bgeu	r20,r2,28830 <__sfvwrite_r+0x178>
   28828:	1029883a 	mov	r20,r2
   2882c:	100d883a 	mov	r6,r2
   28830:	39c1000c 	andi	r7,r7,1024
   28834:	3800c126 	beq	r7,zero,28b3c <__sfvwrite_r+0x484>
   28838:	a809883a 	mov	r4,r21
   2883c:	300b883a 	mov	r5,r6
   28840:	00213640 	call	21364 <_malloc_r>
   28844:	1009883a 	mov	r4,r2
   28848:	1000c826 	beq	r2,zero,28b6c <__sfvwrite_r+0x4b4>
   2884c:	81400417 	ldw	r5,16(r16)
   28850:	900d883a 	mov	r6,r18
   28854:	00252b40 	call	252b4 <memcpy>
   28858:	1009883a 	mov	r4,r2
   2885c:	8080030b 	ldhu	r2,12(r16)
   28860:	00fedfc4 	movi	r3,-1153
   28864:	10c4703a 	and	r2,r2,r3
   28868:	10802014 	ori	r2,r2,128
   2886c:	8080030d 	sth	r2,12(r16)
   28870:	2491883a 	add	r8,r4,r18
   28874:	a485c83a 	sub	r2,r20,r18
   28878:	81000415 	stw	r4,16(r16)
   2887c:	82000015 	stw	r8,0(r16)
   28880:	85000515 	stw	r20,20(r16)
   28884:	9825883a 	mov	r18,r19
   28888:	80800215 	stw	r2,8(r16)
   2888c:	982f883a 	mov	r23,r19
   28890:	4009883a 	mov	r4,r8
   28894:	b80d883a 	mov	r6,r23
   28898:	e00b883a 	mov	r5,fp
   2889c:	0028c580 	call	28c58 <memmove>
   288a0:	81000217 	ldw	r4,8(r16)
   288a4:	80800017 	ldw	r2,0(r16)
   288a8:	9829883a 	mov	r20,r19
   288ac:	24a5c83a 	sub	r18,r4,r18
   288b0:	15c5883a 	add	r2,r2,r23
   288b4:	84800215 	stw	r18,8(r16)
   288b8:	80800015 	stw	r2,0(r16)
   288bc:	0027883a 	mov	r19,zero
   288c0:	b0800217 	ldw	r2,8(r22)
   288c4:	e539883a 	add	fp,fp,r20
   288c8:	1529c83a 	sub	r20,r2,r20
   288cc:	b5000215 	stw	r20,8(r22)
   288d0:	a0000826 	beq	r20,zero,288f4 <__sfvwrite_r+0x23c>
   288d4:	81c0030b 	ldhu	r7,12(r16)
   288d8:	84800217 	ldw	r18,8(r16)
   288dc:	82000017 	ldw	r8,0(r16)
   288e0:	983fbf1e 	bne	r19,zero,287e0 <__sfvwrite_r+0x128>
   288e4:	8f000017 	ldw	fp,0(r17)
   288e8:	8cc00117 	ldw	r19,4(r17)
   288ec:	8c400204 	addi	r17,r17,8
   288f0:	003fba06 	br	287dc <__sfvwrite_r+0x124>
   288f4:	0005883a 	mov	r2,zero
   288f8:	dfc00b17 	ldw	ra,44(sp)
   288fc:	df000a17 	ldw	fp,40(sp)
   28900:	ddc00917 	ldw	r23,36(sp)
   28904:	dd800817 	ldw	r22,32(sp)
   28908:	dd400717 	ldw	r21,28(sp)
   2890c:	dd000617 	ldw	r20,24(sp)
   28910:	dcc00517 	ldw	r19,20(sp)
   28914:	dc800417 	ldw	r18,16(sp)
   28918:	dc400317 	ldw	r17,12(sp)
   2891c:	dc000217 	ldw	r16,8(sp)
   28920:	dec00c04 	addi	sp,sp,48
   28924:	f800283a 	ret
   28928:	e1c07316 	blt	fp,r7,28af8 <__sfvwrite_r+0x440>
   2892c:	80800917 	ldw	r2,36(r16)
   28930:	81400717 	ldw	r5,28(r16)
   28934:	b80d883a 	mov	r6,r23
   28938:	a809883a 	mov	r4,r21
   2893c:	103ee83a 	callr	r2
   28940:	1025883a 	mov	r18,r2
   28944:	0080210e 	bge	zero,r2,289cc <__sfvwrite_r+0x314>
   28948:	a4a9c83a 	sub	r20,r20,r18
   2894c:	a0006526 	beq	r20,zero,28ae4 <__sfvwrite_r+0x42c>
   28950:	00800044 	movi	r2,1
   28954:	b1800217 	ldw	r6,8(r22)
   28958:	bcaf883a 	add	r23,r23,r18
   2895c:	9ca7c83a 	sub	r19,r19,r18
   28960:	34a5c83a 	sub	r18,r6,r18
   28964:	b4800215 	stw	r18,8(r22)
   28968:	903fe226 	beq	r18,zero,288f4 <__sfvwrite_r+0x23c>
   2896c:	84800217 	ldw	r18,8(r16)
   28970:	82000017 	ldw	r8,0(r16)
   28974:	98002126 	beq	r19,zero,289fc <__sfvwrite_r+0x344>
   28978:	10002426 	beq	r2,zero,28a0c <__sfvwrite_r+0x354>
   2897c:	a005883a 	mov	r2,r20
   28980:	9839883a 	mov	fp,r19
   28984:	14c0012e 	bgeu	r2,r19,2898c <__sfvwrite_r+0x2d4>
   28988:	1039883a 	mov	fp,r2
   2898c:	80800417 	ldw	r2,16(r16)
   28990:	81c00517 	ldw	r7,20(r16)
   28994:	123fe42e 	bgeu	r2,r8,28928 <__sfvwrite_r+0x270>
   28998:	3ca5883a 	add	r18,r7,r18
   2899c:	973fe20e 	bge	r18,fp,28928 <__sfvwrite_r+0x270>
   289a0:	b80b883a 	mov	r5,r23
   289a4:	4009883a 	mov	r4,r8
   289a8:	900d883a 	mov	r6,r18
   289ac:	0028c580 	call	28c58 <memmove>
   289b0:	80800017 	ldw	r2,0(r16)
   289b4:	800b883a 	mov	r5,r16
   289b8:	a809883a 	mov	r4,r21
   289bc:	1485883a 	add	r2,r2,r18
   289c0:	80800015 	stw	r2,0(r16)
   289c4:	0023b440 	call	23b44 <_fflush_r>
   289c8:	103fdf26 	beq	r2,zero,28948 <__sfvwrite_r+0x290>
   289cc:	8080030b 	ldhu	r2,12(r16)
   289d0:	10801014 	ori	r2,r2,64
   289d4:	8080030d 	sth	r2,12(r16)
   289d8:	00bfffc4 	movi	r2,-1
   289dc:	003fc606 	br	288f8 <__sfvwrite_r+0x240>
   289e0:	0005883a 	mov	r2,zero
   289e4:	f800283a 	ret
   289e8:	0027883a 	mov	r19,zero
   289ec:	0029883a 	mov	r20,zero
   289f0:	0005883a 	mov	r2,zero
   289f4:	002f883a 	mov	r23,zero
   289f8:	983fdf1e 	bne	r19,zero,28978 <__sfvwrite_r+0x2c0>
   289fc:	8cc00117 	ldw	r19,4(r17)
   28a00:	8dc00017 	ldw	r23,0(r17)
   28a04:	8c400204 	addi	r17,r17,8
   28a08:	983ffc26 	beq	r19,zero,289fc <__sfvwrite_r+0x344>
   28a0c:	980d883a 	mov	r6,r19
   28a10:	01400284 	movi	r5,10
   28a14:	b809883a 	mov	r4,r23
   28a18:	da000015 	stw	r8,0(sp)
   28a1c:	0028b840 	call	28b84 <memchr>
   28a20:	da000017 	ldw	r8,0(sp)
   28a24:	10004226 	beq	r2,zero,28b30 <__sfvwrite_r+0x478>
   28a28:	10800044 	addi	r2,r2,1
   28a2c:	15e9c83a 	sub	r20,r2,r23
   28a30:	003fd206 	br	2897c <__sfvwrite_r+0x2c4>
   28a34:	80800417 	ldw	r2,16(r16)
   28a38:	12001436 	bltu	r2,r8,28a8c <__sfvwrite_r+0x3d4>
   28a3c:	85000517 	ldw	r20,20(r16)
   28a40:	9d001236 	bltu	r19,r20,28a8c <__sfvwrite_r+0x3d4>
   28a44:	d8800017 	ldw	r2,0(sp)
   28a48:	14c0372e 	bgeu	r2,r19,28b28 <__sfvwrite_r+0x470>
   28a4c:	d9000117 	ldw	r4,4(sp)
   28a50:	a00b883a 	mov	r5,r20
   28a54:	002a3040 	call	2a304 <__divsi3>
   28a58:	a00b883a 	mov	r5,r20
   28a5c:	1009883a 	mov	r4,r2
   28a60:	002a4b80 	call	2a4b8 <__mulsi3>
   28a64:	82000917 	ldw	r8,36(r16)
   28a68:	81400717 	ldw	r5,28(r16)
   28a6c:	100f883a 	mov	r7,r2
   28a70:	e00d883a 	mov	r6,fp
   28a74:	a809883a 	mov	r4,r21
   28a78:	403ee83a 	callr	r8
   28a7c:	1029883a 	mov	r20,r2
   28a80:	00bfd20e 	bge	zero,r2,289cc <__sfvwrite_r+0x314>
   28a84:	9d27c83a 	sub	r19,r19,r20
   28a88:	003f8d06 	br	288c0 <__sfvwrite_r+0x208>
   28a8c:	9029883a 	mov	r20,r18
   28a90:	9c80012e 	bgeu	r19,r18,28a98 <__sfvwrite_r+0x3e0>
   28a94:	9829883a 	mov	r20,r19
   28a98:	4009883a 	mov	r4,r8
   28a9c:	a00d883a 	mov	r6,r20
   28aa0:	e00b883a 	mov	r5,fp
   28aa4:	0028c580 	call	28c58 <memmove>
   28aa8:	80800217 	ldw	r2,8(r16)
   28aac:	81000017 	ldw	r4,0(r16)
   28ab0:	1505c83a 	sub	r2,r2,r20
   28ab4:	2509883a 	add	r4,r4,r20
   28ab8:	80800215 	stw	r2,8(r16)
   28abc:	81000015 	stw	r4,0(r16)
   28ac0:	103ff01e 	bne	r2,zero,28a84 <__sfvwrite_r+0x3cc>
   28ac4:	800b883a 	mov	r5,r16
   28ac8:	a809883a 	mov	r4,r21
   28acc:	0023b440 	call	23b44 <_fflush_r>
   28ad0:	103fec26 	beq	r2,zero,28a84 <__sfvwrite_r+0x3cc>
   28ad4:	003fbd06 	br	289cc <__sfvwrite_r+0x314>
   28ad8:	9825883a 	mov	r18,r19
   28adc:	982f883a 	mov	r23,r19
   28ae0:	003f6b06 	br	28890 <__sfvwrite_r+0x1d8>
   28ae4:	800b883a 	mov	r5,r16
   28ae8:	a809883a 	mov	r4,r21
   28aec:	0023b440 	call	23b44 <_fflush_r>
   28af0:	103f9826 	beq	r2,zero,28954 <__sfvwrite_r+0x29c>
   28af4:	003fb506 	br	289cc <__sfvwrite_r+0x314>
   28af8:	e00d883a 	mov	r6,fp
   28afc:	b80b883a 	mov	r5,r23
   28b00:	4009883a 	mov	r4,r8
   28b04:	0028c580 	call	28c58 <memmove>
   28b08:	80800217 	ldw	r2,8(r16)
   28b0c:	81800017 	ldw	r6,0(r16)
   28b10:	e025883a 	mov	r18,fp
   28b14:	1705c83a 	sub	r2,r2,fp
   28b18:	370d883a 	add	r6,r6,fp
   28b1c:	80800215 	stw	r2,8(r16)
   28b20:	81800015 	stw	r6,0(r16)
   28b24:	003f8806 	br	28948 <__sfvwrite_r+0x290>
   28b28:	9809883a 	mov	r4,r19
   28b2c:	003fc806 	br	28a50 <__sfvwrite_r+0x398>
   28b30:	98800044 	addi	r2,r19,1
   28b34:	1029883a 	mov	r20,r2
   28b38:	003f9106 	br	28980 <__sfvwrite_r+0x2c8>
   28b3c:	a809883a 	mov	r4,r21
   28b40:	0028d840 	call	28d84 <_realloc_r>
   28b44:	1009883a 	mov	r4,r2
   28b48:	103f491e 	bne	r2,zero,28870 <__sfvwrite_r+0x1b8>
   28b4c:	81400417 	ldw	r5,16(r16)
   28b50:	a809883a 	mov	r4,r21
   28b54:	00240f40 	call	240f4 <_free_r>
   28b58:	8080030b 	ldhu	r2,12(r16)
   28b5c:	00c00304 	movi	r3,12
   28b60:	a8c00015 	stw	r3,0(r21)
   28b64:	10bfdfcc 	andi	r2,r2,65407
   28b68:	003f9906 	br	289d0 <__sfvwrite_r+0x318>
   28b6c:	00c00304 	movi	r3,12
   28b70:	8080030b 	ldhu	r2,12(r16)
   28b74:	a8c00015 	stw	r3,0(r21)
   28b78:	003f9506 	br	289d0 <__sfvwrite_r+0x318>
   28b7c:	00bfffc4 	movi	r2,-1
   28b80:	003f5d06 	br	288f8 <__sfvwrite_r+0x240>

00028b84 <memchr>:
   28b84:	208000cc 	andi	r2,r4,3
   28b88:	280f883a 	mov	r7,r5
   28b8c:	10000e26 	beq	r2,zero,28bc8 <memchr+0x44>
   28b90:	30bfffc4 	addi	r2,r6,-1
   28b94:	30001726 	beq	r6,zero,28bf4 <memchr+0x70>
   28b98:	29803fcc 	andi	r6,r5,255
   28b9c:	00000606 	br	28bb8 <memchr+0x34>
   28ba0:	21000044 	addi	r4,r4,1
   28ba4:	20c000cc 	andi	r3,r4,3
   28ba8:	18000826 	beq	r3,zero,28bcc <memchr+0x48>
   28bac:	10bfffc4 	addi	r2,r2,-1
   28bb0:	10ffffe0 	cmpeqi	r3,r2,-1
   28bb4:	18000f1e 	bne	r3,zero,28bf4 <memchr+0x70>
   28bb8:	20c00003 	ldbu	r3,0(r4)
   28bbc:	19bff81e 	bne	r3,r6,28ba0 <memchr+0x1c>
   28bc0:	2005883a 	mov	r2,r4
   28bc4:	f800283a 	ret
   28bc8:	3005883a 	mov	r2,r6
   28bcc:	10c00128 	cmpgeui	r3,r2,4
   28bd0:	18000a1e 	bne	r3,zero,28bfc <memchr+0x78>
   28bd4:	10001f26 	beq	r2,zero,28c54 <memchr+0xd0>
   28bd8:	2087883a 	add	r3,r4,r2
   28bdc:	39803fcc 	andi	r6,r7,255
   28be0:	2005883a 	mov	r2,r4
   28be4:	11000003 	ldbu	r4,0(r2)
   28be8:	21bff626 	beq	r4,r6,28bc4 <memchr+0x40>
   28bec:	10800044 	addi	r2,r2,1
   28bf0:	18bffc1e 	bne	r3,r2,28be4 <memchr+0x60>
   28bf4:	0005883a 	mov	r2,zero
   28bf8:	f800283a 	ret
   28bfc:	2810923a 	slli	r8,r5,8
   28c00:	29403fcc 	andi	r5,r5,255
   28c04:	027fbff4 	movhi	r9,65279
   28c08:	423fffcc 	andi	r8,r8,65535
   28c0c:	414ab03a 	or	r5,r8,r5
   28c10:	2810943a 	slli	r8,r5,16
   28c14:	01a02074 	movhi	r6,32897
   28c18:	4a7fbfc4 	addi	r9,r9,-257
   28c1c:	4150b03a 	or	r8,r8,r5
   28c20:	31a02004 	addi	r6,r6,-32640
   28c24:	20c00017 	ldw	r3,0(r4)
   28c28:	40c6f03a 	xor	r3,r8,r3
   28c2c:	1a4b883a 	add	r5,r3,r9
   28c30:	00c6303a 	nor	r3,zero,r3
   28c34:	28c6703a 	and	r3,r5,r3
   28c38:	1986703a 	and	r3,r3,r6
   28c3c:	183fe61e 	bne	r3,zero,28bd8 <memchr+0x54>
   28c40:	10bfff04 	addi	r2,r2,-4
   28c44:	10c00128 	cmpgeui	r3,r2,4
   28c48:	21000104 	addi	r4,r4,4
   28c4c:	183ff51e 	bne	r3,zero,28c24 <memchr+0xa0>
   28c50:	003fe006 	br	28bd4 <memchr+0x50>
   28c54:	f800283a 	ret

00028c58 <memmove>:
   28c58:	2005883a 	mov	r2,r4
   28c5c:	29000a2e 	bgeu	r5,r4,28c88 <memmove+0x30>
   28c60:	2989883a 	add	r4,r5,r6
   28c64:	1100082e 	bgeu	r2,r4,28c88 <memmove+0x30>
   28c68:	1187883a 	add	r3,r2,r6
   28c6c:	30003e26 	beq	r6,zero,28d68 <memmove+0x110>
   28c70:	217fffc3 	ldbu	r5,-1(r4)
   28c74:	18ffffc4 	addi	r3,r3,-1
   28c78:	213fffc4 	addi	r4,r4,-1
   28c7c:	19400005 	stb	r5,0(r3)
   28c80:	10fffb1e 	bne	r2,r3,28c70 <memmove+0x18>
   28c84:	f800283a 	ret
   28c88:	30c00430 	cmpltui	r3,r6,16
   28c8c:	18000b26 	beq	r3,zero,28cbc <memmove+0x64>
   28c90:	1007883a 	mov	r3,r2
   28c94:	31ffffc4 	addi	r7,r6,-1
   28c98:	30003726 	beq	r6,zero,28d78 <memmove+0x120>
   28c9c:	39c00044 	addi	r7,r7,1
   28ca0:	29cf883a 	add	r7,r5,r7
   28ca4:	29800003 	ldbu	r6,0(r5)
   28ca8:	29400044 	addi	r5,r5,1
   28cac:	18c00044 	addi	r3,r3,1
   28cb0:	19bfffc5 	stb	r6,-1(r3)
   28cb4:	29fffb1e 	bne	r5,r7,28ca4 <memmove+0x4c>
   28cb8:	f800283a 	ret
   28cbc:	2886b03a 	or	r3,r5,r2
   28cc0:	18c000cc 	andi	r3,r3,3
   28cc4:	1800291e 	bne	r3,zero,28d6c <memmove+0x114>
   28cc8:	327ffc04 	addi	r9,r6,-16
   28ccc:	4812d13a 	srli	r9,r9,4
   28cd0:	280f883a 	mov	r7,r5
   28cd4:	1007883a 	mov	r3,r2
   28cd8:	4a400044 	addi	r9,r9,1
   28cdc:	4812913a 	slli	r9,r9,4
   28ce0:	1251883a 	add	r8,r2,r9
   28ce4:	39000017 	ldw	r4,0(r7)
   28ce8:	39c00404 	addi	r7,r7,16
   28cec:	18c00404 	addi	r3,r3,16
   28cf0:	193ffc15 	stw	r4,-16(r3)
   28cf4:	393ffd17 	ldw	r4,-12(r7)
   28cf8:	193ffd15 	stw	r4,-12(r3)
   28cfc:	393ffe17 	ldw	r4,-8(r7)
   28d00:	193ffe15 	stw	r4,-8(r3)
   28d04:	393fff17 	ldw	r4,-4(r7)
   28d08:	193fff15 	stw	r4,-4(r3)
   28d0c:	40fff51e 	bne	r8,r3,28ce4 <memmove+0x8c>
   28d10:	3100030c 	andi	r4,r6,12
   28d14:	2a4b883a 	add	r5,r5,r9
   28d18:	320003cc 	andi	r8,r6,15
   28d1c:	20001726 	beq	r4,zero,28d7c <memmove+0x124>
   28d20:	2813883a 	mov	r9,r5
   28d24:	180f883a 	mov	r7,r3
   28d28:	4a800017 	ldw	r10,0(r9)
   28d2c:	39c00104 	addi	r7,r7,4
   28d30:	41c9c83a 	sub	r4,r8,r7
   28d34:	1909883a 	add	r4,r3,r4
   28d38:	21000128 	cmpgeui	r4,r4,4
   28d3c:	3abfff15 	stw	r10,-4(r7)
   28d40:	4a400104 	addi	r9,r9,4
   28d44:	203ff81e 	bne	r4,zero,28d28 <memmove+0xd0>
   28d48:	413fff04 	addi	r4,r8,-4
   28d4c:	2008d0ba 	srli	r4,r4,2
   28d50:	318000cc 	andi	r6,r6,3
   28d54:	21000044 	addi	r4,r4,1
   28d58:	200890ba 	slli	r4,r4,2
   28d5c:	1907883a 	add	r3,r3,r4
   28d60:	290b883a 	add	r5,r5,r4
   28d64:	003fcb06 	br	28c94 <memmove+0x3c>
   28d68:	f800283a 	ret
   28d6c:	31ffffc4 	addi	r7,r6,-1
   28d70:	1007883a 	mov	r3,r2
   28d74:	003fc906 	br	28c9c <memmove+0x44>
   28d78:	f800283a 	ret
   28d7c:	400d883a 	mov	r6,r8
   28d80:	003fc406 	br	28c94 <memmove+0x3c>

00028d84 <_realloc_r>:
   28d84:	defff504 	addi	sp,sp,-44
   28d88:	dc800315 	stw	r18,12(sp)
   28d8c:	dfc00a15 	stw	ra,40(sp)
   28d90:	df000915 	stw	fp,36(sp)
   28d94:	ddc00815 	stw	r23,32(sp)
   28d98:	dd800715 	stw	r22,28(sp)
   28d9c:	dd400615 	stw	r21,24(sp)
   28da0:	dd000515 	stw	r20,20(sp)
   28da4:	dcc00415 	stw	r19,16(sp)
   28da8:	dc400215 	stw	r17,8(sp)
   28dac:	dc000115 	stw	r16,4(sp)
   28db0:	3025883a 	mov	r18,r6
   28db4:	28008b26 	beq	r5,zero,28fe4 <_realloc_r+0x260>
   28db8:	2821883a 	mov	r16,r5
   28dbc:	2027883a 	mov	r19,r4
   28dc0:	944002c4 	addi	r17,r18,11
   28dc4:	002d89c0 	call	2d89c <__malloc_lock>
   28dc8:	888005f0 	cmpltui	r2,r17,23
   28dcc:	1000521e 	bne	r2,zero,28f18 <_realloc_r+0x194>
   28dd0:	017ffe04 	movi	r5,-8
   28dd4:	8962703a 	and	r17,r17,r5
   28dd8:	8807883a 	mov	r3,r17
   28ddc:	88005116 	blt	r17,zero,28f24 <_realloc_r+0x1a0>
   28de0:	8c805036 	bltu	r17,r18,28f24 <_realloc_r+0x1a0>
   28de4:	80bfff17 	ldw	r2,-4(r16)
   28de8:	017fff04 	movi	r5,-4
   28dec:	857ffe04 	addi	r21,r16,-8
   28df0:	1168703a 	and	r20,r2,r5
   28df4:	ad2d883a 	add	r22,r21,r20
   28df8:	a0c0390e 	bge	r20,r3,28ee0 <_realloc_r+0x15c>
   28dfc:	070000f4 	movhi	fp,3
   28e00:	e702bb04 	addi	fp,fp,2796
   28e04:	e2000217 	ldw	r8,8(fp)
   28e08:	b1000117 	ldw	r4,4(r22)
   28e0c:	45808e26 	beq	r8,r22,29048 <_realloc_r+0x2c4>
   28e10:	01bfff84 	movi	r6,-2
   28e14:	218c703a 	and	r6,r4,r6
   28e18:	b18d883a 	add	r6,r22,r6
   28e1c:	31800117 	ldw	r6,4(r6)
   28e20:	3180004c 	andi	r6,r6,1
   28e24:	30004f1e 	bne	r6,zero,28f64 <_realloc_r+0x1e0>
   28e28:	2148703a 	and	r4,r4,r5
   28e2c:	a10b883a 	add	r5,r20,r4
   28e30:	28c0bf0e 	bge	r5,r3,29130 <_realloc_r+0x3ac>
   28e34:	1080004c 	andi	r2,r2,1
   28e38:	10004c1e 	bne	r2,zero,28f6c <_realloc_r+0x1e8>
   28e3c:	81fffe17 	ldw	r7,-8(r16)
   28e40:	00bfff04 	movi	r2,-4
   28e44:	a9cfc83a 	sub	r7,r21,r7
   28e48:	39400117 	ldw	r5,4(r7)
   28e4c:	288a703a 	and	r5,r5,r2
   28e50:	b0000426 	beq	r22,zero,28e64 <_realloc_r+0xe0>
   28e54:	a16f883a 	add	r23,r20,r5
   28e58:	b92f883a 	add	r23,r23,r4
   28e5c:	4580bf26 	beq	r8,r22,2915c <_realloc_r+0x3d8>
   28e60:	b8c0930e 	bge	r23,r3,290b0 <_realloc_r+0x32c>
   28e64:	38004126 	beq	r7,zero,28f6c <_realloc_r+0x1e8>
   28e68:	a16f883a 	add	r23,r20,r5
   28e6c:	b8c03f16 	blt	r23,r3,28f6c <_realloc_r+0x1e8>
   28e70:	38800317 	ldw	r2,12(r7)
   28e74:	38c00217 	ldw	r3,8(r7)
   28e78:	a1bfff04 	addi	r6,r20,-4
   28e7c:	31400968 	cmpgeui	r5,r6,37
   28e80:	18800315 	stw	r2,12(r3)
   28e84:	10c00215 	stw	r3,8(r2)
   28e88:	39000204 	addi	r4,r7,8
   28e8c:	3ded883a 	add	r22,r7,r23
   28e90:	2800941e 	bne	r5,zero,290e4 <_realloc_r+0x360>
   28e94:	30800530 	cmpltui	r2,r6,20
   28e98:	80c00017 	ldw	r3,0(r16)
   28e9c:	1000df1e 	bne	r2,zero,2921c <_realloc_r+0x498>
   28ea0:	38c00215 	stw	r3,8(r7)
   28ea4:	80c00117 	ldw	r3,4(r16)
   28ea8:	30800728 	cmpgeui	r2,r6,28
   28eac:	38c00315 	stw	r3,12(r7)
   28eb0:	1000dc1e 	bne	r2,zero,29224 <_realloc_r+0x4a0>
   28eb4:	80c00217 	ldw	r3,8(r16)
   28eb8:	38800404 	addi	r2,r7,16
   28ebc:	84000204 	addi	r16,r16,8
   28ec0:	10c00015 	stw	r3,0(r2)
   28ec4:	80c00117 	ldw	r3,4(r16)
   28ec8:	b829883a 	mov	r20,r23
   28ecc:	382b883a 	mov	r21,r7
   28ed0:	10c00115 	stw	r3,4(r2)
   28ed4:	80c00217 	ldw	r3,8(r16)
   28ed8:	2021883a 	mov	r16,r4
   28edc:	10c00215 	stw	r3,8(r2)
   28ee0:	a9800117 	ldw	r6,4(r21)
   28ee4:	a445c83a 	sub	r2,r20,r17
   28ee8:	10c00430 	cmpltui	r3,r2,16
   28eec:	3180004c 	andi	r6,r6,1
   28ef0:	18004926 	beq	r3,zero,29018 <_realloc_r+0x294>
   28ef4:	a18cb03a 	or	r6,r20,r6
   28ef8:	a9800115 	stw	r6,4(r21)
   28efc:	b0800117 	ldw	r2,4(r22)
   28f00:	10800054 	ori	r2,r2,1
   28f04:	b0800115 	stw	r2,4(r22)
   28f08:	9809883a 	mov	r4,r19
   28f0c:	002d8c00 	call	2d8c0 <__malloc_unlock>
   28f10:	8025883a 	mov	r18,r16
   28f14:	00000606 	br	28f30 <_realloc_r+0x1ac>
   28f18:	04400404 	movi	r17,16
   28f1c:	00c00404 	movi	r3,16
   28f20:	8cbfb02e 	bgeu	r17,r18,28de4 <_realloc_r+0x60>
   28f24:	00800304 	movi	r2,12
   28f28:	98800015 	stw	r2,0(r19)
   28f2c:	0025883a 	mov	r18,zero
   28f30:	9005883a 	mov	r2,r18
   28f34:	dfc00a17 	ldw	ra,40(sp)
   28f38:	df000917 	ldw	fp,36(sp)
   28f3c:	ddc00817 	ldw	r23,32(sp)
   28f40:	dd800717 	ldw	r22,28(sp)
   28f44:	dd400617 	ldw	r21,24(sp)
   28f48:	dd000517 	ldw	r20,20(sp)
   28f4c:	dcc00417 	ldw	r19,16(sp)
   28f50:	dc800317 	ldw	r18,12(sp)
   28f54:	dc400217 	ldw	r17,8(sp)
   28f58:	dc000117 	ldw	r16,4(sp)
   28f5c:	dec00b04 	addi	sp,sp,44
   28f60:	f800283a 	ret
   28f64:	1080004c 	andi	r2,r2,1
   28f68:	10006c26 	beq	r2,zero,2911c <_realloc_r+0x398>
   28f6c:	900b883a 	mov	r5,r18
   28f70:	9809883a 	mov	r4,r19
   28f74:	00213640 	call	21364 <_malloc_r>
   28f78:	1025883a 	mov	r18,r2
   28f7c:	10001626 	beq	r2,zero,28fd8 <_realloc_r+0x254>
   28f80:	80bfff17 	ldw	r2,-4(r16)
   28f84:	013fff84 	movi	r4,-2
   28f88:	90fffe04 	addi	r3,r18,-8
   28f8c:	1104703a 	and	r2,r2,r4
   28f90:	a885883a 	add	r2,r21,r2
   28f94:	10c05b26 	beq	r2,r3,29104 <_realloc_r+0x380>
   28f98:	a1bfff04 	addi	r6,r20,-4
   28f9c:	30800968 	cmpgeui	r2,r6,37
   28fa0:	10006a1e 	bne	r2,zero,2914c <_realloc_r+0x3c8>
   28fa4:	30800530 	cmpltui	r2,r6,20
   28fa8:	81000017 	ldw	r4,0(r16)
   28fac:	10003726 	beq	r2,zero,2908c <_realloc_r+0x308>
   28fb0:	9005883a 	mov	r2,r18
   28fb4:	8007883a 	mov	r3,r16
   28fb8:	11000015 	stw	r4,0(r2)
   28fbc:	19000117 	ldw	r4,4(r3)
   28fc0:	11000115 	stw	r4,4(r2)
   28fc4:	18c00217 	ldw	r3,8(r3)
   28fc8:	10c00215 	stw	r3,8(r2)
   28fcc:	800b883a 	mov	r5,r16
   28fd0:	9809883a 	mov	r4,r19
   28fd4:	00240f40 	call	240f4 <_free_r>
   28fd8:	9809883a 	mov	r4,r19
   28fdc:	002d8c00 	call	2d8c0 <__malloc_unlock>
   28fe0:	003fd306 	br	28f30 <_realloc_r+0x1ac>
   28fe4:	300b883a 	mov	r5,r6
   28fe8:	dfc00a17 	ldw	ra,40(sp)
   28fec:	df000917 	ldw	fp,36(sp)
   28ff0:	ddc00817 	ldw	r23,32(sp)
   28ff4:	dd800717 	ldw	r22,28(sp)
   28ff8:	dd400617 	ldw	r21,24(sp)
   28ffc:	dd000517 	ldw	r20,20(sp)
   29000:	dcc00417 	ldw	r19,16(sp)
   29004:	dc800317 	ldw	r18,12(sp)
   29008:	dc400217 	ldw	r17,8(sp)
   2900c:	dc000117 	ldw	r16,4(sp)
   29010:	dec00b04 	addi	sp,sp,44
   29014:	00213641 	jmpi	21364 <_malloc_r>
   29018:	344cb03a 	or	r6,r6,r17
   2901c:	a9800115 	stw	r6,4(r21)
   29020:	ac4b883a 	add	r5,r21,r17
   29024:	10800054 	ori	r2,r2,1
   29028:	28800115 	stw	r2,4(r5)
   2902c:	b0800117 	ldw	r2,4(r22)
   29030:	29400204 	addi	r5,r5,8
   29034:	9809883a 	mov	r4,r19
   29038:	10800054 	ori	r2,r2,1
   2903c:	b0800115 	stw	r2,4(r22)
   29040:	00240f40 	call	240f4 <_free_r>
   29044:	003fb006 	br	28f08 <_realloc_r+0x184>
   29048:	2148703a 	and	r4,r4,r5
   2904c:	a10b883a 	add	r5,r20,r4
   29050:	89800404 	addi	r6,r17,16
   29054:	29bf7716 	blt	r5,r6,28e34 <_realloc_r+0xb0>
   29058:	ac6b883a 	add	r21,r21,r17
   2905c:	2c45c83a 	sub	r2,r5,r17
   29060:	e5400215 	stw	r21,8(fp)
   29064:	10800054 	ori	r2,r2,1
   29068:	a8800115 	stw	r2,4(r21)
   2906c:	80bfff17 	ldw	r2,-4(r16)
   29070:	9809883a 	mov	r4,r19
   29074:	8025883a 	mov	r18,r16
   29078:	1080004c 	andi	r2,r2,1
   2907c:	1462b03a 	or	r17,r2,r17
   29080:	847fff15 	stw	r17,-4(r16)
   29084:	002d8c00 	call	2d8c0 <__malloc_unlock>
   29088:	003fa906 	br	28f30 <_realloc_r+0x1ac>
   2908c:	91000015 	stw	r4,0(r18)
   29090:	80c00117 	ldw	r3,4(r16)
   29094:	30800728 	cmpgeui	r2,r6,28
   29098:	90c00115 	stw	r3,4(r18)
   2909c:	1000551e 	bne	r2,zero,291f4 <_realloc_r+0x470>
   290a0:	81000217 	ldw	r4,8(r16)
   290a4:	80c00204 	addi	r3,r16,8
   290a8:	90800204 	addi	r2,r18,8
   290ac:	003fc206 	br	28fb8 <_realloc_r+0x234>
   290b0:	b0800317 	ldw	r2,12(r22)
   290b4:	b0c00217 	ldw	r3,8(r22)
   290b8:	a1bfff04 	addi	r6,r20,-4
   290bc:	31400968 	cmpgeui	r5,r6,37
   290c0:	18800315 	stw	r2,12(r3)
   290c4:	10c00215 	stw	r3,8(r2)
   290c8:	38c00217 	ldw	r3,8(r7)
   290cc:	38800317 	ldw	r2,12(r7)
   290d0:	39000204 	addi	r4,r7,8
   290d4:	3ded883a 	add	r22,r7,r23
   290d8:	18800315 	stw	r2,12(r3)
   290dc:	10c00215 	stw	r3,8(r2)
   290e0:	283f6c26 	beq	r5,zero,28e94 <_realloc_r+0x110>
   290e4:	800b883a 	mov	r5,r16
   290e8:	d9c00015 	stw	r7,0(sp)
   290ec:	0028c580 	call	28c58 <memmove>
   290f0:	d9c00017 	ldw	r7,0(sp)
   290f4:	1021883a 	mov	r16,r2
   290f8:	b829883a 	mov	r20,r23
   290fc:	382b883a 	mov	r21,r7
   29100:	003f7706 	br	28ee0 <_realloc_r+0x15c>
   29104:	90bfff17 	ldw	r2,-4(r18)
   29108:	00ffff04 	movi	r3,-4
   2910c:	10c4703a 	and	r2,r2,r3
   29110:	a0a9883a 	add	r20,r20,r2
   29114:	ad2d883a 	add	r22,r21,r20
   29118:	003f7106 	br	28ee0 <_realloc_r+0x15c>
   2911c:	81fffe17 	ldw	r7,-8(r16)
   29120:	a9cfc83a 	sub	r7,r21,r7
   29124:	39000117 	ldw	r4,4(r7)
   29128:	214a703a 	and	r5,r4,r5
   2912c:	003f4d06 	br	28e64 <_realloc_r+0xe0>
   29130:	b0800317 	ldw	r2,12(r22)
   29134:	b0c00217 	ldw	r3,8(r22)
   29138:	2829883a 	mov	r20,r5
   2913c:	a96d883a 	add	r22,r21,r5
   29140:	18800315 	stw	r2,12(r3)
   29144:	10c00215 	stw	r3,8(r2)
   29148:	003f6506 	br	28ee0 <_realloc_r+0x15c>
   2914c:	800b883a 	mov	r5,r16
   29150:	9009883a 	mov	r4,r18
   29154:	0028c580 	call	28c58 <memmove>
   29158:	003f9c06 	br	28fcc <_realloc_r+0x248>
   2915c:	88800404 	addi	r2,r17,16
   29160:	b8bf4016 	blt	r23,r2,28e64 <_realloc_r+0xe0>
   29164:	38800317 	ldw	r2,12(r7)
   29168:	38c00217 	ldw	r3,8(r7)
   2916c:	a1bfff04 	addi	r6,r20,-4
   29170:	31000968 	cmpgeui	r4,r6,37
   29174:	18800315 	stw	r2,12(r3)
   29178:	10c00215 	stw	r3,8(r2)
   2917c:	3c800204 	addi	r18,r7,8
   29180:	20003b1e 	bne	r4,zero,29270 <_realloc_r+0x4ec>
   29184:	30800530 	cmpltui	r2,r6,20
   29188:	80c00017 	ldw	r3,0(r16)
   2918c:	1000361e 	bne	r2,zero,29268 <_realloc_r+0x4e4>
   29190:	38c00215 	stw	r3,8(r7)
   29194:	80c00117 	ldw	r3,4(r16)
   29198:	30800728 	cmpgeui	r2,r6,28
   2919c:	38c00315 	stw	r3,12(r7)
   291a0:	1000401e 	bne	r2,zero,292a4 <_realloc_r+0x520>
   291a4:	80c00217 	ldw	r3,8(r16)
   291a8:	38800404 	addi	r2,r7,16
   291ac:	84000204 	addi	r16,r16,8
   291b0:	10c00015 	stw	r3,0(r2)
   291b4:	80c00117 	ldw	r3,4(r16)
   291b8:	10c00115 	stw	r3,4(r2)
   291bc:	80c00217 	ldw	r3,8(r16)
   291c0:	10c00215 	stw	r3,8(r2)
   291c4:	3c47883a 	add	r3,r7,r17
   291c8:	bc45c83a 	sub	r2,r23,r17
   291cc:	e0c00215 	stw	r3,8(fp)
   291d0:	10800054 	ori	r2,r2,1
   291d4:	18800115 	stw	r2,4(r3)
   291d8:	38800117 	ldw	r2,4(r7)
   291dc:	9809883a 	mov	r4,r19
   291e0:	1080004c 	andi	r2,r2,1
   291e4:	1462b03a 	or	r17,r2,r17
   291e8:	3c400115 	stw	r17,4(r7)
   291ec:	002d8c00 	call	2d8c0 <__malloc_unlock>
   291f0:	003f4f06 	br	28f30 <_realloc_r+0x1ac>
   291f4:	80800217 	ldw	r2,8(r16)
   291f8:	31800920 	cmpeqi	r6,r6,36
   291fc:	90800215 	stw	r2,8(r18)
   29200:	80800317 	ldw	r2,12(r16)
   29204:	90800315 	stw	r2,12(r18)
   29208:	81000417 	ldw	r4,16(r16)
   2920c:	30000f1e 	bne	r6,zero,2924c <_realloc_r+0x4c8>
   29210:	80c00404 	addi	r3,r16,16
   29214:	90800404 	addi	r2,r18,16
   29218:	003f6706 	br	28fb8 <_realloc_r+0x234>
   2921c:	2005883a 	mov	r2,r4
   29220:	003f2706 	br	28ec0 <_realloc_r+0x13c>
   29224:	80800217 	ldw	r2,8(r16)
   29228:	31800920 	cmpeqi	r6,r6,36
   2922c:	38800415 	stw	r2,16(r7)
   29230:	80800317 	ldw	r2,12(r16)
   29234:	38800515 	stw	r2,20(r7)
   29238:	80c00417 	ldw	r3,16(r16)
   2923c:	3000121e 	bne	r6,zero,29288 <_realloc_r+0x504>
   29240:	38800604 	addi	r2,r7,24
   29244:	84000404 	addi	r16,r16,16
   29248:	003f1d06 	br	28ec0 <_realloc_r+0x13c>
   2924c:	91000415 	stw	r4,16(r18)
   29250:	81000517 	ldw	r4,20(r16)
   29254:	80c00604 	addi	r3,r16,24
   29258:	90800604 	addi	r2,r18,24
   2925c:	91000515 	stw	r4,20(r18)
   29260:	81000617 	ldw	r4,24(r16)
   29264:	003f5406 	br	28fb8 <_realloc_r+0x234>
   29268:	9005883a 	mov	r2,r18
   2926c:	003fd006 	br	291b0 <_realloc_r+0x42c>
   29270:	800b883a 	mov	r5,r16
   29274:	9009883a 	mov	r4,r18
   29278:	d9c00015 	stw	r7,0(sp)
   2927c:	0028c580 	call	28c58 <memmove>
   29280:	d9c00017 	ldw	r7,0(sp)
   29284:	003fcf06 	br	291c4 <_realloc_r+0x440>
   29288:	84000604 	addi	r16,r16,24
   2928c:	38c00615 	stw	r3,24(r7)
   29290:	80ffff17 	ldw	r3,-4(r16)
   29294:	38800804 	addi	r2,r7,32
   29298:	38c00715 	stw	r3,28(r7)
   2929c:	80c00017 	ldw	r3,0(r16)
   292a0:	003f0706 	br	28ec0 <_realloc_r+0x13c>
   292a4:	80800217 	ldw	r2,8(r16)
   292a8:	31800920 	cmpeqi	r6,r6,36
   292ac:	38800415 	stw	r2,16(r7)
   292b0:	80800317 	ldw	r2,12(r16)
   292b4:	38800515 	stw	r2,20(r7)
   292b8:	80c00417 	ldw	r3,16(r16)
   292bc:	3000031e 	bne	r6,zero,292cc <_realloc_r+0x548>
   292c0:	38800604 	addi	r2,r7,24
   292c4:	84000404 	addi	r16,r16,16
   292c8:	003fb906 	br	291b0 <_realloc_r+0x42c>
   292cc:	84000604 	addi	r16,r16,24
   292d0:	38c00615 	stw	r3,24(r7)
   292d4:	80ffff17 	ldw	r3,-4(r16)
   292d8:	38800804 	addi	r2,r7,32
   292dc:	38c00715 	stw	r3,28(r7)
   292e0:	80c00017 	ldw	r3,0(r16)
   292e4:	003fb206 	br	291b0 <_realloc_r+0x42c>

000292e8 <__swbuf_r>:
   292e8:	defffb04 	addi	sp,sp,-20
   292ec:	dcc00315 	stw	r19,12(sp)
   292f0:	dc400115 	stw	r17,4(sp)
   292f4:	dc000015 	stw	r16,0(sp)
   292f8:	dfc00415 	stw	ra,16(sp)
   292fc:	dc800215 	stw	r18,8(sp)
   29300:	2027883a 	mov	r19,r4
   29304:	2823883a 	mov	r17,r5
   29308:	3021883a 	mov	r16,r6
   2930c:	20000226 	beq	r4,zero,29318 <__swbuf_r+0x30>
   29310:	20800e17 	ldw	r2,56(r4)
   29314:	10003e26 	beq	r2,zero,29410 <__swbuf_r+0x128>
   29318:	80800617 	ldw	r2,24(r16)
   2931c:	80c0030b 	ldhu	r3,12(r16)
   29320:	80800215 	stw	r2,8(r16)
   29324:	1880020c 	andi	r2,r3,8
   29328:	10001f26 	beq	r2,zero,293a8 <__swbuf_r+0xc0>
   2932c:	80800417 	ldw	r2,16(r16)
   29330:	10001d26 	beq	r2,zero,293a8 <__swbuf_r+0xc0>
   29334:	1948000c 	andi	r5,r3,8192
   29338:	8c803fcc 	andi	r18,r17,255
   2933c:	28002326 	beq	r5,zero,293cc <__swbuf_r+0xe4>
   29340:	80c00017 	ldw	r3,0(r16)
   29344:	81000517 	ldw	r4,20(r16)
   29348:	1885c83a 	sub	r2,r3,r2
   2934c:	1100290e 	bge	r2,r4,293f4 <__swbuf_r+0x10c>
   29350:	10800044 	addi	r2,r2,1
   29354:	81400217 	ldw	r5,8(r16)
   29358:	19000044 	addi	r4,r3,1
   2935c:	81000015 	stw	r4,0(r16)
   29360:	297fffc4 	addi	r5,r5,-1
   29364:	81400215 	stw	r5,8(r16)
   29368:	1c400005 	stb	r17,0(r3)
   2936c:	80c00517 	ldw	r3,20(r16)
   29370:	18802926 	beq	r3,r2,29418 <__swbuf_r+0x130>
   29374:	8080030b 	ldhu	r2,12(r16)
   29378:	1080004c 	andi	r2,r2,1
   2937c:	10000226 	beq	r2,zero,29388 <__swbuf_r+0xa0>
   29380:	90800298 	cmpnei	r2,r18,10
   29384:	10002426 	beq	r2,zero,29418 <__swbuf_r+0x130>
   29388:	9005883a 	mov	r2,r18
   2938c:	dfc00417 	ldw	ra,16(sp)
   29390:	dcc00317 	ldw	r19,12(sp)
   29394:	dc800217 	ldw	r18,8(sp)
   29398:	dc400117 	ldw	r17,4(sp)
   2939c:	dc000017 	ldw	r16,0(sp)
   293a0:	dec00504 	addi	sp,sp,20
   293a4:	f800283a 	ret
   293a8:	800b883a 	mov	r5,r16
   293ac:	9809883a 	mov	r4,r19
   293b0:	002835c0 	call	2835c <__swsetup_r>
   293b4:	10001c1e 	bne	r2,zero,29428 <__swbuf_r+0x140>
   293b8:	80c0030b 	ldhu	r3,12(r16)
   293bc:	80800417 	ldw	r2,16(r16)
   293c0:	8c803fcc 	andi	r18,r17,255
   293c4:	1948000c 	andi	r5,r3,8192
   293c8:	283fdd1e 	bne	r5,zero,29340 <__swbuf_r+0x58>
   293cc:	81001917 	ldw	r4,100(r16)
   293d0:	18c80014 	ori	r3,r3,8192
   293d4:	0177ffc4 	movi	r5,-8193
   293d8:	2148703a 	and	r4,r4,r5
   293dc:	80c0030d 	sth	r3,12(r16)
   293e0:	80c00017 	ldw	r3,0(r16)
   293e4:	81001915 	stw	r4,100(r16)
   293e8:	81000517 	ldw	r4,20(r16)
   293ec:	1885c83a 	sub	r2,r3,r2
   293f0:	113fd716 	blt	r2,r4,29350 <__swbuf_r+0x68>
   293f4:	800b883a 	mov	r5,r16
   293f8:	9809883a 	mov	r4,r19
   293fc:	0023b440 	call	23b44 <_fflush_r>
   29400:	1000091e 	bne	r2,zero,29428 <__swbuf_r+0x140>
   29404:	80c00017 	ldw	r3,0(r16)
   29408:	00800044 	movi	r2,1
   2940c:	003fd106 	br	29354 <__swbuf_r+0x6c>
   29410:	0023ed80 	call	23ed8 <__sinit>
   29414:	003fc006 	br	29318 <__swbuf_r+0x30>
   29418:	800b883a 	mov	r5,r16
   2941c:	9809883a 	mov	r4,r19
   29420:	0023b440 	call	23b44 <_fflush_r>
   29424:	103fd826 	beq	r2,zero,29388 <__swbuf_r+0xa0>
   29428:	04bfffc4 	movi	r18,-1
   2942c:	003fd606 	br	29388 <__swbuf_r+0xa0>

00029430 <__swbuf>:
   29430:	00c000f4 	movhi	r3,3
   29434:	2005883a 	mov	r2,r4
   29438:	1908aa17 	ldw	r4,8872(r3)
   2943c:	280d883a 	mov	r6,r5
   29440:	100b883a 	mov	r5,r2
   29444:	00292e81 	jmpi	292e8 <__swbuf_r>

00029448 <_wcrtomb_r>:
   29448:	defffa04 	addi	sp,sp,-24
   2944c:	dc400415 	stw	r17,16(sp)
   29450:	dc000315 	stw	r16,12(sp)
   29454:	008000f4 	movhi	r2,3
   29458:	dfc00515 	stw	ra,20(sp)
   2945c:	1083f517 	ldw	r2,4052(r2)
   29460:	2023883a 	mov	r17,r4
   29464:	3821883a 	mov	r16,r7
   29468:	28000826 	beq	r5,zero,2948c <_wcrtomb_r+0x44>
   2946c:	103ee83a 	callr	r2
   29470:	10ffffd8 	cmpnei	r3,r2,-1
   29474:	18000a26 	beq	r3,zero,294a0 <_wcrtomb_r+0x58>
   29478:	dfc00517 	ldw	ra,20(sp)
   2947c:	dc400417 	ldw	r17,16(sp)
   29480:	dc000317 	ldw	r16,12(sp)
   29484:	dec00604 	addi	sp,sp,24
   29488:	f800283a 	ret
   2948c:	000d883a 	mov	r6,zero
   29490:	d9400084 	addi	r5,sp,2
   29494:	103ee83a 	callr	r2
   29498:	10ffffd8 	cmpnei	r3,r2,-1
   2949c:	183ff61e 	bne	r3,zero,29478 <_wcrtomb_r+0x30>
   294a0:	00802284 	movi	r2,138
   294a4:	80000015 	stw	zero,0(r16)
   294a8:	88800015 	stw	r2,0(r17)
   294ac:	00bfffc4 	movi	r2,-1
   294b0:	003ff106 	br	29478 <_wcrtomb_r+0x30>

000294b4 <wcrtomb>:
   294b4:	defffa04 	addi	sp,sp,-24
   294b8:	00c000f4 	movhi	r3,3
   294bc:	dc400415 	stw	r17,16(sp)
   294c0:	dc000315 	stw	r16,12(sp)
   294c4:	1c48aa17 	ldw	r17,8872(r3)
   294c8:	dfc00515 	stw	ra,20(sp)
   294cc:	00c000f4 	movhi	r3,3
   294d0:	18c3f517 	ldw	r3,4052(r3)
   294d4:	3021883a 	mov	r16,r6
   294d8:	20000c26 	beq	r4,zero,2950c <wcrtomb+0x58>
   294dc:	280d883a 	mov	r6,r5
   294e0:	800f883a 	mov	r7,r16
   294e4:	200b883a 	mov	r5,r4
   294e8:	8809883a 	mov	r4,r17
   294ec:	183ee83a 	callr	r3
   294f0:	10ffffd8 	cmpnei	r3,r2,-1
   294f4:	18000c26 	beq	r3,zero,29528 <wcrtomb+0x74>
   294f8:	dfc00517 	ldw	ra,20(sp)
   294fc:	dc400417 	ldw	r17,16(sp)
   29500:	dc000317 	ldw	r16,12(sp)
   29504:	dec00604 	addi	sp,sp,24
   29508:	f800283a 	ret
   2950c:	300f883a 	mov	r7,r6
   29510:	d9400084 	addi	r5,sp,2
   29514:	000d883a 	mov	r6,zero
   29518:	8809883a 	mov	r4,r17
   2951c:	183ee83a 	callr	r3
   29520:	10ffffd8 	cmpnei	r3,r2,-1
   29524:	183ff41e 	bne	r3,zero,294f8 <wcrtomb+0x44>
   29528:	00802284 	movi	r2,138
   2952c:	80000015 	stw	zero,0(r16)
   29530:	88800015 	stw	r2,0(r17)
   29534:	00bfffc4 	movi	r2,-1
   29538:	003fef06 	br	294f8 <wcrtomb+0x44>

0002953c <__fixunsdfsi>:
   2953c:	defffd04 	addi	sp,sp,-12
   29540:	000d883a 	mov	r6,zero
   29544:	01d07834 	movhi	r7,16864
   29548:	dc400115 	stw	r17,4(sp)
   2954c:	dc000015 	stw	r16,0(sp)
   29550:	dfc00215 	stw	ra,8(sp)
   29554:	2023883a 	mov	r17,r4
   29558:	2821883a 	mov	r16,r5
   2955c:	002b9900 	call	2b990 <__gedf2>
   29560:	1000080e 	bge	r2,zero,29584 <__fixunsdfsi+0x48>
   29564:	8809883a 	mov	r4,r17
   29568:	800b883a 	mov	r5,r16
   2956c:	00209e00 	call	209e0 <__fixdfsi>
   29570:	dfc00217 	ldw	ra,8(sp)
   29574:	dc400117 	ldw	r17,4(sp)
   29578:	dc000017 	ldw	r16,0(sp)
   2957c:	dec00304 	addi	sp,sp,12
   29580:	f800283a 	ret
   29584:	000d883a 	mov	r6,zero
   29588:	01d07834 	movhi	r7,16864
   2958c:	8809883a 	mov	r4,r17
   29590:	800b883a 	mov	r5,r16
   29594:	002c3180 	call	2c318 <__subdf3>
   29598:	180b883a 	mov	r5,r3
   2959c:	1009883a 	mov	r4,r2
   295a0:	00209e00 	call	209e0 <__fixdfsi>
   295a4:	00e00034 	movhi	r3,32768
   295a8:	10c5883a 	add	r2,r2,r3
   295ac:	003ff006 	br	29570 <__fixunsdfsi+0x34>

000295b0 <__fixdfdi>:
   295b0:	defffd04 	addi	sp,sp,-12
   295b4:	000d883a 	mov	r6,zero
   295b8:	000f883a 	mov	r7,zero
   295bc:	dc400115 	stw	r17,4(sp)
   295c0:	dc000015 	stw	r16,0(sp)
   295c4:	dfc00215 	stw	ra,8(sp)
   295c8:	2023883a 	mov	r17,r4
   295cc:	2821883a 	mov	r16,r5
   295d0:	002ba800 	call	2ba80 <__ledf2>
   295d4:	10000716 	blt	r2,zero,295f4 <__fixdfdi+0x44>
   295d8:	8809883a 	mov	r4,r17
   295dc:	800b883a 	mov	r5,r16
   295e0:	dfc00217 	ldw	ra,8(sp)
   295e4:	dc400117 	ldw	r17,4(sp)
   295e8:	dc000017 	ldw	r16,0(sp)
   295ec:	dec00304 	addi	sp,sp,12
   295f0:	00296241 	jmpi	29624 <__fixunsdfdi>
   295f4:	8809883a 	mov	r4,r17
   295f8:	8160003c 	xorhi	r5,r16,32768
   295fc:	00296240 	call	29624 <__fixunsdfdi>
   29600:	1008c03a 	cmpne	r4,r2,zero
   29604:	00c7c83a 	sub	r3,zero,r3
   29608:	0085c83a 	sub	r2,zero,r2
   2960c:	1907c83a 	sub	r3,r3,r4
   29610:	dfc00217 	ldw	ra,8(sp)
   29614:	dc400117 	ldw	r17,4(sp)
   29618:	dc000017 	ldw	r16,0(sp)
   2961c:	dec00304 	addi	sp,sp,12
   29620:	f800283a 	ret

00029624 <__fixunsdfdi>:
   29624:	defffc04 	addi	sp,sp,-16
   29628:	000d883a 	mov	r6,zero
   2962c:	01cf7c34 	movhi	r7,15856
   29630:	dfc00315 	stw	ra,12(sp)
   29634:	dc800215 	stw	r18,8(sp)
   29638:	dc400115 	stw	r17,4(sp)
   2963c:	dc000015 	stw	r16,0(sp)
   29640:	2025883a 	mov	r18,r4
   29644:	2823883a 	mov	r17,r5
   29648:	002bb700 	call	2bb70 <__muldf3>
   2964c:	180b883a 	mov	r5,r3
   29650:	1009883a 	mov	r4,r2
   29654:	002953c0 	call	2953c <__fixunsdfsi>
   29658:	1009883a 	mov	r4,r2
   2965c:	1021883a 	mov	r16,r2
   29660:	002cd5c0 	call	2cd5c <__floatunsidf>
   29664:	000d883a 	mov	r6,zero
   29668:	01d07c34 	movhi	r7,16880
   2966c:	1009883a 	mov	r4,r2
   29670:	180b883a 	mov	r5,r3
   29674:	002bb700 	call	2bb70 <__muldf3>
   29678:	100d883a 	mov	r6,r2
   2967c:	180f883a 	mov	r7,r3
   29680:	9009883a 	mov	r4,r18
   29684:	880b883a 	mov	r5,r17
   29688:	002c3180 	call	2c318 <__subdf3>
   2968c:	180b883a 	mov	r5,r3
   29690:	1009883a 	mov	r4,r2
   29694:	002953c0 	call	2953c <__fixunsdfsi>
   29698:	8007883a 	mov	r3,r16
   2969c:	dfc00317 	ldw	ra,12(sp)
   296a0:	dc800217 	ldw	r18,8(sp)
   296a4:	dc400117 	ldw	r17,4(sp)
   296a8:	dc000017 	ldw	r16,0(sp)
   296ac:	dec00404 	addi	sp,sp,16
   296b0:	f800283a 	ret

000296b4 <__floatdidf>:
   296b4:	defffc04 	addi	sp,sp,-16
   296b8:	dc800215 	stw	r18,8(sp)
   296bc:	2025883a 	mov	r18,r4
   296c0:	2809883a 	mov	r4,r5
   296c4:	dfc00315 	stw	ra,12(sp)
   296c8:	dc400115 	stw	r17,4(sp)
   296cc:	dc000015 	stw	r16,0(sp)
   296d0:	002cca00 	call	2cca0 <__floatsidf>
   296d4:	000d883a 	mov	r6,zero
   296d8:	01d07c34 	movhi	r7,16880
   296dc:	180b883a 	mov	r5,r3
   296e0:	1009883a 	mov	r4,r2
   296e4:	002bb700 	call	2bb70 <__muldf3>
   296e8:	9009883a 	mov	r4,r18
   296ec:	1023883a 	mov	r17,r2
   296f0:	1821883a 	mov	r16,r3
   296f4:	002cd5c0 	call	2cd5c <__floatunsidf>
   296f8:	880d883a 	mov	r6,r17
   296fc:	800f883a 	mov	r7,r16
   29700:	1009883a 	mov	r4,r2
   29704:	180b883a 	mov	r5,r3
   29708:	002a6640 	call	2a664 <__adddf3>
   2970c:	dfc00317 	ldw	ra,12(sp)
   29710:	dc800217 	ldw	r18,8(sp)
   29714:	dc400117 	ldw	r17,4(sp)
   29718:	dc000017 	ldw	r16,0(sp)
   2971c:	dec00404 	addi	sp,sp,16
   29720:	f800283a 	ret

00029724 <__udivdi3>:
   29724:	defff504 	addi	sp,sp,-44
   29728:	dd000515 	stw	r20,20(sp)
   2972c:	dc800315 	stw	r18,12(sp)
   29730:	dfc00a15 	stw	ra,40(sp)
   29734:	df000915 	stw	fp,36(sp)
   29738:	ddc00815 	stw	r23,32(sp)
   2973c:	dd800715 	stw	r22,28(sp)
   29740:	dd400615 	stw	r21,24(sp)
   29744:	dcc00415 	stw	r19,16(sp)
   29748:	dc400215 	stw	r17,8(sp)
   2974c:	dc000115 	stw	r16,4(sp)
   29750:	2029883a 	mov	r20,r4
   29754:	2825883a 	mov	r18,r5
   29758:	3800461e 	bne	r7,zero,29874 <__udivdi3+0x150>
   2975c:	3823883a 	mov	r17,r7
   29760:	3021883a 	mov	r16,r6
   29764:	2027883a 	mov	r19,r4
   29768:	2980622e 	bgeu	r5,r6,298f4 <__udivdi3+0x1d0>
   2976c:	00bfffd4 	movui	r2,65535
   29770:	282b883a 	mov	r21,r5
   29774:	1180aa2e 	bgeu	r2,r6,29a20 <__udivdi3+0x2fc>
   29778:	00804034 	movhi	r2,256
   2977c:	30815936 	bltu	r6,r2,29ce4 <__udivdi3+0x5c0>
   29780:	3006d63a 	srli	r3,r6,24
   29784:	04400604 	movi	r17,24
   29788:	008000f4 	movhi	r2,3
   2978c:	1885883a 	add	r2,r3,r2
   29790:	11015803 	ldbu	r4,1376(r2)
   29794:	00800804 	movi	r2,32
   29798:	2463883a 	add	r17,r4,r17
   2979c:	1449c83a 	sub	r4,r2,r17
   297a0:	14400526 	beq	r2,r17,297b8 <__udivdi3+0x94>
   297a4:	9106983a 	sll	r3,r18,r4
   297a8:	a462d83a 	srl	r17,r20,r17
   297ac:	3120983a 	sll	r16,r6,r4
   297b0:	a126983a 	sll	r19,r20,r4
   297b4:	88eab03a 	or	r21,r17,r3
   297b8:	802cd43a 	srli	r22,r16,16
   297bc:	a809883a 	mov	r4,r21
   297c0:	853fffcc 	andi	r20,r16,65535
   297c4:	b00b883a 	mov	r5,r22
   297c8:	002a45c0 	call	2a45c <__umodsi3>
   297cc:	a809883a 	mov	r4,r21
   297d0:	b00b883a 	mov	r5,r22
   297d4:	1025883a 	mov	r18,r2
   297d8:	002a3f80 	call	2a3f8 <__udivsi3>
   297dc:	a009883a 	mov	r4,r20
   297e0:	100b883a 	mov	r5,r2
   297e4:	102b883a 	mov	r21,r2
   297e8:	002a4b80 	call	2a4b8 <__mulsi3>
   297ec:	9024943a 	slli	r18,r18,16
   297f0:	9808d43a 	srli	r4,r19,16
   297f4:	9108b03a 	or	r4,r18,r4
   297f8:	2080052e 	bgeu	r4,r2,29810 <__udivdi3+0xec>
   297fc:	2409883a 	add	r4,r4,r16
   29800:	a8ffffc4 	addi	r3,r21,-1
   29804:	24000136 	bltu	r4,r16,2980c <__udivdi3+0xe8>
   29808:	20814736 	bltu	r4,r2,29d28 <__udivdi3+0x604>
   2980c:	182b883a 	mov	r21,r3
   29810:	20a3c83a 	sub	r17,r4,r2
   29814:	8809883a 	mov	r4,r17
   29818:	b00b883a 	mov	r5,r22
   2981c:	002a45c0 	call	2a45c <__umodsi3>
   29820:	8809883a 	mov	r4,r17
   29824:	1023883a 	mov	r17,r2
   29828:	b00b883a 	mov	r5,r22
   2982c:	8822943a 	slli	r17,r17,16
   29830:	002a3f80 	call	2a3f8 <__udivsi3>
   29834:	100b883a 	mov	r5,r2
   29838:	a009883a 	mov	r4,r20
   2983c:	9cffffcc 	andi	r19,r19,65535
   29840:	1025883a 	mov	r18,r2
   29844:	8ce6b03a 	or	r19,r17,r19
   29848:	002a4b80 	call	2a4b8 <__mulsi3>
   2984c:	9880052e 	bgeu	r19,r2,29864 <__udivdi3+0x140>
   29850:	84e7883a 	add	r19,r16,r19
   29854:	90ffffc4 	addi	r3,r18,-1
   29858:	9c000136 	bltu	r19,r16,29860 <__udivdi3+0x13c>
   2985c:	98813036 	bltu	r19,r2,29d20 <__udivdi3+0x5fc>
   29860:	1825883a 	mov	r18,r3
   29864:	a80c943a 	slli	r6,r21,16
   29868:	0007883a 	mov	r3,zero
   2986c:	3484b03a 	or	r2,r6,r18
   29870:	00000306 	br	29880 <__udivdi3+0x15c>
   29874:	29c00e2e 	bgeu	r5,r7,298b0 <__udivdi3+0x18c>
   29878:	0007883a 	mov	r3,zero
   2987c:	0005883a 	mov	r2,zero
   29880:	dfc00a17 	ldw	ra,40(sp)
   29884:	df000917 	ldw	fp,36(sp)
   29888:	ddc00817 	ldw	r23,32(sp)
   2988c:	dd800717 	ldw	r22,28(sp)
   29890:	dd400617 	ldw	r21,24(sp)
   29894:	dd000517 	ldw	r20,20(sp)
   29898:	dcc00417 	ldw	r19,16(sp)
   2989c:	dc800317 	ldw	r18,12(sp)
   298a0:	dc400217 	ldw	r17,8(sp)
   298a4:	dc000117 	ldw	r16,4(sp)
   298a8:	dec00b04 	addi	sp,sp,44
   298ac:	f800283a 	ret
   298b0:	00bfffd4 	movui	r2,65535
   298b4:	11c05f2e 	bgeu	r2,r7,29a34 <__udivdi3+0x310>
   298b8:	00804034 	movhi	r2,256
   298bc:	3880fb36 	bltu	r7,r2,29cac <__udivdi3+0x588>
   298c0:	3806d63a 	srli	r3,r7,24
   298c4:	01000604 	movi	r4,24
   298c8:	008000f4 	movhi	r2,3
   298cc:	1885883a 	add	r2,r3,r2
   298d0:	10c15803 	ldbu	r3,1376(r2)
   298d4:	00800804 	movi	r2,32
   298d8:	1907883a 	add	r3,r3,r4
   298dc:	10e3c83a 	sub	r17,r2,r3
   298e0:	10c0901e 	bne	r2,r3,29b24 <__udivdi3+0x400>
   298e4:	3c80f636 	bltu	r7,r18,29cc0 <__udivdi3+0x59c>
   298e8:	a185403a 	cmpgeu	r2,r20,r6
   298ec:	0007883a 	mov	r3,zero
   298f0:	003fe306 	br	29880 <__udivdi3+0x15c>
   298f4:	3000041e 	bne	r6,zero,29908 <__udivdi3+0x1e4>
   298f8:	000b883a 	mov	r5,zero
   298fc:	01000044 	movi	r4,1
   29900:	002a3f80 	call	2a3f8 <__udivsi3>
   29904:	1021883a 	mov	r16,r2
   29908:	00bfffd4 	movui	r2,65535
   2990c:	14003f2e 	bgeu	r2,r16,29a0c <__udivdi3+0x2e8>
   29910:	00804034 	movhi	r2,256
   29914:	8080f036 	bltu	r16,r2,29cd8 <__udivdi3+0x5b4>
   29918:	8006d63a 	srli	r3,r16,24
   2991c:	04400604 	movi	r17,24
   29920:	008000f4 	movhi	r2,3
   29924:	1885883a 	add	r2,r3,r2
   29928:	10815803 	ldbu	r2,1376(r2)
   2992c:	00c00804 	movi	r3,32
   29930:	1463883a 	add	r17,r2,r17
   29934:	1c45c83a 	sub	r2,r3,r17
   29938:	1c40431e 	bne	r3,r17,29a48 <__udivdi3+0x324>
   2993c:	802cd43a 	srli	r22,r16,16
   29940:	9423c83a 	sub	r17,r18,r16
   29944:	853fffcc 	andi	r20,r16,65535
   29948:	00c00044 	movi	r3,1
   2994c:	b00b883a 	mov	r5,r22
   29950:	8809883a 	mov	r4,r17
   29954:	d8c00015 	stw	r3,0(sp)
   29958:	002a45c0 	call	2a45c <__umodsi3>
   2995c:	b00b883a 	mov	r5,r22
   29960:	8809883a 	mov	r4,r17
   29964:	1025883a 	mov	r18,r2
   29968:	002a3f80 	call	2a3f8 <__udivsi3>
   2996c:	1009883a 	mov	r4,r2
   29970:	a00b883a 	mov	r5,r20
   29974:	102b883a 	mov	r21,r2
   29978:	002a4b80 	call	2a4b8 <__mulsi3>
   2997c:	9024943a 	slli	r18,r18,16
   29980:	9808d43a 	srli	r4,r19,16
   29984:	d8c00017 	ldw	r3,0(sp)
   29988:	9108b03a 	or	r4,r18,r4
   2998c:	2080052e 	bgeu	r4,r2,299a4 <__udivdi3+0x280>
   29990:	2409883a 	add	r4,r4,r16
   29994:	a97fffc4 	addi	r5,r21,-1
   29998:	24000136 	bltu	r4,r16,299a0 <__udivdi3+0x27c>
   2999c:	2080e536 	bltu	r4,r2,29d34 <__udivdi3+0x610>
   299a0:	282b883a 	mov	r21,r5
   299a4:	20a3c83a 	sub	r17,r4,r2
   299a8:	8809883a 	mov	r4,r17
   299ac:	b00b883a 	mov	r5,r22
   299b0:	d8c00015 	stw	r3,0(sp)
   299b4:	002a45c0 	call	2a45c <__umodsi3>
   299b8:	8809883a 	mov	r4,r17
   299bc:	1023883a 	mov	r17,r2
   299c0:	b00b883a 	mov	r5,r22
   299c4:	8822943a 	slli	r17,r17,16
   299c8:	002a3f80 	call	2a3f8 <__udivsi3>
   299cc:	a00b883a 	mov	r5,r20
   299d0:	1009883a 	mov	r4,r2
   299d4:	9cffffcc 	andi	r19,r19,65535
   299d8:	1025883a 	mov	r18,r2
   299dc:	8ce6b03a 	or	r19,r17,r19
   299e0:	002a4b80 	call	2a4b8 <__mulsi3>
   299e4:	d8c00017 	ldw	r3,0(sp)
   299e8:	9880052e 	bgeu	r19,r2,29a00 <__udivdi3+0x2dc>
   299ec:	84e7883a 	add	r19,r16,r19
   299f0:	913fffc4 	addi	r4,r18,-1
   299f4:	9c000136 	bltu	r19,r16,299fc <__udivdi3+0x2d8>
   299f8:	9880c736 	bltu	r19,r2,29d18 <__udivdi3+0x5f4>
   299fc:	2025883a 	mov	r18,r4
   29a00:	a80c943a 	slli	r6,r21,16
   29a04:	3484b03a 	or	r2,r6,r18
   29a08:	003f9d06 	br	29880 <__udivdi3+0x15c>
   29a0c:	80804030 	cmpltui	r2,r16,256
   29a10:	1000b71e 	bne	r2,zero,29cf0 <__udivdi3+0x5cc>
   29a14:	8006d23a 	srli	r3,r16,8
   29a18:	04400204 	movi	r17,8
   29a1c:	003fc006 	br	29920 <__udivdi3+0x1fc>
   29a20:	30804030 	cmpltui	r2,r6,256
   29a24:	1000a41e 	bne	r2,zero,29cb8 <__udivdi3+0x594>
   29a28:	3006d23a 	srli	r3,r6,8
   29a2c:	04400204 	movi	r17,8
   29a30:	003f5506 	br	29788 <__udivdi3+0x64>
   29a34:	38804030 	cmpltui	r2,r7,256
   29a38:	1000a41e 	bne	r2,zero,29ccc <__udivdi3+0x5a8>
   29a3c:	3806d23a 	srli	r3,r7,8
   29a40:	01000204 	movi	r4,8
   29a44:	003fa006 	br	298c8 <__udivdi3+0x1a4>
   29a48:	80a0983a 	sll	r16,r16,r2
   29a4c:	946ed83a 	srl	r23,r18,r17
   29a50:	9086983a 	sll	r3,r18,r2
   29a54:	802cd43a 	srli	r22,r16,16
   29a58:	a462d83a 	srl	r17,r20,r17
   29a5c:	b809883a 	mov	r4,r23
   29a60:	b00b883a 	mov	r5,r22
   29a64:	88eab03a 	or	r21,r17,r3
   29a68:	a0a6983a 	sll	r19,r20,r2
   29a6c:	002a45c0 	call	2a45c <__umodsi3>
   29a70:	b809883a 	mov	r4,r23
   29a74:	b00b883a 	mov	r5,r22
   29a78:	1025883a 	mov	r18,r2
   29a7c:	853fffcc 	andi	r20,r16,65535
   29a80:	002a3f80 	call	2a3f8 <__udivsi3>
   29a84:	a009883a 	mov	r4,r20
   29a88:	100b883a 	mov	r5,r2
   29a8c:	102f883a 	mov	r23,r2
   29a90:	002a4b80 	call	2a4b8 <__mulsi3>
   29a94:	9024943a 	slli	r18,r18,16
   29a98:	a808d43a 	srli	r4,r21,16
   29a9c:	9108b03a 	or	r4,r18,r4
   29aa0:	2080062e 	bgeu	r4,r2,29abc <__udivdi3+0x398>
   29aa4:	2409883a 	add	r4,r4,r16
   29aa8:	b8ffffc4 	addi	r3,r23,-1
   29aac:	24009836 	bltu	r4,r16,29d10 <__udivdi3+0x5ec>
   29ab0:	2080972e 	bgeu	r4,r2,29d10 <__udivdi3+0x5ec>
   29ab4:	bdffff84 	addi	r23,r23,-2
   29ab8:	2409883a 	add	r4,r4,r16
   29abc:	20a3c83a 	sub	r17,r4,r2
   29ac0:	8809883a 	mov	r4,r17
   29ac4:	b00b883a 	mov	r5,r22
   29ac8:	002a45c0 	call	2a45c <__umodsi3>
   29acc:	1025883a 	mov	r18,r2
   29ad0:	8809883a 	mov	r4,r17
   29ad4:	b00b883a 	mov	r5,r22
   29ad8:	9024943a 	slli	r18,r18,16
   29adc:	002a3f80 	call	2a3f8 <__udivsi3>
   29ae0:	100b883a 	mov	r5,r2
   29ae4:	a009883a 	mov	r4,r20
   29ae8:	ac7fffcc 	andi	r17,r21,65535
   29aec:	1039883a 	mov	fp,r2
   29af0:	9462b03a 	or	r17,r18,r17
   29af4:	002a4b80 	call	2a4b8 <__mulsi3>
   29af8:	8880062e 	bgeu	r17,r2,29b14 <__udivdi3+0x3f0>
   29afc:	8c23883a 	add	r17,r17,r16
   29b00:	e0ffffc4 	addi	r3,fp,-1
   29b04:	8c007e36 	bltu	r17,r16,29d00 <__udivdi3+0x5dc>
   29b08:	88807d2e 	bgeu	r17,r2,29d00 <__udivdi3+0x5dc>
   29b0c:	e73fff84 	addi	fp,fp,-2
   29b10:	8c23883a 	add	r17,r17,r16
   29b14:	b806943a 	slli	r3,r23,16
   29b18:	88a3c83a 	sub	r17,r17,r2
   29b1c:	1f06b03a 	or	r3,r3,fp
   29b20:	003f8a06 	br	2994c <__udivdi3+0x228>
   29b24:	30e6d83a 	srl	r19,r6,r3
   29b28:	3c4e983a 	sll	r7,r7,r17
   29b2c:	90e0d83a 	srl	r16,r18,r3
   29b30:	a0c4d83a 	srl	r2,r20,r3
   29b34:	99e6b03a 	or	r19,r19,r7
   29b38:	9446983a 	sll	r3,r18,r17
   29b3c:	9838d43a 	srli	fp,r19,16
   29b40:	8009883a 	mov	r4,r16
   29b44:	10eab03a 	or	r21,r2,r3
   29b48:	e00b883a 	mov	r5,fp
   29b4c:	346c983a 	sll	r22,r6,r17
   29b50:	dd400015 	stw	r21,0(sp)
   29b54:	002a45c0 	call	2a45c <__umodsi3>
   29b58:	8009883a 	mov	r4,r16
   29b5c:	e00b883a 	mov	r5,fp
   29b60:	102f883a 	mov	r23,r2
   29b64:	9cbfffcc 	andi	r18,r19,65535
   29b68:	002a3f80 	call	2a3f8 <__udivsi3>
   29b6c:	9009883a 	mov	r4,r18
   29b70:	100b883a 	mov	r5,r2
   29b74:	1021883a 	mov	r16,r2
   29b78:	002a4b80 	call	2a4b8 <__mulsi3>
   29b7c:	b82e943a 	slli	r23,r23,16
   29b80:	a808d43a 	srli	r4,r21,16
   29b84:	b908b03a 	or	r4,r23,r4
   29b88:	2080062e 	bgeu	r4,r2,29ba4 <__udivdi3+0x480>
   29b8c:	24c9883a 	add	r4,r4,r19
   29b90:	817fffc4 	addi	r5,r16,-1
   29b94:	24c05c36 	bltu	r4,r19,29d08 <__udivdi3+0x5e4>
   29b98:	20805b2e 	bgeu	r4,r2,29d08 <__udivdi3+0x5e4>
   29b9c:	843fff84 	addi	r16,r16,-2
   29ba0:	24c9883a 	add	r4,r4,r19
   29ba4:	20abc83a 	sub	r21,r4,r2
   29ba8:	a809883a 	mov	r4,r21
   29bac:	e00b883a 	mov	r5,fp
   29bb0:	002a45c0 	call	2a45c <__umodsi3>
   29bb4:	a809883a 	mov	r4,r21
   29bb8:	e00b883a 	mov	r5,fp
   29bbc:	102b883a 	mov	r21,r2
   29bc0:	002a3f80 	call	2a3f8 <__udivsi3>
   29bc4:	9009883a 	mov	r4,r18
   29bc8:	100b883a 	mov	r5,r2
   29bcc:	102f883a 	mov	r23,r2
   29bd0:	002a4b80 	call	2a4b8 <__mulsi3>
   29bd4:	d8c00017 	ldw	r3,0(sp)
   29bd8:	a82a943a 	slli	r21,r21,16
   29bdc:	1cbfffcc 	andi	r18,r3,65535
   29be0:	aca4b03a 	or	r18,r21,r18
   29be4:	9080062e 	bgeu	r18,r2,29c00 <__udivdi3+0x4dc>
   29be8:	94e5883a 	add	r18,r18,r19
   29bec:	b8ffffc4 	addi	r3,r23,-1
   29bf0:	94c04136 	bltu	r18,r19,29cf8 <__udivdi3+0x5d4>
   29bf4:	9080402e 	bgeu	r18,r2,29cf8 <__udivdi3+0x5d4>
   29bf8:	bdffff84 	addi	r23,r23,-2
   29bfc:	94e5883a 	add	r18,r18,r19
   29c00:	8020943a 	slli	r16,r16,16
   29c04:	bd7fffcc 	andi	r21,r23,65535
   29c08:	b73fffcc 	andi	fp,r22,65535
   29c0c:	85e0b03a 	or	r16,r16,r23
   29c10:	8026d43a 	srli	r19,r16,16
   29c14:	a809883a 	mov	r4,r21
   29c18:	e00b883a 	mov	r5,fp
   29c1c:	b02cd43a 	srli	r22,r22,16
   29c20:	90a5c83a 	sub	r18,r18,r2
   29c24:	002a4b80 	call	2a4b8 <__mulsi3>
   29c28:	9809883a 	mov	r4,r19
   29c2c:	e00b883a 	mov	r5,fp
   29c30:	102f883a 	mov	r23,r2
   29c34:	002a4b80 	call	2a4b8 <__mulsi3>
   29c38:	9809883a 	mov	r4,r19
   29c3c:	b00b883a 	mov	r5,r22
   29c40:	1027883a 	mov	r19,r2
   29c44:	002a4b80 	call	2a4b8 <__mulsi3>
   29c48:	a809883a 	mov	r4,r21
   29c4c:	b00b883a 	mov	r5,r22
   29c50:	102b883a 	mov	r21,r2
   29c54:	002a4b80 	call	2a4b8 <__mulsi3>
   29c58:	b806d43a 	srli	r3,r23,16
   29c5c:	14c5883a 	add	r2,r2,r19
   29c60:	1887883a 	add	r3,r3,r2
   29c64:	1cc0022e 	bgeu	r3,r19,29c70 <__udivdi3+0x54c>
   29c68:	00800074 	movhi	r2,1
   29c6c:	a8ab883a 	add	r21,r21,r2
   29c70:	1804d43a 	srli	r2,r3,16
   29c74:	156b883a 	add	r21,r2,r21
   29c78:	95400936 	bltu	r18,r21,29ca0 <__udivdi3+0x57c>
   29c7c:	95400326 	beq	r18,r21,29c8c <__udivdi3+0x568>
   29c80:	8005883a 	mov	r2,r16
   29c84:	0007883a 	mov	r3,zero
   29c88:	003efd06 	br	29880 <__udivdi3+0x15c>
   29c8c:	1806943a 	slli	r3,r3,16
   29c90:	a44c983a 	sll	r6,r20,r17
   29c94:	bdffffcc 	andi	r23,r23,65535
   29c98:	1dc7883a 	add	r3,r3,r23
   29c9c:	30fff82e 	bgeu	r6,r3,29c80 <__udivdi3+0x55c>
   29ca0:	80bfffc4 	addi	r2,r16,-1
   29ca4:	0007883a 	mov	r3,zero
   29ca8:	003ef506 	br	29880 <__udivdi3+0x15c>
   29cac:	3806d43a 	srli	r3,r7,16
   29cb0:	01000404 	movi	r4,16
   29cb4:	003f0406 	br	298c8 <__udivdi3+0x1a4>
   29cb8:	3007883a 	mov	r3,r6
   29cbc:	003eb206 	br	29788 <__udivdi3+0x64>
   29cc0:	0007883a 	mov	r3,zero
   29cc4:	00800044 	movi	r2,1
   29cc8:	003eed06 	br	29880 <__udivdi3+0x15c>
   29ccc:	3807883a 	mov	r3,r7
   29cd0:	0009883a 	mov	r4,zero
   29cd4:	003efc06 	br	298c8 <__udivdi3+0x1a4>
   29cd8:	8006d43a 	srli	r3,r16,16
   29cdc:	04400404 	movi	r17,16
   29ce0:	003f0f06 	br	29920 <__udivdi3+0x1fc>
   29ce4:	3006d43a 	srli	r3,r6,16
   29ce8:	04400404 	movi	r17,16
   29cec:	003ea606 	br	29788 <__udivdi3+0x64>
   29cf0:	8007883a 	mov	r3,r16
   29cf4:	003f0a06 	br	29920 <__udivdi3+0x1fc>
   29cf8:	182f883a 	mov	r23,r3
   29cfc:	003fc006 	br	29c00 <__udivdi3+0x4dc>
   29d00:	1839883a 	mov	fp,r3
   29d04:	003f8306 	br	29b14 <__udivdi3+0x3f0>
   29d08:	2821883a 	mov	r16,r5
   29d0c:	003fa506 	br	29ba4 <__udivdi3+0x480>
   29d10:	182f883a 	mov	r23,r3
   29d14:	003f6906 	br	29abc <__udivdi3+0x398>
   29d18:	94bfff84 	addi	r18,r18,-2
   29d1c:	003f3806 	br	29a00 <__udivdi3+0x2dc>
   29d20:	94bfff84 	addi	r18,r18,-2
   29d24:	003ecf06 	br	29864 <__udivdi3+0x140>
   29d28:	ad7fff84 	addi	r21,r21,-2
   29d2c:	2409883a 	add	r4,r4,r16
   29d30:	003eb706 	br	29810 <__udivdi3+0xec>
   29d34:	ad7fff84 	addi	r21,r21,-2
   29d38:	2409883a 	add	r4,r4,r16
   29d3c:	003f1906 	br	299a4 <__udivdi3+0x280>

00029d40 <__umoddi3>:
   29d40:	defff304 	addi	sp,sp,-52
   29d44:	dc400415 	stw	r17,16(sp)
   29d48:	dc000315 	stw	r16,12(sp)
   29d4c:	dfc00c15 	stw	ra,48(sp)
   29d50:	df000b15 	stw	fp,44(sp)
   29d54:	ddc00a15 	stw	r23,40(sp)
   29d58:	dd800915 	stw	r22,36(sp)
   29d5c:	dd400815 	stw	r21,32(sp)
   29d60:	dd000715 	stw	r20,28(sp)
   29d64:	dcc00615 	stw	r19,24(sp)
   29d68:	dc800515 	stw	r18,20(sp)
   29d6c:	2823883a 	mov	r17,r5
   29d70:	2021883a 	mov	r16,r4
   29d74:	38003b1e 	bne	r7,zero,29e64 <__umoddi3+0x124>
   29d78:	3825883a 	mov	r18,r7
   29d7c:	3029883a 	mov	r20,r6
   29d80:	2027883a 	mov	r19,r4
   29d84:	29805b2e 	bgeu	r5,r6,29ef4 <__umoddi3+0x1b4>
   29d88:	00bfffd4 	movui	r2,65535
   29d8c:	282d883a 	mov	r22,r5
   29d90:	11809a2e 	bgeu	r2,r6,29ffc <__umoddi3+0x2bc>
   29d94:	00804034 	movhi	r2,256
   29d98:	30814436 	bltu	r6,r2,2a2ac <__umoddi3+0x56c>
   29d9c:	3006d63a 	srli	r3,r6,24
   29da0:	04800604 	movi	r18,24
   29da4:	008000f4 	movhi	r2,3
   29da8:	1885883a 	add	r2,r3,r2
   29dac:	11015803 	ldbu	r4,1376(r2)
   29db0:	00800804 	movi	r2,32
   29db4:	2489883a 	add	r4,r4,r18
   29db8:	1125c83a 	sub	r18,r2,r4
   29dbc:	11000526 	beq	r2,r4,29dd4 <__umoddi3+0x94>
   29dc0:	8ca2983a 	sll	r17,r17,r18
   29dc4:	8108d83a 	srl	r4,r16,r4
   29dc8:	34a8983a 	sll	r20,r6,r18
   29dcc:	84a6983a 	sll	r19,r16,r18
   29dd0:	246cb03a 	or	r22,r4,r17
   29dd4:	a02ed43a 	srli	r23,r20,16
   29dd8:	b009883a 	mov	r4,r22
   29ddc:	a57fffcc 	andi	r21,r20,65535
   29de0:	b80b883a 	mov	r5,r23
   29de4:	002a45c0 	call	2a45c <__umodsi3>
   29de8:	b80b883a 	mov	r5,r23
   29dec:	b009883a 	mov	r4,r22
   29df0:	1023883a 	mov	r17,r2
   29df4:	002a3f80 	call	2a3f8 <__udivsi3>
   29df8:	a809883a 	mov	r4,r21
   29dfc:	100b883a 	mov	r5,r2
   29e00:	002a4b80 	call	2a4b8 <__mulsi3>
   29e04:	8822943a 	slli	r17,r17,16
   29e08:	9808d43a 	srli	r4,r19,16
   29e0c:	8908b03a 	or	r4,r17,r4
   29e10:	2080042e 	bgeu	r4,r2,29e24 <__umoddi3+0xe4>
   29e14:	2509883a 	add	r4,r4,r20
   29e18:	25000236 	bltu	r4,r20,29e24 <__umoddi3+0xe4>
   29e1c:	2080012e 	bgeu	r4,r2,29e24 <__umoddi3+0xe4>
   29e20:	2509883a 	add	r4,r4,r20
   29e24:	20a1c83a 	sub	r16,r4,r2
   29e28:	b80b883a 	mov	r5,r23
   29e2c:	8009883a 	mov	r4,r16
   29e30:	002a45c0 	call	2a45c <__umodsi3>
   29e34:	b80b883a 	mov	r5,r23
   29e38:	8009883a 	mov	r4,r16
   29e3c:	1023883a 	mov	r17,r2
   29e40:	002a3f80 	call	2a3f8 <__udivsi3>
   29e44:	8822943a 	slli	r17,r17,16
   29e48:	100b883a 	mov	r5,r2
   29e4c:	a809883a 	mov	r4,r21
   29e50:	002a4b80 	call	2a4b8 <__mulsi3>
   29e54:	98ffffcc 	andi	r3,r19,65535
   29e58:	88c6b03a 	or	r3,r17,r3
   29e5c:	18805e2e 	bgeu	r3,r2,29fd8 <__umoddi3+0x298>
   29e60:	00005906 	br	29fc8 <__umoddi3+0x288>
   29e64:	2005883a 	mov	r2,r4
   29e68:	29c00d2e 	bgeu	r5,r7,29ea0 <__umoddi3+0x160>
   29e6c:	2807883a 	mov	r3,r5
   29e70:	dfc00c17 	ldw	ra,48(sp)
   29e74:	df000b17 	ldw	fp,44(sp)
   29e78:	ddc00a17 	ldw	r23,40(sp)
   29e7c:	dd800917 	ldw	r22,36(sp)
   29e80:	dd400817 	ldw	r21,32(sp)
   29e84:	dd000717 	ldw	r20,28(sp)
   29e88:	dcc00617 	ldw	r19,24(sp)
   29e8c:	dc800517 	ldw	r18,20(sp)
   29e90:	dc400417 	ldw	r17,16(sp)
   29e94:	dc000317 	ldw	r16,12(sp)
   29e98:	dec00d04 	addi	sp,sp,52
   29e9c:	f800283a 	ret
   29ea0:	013fffd4 	movui	r4,65535
   29ea4:	2807883a 	mov	r3,r5
   29ea8:	21c0592e 	bgeu	r4,r7,2a010 <__umoddi3+0x2d0>
   29eac:	01004034 	movhi	r4,256
   29eb0:	39010336 	bltu	r7,r4,2a2c0 <__umoddi3+0x580>
   29eb4:	3808d63a 	srli	r4,r7,24
   29eb8:	02000604 	movi	r8,24
   29ebc:	014000f4 	movhi	r5,3
   29ec0:	214b883a 	add	r5,r4,r5
   29ec4:	2d015803 	ldbu	r20,1376(r5)
   29ec8:	01000804 	movi	r4,32
   29ecc:	a229883a 	add	r20,r20,r8
   29ed0:	252bc83a 	sub	r21,r4,r20
   29ed4:	2500531e 	bne	r4,r20,2a024 <__umoddi3+0x2e4>
   29ed8:	3c400136 	bltu	r7,r17,29ee0 <__umoddi3+0x1a0>
   29edc:	81bfe436 	bltu	r16,r6,29e70 <__umoddi3+0x130>
   29ee0:	8185c83a 	sub	r2,r16,r6
   29ee4:	89cfc83a 	sub	r7,r17,r7
   29ee8:	8087803a 	cmpltu	r3,r16,r2
   29eec:	38c7c83a 	sub	r3,r7,r3
   29ef0:	003fdf06 	br	29e70 <__umoddi3+0x130>
   29ef4:	3000041e 	bne	r6,zero,29f08 <__umoddi3+0x1c8>
   29ef8:	000b883a 	mov	r5,zero
   29efc:	01000044 	movi	r4,1
   29f00:	002a3f80 	call	2a3f8 <__udivsi3>
   29f04:	1029883a 	mov	r20,r2
   29f08:	00bfffd4 	movui	r2,65535
   29f0c:	1500362e 	bgeu	r2,r20,29fe8 <__umoddi3+0x2a8>
   29f10:	00804034 	movhi	r2,256
   29f14:	a080ed36 	bltu	r20,r2,2a2cc <__umoddi3+0x58c>
   29f18:	a006d63a 	srli	r3,r20,24
   29f1c:	04800604 	movi	r18,24
   29f20:	008000f4 	movhi	r2,3
   29f24:	1885883a 	add	r2,r3,r2
   29f28:	15815803 	ldbu	r22,1376(r2)
   29f2c:	00800804 	movi	r2,32
   29f30:	b4ad883a 	add	r22,r22,r18
   29f34:	15a5c83a 	sub	r18,r2,r22
   29f38:	1580a51e 	bne	r2,r22,2a1d0 <__umoddi3+0x490>
   29f3c:	a02ed43a 	srli	r23,r20,16
   29f40:	8d23c83a 	sub	r17,r17,r20
   29f44:	a57fffcc 	andi	r21,r20,65535
   29f48:	8809883a 	mov	r4,r17
   29f4c:	b80b883a 	mov	r5,r23
   29f50:	002a45c0 	call	2a45c <__umodsi3>
   29f54:	8809883a 	mov	r4,r17
   29f58:	b80b883a 	mov	r5,r23
   29f5c:	1023883a 	mov	r17,r2
   29f60:	002a3f80 	call	2a3f8 <__udivsi3>
   29f64:	1009883a 	mov	r4,r2
   29f68:	a80b883a 	mov	r5,r21
   29f6c:	002a4b80 	call	2a4b8 <__mulsi3>
   29f70:	8822943a 	slli	r17,r17,16
   29f74:	9808d43a 	srli	r4,r19,16
   29f78:	8908b03a 	or	r4,r17,r4
   29f7c:	2080032e 	bgeu	r4,r2,29f8c <__umoddi3+0x24c>
   29f80:	2509883a 	add	r4,r4,r20
   29f84:	25000136 	bltu	r4,r20,29f8c <__umoddi3+0x24c>
   29f88:	2080dc36 	bltu	r4,r2,2a2fc <__umoddi3+0x5bc>
   29f8c:	20a1c83a 	sub	r16,r4,r2
   29f90:	b80b883a 	mov	r5,r23
   29f94:	8009883a 	mov	r4,r16
   29f98:	002a45c0 	call	2a45c <__umodsi3>
   29f9c:	b80b883a 	mov	r5,r23
   29fa0:	8009883a 	mov	r4,r16
   29fa4:	1023883a 	mov	r17,r2
   29fa8:	8822943a 	slli	r17,r17,16
   29fac:	002a3f80 	call	2a3f8 <__udivsi3>
   29fb0:	a80b883a 	mov	r5,r21
   29fb4:	1009883a 	mov	r4,r2
   29fb8:	002a4b80 	call	2a4b8 <__mulsi3>
   29fbc:	9cffffcc 	andi	r19,r19,65535
   29fc0:	8cc6b03a 	or	r3,r17,r19
   29fc4:	1880042e 	bgeu	r3,r2,29fd8 <__umoddi3+0x298>
   29fc8:	1d07883a 	add	r3,r3,r20
   29fcc:	1d000236 	bltu	r3,r20,29fd8 <__umoddi3+0x298>
   29fd0:	1880012e 	bgeu	r3,r2,29fd8 <__umoddi3+0x298>
   29fd4:	1d07883a 	add	r3,r3,r20
   29fd8:	1885c83a 	sub	r2,r3,r2
   29fdc:	1484d83a 	srl	r2,r2,r18
   29fe0:	0007883a 	mov	r3,zero
   29fe4:	003fa206 	br	29e70 <__umoddi3+0x130>
   29fe8:	a0804030 	cmpltui	r2,r20,256
   29fec:	1000ba1e 	bne	r2,zero,2a2d8 <__umoddi3+0x598>
   29ff0:	a006d23a 	srli	r3,r20,8
   29ff4:	04800204 	movi	r18,8
   29ff8:	003fc906 	br	29f20 <__umoddi3+0x1e0>
   29ffc:	30804030 	cmpltui	r2,r6,256
   2a000:	1000ad1e 	bne	r2,zero,2a2b8 <__umoddi3+0x578>
   2a004:	3006d23a 	srli	r3,r6,8
   2a008:	04800204 	movi	r18,8
   2a00c:	003f6506 	br	29da4 <__umoddi3+0x64>
   2a010:	39004030 	cmpltui	r4,r7,256
   2a014:	2000b21e 	bne	r4,zero,2a2e0 <__umoddi3+0x5a0>
   2a018:	3808d23a 	srli	r4,r7,8
   2a01c:	02000204 	movi	r8,8
   2a020:	003fa606 	br	29ebc <__umoddi3+0x17c>
   2a024:	3d4e983a 	sll	r7,r7,r21
   2a028:	3508d83a 	srl	r4,r6,r20
   2a02c:	8d2cd83a 	srl	r22,r17,r20
   2a030:	8504d83a 	srl	r2,r16,r20
   2a034:	21e4b03a 	or	r18,r4,r7
   2a038:	8d62983a 	sll	r17,r17,r21
   2a03c:	9026d43a 	srli	r19,r18,16
   2a040:	354c983a 	sll	r6,r6,r21
   2a044:	1444b03a 	or	r2,r2,r17
   2a048:	b009883a 	mov	r4,r22
   2a04c:	980b883a 	mov	r5,r19
   2a050:	d9800115 	stw	r6,4(sp)
   2a054:	d8800015 	stw	r2,0(sp)
   2a058:	002a45c0 	call	2a45c <__umodsi3>
   2a05c:	980b883a 	mov	r5,r19
   2a060:	b009883a 	mov	r4,r22
   2a064:	102f883a 	mov	r23,r2
   2a068:	947fffcc 	andi	r17,r18,65535
   2a06c:	002a3f80 	call	2a3f8 <__udivsi3>
   2a070:	8809883a 	mov	r4,r17
   2a074:	100b883a 	mov	r5,r2
   2a078:	1039883a 	mov	fp,r2
   2a07c:	002a4b80 	call	2a4b8 <__mulsi3>
   2a080:	d8c00017 	ldw	r3,0(sp)
   2a084:	b82e943a 	slli	r23,r23,16
   2a088:	8560983a 	sll	r16,r16,r21
   2a08c:	1808d43a 	srli	r4,r3,16
   2a090:	b908b03a 	or	r4,r23,r4
   2a094:	2080062e 	bgeu	r4,r2,2a0b0 <__umoddi3+0x370>
   2a098:	2489883a 	add	r4,r4,r18
   2a09c:	e17fffc4 	addi	r5,fp,-1
   2a0a0:	24809436 	bltu	r4,r18,2a2f4 <__umoddi3+0x5b4>
   2a0a4:	2080932e 	bgeu	r4,r2,2a2f4 <__umoddi3+0x5b4>
   2a0a8:	e73fff84 	addi	fp,fp,-2
   2a0ac:	2489883a 	add	r4,r4,r18
   2a0b0:	20adc83a 	sub	r22,r4,r2
   2a0b4:	980b883a 	mov	r5,r19
   2a0b8:	b009883a 	mov	r4,r22
   2a0bc:	002a45c0 	call	2a45c <__umodsi3>
   2a0c0:	980b883a 	mov	r5,r19
   2a0c4:	b009883a 	mov	r4,r22
   2a0c8:	102f883a 	mov	r23,r2
   2a0cc:	002a3f80 	call	2a3f8 <__udivsi3>
   2a0d0:	100b883a 	mov	r5,r2
   2a0d4:	8809883a 	mov	r4,r17
   2a0d8:	d8800215 	stw	r2,8(sp)
   2a0dc:	002a4b80 	call	2a4b8 <__mulsi3>
   2a0e0:	d8c00017 	ldw	r3,0(sp)
   2a0e4:	b82e943a 	slli	r23,r23,16
   2a0e8:	d9400217 	ldw	r5,8(sp)
   2a0ec:	1c7fffcc 	andi	r17,r3,65535
   2a0f0:	bc62b03a 	or	r17,r23,r17
   2a0f4:	8880062e 	bgeu	r17,r2,2a110 <__umoddi3+0x3d0>
   2a0f8:	8ca3883a 	add	r17,r17,r18
   2a0fc:	28ffffc4 	addi	r3,r5,-1
   2a100:	8c807a36 	bltu	r17,r18,2a2ec <__umoddi3+0x5ac>
   2a104:	8880792e 	bgeu	r17,r2,2a2ec <__umoddi3+0x5ac>
   2a108:	297fff84 	addi	r5,r5,-2
   2a10c:	8ca3883a 	add	r17,r17,r18
   2a110:	e02c943a 	slli	r22,fp,16
   2a114:	d9c00117 	ldw	r7,4(sp)
   2a118:	29bfffcc 	andi	r6,r5,65535
   2a11c:	b16cb03a 	or	r22,r22,r5
   2a120:	38ffffcc 	andi	r3,r7,65535
   2a124:	b02cd43a 	srli	r22,r22,16
   2a128:	180b883a 	mov	r5,r3
   2a12c:	3009883a 	mov	r4,r6
   2a130:	3838d43a 	srli	fp,r7,16
   2a134:	182f883a 	mov	r23,r3
   2a138:	d9800015 	stw	r6,0(sp)
   2a13c:	88a3c83a 	sub	r17,r17,r2
   2a140:	002a4b80 	call	2a4b8 <__mulsi3>
   2a144:	b80b883a 	mov	r5,r23
   2a148:	b009883a 	mov	r4,r22
   2a14c:	102f883a 	mov	r23,r2
   2a150:	002a4b80 	call	2a4b8 <__mulsi3>
   2a154:	e00b883a 	mov	r5,fp
   2a158:	b009883a 	mov	r4,r22
   2a15c:	102d883a 	mov	r22,r2
   2a160:	002a4b80 	call	2a4b8 <__mulsi3>
   2a164:	d9800017 	ldw	r6,0(sp)
   2a168:	e00b883a 	mov	r5,fp
   2a16c:	1039883a 	mov	fp,r2
   2a170:	3009883a 	mov	r4,r6
   2a174:	002a4b80 	call	2a4b8 <__mulsi3>
   2a178:	b808d43a 	srli	r4,r23,16
   2a17c:	1585883a 	add	r2,r2,r22
   2a180:	2089883a 	add	r4,r4,r2
   2a184:	2580022e 	bgeu	r4,r22,2a190 <__umoddi3+0x450>
   2a188:	00800074 	movhi	r2,1
   2a18c:	e0b9883a 	add	fp,fp,r2
   2a190:	2006d43a 	srli	r3,r4,16
   2a194:	2008943a 	slli	r4,r4,16
   2a198:	bdffffcc 	andi	r23,r23,65535
   2a19c:	1f07883a 	add	r3,r3,fp
   2a1a0:	25c9883a 	add	r4,r4,r23
   2a1a4:	88c03a36 	bltu	r17,r3,2a290 <__umoddi3+0x550>
   2a1a8:	88c03826 	beq	r17,r3,2a28c <__umoddi3+0x54c>
   2a1ac:	8109c83a 	sub	r4,r16,r4
   2a1b0:	8121803a 	cmpltu	r16,r16,r4
   2a1b4:	88c7c83a 	sub	r3,r17,r3
   2a1b8:	1c07c83a 	sub	r3,r3,r16
   2a1bc:	1d04983a 	sll	r2,r3,r20
   2a1c0:	2548d83a 	srl	r4,r4,r21
   2a1c4:	1d46d83a 	srl	r3,r3,r21
   2a1c8:	1104b03a 	or	r2,r2,r4
   2a1cc:	003f2806 	br	29e70 <__umoddi3+0x130>
   2a1d0:	a4a8983a 	sll	r20,r20,r18
   2a1d4:	8da6d83a 	srl	r19,r17,r22
   2a1d8:	8ca2983a 	sll	r17,r17,r18
   2a1dc:	a02ed43a 	srli	r23,r20,16
   2a1e0:	9809883a 	mov	r4,r19
   2a1e4:	85acd83a 	srl	r22,r16,r22
   2a1e8:	b80b883a 	mov	r5,r23
   2a1ec:	002a45c0 	call	2a45c <__umodsi3>
   2a1f0:	9809883a 	mov	r4,r19
   2a1f4:	b80b883a 	mov	r5,r23
   2a1f8:	b46cb03a 	or	r22,r22,r17
   2a1fc:	a57fffcc 	andi	r21,r20,65535
   2a200:	1023883a 	mov	r17,r2
   2a204:	002a3f80 	call	2a3f8 <__udivsi3>
   2a208:	a809883a 	mov	r4,r21
   2a20c:	100b883a 	mov	r5,r2
   2a210:	002a4b80 	call	2a4b8 <__mulsi3>
   2a214:	8822943a 	slli	r17,r17,16
   2a218:	b008d43a 	srli	r4,r22,16
   2a21c:	84a6983a 	sll	r19,r16,r18
   2a220:	8908b03a 	or	r4,r17,r4
   2a224:	2080042e 	bgeu	r4,r2,2a238 <__umoddi3+0x4f8>
   2a228:	2509883a 	add	r4,r4,r20
   2a22c:	25000236 	bltu	r4,r20,2a238 <__umoddi3+0x4f8>
   2a230:	2080012e 	bgeu	r4,r2,2a238 <__umoddi3+0x4f8>
   2a234:	2509883a 	add	r4,r4,r20
   2a238:	20a1c83a 	sub	r16,r4,r2
   2a23c:	8009883a 	mov	r4,r16
   2a240:	b80b883a 	mov	r5,r23
   2a244:	002a45c0 	call	2a45c <__umodsi3>
   2a248:	8009883a 	mov	r4,r16
   2a24c:	1021883a 	mov	r16,r2
   2a250:	b80b883a 	mov	r5,r23
   2a254:	8020943a 	slli	r16,r16,16
   2a258:	002a3f80 	call	2a3f8 <__udivsi3>
   2a25c:	100b883a 	mov	r5,r2
   2a260:	a809883a 	mov	r4,r21
   2a264:	b47fffcc 	andi	r17,r22,65535
   2a268:	002a4b80 	call	2a4b8 <__mulsi3>
   2a26c:	8462b03a 	or	r17,r16,r17
   2a270:	8880042e 	bgeu	r17,r2,2a284 <__umoddi3+0x544>
   2a274:	8d23883a 	add	r17,r17,r20
   2a278:	8d000236 	bltu	r17,r20,2a284 <__umoddi3+0x544>
   2a27c:	8880012e 	bgeu	r17,r2,2a284 <__umoddi3+0x544>
   2a280:	8d23883a 	add	r17,r17,r20
   2a284:	88a3c83a 	sub	r17,r17,r2
   2a288:	003f2f06 	br	29f48 <__umoddi3+0x208>
   2a28c:	813fc72e 	bgeu	r16,r4,2a1ac <__umoddi3+0x46c>
   2a290:	d8800117 	ldw	r2,4(sp)
   2a294:	20a7c83a 	sub	r19,r4,r2
   2a298:	24c9803a 	cmpltu	r4,r4,r19
   2a29c:	2489883a 	add	r4,r4,r18
   2a2a0:	1907c83a 	sub	r3,r3,r4
   2a2a4:	9809883a 	mov	r4,r19
   2a2a8:	003fc006 	br	2a1ac <__umoddi3+0x46c>
   2a2ac:	3006d43a 	srli	r3,r6,16
   2a2b0:	04800404 	movi	r18,16
   2a2b4:	003ebb06 	br	29da4 <__umoddi3+0x64>
   2a2b8:	3007883a 	mov	r3,r6
   2a2bc:	003eb906 	br	29da4 <__umoddi3+0x64>
   2a2c0:	3808d43a 	srli	r4,r7,16
   2a2c4:	02000404 	movi	r8,16
   2a2c8:	003efc06 	br	29ebc <__umoddi3+0x17c>
   2a2cc:	a006d43a 	srli	r3,r20,16
   2a2d0:	04800404 	movi	r18,16
   2a2d4:	003f1206 	br	29f20 <__umoddi3+0x1e0>
   2a2d8:	a007883a 	mov	r3,r20
   2a2dc:	003f1006 	br	29f20 <__umoddi3+0x1e0>
   2a2e0:	3809883a 	mov	r4,r7
   2a2e4:	0011883a 	mov	r8,zero
   2a2e8:	003ef406 	br	29ebc <__umoddi3+0x17c>
   2a2ec:	180b883a 	mov	r5,r3
   2a2f0:	003f8706 	br	2a110 <__umoddi3+0x3d0>
   2a2f4:	2839883a 	mov	fp,r5
   2a2f8:	003f6d06 	br	2a0b0 <__umoddi3+0x370>
   2a2fc:	2509883a 	add	r4,r4,r20
   2a300:	003f2206 	br	29f8c <__umoddi3+0x24c>

0002a304 <__divsi3>:
   2a304:	20001a16 	blt	r4,zero,2a370 <__divsi3+0x6c>
   2a308:	000f883a 	mov	r7,zero
   2a30c:	2800020e 	bge	r5,zero,2a318 <__divsi3+0x14>
   2a310:	014bc83a 	sub	r5,zero,r5
   2a314:	39c0005c 	xori	r7,r7,1
   2a318:	200d883a 	mov	r6,r4
   2a31c:	00c00044 	movi	r3,1
   2a320:	2900092e 	bgeu	r5,r4,2a348 <__divsi3+0x44>
   2a324:	00800804 	movi	r2,32
   2a328:	00c00044 	movi	r3,1
   2a32c:	00000106 	br	2a334 <__divsi3+0x30>
   2a330:	10001226 	beq	r2,zero,2a37c <__divsi3+0x78>
   2a334:	294b883a 	add	r5,r5,r5
   2a338:	10bfffc4 	addi	r2,r2,-1
   2a33c:	18c7883a 	add	r3,r3,r3
   2a340:	293ffb36 	bltu	r5,r4,2a330 <__divsi3+0x2c>
   2a344:	18000d26 	beq	r3,zero,2a37c <__divsi3+0x78>
   2a348:	0005883a 	mov	r2,zero
   2a34c:	31400236 	bltu	r6,r5,2a358 <__divsi3+0x54>
   2a350:	314dc83a 	sub	r6,r6,r5
   2a354:	10c4b03a 	or	r2,r2,r3
   2a358:	1806d07a 	srli	r3,r3,1
   2a35c:	280ad07a 	srli	r5,r5,1
   2a360:	183ffa1e 	bne	r3,zero,2a34c <__divsi3+0x48>
   2a364:	38000126 	beq	r7,zero,2a36c <__divsi3+0x68>
   2a368:	0085c83a 	sub	r2,zero,r2
   2a36c:	f800283a 	ret
   2a370:	0109c83a 	sub	r4,zero,r4
   2a374:	01c00044 	movi	r7,1
   2a378:	003fe406 	br	2a30c <__divsi3+0x8>
   2a37c:	0005883a 	mov	r2,zero
   2a380:	003ff806 	br	2a364 <__divsi3+0x60>

0002a384 <__modsi3>:
   2a384:	20001916 	blt	r4,zero,2a3ec <__modsi3+0x68>
   2a388:	000f883a 	mov	r7,zero
   2a38c:	2005883a 	mov	r2,r4
   2a390:	2800010e 	bge	r5,zero,2a398 <__modsi3+0x14>
   2a394:	014bc83a 	sub	r5,zero,r5
   2a398:	00c00044 	movi	r3,1
   2a39c:	2900092e 	bgeu	r5,r4,2a3c4 <__modsi3+0x40>
   2a3a0:	01800804 	movi	r6,32
   2a3a4:	00c00044 	movi	r3,1
   2a3a8:	00000106 	br	2a3b0 <__modsi3+0x2c>
   2a3ac:	30000d26 	beq	r6,zero,2a3e4 <__modsi3+0x60>
   2a3b0:	294b883a 	add	r5,r5,r5
   2a3b4:	31bfffc4 	addi	r6,r6,-1
   2a3b8:	18c7883a 	add	r3,r3,r3
   2a3bc:	293ffb36 	bltu	r5,r4,2a3ac <__modsi3+0x28>
   2a3c0:	18000826 	beq	r3,zero,2a3e4 <__modsi3+0x60>
   2a3c4:	1806d07a 	srli	r3,r3,1
   2a3c8:	11400136 	bltu	r2,r5,2a3d0 <__modsi3+0x4c>
   2a3cc:	1145c83a 	sub	r2,r2,r5
   2a3d0:	280ad07a 	srli	r5,r5,1
   2a3d4:	183ffb1e 	bne	r3,zero,2a3c4 <__modsi3+0x40>
   2a3d8:	38000126 	beq	r7,zero,2a3e0 <__modsi3+0x5c>
   2a3dc:	0085c83a 	sub	r2,zero,r2
   2a3e0:	f800283a 	ret
   2a3e4:	2005883a 	mov	r2,r4
   2a3e8:	003ffb06 	br	2a3d8 <__modsi3+0x54>
   2a3ec:	0109c83a 	sub	r4,zero,r4
   2a3f0:	01c00044 	movi	r7,1
   2a3f4:	003fe506 	br	2a38c <__modsi3+0x8>

0002a3f8 <__udivsi3>:
   2a3f8:	200d883a 	mov	r6,r4
   2a3fc:	2900152e 	bgeu	r5,r4,2a454 <__udivsi3+0x5c>
   2a400:	28001416 	blt	r5,zero,2a454 <__udivsi3+0x5c>
   2a404:	00800804 	movi	r2,32
   2a408:	00c00044 	movi	r3,1
   2a40c:	00000206 	br	2a418 <__udivsi3+0x20>
   2a410:	10000e26 	beq	r2,zero,2a44c <__udivsi3+0x54>
   2a414:	28000516 	blt	r5,zero,2a42c <__udivsi3+0x34>
   2a418:	294b883a 	add	r5,r5,r5
   2a41c:	10bfffc4 	addi	r2,r2,-1
   2a420:	18c7883a 	add	r3,r3,r3
   2a424:	293ffa36 	bltu	r5,r4,2a410 <__udivsi3+0x18>
   2a428:	18000826 	beq	r3,zero,2a44c <__udivsi3+0x54>
   2a42c:	0005883a 	mov	r2,zero
   2a430:	31400236 	bltu	r6,r5,2a43c <__udivsi3+0x44>
   2a434:	314dc83a 	sub	r6,r6,r5
   2a438:	10c4b03a 	or	r2,r2,r3
   2a43c:	1806d07a 	srli	r3,r3,1
   2a440:	280ad07a 	srli	r5,r5,1
   2a444:	183ffa1e 	bne	r3,zero,2a430 <__udivsi3+0x38>
   2a448:	f800283a 	ret
   2a44c:	0005883a 	mov	r2,zero
   2a450:	f800283a 	ret
   2a454:	00c00044 	movi	r3,1
   2a458:	003ff406 	br	2a42c <__udivsi3+0x34>

0002a45c <__umodsi3>:
   2a45c:	2005883a 	mov	r2,r4
   2a460:	2900132e 	bgeu	r5,r4,2a4b0 <__umodsi3+0x54>
   2a464:	28001216 	blt	r5,zero,2a4b0 <__umodsi3+0x54>
   2a468:	01800804 	movi	r6,32
   2a46c:	00c00044 	movi	r3,1
   2a470:	00000206 	br	2a47c <__umodsi3+0x20>
   2a474:	30000c26 	beq	r6,zero,2a4a8 <__umodsi3+0x4c>
   2a478:	28000516 	blt	r5,zero,2a490 <__umodsi3+0x34>
   2a47c:	294b883a 	add	r5,r5,r5
   2a480:	31bfffc4 	addi	r6,r6,-1
   2a484:	18c7883a 	add	r3,r3,r3
   2a488:	293ffa36 	bltu	r5,r4,2a474 <__umodsi3+0x18>
   2a48c:	18000626 	beq	r3,zero,2a4a8 <__umodsi3+0x4c>
   2a490:	1806d07a 	srli	r3,r3,1
   2a494:	11400136 	bltu	r2,r5,2a49c <__umodsi3+0x40>
   2a498:	1145c83a 	sub	r2,r2,r5
   2a49c:	280ad07a 	srli	r5,r5,1
   2a4a0:	183ffb1e 	bne	r3,zero,2a490 <__umodsi3+0x34>
   2a4a4:	f800283a 	ret
   2a4a8:	2005883a 	mov	r2,r4
   2a4ac:	f800283a 	ret
   2a4b0:	00c00044 	movi	r3,1
   2a4b4:	003ff606 	br	2a490 <__umodsi3+0x34>

0002a4b8 <__mulsi3>:
   2a4b8:	0005883a 	mov	r2,zero
   2a4bc:	20000726 	beq	r4,zero,2a4dc <__mulsi3+0x24>
   2a4c0:	20c0004c 	andi	r3,r4,1
   2a4c4:	2008d07a 	srli	r4,r4,1
   2a4c8:	18000126 	beq	r3,zero,2a4d0 <__mulsi3+0x18>
   2a4cc:	1145883a 	add	r2,r2,r5
   2a4d0:	294b883a 	add	r5,r5,r5
   2a4d4:	203ffa1e 	bne	r4,zero,2a4c0 <__mulsi3+0x8>
   2a4d8:	f800283a 	ret
   2a4dc:	f800283a 	ret

0002a4e0 <__eqsf2>:
   2a4e0:	2006d5fa 	srli	r3,r4,23
   2a4e4:	00802034 	movhi	r2,128
   2a4e8:	10bfffc4 	addi	r2,r2,-1
   2a4ec:	18c03fcc 	andi	r3,r3,255
   2a4f0:	19c03fd8 	cmpnei	r7,r3,255
   2a4f4:	2012d7fa 	srli	r9,r4,31
   2a4f8:	280cd5fa 	srli	r6,r5,23
   2a4fc:	1108703a 	and	r4,r2,r4
   2a500:	2810d7fa 	srli	r8,r5,31
   2a504:	1144703a 	and	r2,r2,r5
   2a508:	38000e26 	beq	r7,zero,2a544 <__eqsf2+0x64>
   2a50c:	31403fcc 	andi	r5,r6,255
   2a510:	29803fd8 	cmpnei	r6,r5,255
   2a514:	30000326 	beq	r6,zero,2a524 <__eqsf2+0x44>
   2a518:	19400526 	beq	r3,r5,2a530 <__eqsf2+0x50>
   2a51c:	00800044 	movi	r2,1
   2a520:	f800283a 	ret
   2a524:	103ffc26 	beq	r2,zero,2a518 <__eqsf2+0x38>
   2a528:	00800044 	movi	r2,1
   2a52c:	f800283a 	ret
   2a530:	20bffa1e 	bne	r4,r2,2a51c <__eqsf2+0x3c>
   2a534:	4a000626 	beq	r9,r8,2a550 <__eqsf2+0x70>
   2a538:	183ff81e 	bne	r3,zero,2a51c <__eqsf2+0x3c>
   2a53c:	2004c03a 	cmpne	r2,r4,zero
   2a540:	f800283a 	ret
   2a544:	203ff126 	beq	r4,zero,2a50c <__eqsf2+0x2c>
   2a548:	00800044 	movi	r2,1
   2a54c:	f800283a 	ret
   2a550:	0005883a 	mov	r2,zero
   2a554:	f800283a 	ret

0002a558 <__lesf2>:
   2a558:	200cd5fa 	srli	r6,r4,23
   2a55c:	00c02034 	movhi	r3,128
   2a560:	18ffffc4 	addi	r3,r3,-1
   2a564:	31803fcc 	andi	r6,r6,255
   2a568:	32003fd8 	cmpnei	r8,r6,255
   2a56c:	2012d7fa 	srli	r9,r4,31
   2a570:	280ed5fa 	srli	r7,r5,23
   2a574:	1908703a 	and	r4,r3,r4
   2a578:	2804d7fa 	srli	r2,r5,31
   2a57c:	1946703a 	and	r3,r3,r5
   2a580:	40000a26 	beq	r8,zero,2a5ac <__lesf2+0x54>
   2a584:	39403fcc 	andi	r5,r7,255
   2a588:	29c03fd8 	cmpnei	r7,r5,255
   2a58c:	38000b26 	beq	r7,zero,2a5bc <__lesf2+0x64>
   2a590:	30001b1e 	bne	r6,zero,2a600 <__lesf2+0xa8>
   2a594:	200f003a 	cmpeq	r7,r4,zero
   2a598:	28000b1e 	bne	r5,zero,2a5c8 <__lesf2+0x70>
   2a59c:	18000a1e 	bne	r3,zero,2a5c8 <__lesf2+0x70>
   2a5a0:	20000b1e 	bne	r4,zero,2a5d0 <__lesf2+0x78>
   2a5a4:	0005883a 	mov	r2,zero
   2a5a8:	f800283a 	ret
   2a5ac:	20000c1e 	bne	r4,zero,2a5e0 <__lesf2+0x88>
   2a5b0:	39403fcc 	andi	r5,r7,255
   2a5b4:	29c03fe0 	cmpeqi	r7,r5,255
   2a5b8:	38001126 	beq	r7,zero,2a600 <__lesf2+0xa8>
   2a5bc:	1800081e 	bne	r3,zero,2a5e0 <__lesf2+0x88>
   2a5c0:	3000021e 	bne	r6,zero,2a5cc <__lesf2+0x74>
   2a5c4:	200f003a 	cmpeq	r7,r4,zero
   2a5c8:	38000b1e 	bne	r7,zero,2a5f8 <__lesf2+0xa0>
   2a5cc:	48800626 	beq	r9,r2,2a5e8 <__lesf2+0x90>
   2a5d0:	00800044 	movi	r2,1
   2a5d4:	48000926 	beq	r9,zero,2a5fc <__lesf2+0xa4>
   2a5d8:	00bfffc4 	movi	r2,-1
   2a5dc:	f800283a 	ret
   2a5e0:	00800084 	movi	r2,2
   2a5e4:	f800283a 	ret
   2a5e8:	29800816 	blt	r5,r6,2a60c <__lesf2+0xb4>
   2a5ec:	31400216 	blt	r6,r5,2a5f8 <__lesf2+0xa0>
   2a5f0:	19000636 	bltu	r3,r4,2a60c <__lesf2+0xb4>
   2a5f4:	20ffeb2e 	bgeu	r4,r3,2a5a4 <__lesf2+0x4c>
   2a5f8:	103ff726 	beq	r2,zero,2a5d8 <__lesf2+0x80>
   2a5fc:	f800283a 	ret
   2a600:	283ff21e 	bne	r5,zero,2a5cc <__lesf2+0x74>
   2a604:	183ff11e 	bne	r3,zero,2a5cc <__lesf2+0x74>
   2a608:	003ff106 	br	2a5d0 <__lesf2+0x78>
   2a60c:	103ff21e 	bne	r2,zero,2a5d8 <__lesf2+0x80>
   2a610:	00800044 	movi	r2,1
   2a614:	f800283a 	ret

0002a618 <__unordsf2>:
   2a618:	2006d5fa 	srli	r3,r4,23
   2a61c:	00802034 	movhi	r2,128
   2a620:	10bfffc4 	addi	r2,r2,-1
   2a624:	18c03fcc 	andi	r3,r3,255
   2a628:	18c03fd8 	cmpnei	r3,r3,255
   2a62c:	1108703a 	and	r4,r2,r4
   2a630:	280cd5fa 	srli	r6,r5,23
   2a634:	1144703a 	and	r2,r2,r5
   2a638:	18000526 	beq	r3,zero,2a650 <__unordsf2+0x38>
   2a63c:	31803fcc 	andi	r6,r6,255
   2a640:	31803fd8 	cmpnei	r6,r6,255
   2a644:	30000526 	beq	r6,zero,2a65c <__unordsf2+0x44>
   2a648:	0005883a 	mov	r2,zero
   2a64c:	f800283a 	ret
   2a650:	203ffa26 	beq	r4,zero,2a63c <__unordsf2+0x24>
   2a654:	00800044 	movi	r2,1
   2a658:	f800283a 	ret
   2a65c:	1004c03a 	cmpne	r2,r2,zero
   2a660:	f800283a 	ret

0002a664 <__adddf3>:
   2a664:	02000434 	movhi	r8,16
   2a668:	423fffc4 	addi	r8,r8,-1
   2a66c:	3a12703a 	and	r9,r7,r8
   2a670:	2a06703a 	and	r3,r5,r8
   2a674:	2818d53a 	srli	r12,r5,20
   2a678:	3804d53a 	srli	r2,r7,20
   2a67c:	481490fa 	slli	r10,r9,3
   2a680:	280ad7fa 	srli	r5,r5,31
   2a684:	180690fa 	slli	r3,r3,3
   2a688:	2016d77a 	srli	r11,r4,29
   2a68c:	3012d77a 	srli	r9,r6,29
   2a690:	380ed7fa 	srli	r7,r7,31
   2a694:	defffb04 	addi	sp,sp,-20
   2a698:	dc400115 	stw	r17,4(sp)
   2a69c:	dc000015 	stw	r16,0(sp)
   2a6a0:	dfc00415 	stw	ra,16(sp)
   2a6a4:	dcc00315 	stw	r19,12(sp)
   2a6a8:	dc800215 	stw	r18,8(sp)
   2a6ac:	201c90fa 	slli	r14,r4,3
   2a6b0:	301a90fa 	slli	r13,r6,3
   2a6b4:	6441ffcc 	andi	r17,r12,2047
   2a6b8:	2821883a 	mov	r16,r5
   2a6bc:	58c6b03a 	or	r3,r11,r3
   2a6c0:	1081ffcc 	andi	r2,r2,2047
   2a6c4:	4a92b03a 	or	r9,r9,r10
   2a6c8:	29c06326 	beq	r5,r7,2a858 <__adddf3+0x1f4>
   2a6cc:	888bc83a 	sub	r5,r17,r2
   2a6d0:	0140560e 	bge	zero,r5,2a82c <__adddf3+0x1c8>
   2a6d4:	10007526 	beq	r2,zero,2a8ac <__adddf3+0x248>
   2a6d8:	8881ffd8 	cmpnei	r2,r17,2047
   2a6dc:	10012d26 	beq	r2,zero,2ab94 <__adddf3+0x530>
   2a6e0:	4a402034 	orhi	r9,r9,128
   2a6e4:	28800e48 	cmpgei	r2,r5,57
   2a6e8:	1000f41e 	bne	r2,zero,2aabc <__adddf3+0x458>
   2a6ec:	28800808 	cmpgei	r2,r5,32
   2a6f0:	1001471e 	bne	r2,zero,2ac10 <__adddf3+0x5ac>
   2a6f4:	00800804 	movi	r2,32
   2a6f8:	1145c83a 	sub	r2,r2,r5
   2a6fc:	6948d83a 	srl	r4,r13,r5
   2a700:	48a4983a 	sll	r18,r9,r2
   2a704:	6884983a 	sll	r2,r13,r2
   2a708:	494ad83a 	srl	r5,r9,r5
   2a70c:	9124b03a 	or	r18,r18,r4
   2a710:	101ac03a 	cmpne	r13,r2,zero
   2a714:	9364b03a 	or	r18,r18,r13
   2a718:	1947c83a 	sub	r3,r3,r5
   2a71c:	74a5c83a 	sub	r18,r14,r18
   2a720:	7489803a 	cmpltu	r4,r14,r18
   2a724:	1909c83a 	sub	r4,r3,r4
   2a728:	2080202c 	andhi	r2,r4,128
   2a72c:	10008626 	beq	r2,zero,2a948 <__adddf3+0x2e4>
   2a730:	00802034 	movhi	r2,128
   2a734:	10bfffc4 	addi	r2,r2,-1
   2a738:	20a6703a 	and	r19,r4,r2
   2a73c:	9800d626 	beq	r19,zero,2aa98 <__adddf3+0x434>
   2a740:	9809883a 	mov	r4,r19
   2a744:	002cf5c0 	call	2cf5c <__clzsi2>
   2a748:	133ffe04 	addi	r12,r2,-8
   2a74c:	01000804 	movi	r4,32
   2a750:	2309c83a 	sub	r4,r4,r12
   2a754:	9108d83a 	srl	r4,r18,r4
   2a758:	9b04983a 	sll	r2,r19,r12
   2a75c:	9324983a 	sll	r18,r18,r12
   2a760:	2088b03a 	or	r4,r4,r2
   2a764:	6440c716 	blt	r12,r17,2aa84 <__adddf3+0x420>
   2a768:	6459c83a 	sub	r12,r12,r17
   2a76c:	62000044 	addi	r8,r12,1
   2a770:	40800808 	cmpgei	r2,r8,32
   2a774:	1001191e 	bne	r2,zero,2abdc <__adddf3+0x578>
   2a778:	00800804 	movi	r2,32
   2a77c:	1205c83a 	sub	r2,r2,r8
   2a780:	9206d83a 	srl	r3,r18,r8
   2a784:	90a4983a 	sll	r18,r18,r2
   2a788:	2084983a 	sll	r2,r4,r2
   2a78c:	2208d83a 	srl	r4,r4,r8
   2a790:	9024c03a 	cmpne	r18,r18,zero
   2a794:	10c4b03a 	or	r2,r2,r3
   2a798:	14a4b03a 	or	r18,r2,r18
   2a79c:	0023883a 	mov	r17,zero
   2a7a0:	908001cc 	andi	r2,r18,7
   2a7a4:	10000726 	beq	r2,zero,2a7c4 <__adddf3+0x160>
   2a7a8:	908003cc 	andi	r2,r18,15
   2a7ac:	10800120 	cmpeqi	r2,r2,4
   2a7b0:	1000041e 	bne	r2,zero,2a7c4 <__adddf3+0x160>
   2a7b4:	90c00104 	addi	r3,r18,4
   2a7b8:	1ca5803a 	cmpltu	r18,r3,r18
   2a7bc:	2489883a 	add	r4,r4,r18
   2a7c0:	1825883a 	mov	r18,r3
   2a7c4:	2080202c 	andhi	r2,r4,128
   2a7c8:	10006126 	beq	r2,zero,2a950 <__adddf3+0x2ec>
   2a7cc:	89400044 	addi	r5,r17,1
   2a7d0:	2881ffe0 	cmpeqi	r2,r5,2047
   2a7d4:	2941ffcc 	andi	r5,r5,2047
   2a7d8:	1000731e 	bne	r2,zero,2a9a8 <__adddf3+0x344>
   2a7dc:	023fe034 	movhi	r8,65408
   2a7e0:	423fffc4 	addi	r8,r8,-1
   2a7e4:	2210703a 	and	r8,r4,r8
   2a7e8:	4006927a 	slli	r3,r8,9
   2a7ec:	9024d0fa 	srli	r18,r18,3
   2a7f0:	4004977a 	slli	r2,r8,29
   2a7f4:	1806d33a 	srli	r3,r3,12
   2a7f8:	1484b03a 	or	r2,r2,r18
   2a7fc:	280a953a 	slli	r5,r5,20
   2a800:	84003fcc 	andi	r16,r16,255
   2a804:	802097fa 	slli	r16,r16,31
   2a808:	28c6b03a 	or	r3,r5,r3
   2a80c:	1c06b03a 	or	r3,r3,r16
   2a810:	dfc00417 	ldw	ra,16(sp)
   2a814:	dcc00317 	ldw	r19,12(sp)
   2a818:	dc800217 	ldw	r18,8(sp)
   2a81c:	dc400117 	ldw	r17,4(sp)
   2a820:	dc000017 	ldw	r16,0(sp)
   2a824:	dec00504 	addi	sp,sp,20
   2a828:	f800283a 	ret
   2a82c:	28002726 	beq	r5,zero,2a8cc <__adddf3+0x268>
   2a830:	144bc83a 	sub	r5,r2,r17
   2a834:	8800be1e 	bne	r17,zero,2ab30 <__adddf3+0x4cc>
   2a838:	1b88b03a 	or	r4,r3,r14
   2a83c:	20013126 	beq	r4,zero,2ad04 <__adddf3+0x6a0>
   2a840:	293fffc4 	addi	r4,r5,-1
   2a844:	20017226 	beq	r4,zero,2ae10 <__adddf3+0x7ac>
   2a848:	2941ffd8 	cmpnei	r5,r5,2047
   2a84c:	2801c226 	beq	r5,zero,2af58 <__adddf3+0x8f4>
   2a850:	200b883a 	mov	r5,r4
   2a854:	0000b906 	br	2ab3c <__adddf3+0x4d8>
   2a858:	888bc83a 	sub	r5,r17,r2
   2a85c:	0140700e 	bge	zero,r5,2aa20 <__adddf3+0x3bc>
   2a860:	10002a26 	beq	r2,zero,2a90c <__adddf3+0x2a8>
   2a864:	8881ffd8 	cmpnei	r2,r17,2047
   2a868:	1000ca26 	beq	r2,zero,2ab94 <__adddf3+0x530>
   2a86c:	4a402034 	orhi	r9,r9,128
   2a870:	28800e48 	cmpgei	r2,r5,57
   2a874:	1000421e 	bne	r2,zero,2a980 <__adddf3+0x31c>
   2a878:	28800808 	cmpgei	r2,r5,32
   2a87c:	1000ff26 	beq	r2,zero,2ac7c <__adddf3+0x618>
   2a880:	2cbff804 	addi	r18,r5,-32
   2a884:	29000820 	cmpeqi	r4,r5,32
   2a888:	4c84d83a 	srl	r2,r9,r18
   2a88c:	2000041e 	bne	r4,zero,2a8a0 <__adddf3+0x23c>
   2a890:	01001004 	movi	r4,64
   2a894:	214bc83a 	sub	r5,r4,r5
   2a898:	4952983a 	sll	r9,r9,r5
   2a89c:	6a5ab03a 	or	r13,r13,r9
   2a8a0:	6824c03a 	cmpne	r18,r13,zero
   2a8a4:	90a4b03a 	or	r18,r18,r2
   2a8a8:	00003706 	br	2a988 <__adddf3+0x324>
   2a8ac:	4b44b03a 	or	r2,r9,r13
   2a8b0:	1000b126 	beq	r2,zero,2ab78 <__adddf3+0x514>
   2a8b4:	28bfffc4 	addi	r2,r5,-1
   2a8b8:	10011a26 	beq	r2,zero,2ad24 <__adddf3+0x6c0>
   2a8bc:	2941ffd8 	cmpnei	r5,r5,2047
   2a8c0:	28012526 	beq	r5,zero,2ad58 <__adddf3+0x6f4>
   2a8c4:	100b883a 	mov	r5,r2
   2a8c8:	003f8606 	br	2a6e4 <__adddf3+0x80>
   2a8cc:	8a800044 	addi	r10,r17,1
   2a8d0:	5281ff8c 	andi	r10,r10,2046
   2a8d4:	50008b1e 	bne	r10,zero,2ab04 <__adddf3+0x4a0>
   2a8d8:	1b96b03a 	or	r11,r3,r14
   2a8dc:	4b44b03a 	or	r2,r9,r13
   2a8e0:	8801031e 	bne	r17,zero,2acf0 <__adddf3+0x68c>
   2a8e4:	58014126 	beq	r11,zero,2adec <__adddf3+0x788>
   2a8e8:	1001571e 	bne	r2,zero,2ae48 <__adddf3+0x7e4>
   2a8ec:	1804977a 	slli	r2,r3,29
   2a8f0:	01480034 	movhi	r5,8192
   2a8f4:	297fffc4 	addi	r5,r5,-1
   2a8f8:	2148703a 	and	r4,r4,r5
   2a8fc:	1810d0fa 	srli	r8,r3,3
   2a900:	1104b03a 	or	r2,r2,r4
   2a904:	500b883a 	mov	r5,r10
   2a908:	00001806 	br	2a96c <__adddf3+0x308>
   2a90c:	4b44b03a 	or	r2,r9,r13
   2a910:	10010a26 	beq	r2,zero,2ad3c <__adddf3+0x6d8>
   2a914:	28bfffc4 	addi	r2,r5,-1
   2a918:	10000426 	beq	r2,zero,2a92c <__adddf3+0x2c8>
   2a91c:	2941ffd8 	cmpnei	r5,r5,2047
   2a920:	28014226 	beq	r5,zero,2ae2c <__adddf3+0x7c8>
   2a924:	100b883a 	mov	r5,r2
   2a928:	003fd106 	br	2a870 <__adddf3+0x20c>
   2a92c:	7365883a 	add	r18,r14,r13
   2a930:	1a47883a 	add	r3,r3,r9
   2a934:	9389803a 	cmpltu	r4,r18,r14
   2a938:	1909883a 	add	r4,r3,r4
   2a93c:	2080202c 	andhi	r2,r4,128
   2a940:	10009b1e 	bne	r2,zero,2abb0 <__adddf3+0x54c>
   2a944:	04400044 	movi	r17,1
   2a948:	908001cc 	andi	r2,r18,7
   2a94c:	103f961e 	bne	r2,zero,2a7a8 <__adddf3+0x144>
   2a950:	9024d0fa 	srli	r18,r18,3
   2a954:	2004977a 	slli	r2,r4,29
   2a958:	2010d0fa 	srli	r8,r4,3
   2a95c:	880b883a 	mov	r5,r17
   2a960:	9084b03a 	or	r2,r18,r2
   2a964:	28c1ffe0 	cmpeqi	r3,r5,2047
   2a968:	1800251e 	bne	r3,zero,2aa00 <__adddf3+0x39c>
   2a96c:	00c00434 	movhi	r3,16
   2a970:	18ffffc4 	addi	r3,r3,-1
   2a974:	40c6703a 	and	r3,r8,r3
   2a978:	2941ffcc 	andi	r5,r5,2047
   2a97c:	003f9f06 	br	2a7fc <__adddf3+0x198>
   2a980:	4b64b03a 	or	r18,r9,r13
   2a984:	9024c03a 	cmpne	r18,r18,zero
   2a988:	93a5883a 	add	r18,r18,r14
   2a98c:	9389803a 	cmpltu	r4,r18,r14
   2a990:	20c9883a 	add	r4,r4,r3
   2a994:	2080202c 	andhi	r2,r4,128
   2a998:	103feb26 	beq	r2,zero,2a948 <__adddf3+0x2e4>
   2a99c:	8c400044 	addi	r17,r17,1
   2a9a0:	8881ffe0 	cmpeqi	r2,r17,2047
   2a9a4:	10008326 	beq	r2,zero,2abb4 <__adddf3+0x550>
   2a9a8:	0141ffc4 	movi	r5,2047
   2a9ac:	0007883a 	mov	r3,zero
   2a9b0:	0005883a 	mov	r2,zero
   2a9b4:	003f9106 	br	2a7fc <__adddf3+0x198>
   2a9b8:	4b44b03a 	or	r2,r9,r13
   2a9bc:	180a977a 	slli	r5,r3,29
   2a9c0:	1810d0fa 	srli	r8,r3,3
   2a9c4:	10016c26 	beq	r2,zero,2af78 <__adddf3+0x914>
   2a9c8:	00c80034 	movhi	r3,8192
   2a9cc:	18ffffc4 	addi	r3,r3,-1
   2a9d0:	20c4703a 	and	r2,r4,r3
   2a9d4:	4100022c 	andhi	r4,r8,8
   2a9d8:	1144b03a 	or	r2,r2,r5
   2a9dc:	20000826 	beq	r4,zero,2aa00 <__adddf3+0x39c>
   2a9e0:	4808d0fa 	srli	r4,r9,3
   2a9e4:	2140022c 	andhi	r5,r4,8
   2a9e8:	2800051e 	bne	r5,zero,2aa00 <__adddf3+0x39c>
   2a9ec:	4804977a 	slli	r2,r9,29
   2a9f0:	30cc703a 	and	r6,r6,r3
   2a9f4:	3821883a 	mov	r16,r7
   2a9f8:	3084b03a 	or	r2,r6,r2
   2a9fc:	2011883a 	mov	r8,r4
   2aa00:	4086b03a 	or	r3,r8,r2
   2aa04:	18017126 	beq	r3,zero,2afcc <__adddf3+0x968>
   2aa08:	01000434 	movhi	r4,16
   2aa0c:	40c00234 	orhi	r3,r8,8
   2aa10:	213fffc4 	addi	r4,r4,-1
   2aa14:	1906703a 	and	r3,r3,r4
   2aa18:	0141ffc4 	movi	r5,2047
   2aa1c:	003f7706 	br	2a7fc <__adddf3+0x198>
   2aa20:	28002926 	beq	r5,zero,2aac8 <__adddf3+0x464>
   2aa24:	144bc83a 	sub	r5,r2,r17
   2aa28:	88008c26 	beq	r17,zero,2ac5c <__adddf3+0x5f8>
   2aa2c:	1101ffd8 	cmpnei	r4,r2,2047
   2aa30:	20011126 	beq	r4,zero,2ae78 <__adddf3+0x814>
   2aa34:	18c02034 	orhi	r3,r3,128
   2aa38:	29000e48 	cmpgei	r4,r5,57
   2aa3c:	2000d51e 	bne	r4,zero,2ad94 <__adddf3+0x730>
   2aa40:	29000808 	cmpgei	r4,r5,32
   2aa44:	2001511e 	bne	r4,zero,2af8c <__adddf3+0x928>
   2aa48:	01000804 	movi	r4,32
   2aa4c:	2149c83a 	sub	r4,r4,r5
   2aa50:	1924983a 	sll	r18,r3,r4
   2aa54:	714cd83a 	srl	r6,r14,r5
   2aa58:	7108983a 	sll	r4,r14,r4
   2aa5c:	194ad83a 	srl	r5,r3,r5
   2aa60:	91a4b03a 	or	r18,r18,r6
   2aa64:	2006c03a 	cmpne	r3,r4,zero
   2aa68:	90e4b03a 	or	r18,r18,r3
   2aa6c:	4953883a 	add	r9,r9,r5
   2aa70:	9365883a 	add	r18,r18,r13
   2aa74:	9349803a 	cmpltu	r4,r18,r13
   2aa78:	2249883a 	add	r4,r4,r9
   2aa7c:	1023883a 	mov	r17,r2
   2aa80:	003fc406 	br	2a994 <__adddf3+0x330>
   2aa84:	023fe034 	movhi	r8,65408
   2aa88:	423fffc4 	addi	r8,r8,-1
   2aa8c:	8b23c83a 	sub	r17,r17,r12
   2aa90:	2208703a 	and	r4,r4,r8
   2aa94:	003f4206 	br	2a7a0 <__adddf3+0x13c>
   2aa98:	9009883a 	mov	r4,r18
   2aa9c:	002cf5c0 	call	2cf5c <__clzsi2>
   2aaa0:	13000604 	addi	r12,r2,24
   2aaa4:	60c00808 	cmpgei	r3,r12,32
   2aaa8:	183f2826 	beq	r3,zero,2a74c <__adddf3+0xe8>
   2aaac:	113ffe04 	addi	r4,r2,-8
   2aab0:	9108983a 	sll	r4,r18,r4
   2aab4:	0025883a 	mov	r18,zero
   2aab8:	003f2a06 	br	2a764 <__adddf3+0x100>
   2aabc:	4b64b03a 	or	r18,r9,r13
   2aac0:	9024c03a 	cmpne	r18,r18,zero
   2aac4:	003f1506 	br	2a71c <__adddf3+0xb8>
   2aac8:	8a000044 	addi	r8,r17,1
   2aacc:	4081ff8c 	andi	r2,r8,2046
   2aad0:	1000751e 	bne	r2,zero,2aca8 <__adddf3+0x644>
   2aad4:	1b84b03a 	or	r2,r3,r14
   2aad8:	8800bc1e 	bne	r17,zero,2adcc <__adddf3+0x768>
   2aadc:	10010c26 	beq	r2,zero,2af10 <__adddf3+0x8ac>
   2aae0:	4b44b03a 	or	r2,r9,r13
   2aae4:	1001111e 	bne	r2,zero,2af2c <__adddf3+0x8c8>
   2aae8:	180c977a 	slli	r6,r3,29
   2aaec:	00880034 	movhi	r2,8192
   2aaf0:	10bfffc4 	addi	r2,r2,-1
   2aaf4:	2084703a 	and	r2,r4,r2
   2aaf8:	1810d0fa 	srli	r8,r3,3
   2aafc:	1184b03a 	or	r2,r2,r6
   2ab00:	003f9a06 	br	2a96c <__adddf3+0x308>
   2ab04:	7365c83a 	sub	r18,r14,r13
   2ab08:	1a67c83a 	sub	r19,r3,r9
   2ab0c:	7489803a 	cmpltu	r4,r14,r18
   2ab10:	9927c83a 	sub	r19,r19,r4
   2ab14:	9880202c 	andhi	r2,r19,128
   2ab18:	10006f1e 	bne	r2,zero,2acd8 <__adddf3+0x674>
   2ab1c:	94c4b03a 	or	r2,r18,r19
   2ab20:	103f061e 	bne	r2,zero,2a73c <__adddf3+0xd8>
   2ab24:	0011883a 	mov	r8,zero
   2ab28:	0021883a 	mov	r16,zero
   2ab2c:	003f8f06 	br	2a96c <__adddf3+0x308>
   2ab30:	1101ffd8 	cmpnei	r4,r2,2047
   2ab34:	20008f26 	beq	r4,zero,2ad74 <__adddf3+0x710>
   2ab38:	18c02034 	orhi	r3,r3,128
   2ab3c:	29000e48 	cmpgei	r4,r5,57
   2ab40:	20003e1e 	bne	r4,zero,2ac3c <__adddf3+0x5d8>
   2ab44:	29000808 	cmpgei	r4,r5,32
   2ab48:	2000951e 	bne	r4,zero,2ada0 <__adddf3+0x73c>
   2ab4c:	01000804 	movi	r4,32
   2ab50:	2149c83a 	sub	r4,r4,r5
   2ab54:	1924983a 	sll	r18,r3,r4
   2ab58:	714cd83a 	srl	r6,r14,r5
   2ab5c:	711c983a 	sll	r14,r14,r4
   2ab60:	1946d83a 	srl	r3,r3,r5
   2ab64:	91a4b03a 	or	r18,r18,r6
   2ab68:	701cc03a 	cmpne	r14,r14,zero
   2ab6c:	93a4b03a 	or	r18,r18,r14
   2ab70:	48d3c83a 	sub	r9,r9,r3
   2ab74:	00003306 	br	2ac44 <__adddf3+0x5e0>
   2ab78:	1824977a 	slli	r18,r3,29
   2ab7c:	01880034 	movhi	r6,8192
   2ab80:	31bfffc4 	addi	r6,r6,-1
   2ab84:	2184703a 	and	r2,r4,r6
   2ab88:	1810d0fa 	srli	r8,r3,3
   2ab8c:	1484b03a 	or	r2,r2,r18
   2ab90:	003f7406 	br	2a964 <__adddf3+0x300>
   2ab94:	1804977a 	slli	r2,r3,29
   2ab98:	01480034 	movhi	r5,8192
   2ab9c:	297fffc4 	addi	r5,r5,-1
   2aba0:	2148703a 	and	r4,r4,r5
   2aba4:	1810d0fa 	srli	r8,r3,3
   2aba8:	1104b03a 	or	r2,r2,r4
   2abac:	003f9406 	br	2aa00 <__adddf3+0x39c>
   2abb0:	04400084 	movi	r17,2
   2abb4:	00bfe034 	movhi	r2,65408
   2abb8:	10bfffc4 	addi	r2,r2,-1
   2abbc:	9006d07a 	srli	r3,r18,1
   2abc0:	2088703a 	and	r4,r4,r2
   2abc4:	200497fa 	slli	r2,r4,31
   2abc8:	9480004c 	andi	r18,r18,1
   2abcc:	1ca4b03a 	or	r18,r3,r18
   2abd0:	2008d07a 	srli	r4,r4,1
   2abd4:	14a4b03a 	or	r18,r2,r18
   2abd8:	003ef106 	br	2a7a0 <__adddf3+0x13c>
   2abdc:	633ff844 	addi	r12,r12,-31
   2abe0:	40800820 	cmpeqi	r2,r8,32
   2abe4:	2318d83a 	srl	r12,r4,r12
   2abe8:	1000041e 	bne	r2,zero,2abfc <__adddf3+0x598>
   2abec:	00801004 	movi	r2,64
   2abf0:	1211c83a 	sub	r8,r2,r8
   2abf4:	2208983a 	sll	r4,r4,r8
   2abf8:	9124b03a 	or	r18,r18,r4
   2abfc:	9024c03a 	cmpne	r18,r18,zero
   2ac00:	9324b03a 	or	r18,r18,r12
   2ac04:	0009883a 	mov	r4,zero
   2ac08:	0023883a 	mov	r17,zero
   2ac0c:	003f4e06 	br	2a948 <__adddf3+0x2e4>
   2ac10:	2cbff804 	addi	r18,r5,-32
   2ac14:	29000820 	cmpeqi	r4,r5,32
   2ac18:	4c84d83a 	srl	r2,r9,r18
   2ac1c:	2000041e 	bne	r4,zero,2ac30 <__adddf3+0x5cc>
   2ac20:	01001004 	movi	r4,64
   2ac24:	214bc83a 	sub	r5,r4,r5
   2ac28:	4952983a 	sll	r9,r9,r5
   2ac2c:	6a5ab03a 	or	r13,r13,r9
   2ac30:	6824c03a 	cmpne	r18,r13,zero
   2ac34:	90a4b03a 	or	r18,r18,r2
   2ac38:	003eb806 	br	2a71c <__adddf3+0xb8>
   2ac3c:	1b88b03a 	or	r4,r3,r14
   2ac40:	2024c03a 	cmpne	r18,r4,zero
   2ac44:	6ca5c83a 	sub	r18,r13,r18
   2ac48:	6c89803a 	cmpltu	r4,r13,r18
   2ac4c:	4909c83a 	sub	r4,r9,r4
   2ac50:	3821883a 	mov	r16,r7
   2ac54:	1023883a 	mov	r17,r2
   2ac58:	003eb306 	br	2a728 <__adddf3+0xc4>
   2ac5c:	1b88b03a 	or	r4,r3,r14
   2ac60:	20008c26 	beq	r4,zero,2ae94 <__adddf3+0x830>
   2ac64:	293fffc4 	addi	r4,r5,-1
   2ac68:	2000d326 	beq	r4,zero,2afb8 <__adddf3+0x954>
   2ac6c:	2941ffd8 	cmpnei	r5,r5,2047
   2ac70:	28008126 	beq	r5,zero,2ae78 <__adddf3+0x814>
   2ac74:	200b883a 	mov	r5,r4
   2ac78:	003f6f06 	br	2aa38 <__adddf3+0x3d4>
   2ac7c:	00800804 	movi	r2,32
   2ac80:	1145c83a 	sub	r2,r2,r5
   2ac84:	6948d83a 	srl	r4,r13,r5
   2ac88:	48a4983a 	sll	r18,r9,r2
   2ac8c:	6884983a 	sll	r2,r13,r2
   2ac90:	494ad83a 	srl	r5,r9,r5
   2ac94:	9124b03a 	or	r18,r18,r4
   2ac98:	101ac03a 	cmpne	r13,r2,zero
   2ac9c:	9364b03a 	or	r18,r18,r13
   2aca0:	1947883a 	add	r3,r3,r5
   2aca4:	003f3806 	br	2a988 <__adddf3+0x324>
   2aca8:	4081ffe0 	cmpeqi	r2,r8,2047
   2acac:	103f3e1e 	bne	r2,zero,2a9a8 <__adddf3+0x344>
   2acb0:	7345883a 	add	r2,r14,r13
   2acb4:	139d803a 	cmpltu	r14,r2,r14
   2acb8:	1a49883a 	add	r4,r3,r9
   2acbc:	2389883a 	add	r4,r4,r14
   2acc0:	202497fa 	slli	r18,r4,31
   2acc4:	1004d07a 	srli	r2,r2,1
   2acc8:	2008d07a 	srli	r4,r4,1
   2accc:	4023883a 	mov	r17,r8
   2acd0:	90a4b03a 	or	r18,r18,r2
   2acd4:	003f1c06 	br	2a948 <__adddf3+0x2e4>
   2acd8:	6ba5c83a 	sub	r18,r13,r14
   2acdc:	48c9c83a 	sub	r4,r9,r3
   2ace0:	6c85803a 	cmpltu	r2,r13,r18
   2ace4:	20a7c83a 	sub	r19,r4,r2
   2ace8:	3821883a 	mov	r16,r7
   2acec:	003e9306 	br	2a73c <__adddf3+0xd8>
   2acf0:	58006f1e 	bne	r11,zero,2aeb0 <__adddf3+0x84c>
   2acf4:	10001f1e 	bne	r2,zero,2ad74 <__adddf3+0x710>
   2acf8:	00bfffc4 	movi	r2,-1
   2acfc:	0021883a 	mov	r16,zero
   2ad00:	003f4106 	br	2aa08 <__adddf3+0x3a4>
   2ad04:	4808977a 	slli	r4,r9,29
   2ad08:	00c80034 	movhi	r3,8192
   2ad0c:	18ffffc4 	addi	r3,r3,-1
   2ad10:	30c4703a 	and	r2,r6,r3
   2ad14:	4810d0fa 	srli	r8,r9,3
   2ad18:	1104b03a 	or	r2,r2,r4
   2ad1c:	3821883a 	mov	r16,r7
   2ad20:	003f1006 	br	2a964 <__adddf3+0x300>
   2ad24:	7365c83a 	sub	r18,r14,r13
   2ad28:	1a47c83a 	sub	r3,r3,r9
   2ad2c:	7489803a 	cmpltu	r4,r14,r18
   2ad30:	1909c83a 	sub	r4,r3,r4
   2ad34:	04400044 	movi	r17,1
   2ad38:	003e7b06 	br	2a728 <__adddf3+0xc4>
   2ad3c:	1824977a 	slli	r18,r3,29
   2ad40:	01c80034 	movhi	r7,8192
   2ad44:	39ffffc4 	addi	r7,r7,-1
   2ad48:	21c4703a 	and	r2,r4,r7
   2ad4c:	1810d0fa 	srli	r8,r3,3
   2ad50:	1484b03a 	or	r2,r2,r18
   2ad54:	003f0306 	br	2a964 <__adddf3+0x300>
   2ad58:	1824977a 	slli	r18,r3,29
   2ad5c:	01480034 	movhi	r5,8192
   2ad60:	297fffc4 	addi	r5,r5,-1
   2ad64:	2144703a 	and	r2,r4,r5
   2ad68:	1810d0fa 	srli	r8,r3,3
   2ad6c:	1484b03a 	or	r2,r2,r18
   2ad70:	003f2306 	br	2aa00 <__adddf3+0x39c>
   2ad74:	4806977a 	slli	r3,r9,29
   2ad78:	00880034 	movhi	r2,8192
   2ad7c:	10bfffc4 	addi	r2,r2,-1
   2ad80:	3084703a 	and	r2,r6,r2
   2ad84:	4810d0fa 	srli	r8,r9,3
   2ad88:	10c4b03a 	or	r2,r2,r3
   2ad8c:	3821883a 	mov	r16,r7
   2ad90:	003f1b06 	br	2aa00 <__adddf3+0x39c>
   2ad94:	1b88b03a 	or	r4,r3,r14
   2ad98:	2024c03a 	cmpne	r18,r4,zero
   2ad9c:	003f3406 	br	2aa70 <__adddf3+0x40c>
   2ada0:	2cbff804 	addi	r18,r5,-32
   2ada4:	29800820 	cmpeqi	r6,r5,32
   2ada8:	1c88d83a 	srl	r4,r3,r18
   2adac:	3000041e 	bne	r6,zero,2adc0 <__adddf3+0x75c>
   2adb0:	01801004 	movi	r6,64
   2adb4:	314bc83a 	sub	r5,r6,r5
   2adb8:	1946983a 	sll	r3,r3,r5
   2adbc:	70dcb03a 	or	r14,r14,r3
   2adc0:	7024c03a 	cmpne	r18,r14,zero
   2adc4:	9124b03a 	or	r18,r18,r4
   2adc8:	003f9e06 	br	2ac44 <__adddf3+0x5e0>
   2adcc:	103efa1e 	bne	r2,zero,2a9b8 <__adddf3+0x354>
   2add0:	4804977a 	slli	r2,r9,29
   2add4:	00c80034 	movhi	r3,8192
   2add8:	18ffffc4 	addi	r3,r3,-1
   2addc:	30cc703a 	and	r6,r6,r3
   2ade0:	4810d0fa 	srli	r8,r9,3
   2ade4:	1184b03a 	or	r2,r2,r6
   2ade8:	003f0506 	br	2aa00 <__adddf3+0x39c>
   2adec:	10004426 	beq	r2,zero,2af00 <__adddf3+0x89c>
   2adf0:	4806977a 	slli	r3,r9,29
   2adf4:	00880034 	movhi	r2,8192
   2adf8:	10bfffc4 	addi	r2,r2,-1
   2adfc:	3084703a 	and	r2,r6,r2
   2ae00:	4810d0fa 	srli	r8,r9,3
   2ae04:	10c4b03a 	or	r2,r2,r3
   2ae08:	3821883a 	mov	r16,r7
   2ae0c:	003ed706 	br	2a96c <__adddf3+0x308>
   2ae10:	6ba5c83a 	sub	r18,r13,r14
   2ae14:	48c7c83a 	sub	r3,r9,r3
   2ae18:	6c85803a 	cmpltu	r2,r13,r18
   2ae1c:	1889c83a 	sub	r4,r3,r2
   2ae20:	3821883a 	mov	r16,r7
   2ae24:	04400044 	movi	r17,1
   2ae28:	003e3f06 	br	2a728 <__adddf3+0xc4>
   2ae2c:	180a977a 	slli	r5,r3,29
   2ae30:	00880034 	movhi	r2,8192
   2ae34:	10bfffc4 	addi	r2,r2,-1
   2ae38:	2084703a 	and	r2,r4,r2
   2ae3c:	1810d0fa 	srli	r8,r3,3
   2ae40:	1144b03a 	or	r2,r2,r5
   2ae44:	003eee06 	br	2aa00 <__adddf3+0x39c>
   2ae48:	7365c83a 	sub	r18,r14,r13
   2ae4c:	7485803a 	cmpltu	r2,r14,r18
   2ae50:	1a49c83a 	sub	r4,r3,r9
   2ae54:	2089c83a 	sub	r4,r4,r2
   2ae58:	2080202c 	andhi	r2,r4,128
   2ae5c:	10002626 	beq	r2,zero,2aef8 <__adddf3+0x894>
   2ae60:	6ba5c83a 	sub	r18,r13,r14
   2ae64:	48c7c83a 	sub	r3,r9,r3
   2ae68:	6c85803a 	cmpltu	r2,r13,r18
   2ae6c:	1889c83a 	sub	r4,r3,r2
   2ae70:	3821883a 	mov	r16,r7
   2ae74:	003e4a06 	br	2a7a0 <__adddf3+0x13c>
   2ae78:	4806977a 	slli	r3,r9,29
   2ae7c:	00880034 	movhi	r2,8192
   2ae80:	10bfffc4 	addi	r2,r2,-1
   2ae84:	3084703a 	and	r2,r6,r2
   2ae88:	4810d0fa 	srli	r8,r9,3
   2ae8c:	10c4b03a 	or	r2,r2,r3
   2ae90:	003edb06 	br	2aa00 <__adddf3+0x39c>
   2ae94:	4806977a 	slli	r3,r9,29
   2ae98:	00880034 	movhi	r2,8192
   2ae9c:	10bfffc4 	addi	r2,r2,-1
   2aea0:	3084703a 	and	r2,r6,r2
   2aea4:	4810d0fa 	srli	r8,r9,3
   2aea8:	10c4b03a 	or	r2,r2,r3
   2aeac:	003ead06 	br	2a964 <__adddf3+0x300>
   2aeb0:	180a977a 	slli	r5,r3,29
   2aeb4:	1810d0fa 	srli	r8,r3,3
   2aeb8:	10002f26 	beq	r2,zero,2af78 <__adddf3+0x914>
   2aebc:	00c80034 	movhi	r3,8192
   2aec0:	18ffffc4 	addi	r3,r3,-1
   2aec4:	20c4703a 	and	r2,r4,r3
   2aec8:	4100022c 	andhi	r4,r8,8
   2aecc:	1144b03a 	or	r2,r2,r5
   2aed0:	203ecb26 	beq	r4,zero,2aa00 <__adddf3+0x39c>
   2aed4:	4808d0fa 	srli	r4,r9,3
   2aed8:	2140022c 	andhi	r5,r4,8
   2aedc:	283ec81e 	bne	r5,zero,2aa00 <__adddf3+0x39c>
   2aee0:	4812977a 	slli	r9,r9,29
   2aee4:	30c4703a 	and	r2,r6,r3
   2aee8:	3821883a 	mov	r16,r7
   2aeec:	1244b03a 	or	r2,r2,r9
   2aef0:	2011883a 	mov	r8,r4
   2aef4:	003ec206 	br	2aa00 <__adddf3+0x39c>
   2aef8:	9104b03a 	or	r2,r18,r4
   2aefc:	103e921e 	bne	r2,zero,2a948 <__adddf3+0x2e4>
   2af00:	0011883a 	mov	r8,zero
   2af04:	100b883a 	mov	r5,r2
   2af08:	0021883a 	mov	r16,zero
   2af0c:	003e9706 	br	2a96c <__adddf3+0x308>
   2af10:	4804977a 	slli	r2,r9,29
   2af14:	00c80034 	movhi	r3,8192
   2af18:	18ffffc4 	addi	r3,r3,-1
   2af1c:	30cc703a 	and	r6,r6,r3
   2af20:	4810d0fa 	srli	r8,r9,3
   2af24:	1184b03a 	or	r2,r2,r6
   2af28:	003e9006 	br	2a96c <__adddf3+0x308>
   2af2c:	7365883a 	add	r18,r14,r13
   2af30:	1a47883a 	add	r3,r3,r9
   2af34:	9389803a 	cmpltu	r4,r18,r14
   2af38:	1909883a 	add	r4,r3,r4
   2af3c:	2080202c 	andhi	r2,r4,128
   2af40:	103e8126 	beq	r2,zero,2a948 <__adddf3+0x2e4>
   2af44:	00bfe034 	movhi	r2,65408
   2af48:	10bfffc4 	addi	r2,r2,-1
   2af4c:	2088703a 	and	r4,r4,r2
   2af50:	04400044 	movi	r17,1
   2af54:	003e7c06 	br	2a948 <__adddf3+0x2e4>
   2af58:	4804977a 	slli	r2,r9,29
   2af5c:	00c80034 	movhi	r3,8192
   2af60:	18ffffc4 	addi	r3,r3,-1
   2af64:	30cc703a 	and	r6,r6,r3
   2af68:	4810d0fa 	srli	r8,r9,3
   2af6c:	1184b03a 	or	r2,r2,r6
   2af70:	3821883a 	mov	r16,r7
   2af74:	003ea206 	br	2aa00 <__adddf3+0x39c>
   2af78:	00880034 	movhi	r2,8192
   2af7c:	10bfffc4 	addi	r2,r2,-1
   2af80:	2084703a 	and	r2,r4,r2
   2af84:	1144b03a 	or	r2,r2,r5
   2af88:	003e9d06 	br	2aa00 <__adddf3+0x39c>
   2af8c:	293ff804 	addi	r4,r5,-32
   2af90:	29800820 	cmpeqi	r6,r5,32
   2af94:	1908d83a 	srl	r4,r3,r4
   2af98:	3000041e 	bne	r6,zero,2afac <__adddf3+0x948>
   2af9c:	01801004 	movi	r6,64
   2afa0:	314bc83a 	sub	r5,r6,r5
   2afa4:	1946983a 	sll	r3,r3,r5
   2afa8:	70dcb03a 	or	r14,r14,r3
   2afac:	7024c03a 	cmpne	r18,r14,zero
   2afb0:	9124b03a 	or	r18,r18,r4
   2afb4:	003eae06 	br	2aa70 <__adddf3+0x40c>
   2afb8:	7365883a 	add	r18,r14,r13
   2afbc:	1a47883a 	add	r3,r3,r9
   2afc0:	9345803a 	cmpltu	r2,r18,r13
   2afc4:	1889883a 	add	r4,r3,r2
   2afc8:	003e5c06 	br	2a93c <__adddf3+0x2d8>
   2afcc:	0005883a 	mov	r2,zero
   2afd0:	0141ffc4 	movi	r5,2047
   2afd4:	0007883a 	mov	r3,zero
   2afd8:	003e0806 	br	2a7fc <__adddf3+0x198>

0002afdc <__divdf3>:
   2afdc:	2810d53a 	srli	r8,r5,20
   2afe0:	defff004 	addi	sp,sp,-64
   2afe4:	dc000615 	stw	r16,24(sp)
   2afe8:	04000434 	movhi	r16,16
   2afec:	df000e15 	stw	fp,56(sp)
   2aff0:	ddc00d15 	stw	r23,52(sp)
   2aff4:	dd800c15 	stw	r22,48(sp)
   2aff8:	dd000a15 	stw	r20,40(sp)
   2affc:	843fffc4 	addi	r16,r16,-1
   2b000:	dfc00f15 	stw	ra,60(sp)
   2b004:	dd400b15 	stw	r21,44(sp)
   2b008:	dcc00915 	stw	r19,36(sp)
   2b00c:	dc800815 	stw	r18,32(sp)
   2b010:	dc400715 	stw	r17,28(sp)
   2b014:	4201ffcc 	andi	r8,r8,2047
   2b018:	282ed7fa 	srli	r23,r5,31
   2b01c:	3039883a 	mov	fp,r6
   2b020:	382d883a 	mov	r22,r7
   2b024:	2029883a 	mov	r20,r4
   2b028:	2c20703a 	and	r16,r5,r16
   2b02c:	40005326 	beq	r8,zero,2b17c <__divdf3+0x1a0>
   2b030:	4081ffe0 	cmpeqi	r2,r8,2047
   2b034:	1000641e 	bne	r2,zero,2b1c8 <__divdf3+0x1ec>
   2b038:	2026d77a 	srli	r19,r4,29
   2b03c:	800a90fa 	slli	r5,r16,3
   2b040:	202890fa 	slli	r20,r4,3
   2b044:	44bf0044 	addi	r18,r8,-1023
   2b048:	994ab03a 	or	r5,r19,r5
   2b04c:	2cc02034 	orhi	r19,r5,128
   2b050:	0021883a 	mov	r16,zero
   2b054:	0023883a 	mov	r17,zero
   2b058:	b010d53a 	srli	r8,r22,20
   2b05c:	00c00434 	movhi	r3,16
   2b060:	18ffffc4 	addi	r3,r3,-1
   2b064:	4201ffcc 	andi	r8,r8,2047
   2b068:	b02ad7fa 	srli	r21,r22,31
   2b06c:	b0ec703a 	and	r22,r22,r3
   2b070:	40005c26 	beq	r8,zero,2b1e4 <__divdf3+0x208>
   2b074:	4081ffe0 	cmpeqi	r2,r8,2047
   2b078:	1000201e 	bne	r2,zero,2b0fc <__divdf3+0x120>
   2b07c:	b00690fa 	slli	r3,r22,3
   2b080:	e004d77a 	srli	r2,fp,29
   2b084:	e01490fa 	slli	r10,fp,3
   2b088:	423f0044 	addi	r8,r8,-1023
   2b08c:	10c6b03a 	or	r3,r2,r3
   2b090:	1d802034 	orhi	r22,r3,128
   2b094:	9225c83a 	sub	r18,r18,r8
   2b098:	0007883a 	mov	r3,zero
   2b09c:	80800428 	cmpgeui	r2,r16,16
   2b0a0:	bd52f03a 	xor	r9,r23,r21
   2b0a4:	1000a81e 	bne	r2,zero,2b348 <__divdf3+0x36c>
   2b0a8:	800c90ba 	slli	r6,r16,2
   2b0ac:	008000f4 	movhi	r2,3
   2b0b0:	3085883a 	add	r2,r6,r2
   2b0b4:	10ac2f17 	ldw	r2,-20292(r2)
   2b0b8:	1000683a 	jmp	r2
   2b0bc:	0002b348 	cmpgei	zero,zero,2765
   2b0c0:	0002b16c 	andhi	zero,zero,2757
   2b0c4:	0002b118 	cmpnei	zero,zero,2756
   2b0c8:	0002b290 	cmplti	zero,zero,2762
   2b0cc:	0002b118 	cmpnei	zero,zero,2756
   2b0d0:	0002b2ec 	andhi	zero,zero,2763
   2b0d4:	0002b118 	cmpnei	zero,zero,2756
   2b0d8:	0002b290 	cmplti	zero,zero,2762
   2b0dc:	0002b16c 	andhi	zero,zero,2757
   2b0e0:	0002b16c 	andhi	zero,zero,2757
   2b0e4:	0002b2ec 	andhi	zero,zero,2763
   2b0e8:	0002b290 	cmplti	zero,zero,2762
   2b0ec:	0002b228 	cmpgeui	zero,zero,2760
   2b0f0:	0002b228 	cmpgeui	zero,zero,2760
   2b0f4:	0002b228 	cmpgeui	zero,zero,2760
   2b0f8:	0002b304 	movi	zero,2764
   2b0fc:	b714b03a 	or	r10,r22,fp
   2b100:	94be0044 	addi	r18,r18,-2047
   2b104:	5000671e 	bne	r10,zero,2b2a4 <__divdf3+0x2c8>
   2b108:	84000094 	ori	r16,r16,2
   2b10c:	002d883a 	mov	r22,zero
   2b110:	00c00084 	movi	r3,2
   2b114:	003fe106 	br	2b09c <__divdf3+0xc0>
   2b118:	0007883a 	mov	r3,zero
   2b11c:	000b883a 	mov	r5,zero
   2b120:	0029883a 	mov	r20,zero
   2b124:	1806953a 	slli	r3,r3,20
   2b128:	4a403fcc 	andi	r9,r9,255
   2b12c:	481297fa 	slli	r9,r9,31
   2b130:	1946b03a 	or	r3,r3,r5
   2b134:	a005883a 	mov	r2,r20
   2b138:	1a46b03a 	or	r3,r3,r9
   2b13c:	dfc00f17 	ldw	ra,60(sp)
   2b140:	df000e17 	ldw	fp,56(sp)
   2b144:	ddc00d17 	ldw	r23,52(sp)
   2b148:	dd800c17 	ldw	r22,48(sp)
   2b14c:	dd400b17 	ldw	r21,44(sp)
   2b150:	dd000a17 	ldw	r20,40(sp)
   2b154:	dcc00917 	ldw	r19,36(sp)
   2b158:	dc800817 	ldw	r18,32(sp)
   2b15c:	dc400717 	ldw	r17,28(sp)
   2b160:	dc000617 	ldw	r16,24(sp)
   2b164:	dec01004 	addi	sp,sp,64
   2b168:	f800283a 	ret
   2b16c:	00c1ffc4 	movi	r3,2047
   2b170:	000b883a 	mov	r5,zero
   2b174:	0029883a 	mov	r20,zero
   2b178:	003fea06 	br	2b124 <__divdf3+0x148>
   2b17c:	2426b03a 	or	r19,r4,r16
   2b180:	2023883a 	mov	r17,r4
   2b184:	98004f26 	beq	r19,zero,2b2c4 <__divdf3+0x2e8>
   2b188:	80017b26 	beq	r16,zero,2b778 <__divdf3+0x79c>
   2b18c:	8009883a 	mov	r4,r16
   2b190:	002cf5c0 	call	2cf5c <__clzsi2>
   2b194:	113ffd44 	addi	r4,r2,-11
   2b198:	00c00744 	movi	r3,29
   2b19c:	14fffe04 	addi	r19,r2,-8
   2b1a0:	1907c83a 	sub	r3,r3,r4
   2b1a4:	84ca983a 	sll	r5,r16,r19
   2b1a8:	88c6d83a 	srl	r3,r17,r3
   2b1ac:	8ce8983a 	sll	r20,r17,r19
   2b1b0:	1966b03a 	or	r19,r3,r5
   2b1b4:	023f0344 	movi	r8,-1011
   2b1b8:	40a5c83a 	sub	r18,r8,r2
   2b1bc:	0021883a 	mov	r16,zero
   2b1c0:	0023883a 	mov	r17,zero
   2b1c4:	003fa406 	br	2b058 <__divdf3+0x7c>
   2b1c8:	2426b03a 	or	r19,r4,r16
   2b1cc:	9800421e 	bne	r19,zero,2b2d8 <__divdf3+0x2fc>
   2b1d0:	0029883a 	mov	r20,zero
   2b1d4:	04000204 	movi	r16,8
   2b1d8:	0481ffc4 	movi	r18,2047
   2b1dc:	04400084 	movi	r17,2
   2b1e0:	003f9d06 	br	2b058 <__divdf3+0x7c>
   2b1e4:	b714b03a 	or	r10,r22,fp
   2b1e8:	50003226 	beq	r10,zero,2b2b4 <__divdf3+0x2d8>
   2b1ec:	b0016c26 	beq	r22,zero,2b7a0 <__divdf3+0x7c4>
   2b1f0:	b009883a 	mov	r4,r22
   2b1f4:	002cf5c0 	call	2cf5c <__clzsi2>
   2b1f8:	117ffd44 	addi	r5,r2,-11
   2b1fc:	01000744 	movi	r4,29
   2b200:	12bffe04 	addi	r10,r2,-8
   2b204:	2149c83a 	sub	r4,r4,r5
   2b208:	b286983a 	sll	r3,r22,r10
   2b20c:	e108d83a 	srl	r4,fp,r4
   2b210:	e294983a 	sll	r10,fp,r10
   2b214:	20ecb03a 	or	r22,r4,r3
   2b218:	1491883a 	add	r8,r2,r18
   2b21c:	4480fcc4 	addi	r18,r8,1011
   2b220:	0007883a 	mov	r3,zero
   2b224:	003f9d06 	br	2b09c <__divdf3+0xc0>
   2b228:	b813883a 	mov	r9,r23
   2b22c:	888000a0 	cmpeqi	r2,r17,2
   2b230:	103fce1e 	bne	r2,zero,2b16c <__divdf3+0x190>
   2b234:	888000e0 	cmpeqi	r2,r17,3
   2b238:	1001ac1e 	bne	r2,zero,2b8ec <__divdf3+0x910>
   2b23c:	88800060 	cmpeqi	r2,r17,1
   2b240:	103fb51e 	bne	r2,zero,2b118 <__divdf3+0x13c>
   2b244:	9440ffc4 	addi	r17,r18,1023
   2b248:	04411c0e 	bge	zero,r17,2b6bc <__divdf3+0x6e0>
   2b24c:	a08001cc 	andi	r2,r20,7
   2b250:	1001831e 	bne	r2,zero,2b860 <__divdf3+0x884>
   2b254:	a008d0fa 	srli	r4,r20,3
   2b258:	9880402c 	andhi	r2,r19,256
   2b25c:	10000426 	beq	r2,zero,2b270 <__divdf3+0x294>
   2b260:	00bfc034 	movhi	r2,65280
   2b264:	10bfffc4 	addi	r2,r2,-1
   2b268:	98a6703a 	and	r19,r19,r2
   2b26c:	94410004 	addi	r17,r18,1024
   2b270:	8881ffc8 	cmpgei	r2,r17,2047
   2b274:	103fbd1e 	bne	r2,zero,2b16c <__divdf3+0x190>
   2b278:	9828977a 	slli	r20,r19,29
   2b27c:	980a927a 	slli	r5,r19,9
   2b280:	88c1ffcc 	andi	r3,r17,2047
   2b284:	a128b03a 	or	r20,r20,r4
   2b288:	280ad33a 	srli	r5,r5,12
   2b28c:	003fa506 	br	2b124 <__divdf3+0x148>
   2b290:	a813883a 	mov	r9,r21
   2b294:	b027883a 	mov	r19,r22
   2b298:	5029883a 	mov	r20,r10
   2b29c:	1823883a 	mov	r17,r3
   2b2a0:	003fe206 	br	2b22c <__divdf3+0x250>
   2b2a4:	840000d4 	ori	r16,r16,3
   2b2a8:	e015883a 	mov	r10,fp
   2b2ac:	00c000c4 	movi	r3,3
   2b2b0:	003f7a06 	br	2b09c <__divdf3+0xc0>
   2b2b4:	84000054 	ori	r16,r16,1
   2b2b8:	002d883a 	mov	r22,zero
   2b2bc:	00c00044 	movi	r3,1
   2b2c0:	003f7606 	br	2b09c <__divdf3+0xc0>
   2b2c4:	0029883a 	mov	r20,zero
   2b2c8:	04000104 	movi	r16,4
   2b2cc:	0025883a 	mov	r18,zero
   2b2d0:	04400044 	movi	r17,1
   2b2d4:	003f6006 	br	2b058 <__divdf3+0x7c>
   2b2d8:	8027883a 	mov	r19,r16
   2b2dc:	0481ffc4 	movi	r18,2047
   2b2e0:	04000304 	movi	r16,12
   2b2e4:	044000c4 	movi	r17,3
   2b2e8:	003f5b06 	br	2b058 <__divdf3+0x7c>
   2b2ec:	01400434 	movhi	r5,16
   2b2f0:	0013883a 	mov	r9,zero
   2b2f4:	297fffc4 	addi	r5,r5,-1
   2b2f8:	053fffc4 	movi	r20,-1
   2b2fc:	00c1ffc4 	movi	r3,2047
   2b300:	003f8806 	br	2b124 <__divdf3+0x148>
   2b304:	9880022c 	andhi	r2,r19,8
   2b308:	10000926 	beq	r2,zero,2b330 <__divdf3+0x354>
   2b30c:	b080022c 	andhi	r2,r22,8
   2b310:	1000071e 	bne	r2,zero,2b330 <__divdf3+0x354>
   2b314:	00800434 	movhi	r2,16
   2b318:	b1400234 	orhi	r5,r22,8
   2b31c:	10bfffc4 	addi	r2,r2,-1
   2b320:	288a703a 	and	r5,r5,r2
   2b324:	a813883a 	mov	r9,r21
   2b328:	5029883a 	mov	r20,r10
   2b32c:	003ff306 	br	2b2fc <__divdf3+0x320>
   2b330:	00800434 	movhi	r2,16
   2b334:	99400234 	orhi	r5,r19,8
   2b338:	10bfffc4 	addi	r2,r2,-1
   2b33c:	288a703a 	and	r5,r5,r2
   2b340:	b813883a 	mov	r9,r23
   2b344:	003fed06 	br	2b2fc <__divdf3+0x320>
   2b348:	b4c10536 	bltu	r22,r19,2b760 <__divdf3+0x784>
   2b34c:	b4c10326 	beq	r22,r19,2b75c <__divdf3+0x780>
   2b350:	94bfffc4 	addi	r18,r18,-1
   2b354:	a039883a 	mov	fp,r20
   2b358:	9821883a 	mov	r16,r19
   2b35c:	0023883a 	mov	r17,zero
   2b360:	b006923a 	slli	r3,r22,8
   2b364:	502cd63a 	srli	r22,r10,24
   2b368:	8009883a 	mov	r4,r16
   2b36c:	182ed43a 	srli	r23,r3,16
   2b370:	b0ecb03a 	or	r22,r22,r3
   2b374:	da400015 	stw	r9,0(sp)
   2b378:	b80b883a 	mov	r5,r23
   2b37c:	502a923a 	slli	r21,r10,8
   2b380:	b53fffcc 	andi	r20,r22,65535
   2b384:	002a3f80 	call	2a3f8 <__udivsi3>
   2b388:	100b883a 	mov	r5,r2
   2b38c:	a009883a 	mov	r4,r20
   2b390:	1027883a 	mov	r19,r2
   2b394:	002a4b80 	call	2a4b8 <__mulsi3>
   2b398:	8009883a 	mov	r4,r16
   2b39c:	b80b883a 	mov	r5,r23
   2b3a0:	1021883a 	mov	r16,r2
   2b3a4:	002a45c0 	call	2a45c <__umodsi3>
   2b3a8:	1004943a 	slli	r2,r2,16
   2b3ac:	e008d43a 	srli	r4,fp,16
   2b3b0:	da400017 	ldw	r9,0(sp)
   2b3b4:	2088b03a 	or	r4,r4,r2
   2b3b8:	2400042e 	bgeu	r4,r16,2b3cc <__divdf3+0x3f0>
   2b3bc:	2589883a 	add	r4,r4,r22
   2b3c0:	98bfffc4 	addi	r2,r19,-1
   2b3c4:	2581082e 	bgeu	r4,r22,2b7e8 <__divdf3+0x80c>
   2b3c8:	1027883a 	mov	r19,r2
   2b3cc:	2421c83a 	sub	r16,r4,r16
   2b3d0:	b80b883a 	mov	r5,r23
   2b3d4:	8009883a 	mov	r4,r16
   2b3d8:	da400215 	stw	r9,8(sp)
   2b3dc:	002a3f80 	call	2a3f8 <__udivsi3>
   2b3e0:	100b883a 	mov	r5,r2
   2b3e4:	a009883a 	mov	r4,r20
   2b3e8:	d8800115 	stw	r2,4(sp)
   2b3ec:	002a4b80 	call	2a4b8 <__mulsi3>
   2b3f0:	b80b883a 	mov	r5,r23
   2b3f4:	8009883a 	mov	r4,r16
   2b3f8:	d8800015 	stw	r2,0(sp)
   2b3fc:	002a45c0 	call	2a45c <__umodsi3>
   2b400:	100c943a 	slli	r6,r2,16
   2b404:	d8c00017 	ldw	r3,0(sp)
   2b408:	e73fffcc 	andi	fp,fp,65535
   2b40c:	e18cb03a 	or	r6,fp,r6
   2b410:	d9c00117 	ldw	r7,4(sp)
   2b414:	da400217 	ldw	r9,8(sp)
   2b418:	30c0042e 	bgeu	r6,r3,2b42c <__divdf3+0x450>
   2b41c:	358d883a 	add	r6,r6,r22
   2b420:	38bfffc4 	addi	r2,r7,-1
   2b424:	3580ec2e 	bgeu	r6,r22,2b7d8 <__divdf3+0x7fc>
   2b428:	100f883a 	mov	r7,r2
   2b42c:	9826943a 	slli	r19,r19,16
   2b430:	af3fffcc 	andi	fp,r21,65535
   2b434:	30c7c83a 	sub	r3,r6,r3
   2b438:	99e6b03a 	or	r19,r19,r7
   2b43c:	980ed43a 	srli	r7,r19,16
   2b440:	9abfffcc 	andi	r10,r19,65535
   2b444:	5009883a 	mov	r4,r10
   2b448:	e00b883a 	mov	r5,fp
   2b44c:	da400515 	stw	r9,20(sp)
   2b450:	d8c00315 	stw	r3,12(sp)
   2b454:	da800415 	stw	r10,16(sp)
   2b458:	d9c00015 	stw	r7,0(sp)
   2b45c:	002a4b80 	call	2a4b8 <__mulsi3>
   2b460:	d9c00017 	ldw	r7,0(sp)
   2b464:	e00b883a 	mov	r5,fp
   2b468:	d8800215 	stw	r2,8(sp)
   2b46c:	3809883a 	mov	r4,r7
   2b470:	002a4b80 	call	2a4b8 <__mulsi3>
   2b474:	d9c00017 	ldw	r7,0(sp)
   2b478:	a820d43a 	srli	r16,r21,16
   2b47c:	d8800115 	stw	r2,4(sp)
   2b480:	3809883a 	mov	r4,r7
   2b484:	800b883a 	mov	r5,r16
   2b488:	002a4b80 	call	2a4b8 <__mulsi3>
   2b48c:	da800417 	ldw	r10,16(sp)
   2b490:	8009883a 	mov	r4,r16
   2b494:	d8800015 	stw	r2,0(sp)
   2b498:	500b883a 	mov	r5,r10
   2b49c:	002a4b80 	call	2a4b8 <__mulsi3>
   2b4a0:	d9800217 	ldw	r6,8(sp)
   2b4a4:	d9c00117 	ldw	r7,4(sp)
   2b4a8:	da000017 	ldw	r8,0(sp)
   2b4ac:	3008d43a 	srli	r4,r6,16
   2b4b0:	11c5883a 	add	r2,r2,r7
   2b4b4:	d8c00317 	ldw	r3,12(sp)
   2b4b8:	2089883a 	add	r4,r4,r2
   2b4bc:	da400517 	ldw	r9,20(sp)
   2b4c0:	21c0022e 	bgeu	r4,r7,2b4cc <__divdf3+0x4f0>
   2b4c4:	00800074 	movhi	r2,1
   2b4c8:	4091883a 	add	r8,r8,r2
   2b4cc:	200ad43a 	srli	r5,r4,16
   2b4d0:	2008943a 	slli	r4,r4,16
   2b4d4:	31bfffcc 	andi	r6,r6,65535
   2b4d8:	2a0b883a 	add	r5,r5,r8
   2b4dc:	218d883a 	add	r6,r4,r6
   2b4e0:	19409436 	bltu	r3,r5,2b734 <__divdf3+0x758>
   2b4e4:	19409226 	beq	r3,r5,2b730 <__divdf3+0x754>
   2b4e8:	898dc83a 	sub	r6,r17,r6
   2b4ec:	89a3803a 	cmpltu	r17,r17,r6
   2b4f0:	1947c83a 	sub	r3,r3,r5
   2b4f4:	1c47c83a 	sub	r3,r3,r17
   2b4f8:	9440ffc4 	addi	r17,r18,1023
   2b4fc:	b0c0d326 	beq	r22,r3,2b84c <__divdf3+0x870>
   2b500:	1809883a 	mov	r4,r3
   2b504:	b80b883a 	mov	r5,r23
   2b508:	d9800315 	stw	r6,12(sp)
   2b50c:	da400215 	stw	r9,8(sp)
   2b510:	d8c00015 	stw	r3,0(sp)
   2b514:	002a3f80 	call	2a3f8 <__udivsi3>
   2b518:	100b883a 	mov	r5,r2
   2b51c:	a009883a 	mov	r4,r20
   2b520:	d8800115 	stw	r2,4(sp)
   2b524:	002a4b80 	call	2a4b8 <__mulsi3>
   2b528:	d8c00017 	ldw	r3,0(sp)
   2b52c:	b80b883a 	mov	r5,r23
   2b530:	d8800015 	stw	r2,0(sp)
   2b534:	1809883a 	mov	r4,r3
   2b538:	002a45c0 	call	2a45c <__umodsi3>
   2b53c:	d9800317 	ldw	r6,12(sp)
   2b540:	1006943a 	slli	r3,r2,16
   2b544:	da000017 	ldw	r8,0(sp)
   2b548:	3008d43a 	srli	r4,r6,16
   2b54c:	d9c00117 	ldw	r7,4(sp)
   2b550:	da400217 	ldw	r9,8(sp)
   2b554:	20c6b03a 	or	r3,r4,r3
   2b558:	1a00062e 	bgeu	r3,r8,2b574 <__divdf3+0x598>
   2b55c:	1d87883a 	add	r3,r3,r22
   2b560:	38bfffc4 	addi	r2,r7,-1
   2b564:	1d80c836 	bltu	r3,r22,2b888 <__divdf3+0x8ac>
   2b568:	1a00c72e 	bgeu	r3,r8,2b888 <__divdf3+0x8ac>
   2b56c:	39ffff84 	addi	r7,r7,-2
   2b570:	1d87883a 	add	r3,r3,r22
   2b574:	1a07c83a 	sub	r3,r3,r8
   2b578:	1809883a 	mov	r4,r3
   2b57c:	b80b883a 	mov	r5,r23
   2b580:	d9800415 	stw	r6,16(sp)
   2b584:	da400315 	stw	r9,12(sp)
   2b588:	d9c00215 	stw	r7,8(sp)
   2b58c:	d8c00115 	stw	r3,4(sp)
   2b590:	002a3f80 	call	2a3f8 <__udivsi3>
   2b594:	100b883a 	mov	r5,r2
   2b598:	a009883a 	mov	r4,r20
   2b59c:	d8800015 	stw	r2,0(sp)
   2b5a0:	002a4b80 	call	2a4b8 <__mulsi3>
   2b5a4:	d8c00117 	ldw	r3,4(sp)
   2b5a8:	b80b883a 	mov	r5,r23
   2b5ac:	102f883a 	mov	r23,r2
   2b5b0:	1809883a 	mov	r4,r3
   2b5b4:	002a45c0 	call	2a45c <__umodsi3>
   2b5b8:	d9800417 	ldw	r6,16(sp)
   2b5bc:	1004943a 	slli	r2,r2,16
   2b5c0:	da000017 	ldw	r8,0(sp)
   2b5c4:	31bfffcc 	andi	r6,r6,65535
   2b5c8:	308cb03a 	or	r6,r6,r2
   2b5cc:	d9c00217 	ldw	r7,8(sp)
   2b5d0:	da400317 	ldw	r9,12(sp)
   2b5d4:	35c0062e 	bgeu	r6,r23,2b5f0 <__divdf3+0x614>
   2b5d8:	358d883a 	add	r6,r6,r22
   2b5dc:	40bfffc4 	addi	r2,r8,-1
   2b5e0:	3580a736 	bltu	r6,r22,2b880 <__divdf3+0x8a4>
   2b5e4:	35c0a62e 	bgeu	r6,r23,2b880 <__divdf3+0x8a4>
   2b5e8:	423fff84 	addi	r8,r8,-2
   2b5ec:	358d883a 	add	r6,r6,r22
   2b5f0:	3828943a 	slli	r20,r7,16
   2b5f4:	35d5c83a 	sub	r10,r6,r23
   2b5f8:	e009883a 	mov	r4,fp
   2b5fc:	a228b03a 	or	r20,r20,r8
   2b600:	a1ffffcc 	andi	r7,r20,65535
   2b604:	a02ed43a 	srli	r23,r20,16
   2b608:	380b883a 	mov	r5,r7
   2b60c:	da400315 	stw	r9,12(sp)
   2b610:	da800215 	stw	r10,8(sp)
   2b614:	d9c00115 	stw	r7,4(sp)
   2b618:	002a4b80 	call	2a4b8 <__mulsi3>
   2b61c:	e00b883a 	mov	r5,fp
   2b620:	b809883a 	mov	r4,r23
   2b624:	1039883a 	mov	fp,r2
   2b628:	002a4b80 	call	2a4b8 <__mulsi3>
   2b62c:	8009883a 	mov	r4,r16
   2b630:	b80b883a 	mov	r5,r23
   2b634:	d8800015 	stw	r2,0(sp)
   2b638:	002a4b80 	call	2a4b8 <__mulsi3>
   2b63c:	d9c00117 	ldw	r7,4(sp)
   2b640:	8009883a 	mov	r4,r16
   2b644:	1021883a 	mov	r16,r2
   2b648:	380b883a 	mov	r5,r7
   2b64c:	002a4b80 	call	2a4b8 <__mulsi3>
   2b650:	d9800017 	ldw	r6,0(sp)
   2b654:	e006d43a 	srli	r3,fp,16
   2b658:	da800217 	ldw	r10,8(sp)
   2b65c:	1185883a 	add	r2,r2,r6
   2b660:	1887883a 	add	r3,r3,r2
   2b664:	da400317 	ldw	r9,12(sp)
   2b668:	1980022e 	bgeu	r3,r6,2b674 <__divdf3+0x698>
   2b66c:	00800074 	movhi	r2,1
   2b670:	80a1883a 	add	r16,r16,r2
   2b674:	1808d43a 	srli	r4,r3,16
   2b678:	1806943a 	slli	r3,r3,16
   2b67c:	e73fffcc 	andi	fp,fp,65535
   2b680:	2409883a 	add	r4,r4,r16
   2b684:	1f07883a 	add	r3,r3,fp
   2b688:	51000436 	bltu	r10,r4,2b69c <__divdf3+0x6c0>
   2b68c:	51000226 	beq	r10,r4,2b698 <__divdf3+0x6bc>
   2b690:	a5000054 	ori	r20,r20,1
   2b694:	003eec06 	br	2b248 <__divdf3+0x26c>
   2b698:	183eeb26 	beq	r3,zero,2b248 <__divdf3+0x26c>
   2b69c:	b28d883a 	add	r6,r22,r10
   2b6a0:	a0bfffc4 	addi	r2,r20,-1
   2b6a4:	35806536 	bltu	r6,r22,2b83c <__divdf3+0x860>
   2b6a8:	31008036 	bltu	r6,r4,2b8ac <__divdf3+0x8d0>
   2b6ac:	31009426 	beq	r6,r4,2b900 <__divdf3+0x924>
   2b6b0:	1029883a 	mov	r20,r2
   2b6b4:	003ff606 	br	2b690 <__divdf3+0x6b4>
   2b6b8:	053fffc4 	movi	r20,-1
   2b6bc:	01400044 	movi	r5,1
   2b6c0:	2c4bc83a 	sub	r5,r5,r17
   2b6c4:	28800e48 	cmpgei	r2,r5,57
   2b6c8:	103e931e 	bne	r2,zero,2b118 <__divdf3+0x13c>
   2b6cc:	28800808 	cmpgei	r2,r5,32
   2b6d0:	1000491e 	bne	r2,zero,2b7f8 <__divdf3+0x81c>
   2b6d4:	92010784 	addi	r8,r18,1054
   2b6d8:	9a04983a 	sll	r2,r19,r8
   2b6dc:	a146d83a 	srl	r3,r20,r5
   2b6e0:	a210983a 	sll	r8,r20,r8
   2b6e4:	994ad83a 	srl	r5,r19,r5
   2b6e8:	10e8b03a 	or	r20,r2,r3
   2b6ec:	4010c03a 	cmpne	r8,r8,zero
   2b6f0:	a228b03a 	or	r20,r20,r8
   2b6f4:	a08001cc 	andi	r2,r20,7
   2b6f8:	10000726 	beq	r2,zero,2b718 <__divdf3+0x73c>
   2b6fc:	a08003cc 	andi	r2,r20,15
   2b700:	10800120 	cmpeqi	r2,r2,4
   2b704:	1000041e 	bne	r2,zero,2b718 <__divdf3+0x73c>
   2b708:	a0800104 	addi	r2,r20,4
   2b70c:	1529803a 	cmpltu	r20,r2,r20
   2b710:	2d0b883a 	add	r5,r5,r20
   2b714:	1029883a 	mov	r20,r2
   2b718:	2880202c 	andhi	r2,r5,128
   2b71c:	10006f26 	beq	r2,zero,2b8dc <__divdf3+0x900>
   2b720:	00c00044 	movi	r3,1
   2b724:	000b883a 	mov	r5,zero
   2b728:	0029883a 	mov	r20,zero
   2b72c:	003e7d06 	br	2b124 <__divdf3+0x148>
   2b730:	89bf6d2e 	bgeu	r17,r6,2b4e8 <__divdf3+0x50c>
   2b734:	8d63883a 	add	r17,r17,r21
   2b738:	8d45803a 	cmpltu	r2,r17,r21
   2b73c:	1585883a 	add	r2,r2,r22
   2b740:	1887883a 	add	r3,r3,r2
   2b744:	98bfffc4 	addi	r2,r19,-1
   2b748:	b0c0202e 	bgeu	r22,r3,2b7cc <__divdf3+0x7f0>
   2b74c:	19405136 	bltu	r3,r5,2b894 <__divdf3+0x8b8>
   2b750:	28c04f26 	beq	r5,r3,2b890 <__divdf3+0x8b4>
   2b754:	1027883a 	mov	r19,r2
   2b758:	003f6306 	br	2b4e8 <__divdf3+0x50c>
   2b75c:	a2befc36 	bltu	r20,r10,2b350 <__divdf3+0x374>
   2b760:	983897fa 	slli	fp,r19,31
   2b764:	a004d07a 	srli	r2,r20,1
   2b768:	9820d07a 	srli	r16,r19,1
   2b76c:	a02297fa 	slli	r17,r20,31
   2b770:	e0b8b03a 	or	fp,fp,r2
   2b774:	003efa06 	br	2b360 <__divdf3+0x384>
   2b778:	002cf5c0 	call	2cf5c <__clzsi2>
   2b77c:	11000544 	addi	r4,r2,21
   2b780:	20c00748 	cmpgei	r3,r4,29
   2b784:	100b883a 	mov	r5,r2
   2b788:	10800804 	addi	r2,r2,32
   2b78c:	183e8226 	beq	r3,zero,2b198 <__divdf3+0x1bc>
   2b790:	297ffe04 	addi	r5,r5,-8
   2b794:	a166983a 	sll	r19,r20,r5
   2b798:	0029883a 	mov	r20,zero
   2b79c:	003e8506 	br	2b1b4 <__divdf3+0x1d8>
   2b7a0:	e009883a 	mov	r4,fp
   2b7a4:	002cf5c0 	call	2cf5c <__clzsi2>
   2b7a8:	11400544 	addi	r5,r2,21
   2b7ac:	29000748 	cmpgei	r4,r5,29
   2b7b0:	1007883a 	mov	r3,r2
   2b7b4:	10800804 	addi	r2,r2,32
   2b7b8:	203e9026 	beq	r4,zero,2b1fc <__divdf3+0x220>
   2b7bc:	18fffe04 	addi	r3,r3,-8
   2b7c0:	e0ec983a 	sll	r22,fp,r3
   2b7c4:	0015883a 	mov	r10,zero
   2b7c8:	003e9306 	br	2b218 <__divdf3+0x23c>
   2b7cc:	b0ffe11e 	bne	r22,r3,2b754 <__divdf3+0x778>
   2b7d0:	8d7fe036 	bltu	r17,r21,2b754 <__divdf3+0x778>
   2b7d4:	003fdd06 	br	2b74c <__divdf3+0x770>
   2b7d8:	30ff132e 	bgeu	r6,r3,2b428 <__divdf3+0x44c>
   2b7dc:	39ffff84 	addi	r7,r7,-2
   2b7e0:	358d883a 	add	r6,r6,r22
   2b7e4:	003f1106 	br	2b42c <__divdf3+0x450>
   2b7e8:	243ef72e 	bgeu	r4,r16,2b3c8 <__divdf3+0x3ec>
   2b7ec:	9cffff84 	addi	r19,r19,-2
   2b7f0:	2589883a 	add	r4,r4,r22
   2b7f4:	003ef506 	br	2b3cc <__divdf3+0x3f0>
   2b7f8:	00fff844 	movi	r3,-31
   2b7fc:	1c47c83a 	sub	r3,r3,r17
   2b800:	29400820 	cmpeqi	r5,r5,32
   2b804:	98c6d83a 	srl	r3,r19,r3
   2b808:	2800031e 	bne	r5,zero,2b818 <__divdf3+0x83c>
   2b80c:	91410f84 	addi	r5,r18,1086
   2b810:	994a983a 	sll	r5,r19,r5
   2b814:	a168b03a 	or	r20,r20,r5
   2b818:	a028c03a 	cmpne	r20,r20,zero
   2b81c:	a0e8b03a 	or	r20,r20,r3
   2b820:	a4c001cc 	andi	r19,r20,7
   2b824:	9800291e 	bne	r19,zero,2b8cc <__divdf3+0x8f0>
   2b828:	000b883a 	mov	r5,zero
   2b82c:	a028d0fa 	srli	r20,r20,3
   2b830:	0007883a 	mov	r3,zero
   2b834:	a4e8b03a 	or	r20,r20,r19
   2b838:	003e3a06 	br	2b124 <__divdf3+0x148>
   2b83c:	1029883a 	mov	r20,r2
   2b840:	313f931e 	bne	r6,r4,2b690 <__divdf3+0x6b4>
   2b844:	1d7f921e 	bne	r3,r21,2b690 <__divdf3+0x6b4>
   2b848:	003e7f06 	br	2b248 <__divdf3+0x26c>
   2b84c:	047f9a0e 	bge	zero,r17,2b6b8 <__divdf3+0x6dc>
   2b850:	0009883a 	mov	r4,zero
   2b854:	05000044 	movi	r20,1
   2b858:	9d27883a 	add	r19,r19,r20
   2b85c:	003e7e06 	br	2b258 <__divdf3+0x27c>
   2b860:	a08003cc 	andi	r2,r20,15
   2b864:	10800118 	cmpnei	r2,r2,4
   2b868:	103e7a26 	beq	r2,zero,2b254 <__divdf3+0x278>
   2b86c:	a1000104 	addi	r4,r20,4
   2b870:	00bffec4 	movi	r2,-5
   2b874:	2008d0fa 	srli	r4,r4,3
   2b878:	1529803a 	cmpltu	r20,r2,r20
   2b87c:	003ff606 	br	2b858 <__divdf3+0x87c>
   2b880:	1011883a 	mov	r8,r2
   2b884:	003f5a06 	br	2b5f0 <__divdf3+0x614>
   2b888:	100f883a 	mov	r7,r2
   2b88c:	003f3906 	br	2b574 <__divdf3+0x598>
   2b890:	89bfb02e 	bgeu	r17,r6,2b754 <__divdf3+0x778>
   2b894:	8d63883a 	add	r17,r17,r21
   2b898:	8d45803a 	cmpltu	r2,r17,r21
   2b89c:	1585883a 	add	r2,r2,r22
   2b8a0:	9cffff84 	addi	r19,r19,-2
   2b8a4:	1887883a 	add	r3,r3,r2
   2b8a8:	003f0f06 	br	2b4e8 <__divdf3+0x50c>
   2b8ac:	ad45883a 	add	r2,r21,r21
   2b8b0:	156b803a 	cmpltu	r21,r2,r21
   2b8b4:	adad883a 	add	r22,r21,r22
   2b8b8:	358d883a 	add	r6,r6,r22
   2b8bc:	a53fff84 	addi	r20,r20,-2
   2b8c0:	102b883a 	mov	r21,r2
   2b8c4:	313fdf26 	beq	r6,r4,2b844 <__divdf3+0x868>
   2b8c8:	003f7106 	br	2b690 <__divdf3+0x6b4>
   2b8cc:	a08003cc 	andi	r2,r20,15
   2b8d0:	10800118 	cmpnei	r2,r2,4
   2b8d4:	000b883a 	mov	r5,zero
   2b8d8:	103f8b1e 	bne	r2,zero,2b708 <__divdf3+0x72c>
   2b8dc:	2804927a 	slli	r2,r5,9
   2b8e0:	2826977a 	slli	r19,r5,29
   2b8e4:	100ad33a 	srli	r5,r2,12
   2b8e8:	003fd006 	br	2b82c <__divdf3+0x850>
   2b8ec:	00800434 	movhi	r2,16
   2b8f0:	99400234 	orhi	r5,r19,8
   2b8f4:	10bfffc4 	addi	r2,r2,-1
   2b8f8:	288a703a 	and	r5,r5,r2
   2b8fc:	003e7f06 	br	2b2fc <__divdf3+0x320>
   2b900:	a8ffea36 	bltu	r21,r3,2b8ac <__divdf3+0x8d0>
   2b904:	1029883a 	mov	r20,r2
   2b908:	1d7f611e 	bne	r3,r21,2b690 <__divdf3+0x6b4>
   2b90c:	003e4e06 	br	2b248 <__divdf3+0x26c>

0002b910 <__eqdf2>:
   2b910:	2810d53a 	srli	r8,r5,20
   2b914:	3806d53a 	srli	r3,r7,20
   2b918:	00800434 	movhi	r2,16
   2b91c:	4201ffcc 	andi	r8,r8,2047
   2b920:	10bfffc4 	addi	r2,r2,-1
   2b924:	4241ffd8 	cmpnei	r9,r8,2047
   2b928:	2814d7fa 	srli	r10,r5,31
   2b92c:	3816d7fa 	srli	r11,r7,31
   2b930:	288a703a 	and	r5,r5,r2
   2b934:	388e703a 	and	r7,r7,r2
   2b938:	1881ffcc 	andi	r2,r3,2047
   2b93c:	48000626 	beq	r9,zero,2b958 <__eqdf2+0x48>
   2b940:	10c1ffe0 	cmpeqi	r3,r2,2047
   2b944:	1800021e 	bne	r3,zero,2b950 <__eqdf2+0x40>
   2b948:	4080011e 	bne	r8,r2,2b950 <__eqdf2+0x40>
   2b94c:	29c00826 	beq	r5,r7,2b970 <__eqdf2+0x60>
   2b950:	00800044 	movi	r2,1
   2b954:	f800283a 	ret
   2b958:	2906b03a 	or	r3,r5,r4
   2b95c:	183ffc1e 	bne	r3,zero,2b950 <__eqdf2+0x40>
   2b960:	1081ffd8 	cmpnei	r2,r2,2047
   2b964:	103ffa1e 	bne	r2,zero,2b950 <__eqdf2+0x40>
   2b968:	398eb03a 	or	r7,r7,r6
   2b96c:	383ff81e 	bne	r7,zero,2b950 <__eqdf2+0x40>
   2b970:	21bff71e 	bne	r4,r6,2b950 <__eqdf2+0x40>
   2b974:	52c00426 	beq	r10,r11,2b988 <__eqdf2+0x78>
   2b978:	403ff51e 	bne	r8,zero,2b950 <__eqdf2+0x40>
   2b97c:	290ab03a 	or	r5,r5,r4
   2b980:	2804c03a 	cmpne	r2,r5,zero
   2b984:	f800283a 	ret
   2b988:	0005883a 	mov	r2,zero
   2b98c:	f800283a 	ret

0002b990 <__gedf2>:
   2b990:	2810d53a 	srli	r8,r5,20
   2b994:	3812d53a 	srli	r9,r7,20
   2b998:	00c00434 	movhi	r3,16
   2b99c:	4201ffcc 	andi	r8,r8,2047
   2b9a0:	18ffffc4 	addi	r3,r3,-1
   2b9a4:	4281ffd8 	cmpnei	r10,r8,2047
   2b9a8:	2816d7fa 	srli	r11,r5,31
   2b9ac:	3804d7fa 	srli	r2,r7,31
   2b9b0:	28ca703a 	and	r5,r5,r3
   2b9b4:	38ce703a 	and	r7,r7,r3
   2b9b8:	48c1ffcc 	andi	r3,r9,2047
   2b9bc:	50000b26 	beq	r10,zero,2b9ec <__gedf2+0x5c>
   2b9c0:	1a41ffd8 	cmpnei	r9,r3,2047
   2b9c4:	48000d26 	beq	r9,zero,2b9fc <__gedf2+0x6c>
   2b9c8:	4000191e 	bne	r8,zero,2ba30 <__gedf2+0xa0>
   2b9cc:	2914b03a 	or	r10,r5,r4
   2b9d0:	5013003a 	cmpeq	r9,r10,zero
   2b9d4:	1800131e 	bne	r3,zero,2ba24 <__gedf2+0x94>
   2b9d8:	3998b03a 	or	r12,r7,r6
   2b9dc:	6000111e 	bne	r12,zero,2ba24 <__gedf2+0x94>
   2b9e0:	50000a1e 	bne	r10,zero,2ba0c <__gedf2+0x7c>
   2b9e4:	0005883a 	mov	r2,zero
   2b9e8:	f800283a 	ret
   2b9ec:	2912b03a 	or	r9,r5,r4
   2b9f0:	48001e1e 	bne	r9,zero,2ba6c <__gedf2+0xdc>
   2b9f4:	1a41ffe0 	cmpeqi	r9,r3,2047
   2b9f8:	48000d26 	beq	r9,zero,2ba30 <__gedf2+0xa0>
   2b9fc:	3992b03a 	or	r9,r7,r6
   2ba00:	48001a1e 	bne	r9,zero,2ba6c <__gedf2+0xdc>
   2ba04:	40000526 	beq	r8,zero,2ba1c <__gedf2+0x8c>
   2ba08:	58800d26 	beq	r11,r2,2ba40 <__gedf2+0xb0>
   2ba0c:	00800044 	movi	r2,1
   2ba10:	58000626 	beq	r11,zero,2ba2c <__gedf2+0x9c>
   2ba14:	00bfffc4 	movi	r2,-1
   2ba18:	f800283a 	ret
   2ba1c:	2912b03a 	or	r9,r5,r4
   2ba20:	4813003a 	cmpeq	r9,r9,zero
   2ba24:	483ff826 	beq	r9,zero,2ba08 <__gedf2+0x78>
   2ba28:	103ffa26 	beq	r2,zero,2ba14 <__gedf2+0x84>
   2ba2c:	f800283a 	ret
   2ba30:	183ff51e 	bne	r3,zero,2ba08 <__gedf2+0x78>
   2ba34:	3992b03a 	or	r9,r7,r6
   2ba38:	483ff31e 	bne	r9,zero,2ba08 <__gedf2+0x78>
   2ba3c:	003ff306 	br	2ba0c <__gedf2+0x7c>
   2ba40:	1a000716 	blt	r3,r8,2ba60 <__gedf2+0xd0>
   2ba44:	40fff816 	blt	r8,r3,2ba28 <__gedf2+0x98>
   2ba48:	397ff036 	bltu	r7,r5,2ba0c <__gedf2+0x7c>
   2ba4c:	29c00926 	beq	r5,r7,2ba74 <__gedf2+0xe4>
   2ba50:	29ffe42e 	bgeu	r5,r7,2b9e4 <__gedf2+0x54>
   2ba54:	583fef26 	beq	r11,zero,2ba14 <__gedf2+0x84>
   2ba58:	5805883a 	mov	r2,r11
   2ba5c:	f800283a 	ret
   2ba60:	103fec1e 	bne	r2,zero,2ba14 <__gedf2+0x84>
   2ba64:	00800044 	movi	r2,1
   2ba68:	f800283a 	ret
   2ba6c:	00bfff84 	movi	r2,-2
   2ba70:	f800283a 	ret
   2ba74:	313fe536 	bltu	r6,r4,2ba0c <__gedf2+0x7c>
   2ba78:	21bfda2e 	bgeu	r4,r6,2b9e4 <__gedf2+0x54>
   2ba7c:	003ff506 	br	2ba54 <__gedf2+0xc4>

0002ba80 <__ledf2>:
   2ba80:	2810d53a 	srli	r8,r5,20
   2ba84:	3812d53a 	srli	r9,r7,20
   2ba88:	00c00434 	movhi	r3,16
   2ba8c:	4201ffcc 	andi	r8,r8,2047
   2ba90:	18ffffc4 	addi	r3,r3,-1
   2ba94:	4281ffd8 	cmpnei	r10,r8,2047
   2ba98:	2816d7fa 	srli	r11,r5,31
   2ba9c:	3804d7fa 	srli	r2,r7,31
   2baa0:	28ca703a 	and	r5,r5,r3
   2baa4:	38ce703a 	and	r7,r7,r3
   2baa8:	48c1ffcc 	andi	r3,r9,2047
   2baac:	50000b26 	beq	r10,zero,2badc <__ledf2+0x5c>
   2bab0:	1a41ffd8 	cmpnei	r9,r3,2047
   2bab4:	48000d26 	beq	r9,zero,2baec <__ledf2+0x6c>
   2bab8:	40001b1e 	bne	r8,zero,2bb28 <__ledf2+0xa8>
   2babc:	2914b03a 	or	r10,r5,r4
   2bac0:	5013003a 	cmpeq	r9,r10,zero
   2bac4:	18000e1e 	bne	r3,zero,2bb00 <__ledf2+0x80>
   2bac8:	3998b03a 	or	r12,r7,r6
   2bacc:	60000c1e 	bne	r12,zero,2bb00 <__ledf2+0x80>
   2bad0:	50000d1e 	bne	r10,zero,2bb08 <__ledf2+0x88>
   2bad4:	0005883a 	mov	r2,zero
   2bad8:	f800283a 	ret
   2badc:	2912b03a 	or	r9,r5,r4
   2bae0:	48000d1e 	bne	r9,zero,2bb18 <__ledf2+0x98>
   2bae4:	1a41ffe0 	cmpeqi	r9,r3,2047
   2bae8:	48000f26 	beq	r9,zero,2bb28 <__ledf2+0xa8>
   2baec:	3992b03a 	or	r9,r7,r6
   2baf0:	4800091e 	bne	r9,zero,2bb18 <__ledf2+0x98>
   2baf4:	4000031e 	bne	r8,zero,2bb04 <__ledf2+0x84>
   2baf8:	2912b03a 	or	r9,r5,r4
   2bafc:	4813003a 	cmpeq	r9,r9,zero
   2bb00:	4800071e 	bne	r9,zero,2bb20 <__ledf2+0xa0>
   2bb04:	58800c26 	beq	r11,r2,2bb38 <__ledf2+0xb8>
   2bb08:	00800044 	movi	r2,1
   2bb0c:	58000526 	beq	r11,zero,2bb24 <__ledf2+0xa4>
   2bb10:	00bfffc4 	movi	r2,-1
   2bb14:	f800283a 	ret
   2bb18:	00800084 	movi	r2,2
   2bb1c:	f800283a 	ret
   2bb20:	103ffb26 	beq	r2,zero,2bb10 <__ledf2+0x90>
   2bb24:	f800283a 	ret
   2bb28:	183ff61e 	bne	r3,zero,2bb04 <__ledf2+0x84>
   2bb2c:	3992b03a 	or	r9,r7,r6
   2bb30:	483ff41e 	bne	r9,zero,2bb04 <__ledf2+0x84>
   2bb34:	003ff406 	br	2bb08 <__ledf2+0x88>
   2bb38:	1a00030e 	bge	r3,r8,2bb48 <__ledf2+0xc8>
   2bb3c:	103ff41e 	bne	r2,zero,2bb10 <__ledf2+0x90>
   2bb40:	00800044 	movi	r2,1
   2bb44:	f800283a 	ret
   2bb48:	40fff516 	blt	r8,r3,2bb20 <__ledf2+0xa0>
   2bb4c:	397fee36 	bltu	r7,r5,2bb08 <__ledf2+0x88>
   2bb50:	29c00426 	beq	r5,r7,2bb64 <__ledf2+0xe4>
   2bb54:	29ffdf2e 	bgeu	r5,r7,2bad4 <__ledf2+0x54>
   2bb58:	583fed26 	beq	r11,zero,2bb10 <__ledf2+0x90>
   2bb5c:	5805883a 	mov	r2,r11
   2bb60:	f800283a 	ret
   2bb64:	313fe836 	bltu	r6,r4,2bb08 <__ledf2+0x88>
   2bb68:	21bfda2e 	bgeu	r4,r6,2bad4 <__ledf2+0x54>
   2bb6c:	003ffa06 	br	2bb58 <__ledf2+0xd8>

0002bb70 <__muldf3>:
   2bb70:	2810d53a 	srli	r8,r5,20
   2bb74:	defff004 	addi	sp,sp,-64
   2bb78:	00800434 	movhi	r2,16
   2bb7c:	df000e15 	stw	fp,56(sp)
   2bb80:	dd000a15 	stw	r20,40(sp)
   2bb84:	dcc00915 	stw	r19,36(sp)
   2bb88:	dc400715 	stw	r17,28(sp)
   2bb8c:	10bfffc4 	addi	r2,r2,-1
   2bb90:	dfc00f15 	stw	ra,60(sp)
   2bb94:	ddc00d15 	stw	r23,52(sp)
   2bb98:	dd800c15 	stw	r22,48(sp)
   2bb9c:	dd400b15 	stw	r21,44(sp)
   2bba0:	dc800815 	stw	r18,32(sp)
   2bba4:	dc000615 	stw	r16,24(sp)
   2bba8:	4201ffcc 	andi	r8,r8,2047
   2bbac:	2828d7fa 	srli	r20,r5,31
   2bbb0:	2023883a 	mov	r17,r4
   2bbb4:	3039883a 	mov	fp,r6
   2bbb8:	28a6703a 	and	r19,r5,r2
   2bbbc:	40005a26 	beq	r8,zero,2bd28 <__muldf3+0x1b8>
   2bbc0:	4081ffe0 	cmpeqi	r2,r8,2047
   2bbc4:	10006c1e 	bne	r2,zero,2bd78 <__muldf3+0x208>
   2bbc8:	980a90fa 	slli	r5,r19,3
   2bbcc:	2026d77a 	srli	r19,r4,29
   2bbd0:	202490fa 	slli	r18,r4,3
   2bbd4:	423f0044 	addi	r8,r8,-1023
   2bbd8:	9966b03a 	or	r19,r19,r5
   2bbdc:	9cc02034 	orhi	r19,r19,128
   2bbe0:	002b883a 	mov	r21,zero
   2bbe4:	002d883a 	mov	r22,zero
   2bbe8:	3804d53a 	srli	r2,r7,20
   2bbec:	00c00434 	movhi	r3,16
   2bbf0:	18ffffc4 	addi	r3,r3,-1
   2bbf4:	1081ffcc 	andi	r2,r2,2047
   2bbf8:	382ed7fa 	srli	r23,r7,31
   2bbfc:	38e0703a 	and	r16,r7,r3
   2bc00:	10006426 	beq	r2,zero,2bd94 <__muldf3+0x224>
   2bc04:	10c1ffe0 	cmpeqi	r3,r2,2047
   2bc08:	1800211e 	bne	r3,zero,2bc90 <__muldf3+0x120>
   2bc0c:	e008d77a 	srli	r4,fp,29
   2bc10:	802090fa 	slli	r16,r16,3
   2bc14:	e02290fa 	slli	r17,fp,3
   2bc18:	10bf0044 	addi	r2,r2,-1023
   2bc1c:	2420b03a 	or	r16,r4,r16
   2bc20:	84002034 	orhi	r16,r16,128
   2bc24:	4091883a 	add	r8,r8,r2
   2bc28:	0009883a 	mov	r4,zero
   2bc2c:	a8800428 	cmpgeui	r2,r21,16
   2bc30:	a5ccf03a 	xor	r6,r20,r23
   2bc34:	41c00044 	addi	r7,r8,1
   2bc38:	10006d1e 	bne	r2,zero,2bdf0 <__muldf3+0x280>
   2bc3c:	a80490ba 	slli	r2,r21,2
   2bc40:	00c000f4 	movhi	r3,3
   2bc44:	10c7883a 	add	r3,r2,r3
   2bc48:	18af1417 	ldw	r2,-17328(r3)
   2bc4c:	1000683a 	jmp	r2
   2bc50:	0002bdf0 	cmpltui	zero,zero,2807
   2bc54:	0002bcb0 	cmpltui	zero,zero,2802
   2bc58:	0002bcb0 	cmpltui	zero,zero,2802
   2bc5c:	0002bcac 	andhi	zero,zero,2802
   2bc60:	0002bcbc 	xorhi	zero,zero,2802
   2bc64:	0002bcbc 	xorhi	zero,zero,2802
   2bc68:	0002c16c 	andhi	zero,zero,2821
   2bc6c:	0002bcac 	andhi	zero,zero,2802
   2bc70:	0002bcbc 	xorhi	zero,zero,2802
   2bc74:	0002c16c 	andhi	zero,zero,2821
   2bc78:	0002bcbc 	xorhi	zero,zero,2802
   2bc7c:	0002bcac 	andhi	zero,zero,2802
   2bc80:	0002c11c 	xori	zero,zero,2820
   2bc84:	0002c11c 	xori	zero,zero,2820
   2bc88:	0002c11c 	xori	zero,zero,2820
   2bc8c:	0002c1f8 	rdprs	zero,zero,2823
   2bc90:	e422b03a 	or	r17,fp,r16
   2bc94:	4201ffc4 	addi	r8,r8,2047
   2bc98:	8801221e 	bne	r17,zero,2c124 <__muldf3+0x5b4>
   2bc9c:	ad400094 	ori	r21,r21,2
   2bca0:	0021883a 	mov	r16,zero
   2bca4:	01000084 	movi	r4,2
   2bca8:	003fe006 	br	2bc2c <__muldf3+0xbc>
   2bcac:	b80d883a 	mov	r6,r23
   2bcb0:	8027883a 	mov	r19,r16
   2bcb4:	8825883a 	mov	r18,r17
   2bcb8:	202d883a 	mov	r22,r4
   2bcbc:	b08000a0 	cmpeqi	r2,r22,2
   2bcc0:	1000471e 	bne	r2,zero,2bde0 <__muldf3+0x270>
   2bcc4:	b08000e0 	cmpeqi	r2,r22,3
   2bcc8:	10018e1e 	bne	r2,zero,2c304 <__muldf3+0x794>
   2bccc:	b0800060 	cmpeqi	r2,r22,1
   2bcd0:	1000f826 	beq	r2,zero,2c0b4 <__muldf3+0x544>
   2bcd4:	0007883a 	mov	r3,zero
   2bcd8:	0027883a 	mov	r19,zero
   2bcdc:	0025883a 	mov	r18,zero
   2bce0:	1806953a 	slli	r3,r3,20
   2bce4:	31803fcc 	andi	r6,r6,255
   2bce8:	300c97fa 	slli	r6,r6,31
   2bcec:	1cc6b03a 	or	r3,r3,r19
   2bcf0:	9005883a 	mov	r2,r18
   2bcf4:	1986b03a 	or	r3,r3,r6
   2bcf8:	dfc00f17 	ldw	ra,60(sp)
   2bcfc:	df000e17 	ldw	fp,56(sp)
   2bd00:	ddc00d17 	ldw	r23,52(sp)
   2bd04:	dd800c17 	ldw	r22,48(sp)
   2bd08:	dd400b17 	ldw	r21,44(sp)
   2bd0c:	dd000a17 	ldw	r20,40(sp)
   2bd10:	dcc00917 	ldw	r19,36(sp)
   2bd14:	dc800817 	ldw	r18,32(sp)
   2bd18:	dc400717 	ldw	r17,28(sp)
   2bd1c:	dc000617 	ldw	r16,24(sp)
   2bd20:	dec01004 	addi	sp,sp,64
   2bd24:	f800283a 	ret
   2bd28:	9924b03a 	or	r18,r19,r4
   2bd2c:	90010a26 	beq	r18,zero,2c158 <__muldf3+0x5e8>
   2bd30:	d9c00015 	stw	r7,0(sp)
   2bd34:	98014d26 	beq	r19,zero,2c26c <__muldf3+0x6fc>
   2bd38:	9809883a 	mov	r4,r19
   2bd3c:	002cf5c0 	call	2cf5c <__clzsi2>
   2bd40:	d9c00017 	ldw	r7,0(sp)
   2bd44:	113ffd44 	addi	r4,r2,-11
   2bd48:	00c00744 	movi	r3,29
   2bd4c:	14bffe04 	addi	r18,r2,-8
   2bd50:	1907c83a 	sub	r3,r3,r4
   2bd54:	9ca6983a 	sll	r19,r19,r18
   2bd58:	88c6d83a 	srl	r3,r17,r3
   2bd5c:	8ca4983a 	sll	r18,r17,r18
   2bd60:	1ce6b03a 	or	r19,r3,r19
   2bd64:	023f0344 	movi	r8,-1011
   2bd68:	4091c83a 	sub	r8,r8,r2
   2bd6c:	002b883a 	mov	r21,zero
   2bd70:	002d883a 	mov	r22,zero
   2bd74:	003f9c06 	br	2bbe8 <__muldf3+0x78>
   2bd78:	9924b03a 	or	r18,r19,r4
   2bd7c:	9000f11e 	bne	r18,zero,2c144 <__muldf3+0x5d4>
   2bd80:	0027883a 	mov	r19,zero
   2bd84:	05400204 	movi	r21,8
   2bd88:	0201ffc4 	movi	r8,2047
   2bd8c:	05800084 	movi	r22,2
   2bd90:	003f9506 	br	2bbe8 <__muldf3+0x78>
   2bd94:	e422b03a 	or	r17,fp,r16
   2bd98:	8800e626 	beq	r17,zero,2c134 <__muldf3+0x5c4>
   2bd9c:	da000015 	stw	r8,0(sp)
   2bda0:	80012626 	beq	r16,zero,2c23c <__muldf3+0x6cc>
   2bda4:	8009883a 	mov	r4,r16
   2bda8:	002cf5c0 	call	2cf5c <__clzsi2>
   2bdac:	da000017 	ldw	r8,0(sp)
   2bdb0:	117ffd44 	addi	r5,r2,-11
   2bdb4:	01000744 	movi	r4,29
   2bdb8:	147ffe04 	addi	r17,r2,-8
   2bdbc:	2149c83a 	sub	r4,r4,r5
   2bdc0:	8460983a 	sll	r16,r16,r17
   2bdc4:	e108d83a 	srl	r4,fp,r4
   2bdc8:	e462983a 	sll	r17,fp,r17
   2bdcc:	2420b03a 	or	r16,r4,r16
   2bdd0:	4091c83a 	sub	r8,r8,r2
   2bdd4:	423f0344 	addi	r8,r8,-1011
   2bdd8:	0009883a 	mov	r4,zero
   2bddc:	003f9306 	br	2bc2c <__muldf3+0xbc>
   2bde0:	00c1ffc4 	movi	r3,2047
   2bde4:	0027883a 	mov	r19,zero
   2bde8:	0025883a 	mov	r18,zero
   2bdec:	003fbc06 	br	2bce0 <__muldf3+0x170>
   2bdf0:	9028d43a 	srli	r20,r18,16
   2bdf4:	8f3fffcc 	andi	fp,r17,65535
   2bdf8:	957fffcc 	andi	r21,r18,65535
   2bdfc:	a80b883a 	mov	r5,r21
   2be00:	e009883a 	mov	r4,fp
   2be04:	d9800315 	stw	r6,12(sp)
   2be08:	da000215 	stw	r8,8(sp)
   2be0c:	d9c00115 	stw	r7,4(sp)
   2be10:	8822d43a 	srli	r17,r17,16
   2be14:	002a4b80 	call	2a4b8 <__mulsi3>
   2be18:	e00b883a 	mov	r5,fp
   2be1c:	a009883a 	mov	r4,r20
   2be20:	102d883a 	mov	r22,r2
   2be24:	002a4b80 	call	2a4b8 <__mulsi3>
   2be28:	880b883a 	mov	r5,r17
   2be2c:	a009883a 	mov	r4,r20
   2be30:	102f883a 	mov	r23,r2
   2be34:	002a4b80 	call	2a4b8 <__mulsi3>
   2be38:	a80b883a 	mov	r5,r21
   2be3c:	8809883a 	mov	r4,r17
   2be40:	d8800015 	stw	r2,0(sp)
   2be44:	002a4b80 	call	2a4b8 <__mulsi3>
   2be48:	b006d43a 	srli	r3,r22,16
   2be4c:	15e5883a 	add	r18,r2,r23
   2be50:	d9c00117 	ldw	r7,4(sp)
   2be54:	1c87883a 	add	r3,r3,r18
   2be58:	da000217 	ldw	r8,8(sp)
   2be5c:	d9800317 	ldw	r6,12(sp)
   2be60:	1dc0042e 	bgeu	r3,r23,2be74 <__muldf3+0x304>
   2be64:	d9000017 	ldw	r4,0(sp)
   2be68:	00800074 	movhi	r2,1
   2be6c:	2085883a 	add	r2,r4,r2
   2be70:	d8800015 	stw	r2,0(sp)
   2be74:	1804943a 	slli	r2,r3,16
   2be78:	85ffffcc 	andi	r23,r16,65535
   2be7c:	b5bfffcc 	andi	r22,r22,65535
   2be80:	1585883a 	add	r2,r2,r22
   2be84:	a80b883a 	mov	r5,r21
   2be88:	b809883a 	mov	r4,r23
   2be8c:	1824d43a 	srli	r18,r3,16
   2be90:	d9800515 	stw	r6,20(sp)
   2be94:	da000415 	stw	r8,16(sp)
   2be98:	d9c00315 	stw	r7,12(sp)
   2be9c:	8020d43a 	srli	r16,r16,16
   2bea0:	d8800115 	stw	r2,4(sp)
   2bea4:	002a4b80 	call	2a4b8 <__mulsi3>
   2bea8:	a009883a 	mov	r4,r20
   2beac:	b80b883a 	mov	r5,r23
   2beb0:	d8800215 	stw	r2,8(sp)
   2beb4:	002a4b80 	call	2a4b8 <__mulsi3>
   2beb8:	a009883a 	mov	r4,r20
   2bebc:	800b883a 	mov	r5,r16
   2bec0:	102d883a 	mov	r22,r2
   2bec4:	002a4b80 	call	2a4b8 <__mulsi3>
   2bec8:	a80b883a 	mov	r5,r21
   2becc:	8009883a 	mov	r4,r16
   2bed0:	1029883a 	mov	r20,r2
   2bed4:	002a4b80 	call	2a4b8 <__mulsi3>
   2bed8:	da800217 	ldw	r10,8(sp)
   2bedc:	1585883a 	add	r2,r2,r22
   2bee0:	d9c00317 	ldw	r7,12(sp)
   2bee4:	5006d43a 	srli	r3,r10,16
   2bee8:	da000417 	ldw	r8,16(sp)
   2beec:	d9800517 	ldw	r6,20(sp)
   2bef0:	1887883a 	add	r3,r3,r2
   2bef4:	1d80022e 	bgeu	r3,r22,2bf00 <__muldf3+0x390>
   2bef8:	00800074 	movhi	r2,1
   2befc:	a0a9883a 	add	r20,r20,r2
   2bf00:	1804d43a 	srli	r2,r3,16
   2bf04:	1806943a 	slli	r3,r3,16
   2bf08:	982cd43a 	srli	r22,r19,16
   2bf0c:	9d7fffcc 	andi	r21,r19,65535
   2bf10:	e009883a 	mov	r4,fp
   2bf14:	54ffffcc 	andi	r19,r10,65535
   2bf18:	a80b883a 	mov	r5,r21
   2bf1c:	1ce7883a 	add	r19,r3,r19
   2bf20:	d9800515 	stw	r6,20(sp)
   2bf24:	da000415 	stw	r8,16(sp)
   2bf28:	d9c00315 	stw	r7,12(sp)
   2bf2c:	1529883a 	add	r20,r2,r20
   2bf30:	002a4b80 	call	2a4b8 <__mulsi3>
   2bf34:	e00b883a 	mov	r5,fp
   2bf38:	b009883a 	mov	r4,r22
   2bf3c:	d8800215 	stw	r2,8(sp)
   2bf40:	002a4b80 	call	2a4b8 <__mulsi3>
   2bf44:	8809883a 	mov	r4,r17
   2bf48:	b00b883a 	mov	r5,r22
   2bf4c:	1039883a 	mov	fp,r2
   2bf50:	002a4b80 	call	2a4b8 <__mulsi3>
   2bf54:	8809883a 	mov	r4,r17
   2bf58:	a80b883a 	mov	r5,r21
   2bf5c:	1023883a 	mov	r17,r2
   2bf60:	002a4b80 	call	2a4b8 <__mulsi3>
   2bf64:	d8c00217 	ldw	r3,8(sp)
   2bf68:	1705883a 	add	r2,r2,fp
   2bf6c:	d9c00317 	ldw	r7,12(sp)
   2bf70:	1808d43a 	srli	r4,r3,16
   2bf74:	da000417 	ldw	r8,16(sp)
   2bf78:	d9800517 	ldw	r6,20(sp)
   2bf7c:	2089883a 	add	r4,r4,r2
   2bf80:	94e5883a 	add	r18,r18,r19
   2bf84:	2700022e 	bgeu	r4,fp,2bf90 <__muldf3+0x420>
   2bf88:	00800074 	movhi	r2,1
   2bf8c:	88a3883a 	add	r17,r17,r2
   2bf90:	2004d43a 	srli	r2,r4,16
   2bf94:	2038943a 	slli	fp,r4,16
   2bf98:	18ffffcc 	andi	r3,r3,65535
   2bf9c:	b809883a 	mov	r4,r23
   2bfa0:	a80b883a 	mov	r5,r21
   2bfa4:	d9800415 	stw	r6,16(sp)
   2bfa8:	da000315 	stw	r8,12(sp)
   2bfac:	d9c00215 	stw	r7,8(sp)
   2bfb0:	e0f9883a 	add	fp,fp,r3
   2bfb4:	1463883a 	add	r17,r2,r17
   2bfb8:	002a4b80 	call	2a4b8 <__mulsi3>
   2bfbc:	b80b883a 	mov	r5,r23
   2bfc0:	b009883a 	mov	r4,r22
   2bfc4:	102f883a 	mov	r23,r2
   2bfc8:	002a4b80 	call	2a4b8 <__mulsi3>
   2bfcc:	b00b883a 	mov	r5,r22
   2bfd0:	8009883a 	mov	r4,r16
   2bfd4:	102d883a 	mov	r22,r2
   2bfd8:	002a4b80 	call	2a4b8 <__mulsi3>
   2bfdc:	a80b883a 	mov	r5,r21
   2bfe0:	8009883a 	mov	r4,r16
   2bfe4:	1021883a 	mov	r16,r2
   2bfe8:	002a4b80 	call	2a4b8 <__mulsi3>
   2bfec:	b80ad43a 	srli	r5,r23,16
   2bff0:	1585883a 	add	r2,r2,r22
   2bff4:	d9c00217 	ldw	r7,8(sp)
   2bff8:	288b883a 	add	r5,r5,r2
   2bffc:	da000317 	ldw	r8,12(sp)
   2c000:	d9800417 	ldw	r6,16(sp)
   2c004:	2d80022e 	bgeu	r5,r22,2c010 <__muldf3+0x4a0>
   2c008:	00800074 	movhi	r2,1
   2c00c:	80a1883a 	add	r16,r16,r2
   2c010:	2806943a 	slli	r3,r5,16
   2c014:	d8800017 	ldw	r2,0(sp)
   2c018:	bdffffcc 	andi	r23,r23,65535
   2c01c:	1dc7883a 	add	r3,r3,r23
   2c020:	90ab883a 	add	r21,r18,r2
   2c024:	acd5803a 	cmpltu	r10,r21,r19
   2c028:	1d07883a 	add	r3,r3,r20
   2c02c:	af2b883a 	add	r21,r21,fp
   2c030:	1a97883a 	add	r11,r3,r10
   2c034:	af09803a 	cmpltu	r4,r21,fp
   2c038:	2826d43a 	srli	r19,r5,16
   2c03c:	5c53883a 	add	r9,r11,r17
   2c040:	4905883a 	add	r2,r9,r4
   2c044:	1d29803a 	cmpltu	r20,r3,r20
   2c048:	5a95803a 	cmpltu	r10,r11,r10
   2c04c:	1109803a 	cmpltu	r4,r2,r4
   2c050:	a2a8b03a 	or	r20,r20,r10
   2c054:	4c63803a 	cmpltu	r17,r9,r17
   2c058:	a4e7883a 	add	r19,r20,r19
   2c05c:	8908b03a 	or	r4,r17,r4
   2c060:	a824927a 	slli	r18,r21,9
   2c064:	d8c00117 	ldw	r3,4(sp)
   2c068:	9927883a 	add	r19,r19,r4
   2c06c:	9c27883a 	add	r19,r19,r16
   2c070:	9826927a 	slli	r19,r19,9
   2c074:	a82ad5fa 	srli	r21,r21,23
   2c078:	100ad5fa 	srli	r5,r2,23
   2c07c:	90e4b03a 	or	r18,r18,r3
   2c080:	1004927a 	slli	r2,r2,9
   2c084:	9024c03a 	cmpne	r18,r18,zero
   2c088:	9564b03a 	or	r18,r18,r21
   2c08c:	98c0402c 	andhi	r3,r19,256
   2c090:	90a4b03a 	or	r18,r18,r2
   2c094:	9966b03a 	or	r19,r19,r5
   2c098:	18007f26 	beq	r3,zero,2c298 <__muldf3+0x728>
   2c09c:	9006d07a 	srli	r3,r18,1
   2c0a0:	980497fa 	slli	r2,r19,31
   2c0a4:	9480004c 	andi	r18,r18,1
   2c0a8:	9826d07a 	srli	r19,r19,1
   2c0ac:	1c86b03a 	or	r3,r3,r18
   2c0b0:	18a4b03a 	or	r18,r3,r2
   2c0b4:	3900ffc4 	addi	r4,r7,1023
   2c0b8:	0100320e 	bge	zero,r4,2c184 <__muldf3+0x614>
   2c0bc:	908001cc 	andi	r2,r18,7
   2c0c0:	10000726 	beq	r2,zero,2c0e0 <__muldf3+0x570>
   2c0c4:	908003cc 	andi	r2,r18,15
   2c0c8:	10800120 	cmpeqi	r2,r2,4
   2c0cc:	1000041e 	bne	r2,zero,2c0e0 <__muldf3+0x570>
   2c0d0:	90800104 	addi	r2,r18,4
   2c0d4:	14a5803a 	cmpltu	r18,r2,r18
   2c0d8:	9ca7883a 	add	r19,r19,r18
   2c0dc:	1025883a 	mov	r18,r2
   2c0e0:	9880402c 	andhi	r2,r19,256
   2c0e4:	10000426 	beq	r2,zero,2c0f8 <__muldf3+0x588>
   2c0e8:	00bfc034 	movhi	r2,65280
   2c0ec:	10bfffc4 	addi	r2,r2,-1
   2c0f0:	98a6703a 	and	r19,r19,r2
   2c0f4:	39010004 	addi	r4,r7,1024
   2c0f8:	2081ffc8 	cmpgei	r2,r4,2047
   2c0fc:	103f381e 	bne	r2,zero,2bde0 <__muldf3+0x270>
   2c100:	9804977a 	slli	r2,r19,29
   2c104:	9024d0fa 	srli	r18,r18,3
   2c108:	9826927a 	slli	r19,r19,9
   2c10c:	20c1ffcc 	andi	r3,r4,2047
   2c110:	14a4b03a 	or	r18,r2,r18
   2c114:	9826d33a 	srli	r19,r19,12
   2c118:	003ef106 	br	2bce0 <__muldf3+0x170>
   2c11c:	a00d883a 	mov	r6,r20
   2c120:	003ee606 	br	2bcbc <__muldf3+0x14c>
   2c124:	ad4000d4 	ori	r21,r21,3
   2c128:	e023883a 	mov	r17,fp
   2c12c:	010000c4 	movi	r4,3
   2c130:	003ebe06 	br	2bc2c <__muldf3+0xbc>
   2c134:	ad400054 	ori	r21,r21,1
   2c138:	0021883a 	mov	r16,zero
   2c13c:	01000044 	movi	r4,1
   2c140:	003eba06 	br	2bc2c <__muldf3+0xbc>
   2c144:	2025883a 	mov	r18,r4
   2c148:	05400304 	movi	r21,12
   2c14c:	0201ffc4 	movi	r8,2047
   2c150:	058000c4 	movi	r22,3
   2c154:	003ea406 	br	2bbe8 <__muldf3+0x78>
   2c158:	0027883a 	mov	r19,zero
   2c15c:	05400104 	movi	r21,4
   2c160:	0011883a 	mov	r8,zero
   2c164:	05800044 	movi	r22,1
   2c168:	003e9f06 	br	2bbe8 <__muldf3+0x78>
   2c16c:	04c00434 	movhi	r19,16
   2c170:	000d883a 	mov	r6,zero
   2c174:	9cffffc4 	addi	r19,r19,-1
   2c178:	04bfffc4 	movi	r18,-1
   2c17c:	00c1ffc4 	movi	r3,2047
   2c180:	003ed706 	br	2bce0 <__muldf3+0x170>
   2c184:	00800044 	movi	r2,1
   2c188:	1105c83a 	sub	r2,r2,r4
   2c18c:	10c00e48 	cmpgei	r3,r2,57
   2c190:	183ed01e 	bne	r3,zero,2bcd4 <__muldf3+0x164>
   2c194:	10c00808 	cmpgei	r3,r2,32
   2c198:	1800411e 	bne	r3,zero,2c2a0 <__muldf3+0x730>
   2c19c:	39c10784 	addi	r7,r7,1054
   2c1a0:	99c6983a 	sll	r3,r19,r7
   2c1a4:	9088d83a 	srl	r4,r18,r2
   2c1a8:	91ce983a 	sll	r7,r18,r7
   2c1ac:	98a6d83a 	srl	r19,r19,r2
   2c1b0:	1904b03a 	or	r2,r3,r4
   2c1b4:	3824c03a 	cmpne	r18,r7,zero
   2c1b8:	1484b03a 	or	r2,r2,r18
   2c1bc:	10c001cc 	andi	r3,r2,7
   2c1c0:	18000726 	beq	r3,zero,2c1e0 <__muldf3+0x670>
   2c1c4:	10c003cc 	andi	r3,r2,15
   2c1c8:	18c00120 	cmpeqi	r3,r3,4
   2c1cc:	1800041e 	bne	r3,zero,2c1e0 <__muldf3+0x670>
   2c1d0:	10c00104 	addi	r3,r2,4
   2c1d4:	1885803a 	cmpltu	r2,r3,r2
   2c1d8:	98a7883a 	add	r19,r19,r2
   2c1dc:	1805883a 	mov	r2,r3
   2c1e0:	98c0202c 	andhi	r3,r19,128
   2c1e4:	18004326 	beq	r3,zero,2c2f4 <__muldf3+0x784>
   2c1e8:	00c00044 	movi	r3,1
   2c1ec:	0027883a 	mov	r19,zero
   2c1f0:	0025883a 	mov	r18,zero
   2c1f4:	003eba06 	br	2bce0 <__muldf3+0x170>
   2c1f8:	9880022c 	andhi	r2,r19,8
   2c1fc:	10000926 	beq	r2,zero,2c224 <__muldf3+0x6b4>
   2c200:	8080022c 	andhi	r2,r16,8
   2c204:	1000071e 	bne	r2,zero,2c224 <__muldf3+0x6b4>
   2c208:	00800434 	movhi	r2,16
   2c20c:	84c00234 	orhi	r19,r16,8
   2c210:	10bfffc4 	addi	r2,r2,-1
   2c214:	98a6703a 	and	r19,r19,r2
   2c218:	b80d883a 	mov	r6,r23
   2c21c:	8825883a 	mov	r18,r17
   2c220:	003fd606 	br	2c17c <__muldf3+0x60c>
   2c224:	00800434 	movhi	r2,16
   2c228:	9cc00234 	orhi	r19,r19,8
   2c22c:	10bfffc4 	addi	r2,r2,-1
   2c230:	98a6703a 	and	r19,r19,r2
   2c234:	a00d883a 	mov	r6,r20
   2c238:	003fd006 	br	2c17c <__muldf3+0x60c>
   2c23c:	e009883a 	mov	r4,fp
   2c240:	002cf5c0 	call	2cf5c <__clzsi2>
   2c244:	11400544 	addi	r5,r2,21
   2c248:	29000748 	cmpgei	r4,r5,29
   2c24c:	1007883a 	mov	r3,r2
   2c250:	da000017 	ldw	r8,0(sp)
   2c254:	10800804 	addi	r2,r2,32
   2c258:	203ed626 	beq	r4,zero,2bdb4 <__muldf3+0x244>
   2c25c:	1c3ffe04 	addi	r16,r3,-8
   2c260:	e420983a 	sll	r16,fp,r16
   2c264:	0023883a 	mov	r17,zero
   2c268:	003ed906 	br	2bdd0 <__muldf3+0x260>
   2c26c:	002cf5c0 	call	2cf5c <__clzsi2>
   2c270:	11000544 	addi	r4,r2,21
   2c274:	21400748 	cmpgei	r5,r4,29
   2c278:	1007883a 	mov	r3,r2
   2c27c:	d9c00017 	ldw	r7,0(sp)
   2c280:	10800804 	addi	r2,r2,32
   2c284:	283eb026 	beq	r5,zero,2bd48 <__muldf3+0x1d8>
   2c288:	1cfffe04 	addi	r19,r3,-8
   2c28c:	8ce6983a 	sll	r19,r17,r19
   2c290:	0025883a 	mov	r18,zero
   2c294:	003eb306 	br	2bd64 <__muldf3+0x1f4>
   2c298:	400f883a 	mov	r7,r8
   2c29c:	003f8506 	br	2c0b4 <__muldf3+0x544>
   2c2a0:	00fff844 	movi	r3,-31
   2c2a4:	1907c83a 	sub	r3,r3,r4
   2c2a8:	10800820 	cmpeqi	r2,r2,32
   2c2ac:	98c6d83a 	srl	r3,r19,r3
   2c2b0:	1000031e 	bne	r2,zero,2c2c0 <__muldf3+0x750>
   2c2b4:	39c10f84 	addi	r7,r7,1086
   2c2b8:	99e6983a 	sll	r19,r19,r7
   2c2bc:	94e4b03a 	or	r18,r18,r19
   2c2c0:	9024c03a 	cmpne	r18,r18,zero
   2c2c4:	90c4b03a 	or	r2,r18,r3
   2c2c8:	148001cc 	andi	r18,r2,7
   2c2cc:	9000051e 	bne	r18,zero,2c2e4 <__muldf3+0x774>
   2c2d0:	0027883a 	mov	r19,zero
   2c2d4:	1004d0fa 	srli	r2,r2,3
   2c2d8:	0007883a 	mov	r3,zero
   2c2dc:	14a4b03a 	or	r18,r2,r18
   2c2e0:	003e7f06 	br	2bce0 <__muldf3+0x170>
   2c2e4:	10c003cc 	andi	r3,r2,15
   2c2e8:	18c00118 	cmpnei	r3,r3,4
   2c2ec:	0027883a 	mov	r19,zero
   2c2f0:	183fb71e 	bne	r3,zero,2c1d0 <__muldf3+0x660>
   2c2f4:	9806927a 	slli	r3,r19,9
   2c2f8:	9824977a 	slli	r18,r19,29
   2c2fc:	1826d33a 	srli	r19,r3,12
   2c300:	003ff406 	br	2c2d4 <__muldf3+0x764>
   2c304:	00800434 	movhi	r2,16
   2c308:	9cc00234 	orhi	r19,r19,8
   2c30c:	10bfffc4 	addi	r2,r2,-1
   2c310:	98a6703a 	and	r19,r19,r2
   2c314:	003f9906 	br	2c17c <__muldf3+0x60c>

0002c318 <__subdf3>:
   2c318:	00c00434 	movhi	r3,16
   2c31c:	3812d53a 	srli	r9,r7,20
   2c320:	18ffffc4 	addi	r3,r3,-1
   2c324:	defffb04 	addi	sp,sp,-20
   2c328:	28d0703a 	and	r8,r5,r3
   2c32c:	38c6703a 	and	r3,r7,r3
   2c330:	2804d7fa 	srli	r2,r5,31
   2c334:	401090fa 	slli	r8,r8,3
   2c338:	280ad53a 	srli	r5,r5,20
   2c33c:	180690fa 	slli	r3,r3,3
   2c340:	dcc00315 	stw	r19,12(sp)
   2c344:	dc400115 	stw	r17,4(sp)
   2c348:	2026d77a 	srli	r19,r4,29
   2c34c:	3022d77a 	srli	r17,r6,29
   2c350:	4b41ffcc 	andi	r13,r9,2047
   2c354:	dc800215 	stw	r18,8(sp)
   2c358:	dc000015 	stw	r16,0(sp)
   2c35c:	dfc00415 	stw	ra,16(sp)
   2c360:	6a41ffe0 	cmpeqi	r9,r13,2047
   2c364:	1025883a 	mov	r18,r2
   2c368:	201690fa 	slli	r11,r4,3
   2c36c:	380ed7fa 	srli	r7,r7,31
   2c370:	301490fa 	slli	r10,r6,3
   2c374:	2c01ffcc 	andi	r16,r5,2047
   2c378:	10803fcc 	andi	r2,r2,255
   2c37c:	9a10b03a 	or	r8,r19,r8
   2c380:	88c6b03a 	or	r3,r17,r3
   2c384:	48006e1e 	bne	r9,zero,2c540 <__subdf3+0x228>
   2c388:	3a40005c 	xori	r9,r7,1
   2c38c:	834bc83a 	sub	r5,r16,r13
   2c390:	12405726 	beq	r2,r9,2c4f0 <__subdf3+0x1d8>
   2c394:	01406f0e 	bge	zero,r5,2c554 <__subdf3+0x23c>
   2c398:	68007a26 	beq	r13,zero,2c584 <__subdf3+0x26c>
   2c39c:	8081ffd8 	cmpnei	r2,r16,2047
   2c3a0:	10019f26 	beq	r2,zero,2ca20 <__subdf3+0x708>
   2c3a4:	18c02034 	orhi	r3,r3,128
   2c3a8:	28800e48 	cmpgei	r2,r5,57
   2c3ac:	1000f91e 	bne	r2,zero,2c794 <__subdf3+0x47c>
   2c3b0:	28800808 	cmpgei	r2,r5,32
   2c3b4:	1001451e 	bne	r2,zero,2c8cc <__subdf3+0x5b4>
   2c3b8:	00800804 	movi	r2,32
   2c3bc:	1145c83a 	sub	r2,r2,r5
   2c3c0:	18a2983a 	sll	r17,r3,r2
   2c3c4:	5148d83a 	srl	r4,r10,r5
   2c3c8:	5084983a 	sll	r2,r10,r2
   2c3cc:	1946d83a 	srl	r3,r3,r5
   2c3d0:	8922b03a 	or	r17,r17,r4
   2c3d4:	1004c03a 	cmpne	r2,r2,zero
   2c3d8:	88a2b03a 	or	r17,r17,r2
   2c3dc:	40d1c83a 	sub	r8,r8,r3
   2c3e0:	5c63c83a 	sub	r17,r11,r17
   2c3e4:	5c49803a 	cmpltu	r4,r11,r17
   2c3e8:	4109c83a 	sub	r4,r8,r4
   2c3ec:	2080202c 	andhi	r2,r4,128
   2c3f0:	1000a526 	beq	r2,zero,2c688 <__subdf3+0x370>
   2c3f4:	04c02034 	movhi	r19,128
   2c3f8:	9cffffc4 	addi	r19,r19,-1
   2c3fc:	24e6703a 	and	r19,r4,r19
   2c400:	9800db26 	beq	r19,zero,2c770 <__subdf3+0x458>
   2c404:	9809883a 	mov	r4,r19
   2c408:	002cf5c0 	call	2cf5c <__clzsi2>
   2c40c:	117ffe04 	addi	r5,r2,-8
   2c410:	01000804 	movi	r4,32
   2c414:	2149c83a 	sub	r4,r4,r5
   2c418:	8906d83a 	srl	r3,r17,r4
   2c41c:	9948983a 	sll	r4,r19,r5
   2c420:	8962983a 	sll	r17,r17,r5
   2c424:	1908b03a 	or	r4,r3,r4
   2c428:	2c00cc16 	blt	r5,r16,2c75c <__subdf3+0x444>
   2c42c:	2c0bc83a 	sub	r5,r5,r16
   2c430:	28c00044 	addi	r3,r5,1
   2c434:	18800808 	cmpgei	r2,r3,32
   2c438:	1001171e 	bne	r2,zero,2c898 <__subdf3+0x580>
   2c43c:	00800804 	movi	r2,32
   2c440:	10c5c83a 	sub	r2,r2,r3
   2c444:	88cad83a 	srl	r5,r17,r3
   2c448:	88a2983a 	sll	r17,r17,r2
   2c44c:	2084983a 	sll	r2,r4,r2
   2c450:	20c8d83a 	srl	r4,r4,r3
   2c454:	8822c03a 	cmpne	r17,r17,zero
   2c458:	1144b03a 	or	r2,r2,r5
   2c45c:	1462b03a 	or	r17,r2,r17
   2c460:	0021883a 	mov	r16,zero
   2c464:	888001cc 	andi	r2,r17,7
   2c468:	10000726 	beq	r2,zero,2c488 <__subdf3+0x170>
   2c46c:	888003cc 	andi	r2,r17,15
   2c470:	10800120 	cmpeqi	r2,r2,4
   2c474:	1000041e 	bne	r2,zero,2c488 <__subdf3+0x170>
   2c478:	88c00104 	addi	r3,r17,4
   2c47c:	1c63803a 	cmpltu	r17,r3,r17
   2c480:	2449883a 	add	r4,r4,r17
   2c484:	1823883a 	mov	r17,r3
   2c488:	2080202c 	andhi	r2,r4,128
   2c48c:	10008026 	beq	r2,zero,2c690 <__subdf3+0x378>
   2c490:	81400044 	addi	r5,r16,1
   2c494:	2881ffe0 	cmpeqi	r2,r5,2047
   2c498:	2941ffcc 	andi	r5,r5,2047
   2c49c:	1000921e 	bne	r2,zero,2c6e8 <__subdf3+0x3d0>
   2c4a0:	00bfe034 	movhi	r2,65408
   2c4a4:	10bfffc4 	addi	r2,r2,-1
   2c4a8:	2088703a 	and	r4,r4,r2
   2c4ac:	2006927a 	slli	r3,r4,9
   2c4b0:	8822d0fa 	srli	r17,r17,3
   2c4b4:	2004977a 	slli	r2,r4,29
   2c4b8:	1806d33a 	srli	r3,r3,12
   2c4bc:	1444b03a 	or	r2,r2,r17
   2c4c0:	280a953a 	slli	r5,r5,20
   2c4c4:	94803fcc 	andi	r18,r18,255
   2c4c8:	902497fa 	slli	r18,r18,31
   2c4cc:	28c6b03a 	or	r3,r5,r3
   2c4d0:	1c86b03a 	or	r3,r3,r18
   2c4d4:	dfc00417 	ldw	ra,16(sp)
   2c4d8:	dcc00317 	ldw	r19,12(sp)
   2c4dc:	dc800217 	ldw	r18,8(sp)
   2c4e0:	dc400117 	ldw	r17,4(sp)
   2c4e4:	dc000017 	ldw	r16,0(sp)
   2c4e8:	dec00504 	addi	sp,sp,20
   2c4ec:	f800283a 	ret
   2c4f0:	01402e0e 	bge	zero,r5,2c5ac <__subdf3+0x294>
   2c4f4:	68005526 	beq	r13,zero,2c64c <__subdf3+0x334>
   2c4f8:	8081ffd8 	cmpnei	r2,r16,2047
   2c4fc:	10013b26 	beq	r2,zero,2c9ec <__subdf3+0x6d4>
   2c500:	18c02034 	orhi	r3,r3,128
   2c504:	28800e48 	cmpgei	r2,r5,57
   2c508:	10006d1e 	bne	r2,zero,2c6c0 <__subdf3+0x3a8>
   2c50c:	28800808 	cmpgei	r2,r5,32
   2c510:	10010826 	beq	r2,zero,2c934 <__subdf3+0x61c>
   2c514:	2c7ff804 	addi	r17,r5,-32
   2c518:	29000820 	cmpeqi	r4,r5,32
   2c51c:	1c44d83a 	srl	r2,r3,r17
   2c520:	2000041e 	bne	r4,zero,2c534 <__subdf3+0x21c>
   2c524:	01001004 	movi	r4,64
   2c528:	214bc83a 	sub	r5,r4,r5
   2c52c:	1946983a 	sll	r3,r3,r5
   2c530:	50d4b03a 	or	r10,r10,r3
   2c534:	5022c03a 	cmpne	r17,r10,zero
   2c538:	88a2b03a 	or	r17,r17,r2
   2c53c:	00006206 	br	2c6c8 <__subdf3+0x3b0>
   2c540:	1a98b03a 	or	r12,r3,r10
   2c544:	817e0044 	addi	r5,r16,-2047
   2c548:	6000161e 	bne	r12,zero,2c5a4 <__subdf3+0x28c>
   2c54c:	3a40005c 	xori	r9,r7,1
   2c550:	12401626 	beq	r2,r9,2c5ac <__subdf3+0x294>
   2c554:	28002e26 	beq	r5,zero,2c610 <__subdf3+0x2f8>
   2c558:	6c0bc83a 	sub	r5,r13,r16
   2c55c:	4825883a 	mov	r18,r9
   2c560:	80009e1e 	bne	r16,zero,2c7dc <__subdf3+0x4c4>
   2c564:	42c4b03a 	or	r2,r8,r11
   2c568:	10010926 	beq	r2,zero,2c990 <__subdf3+0x678>
   2c56c:	28bfffc4 	addi	r2,r5,-1
   2c570:	10016826 	beq	r2,zero,2cb14 <__subdf3+0x7fc>
   2c574:	2941ffd8 	cmpnei	r5,r5,2047
   2c578:	28015f26 	beq	r5,zero,2caf8 <__subdf3+0x7e0>
   2c57c:	100b883a 	mov	r5,r2
   2c580:	00009906 	br	2c7e8 <__subdf3+0x4d0>
   2c584:	1a84b03a 	or	r2,r3,r10
   2c588:	1000b126 	beq	r2,zero,2c850 <__subdf3+0x538>
   2c58c:	28bfffc4 	addi	r2,r5,-1
   2c590:	10011d26 	beq	r2,zero,2ca08 <__subdf3+0x6f0>
   2c594:	2941ffd8 	cmpnei	r5,r5,2047
   2c598:	28011426 	beq	r5,zero,2c9ec <__subdf3+0x6d4>
   2c59c:	100b883a 	mov	r5,r2
   2c5a0:	003f8106 	br	2c3a8 <__subdf3+0x90>
   2c5a4:	3a403fcc 	andi	r9,r7,255
   2c5a8:	11ffea1e 	bne	r2,r7,2c554 <__subdf3+0x23c>
   2c5ac:	28007c26 	beq	r5,zero,2c7a0 <__subdf3+0x488>
   2c5b0:	6c0bc83a 	sub	r5,r13,r16
   2c5b4:	8000d726 	beq	r16,zero,2c914 <__subdf3+0x5fc>
   2c5b8:	6881ffd8 	cmpnei	r2,r13,2047
   2c5bc:	10012626 	beq	r2,zero,2ca58 <__subdf3+0x740>
   2c5c0:	42002034 	orhi	r8,r8,128
   2c5c4:	28800e48 	cmpgei	r2,r5,57
   2c5c8:	10012a1e 	bne	r2,zero,2ca74 <__subdf3+0x75c>
   2c5cc:	28800808 	cmpgei	r2,r5,32
   2c5d0:	1001821e 	bne	r2,zero,2cbdc <__subdf3+0x8c4>
   2c5d4:	00800804 	movi	r2,32
   2c5d8:	1145c83a 	sub	r2,r2,r5
   2c5dc:	40a2983a 	sll	r17,r8,r2
   2c5e0:	5948d83a 	srl	r4,r11,r5
   2c5e4:	5884983a 	sll	r2,r11,r2
   2c5e8:	4150d83a 	srl	r8,r8,r5
   2c5ec:	8922b03a 	or	r17,r17,r4
   2c5f0:	1004c03a 	cmpne	r2,r2,zero
   2c5f4:	88a2b03a 	or	r17,r17,r2
   2c5f8:	1a07883a 	add	r3,r3,r8
   2c5fc:	8aa3883a 	add	r17,r17,r10
   2c600:	8a89803a 	cmpltu	r4,r17,r10
   2c604:	20c9883a 	add	r4,r4,r3
   2c608:	6821883a 	mov	r16,r13
   2c60c:	00003106 	br	2c6d4 <__subdf3+0x3bc>
   2c610:	80800044 	addi	r2,r16,1
   2c614:	1081ff8c 	andi	r2,r2,2046
   2c618:	1000821e 	bne	r2,zero,2c824 <__subdf3+0x50c>
   2c61c:	42ceb03a 	or	r7,r8,r11
   2c620:	1a84b03a 	or	r2,r3,r10
   2c624:	8000e11e 	bne	r16,zero,2c9ac <__subdf3+0x694>
   2c628:	38012a26 	beq	r7,zero,2cad4 <__subdf3+0x7bc>
   2c62c:	1001461e 	bne	r2,zero,2cb48 <__subdf3+0x830>
   2c630:	4004977a 	slli	r2,r8,29
   2c634:	00c80034 	movhi	r3,8192
   2c638:	18ffffc4 	addi	r3,r3,-1
   2c63c:	20c8703a 	and	r4,r4,r3
   2c640:	4010d0fa 	srli	r8,r8,3
   2c644:	1104b03a 	or	r2,r2,r4
   2c648:	00001806 	br	2c6ac <__subdf3+0x394>
   2c64c:	1a84b03a 	or	r2,r3,r10
   2c650:	1000fa26 	beq	r2,zero,2ca3c <__subdf3+0x724>
   2c654:	28bfffc4 	addi	r2,r5,-1
   2c658:	10000426 	beq	r2,zero,2c66c <__subdf3+0x354>
   2c65c:	2941ffd8 	cmpnei	r5,r5,2047
   2c660:	28013226 	beq	r5,zero,2cb2c <__subdf3+0x814>
   2c664:	100b883a 	mov	r5,r2
   2c668:	003fa606 	br	2c504 <__subdf3+0x1ec>
   2c66c:	5aa3883a 	add	r17,r11,r10
   2c670:	40c9883a 	add	r4,r8,r3
   2c674:	8ad7803a 	cmpltu	r11,r17,r11
   2c678:	22c9883a 	add	r4,r4,r11
   2c67c:	2080202c 	andhi	r2,r4,128
   2c680:	10007a1e 	bne	r2,zero,2c86c <__subdf3+0x554>
   2c684:	04000044 	movi	r16,1
   2c688:	888001cc 	andi	r2,r17,7
   2c68c:	103f771e 	bne	r2,zero,2c46c <__subdf3+0x154>
   2c690:	8822d0fa 	srli	r17,r17,3
   2c694:	2004977a 	slli	r2,r4,29
   2c698:	2010d0fa 	srli	r8,r4,3
   2c69c:	800b883a 	mov	r5,r16
   2c6a0:	8884b03a 	or	r2,r17,r2
   2c6a4:	28c1ffe0 	cmpeqi	r3,r5,2047
   2c6a8:	1800241e 	bne	r3,zero,2c73c <__subdf3+0x424>
   2c6ac:	00c00434 	movhi	r3,16
   2c6b0:	18ffffc4 	addi	r3,r3,-1
   2c6b4:	40c6703a 	and	r3,r8,r3
   2c6b8:	2941ffcc 	andi	r5,r5,2047
   2c6bc:	003f8006 	br	2c4c0 <__subdf3+0x1a8>
   2c6c0:	1aa2b03a 	or	r17,r3,r10
   2c6c4:	8822c03a 	cmpne	r17,r17,zero
   2c6c8:	8ae3883a 	add	r17,r17,r11
   2c6cc:	8ac9803a 	cmpltu	r4,r17,r11
   2c6d0:	2209883a 	add	r4,r4,r8
   2c6d4:	2080202c 	andhi	r2,r4,128
   2c6d8:	103feb26 	beq	r2,zero,2c688 <__subdf3+0x370>
   2c6dc:	84000044 	addi	r16,r16,1
   2c6e0:	8081ffe0 	cmpeqi	r2,r16,2047
   2c6e4:	10006226 	beq	r2,zero,2c870 <__subdf3+0x558>
   2c6e8:	0141ffc4 	movi	r5,2047
   2c6ec:	0007883a 	mov	r3,zero
   2c6f0:	0005883a 	mov	r2,zero
   2c6f4:	003f7206 	br	2c4c0 <__subdf3+0x1a8>
   2c6f8:	400e977a 	slli	r7,r8,29
   2c6fc:	4010d0fa 	srli	r8,r8,3
   2c700:	1000ef26 	beq	r2,zero,2cac0 <__subdf3+0x7a8>
   2c704:	01480034 	movhi	r5,8192
   2c708:	297fffc4 	addi	r5,r5,-1
   2c70c:	2144703a 	and	r2,r4,r5
   2c710:	4100022c 	andhi	r4,r8,8
   2c714:	11c4b03a 	or	r2,r2,r7
   2c718:	20000826 	beq	r4,zero,2c73c <__subdf3+0x424>
   2c71c:	1808d0fa 	srli	r4,r3,3
   2c720:	21c0022c 	andhi	r7,r4,8
   2c724:	3800051e 	bne	r7,zero,2c73c <__subdf3+0x424>
   2c728:	1804977a 	slli	r2,r3,29
   2c72c:	314c703a 	and	r6,r6,r5
   2c730:	4825883a 	mov	r18,r9
   2c734:	3084b03a 	or	r2,r6,r2
   2c738:	2011883a 	mov	r8,r4
   2c73c:	1206b03a 	or	r3,r2,r8
   2c740:	18013e26 	beq	r3,zero,2cc3c <__subdf3+0x924>
   2c744:	01000434 	movhi	r4,16
   2c748:	40c00234 	orhi	r3,r8,8
   2c74c:	213fffc4 	addi	r4,r4,-1
   2c750:	1906703a 	and	r3,r3,r4
   2c754:	0141ffc4 	movi	r5,2047
   2c758:	003f5906 	br	2c4c0 <__subdf3+0x1a8>
   2c75c:	00ffe034 	movhi	r3,65408
   2c760:	18ffffc4 	addi	r3,r3,-1
   2c764:	8161c83a 	sub	r16,r16,r5
   2c768:	20c8703a 	and	r4,r4,r3
   2c76c:	003f3d06 	br	2c464 <__subdf3+0x14c>
   2c770:	8809883a 	mov	r4,r17
   2c774:	002cf5c0 	call	2cf5c <__clzsi2>
   2c778:	11400604 	addi	r5,r2,24
   2c77c:	28c00808 	cmpgei	r3,r5,32
   2c780:	183f2326 	beq	r3,zero,2c410 <__subdf3+0xf8>
   2c784:	113ffe04 	addi	r4,r2,-8
   2c788:	8908983a 	sll	r4,r17,r4
   2c78c:	0023883a 	mov	r17,zero
   2c790:	003f2506 	br	2c428 <__subdf3+0x110>
   2c794:	1aa2b03a 	or	r17,r3,r10
   2c798:	8822c03a 	cmpne	r17,r17,zero
   2c79c:	003f1006 	br	2c3e0 <__subdf3+0xc8>
   2c7a0:	80800044 	addi	r2,r16,1
   2c7a4:	11c1ff8c 	andi	r7,r2,2046
   2c7a8:	38006d1e 	bne	r7,zero,2c960 <__subdf3+0x648>
   2c7ac:	42c4b03a 	or	r2,r8,r11
   2c7b0:	8000be1e 	bne	r16,zero,2caac <__subdf3+0x794>
   2c7b4:	1000f726 	beq	r2,zero,2cb94 <__subdf3+0x87c>
   2c7b8:	1a84b03a 	or	r2,r3,r10
   2c7bc:	1000fc1e 	bne	r2,zero,2cbb0 <__subdf3+0x898>
   2c7c0:	4006977a 	slli	r3,r8,29
   2c7c4:	00880034 	movhi	r2,8192
   2c7c8:	10bfffc4 	addi	r2,r2,-1
   2c7cc:	2084703a 	and	r2,r4,r2
   2c7d0:	4010d0fa 	srli	r8,r8,3
   2c7d4:	10c4b03a 	or	r2,r2,r3
   2c7d8:	003fb406 	br	2c6ac <__subdf3+0x394>
   2c7dc:	6881ffd8 	cmpnei	r2,r13,2047
   2c7e0:	10009d26 	beq	r2,zero,2ca58 <__subdf3+0x740>
   2c7e4:	42002034 	orhi	r8,r8,128
   2c7e8:	28800e48 	cmpgei	r2,r5,57
   2c7ec:	1000421e 	bne	r2,zero,2c8f8 <__subdf3+0x5e0>
   2c7f0:	28800808 	cmpgei	r2,r5,32
   2c7f4:	1000a21e 	bne	r2,zero,2ca80 <__subdf3+0x768>
   2c7f8:	00800804 	movi	r2,32
   2c7fc:	1145c83a 	sub	r2,r2,r5
   2c800:	40a2983a 	sll	r17,r8,r2
   2c804:	5948d83a 	srl	r4,r11,r5
   2c808:	5896983a 	sll	r11,r11,r2
   2c80c:	4150d83a 	srl	r8,r8,r5
   2c810:	8922b03a 	or	r17,r17,r4
   2c814:	5816c03a 	cmpne	r11,r11,zero
   2c818:	8ae2b03a 	or	r17,r17,r11
   2c81c:	1a07c83a 	sub	r3,r3,r8
   2c820:	00003706 	br	2c900 <__subdf3+0x5e8>
   2c824:	5aa3c83a 	sub	r17,r11,r10
   2c828:	40e7c83a 	sub	r19,r8,r3
   2c82c:	5c49803a 	cmpltu	r4,r11,r17
   2c830:	9927c83a 	sub	r19,r19,r4
   2c834:	9880202c 	andhi	r2,r19,128
   2c838:	1000661e 	bne	r2,zero,2c9d4 <__subdf3+0x6bc>
   2c83c:	8cc4b03a 	or	r2,r17,r19
   2c840:	103eef1e 	bne	r2,zero,2c400 <__subdf3+0xe8>
   2c844:	0011883a 	mov	r8,zero
   2c848:	0025883a 	mov	r18,zero
   2c84c:	003f9706 	br	2c6ac <__subdf3+0x394>
   2c850:	4022977a 	slli	r17,r8,29
   2c854:	00880034 	movhi	r2,8192
   2c858:	10bfffc4 	addi	r2,r2,-1
   2c85c:	2088703a 	and	r4,r4,r2
   2c860:	4010d0fa 	srli	r8,r8,3
   2c864:	2444b03a 	or	r2,r4,r17
   2c868:	003f8e06 	br	2c6a4 <__subdf3+0x38c>
   2c86c:	04000084 	movi	r16,2
   2c870:	00bfe034 	movhi	r2,65408
   2c874:	10bfffc4 	addi	r2,r2,-1
   2c878:	8806d07a 	srli	r3,r17,1
   2c87c:	2088703a 	and	r4,r4,r2
   2c880:	200497fa 	slli	r2,r4,31
   2c884:	8c40004c 	andi	r17,r17,1
   2c888:	1c62b03a 	or	r17,r3,r17
   2c88c:	2008d07a 	srli	r4,r4,1
   2c890:	1462b03a 	or	r17,r2,r17
   2c894:	003ef306 	br	2c464 <__subdf3+0x14c>
   2c898:	297ff844 	addi	r5,r5,-31
   2c89c:	18800820 	cmpeqi	r2,r3,32
   2c8a0:	214ad83a 	srl	r5,r4,r5
   2c8a4:	1000041e 	bne	r2,zero,2c8b8 <__subdf3+0x5a0>
   2c8a8:	00801004 	movi	r2,64
   2c8ac:	10c7c83a 	sub	r3,r2,r3
   2c8b0:	20c8983a 	sll	r4,r4,r3
   2c8b4:	8922b03a 	or	r17,r17,r4
   2c8b8:	8822c03a 	cmpne	r17,r17,zero
   2c8bc:	8962b03a 	or	r17,r17,r5
   2c8c0:	0009883a 	mov	r4,zero
   2c8c4:	0021883a 	mov	r16,zero
   2c8c8:	003f6f06 	br	2c688 <__subdf3+0x370>
   2c8cc:	2c7ff804 	addi	r17,r5,-32
   2c8d0:	29000820 	cmpeqi	r4,r5,32
   2c8d4:	1c44d83a 	srl	r2,r3,r17
   2c8d8:	2000041e 	bne	r4,zero,2c8ec <__subdf3+0x5d4>
   2c8dc:	01001004 	movi	r4,64
   2c8e0:	214bc83a 	sub	r5,r4,r5
   2c8e4:	1946983a 	sll	r3,r3,r5
   2c8e8:	50d4b03a 	or	r10,r10,r3
   2c8ec:	5022c03a 	cmpne	r17,r10,zero
   2c8f0:	88a2b03a 	or	r17,r17,r2
   2c8f4:	003eba06 	br	2c3e0 <__subdf3+0xc8>
   2c8f8:	42d0b03a 	or	r8,r8,r11
   2c8fc:	4022c03a 	cmpne	r17,r8,zero
   2c900:	5463c83a 	sub	r17,r10,r17
   2c904:	5449803a 	cmpltu	r4,r10,r17
   2c908:	1909c83a 	sub	r4,r3,r4
   2c90c:	6821883a 	mov	r16,r13
   2c910:	003eb606 	br	2c3ec <__subdf3+0xd4>
   2c914:	42c4b03a 	or	r2,r8,r11
   2c918:	10009726 	beq	r2,zero,2cb78 <__subdf3+0x860>
   2c91c:	28bfffc4 	addi	r2,r5,-1
   2c920:	1000b926 	beq	r2,zero,2cc08 <__subdf3+0x8f0>
   2c924:	2941ffd8 	cmpnei	r5,r5,2047
   2c928:	28007326 	beq	r5,zero,2caf8 <__subdf3+0x7e0>
   2c92c:	100b883a 	mov	r5,r2
   2c930:	003f2406 	br	2c5c4 <__subdf3+0x2ac>
   2c934:	00800804 	movi	r2,32
   2c938:	1145c83a 	sub	r2,r2,r5
   2c93c:	18a2983a 	sll	r17,r3,r2
   2c940:	5148d83a 	srl	r4,r10,r5
   2c944:	5084983a 	sll	r2,r10,r2
   2c948:	1946d83a 	srl	r3,r3,r5
   2c94c:	8922b03a 	or	r17,r17,r4
   2c950:	1004c03a 	cmpne	r2,r2,zero
   2c954:	88a2b03a 	or	r17,r17,r2
   2c958:	40d1883a 	add	r8,r8,r3
   2c95c:	003f5a06 	br	2c6c8 <__subdf3+0x3b0>
   2c960:	1101ffe0 	cmpeqi	r4,r2,2047
   2c964:	203f601e 	bne	r4,zero,2c6e8 <__subdf3+0x3d0>
   2c968:	5a95883a 	add	r10,r11,r10
   2c96c:	52d7803a 	cmpltu	r11,r10,r11
   2c970:	40c9883a 	add	r4,r8,r3
   2c974:	22c9883a 	add	r4,r4,r11
   2c978:	202297fa 	slli	r17,r4,31
   2c97c:	5014d07a 	srli	r10,r10,1
   2c980:	2008d07a 	srli	r4,r4,1
   2c984:	1021883a 	mov	r16,r2
   2c988:	8aa2b03a 	or	r17,r17,r10
   2c98c:	003f3e06 	br	2c688 <__subdf3+0x370>
   2c990:	1808977a 	slli	r4,r3,29
   2c994:	00880034 	movhi	r2,8192
   2c998:	10bfffc4 	addi	r2,r2,-1
   2c99c:	308c703a 	and	r6,r6,r2
   2c9a0:	1810d0fa 	srli	r8,r3,3
   2c9a4:	3104b03a 	or	r2,r6,r4
   2c9a8:	003f3e06 	br	2c6a4 <__subdf3+0x38c>
   2c9ac:	383f521e 	bne	r7,zero,2c6f8 <__subdf3+0x3e0>
   2c9b0:	10009d26 	beq	r2,zero,2cc28 <__subdf3+0x910>
   2c9b4:	1808977a 	slli	r4,r3,29
   2c9b8:	00880034 	movhi	r2,8192
   2c9bc:	10bfffc4 	addi	r2,r2,-1
   2c9c0:	3084703a 	and	r2,r6,r2
   2c9c4:	1810d0fa 	srli	r8,r3,3
   2c9c8:	1104b03a 	or	r2,r2,r4
   2c9cc:	4825883a 	mov	r18,r9
   2c9d0:	003f5a06 	br	2c73c <__subdf3+0x424>
   2c9d4:	52e3c83a 	sub	r17,r10,r11
   2c9d8:	1a09c83a 	sub	r4,r3,r8
   2c9dc:	5467803a 	cmpltu	r19,r10,r17
   2c9e0:	24e7c83a 	sub	r19,r4,r19
   2c9e4:	4825883a 	mov	r18,r9
   2c9e8:	003e8506 	br	2c400 <__subdf3+0xe8>
   2c9ec:	4022977a 	slli	r17,r8,29
   2c9f0:	00880034 	movhi	r2,8192
   2c9f4:	10bfffc4 	addi	r2,r2,-1
   2c9f8:	2088703a 	and	r4,r4,r2
   2c9fc:	4010d0fa 	srli	r8,r8,3
   2ca00:	2444b03a 	or	r2,r4,r17
   2ca04:	003f4d06 	br	2c73c <__subdf3+0x424>
   2ca08:	5aa3c83a 	sub	r17,r11,r10
   2ca0c:	40c9c83a 	sub	r4,r8,r3
   2ca10:	5c57803a 	cmpltu	r11,r11,r17
   2ca14:	22c9c83a 	sub	r4,r4,r11
   2ca18:	04000044 	movi	r16,1
   2ca1c:	003e7306 	br	2c3ec <__subdf3+0xd4>
   2ca20:	4004977a 	slli	r2,r8,29
   2ca24:	00c80034 	movhi	r3,8192
   2ca28:	18ffffc4 	addi	r3,r3,-1
   2ca2c:	20c8703a 	and	r4,r4,r3
   2ca30:	4010d0fa 	srli	r8,r8,3
   2ca34:	1104b03a 	or	r2,r2,r4
   2ca38:	003f4006 	br	2c73c <__subdf3+0x424>
   2ca3c:	4004977a 	slli	r2,r8,29
   2ca40:	00c80034 	movhi	r3,8192
   2ca44:	18ffffc4 	addi	r3,r3,-1
   2ca48:	20c8703a 	and	r4,r4,r3
   2ca4c:	4010d0fa 	srli	r8,r8,3
   2ca50:	1104b03a 	or	r2,r2,r4
   2ca54:	003f1306 	br	2c6a4 <__subdf3+0x38c>
   2ca58:	1804977a 	slli	r2,r3,29
   2ca5c:	01080034 	movhi	r4,8192
   2ca60:	213fffc4 	addi	r4,r4,-1
   2ca64:	310c703a 	and	r6,r6,r4
   2ca68:	1810d0fa 	srli	r8,r3,3
   2ca6c:	1184b03a 	or	r2,r2,r6
   2ca70:	003f3206 	br	2c73c <__subdf3+0x424>
   2ca74:	42d0b03a 	or	r8,r8,r11
   2ca78:	4022c03a 	cmpne	r17,r8,zero
   2ca7c:	003edf06 	br	2c5fc <__subdf3+0x2e4>
   2ca80:	2c7ff804 	addi	r17,r5,-32
   2ca84:	29000820 	cmpeqi	r4,r5,32
   2ca88:	4444d83a 	srl	r2,r8,r17
   2ca8c:	2000041e 	bne	r4,zero,2caa0 <__subdf3+0x788>
   2ca90:	01001004 	movi	r4,64
   2ca94:	214bc83a 	sub	r5,r4,r5
   2ca98:	4150983a 	sll	r8,r8,r5
   2ca9c:	5a16b03a 	or	r11,r11,r8
   2caa0:	5822c03a 	cmpne	r17,r11,zero
   2caa4:	88a2b03a 	or	r17,r17,r2
   2caa8:	003f9506 	br	2c900 <__subdf3+0x5e8>
   2caac:	103fea26 	beq	r2,zero,2ca58 <__subdf3+0x740>
   2cab0:	1a94b03a 	or	r10,r3,r10
   2cab4:	400e977a 	slli	r7,r8,29
   2cab8:	4010d0fa 	srli	r8,r8,3
   2cabc:	503f111e 	bne	r10,zero,2c704 <__subdf3+0x3ec>
   2cac0:	00880034 	movhi	r2,8192
   2cac4:	10bfffc4 	addi	r2,r2,-1
   2cac8:	2084703a 	and	r2,r4,r2
   2cacc:	11c4b03a 	or	r2,r2,r7
   2cad0:	003f1a06 	br	2c73c <__subdf3+0x424>
   2cad4:	103f5b26 	beq	r2,zero,2c844 <__subdf3+0x52c>
   2cad8:	1804977a 	slli	r2,r3,29
   2cadc:	01080034 	movhi	r4,8192
   2cae0:	213fffc4 	addi	r4,r4,-1
   2cae4:	310c703a 	and	r6,r6,r4
   2cae8:	1810d0fa 	srli	r8,r3,3
   2caec:	1184b03a 	or	r2,r2,r6
   2caf0:	4825883a 	mov	r18,r9
   2caf4:	003eed06 	br	2c6ac <__subdf3+0x394>
   2caf8:	1808977a 	slli	r4,r3,29
   2cafc:	00880034 	movhi	r2,8192
   2cb00:	10bfffc4 	addi	r2,r2,-1
   2cb04:	3084703a 	and	r2,r6,r2
   2cb08:	1810d0fa 	srli	r8,r3,3
   2cb0c:	1104b03a 	or	r2,r2,r4
   2cb10:	003f0a06 	br	2c73c <__subdf3+0x424>
   2cb14:	52e3c83a 	sub	r17,r10,r11
   2cb18:	1a09c83a 	sub	r4,r3,r8
   2cb1c:	5455803a 	cmpltu	r10,r10,r17
   2cb20:	2289c83a 	sub	r4,r4,r10
   2cb24:	04000044 	movi	r16,1
   2cb28:	003e3006 	br	2c3ec <__subdf3+0xd4>
   2cb2c:	4006977a 	slli	r3,r8,29
   2cb30:	00880034 	movhi	r2,8192
   2cb34:	10bfffc4 	addi	r2,r2,-1
   2cb38:	2084703a 	and	r2,r4,r2
   2cb3c:	4010d0fa 	srli	r8,r8,3
   2cb40:	10c4b03a 	or	r2,r2,r3
   2cb44:	003efd06 	br	2c73c <__subdf3+0x424>
   2cb48:	5aa3c83a 	sub	r17,r11,r10
   2cb4c:	5c45803a 	cmpltu	r2,r11,r17
   2cb50:	40c9c83a 	sub	r4,r8,r3
   2cb54:	2089c83a 	sub	r4,r4,r2
   2cb58:	2080202c 	andhi	r2,r4,128
   2cb5c:	10002f26 	beq	r2,zero,2cc1c <__subdf3+0x904>
   2cb60:	52e3c83a 	sub	r17,r10,r11
   2cb64:	1a09c83a 	sub	r4,r3,r8
   2cb68:	5455803a 	cmpltu	r10,r10,r17
   2cb6c:	2289c83a 	sub	r4,r4,r10
   2cb70:	4825883a 	mov	r18,r9
   2cb74:	003e3b06 	br	2c464 <__subdf3+0x14c>
   2cb78:	1808977a 	slli	r4,r3,29
   2cb7c:	00880034 	movhi	r2,8192
   2cb80:	10bfffc4 	addi	r2,r2,-1
   2cb84:	3084703a 	and	r2,r6,r2
   2cb88:	1810d0fa 	srli	r8,r3,3
   2cb8c:	1104b03a 	or	r2,r2,r4
   2cb90:	003ec406 	br	2c6a4 <__subdf3+0x38c>
   2cb94:	1808977a 	slli	r4,r3,29
   2cb98:	00880034 	movhi	r2,8192
   2cb9c:	10bfffc4 	addi	r2,r2,-1
   2cba0:	3084703a 	and	r2,r6,r2
   2cba4:	1810d0fa 	srli	r8,r3,3
   2cba8:	1104b03a 	or	r2,r2,r4
   2cbac:	003ebf06 	br	2c6ac <__subdf3+0x394>
   2cbb0:	5aa3883a 	add	r17,r11,r10
   2cbb4:	40c9883a 	add	r4,r8,r3
   2cbb8:	8ad7803a 	cmpltu	r11,r17,r11
   2cbbc:	22c9883a 	add	r4,r4,r11
   2cbc0:	2080202c 	andhi	r2,r4,128
   2cbc4:	103eb026 	beq	r2,zero,2c688 <__subdf3+0x370>
   2cbc8:	00bfe034 	movhi	r2,65408
   2cbcc:	10bfffc4 	addi	r2,r2,-1
   2cbd0:	2088703a 	and	r4,r4,r2
   2cbd4:	04000044 	movi	r16,1
   2cbd8:	003eab06 	br	2c688 <__subdf3+0x370>
   2cbdc:	28bff804 	addi	r2,r5,-32
   2cbe0:	29000820 	cmpeqi	r4,r5,32
   2cbe4:	4084d83a 	srl	r2,r8,r2
   2cbe8:	2000041e 	bne	r4,zero,2cbfc <__subdf3+0x8e4>
   2cbec:	01001004 	movi	r4,64
   2cbf0:	214bc83a 	sub	r5,r4,r5
   2cbf4:	4150983a 	sll	r8,r8,r5
   2cbf8:	5a16b03a 	or	r11,r11,r8
   2cbfc:	5822c03a 	cmpne	r17,r11,zero
   2cc00:	88a2b03a 	or	r17,r17,r2
   2cc04:	003e7d06 	br	2c5fc <__subdf3+0x2e4>
   2cc08:	5aa3883a 	add	r17,r11,r10
   2cc0c:	40c9883a 	add	r4,r8,r3
   2cc10:	8a95803a 	cmpltu	r10,r17,r10
   2cc14:	2289883a 	add	r4,r4,r10
   2cc18:	003e9806 	br	2c67c <__subdf3+0x364>
   2cc1c:	8904b03a 	or	r2,r17,r4
   2cc20:	103f0826 	beq	r2,zero,2c844 <__subdf3+0x52c>
   2cc24:	003e9806 	br	2c688 <__subdf3+0x370>
   2cc28:	02000434 	movhi	r8,16
   2cc2c:	423fffc4 	addi	r8,r8,-1
   2cc30:	0025883a 	mov	r18,zero
   2cc34:	00bfffc4 	movi	r2,-1
   2cc38:	003ec206 	br	2c744 <__subdf3+0x42c>
   2cc3c:	0005883a 	mov	r2,zero
   2cc40:	0141ffc4 	movi	r5,2047
   2cc44:	0007883a 	mov	r3,zero
   2cc48:	003e1d06 	br	2c4c0 <__subdf3+0x1a8>

0002cc4c <__unorddf2>:
   2cc4c:	2806d53a 	srli	r3,r5,20
   2cc50:	3810d53a 	srli	r8,r7,20
   2cc54:	02400434 	movhi	r9,16
   2cc58:	18c1ffcc 	andi	r3,r3,2047
   2cc5c:	4a7fffc4 	addi	r9,r9,-1
   2cc60:	18c1ffd8 	cmpnei	r3,r3,2047
   2cc64:	2a4a703a 	and	r5,r5,r9
   2cc68:	3a4e703a 	and	r7,r7,r9
   2cc6c:	4201ffcc 	andi	r8,r8,2047
   2cc70:	18000426 	beq	r3,zero,2cc84 <__unorddf2+0x38>
   2cc74:	4201ffd8 	cmpnei	r8,r8,2047
   2cc78:	40000626 	beq	r8,zero,2cc94 <__unorddf2+0x48>
   2cc7c:	0005883a 	mov	r2,zero
   2cc80:	f800283a 	ret
   2cc84:	214ab03a 	or	r5,r4,r5
   2cc88:	283ffa26 	beq	r5,zero,2cc74 <__unorddf2+0x28>
   2cc8c:	00800044 	movi	r2,1
   2cc90:	f800283a 	ret
   2cc94:	398eb03a 	or	r7,r7,r6
   2cc98:	3804c03a 	cmpne	r2,r7,zero
   2cc9c:	f800283a 	ret

0002cca0 <__floatsidf>:
   2cca0:	defffd04 	addi	sp,sp,-12
   2cca4:	dfc00215 	stw	ra,8(sp)
   2cca8:	dc400115 	stw	r17,4(sp)
   2ccac:	dc000015 	stw	r16,0(sp)
   2ccb0:	20001326 	beq	r4,zero,2cd00 <__floatsidf+0x60>
   2ccb4:	2022d7fa 	srli	r17,r4,31
   2ccb8:	2021883a 	mov	r16,r4
   2ccbc:	20002516 	blt	r4,zero,2cd54 <__floatsidf+0xb4>
   2ccc0:	8009883a 	mov	r4,r16
   2ccc4:	002cf5c0 	call	2cf5c <__clzsi2>
   2ccc8:	01410784 	movi	r5,1054
   2cccc:	288bc83a 	sub	r5,r5,r2
   2ccd0:	10c002c8 	cmpgei	r3,r2,11
   2ccd4:	2941ffcc 	andi	r5,r5,2047
   2ccd8:	1800171e 	bne	r3,zero,2cd38 <__floatsidf+0x98>
   2ccdc:	00c002c4 	movi	r3,11
   2cce0:	1887c83a 	sub	r3,r3,r2
   2cce4:	80c6d83a 	srl	r3,r16,r3
   2cce8:	01000434 	movhi	r4,16
   2ccec:	10800544 	addi	r2,r2,21
   2ccf0:	213fffc4 	addi	r4,r4,-1
   2ccf4:	8084983a 	sll	r2,r16,r2
   2ccf8:	1906703a 	and	r3,r3,r4
   2ccfc:	00000406 	br	2cd10 <__floatsidf+0x70>
   2cd00:	0023883a 	mov	r17,zero
   2cd04:	000b883a 	mov	r5,zero
   2cd08:	0007883a 	mov	r3,zero
   2cd0c:	0005883a 	mov	r2,zero
   2cd10:	280a953a 	slli	r5,r5,20
   2cd14:	8c403fcc 	andi	r17,r17,255
   2cd18:	882297fa 	slli	r17,r17,31
   2cd1c:	28c6b03a 	or	r3,r5,r3
   2cd20:	1c46b03a 	or	r3,r3,r17
   2cd24:	dfc00217 	ldw	ra,8(sp)
   2cd28:	dc400117 	ldw	r17,4(sp)
   2cd2c:	dc000017 	ldw	r16,0(sp)
   2cd30:	dec00304 	addi	sp,sp,12
   2cd34:	f800283a 	ret
   2cd38:	10bffd44 	addi	r2,r2,-11
   2cd3c:	8086983a 	sll	r3,r16,r2
   2cd40:	00800434 	movhi	r2,16
   2cd44:	10bfffc4 	addi	r2,r2,-1
   2cd48:	1886703a 	and	r3,r3,r2
   2cd4c:	0005883a 	mov	r2,zero
   2cd50:	003fef06 	br	2cd10 <__floatsidf+0x70>
   2cd54:	0121c83a 	sub	r16,zero,r4
   2cd58:	003fd906 	br	2ccc0 <__floatsidf+0x20>

0002cd5c <__floatunsidf>:
   2cd5c:	defffe04 	addi	sp,sp,-8
   2cd60:	dc000015 	stw	r16,0(sp)
   2cd64:	dfc00115 	stw	ra,4(sp)
   2cd68:	2021883a 	mov	r16,r4
   2cd6c:	20000f26 	beq	r4,zero,2cdac <__floatunsidf+0x50>
   2cd70:	002cf5c0 	call	2cf5c <__clzsi2>
   2cd74:	00c10784 	movi	r3,1054
   2cd78:	1887c83a 	sub	r3,r3,r2
   2cd7c:	110002c8 	cmpgei	r4,r2,11
   2cd80:	18c1ffcc 	andi	r3,r3,2047
   2cd84:	2000121e 	bne	r4,zero,2cdd0 <__floatunsidf+0x74>
   2cd88:	014002c4 	movi	r5,11
   2cd8c:	288bc83a 	sub	r5,r5,r2
   2cd90:	814ad83a 	srl	r5,r16,r5
   2cd94:	01000434 	movhi	r4,16
   2cd98:	10800544 	addi	r2,r2,21
   2cd9c:	213fffc4 	addi	r4,r4,-1
   2cda0:	80a0983a 	sll	r16,r16,r2
   2cda4:	290a703a 	and	r5,r5,r4
   2cda8:	00000206 	br	2cdb4 <__floatunsidf+0x58>
   2cdac:	0007883a 	mov	r3,zero
   2cdb0:	000b883a 	mov	r5,zero
   2cdb4:	1806953a 	slli	r3,r3,20
   2cdb8:	8005883a 	mov	r2,r16
   2cdbc:	1946b03a 	or	r3,r3,r5
   2cdc0:	dfc00117 	ldw	ra,4(sp)
   2cdc4:	dc000017 	ldw	r16,0(sp)
   2cdc8:	dec00204 	addi	sp,sp,8
   2cdcc:	f800283a 	ret
   2cdd0:	10bffd44 	addi	r2,r2,-11
   2cdd4:	808a983a 	sll	r5,r16,r2
   2cdd8:	00800434 	movhi	r2,16
   2cddc:	10bfffc4 	addi	r2,r2,-1
   2cde0:	288a703a 	and	r5,r5,r2
   2cde4:	0021883a 	mov	r16,zero
   2cde8:	003ff206 	br	2cdb4 <__floatunsidf+0x58>

0002cdec <__truncdfsf2>:
   2cdec:	2806d53a 	srli	r3,r5,20
   2cdf0:	01800434 	movhi	r6,16
   2cdf4:	31bfffc4 	addi	r6,r6,-1
   2cdf8:	298c703a 	and	r6,r5,r6
   2cdfc:	300490fa 	slli	r2,r6,3
   2ce00:	18c1ffcc 	andi	r3,r3,2047
   2ce04:	200cd77a 	srli	r6,r4,29
   2ce08:	19c00044 	addi	r7,r3,1
   2ce0c:	39c1ff8c 	andi	r7,r7,2046
   2ce10:	280ad7fa 	srli	r5,r5,31
   2ce14:	201090fa 	slli	r8,r4,3
   2ce18:	308cb03a 	or	r6,r6,r2
   2ce1c:	38000b26 	beq	r7,zero,2ce4c <__truncdfsf2+0x60>
   2ce20:	18bf2004 	addi	r2,r3,-896
   2ce24:	11c03fc8 	cmpgei	r7,r2,255
   2ce28:	38001226 	beq	r7,zero,2ce74 <__truncdfsf2+0x88>
   2ce2c:	00ffffc4 	movi	r3,-1
   2ce30:	0009883a 	mov	r4,zero
   2ce34:	18c03fcc 	andi	r3,r3,255
   2ce38:	180495fa 	slli	r2,r3,23
   2ce3c:	280a97fa 	slli	r5,r5,31
   2ce40:	1104b03a 	or	r2,r2,r4
   2ce44:	1144b03a 	or	r2,r2,r5
   2ce48:	f800283a 	ret
   2ce4c:	3208b03a 	or	r4,r6,r8
   2ce50:	1800041e 	bne	r3,zero,2ce64 <__truncdfsf2+0x78>
   2ce54:	20001d1e 	bne	r4,zero,2cecc <__truncdfsf2+0xe0>
   2ce58:	0007883a 	mov	r3,zero
   2ce5c:	0009883a 	mov	r4,zero
   2ce60:	003ff406 	br	2ce34 <__truncdfsf2+0x48>
   2ce64:	203ff126 	beq	r4,zero,2ce2c <__truncdfsf2+0x40>
   2ce68:	31001034 	orhi	r4,r6,64
   2ce6c:	00ffffc4 	movi	r3,-1
   2ce70:	003ff006 	br	2ce34 <__truncdfsf2+0x48>
   2ce74:	0080170e 	bge	zero,r2,2ced4 <__truncdfsf2+0xe8>
   2ce78:	200891ba 	slli	r4,r4,6
   2ce7c:	300c90fa 	slli	r6,r6,3
   2ce80:	4010d77a 	srli	r8,r8,29
   2ce84:	2008c03a 	cmpne	r4,r4,zero
   2ce88:	218cb03a 	or	r6,r4,r6
   2ce8c:	3208b03a 	or	r4,r6,r8
   2ce90:	20c001cc 	andi	r3,r4,7
   2ce94:	18002f26 	beq	r3,zero,2cf54 <__truncdfsf2+0x168>
   2ce98:	20c003cc 	andi	r3,r4,15
   2ce9c:	18c00118 	cmpnei	r3,r3,4
   2cea0:	18000126 	beq	r3,zero,2cea8 <__truncdfsf2+0xbc>
   2cea4:	21000104 	addi	r4,r4,4
   2cea8:	20c1002c 	andhi	r3,r4,1024
   2ceac:	18002926 	beq	r3,zero,2cf54 <__truncdfsf2+0x168>
   2ceb0:	10c00044 	addi	r3,r2,1
   2ceb4:	18803fe0 	cmpeqi	r2,r3,255
   2ceb8:	103fdc1e 	bne	r2,zero,2ce2c <__truncdfsf2+0x40>
   2cebc:	200891ba 	slli	r4,r4,6
   2cec0:	2008d27a 	srli	r4,r4,9
   2cec4:	003fdb06 	br	2ce34 <__truncdfsf2+0x48>
   2cec8:	0007883a 	mov	r3,zero
   2cecc:	01000144 	movi	r4,5
   2ced0:	003ffa06 	br	2cebc <__truncdfsf2+0xd0>
   2ced4:	113ffa50 	cmplti	r4,r2,-23
   2ced8:	203ffb1e 	bne	r4,zero,2cec8 <__truncdfsf2+0xdc>
   2cedc:	01000784 	movi	r4,30
   2cee0:	2089c83a 	sub	r4,r4,r2
   2cee4:	21c00808 	cmpgei	r7,r4,32
   2cee8:	31802034 	orhi	r6,r6,128
   2ceec:	38001126 	beq	r7,zero,2cf34 <__truncdfsf2+0x148>
   2cef0:	01ffff84 	movi	r7,-2
   2cef4:	3885c83a 	sub	r2,r7,r2
   2cef8:	21000820 	cmpeqi	r4,r4,32
   2cefc:	3084d83a 	srl	r2,r6,r2
   2cf00:	2000031e 	bne	r4,zero,2cf10 <__truncdfsf2+0x124>
   2cf04:	18ff2884 	addi	r3,r3,-862
   2cf08:	30c6983a 	sll	r3,r6,r3
   2cf0c:	40d0b03a 	or	r8,r8,r3
   2cf10:	4008c03a 	cmpne	r4,r8,zero
   2cf14:	2088b03a 	or	r4,r4,r2
   2cf18:	20c001cc 	andi	r3,r4,7
   2cf1c:	0005883a 	mov	r2,zero
   2cf20:	183fdd1e 	bne	r3,zero,2ce98 <__truncdfsf2+0xac>
   2cf24:	2081002c 	andhi	r2,r4,1024
   2cf28:	103fe426 	beq	r2,zero,2cebc <__truncdfsf2+0xd0>
   2cf2c:	00c00044 	movi	r3,1
   2cf30:	003fe206 	br	2cebc <__truncdfsf2+0xd0>
   2cf34:	18ff2084 	addi	r3,r3,-894
   2cf38:	40c4983a 	sll	r2,r8,r3
   2cf3c:	30c6983a 	sll	r3,r6,r3
   2cf40:	4108d83a 	srl	r4,r8,r4
   2cf44:	100cc03a 	cmpne	r6,r2,zero
   2cf48:	30c6b03a 	or	r3,r6,r3
   2cf4c:	20c8b03a 	or	r4,r4,r3
   2cf50:	003ff106 	br	2cf18 <__truncdfsf2+0x12c>
   2cf54:	1007883a 	mov	r3,r2
   2cf58:	003fd806 	br	2cebc <__truncdfsf2+0xd0>

0002cf5c <__clzsi2>:
   2cf5c:	00bfffd4 	movui	r2,65535
   2cf60:	11000436 	bltu	r2,r4,2cf74 <__clzsi2+0x18>
   2cf64:	20804030 	cmpltui	r2,r4,256
   2cf68:	10000e26 	beq	r2,zero,2cfa4 <__clzsi2+0x48>
   2cf6c:	01400804 	movi	r5,32
   2cf70:	00000406 	br	2cf84 <__clzsi2+0x28>
   2cf74:	00804034 	movhi	r2,256
   2cf78:	20800736 	bltu	r4,r2,2cf98 <__clzsi2+0x3c>
   2cf7c:	2008d63a 	srli	r4,r4,24
   2cf80:	01400204 	movi	r5,8
   2cf84:	00c000f4 	movhi	r3,3
   2cf88:	20c7883a 	add	r3,r4,r3
   2cf8c:	18815803 	ldbu	r2,1376(r3)
   2cf90:	2885c83a 	sub	r2,r5,r2
   2cf94:	f800283a 	ret
   2cf98:	2008d43a 	srli	r4,r4,16
   2cf9c:	01400404 	movi	r5,16
   2cfa0:	003ff806 	br	2cf84 <__clzsi2+0x28>
   2cfa4:	2008d23a 	srli	r4,r4,8
   2cfa8:	01400604 	movi	r5,24
   2cfac:	003ff506 	br	2cf84 <__clzsi2+0x28>

0002cfb0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2cfb0:	defffe04 	addi	sp,sp,-8
   2cfb4:	dfc00115 	stw	ra,4(sp)
   2cfb8:	df000015 	stw	fp,0(sp)
   2cfbc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2cfc0:	d0a00e17 	ldw	r2,-32712(gp)
   2cfc4:	10000326 	beq	r2,zero,2cfd4 <alt_get_errno+0x24>
   2cfc8:	d0a00e17 	ldw	r2,-32712(gp)
   2cfcc:	103ee83a 	callr	r2
   2cfd0:	00000106 	br	2cfd8 <alt_get_errno+0x28>
   2cfd4:	d0a72504 	addi	r2,gp,-25452
}
   2cfd8:	e037883a 	mov	sp,fp
   2cfdc:	dfc00117 	ldw	ra,4(sp)
   2cfe0:	df000017 	ldw	fp,0(sp)
   2cfe4:	dec00204 	addi	sp,sp,8
   2cfe8:	f800283a 	ret

0002cfec <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   2cfec:	defffb04 	addi	sp,sp,-20
   2cff0:	dfc00415 	stw	ra,16(sp)
   2cff4:	df000315 	stw	fp,12(sp)
   2cff8:	df000304 	addi	fp,sp,12
   2cffc:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   2d000:	e0bffd17 	ldw	r2,-12(fp)
   2d004:	10000916 	blt	r2,zero,2d02c <close+0x40>
   2d008:	e0fffd17 	ldw	r3,-12(fp)
   2d00c:	1805883a 	mov	r2,r3
   2d010:	1085883a 	add	r2,r2,r2
   2d014:	10c5883a 	add	r2,r2,r3
   2d018:	100490ba 	slli	r2,r2,2
   2d01c:	00c000f4 	movhi	r3,3
   2d020:	18c42204 	addi	r3,r3,4232
   2d024:	10c5883a 	add	r2,r2,r3
   2d028:	00000106 	br	2d030 <close+0x44>
   2d02c:	0005883a 	mov	r2,zero
   2d030:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
   2d034:	e0bfff17 	ldw	r2,-4(fp)
   2d038:	10001926 	beq	r2,zero,2d0a0 <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   2d03c:	e0bfff17 	ldw	r2,-4(fp)
   2d040:	10800017 	ldw	r2,0(r2)
   2d044:	10800417 	ldw	r2,16(r2)
   2d048:	10000626 	beq	r2,zero,2d064 <close+0x78>
   2d04c:	e0bfff17 	ldw	r2,-4(fp)
   2d050:	10800017 	ldw	r2,0(r2)
   2d054:	10800417 	ldw	r2,16(r2)
   2d058:	e13fff17 	ldw	r4,-4(fp)
   2d05c:	103ee83a 	callr	r2
   2d060:	00000106 	br	2d068 <close+0x7c>
   2d064:	0005883a 	mov	r2,zero
   2d068:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   2d06c:	e13ffd17 	ldw	r4,-12(fp)
   2d070:	002defc0 	call	2defc <alt_release_fd>
    if (rval < 0)
   2d074:	e0bffe17 	ldw	r2,-8(fp)
   2d078:	1000070e 	bge	r2,zero,2d098 <close+0xac>
    {
      ALT_ERRNO = -rval;
   2d07c:	002cfb00 	call	2cfb0 <alt_get_errno>
   2d080:	1007883a 	mov	r3,r2
   2d084:	e0bffe17 	ldw	r2,-8(fp)
   2d088:	0085c83a 	sub	r2,zero,r2
   2d08c:	18800015 	stw	r2,0(r3)
      return -1;
   2d090:	00bfffc4 	movi	r2,-1
   2d094:	00000706 	br	2d0b4 <close+0xc8>
    }
    return 0;
   2d098:	0005883a 	mov	r2,zero
   2d09c:	00000506 	br	2d0b4 <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d0a0:	002cfb00 	call	2cfb0 <alt_get_errno>
   2d0a4:	1007883a 	mov	r3,r2
   2d0a8:	00801444 	movi	r2,81
   2d0ac:	18800015 	stw	r2,0(r3)
    return -1;
   2d0b0:	00bfffc4 	movi	r2,-1
  }
}
   2d0b4:	e037883a 	mov	sp,fp
   2d0b8:	dfc00117 	ldw	ra,4(sp)
   2d0bc:	df000017 	ldw	fp,0(sp)
   2d0c0:	dec00204 	addi	sp,sp,8
   2d0c4:	f800283a 	ret

0002d0c8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   2d0c8:	defffc04 	addi	sp,sp,-16
   2d0cc:	df000315 	stw	fp,12(sp)
   2d0d0:	df000304 	addi	fp,sp,12
   2d0d4:	e13fff15 	stw	r4,-4(fp)
   2d0d8:	e17ffe15 	stw	r5,-8(fp)
   2d0dc:	e1bffd15 	stw	r6,-12(fp)
  return len;
   2d0e0:	e0bffd17 	ldw	r2,-12(fp)
}
   2d0e4:	e037883a 	mov	sp,fp
   2d0e8:	df000017 	ldw	fp,0(sp)
   2d0ec:	dec00104 	addi	sp,sp,4
   2d0f0:	f800283a 	ret

0002d0f4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   2d0f4:	defffd04 	addi	sp,sp,-12
   2d0f8:	df000215 	stw	fp,8(sp)
   2d0fc:	df000204 	addi	fp,sp,8
   2d100:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   2d104:	0001883a 	nop
   2d108:	e0bffe17 	ldw	r2,-8(fp)
   2d10c:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   2d110:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   2d114:	10000226 	beq	r2,zero,2d120 <_exit+0x2c>
    ALT_SIM_FAIL();
   2d118:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
   2d11c:	00000106 	br	2d124 <_exit+0x30>
    ALT_SIM_PASS();
   2d120:	002af0b0 	cmpltui	zero,zero,43970
}
   2d124:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   2d128:	003fff06 	br	2d128 <_exit+0x34>

0002d12c <alt_get_errno>:
{
   2d12c:	defffe04 	addi	sp,sp,-8
   2d130:	dfc00115 	stw	ra,4(sp)
   2d134:	df000015 	stw	fp,0(sp)
   2d138:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d13c:	d0a00e17 	ldw	r2,-32712(gp)
   2d140:	10000326 	beq	r2,zero,2d150 <alt_get_errno+0x24>
   2d144:	d0a00e17 	ldw	r2,-32712(gp)
   2d148:	103ee83a 	callr	r2
   2d14c:	00000106 	br	2d154 <alt_get_errno+0x28>
   2d150:	d0a72504 	addi	r2,gp,-25452
}
   2d154:	e037883a 	mov	sp,fp
   2d158:	dfc00117 	ldw	ra,4(sp)
   2d15c:	df000017 	ldw	fp,0(sp)
   2d160:	dec00204 	addi	sp,sp,8
   2d164:	f800283a 	ret

0002d168 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   2d168:	defffb04 	addi	sp,sp,-20
   2d16c:	dfc00415 	stw	ra,16(sp)
   2d170:	df000315 	stw	fp,12(sp)
   2d174:	df000304 	addi	fp,sp,12
   2d178:	e13ffe15 	stw	r4,-8(fp)
   2d17c:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d180:	e0bffe17 	ldw	r2,-8(fp)
   2d184:	10000916 	blt	r2,zero,2d1ac <fstat+0x44>
   2d188:	e0fffe17 	ldw	r3,-8(fp)
   2d18c:	1805883a 	mov	r2,r3
   2d190:	1085883a 	add	r2,r2,r2
   2d194:	10c5883a 	add	r2,r2,r3
   2d198:	100490ba 	slli	r2,r2,2
   2d19c:	00c000f4 	movhi	r3,3
   2d1a0:	18c42204 	addi	r3,r3,4232
   2d1a4:	10c5883a 	add	r2,r2,r3
   2d1a8:	00000106 	br	2d1b0 <fstat+0x48>
   2d1ac:	0005883a 	mov	r2,zero
   2d1b0:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2d1b4:	e0bfff17 	ldw	r2,-4(fp)
   2d1b8:	10001026 	beq	r2,zero,2d1fc <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   2d1bc:	e0bfff17 	ldw	r2,-4(fp)
   2d1c0:	10800017 	ldw	r2,0(r2)
   2d1c4:	10800817 	ldw	r2,32(r2)
   2d1c8:	10000726 	beq	r2,zero,2d1e8 <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
   2d1cc:	e0bfff17 	ldw	r2,-4(fp)
   2d1d0:	10800017 	ldw	r2,0(r2)
   2d1d4:	10800817 	ldw	r2,32(r2)
   2d1d8:	e17ffd17 	ldw	r5,-12(fp)
   2d1dc:	e13fff17 	ldw	r4,-4(fp)
   2d1e0:	103ee83a 	callr	r2
   2d1e4:	00000a06 	br	2d210 <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   2d1e8:	e0bffd17 	ldw	r2,-12(fp)
   2d1ec:	00c80004 	movi	r3,8192
   2d1f0:	10c00115 	stw	r3,4(r2)
      return 0;
   2d1f4:	0005883a 	mov	r2,zero
   2d1f8:	00000506 	br	2d210 <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d1fc:	002d12c0 	call	2d12c <alt_get_errno>
   2d200:	1007883a 	mov	r3,r2
   2d204:	00801444 	movi	r2,81
   2d208:	18800015 	stw	r2,0(r3)
    return -1;
   2d20c:	00bfffc4 	movi	r2,-1
  }
}
   2d210:	e037883a 	mov	sp,fp
   2d214:	dfc00117 	ldw	ra,4(sp)
   2d218:	df000017 	ldw	fp,0(sp)
   2d21c:	dec00204 	addi	sp,sp,8
   2d220:	f800283a 	ret

0002d224 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
   2d224:	deffff04 	addi	sp,sp,-4
   2d228:	df000015 	stw	fp,0(sp)
   2d22c:	d839883a 	mov	fp,sp
  return 0;
   2d230:	0005883a 	mov	r2,zero
}
   2d234:	e037883a 	mov	sp,fp
   2d238:	df000017 	ldw	fp,0(sp)
   2d23c:	dec00104 	addi	sp,sp,4
   2d240:	f800283a 	ret

0002d244 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
   2d244:	defff004 	addi	sp,sp,-64
   2d248:	df000f15 	stw	fp,60(sp)
   2d24c:	df000f04 	addi	fp,sp,60
   2d250:	e13ff315 	stw	r4,-52(fp)
   2d254:	e17ff215 	stw	r5,-56(fp)
   2d258:	e1bff115 	stw	r6,-60(fp)
  int rc = -EINVAL;  
   2d25c:	00bffa84 	movi	r2,-22
   2d260:	e0bfff15 	stw	r2,-4(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   2d264:	e0bff317 	ldw	r2,-52(fp)
   2d268:	10800828 	cmpgeui	r2,r2,32
   2d26c:	1000501e 	bne	r2,zero,2d3b0 <alt_irq_register+0x16c>
  NIOS2_READ_STATUS (context);
   2d270:	0005303a 	rdctl	r2,status
   2d274:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2d278:	e0fffd17 	ldw	r3,-12(fp)
   2d27c:	00bfff84 	movi	r2,-2
   2d280:	1884703a 	and	r2,r3,r2
   2d284:	1001703a 	wrctl	status,r2
  return context;
   2d288:	e0bffd17 	ldw	r2,-12(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
   2d28c:	e0bffe15 	stw	r2,-8(fp)

    alt_irq[id].handler = handler;
   2d290:	e0bff317 	ldw	r2,-52(fp)
   2d294:	100890fa 	slli	r4,r2,3
   2d298:	e0fff117 	ldw	r3,-60(fp)
   2d29c:	008000f4 	movhi	r2,3
   2d2a0:	2085883a 	add	r2,r4,r2
   2d2a4:	10cfe615 	stw	r3,16280(r2)
    alt_irq[id].context = context;
   2d2a8:	e0bff317 	ldw	r2,-52(fp)
   2d2ac:	100890fa 	slli	r4,r2,3
   2d2b0:	e0fff217 	ldw	r3,-56(fp)
   2d2b4:	008000f4 	movhi	r2,3
   2d2b8:	2085883a 	add	r2,r4,r2
   2d2bc:	10cfe715 	stw	r3,16284(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   2d2c0:	e0bff117 	ldw	r2,-60(fp)
   2d2c4:	10001a26 	beq	r2,zero,2d330 <alt_irq_register+0xec>
   2d2c8:	e0bff317 	ldw	r2,-52(fp)
   2d2cc:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_READ_STATUS (context);
   2d2d0:	0005303a 	rdctl	r2,status
   2d2d4:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2d2d8:	e0fffb17 	ldw	r3,-20(fp)
   2d2dc:	00bfff84 	movi	r2,-2
   2d2e0:	1884703a 	and	r2,r3,r2
   2d2e4:	1001703a 	wrctl	status,r2
  return context;
   2d2e8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2d2ec:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active |= (1 << id);
   2d2f0:	00c00044 	movi	r3,1
   2d2f4:	e0bffc17 	ldw	r2,-16(fp)
   2d2f8:	1884983a 	sll	r2,r3,r2
   2d2fc:	1007883a 	mov	r3,r2
   2d300:	d0a72a17 	ldw	r2,-25432(gp)
   2d304:	1884b03a 	or	r2,r3,r2
   2d308:	d0a72a15 	stw	r2,-25432(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2d30c:	d0a72a17 	ldw	r2,-25432(gp)
   2d310:	100170fa 	wrctl	ienable,r2
   2d314:	e0bffa17 	ldw	r2,-24(fp)
   2d318:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context);
   2d31c:	e0bff917 	ldw	r2,-28(fp)
   2d320:	1001703a 	wrctl	status,r2
}
   2d324:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
   2d328:	0005883a 	mov	r2,zero
   2d32c:	00001a06 	br	2d398 <alt_irq_register+0x154>
   2d330:	e0bff317 	ldw	r2,-52(fp)
   2d334:	e0bff815 	stw	r2,-32(fp)
  NIOS2_READ_STATUS (context);
   2d338:	0005303a 	rdctl	r2,status
   2d33c:	e0bff715 	stw	r2,-36(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2d340:	e0fff717 	ldw	r3,-36(fp)
   2d344:	00bfff84 	movi	r2,-2
   2d348:	1884703a 	and	r2,r3,r2
   2d34c:	1001703a 	wrctl	status,r2
  return context;
   2d350:	e0bff717 	ldw	r2,-36(fp)
  status = alt_irq_disable_all ();
   2d354:	e0bff615 	stw	r2,-40(fp)
  alt_irq_active &= ~(1 << id);
   2d358:	00c00044 	movi	r3,1
   2d35c:	e0bff817 	ldw	r2,-32(fp)
   2d360:	1884983a 	sll	r2,r3,r2
   2d364:	0084303a 	nor	r2,zero,r2
   2d368:	1007883a 	mov	r3,r2
   2d36c:	d0a72a17 	ldw	r2,-25432(gp)
   2d370:	1884703a 	and	r2,r3,r2
   2d374:	d0a72a15 	stw	r2,-25432(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2d378:	d0a72a17 	ldw	r2,-25432(gp)
   2d37c:	100170fa 	wrctl	ienable,r2
   2d380:	e0bff617 	ldw	r2,-40(fp)
   2d384:	e0bff515 	stw	r2,-44(fp)
  NIOS2_WRITE_STATUS (context);
   2d388:	e0bff517 	ldw	r2,-44(fp)
   2d38c:	1001703a 	wrctl	status,r2
}
   2d390:	0001883a 	nop
  return 0;
   2d394:	0005883a 	mov	r2,zero
   2d398:	e0bfff15 	stw	r2,-4(fp)
   2d39c:	e0bffe17 	ldw	r2,-8(fp)
   2d3a0:	e0bff415 	stw	r2,-48(fp)
  NIOS2_WRITE_STATUS (context);
   2d3a4:	e0bff417 	ldw	r2,-48(fp)
   2d3a8:	1001703a 	wrctl	status,r2
}
   2d3ac:	0001883a 	nop

    alt_irq_enable_all(status);
  }
  return rc; 
   2d3b0:	e0bfff17 	ldw	r2,-4(fp)
}
   2d3b4:	e037883a 	mov	sp,fp
   2d3b8:	df000017 	ldw	fp,0(sp)
   2d3bc:	dec00104 	addi	sp,sp,4
   2d3c0:	f800283a 	ret

0002d3c4 <alt_get_errno>:
{
   2d3c4:	defffe04 	addi	sp,sp,-8
   2d3c8:	dfc00115 	stw	ra,4(sp)
   2d3cc:	df000015 	stw	fp,0(sp)
   2d3d0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d3d4:	d0a00e17 	ldw	r2,-32712(gp)
   2d3d8:	10000326 	beq	r2,zero,2d3e8 <alt_get_errno+0x24>
   2d3dc:	d0a00e17 	ldw	r2,-32712(gp)
   2d3e0:	103ee83a 	callr	r2
   2d3e4:	00000106 	br	2d3ec <alt_get_errno+0x28>
   2d3e8:	d0a72504 	addi	r2,gp,-25452
}
   2d3ec:	e037883a 	mov	sp,fp
   2d3f0:	dfc00117 	ldw	ra,4(sp)
   2d3f4:	df000017 	ldw	fp,0(sp)
   2d3f8:	dec00204 	addi	sp,sp,8
   2d3fc:	f800283a 	ret

0002d400 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   2d400:	deffea04 	addi	sp,sp,-88
   2d404:	dfc01515 	stw	ra,84(sp)
   2d408:	df001415 	stw	fp,80(sp)
   2d40c:	df001404 	addi	fp,sp,80
   2d410:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d414:	e0bfec17 	ldw	r2,-80(fp)
   2d418:	10000916 	blt	r2,zero,2d440 <isatty+0x40>
   2d41c:	e0ffec17 	ldw	r3,-80(fp)
   2d420:	1805883a 	mov	r2,r3
   2d424:	1085883a 	add	r2,r2,r2
   2d428:	10c5883a 	add	r2,r2,r3
   2d42c:	100490ba 	slli	r2,r2,2
   2d430:	00c000f4 	movhi	r3,3
   2d434:	18c42204 	addi	r3,r3,4232
   2d438:	10c5883a 	add	r2,r2,r3
   2d43c:	00000106 	br	2d444 <isatty+0x44>
   2d440:	0005883a 	mov	r2,zero
   2d444:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2d448:	e0bfff17 	ldw	r2,-4(fp)
   2d44c:	10000e26 	beq	r2,zero,2d488 <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   2d450:	e0bfff17 	ldw	r2,-4(fp)
   2d454:	10800017 	ldw	r2,0(r2)
   2d458:	10800817 	ldw	r2,32(r2)
   2d45c:	1000021e 	bne	r2,zero,2d468 <isatty+0x68>
    {
      return 1;
   2d460:	00800044 	movi	r2,1
   2d464:	00000d06 	br	2d49c <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   2d468:	e0bfed04 	addi	r2,fp,-76
   2d46c:	100b883a 	mov	r5,r2
   2d470:	e13fec17 	ldw	r4,-80(fp)
   2d474:	002d1680 	call	2d168 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   2d478:	e0bfee17 	ldw	r2,-72(fp)
   2d47c:	10880020 	cmpeqi	r2,r2,8192
   2d480:	10803fcc 	andi	r2,r2,255
   2d484:	00000506 	br	2d49c <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d488:	002d3c40 	call	2d3c4 <alt_get_errno>
   2d48c:	1007883a 	mov	r3,r2
   2d490:	00801444 	movi	r2,81
   2d494:	18800015 	stw	r2,0(r3)
    return 0;
   2d498:	0005883a 	mov	r2,zero
  }
}
   2d49c:	e037883a 	mov	sp,fp
   2d4a0:	dfc00117 	ldw	ra,4(sp)
   2d4a4:	df000017 	ldw	fp,0(sp)
   2d4a8:	dec00204 	addi	sp,sp,8
   2d4ac:	f800283a 	ret

0002d4b0 <alt_get_errno>:
{
   2d4b0:	defffe04 	addi	sp,sp,-8
   2d4b4:	dfc00115 	stw	ra,4(sp)
   2d4b8:	df000015 	stw	fp,0(sp)
   2d4bc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d4c0:	d0a00e17 	ldw	r2,-32712(gp)
   2d4c4:	10000326 	beq	r2,zero,2d4d4 <alt_get_errno+0x24>
   2d4c8:	d0a00e17 	ldw	r2,-32712(gp)
   2d4cc:	103ee83a 	callr	r2
   2d4d0:	00000106 	br	2d4d8 <alt_get_errno+0x28>
   2d4d4:	d0a72504 	addi	r2,gp,-25452
}
   2d4d8:	e037883a 	mov	sp,fp
   2d4dc:	dfc00117 	ldw	ra,4(sp)
   2d4e0:	df000017 	ldw	fp,0(sp)
   2d4e4:	dec00204 	addi	sp,sp,8
   2d4e8:	f800283a 	ret

0002d4ec <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
   2d4ec:	defffb04 	addi	sp,sp,-20
   2d4f0:	dfc00415 	stw	ra,16(sp)
   2d4f4:	df000315 	stw	fp,12(sp)
   2d4f8:	df000304 	addi	fp,sp,12
   2d4fc:	e13ffe15 	stw	r4,-8(fp)
   2d500:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
   2d504:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
   2d508:	e0bffe17 	ldw	r2,-8(fp)
   2d50c:	00802e16 	blt	zero,r2,2d5c8 <kill+0xdc>
   2d510:	e0bffd17 	ldw	r2,-12(fp)
   2d514:	10800828 	cmpgeui	r2,r2,32
   2d518:	1000281e 	bne	r2,zero,2d5bc <kill+0xd0>
   2d51c:	e0bffd17 	ldw	r2,-12(fp)
   2d520:	100690ba 	slli	r3,r2,2
   2d524:	008000f4 	movhi	r2,3
   2d528:	1885883a 	add	r2,r3,r2
   2d52c:	10b54d17 	ldw	r2,-10956(r2)
   2d530:	1000683a 	jmp	r2
   2d534:	0002d5dc 	xori	zero,zero,2903
   2d538:	0002d5bc 	xorhi	zero,zero,2902
   2d53c:	0002d5bc 	xorhi	zero,zero,2902
   2d540:	0002d5b4 	movhi	zero,2902
   2d544:	0002d5b4 	movhi	zero,2902
   2d548:	0002d5b4 	movhi	zero,2902
   2d54c:	0002d5b4 	movhi	zero,2902
   2d550:	0002d5bc 	xorhi	zero,zero,2902
   2d554:	0002d5b4 	movhi	zero,2902
   2d558:	0002d5b4 	movhi	zero,2902
   2d55c:	0002d5b4 	movhi	zero,2902
   2d560:	0002d5b4 	movhi	zero,2902
   2d564:	0002d5b4 	movhi	zero,2902
   2d568:	0002d5b4 	movhi	zero,2902
   2d56c:	0002d5b4 	movhi	zero,2902
   2d570:	0002d5b4 	movhi	zero,2902
   2d574:	0002d5dc 	xori	zero,zero,2903
   2d578:	0002d5bc 	xorhi	zero,zero,2902
   2d57c:	0002d5bc 	xorhi	zero,zero,2902
   2d580:	0002d5bc 	xorhi	zero,zero,2902
   2d584:	0002d5dc 	xori	zero,zero,2903
   2d588:	0002d5bc 	xorhi	zero,zero,2902
   2d58c:	0002d5bc 	xorhi	zero,zero,2902
   2d590:	0002d5b4 	movhi	zero,2902
   2d594:	0002d5b4 	movhi	zero,2902
   2d598:	0002d5b4 	movhi	zero,2902
   2d59c:	0002d5b4 	movhi	zero,2902
   2d5a0:	0002d5b4 	movhi	zero,2902
   2d5a4:	0002d5bc 	xorhi	zero,zero,2902
   2d5a8:	0002d5bc 	xorhi	zero,zero,2902
   2d5ac:	0002d5b4 	movhi	zero,2902
   2d5b0:	0002d5b4 	movhi	zero,2902
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
   2d5b4:	0009883a 	mov	r4,zero
   2d5b8:	002d0f40 	call	2d0f4 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
   2d5bc:	00800584 	movi	r2,22
   2d5c0:	e0bfff15 	stw	r2,-4(fp)
   2d5c4:	00000606 	br	2d5e0 <kill+0xf4>
    }
  }

  else if (pid > 0)
   2d5c8:	e0bffe17 	ldw	r2,-8(fp)
   2d5cc:	0080040e 	bge	zero,r2,2d5e0 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
   2d5d0:	008000c4 	movi	r2,3
   2d5d4:	e0bfff15 	stw	r2,-4(fp)
   2d5d8:	00000106 	br	2d5e0 <kill+0xf4>
      break;
   2d5dc:	0001883a 	nop
  }

  if (status)
   2d5e0:	e0bfff17 	ldw	r2,-4(fp)
   2d5e4:	10000626 	beq	r2,zero,2d600 <kill+0x114>
  {
    ALT_ERRNO = status;
   2d5e8:	002d4b00 	call	2d4b0 <alt_get_errno>
   2d5ec:	1007883a 	mov	r3,r2
   2d5f0:	e0bfff17 	ldw	r2,-4(fp)
   2d5f4:	18800015 	stw	r2,0(r3)
    return -1;
   2d5f8:	00bfffc4 	movi	r2,-1
   2d5fc:	00000106 	br	2d604 <kill+0x118>
  }

  return 0;
   2d600:	0005883a 	mov	r2,zero
}
   2d604:	e037883a 	mov	sp,fp
   2d608:	dfc00117 	ldw	ra,4(sp)
   2d60c:	df000017 	ldw	fp,0(sp)
   2d610:	dec00204 	addi	sp,sp,8
   2d614:	f800283a 	ret

0002d618 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   2d618:	defffc04 	addi	sp,sp,-16
   2d61c:	df000315 	stw	fp,12(sp)
   2d620:	df000304 	addi	fp,sp,12
   2d624:	e13fff15 	stw	r4,-4(fp)
   2d628:	e17ffe15 	stw	r5,-8(fp)
   2d62c:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
   2d630:	e0fffe17 	ldw	r3,-8(fp)
   2d634:	e0bfff17 	ldw	r2,-4(fp)
   2d638:	18800c26 	beq	r3,r2,2d66c <alt_load_section+0x54>
  {
    while( to != end )
   2d63c:	00000806 	br	2d660 <alt_load_section+0x48>
    {
      *to++ = *from++;
   2d640:	e0ffff17 	ldw	r3,-4(fp)
   2d644:	18800104 	addi	r2,r3,4
   2d648:	e0bfff15 	stw	r2,-4(fp)
   2d64c:	e0bffe17 	ldw	r2,-8(fp)
   2d650:	11000104 	addi	r4,r2,4
   2d654:	e13ffe15 	stw	r4,-8(fp)
   2d658:	18c00017 	ldw	r3,0(r3)
   2d65c:	10c00015 	stw	r3,0(r2)
    while( to != end )
   2d660:	e0fffe17 	ldw	r3,-8(fp)
   2d664:	e0bffd17 	ldw	r2,-12(fp)
   2d668:	18bff51e 	bne	r3,r2,2d640 <alt_load_section+0x28>
    }
  }
}
   2d66c:	0001883a 	nop
   2d670:	e037883a 	mov	sp,fp
   2d674:	df000017 	ldw	fp,0(sp)
   2d678:	dec00104 	addi	sp,sp,4
   2d67c:	f800283a 	ret

0002d680 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   2d680:	defffe04 	addi	sp,sp,-8
   2d684:	dfc00115 	stw	ra,4(sp)
   2d688:	df000015 	stw	fp,0(sp)
   2d68c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   2d690:	018000f4 	movhi	r6,3
   2d694:	3188b804 	addi	r6,r6,8928
   2d698:	014000f4 	movhi	r5,3
   2d69c:	2941a904 	addi	r5,r5,1700
   2d6a0:	010000f4 	movhi	r4,3
   2d6a4:	2108b804 	addi	r4,r4,8928
   2d6a8:	002d6180 	call	2d618 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   2d6ac:	018000b4 	movhi	r6,2
   2d6b0:	31808a04 	addi	r6,r6,552
   2d6b4:	014000b4 	movhi	r5,2
   2d6b8:	29400804 	addi	r5,r5,32
   2d6bc:	010000b4 	movhi	r4,2
   2d6c0:	21000804 	addi	r4,r4,32
   2d6c4:	002d6180 	call	2d618 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   2d6c8:	018000f4 	movhi	r6,3
   2d6cc:	3181a904 	addi	r6,r6,1700
   2d6d0:	014000f4 	movhi	r5,3
   2d6d4:	297fb704 	addi	r5,r5,-292
   2d6d8:	010000f4 	movhi	r4,3
   2d6dc:	213fb704 	addi	r4,r4,-292
   2d6e0:	002d6180 	call	2d618 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   2d6e4:	002f2ac0 	call	2f2ac <alt_dcache_flush_all>
  alt_icache_flush_all();
   2d6e8:	002f6c80 	call	2f6c8 <alt_icache_flush_all>
}
   2d6ec:	0001883a 	nop
   2d6f0:	e037883a 	mov	sp,fp
   2d6f4:	dfc00117 	ldw	ra,4(sp)
   2d6f8:	df000017 	ldw	fp,0(sp)
   2d6fc:	dec00204 	addi	sp,sp,8
   2d700:	f800283a 	ret

0002d704 <alt_get_errno>:
{
   2d704:	defffe04 	addi	sp,sp,-8
   2d708:	dfc00115 	stw	ra,4(sp)
   2d70c:	df000015 	stw	fp,0(sp)
   2d710:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d714:	d0a00e17 	ldw	r2,-32712(gp)
   2d718:	10000326 	beq	r2,zero,2d728 <alt_get_errno+0x24>
   2d71c:	d0a00e17 	ldw	r2,-32712(gp)
   2d720:	103ee83a 	callr	r2
   2d724:	00000106 	br	2d72c <alt_get_errno+0x28>
   2d728:	d0a72504 	addi	r2,gp,-25452
}
   2d72c:	e037883a 	mov	sp,fp
   2d730:	dfc00117 	ldw	ra,4(sp)
   2d734:	df000017 	ldw	fp,0(sp)
   2d738:	dec00204 	addi	sp,sp,8
   2d73c:	f800283a 	ret

0002d740 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   2d740:	defff904 	addi	sp,sp,-28
   2d744:	dfc00615 	stw	ra,24(sp)
   2d748:	df000515 	stw	fp,20(sp)
   2d74c:	df000504 	addi	fp,sp,20
   2d750:	e13ffd15 	stw	r4,-12(fp)
   2d754:	e17ffc15 	stw	r5,-16(fp)
   2d758:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   2d75c:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d760:	e0bffd17 	ldw	r2,-12(fp)
   2d764:	10000916 	blt	r2,zero,2d78c <lseek+0x4c>
   2d768:	e0fffd17 	ldw	r3,-12(fp)
   2d76c:	1805883a 	mov	r2,r3
   2d770:	1085883a 	add	r2,r2,r2
   2d774:	10c5883a 	add	r2,r2,r3
   2d778:	100490ba 	slli	r2,r2,2
   2d77c:	00c000f4 	movhi	r3,3
   2d780:	18c42204 	addi	r3,r3,4232
   2d784:	10c5883a 	add	r2,r2,r3
   2d788:	00000106 	br	2d790 <lseek+0x50>
   2d78c:	0005883a 	mov	r2,zero
   2d790:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
   2d794:	e0bffe17 	ldw	r2,-8(fp)
   2d798:	10001026 	beq	r2,zero,2d7dc <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   2d79c:	e0bffe17 	ldw	r2,-8(fp)
   2d7a0:	10800017 	ldw	r2,0(r2)
   2d7a4:	10800717 	ldw	r2,28(r2)
   2d7a8:	10000926 	beq	r2,zero,2d7d0 <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   2d7ac:	e0bffe17 	ldw	r2,-8(fp)
   2d7b0:	10800017 	ldw	r2,0(r2)
   2d7b4:	10800717 	ldw	r2,28(r2)
   2d7b8:	e1bffb17 	ldw	r6,-20(fp)
   2d7bc:	e17ffc17 	ldw	r5,-16(fp)
   2d7c0:	e13ffe17 	ldw	r4,-8(fp)
   2d7c4:	103ee83a 	callr	r2
   2d7c8:	e0bfff15 	stw	r2,-4(fp)
   2d7cc:	00000506 	br	2d7e4 <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   2d7d0:	00bfde84 	movi	r2,-134
   2d7d4:	e0bfff15 	stw	r2,-4(fp)
   2d7d8:	00000206 	br	2d7e4 <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
   2d7dc:	00bfebc4 	movi	r2,-81
   2d7e0:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
   2d7e4:	e0bfff17 	ldw	r2,-4(fp)
   2d7e8:	1000070e 	bge	r2,zero,2d808 <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
   2d7ec:	002d7040 	call	2d704 <alt_get_errno>
   2d7f0:	1007883a 	mov	r3,r2
   2d7f4:	e0bfff17 	ldw	r2,-4(fp)
   2d7f8:	0085c83a 	sub	r2,zero,r2
   2d7fc:	18800015 	stw	r2,0(r3)
    rc = -1;
   2d800:	00bfffc4 	movi	r2,-1
   2d804:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
   2d808:	e0bfff17 	ldw	r2,-4(fp)
}
   2d80c:	e037883a 	mov	sp,fp
   2d810:	dfc00117 	ldw	ra,4(sp)
   2d814:	df000017 	ldw	fp,0(sp)
   2d818:	dec00204 	addi	sp,sp,8
   2d81c:	f800283a 	ret

0002d820 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   2d820:	defffd04 	addi	sp,sp,-12
   2d824:	dfc00215 	stw	ra,8(sp)
   2d828:	df000115 	stw	fp,4(sp)
   2d82c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   2d830:	0009883a 	mov	r4,zero
   2d834:	002e1980 	call	2e198 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   2d838:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   2d83c:	002e1d40 	call	2e1d4 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   2d840:	018000f4 	movhi	r6,3
   2d844:	31819b04 	addi	r6,r6,1644
   2d848:	014000f4 	movhi	r5,3
   2d84c:	29419b04 	addi	r5,r5,1644
   2d850:	010000f4 	movhi	r4,3
   2d854:	21019b04 	addi	r4,r4,1644
   2d858:	002f7bc0 	call	2f7bc <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   2d85c:	002f3b00 	call	2f3b0 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   2d860:	010000f4 	movhi	r4,3
   2d864:	213d0504 	addi	r4,r4,-3052
   2d868:	002faa00 	call	2faa0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   2d86c:	d0a72b17 	ldw	r2,-25428(gp)
   2d870:	d0e72c17 	ldw	r3,-25424(gp)
   2d874:	d1272d17 	ldw	r4,-25420(gp)
   2d878:	200d883a 	mov	r6,r4
   2d87c:	180b883a 	mov	r5,r3
   2d880:	1009883a 	mov	r4,r2
   2d884:	00207c00 	call	207c0 <main>
   2d888:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   2d88c:	01000044 	movi	r4,1
   2d890:	002cfec0 	call	2cfec <close>
  exit (result);
   2d894:	e13fff17 	ldw	r4,-4(fp)
   2d898:	002fab40 	call	2fab4 <exit>

0002d89c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   2d89c:	defffe04 	addi	sp,sp,-8
   2d8a0:	df000115 	stw	fp,4(sp)
   2d8a4:	df000104 	addi	fp,sp,4
   2d8a8:	e13fff15 	stw	r4,-4(fp)
}
   2d8ac:	0001883a 	nop
   2d8b0:	e037883a 	mov	sp,fp
   2d8b4:	df000017 	ldw	fp,0(sp)
   2d8b8:	dec00104 	addi	sp,sp,4
   2d8bc:	f800283a 	ret

0002d8c0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   2d8c0:	defffe04 	addi	sp,sp,-8
   2d8c4:	df000115 	stw	fp,4(sp)
   2d8c8:	df000104 	addi	fp,sp,4
   2d8cc:	e13fff15 	stw	r4,-4(fp)
}
   2d8d0:	0001883a 	nop
   2d8d4:	e037883a 	mov	sp,fp
   2d8d8:	df000017 	ldw	fp,0(sp)
   2d8dc:	dec00104 	addi	sp,sp,4
   2d8e0:	f800283a 	ret

0002d8e4 <alt_get_errno>:
{
   2d8e4:	defffe04 	addi	sp,sp,-8
   2d8e8:	dfc00115 	stw	ra,4(sp)
   2d8ec:	df000015 	stw	fp,0(sp)
   2d8f0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d8f4:	d0a00e17 	ldw	r2,-32712(gp)
   2d8f8:	10000326 	beq	r2,zero,2d908 <alt_get_errno+0x24>
   2d8fc:	d0a00e17 	ldw	r2,-32712(gp)
   2d900:	103ee83a 	callr	r2
   2d904:	00000106 	br	2d90c <alt_get_errno+0x28>
   2d908:	d0a72504 	addi	r2,gp,-25452
}
   2d90c:	e037883a 	mov	sp,fp
   2d910:	dfc00117 	ldw	ra,4(sp)
   2d914:	df000017 	ldw	fp,0(sp)
   2d918:	dec00204 	addi	sp,sp,8
   2d91c:	f800283a 	ret

0002d920 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   2d920:	defffd04 	addi	sp,sp,-12
   2d924:	df000215 	stw	fp,8(sp)
   2d928:	df000204 	addi	fp,sp,8
   2d92c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   2d930:	e0bffe17 	ldw	r2,-8(fp)
   2d934:	10800217 	ldw	r2,8(r2)
   2d938:	10d00034 	orhi	r3,r2,16384
   2d93c:	e0bffe17 	ldw	r2,-8(fp)
   2d940:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2d944:	e03fff15 	stw	zero,-4(fp)
   2d948:	00002306 	br	2d9d8 <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2d94c:	e0ffff17 	ldw	r3,-4(fp)
   2d950:	1805883a 	mov	r2,r3
   2d954:	1085883a 	add	r2,r2,r2
   2d958:	10c5883a 	add	r2,r2,r3
   2d95c:	100490ba 	slli	r2,r2,2
   2d960:	00c000f4 	movhi	r3,3
   2d964:	10c7883a 	add	r3,r2,r3
   2d968:	18c42217 	ldw	r3,4232(r3)
   2d96c:	e0bffe17 	ldw	r2,-8(fp)
   2d970:	10800017 	ldw	r2,0(r2)
   2d974:	1880151e 	bne	r3,r2,2d9cc <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2d978:	e0ffff17 	ldw	r3,-4(fp)
   2d97c:	1805883a 	mov	r2,r3
   2d980:	1085883a 	add	r2,r2,r2
   2d984:	10c5883a 	add	r2,r2,r3
   2d988:	100490ba 	slli	r2,r2,2
   2d98c:	00c000f4 	movhi	r3,3
   2d990:	10c7883a 	add	r3,r2,r3
   2d994:	18842417 	ldw	r2,4240(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
   2d998:	10000c0e 	bge	r2,zero,2d9cc <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
   2d99c:	e0ffff17 	ldw	r3,-4(fp)
   2d9a0:	1805883a 	mov	r2,r3
   2d9a4:	1085883a 	add	r2,r2,r2
   2d9a8:	10c5883a 	add	r2,r2,r3
   2d9ac:	100490ba 	slli	r2,r2,2
   2d9b0:	00c000f4 	movhi	r3,3
   2d9b4:	18c42204 	addi	r3,r3,4232
   2d9b8:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2d9bc:	e0fffe17 	ldw	r3,-8(fp)
   2d9c0:	18800226 	beq	r3,r2,2d9cc <alt_file_locked+0xac>
    {
      return -EACCES;
   2d9c4:	00bffcc4 	movi	r2,-13
   2d9c8:	00000806 	br	2d9ec <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
   2d9cc:	e0bfff17 	ldw	r2,-4(fp)
   2d9d0:	10800044 	addi	r2,r2,1
   2d9d4:	e0bfff15 	stw	r2,-4(fp)
   2d9d8:	d0a00d17 	ldw	r2,-32716(gp)
   2d9dc:	1007883a 	mov	r3,r2
   2d9e0:	e0bfff17 	ldw	r2,-4(fp)
   2d9e4:	18bfd92e 	bgeu	r3,r2,2d94c <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   2d9e8:	0005883a 	mov	r2,zero
}
   2d9ec:	e037883a 	mov	sp,fp
   2d9f0:	df000017 	ldw	fp,0(sp)
   2d9f4:	dec00104 	addi	sp,sp,4
   2d9f8:	f800283a 	ret

0002d9fc <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   2d9fc:	defff604 	addi	sp,sp,-40
   2da00:	dfc00915 	stw	ra,36(sp)
   2da04:	df000815 	stw	fp,32(sp)
   2da08:	df000804 	addi	fp,sp,32
   2da0c:	e13ffa15 	stw	r4,-24(fp)
   2da10:	e17ff915 	stw	r5,-28(fp)
   2da14:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   2da18:	00bfffc4 	movi	r2,-1
   2da1c:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
   2da20:	00bffb44 	movi	r2,-19
   2da24:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
   2da28:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   2da2c:	d1600b04 	addi	r5,gp,-32724
   2da30:	e13ffa17 	ldw	r4,-24(fp)
   2da34:	002f4780 	call	2f478 <alt_find_dev>
   2da38:	e0bfff15 	stw	r2,-4(fp)
   2da3c:	e0bfff17 	ldw	r2,-4(fp)
   2da40:	1000051e 	bne	r2,zero,2da58 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   2da44:	e13ffa17 	ldw	r4,-24(fp)
   2da48:	002f5080 	call	2f508 <alt_find_file>
   2da4c:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
   2da50:	00800044 	movi	r2,1
   2da54:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   2da58:	e0bfff17 	ldw	r2,-4(fp)
   2da5c:	10002c26 	beq	r2,zero,2db10 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
   2da60:	e13fff17 	ldw	r4,-4(fp)
   2da64:	002f6100 	call	2f610 <alt_get_fd>
   2da68:	e0bffe15 	stw	r2,-8(fp)
   2da6c:	e0bffe17 	ldw	r2,-8(fp)
   2da70:	1000030e 	bge	r2,zero,2da80 <open+0x84>
    {
      status = index;
   2da74:	e0bffe17 	ldw	r2,-8(fp)
   2da78:	e0bffd15 	stw	r2,-12(fp)
   2da7c:	00002606 	br	2db18 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
   2da80:	e0fffe17 	ldw	r3,-8(fp)
   2da84:	1805883a 	mov	r2,r3
   2da88:	1085883a 	add	r2,r2,r2
   2da8c:	10c5883a 	add	r2,r2,r3
   2da90:	100490ba 	slli	r2,r2,2
   2da94:	00c000f4 	movhi	r3,3
   2da98:	18c42204 	addi	r3,r3,4232
   2da9c:	10c5883a 	add	r2,r2,r3
   2daa0:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   2daa4:	e0fff917 	ldw	r3,-28(fp)
   2daa8:	00900034 	movhi	r2,16384
   2daac:	10bfffc4 	addi	r2,r2,-1
   2dab0:	1886703a 	and	r3,r3,r2
   2dab4:	e0bffb17 	ldw	r2,-20(fp)
   2dab8:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   2dabc:	e0bffc17 	ldw	r2,-16(fp)
   2dac0:	1000051e 	bne	r2,zero,2dad8 <open+0xdc>
   2dac4:	e13ffb17 	ldw	r4,-20(fp)
   2dac8:	002d9200 	call	2d920 <alt_file_locked>
   2dacc:	e0bffd15 	stw	r2,-12(fp)
   2dad0:	e0bffd17 	ldw	r2,-12(fp)
   2dad4:	10001016 	blt	r2,zero,2db18 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   2dad8:	e0bfff17 	ldw	r2,-4(fp)
   2dadc:	10800317 	ldw	r2,12(r2)
   2dae0:	10000826 	beq	r2,zero,2db04 <open+0x108>
   2dae4:	e0bfff17 	ldw	r2,-4(fp)
   2dae8:	10800317 	ldw	r2,12(r2)
   2daec:	e1fff817 	ldw	r7,-32(fp)
   2daf0:	e1bff917 	ldw	r6,-28(fp)
   2daf4:	e17ffa17 	ldw	r5,-24(fp)
   2daf8:	e13ffb17 	ldw	r4,-20(fp)
   2dafc:	103ee83a 	callr	r2
   2db00:	00000106 	br	2db08 <open+0x10c>
   2db04:	0005883a 	mov	r2,zero
   2db08:	e0bffd15 	stw	r2,-12(fp)
   2db0c:	00000206 	br	2db18 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
   2db10:	00bffb44 	movi	r2,-19
   2db14:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   2db18:	e0bffd17 	ldw	r2,-12(fp)
   2db1c:	1000090e 	bge	r2,zero,2db44 <open+0x148>
  {
    alt_release_fd (index);  
   2db20:	e13ffe17 	ldw	r4,-8(fp)
   2db24:	002defc0 	call	2defc <alt_release_fd>
    ALT_ERRNO = -status;
   2db28:	002d8e40 	call	2d8e4 <alt_get_errno>
   2db2c:	1007883a 	mov	r3,r2
   2db30:	e0bffd17 	ldw	r2,-12(fp)
   2db34:	0085c83a 	sub	r2,zero,r2
   2db38:	18800015 	stw	r2,0(r3)
    return -1;
   2db3c:	00bfffc4 	movi	r2,-1
   2db40:	00000106 	br	2db48 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
   2db44:	e0bffe17 	ldw	r2,-8(fp)
}
   2db48:	e037883a 	mov	sp,fp
   2db4c:	dfc00117 	ldw	ra,4(sp)
   2db50:	df000017 	ldw	fp,0(sp)
   2db54:	dec00204 	addi	sp,sp,8
   2db58:	f800283a 	ret

0002db5c <alt_printf>:
/* 
 * ALT printf function 
 */
void 
alt_printf(const char* fmt, ... )
{
   2db5c:	defff204 	addi	sp,sp,-56
   2db60:	dfc00a15 	stw	ra,40(sp)
   2db64:	df000915 	stw	fp,36(sp)
   2db68:	df000904 	addi	fp,sp,36
   2db6c:	e13ff715 	stw	r4,-36(fp)
   2db70:	e1400215 	stw	r5,8(fp)
   2db74:	e1800315 	stw	r6,12(fp)
   2db78:	e1c00415 	stw	r7,16(fp)
	va_list args;
	va_start(args, fmt);
   2db7c:	e0800204 	addi	r2,fp,8
   2db80:	e0bff815 	stw	r2,-32(fp)
    const char *w;
    char c;

    /* Process format string. */
    w = fmt;
   2db84:	e0bff717 	ldw	r2,-36(fp)
   2db88:	e0bfff15 	stw	r2,-4(fp)
    while ((c = *w++) != 0)
   2db8c:	00006f06 	br	2dd4c <alt_printf+0x1f0>
    {
        /* If not a format escape character, just print  */
        /* character.  Otherwise, process format string. */
        if (c != '%')
   2db90:	e0bffec7 	ldb	r2,-5(fp)
   2db94:	10800960 	cmpeqi	r2,r2,37
   2db98:	1000041e 	bne	r2,zero,2dbac <alt_printf+0x50>
        {
            alt_putchar(c);
   2db9c:	e0bffec7 	ldb	r2,-5(fp)
   2dba0:	1009883a 	mov	r4,r2
   2dba4:	002dd880 	call	2dd88 <alt_putchar>
   2dba8:	00006806 	br	2dd4c <alt_printf+0x1f0>
        }
        else
        {
            /* Get format character.  If none     */
            /* available, processing is complete. */
            if ((c = *w++) != 0)
   2dbac:	e0bfff17 	ldw	r2,-4(fp)
   2dbb0:	10c00044 	addi	r3,r2,1
   2dbb4:	e0ffff15 	stw	r3,-4(fp)
   2dbb8:	10800003 	ldbu	r2,0(r2)
   2dbbc:	e0bffec5 	stb	r2,-5(fp)
   2dbc0:	e0bffec7 	ldb	r2,-5(fp)
   2dbc4:	10006926 	beq	r2,zero,2dd6c <alt_printf+0x210>
            {
                if (c == '%')
   2dbc8:	e0bffec7 	ldb	r2,-5(fp)
   2dbcc:	10800958 	cmpnei	r2,r2,37
   2dbd0:	1000041e 	bne	r2,zero,2dbe4 <alt_printf+0x88>
                {
                    /* Process "%" escape sequence. */
                    alt_putchar(c);
   2dbd4:	e0bffec7 	ldb	r2,-5(fp)
   2dbd8:	1009883a 	mov	r4,r2
   2dbdc:	002dd880 	call	2dd88 <alt_putchar>
   2dbe0:	00005a06 	br	2dd4c <alt_printf+0x1f0>
                } 
                else if (c == 'c')
   2dbe4:	e0bffec7 	ldb	r2,-5(fp)
   2dbe8:	108018d8 	cmpnei	r2,r2,99
   2dbec:	1000081e 	bne	r2,zero,2dc10 <alt_printf+0xb4>
                {
                    int v = va_arg(args, int);
   2dbf0:	e0bff817 	ldw	r2,-32(fp)
   2dbf4:	10c00104 	addi	r3,r2,4
   2dbf8:	e0fff815 	stw	r3,-32(fp)
   2dbfc:	10800017 	ldw	r2,0(r2)
   2dc00:	e0bff915 	stw	r2,-28(fp)
                    alt_putchar(v);
   2dc04:	e13ff917 	ldw	r4,-28(fp)
   2dc08:	002dd880 	call	2dd88 <alt_putchar>
   2dc0c:	00004f06 	br	2dd4c <alt_printf+0x1f0>
                }
                else if (c == 'x')
   2dc10:	e0bffec7 	ldb	r2,-5(fp)
   2dc14:	10801e18 	cmpnei	r2,r2,120
   2dc18:	1000341e 	bne	r2,zero,2dcec <alt_printf+0x190>
                {
                    /* Process hexadecimal number format. */
                    unsigned long v = va_arg(args, unsigned long);
   2dc1c:	e0bff817 	ldw	r2,-32(fp)
   2dc20:	10c00104 	addi	r3,r2,4
   2dc24:	e0fff815 	stw	r3,-32(fp)
   2dc28:	10800017 	ldw	r2,0(r2)
   2dc2c:	e0bffb15 	stw	r2,-20(fp)
                    unsigned long digit;
                    int digit_shift;

                    /* If the number value is zero, just print and continue. */
                    if (v == 0)
   2dc30:	e0bffb17 	ldw	r2,-20(fp)
   2dc34:	1000031e 	bne	r2,zero,2dc44 <alt_printf+0xe8>
                    {
                        alt_putchar('0');
   2dc38:	01000c04 	movi	r4,48
   2dc3c:	002dd880 	call	2dd88 <alt_putchar>
                        continue;
   2dc40:	00004206 	br	2dd4c <alt_printf+0x1f0>
                    }

                    /* Find first non-zero digit. */
                    digit_shift = 28;
   2dc44:	00800704 	movi	r2,28
   2dc48:	e0bffd15 	stw	r2,-12(fp)
                    while (!(v & (0xF << digit_shift)))
   2dc4c:	00000306 	br	2dc5c <alt_printf+0x100>
                        digit_shift -= 4;
   2dc50:	e0bffd17 	ldw	r2,-12(fp)
   2dc54:	10bfff04 	addi	r2,r2,-4
   2dc58:	e0bffd15 	stw	r2,-12(fp)
                    while (!(v & (0xF << digit_shift)))
   2dc5c:	00c003c4 	movi	r3,15
   2dc60:	e0bffd17 	ldw	r2,-12(fp)
   2dc64:	1884983a 	sll	r2,r3,r2
   2dc68:	1007883a 	mov	r3,r2
   2dc6c:	e0bffb17 	ldw	r2,-20(fp)
   2dc70:	1884703a 	and	r2,r3,r2
   2dc74:	103ff626 	beq	r2,zero,2dc50 <alt_printf+0xf4>

                    /* Print digits. */
                    for (; digit_shift >= 0; digit_shift -= 4)
   2dc78:	00001906 	br	2dce0 <alt_printf+0x184>
                    {
                        digit = (v & (0xF << digit_shift)) >> digit_shift;
   2dc7c:	00c003c4 	movi	r3,15
   2dc80:	e0bffd17 	ldw	r2,-12(fp)
   2dc84:	1884983a 	sll	r2,r3,r2
   2dc88:	1007883a 	mov	r3,r2
   2dc8c:	e0bffb17 	ldw	r2,-20(fp)
   2dc90:	1886703a 	and	r3,r3,r2
   2dc94:	e0bffd17 	ldw	r2,-12(fp)
   2dc98:	1884d83a 	srl	r2,r3,r2
   2dc9c:	e0bffa15 	stw	r2,-24(fp)
                        if (digit <= 9)
   2dca0:	e0bffa17 	ldw	r2,-24(fp)
   2dca4:	108002a8 	cmpgeui	r2,r2,10
   2dca8:	1000041e 	bne	r2,zero,2dcbc <alt_printf+0x160>
                            c = '0' + digit;
   2dcac:	e0bffa17 	ldw	r2,-24(fp)
   2dcb0:	10800c04 	addi	r2,r2,48
   2dcb4:	e0bffec5 	stb	r2,-5(fp)
   2dcb8:	00000306 	br	2dcc8 <alt_printf+0x16c>
                        else
                            c = 'a' + digit - 10;
   2dcbc:	e0bffa17 	ldw	r2,-24(fp)
   2dcc0:	108015c4 	addi	r2,r2,87
   2dcc4:	e0bffec5 	stb	r2,-5(fp)
                        alt_putchar(c);
   2dcc8:	e0bffec7 	ldb	r2,-5(fp)
   2dccc:	1009883a 	mov	r4,r2
   2dcd0:	002dd880 	call	2dd88 <alt_putchar>
                    for (; digit_shift >= 0; digit_shift -= 4)
   2dcd4:	e0bffd17 	ldw	r2,-12(fp)
   2dcd8:	10bfff04 	addi	r2,r2,-4
   2dcdc:	e0bffd15 	stw	r2,-12(fp)
   2dce0:	e0bffd17 	ldw	r2,-12(fp)
   2dce4:	103fe50e 	bge	r2,zero,2dc7c <alt_printf+0x120>
   2dce8:	00001806 	br	2dd4c <alt_printf+0x1f0>
                    }
                }
                else if (c == 's')
   2dcec:	e0bffec7 	ldb	r2,-5(fp)
   2dcf0:	10801cd8 	cmpnei	r2,r2,115
   2dcf4:	1000151e 	bne	r2,zero,2dd4c <alt_printf+0x1f0>
                {
                    /* Process string format. */
                    char *s = va_arg(args, char *);
   2dcf8:	e0bff817 	ldw	r2,-32(fp)
   2dcfc:	10c00104 	addi	r3,r2,4
   2dd00:	e0fff815 	stw	r3,-32(fp)
   2dd04:	10800017 	ldw	r2,0(r2)
   2dd08:	e0bffc15 	stw	r2,-16(fp)

                    while(*s)
   2dd0c:	00000906 	br	2dd34 <alt_printf+0x1d8>
                      alt_putchar(*s++);
   2dd10:	e0bffc17 	ldw	r2,-16(fp)
   2dd14:	10c00044 	addi	r3,r2,1
   2dd18:	e0fffc15 	stw	r3,-16(fp)
   2dd1c:	10800003 	ldbu	r2,0(r2)
   2dd20:	10803fcc 	andi	r2,r2,255
   2dd24:	1080201c 	xori	r2,r2,128
   2dd28:	10bfe004 	addi	r2,r2,-128
   2dd2c:	1009883a 	mov	r4,r2
   2dd30:	002dd880 	call	2dd88 <alt_putchar>
                    while(*s)
   2dd34:	e0bffc17 	ldw	r2,-16(fp)
   2dd38:	10800003 	ldbu	r2,0(r2)
   2dd3c:	10803fcc 	andi	r2,r2,255
   2dd40:	1080201c 	xori	r2,r2,128
   2dd44:	10bfe004 	addi	r2,r2,-128
   2dd48:	103ff11e 	bne	r2,zero,2dd10 <alt_printf+0x1b4>
    while ((c = *w++) != 0)
   2dd4c:	e0bfff17 	ldw	r2,-4(fp)
   2dd50:	10c00044 	addi	r3,r2,1
   2dd54:	e0ffff15 	stw	r3,-4(fp)
   2dd58:	10800003 	ldbu	r2,0(r2)
   2dd5c:	e0bffec5 	stb	r2,-5(fp)
   2dd60:	e0bffec7 	ldb	r2,-5(fp)
   2dd64:	103f8a1e 	bne	r2,zero,2db90 <alt_printf+0x34>
        }
    }
#ifdef ALT_SEMIHOSTING
    alt_putbufflush();
#endif
}
   2dd68:	00000106 	br	2dd70 <alt_printf+0x214>
                break;
   2dd6c:	0001883a 	nop
}
   2dd70:	0001883a 	nop
   2dd74:	e037883a 	mov	sp,fp
   2dd78:	dfc00117 	ldw	ra,4(sp)
   2dd7c:	df000017 	ldw	fp,0(sp)
   2dd80:	dec00504 	addi	sp,sp,20
   2dd84:	f800283a 	ret

0002dd88 <alt_putchar>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided putchar() routine.
 */
int 
alt_putchar(int c)
{
   2dd88:	defffd04 	addi	sp,sp,-12
   2dd8c:	dfc00215 	stw	ra,8(sp)
   2dd90:	df000115 	stw	fp,4(sp)
   2dd94:	df000104 	addi	fp,sp,4
   2dd98:	e13fff15 	stw	r4,-4(fp)
    if (ALT_DRIVER_WRITE(ALT_STDOUT_DEV, &c1, 1, 0) == -1) {
        return -1;
    }
    return c;
#else
    return putchar(c);
   2dd9c:	e13fff17 	ldw	r4,-4(fp)
   2dda0:	002fb680 	call	2fb68 <putchar>
#endif
#endif
}
   2dda4:	e037883a 	mov	sp,fp
   2dda8:	dfc00117 	ldw	ra,4(sp)
   2ddac:	df000017 	ldw	fp,0(sp)
   2ddb0:	dec00204 	addi	sp,sp,8
   2ddb4:	f800283a 	ret

0002ddb8 <alt_get_errno>:
{
   2ddb8:	defffe04 	addi	sp,sp,-8
   2ddbc:	dfc00115 	stw	ra,4(sp)
   2ddc0:	df000015 	stw	fp,0(sp)
   2ddc4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2ddc8:	d0a00e17 	ldw	r2,-32712(gp)
   2ddcc:	10000326 	beq	r2,zero,2dddc <alt_get_errno+0x24>
   2ddd0:	d0a00e17 	ldw	r2,-32712(gp)
   2ddd4:	103ee83a 	callr	r2
   2ddd8:	00000106 	br	2dde0 <alt_get_errno+0x28>
   2dddc:	d0a72504 	addi	r2,gp,-25452
}
   2dde0:	e037883a 	mov	sp,fp
   2dde4:	dfc00117 	ldw	ra,4(sp)
   2dde8:	df000017 	ldw	fp,0(sp)
   2ddec:	dec00204 	addi	sp,sp,8
   2ddf0:	f800283a 	ret

0002ddf4 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   2ddf4:	defff904 	addi	sp,sp,-28
   2ddf8:	dfc00615 	stw	ra,24(sp)
   2ddfc:	df000515 	stw	fp,20(sp)
   2de00:	df000504 	addi	fp,sp,20
   2de04:	e13ffd15 	stw	r4,-12(fp)
   2de08:	e17ffc15 	stw	r5,-16(fp)
   2de0c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2de10:	e0bffd17 	ldw	r2,-12(fp)
   2de14:	10000916 	blt	r2,zero,2de3c <read+0x48>
   2de18:	e0fffd17 	ldw	r3,-12(fp)
   2de1c:	1805883a 	mov	r2,r3
   2de20:	1085883a 	add	r2,r2,r2
   2de24:	10c5883a 	add	r2,r2,r3
   2de28:	100490ba 	slli	r2,r2,2
   2de2c:	00c000f4 	movhi	r3,3
   2de30:	18c42204 	addi	r3,r3,4232
   2de34:	10c5883a 	add	r2,r2,r3
   2de38:	00000106 	br	2de40 <read+0x4c>
   2de3c:	0005883a 	mov	r2,zero
   2de40:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2de44:	e0bfff17 	ldw	r2,-4(fp)
   2de48:	10002226 	beq	r2,zero,2ded4 <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2de4c:	e0bfff17 	ldw	r2,-4(fp)
   2de50:	10800217 	ldw	r2,8(r2)
   2de54:	108000cc 	andi	r2,r2,3
   2de58:	10800060 	cmpeqi	r2,r2,1
   2de5c:	1000181e 	bne	r2,zero,2dec0 <read+0xcc>
        (fd->dev->read))
   2de60:	e0bfff17 	ldw	r2,-4(fp)
   2de64:	10800017 	ldw	r2,0(r2)
   2de68:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2de6c:	10001426 	beq	r2,zero,2dec0 <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   2de70:	e0bfff17 	ldw	r2,-4(fp)
   2de74:	10800017 	ldw	r2,0(r2)
   2de78:	10800517 	ldw	r2,20(r2)
   2de7c:	e0fffb17 	ldw	r3,-20(fp)
   2de80:	180d883a 	mov	r6,r3
   2de84:	e17ffc17 	ldw	r5,-16(fp)
   2de88:	e13fff17 	ldw	r4,-4(fp)
   2de8c:	103ee83a 	callr	r2
   2de90:	e0bffe15 	stw	r2,-8(fp)
   2de94:	e0bffe17 	ldw	r2,-8(fp)
   2de98:	1000070e 	bge	r2,zero,2deb8 <read+0xc4>
        {
          ALT_ERRNO = -rval;
   2de9c:	002ddb80 	call	2ddb8 <alt_get_errno>
   2dea0:	1007883a 	mov	r3,r2
   2dea4:	e0bffe17 	ldw	r2,-8(fp)
   2dea8:	0085c83a 	sub	r2,zero,r2
   2deac:	18800015 	stw	r2,0(r3)
          return -1;
   2deb0:	00bfffc4 	movi	r2,-1
   2deb4:	00000c06 	br	2dee8 <read+0xf4>
        }
        return rval;
   2deb8:	e0bffe17 	ldw	r2,-8(fp)
   2debc:	00000a06 	br	2dee8 <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
   2dec0:	002ddb80 	call	2ddb8 <alt_get_errno>
   2dec4:	1007883a 	mov	r3,r2
   2dec8:	00800344 	movi	r2,13
   2decc:	18800015 	stw	r2,0(r3)
   2ded0:	00000406 	br	2dee4 <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   2ded4:	002ddb80 	call	2ddb8 <alt_get_errno>
   2ded8:	1007883a 	mov	r3,r2
   2dedc:	00801444 	movi	r2,81
   2dee0:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2dee4:	00bfffc4 	movi	r2,-1
}
   2dee8:	e037883a 	mov	sp,fp
   2deec:	dfc00117 	ldw	ra,4(sp)
   2def0:	df000017 	ldw	fp,0(sp)
   2def4:	dec00204 	addi	sp,sp,8
   2def8:	f800283a 	ret

0002defc <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   2defc:	defffe04 	addi	sp,sp,-8
   2df00:	df000115 	stw	fp,4(sp)
   2df04:	df000104 	addi	fp,sp,4
   2df08:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   2df0c:	e0bfff17 	ldw	r2,-4(fp)
   2df10:	108000d0 	cmplti	r2,r2,3
   2df14:	1000101e 	bne	r2,zero,2df58 <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
   2df18:	e0ffff17 	ldw	r3,-4(fp)
   2df1c:	1805883a 	mov	r2,r3
   2df20:	1085883a 	add	r2,r2,r2
   2df24:	10c5883a 	add	r2,r2,r3
   2df28:	100490ba 	slli	r2,r2,2
   2df2c:	00c000f4 	movhi	r3,3
   2df30:	10c7883a 	add	r3,r2,r3
   2df34:	18042415 	stw	zero,4240(r3)
    alt_fd_list[fd].dev      = 0;
   2df38:	e0ffff17 	ldw	r3,-4(fp)
   2df3c:	1805883a 	mov	r2,r3
   2df40:	1085883a 	add	r2,r2,r2
   2df44:	10c5883a 	add	r2,r2,r3
   2df48:	100490ba 	slli	r2,r2,2
   2df4c:	00c000f4 	movhi	r3,3
   2df50:	10c7883a 	add	r3,r2,r3
   2df54:	18042215 	stw	zero,4232(r3)
  }
}
   2df58:	0001883a 	nop
   2df5c:	e037883a 	mov	sp,fp
   2df60:	df000017 	ldw	fp,0(sp)
   2df64:	dec00104 	addi	sp,sp,4
   2df68:	f800283a 	ret

0002df6c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   2df6c:	defff904 	addi	sp,sp,-28
   2df70:	df000615 	stw	fp,24(sp)
   2df74:	df000604 	addi	fp,sp,24
   2df78:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
   2df7c:	0005303a 	rdctl	r2,status
   2df80:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2df84:	e0fffd17 	ldw	r3,-12(fp)
   2df88:	00bfff84 	movi	r2,-2
   2df8c:	1884703a 	and	r2,r3,r2
   2df90:	1001703a 	wrctl	status,r2
  return context;
   2df94:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   2df98:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   2df9c:	d0a01017 	ldw	r2,-32704(gp)
   2dfa0:	10c000c4 	addi	r3,r2,3
   2dfa4:	00bfff04 	movi	r2,-4
   2dfa8:	1884703a 	and	r2,r3,r2
   2dfac:	d0a01015 	stw	r2,-32704(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   2dfb0:	d0e01017 	ldw	r3,-32704(gp)
   2dfb4:	e0bffa17 	ldw	r2,-24(fp)
   2dfb8:	1887883a 	add	r3,r3,r2
   2dfbc:	00800134 	movhi	r2,4
   2dfc0:	10800004 	addi	r2,r2,0
   2dfc4:	10c0072e 	bgeu	r2,r3,2dfe4 <sbrk+0x78>
   2dfc8:	e0bfff17 	ldw	r2,-4(fp)
   2dfcc:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   2dfd0:	e0bffc17 	ldw	r2,-16(fp)
   2dfd4:	1001703a 	wrctl	status,r2
}
   2dfd8:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   2dfdc:	00bfffc4 	movi	r2,-1
   2dfe0:	00000c06 	br	2e014 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   2dfe4:	d0a01017 	ldw	r2,-32704(gp)
   2dfe8:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
   2dfec:	d0e01017 	ldw	r3,-32704(gp)
   2dff0:	e0bffa17 	ldw	r2,-24(fp)
   2dff4:	1885883a 	add	r2,r3,r2
   2dff8:	d0a01015 	stw	r2,-32704(gp)
   2dffc:	e0bfff17 	ldw	r2,-4(fp)
   2e000:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   2e004:	e0bffb17 	ldw	r2,-20(fp)
   2e008:	1001703a 	wrctl	status,r2
}
   2e00c:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   2e010:	e0bffe17 	ldw	r2,-8(fp)
} 
   2e014:	e037883a 	mov	sp,fp
   2e018:	df000017 	ldw	fp,0(sp)
   2e01c:	dec00104 	addi	sp,sp,4
   2e020:	f800283a 	ret

0002e024 <alt_get_errno>:
{
   2e024:	defffe04 	addi	sp,sp,-8
   2e028:	dfc00115 	stw	ra,4(sp)
   2e02c:	df000015 	stw	fp,0(sp)
   2e030:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e034:	d0a00e17 	ldw	r2,-32712(gp)
   2e038:	10000326 	beq	r2,zero,2e048 <alt_get_errno+0x24>
   2e03c:	d0a00e17 	ldw	r2,-32712(gp)
   2e040:	103ee83a 	callr	r2
   2e044:	00000106 	br	2e04c <alt_get_errno+0x28>
   2e048:	d0a72504 	addi	r2,gp,-25452
}
   2e04c:	e037883a 	mov	sp,fp
   2e050:	dfc00117 	ldw	ra,4(sp)
   2e054:	df000017 	ldw	fp,0(sp)
   2e058:	dec00204 	addi	sp,sp,8
   2e05c:	f800283a 	ret

0002e060 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   2e060:	defff904 	addi	sp,sp,-28
   2e064:	dfc00615 	stw	ra,24(sp)
   2e068:	df000515 	stw	fp,20(sp)
   2e06c:	df000504 	addi	fp,sp,20
   2e070:	e13ffd15 	stw	r4,-12(fp)
   2e074:	e17ffc15 	stw	r5,-16(fp)
   2e078:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2e07c:	e0bffd17 	ldw	r2,-12(fp)
   2e080:	10000916 	blt	r2,zero,2e0a8 <write+0x48>
   2e084:	e0fffd17 	ldw	r3,-12(fp)
   2e088:	1805883a 	mov	r2,r3
   2e08c:	1085883a 	add	r2,r2,r2
   2e090:	10c5883a 	add	r2,r2,r3
   2e094:	100490ba 	slli	r2,r2,2
   2e098:	00c000f4 	movhi	r3,3
   2e09c:	18c42204 	addi	r3,r3,4232
   2e0a0:	10c5883a 	add	r2,r2,r3
   2e0a4:	00000106 	br	2e0ac <write+0x4c>
   2e0a8:	0005883a 	mov	r2,zero
   2e0ac:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2e0b0:	e0bfff17 	ldw	r2,-4(fp)
   2e0b4:	10002126 	beq	r2,zero,2e13c <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   2e0b8:	e0bfff17 	ldw	r2,-4(fp)
   2e0bc:	10800217 	ldw	r2,8(r2)
   2e0c0:	108000cc 	andi	r2,r2,3
   2e0c4:	10001826 	beq	r2,zero,2e128 <write+0xc8>
   2e0c8:	e0bfff17 	ldw	r2,-4(fp)
   2e0cc:	10800017 	ldw	r2,0(r2)
   2e0d0:	10800617 	ldw	r2,24(r2)
   2e0d4:	10001426 	beq	r2,zero,2e128 <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   2e0d8:	e0bfff17 	ldw	r2,-4(fp)
   2e0dc:	10800017 	ldw	r2,0(r2)
   2e0e0:	10800617 	ldw	r2,24(r2)
   2e0e4:	e0fffb17 	ldw	r3,-20(fp)
   2e0e8:	180d883a 	mov	r6,r3
   2e0ec:	e17ffc17 	ldw	r5,-16(fp)
   2e0f0:	e13fff17 	ldw	r4,-4(fp)
   2e0f4:	103ee83a 	callr	r2
   2e0f8:	e0bffe15 	stw	r2,-8(fp)
   2e0fc:	e0bffe17 	ldw	r2,-8(fp)
   2e100:	1000070e 	bge	r2,zero,2e120 <write+0xc0>
      {
        ALT_ERRNO = -rval;
   2e104:	002e0240 	call	2e024 <alt_get_errno>
   2e108:	1007883a 	mov	r3,r2
   2e10c:	e0bffe17 	ldw	r2,-8(fp)
   2e110:	0085c83a 	sub	r2,zero,r2
   2e114:	18800015 	stw	r2,0(r3)
        return -1;
   2e118:	00bfffc4 	movi	r2,-1
   2e11c:	00000c06 	br	2e150 <write+0xf0>
      }
      return rval;
   2e120:	e0bffe17 	ldw	r2,-8(fp)
   2e124:	00000a06 	br	2e150 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
   2e128:	002e0240 	call	2e024 <alt_get_errno>
   2e12c:	1007883a 	mov	r3,r2
   2e130:	00800344 	movi	r2,13
   2e134:	18800015 	stw	r2,0(r3)
   2e138:	00000406 	br	2e14c <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   2e13c:	002e0240 	call	2e024 <alt_get_errno>
   2e140:	1007883a 	mov	r3,r2
   2e144:	00801444 	movi	r2,81
   2e148:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2e14c:	00bfffc4 	movi	r2,-1
}
   2e150:	e037883a 	mov	sp,fp
   2e154:	dfc00117 	ldw	ra,4(sp)
   2e158:	df000017 	ldw	fp,0(sp)
   2e15c:	dec00204 	addi	sp,sp,8
   2e160:	f800283a 	ret

0002e164 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   2e164:	defffd04 	addi	sp,sp,-12
   2e168:	dfc00215 	stw	ra,8(sp)
   2e16c:	df000115 	stw	fp,4(sp)
   2e170:	df000104 	addi	fp,sp,4
   2e174:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   2e178:	d1600b04 	addi	r5,gp,-32724
   2e17c:	e13fff17 	ldw	r4,-4(fp)
   2e180:	002f3080 	call	2f308 <alt_dev_llist_insert>
}
   2e184:	e037883a 	mov	sp,fp
   2e188:	dfc00117 	ldw	ra,4(sp)
   2e18c:	df000017 	ldw	fp,0(sp)
   2e190:	dec00204 	addi	sp,sp,8
   2e194:	f800283a 	ret

0002e198 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   2e198:	defffd04 	addi	sp,sp,-12
   2e19c:	dfc00215 	stw	ra,8(sp)
   2e1a0:	df000115 	stw	fp,4(sp)
   2e1a4:	df000104 	addi	fp,sp,4
   2e1a8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
   2e1ac:	002f9e40 	call	2f9e4 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   2e1b0:	00800044 	movi	r2,1
   2e1b4:	1001703a 	wrctl	status,r2
}
   2e1b8:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
   2e1bc:	0001883a 	nop
   2e1c0:	e037883a 	mov	sp,fp
   2e1c4:	dfc00117 	ldw	ra,4(sp)
   2e1c8:	df000017 	ldw	fp,0(sp)
   2e1cc:	dec00204 	addi	sp,sp,8
   2e1d0:	f800283a 	ret

0002e1d4 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   2e1d4:	defffe04 	addi	sp,sp,-8
   2e1d8:	dfc00115 	stw	ra,4(sp)
   2e1dc:	df000015 	stw	fp,0(sp)
   2e1e0:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   2e1e4:	01c0fa04 	movi	r7,1000
   2e1e8:	000d883a 	mov	r6,zero
   2e1ec:	000b883a 	mov	r5,zero
   2e1f0:	01000134 	movhi	r4,4
   2e1f4:	21040004 	addi	r4,r4,4096
   2e1f8:	002ed300 	call	2ed30 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   2e1fc:	01800084 	movi	r6,2
   2e200:	000b883a 	mov	r5,zero
   2e204:	010000f4 	movhi	r4,3
   2e208:	21048c04 	addi	r4,r4,4656
   2e20c:	002e3a80 	call	2e3a8 <altera_avalon_jtag_uart_init>
   2e210:	010000f4 	movhi	r4,3
   2e214:	21048204 	addi	r4,r4,4616
   2e218:	002e1640 	call	2e164 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
   2e21c:	0001883a 	nop
    ALTERA_UP_AVALON_ACCELEROMETER_SPI_INIT ( ACCELEROMETER_SPI, accelerometer_spi);
   2e220:	010000f4 	movhi	r4,3
   2e224:	21089a04 	addi	r4,r4,8808
   2e228:	002e1640 	call	2e164 <alt_dev_reg>
}
   2e22c:	0001883a 	nop
   2e230:	e037883a 	mov	sp,fp
   2e234:	dfc00117 	ldw	ra,4(sp)
   2e238:	df000017 	ldw	fp,0(sp)
   2e23c:	dec00204 	addi	sp,sp,8
   2e240:	f800283a 	ret

0002e244 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   2e244:	defffa04 	addi	sp,sp,-24
   2e248:	dfc00515 	stw	ra,20(sp)
   2e24c:	df000415 	stw	fp,16(sp)
   2e250:	df000404 	addi	fp,sp,16
   2e254:	e13ffe15 	stw	r4,-8(fp)
   2e258:	e17ffd15 	stw	r5,-12(fp)
   2e25c:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e260:	e0bffe17 	ldw	r2,-8(fp)
   2e264:	10800017 	ldw	r2,0(r2)
   2e268:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   2e26c:	e0bfff17 	ldw	r2,-4(fp)
   2e270:	10c00a04 	addi	r3,r2,40
   2e274:	e0bffe17 	ldw	r2,-8(fp)
   2e278:	10800217 	ldw	r2,8(r2)
   2e27c:	100f883a 	mov	r7,r2
   2e280:	e1bffc17 	ldw	r6,-16(fp)
   2e284:	e17ffd17 	ldw	r5,-12(fp)
   2e288:	1809883a 	mov	r4,r3
   2e28c:	002e8680 	call	2e868 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   2e290:	e037883a 	mov	sp,fp
   2e294:	dfc00117 	ldw	ra,4(sp)
   2e298:	df000017 	ldw	fp,0(sp)
   2e29c:	dec00204 	addi	sp,sp,8
   2e2a0:	f800283a 	ret

0002e2a4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   2e2a4:	defffa04 	addi	sp,sp,-24
   2e2a8:	dfc00515 	stw	ra,20(sp)
   2e2ac:	df000415 	stw	fp,16(sp)
   2e2b0:	df000404 	addi	fp,sp,16
   2e2b4:	e13ffe15 	stw	r4,-8(fp)
   2e2b8:	e17ffd15 	stw	r5,-12(fp)
   2e2bc:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e2c0:	e0bffe17 	ldw	r2,-8(fp)
   2e2c4:	10800017 	ldw	r2,0(r2)
   2e2c8:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   2e2cc:	e0bfff17 	ldw	r2,-4(fp)
   2e2d0:	10c00a04 	addi	r3,r2,40
   2e2d4:	e0bffe17 	ldw	r2,-8(fp)
   2e2d8:	10800217 	ldw	r2,8(r2)
   2e2dc:	100f883a 	mov	r7,r2
   2e2e0:	e1bffc17 	ldw	r6,-16(fp)
   2e2e4:	e17ffd17 	ldw	r5,-12(fp)
   2e2e8:	1809883a 	mov	r4,r3
   2e2ec:	002ea880 	call	2ea88 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   2e2f0:	e037883a 	mov	sp,fp
   2e2f4:	dfc00117 	ldw	ra,4(sp)
   2e2f8:	df000017 	ldw	fp,0(sp)
   2e2fc:	dec00204 	addi	sp,sp,8
   2e300:	f800283a 	ret

0002e304 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   2e304:	defffc04 	addi	sp,sp,-16
   2e308:	dfc00315 	stw	ra,12(sp)
   2e30c:	df000215 	stw	fp,8(sp)
   2e310:	df000204 	addi	fp,sp,8
   2e314:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e318:	e0bffe17 	ldw	r2,-8(fp)
   2e31c:	10800017 	ldw	r2,0(r2)
   2e320:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   2e324:	e0bfff17 	ldw	r2,-4(fp)
   2e328:	10c00a04 	addi	r3,r2,40
   2e32c:	e0bffe17 	ldw	r2,-8(fp)
   2e330:	10800217 	ldw	r2,8(r2)
   2e334:	100b883a 	mov	r5,r2
   2e338:	1809883a 	mov	r4,r3
   2e33c:	002e70c0 	call	2e70c <altera_avalon_jtag_uart_close>
}
   2e340:	e037883a 	mov	sp,fp
   2e344:	dfc00117 	ldw	ra,4(sp)
   2e348:	df000017 	ldw	fp,0(sp)
   2e34c:	dec00204 	addi	sp,sp,8
   2e350:	f800283a 	ret

0002e354 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   2e354:	defffa04 	addi	sp,sp,-24
   2e358:	dfc00515 	stw	ra,20(sp)
   2e35c:	df000415 	stw	fp,16(sp)
   2e360:	df000404 	addi	fp,sp,16
   2e364:	e13ffe15 	stw	r4,-8(fp)
   2e368:	e17ffd15 	stw	r5,-12(fp)
   2e36c:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   2e370:	e0bffe17 	ldw	r2,-8(fp)
   2e374:	10800017 	ldw	r2,0(r2)
   2e378:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   2e37c:	e0bfff17 	ldw	r2,-4(fp)
   2e380:	10800a04 	addi	r2,r2,40
   2e384:	e1bffc17 	ldw	r6,-16(fp)
   2e388:	e17ffd17 	ldw	r5,-12(fp)
   2e38c:	1009883a 	mov	r4,r2
   2e390:	002e7740 	call	2e774 <altera_avalon_jtag_uart_ioctl>
}
   2e394:	e037883a 	mov	sp,fp
   2e398:	dfc00117 	ldw	ra,4(sp)
   2e39c:	df000017 	ldw	fp,0(sp)
   2e3a0:	dec00204 	addi	sp,sp,8
   2e3a4:	f800283a 	ret

0002e3a8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   2e3a8:	defffb04 	addi	sp,sp,-20
   2e3ac:	dfc00415 	stw	ra,16(sp)
   2e3b0:	df000315 	stw	fp,12(sp)
   2e3b4:	df000304 	addi	fp,sp,12
   2e3b8:	e13fff15 	stw	r4,-4(fp)
   2e3bc:	e17ffe15 	stw	r5,-8(fp)
   2e3c0:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e3c4:	e0bfff17 	ldw	r2,-4(fp)
   2e3c8:	00c00044 	movi	r3,1
   2e3cc:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   2e3d0:	e0bfff17 	ldw	r2,-4(fp)
   2e3d4:	10800017 	ldw	r2,0(r2)
   2e3d8:	10800104 	addi	r2,r2,4
   2e3dc:	1007883a 	mov	r3,r2
   2e3e0:	e0bfff17 	ldw	r2,-4(fp)
   2e3e4:	10800817 	ldw	r2,32(r2)
   2e3e8:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
   2e3ec:	e0bffd17 	ldw	r2,-12(fp)
   2e3f0:	018000f4 	movhi	r6,3
   2e3f4:	31b91704 	addi	r6,r6,-7076
   2e3f8:	e17fff17 	ldw	r5,-4(fp)
   2e3fc:	1009883a 	mov	r4,r2
   2e400:	002d2440 	call	2d244 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   2e404:	e0bfff17 	ldw	r2,-4(fp)
   2e408:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   2e40c:	e0bfff17 	ldw	r2,-4(fp)
   2e410:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2e414:	d0e72e17 	ldw	r3,-25416(gp)
   2e418:	e1ffff17 	ldw	r7,-4(fp)
   2e41c:	018000f4 	movhi	r6,3
   2e420:	31b99b04 	addi	r6,r6,-6548
   2e424:	180b883a 	mov	r5,r3
   2e428:	1009883a 	mov	r4,r2
   2e42c:	002f1780 	call	2f178 <alt_alarm_start>
   2e430:	1000040e 	bge	r2,zero,2e444 <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   2e434:	e0ffff17 	ldw	r3,-4(fp)
   2e438:	00a00034 	movhi	r2,32768
   2e43c:	10bfffc4 	addi	r2,r2,-1
   2e440:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   2e444:	0001883a 	nop
   2e448:	e037883a 	mov	sp,fp
   2e44c:	dfc00117 	ldw	ra,4(sp)
   2e450:	df000017 	ldw	fp,0(sp)
   2e454:	dec00204 	addi	sp,sp,8
   2e458:	f800283a 	ret

0002e45c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   2e45c:	defff704 	addi	sp,sp,-36
   2e460:	df000815 	stw	fp,32(sp)
   2e464:	df000804 	addi	fp,sp,32
   2e468:	e13ff915 	stw	r4,-28(fp)
   2e46c:	e17ff815 	stw	r5,-32(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   2e470:	e0bff917 	ldw	r2,-28(fp)
   2e474:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
   2e478:	e0bffd17 	ldw	r2,-12(fp)
   2e47c:	10800017 	ldw	r2,0(r2)
   2e480:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e484:	e0bffc17 	ldw	r2,-16(fp)
   2e488:	10800104 	addi	r2,r2,4
   2e48c:	10800037 	ldwio	r2,0(r2)
   2e490:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   2e494:	e0bffb17 	ldw	r2,-20(fp)
   2e498:	1080c00c 	andi	r2,r2,768
   2e49c:	10006d26 	beq	r2,zero,2e654 <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   2e4a0:	e0bffb17 	ldw	r2,-20(fp)
   2e4a4:	1080400c 	andi	r2,r2,256
   2e4a8:	10003526 	beq	r2,zero,2e580 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   2e4ac:	00800074 	movhi	r2,1
   2e4b0:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e4b4:	e0bffd17 	ldw	r2,-12(fp)
   2e4b8:	10800a17 	ldw	r2,40(r2)
   2e4bc:	10800044 	addi	r2,r2,1
   2e4c0:	1081ffcc 	andi	r2,r2,2047
   2e4c4:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   2e4c8:	e0bffd17 	ldw	r2,-12(fp)
   2e4cc:	10800b17 	ldw	r2,44(r2)
   2e4d0:	e0fffa17 	ldw	r3,-24(fp)
   2e4d4:	18801526 	beq	r3,r2,2e52c <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   2e4d8:	e0bffc17 	ldw	r2,-16(fp)
   2e4dc:	10800037 	ldwio	r2,0(r2)
   2e4e0:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   2e4e4:	e0bfff17 	ldw	r2,-4(fp)
   2e4e8:	10a0000c 	andi	r2,r2,32768
   2e4ec:	10001126 	beq	r2,zero,2e534 <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   2e4f0:	e0bffd17 	ldw	r2,-12(fp)
   2e4f4:	10800a17 	ldw	r2,40(r2)
   2e4f8:	e0ffff17 	ldw	r3,-4(fp)
   2e4fc:	1809883a 	mov	r4,r3
   2e500:	e0fffd17 	ldw	r3,-12(fp)
   2e504:	1885883a 	add	r2,r3,r2
   2e508:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e50c:	e0bffd17 	ldw	r2,-12(fp)
   2e510:	10800a17 	ldw	r2,40(r2)
   2e514:	10800044 	addi	r2,r2,1
   2e518:	10c1ffcc 	andi	r3,r2,2047
   2e51c:	e0bffd17 	ldw	r2,-12(fp)
   2e520:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
   2e524:	0001883a 	nop
      {
   2e528:	003fe206 	br	2e4b4 <altera_avalon_jtag_uart_irq+0x58>
          break;
   2e52c:	0001883a 	nop
   2e530:	00000106 	br	2e538 <altera_avalon_jtag_uart_irq+0xdc>
          break;
   2e534:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   2e538:	e0bfff17 	ldw	r2,-4(fp)
   2e53c:	10bfffec 	andhi	r2,r2,65535
   2e540:	10000f26 	beq	r2,zero,2e580 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e544:	e0bffd17 	ldw	r2,-12(fp)
   2e548:	10c00817 	ldw	r3,32(r2)
   2e54c:	00bfff84 	movi	r2,-2
   2e550:	1886703a 	and	r3,r3,r2
   2e554:	e0bffd17 	ldw	r2,-12(fp)
   2e558:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   2e55c:	e0bffc17 	ldw	r2,-16(fp)
   2e560:	10800104 	addi	r2,r2,4
   2e564:	1007883a 	mov	r3,r2
   2e568:	e0bffd17 	ldw	r2,-12(fp)
   2e56c:	10800817 	ldw	r2,32(r2)
   2e570:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e574:	e0bffc17 	ldw	r2,-16(fp)
   2e578:	10800104 	addi	r2,r2,4
   2e57c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   2e580:	e0bffb17 	ldw	r2,-20(fp)
   2e584:	1080800c 	andi	r2,r2,512
   2e588:	103fbe26 	beq	r2,zero,2e484 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   2e58c:	e0bffb17 	ldw	r2,-20(fp)
   2e590:	1004d43a 	srli	r2,r2,16
   2e594:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   2e598:	00001406 	br	2e5ec <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   2e59c:	e0bffc17 	ldw	r2,-16(fp)
   2e5a0:	e0fffd17 	ldw	r3,-12(fp)
   2e5a4:	18c00d17 	ldw	r3,52(r3)
   2e5a8:	e13ffd17 	ldw	r4,-12(fp)
   2e5ac:	20c7883a 	add	r3,r4,r3
   2e5b0:	18c20e03 	ldbu	r3,2104(r3)
   2e5b4:	18c03fcc 	andi	r3,r3,255
   2e5b8:	18c0201c 	xori	r3,r3,128
   2e5bc:	18ffe004 	addi	r3,r3,-128
   2e5c0:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e5c4:	e0bffd17 	ldw	r2,-12(fp)
   2e5c8:	10800d17 	ldw	r2,52(r2)
   2e5cc:	10800044 	addi	r2,r2,1
   2e5d0:	10c1ffcc 	andi	r3,r2,2047
   2e5d4:	e0bffd17 	ldw	r2,-12(fp)
   2e5d8:	10c00d15 	stw	r3,52(r2)
   2e5dc:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   2e5e0:	e0bffe17 	ldw	r2,-8(fp)
   2e5e4:	10bfffc4 	addi	r2,r2,-1
   2e5e8:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
   2e5ec:	e0bffe17 	ldw	r2,-8(fp)
   2e5f0:	10000526 	beq	r2,zero,2e608 <altera_avalon_jtag_uart_irq+0x1ac>
   2e5f4:	e0bffd17 	ldw	r2,-12(fp)
   2e5f8:	10c00d17 	ldw	r3,52(r2)
   2e5fc:	e0bffd17 	ldw	r2,-12(fp)
   2e600:	10800c17 	ldw	r2,48(r2)
   2e604:	18bfe51e 	bne	r3,r2,2e59c <altera_avalon_jtag_uart_irq+0x140>
      }

      if (space > 0)
   2e608:	e0bffe17 	ldw	r2,-8(fp)
   2e60c:	103f9d26 	beq	r2,zero,2e484 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2e610:	e0bffd17 	ldw	r2,-12(fp)
   2e614:	10c00817 	ldw	r3,32(r2)
   2e618:	00bfff44 	movi	r2,-3
   2e61c:	1886703a 	and	r3,r3,r2
   2e620:	e0bffd17 	ldw	r2,-12(fp)
   2e624:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e628:	e0bffd17 	ldw	r2,-12(fp)
   2e62c:	10800017 	ldw	r2,0(r2)
   2e630:	10800104 	addi	r2,r2,4
   2e634:	1007883a 	mov	r3,r2
   2e638:	e0bffd17 	ldw	r2,-12(fp)
   2e63c:	10800817 	ldw	r2,32(r2)
   2e640:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e644:	e0bffc17 	ldw	r2,-16(fp)
   2e648:	10800104 	addi	r2,r2,4
   2e64c:	10800037 	ldwio	r2,0(r2)
  {
   2e650:	003f8c06 	br	2e484 <altera_avalon_jtag_uart_irq+0x28>
      break;
   2e654:	0001883a 	nop
      }
    }
  }
}
   2e658:	0001883a 	nop
   2e65c:	e037883a 	mov	sp,fp
   2e660:	df000017 	ldw	fp,0(sp)
   2e664:	dec00104 	addi	sp,sp,4
   2e668:	f800283a 	ret

0002e66c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   2e66c:	defffc04 	addi	sp,sp,-16
   2e670:	df000315 	stw	fp,12(sp)
   2e674:	df000304 	addi	fp,sp,12
   2e678:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   2e67c:	e0bffd17 	ldw	r2,-12(fp)
   2e680:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   2e684:	e0bfff17 	ldw	r2,-4(fp)
   2e688:	10800017 	ldw	r2,0(r2)
   2e68c:	10800104 	addi	r2,r2,4
   2e690:	10800037 	ldwio	r2,0(r2)
   2e694:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   2e698:	e0bffe17 	ldw	r2,-8(fp)
   2e69c:	1081000c 	andi	r2,r2,1024
   2e6a0:	10000b26 	beq	r2,zero,2e6d0 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   2e6a4:	e0bfff17 	ldw	r2,-4(fp)
   2e6a8:	10800017 	ldw	r2,0(r2)
   2e6ac:	10800104 	addi	r2,r2,4
   2e6b0:	1007883a 	mov	r3,r2
   2e6b4:	e0bfff17 	ldw	r2,-4(fp)
   2e6b8:	10800817 	ldw	r2,32(r2)
   2e6bc:	10810014 	ori	r2,r2,1024
   2e6c0:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   2e6c4:	e0bfff17 	ldw	r2,-4(fp)
   2e6c8:	10000915 	stw	zero,36(r2)
   2e6cc:	00000a06 	br	2e6f8 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   2e6d0:	e0bfff17 	ldw	r2,-4(fp)
   2e6d4:	10c00917 	ldw	r3,36(r2)
   2e6d8:	00a00034 	movhi	r2,32768
   2e6dc:	10bfff04 	addi	r2,r2,-4
   2e6e0:	10c00536 	bltu	r2,r3,2e6f8 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   2e6e4:	e0bfff17 	ldw	r2,-4(fp)
   2e6e8:	10800917 	ldw	r2,36(r2)
   2e6ec:	10c00044 	addi	r3,r2,1
   2e6f0:	e0bfff17 	ldw	r2,-4(fp)
   2e6f4:	10c00915 	stw	r3,36(r2)
   2e6f8:	d0a72e17 	ldw	r2,-25416(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   2e6fc:	e037883a 	mov	sp,fp
   2e700:	df000017 	ldw	fp,0(sp)
   2e704:	dec00104 	addi	sp,sp,4
   2e708:	f800283a 	ret

0002e70c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   2e70c:	defffd04 	addi	sp,sp,-12
   2e710:	df000215 	stw	fp,8(sp)
   2e714:	df000204 	addi	fp,sp,8
   2e718:	e13fff15 	stw	r4,-4(fp)
   2e71c:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2e720:	00000506 	br	2e738 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   2e724:	e0bffe17 	ldw	r2,-8(fp)
   2e728:	1090000c 	andi	r2,r2,16384
   2e72c:	10000226 	beq	r2,zero,2e738 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   2e730:	00bffd44 	movi	r2,-11
   2e734:	00000b06 	br	2e764 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2e738:	e0bfff17 	ldw	r2,-4(fp)
   2e73c:	10c00d17 	ldw	r3,52(r2)
   2e740:	e0bfff17 	ldw	r2,-4(fp)
   2e744:	10800c17 	ldw	r2,48(r2)
   2e748:	18800526 	beq	r3,r2,2e760 <altera_avalon_jtag_uart_close+0x54>
   2e74c:	e0bfff17 	ldw	r2,-4(fp)
   2e750:	10c00917 	ldw	r3,36(r2)
   2e754:	e0bfff17 	ldw	r2,-4(fp)
   2e758:	10800117 	ldw	r2,4(r2)
   2e75c:	18bff136 	bltu	r3,r2,2e724 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
   2e760:	0005883a 	mov	r2,zero
}
   2e764:	e037883a 	mov	sp,fp
   2e768:	df000017 	ldw	fp,0(sp)
   2e76c:	dec00104 	addi	sp,sp,4
   2e770:	f800283a 	ret

0002e774 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   2e774:	defffa04 	addi	sp,sp,-24
   2e778:	df000515 	stw	fp,20(sp)
   2e77c:	df000504 	addi	fp,sp,20
   2e780:	e13ffd15 	stw	r4,-12(fp)
   2e784:	e17ffc15 	stw	r5,-16(fp)
   2e788:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
   2e78c:	00bff9c4 	movi	r2,-25
   2e790:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
   2e794:	e0bffc17 	ldw	r2,-16(fp)
   2e798:	109a8060 	cmpeqi	r2,r2,27137
   2e79c:	1000041e 	bne	r2,zero,2e7b0 <altera_avalon_jtag_uart_ioctl+0x3c>
   2e7a0:	e0bffc17 	ldw	r2,-16(fp)
   2e7a4:	109a80a0 	cmpeqi	r2,r2,27138
   2e7a8:	1000181e 	bne	r2,zero,2e80c <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
   2e7ac:	00002906 	br	2e854 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
   2e7b0:	e0bffd17 	ldw	r2,-12(fp)
   2e7b4:	10c00117 	ldw	r3,4(r2)
   2e7b8:	00a00034 	movhi	r2,32768
   2e7bc:	10bfffc4 	addi	r2,r2,-1
   2e7c0:	18802126 	beq	r3,r2,2e848 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
   2e7c4:	e0bffb17 	ldw	r2,-20(fp)
   2e7c8:	10800017 	ldw	r2,0(r2)
   2e7cc:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   2e7d0:	e0bffe17 	ldw	r2,-8(fp)
   2e7d4:	10800090 	cmplti	r2,r2,2
   2e7d8:	1000061e 	bne	r2,zero,2e7f4 <altera_avalon_jtag_uart_ioctl+0x80>
   2e7dc:	e0fffe17 	ldw	r3,-8(fp)
   2e7e0:	00a00034 	movhi	r2,32768
   2e7e4:	10bfffc4 	addi	r2,r2,-1
   2e7e8:	18800226 	beq	r3,r2,2e7f4 <altera_avalon_jtag_uart_ioctl+0x80>
   2e7ec:	e0bffe17 	ldw	r2,-8(fp)
   2e7f0:	00000206 	br	2e7fc <altera_avalon_jtag_uart_ioctl+0x88>
   2e7f4:	00a00034 	movhi	r2,32768
   2e7f8:	10bfff84 	addi	r2,r2,-2
   2e7fc:	e0fffd17 	ldw	r3,-12(fp)
   2e800:	18800115 	stw	r2,4(r3)
      rc = 0;
   2e804:	e03fff15 	stw	zero,-4(fp)
    break;
   2e808:	00000f06 	br	2e848 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
   2e80c:	e0bffd17 	ldw	r2,-12(fp)
   2e810:	10c00117 	ldw	r3,4(r2)
   2e814:	00a00034 	movhi	r2,32768
   2e818:	10bfffc4 	addi	r2,r2,-1
   2e81c:	18800c26 	beq	r3,r2,2e850 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   2e820:	e0bffd17 	ldw	r2,-12(fp)
   2e824:	10c00917 	ldw	r3,36(r2)
   2e828:	e0bffd17 	ldw	r2,-12(fp)
   2e82c:	10800117 	ldw	r2,4(r2)
   2e830:	1885803a 	cmpltu	r2,r3,r2
   2e834:	10c03fcc 	andi	r3,r2,255
   2e838:	e0bffb17 	ldw	r2,-20(fp)
   2e83c:	10c00015 	stw	r3,0(r2)
      rc = 0;
   2e840:	e03fff15 	stw	zero,-4(fp)
    break;
   2e844:	00000206 	br	2e850 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
   2e848:	0001883a 	nop
   2e84c:	00000106 	br	2e854 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
   2e850:	0001883a 	nop
  }

  return rc;
   2e854:	e0bfff17 	ldw	r2,-4(fp)
}
   2e858:	e037883a 	mov	sp,fp
   2e85c:	df000017 	ldw	fp,0(sp)
   2e860:	dec00104 	addi	sp,sp,4
   2e864:	f800283a 	ret

0002e868 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   2e868:	defff304 	addi	sp,sp,-52
   2e86c:	dfc00c15 	stw	ra,48(sp)
   2e870:	df000b15 	stw	fp,44(sp)
   2e874:	df000b04 	addi	fp,sp,44
   2e878:	e13ff815 	stw	r4,-32(fp)
   2e87c:	e17ff715 	stw	r5,-36(fp)
   2e880:	e1bff615 	stw	r6,-40(fp)
   2e884:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
   2e888:	e0bff717 	ldw	r2,-36(fp)
   2e88c:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2e890:	00004706 	br	2e9b0 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   2e894:	e0bff817 	ldw	r2,-32(fp)
   2e898:	10800a17 	ldw	r2,40(r2)
   2e89c:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
   2e8a0:	e0bff817 	ldw	r2,-32(fp)
   2e8a4:	10800b17 	ldw	r2,44(r2)
   2e8a8:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
   2e8ac:	e0fffd17 	ldw	r3,-12(fp)
   2e8b0:	e0bffc17 	ldw	r2,-16(fp)
   2e8b4:	18800536 	bltu	r3,r2,2e8cc <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   2e8b8:	e0fffd17 	ldw	r3,-12(fp)
   2e8bc:	e0bffc17 	ldw	r2,-16(fp)
   2e8c0:	1885c83a 	sub	r2,r3,r2
   2e8c4:	e0bffe15 	stw	r2,-8(fp)
   2e8c8:	00000406 	br	2e8dc <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   2e8cc:	00c20004 	movi	r3,2048
   2e8d0:	e0bffc17 	ldw	r2,-16(fp)
   2e8d4:	1885c83a 	sub	r2,r3,r2
   2e8d8:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   2e8dc:	e0bffe17 	ldw	r2,-8(fp)
   2e8e0:	10001e26 	beq	r2,zero,2e95c <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   2e8e4:	e0fff617 	ldw	r3,-40(fp)
   2e8e8:	e0bffe17 	ldw	r2,-8(fp)
   2e8ec:	1880022e 	bgeu	r3,r2,2e8f8 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   2e8f0:	e0bff617 	ldw	r2,-40(fp)
   2e8f4:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   2e8f8:	e0bff817 	ldw	r2,-32(fp)
   2e8fc:	10c00e04 	addi	r3,r2,56
   2e900:	e0bffc17 	ldw	r2,-16(fp)
   2e904:	1885883a 	add	r2,r3,r2
   2e908:	e1bffe17 	ldw	r6,-8(fp)
   2e90c:	100b883a 	mov	r5,r2
   2e910:	e13fff17 	ldw	r4,-4(fp)
   2e914:	00252b40 	call	252b4 <memcpy>
      ptr   += n;
   2e918:	e0ffff17 	ldw	r3,-4(fp)
   2e91c:	e0bffe17 	ldw	r2,-8(fp)
   2e920:	1885883a 	add	r2,r3,r2
   2e924:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
   2e928:	e0fff617 	ldw	r3,-40(fp)
   2e92c:	e0bffe17 	ldw	r2,-8(fp)
   2e930:	1885c83a 	sub	r2,r3,r2
   2e934:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e938:	e0fffc17 	ldw	r3,-16(fp)
   2e93c:	e0bffe17 	ldw	r2,-8(fp)
   2e940:	1885883a 	add	r2,r3,r2
   2e944:	10c1ffcc 	andi	r3,r2,2047
   2e948:	e0bff817 	ldw	r2,-32(fp)
   2e94c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   2e950:	e0bff617 	ldw	r2,-40(fp)
   2e954:	00bfcf16 	blt	zero,r2,2e894 <altera_avalon_jtag_uart_read+0x2c>
   2e958:	00000106 	br	2e960 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
   2e95c:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
   2e960:	e0ffff17 	ldw	r3,-4(fp)
   2e964:	e0bff717 	ldw	r2,-36(fp)
   2e968:	1880141e 	bne	r3,r2,2e9bc <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   2e96c:	e0bff517 	ldw	r2,-44(fp)
   2e970:	1090000c 	andi	r2,r2,16384
   2e974:	1000131e 	bne	r2,zero,2e9c4 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   2e978:	0001883a 	nop
   2e97c:	e0bff817 	ldw	r2,-32(fp)
   2e980:	10800a17 	ldw	r2,40(r2)
   2e984:	e0fffd17 	ldw	r3,-12(fp)
   2e988:	1880051e 	bne	r3,r2,2e9a0 <altera_avalon_jtag_uart_read+0x138>
   2e98c:	e0bff817 	ldw	r2,-32(fp)
   2e990:	10c00917 	ldw	r3,36(r2)
   2e994:	e0bff817 	ldw	r2,-32(fp)
   2e998:	10800117 	ldw	r2,4(r2)
   2e99c:	18bff736 	bltu	r3,r2,2e97c <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   2e9a0:	e0bff817 	ldw	r2,-32(fp)
   2e9a4:	10800a17 	ldw	r2,40(r2)
   2e9a8:	e0fffd17 	ldw	r3,-12(fp)
   2e9ac:	18800726 	beq	r3,r2,2e9cc <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
   2e9b0:	e0bff617 	ldw	r2,-40(fp)
   2e9b4:	00bfb716 	blt	zero,r2,2e894 <altera_avalon_jtag_uart_read+0x2c>
   2e9b8:	00000506 	br	2e9d0 <altera_avalon_jtag_uart_read+0x168>
      break;
   2e9bc:	0001883a 	nop
   2e9c0:	00000306 	br	2e9d0 <altera_avalon_jtag_uart_read+0x168>
      break;
   2e9c4:	0001883a 	nop
   2e9c8:	00000106 	br	2e9d0 <altera_avalon_jtag_uart_read+0x168>
      break;
   2e9cc:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   2e9d0:	e0ffff17 	ldw	r3,-4(fp)
   2e9d4:	e0bff717 	ldw	r2,-36(fp)
   2e9d8:	18801926 	beq	r3,r2,2ea40 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
   2e9dc:	0005303a 	rdctl	r2,status
   2e9e0:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e9e4:	e0fff917 	ldw	r3,-28(fp)
   2e9e8:	00bfff84 	movi	r2,-2
   2e9ec:	1884703a 	and	r2,r3,r2
   2e9f0:	1001703a 	wrctl	status,r2
  return context;
   2e9f4:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   2e9f8:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e9fc:	e0bff817 	ldw	r2,-32(fp)
   2ea00:	10800817 	ldw	r2,32(r2)
   2ea04:	10c00054 	ori	r3,r2,1
   2ea08:	e0bff817 	ldw	r2,-32(fp)
   2ea0c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2ea10:	e0bff817 	ldw	r2,-32(fp)
   2ea14:	10800017 	ldw	r2,0(r2)
   2ea18:	10800104 	addi	r2,r2,4
   2ea1c:	1007883a 	mov	r3,r2
   2ea20:	e0bff817 	ldw	r2,-32(fp)
   2ea24:	10800817 	ldw	r2,32(r2)
   2ea28:	18800035 	stwio	r2,0(r3)
   2ea2c:	e0bffb17 	ldw	r2,-20(fp)
   2ea30:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   2ea34:	e0bffa17 	ldw	r2,-24(fp)
   2ea38:	1001703a 	wrctl	status,r2
}
   2ea3c:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   2ea40:	e0ffff17 	ldw	r3,-4(fp)
   2ea44:	e0bff717 	ldw	r2,-36(fp)
   2ea48:	18800426 	beq	r3,r2,2ea5c <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
   2ea4c:	e0ffff17 	ldw	r3,-4(fp)
   2ea50:	e0bff717 	ldw	r2,-36(fp)
   2ea54:	1885c83a 	sub	r2,r3,r2
   2ea58:	00000606 	br	2ea74 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   2ea5c:	e0bff517 	ldw	r2,-44(fp)
   2ea60:	1090000c 	andi	r2,r2,16384
   2ea64:	10000226 	beq	r2,zero,2ea70 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
   2ea68:	00bffd44 	movi	r2,-11
   2ea6c:	00000106 	br	2ea74 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   2ea70:	00bffec4 	movi	r2,-5
}
   2ea74:	e037883a 	mov	sp,fp
   2ea78:	dfc00117 	ldw	ra,4(sp)
   2ea7c:	df000017 	ldw	fp,0(sp)
   2ea80:	dec00204 	addi	sp,sp,8
   2ea84:	f800283a 	ret

0002ea88 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   2ea88:	defff304 	addi	sp,sp,-52
   2ea8c:	dfc00c15 	stw	ra,48(sp)
   2ea90:	df000b15 	stw	fp,44(sp)
   2ea94:	df000b04 	addi	fp,sp,44
   2ea98:	e13ff815 	stw	r4,-32(fp)
   2ea9c:	e17ff715 	stw	r5,-36(fp)
   2eaa0:	e1bff615 	stw	r6,-40(fp)
   2eaa4:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   2eaa8:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   2eaac:	e0bff717 	ldw	r2,-36(fp)
   2eab0:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2eab4:	00003706 	br	2eb94 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   2eab8:	e0bff817 	ldw	r2,-32(fp)
   2eabc:	10800c17 	ldw	r2,48(r2)
   2eac0:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
   2eac4:	e0bff817 	ldw	r2,-32(fp)
   2eac8:	10800d17 	ldw	r2,52(r2)
   2eacc:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
   2ead0:	e0fffc17 	ldw	r3,-16(fp)
   2ead4:	e0bfff17 	ldw	r2,-4(fp)
   2ead8:	1880062e 	bgeu	r3,r2,2eaf4 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   2eadc:	e0ffff17 	ldw	r3,-4(fp)
   2eae0:	e0bffc17 	ldw	r2,-16(fp)
   2eae4:	1885c83a 	sub	r2,r3,r2
   2eae8:	10bfffc4 	addi	r2,r2,-1
   2eaec:	e0bffe15 	stw	r2,-8(fp)
   2eaf0:	00000b06 	br	2eb20 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   2eaf4:	e0bfff17 	ldw	r2,-4(fp)
   2eaf8:	10000526 	beq	r2,zero,2eb10 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   2eafc:	00c20004 	movi	r3,2048
   2eb00:	e0bffc17 	ldw	r2,-16(fp)
   2eb04:	1885c83a 	sub	r2,r3,r2
   2eb08:	e0bffe15 	stw	r2,-8(fp)
   2eb0c:	00000406 	br	2eb20 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   2eb10:	00c1ffc4 	movi	r3,2047
   2eb14:	e0bffc17 	ldw	r2,-16(fp)
   2eb18:	1885c83a 	sub	r2,r3,r2
   2eb1c:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   2eb20:	e0bffe17 	ldw	r2,-8(fp)
   2eb24:	10001e26 	beq	r2,zero,2eba0 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   2eb28:	e0fff617 	ldw	r3,-40(fp)
   2eb2c:	e0bffe17 	ldw	r2,-8(fp)
   2eb30:	1880022e 	bgeu	r3,r2,2eb3c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   2eb34:	e0bff617 	ldw	r2,-40(fp)
   2eb38:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   2eb3c:	e0bff817 	ldw	r2,-32(fp)
   2eb40:	10c20e04 	addi	r3,r2,2104
   2eb44:	e0bffc17 	ldw	r2,-16(fp)
   2eb48:	1885883a 	add	r2,r3,r2
   2eb4c:	e1bffe17 	ldw	r6,-8(fp)
   2eb50:	e17ff717 	ldw	r5,-36(fp)
   2eb54:	1009883a 	mov	r4,r2
   2eb58:	00252b40 	call	252b4 <memcpy>
      ptr   += n;
   2eb5c:	e0fff717 	ldw	r3,-36(fp)
   2eb60:	e0bffe17 	ldw	r2,-8(fp)
   2eb64:	1885883a 	add	r2,r3,r2
   2eb68:	e0bff715 	stw	r2,-36(fp)
      count -= n;
   2eb6c:	e0fff617 	ldw	r3,-40(fp)
   2eb70:	e0bffe17 	ldw	r2,-8(fp)
   2eb74:	1885c83a 	sub	r2,r3,r2
   2eb78:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2eb7c:	e0fffc17 	ldw	r3,-16(fp)
   2eb80:	e0bffe17 	ldw	r2,-8(fp)
   2eb84:	1885883a 	add	r2,r3,r2
   2eb88:	10c1ffcc 	andi	r3,r2,2047
   2eb8c:	e0bff817 	ldw	r2,-32(fp)
   2eb90:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
   2eb94:	e0bff617 	ldw	r2,-40(fp)
   2eb98:	00bfc716 	blt	zero,r2,2eab8 <altera_avalon_jtag_uart_write+0x30>
   2eb9c:	00000106 	br	2eba4 <altera_avalon_jtag_uart_write+0x11c>
        break;
   2eba0:	0001883a 	nop
  NIOS2_READ_STATUS (context);
   2eba4:	0005303a 	rdctl	r2,status
   2eba8:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ebac:	e0fff917 	ldw	r3,-28(fp)
   2ebb0:	00bfff84 	movi	r2,-2
   2ebb4:	1884703a 	and	r2,r3,r2
   2ebb8:	1001703a 	wrctl	status,r2
  return context;
   2ebbc:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   2ebc0:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2ebc4:	e0bff817 	ldw	r2,-32(fp)
   2ebc8:	10800817 	ldw	r2,32(r2)
   2ebcc:	10c00094 	ori	r3,r2,2
   2ebd0:	e0bff817 	ldw	r2,-32(fp)
   2ebd4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2ebd8:	e0bff817 	ldw	r2,-32(fp)
   2ebdc:	10800017 	ldw	r2,0(r2)
   2ebe0:	10800104 	addi	r2,r2,4
   2ebe4:	1007883a 	mov	r3,r2
   2ebe8:	e0bff817 	ldw	r2,-32(fp)
   2ebec:	10800817 	ldw	r2,32(r2)
   2ebf0:	18800035 	stwio	r2,0(r3)
   2ebf4:	e0bffb17 	ldw	r2,-20(fp)
   2ebf8:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   2ebfc:	e0bffa17 	ldw	r2,-24(fp)
   2ec00:	1001703a 	wrctl	status,r2
}
   2ec04:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   2ec08:	e0bff617 	ldw	r2,-40(fp)
   2ec0c:	0080100e 	bge	zero,r2,2ec50 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
   2ec10:	e0bff517 	ldw	r2,-44(fp)
   2ec14:	1090000c 	andi	r2,r2,16384
   2ec18:	1000101e 	bne	r2,zero,2ec5c <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   2ec1c:	0001883a 	nop
   2ec20:	e0bff817 	ldw	r2,-32(fp)
   2ec24:	10800d17 	ldw	r2,52(r2)
   2ec28:	e0ffff17 	ldw	r3,-4(fp)
   2ec2c:	1880051e 	bne	r3,r2,2ec44 <altera_avalon_jtag_uart_write+0x1bc>
   2ec30:	e0bff817 	ldw	r2,-32(fp)
   2ec34:	10c00917 	ldw	r3,36(r2)
   2ec38:	e0bff817 	ldw	r2,-32(fp)
   2ec3c:	10800117 	ldw	r2,4(r2)
   2ec40:	18bff736 	bltu	r3,r2,2ec20 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   2ec44:	e0bff817 	ldw	r2,-32(fp)
   2ec48:	10800917 	ldw	r2,36(r2)
   2ec4c:	1000051e 	bne	r2,zero,2ec64 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
   2ec50:	e0bff617 	ldw	r2,-40(fp)
   2ec54:	00bfcf16 	blt	zero,r2,2eb94 <altera_avalon_jtag_uart_write+0x10c>
   2ec58:	00000306 	br	2ec68 <altera_avalon_jtag_uart_write+0x1e0>
        break;
   2ec5c:	0001883a 	nop
   2ec60:	00000106 	br	2ec68 <altera_avalon_jtag_uart_write+0x1e0>
         break;
   2ec64:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   2ec68:	e0fff717 	ldw	r3,-36(fp)
   2ec6c:	e0bffd17 	ldw	r2,-12(fp)
   2ec70:	18800426 	beq	r3,r2,2ec84 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
   2ec74:	e0fff717 	ldw	r3,-36(fp)
   2ec78:	e0bffd17 	ldw	r2,-12(fp)
   2ec7c:	1885c83a 	sub	r2,r3,r2
   2ec80:	00000606 	br	2ec9c <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
   2ec84:	e0bff517 	ldw	r2,-44(fp)
   2ec88:	1090000c 	andi	r2,r2,16384
   2ec8c:	10000226 	beq	r2,zero,2ec98 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
   2ec90:	00bffd44 	movi	r2,-11
   2ec94:	00000106 	br	2ec9c <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   2ec98:	00bffec4 	movi	r2,-5
}
   2ec9c:	e037883a 	mov	sp,fp
   2eca0:	dfc00117 	ldw	ra,4(sp)
   2eca4:	df000017 	ldw	fp,0(sp)
   2eca8:	dec00204 	addi	sp,sp,8
   2ecac:	f800283a 	ret

0002ecb0 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   2ecb0:	defff904 	addi	sp,sp,-28
   2ecb4:	dfc00615 	stw	ra,24(sp)
   2ecb8:	df000515 	stw	fp,20(sp)
   2ecbc:	df000504 	addi	fp,sp,20
   2ecc0:	e13ffc15 	stw	r4,-16(fp)
   2ecc4:	e17ffb15 	stw	r5,-20(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   2ecc8:	0007883a 	mov	r3,zero
   2eccc:	e0bffc17 	ldw	r2,-16(fp)
   2ecd0:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   2ecd4:	e0bffc17 	ldw	r2,-16(fp)
   2ecd8:	10800104 	addi	r2,r2,4
   2ecdc:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
   2ece0:	0005303a 	rdctl	r2,status
   2ece4:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ece8:	e0fffd17 	ldw	r3,-12(fp)
   2ecec:	00bfff84 	movi	r2,-2
   2ecf0:	1884703a 	and	r2,r3,r2
   2ecf4:	1001703a 	wrctl	status,r2
  return context;
   2ecf8:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   2ecfc:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
   2ed00:	002f8dc0 	call	2f8dc <alt_tick>
   2ed04:	e0bfff17 	ldw	r2,-4(fp)
   2ed08:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   2ed0c:	e0bffe17 	ldw	r2,-8(fp)
   2ed10:	1001703a 	wrctl	status,r2
}
   2ed14:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
   2ed18:	0001883a 	nop
   2ed1c:	e037883a 	mov	sp,fp
   2ed20:	dfc00117 	ldw	ra,4(sp)
   2ed24:	df000017 	ldw	fp,0(sp)
   2ed28:	dec00204 	addi	sp,sp,8
   2ed2c:	f800283a 	ret

0002ed30 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   2ed30:	defff904 	addi	sp,sp,-28
   2ed34:	dfc00615 	stw	ra,24(sp)
   2ed38:	df000515 	stw	fp,20(sp)
   2ed3c:	df000504 	addi	fp,sp,20
   2ed40:	e13ffe15 	stw	r4,-8(fp)
   2ed44:	e17ffd15 	stw	r5,-12(fp)
   2ed48:	e1bffc15 	stw	r6,-16(fp)
   2ed4c:	e1fffb15 	stw	r7,-20(fp)
   2ed50:	e0bffb17 	ldw	r2,-20(fp)
   2ed54:	e0bfff15 	stw	r2,-4(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   2ed58:	d0a72e17 	ldw	r2,-25416(gp)
   2ed5c:	1000031e 	bne	r2,zero,2ed6c <alt_avalon_timer_sc_init+0x3c>
  {
    _alt_tick_rate = nticks;
   2ed60:	e0bfff17 	ldw	r2,-4(fp)
   2ed64:	d0a72e15 	stw	r2,-25416(gp)
    return 0;
   2ed68:	00000106 	br	2ed70 <alt_avalon_timer_sc_init+0x40>
  }
  else
  {
    return -1;
   2ed6c:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   2ed70:	e0bffe17 	ldw	r2,-8(fp)
   2ed74:	10800104 	addi	r2,r2,4
   2ed78:	00c001c4 	movi	r3,7
   2ed7c:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
   2ed80:	018000f4 	movhi	r6,3
   2ed84:	31bb2c04 	addi	r6,r6,-4944
   2ed88:	e17ffe17 	ldw	r5,-8(fp)
   2ed8c:	e13ffc17 	ldw	r4,-16(fp)
   2ed90:	002d2440 	call	2d244 <alt_irq_register>
#endif  
}
   2ed94:	0001883a 	nop
   2ed98:	e037883a 	mov	sp,fp
   2ed9c:	dfc00117 	ldw	ra,4(sp)
   2eda0:	df000017 	ldw	fp,0(sp)
   2eda4:	dec00204 	addi	sp,sp,8
   2eda8:	f800283a 	ret

0002edac <alt_up_accelerometer_spi_open_dev>:

#include "altera_up_avalon_accelerometer_spi.h"
#include "altera_up_avalon_accelerometer_spi_regs.h"

alt_up_accelerometer_spi_dev* alt_up_accelerometer_spi_open_dev(const char* name)
{
   2edac:	defffc04 	addi	sp,sp,-16
   2edb0:	dfc00315 	stw	ra,12(sp)
   2edb4:	df000215 	stw	fp,8(sp)
   2edb8:	df000204 	addi	fp,sp,8
   2edbc:	e13ffe15 	stw	r4,-8(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_accelerometer_spi_dev *dev = (alt_up_accelerometer_spi_dev*)alt_find_dev(name, &alt_dev_list);
   2edc0:	d1600b04 	addi	r5,gp,-32724
   2edc4:	e13ffe17 	ldw	r4,-8(fp)
   2edc8:	002f4780 	call	2f478 <alt_find_dev>
   2edcc:	e0bfff15 	stw	r2,-4(fp)

  return dev;
   2edd0:	e0bfff17 	ldw	r2,-4(fp)
}
   2edd4:	e037883a 	mov	sp,fp
   2edd8:	dfc00117 	ldw	ra,4(sp)
   2eddc:	df000017 	ldw	fp,0(sp)
   2ede0:	dec00204 	addi	sp,sp,8
   2ede4:	f800283a 	ret

0002ede8 <alt_up_accelerometer_spi_read_address_register>:
 * @param addr -- a pointer to the location where the read address should be stored
 *
 * @return 0 for success 
 **/
int alt_up_accelerometer_spi_read_address_register(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 *addr)
{
   2ede8:	defffd04 	addi	sp,sp,-12
   2edec:	df000215 	stw	fp,8(sp)
   2edf0:	df000204 	addi	fp,sp,8
   2edf4:	e13fff15 	stw	r4,-4(fp)
   2edf8:	e17ffe15 	stw	r5,-8(fp)
	// reads data from the device Address register
	*(addr) = IORD_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base); 
   2edfc:	e0bfff17 	ldw	r2,-4(fp)
   2ee00:	10800a17 	ldw	r2,40(r2)
   2ee04:	10800023 	ldbuio	r2,0(r2)
   2ee08:	10803fcc 	andi	r2,r2,255
   2ee0c:	1007883a 	mov	r3,r2
   2ee10:	e0bffe17 	ldw	r2,-8(fp)
   2ee14:	10c00005 	stb	r3,0(r2)

	return 0;
   2ee18:	0005883a 	mov	r2,zero
}
   2ee1c:	e037883a 	mov	sp,fp
   2ee20:	df000017 	ldw	fp,0(sp)
   2ee24:	dec00104 	addi	sp,sp,4
   2ee28:	f800283a 	ret

0002ee2c <alt_up_accelerometer_spi_read>:
 * @param data -- a pointer to the location where the read data should be stored
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_read(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 *data)
{
   2ee2c:	defffc04 	addi	sp,sp,-16
   2ee30:	df000315 	stw	fp,12(sp)
   2ee34:	df000304 	addi	fp,sp,12
   2ee38:	e13fff15 	stw	r4,-4(fp)
   2ee3c:	2805883a 	mov	r2,r5
   2ee40:	e1bffd15 	stw	r6,-12(fp)
   2ee44:	e0bffe05 	stb	r2,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2ee48:	e0bfff17 	ldw	r2,-4(fp)
   2ee4c:	10800a17 	ldw	r2,40(r2)
   2ee50:	1007883a 	mov	r3,r2
   2ee54:	e0bffe03 	ldbu	r2,-8(fp)
   2ee58:	10800fcc 	andi	r2,r2,63
   2ee5c:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(data) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2ee60:	e0bfff17 	ldw	r2,-4(fp)
   2ee64:	10800a17 	ldw	r2,40(r2)
   2ee68:	10800044 	addi	r2,r2,1
   2ee6c:	10800023 	ldbuio	r2,0(r2)
   2ee70:	10803fcc 	andi	r2,r2,255
   2ee74:	1007883a 	mov	r3,r2
   2ee78:	e0bffd17 	ldw	r2,-12(fp)
   2ee7c:	10c00005 	stb	r3,0(r2)

	return 0;
   2ee80:	0005883a 	mov	r2,zero
}
   2ee84:	e037883a 	mov	sp,fp
   2ee88:	df000017 	ldw	fp,0(sp)
   2ee8c:	dec00104 	addi	sp,sp,4
   2ee90:	f800283a 	ret

0002ee94 <alt_up_accelerometer_spi_write>:
 * @param data -- the data to be written
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_write(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 data)
{
   2ee94:	defffc04 	addi	sp,sp,-16
   2ee98:	df000315 	stw	fp,12(sp)
   2ee9c:	df000304 	addi	fp,sp,12
   2eea0:	e13fff15 	stw	r4,-4(fp)
   2eea4:	2805883a 	mov	r2,r5
   2eea8:	3007883a 	mov	r3,r6
   2eeac:	e0bffe05 	stb	r2,-8(fp)
   2eeb0:	1805883a 	mov	r2,r3
   2eeb4:	e0bffd05 	stb	r2,-12(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2eeb8:	e0bfff17 	ldw	r2,-4(fp)
   2eebc:	10800a17 	ldw	r2,40(r2)
   2eec0:	1007883a 	mov	r3,r2
   2eec4:	e0bffe03 	ldbu	r2,-8(fp)
   2eec8:	10800fcc 	andi	r2,r2,63
   2eecc:	18800025 	stbio	r2,0(r3)

	// write data to the device Data register
	IOWR_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base, data & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK); 
   2eed0:	e0bfff17 	ldw	r2,-4(fp)
   2eed4:	10800a17 	ldw	r2,40(r2)
   2eed8:	10800044 	addi	r2,r2,1
   2eedc:	1007883a 	mov	r3,r2
   2eee0:	e0bffd03 	ldbu	r2,-12(fp)
   2eee4:	18800025 	stbio	r2,0(r3)

	return 0;
   2eee8:	0005883a 	mov	r2,zero
}
   2eeec:	e037883a 	mov	sp,fp
   2eef0:	df000017 	ldw	fp,0(sp)
   2eef4:	dec00104 	addi	sp,sp,4
   2eef8:	f800283a 	ret

0002eefc <alt_up_accelerometer_spi_read_x_axis>:
 * @param x_axis -- a pointer to the location where the x axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_x_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *x_axis)
{
   2eefc:	defffd04 	addi	sp,sp,-12
   2ef00:	df000215 	stw	fp,8(sp)
   2ef04:	df000204 	addi	fp,sp,8
   2ef08:	e13fff15 	stw	r4,-4(fp)
   2ef0c:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2ef10:	e0bfff17 	ldw	r2,-4(fp)
   2ef14:	10800a17 	ldw	r2,40(r2)
   2ef18:	1007883a 	mov	r3,r2
   2ef1c:	00800c84 	movi	r2,50
   2ef20:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2ef24:	e0bfff17 	ldw	r2,-4(fp)
   2ef28:	10800a17 	ldw	r2,40(r2)
   2ef2c:	10800044 	addi	r2,r2,1
   2ef30:	10800023 	ldbuio	r2,0(r2)
   2ef34:	10803fcc 	andi	r2,r2,255
   2ef38:	10ffffcc 	andi	r3,r2,65535
   2ef3c:	e0bffe17 	ldw	r2,-8(fp)
   2ef40:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2ef44:	e0bfff17 	ldw	r2,-4(fp)
   2ef48:	10800a17 	ldw	r2,40(r2)
   2ef4c:	1007883a 	mov	r3,r2
   2ef50:	00800cc4 	movi	r2,51
   2ef54:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   2ef58:	e0bfff17 	ldw	r2,-4(fp)
   2ef5c:	10800a17 	ldw	r2,40(r2)
   2ef60:	10800044 	addi	r2,r2,1
   2ef64:	10800023 	ldbuio	r2,0(r2)
   2ef68:	10803fcc 	andi	r2,r2,255
   2ef6c:	1006923a 	slli	r3,r2,8
   2ef70:	00804034 	movhi	r2,256
   2ef74:	10bfc004 	addi	r2,r2,-256
   2ef78:	1884703a 	and	r2,r3,r2
   2ef7c:	e0fffe17 	ldw	r3,-8(fp)
   2ef80:	18c00017 	ldw	r3,0(r3)
   2ef84:	10c5883a 	add	r2,r2,r3
   2ef88:	1007883a 	mov	r3,r2
   2ef8c:	e0bffe17 	ldw	r2,-8(fp)
   2ef90:	10c00015 	stw	r3,0(r2)

	if (*(x_axis) & 0x00008000)
   2ef94:	e0bffe17 	ldw	r2,-8(fp)
   2ef98:	10800017 	ldw	r2,0(r2)
   2ef9c:	10a0000c 	andi	r2,r2,32768
   2efa0:	10000626 	beq	r2,zero,2efbc <alt_up_accelerometer_spi_read_x_axis+0xc0>
	{
		*(x_axis) |= 0xFFFF0000;
   2efa4:	e0bffe17 	ldw	r2,-8(fp)
   2efa8:	10800017 	ldw	r2,0(r2)
   2efac:	10bffff4 	orhi	r2,r2,65535
   2efb0:	1007883a 	mov	r3,r2
   2efb4:	e0bffe17 	ldw	r2,-8(fp)
   2efb8:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   2efbc:	0005883a 	mov	r2,zero
}
   2efc0:	e037883a 	mov	sp,fp
   2efc4:	df000017 	ldw	fp,0(sp)
   2efc8:	dec00104 	addi	sp,sp,4
   2efcc:	f800283a 	ret

0002efd0 <alt_up_accelerometer_spi_read_y_axis>:
 * @param y_axis -- a pointer to the location where the y axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_y_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *y_axis)
{
   2efd0:	defffd04 	addi	sp,sp,-12
   2efd4:	df000215 	stw	fp,8(sp)
   2efd8:	df000204 	addi	fp,sp,8
   2efdc:	e13fff15 	stw	r4,-4(fp)
   2efe0:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2efe4:	e0bfff17 	ldw	r2,-4(fp)
   2efe8:	10800a17 	ldw	r2,40(r2)
   2efec:	1007883a 	mov	r3,r2
   2eff0:	00800d04 	movi	r2,52
   2eff4:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2eff8:	e0bfff17 	ldw	r2,-4(fp)
   2effc:	10800a17 	ldw	r2,40(r2)
   2f000:	10800044 	addi	r2,r2,1
   2f004:	10800023 	ldbuio	r2,0(r2)
   2f008:	10803fcc 	andi	r2,r2,255
   2f00c:	10ffffcc 	andi	r3,r2,65535
   2f010:	e0bffe17 	ldw	r2,-8(fp)
   2f014:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f018:	e0bfff17 	ldw	r2,-4(fp)
   2f01c:	10800a17 	ldw	r2,40(r2)
   2f020:	1007883a 	mov	r3,r2
   2f024:	00800d44 	movi	r2,53
   2f028:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   2f02c:	e0bfff17 	ldw	r2,-4(fp)
   2f030:	10800a17 	ldw	r2,40(r2)
   2f034:	10800044 	addi	r2,r2,1
   2f038:	10800023 	ldbuio	r2,0(r2)
   2f03c:	10803fcc 	andi	r2,r2,255
   2f040:	1006923a 	slli	r3,r2,8
   2f044:	00804034 	movhi	r2,256
   2f048:	10bfc004 	addi	r2,r2,-256
   2f04c:	1884703a 	and	r2,r3,r2
   2f050:	e0fffe17 	ldw	r3,-8(fp)
   2f054:	18c00017 	ldw	r3,0(r3)
   2f058:	10c5883a 	add	r2,r2,r3
   2f05c:	1007883a 	mov	r3,r2
   2f060:	e0bffe17 	ldw	r2,-8(fp)
   2f064:	10c00015 	stw	r3,0(r2)

	if (*(y_axis) & 0x00008000)
   2f068:	e0bffe17 	ldw	r2,-8(fp)
   2f06c:	10800017 	ldw	r2,0(r2)
   2f070:	10a0000c 	andi	r2,r2,32768
   2f074:	10000626 	beq	r2,zero,2f090 <alt_up_accelerometer_spi_read_y_axis+0xc0>
	{
		*(y_axis) |= 0xFFFF0000;
   2f078:	e0bffe17 	ldw	r2,-8(fp)
   2f07c:	10800017 	ldw	r2,0(r2)
   2f080:	10bffff4 	orhi	r2,r2,65535
   2f084:	1007883a 	mov	r3,r2
   2f088:	e0bffe17 	ldw	r2,-8(fp)
   2f08c:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   2f090:	0005883a 	mov	r2,zero
}
   2f094:	e037883a 	mov	sp,fp
   2f098:	df000017 	ldw	fp,0(sp)
   2f09c:	dec00104 	addi	sp,sp,4
   2f0a0:	f800283a 	ret

0002f0a4 <alt_up_accelerometer_spi_read_z_axis>:
 * @param z_axis -- a pointer to the location where the z axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_z_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *z_axis)
{
   2f0a4:	defffd04 	addi	sp,sp,-12
   2f0a8:	df000215 	stw	fp,8(sp)
   2f0ac:	df000204 	addi	fp,sp,8
   2f0b0:	e13fff15 	stw	r4,-4(fp)
   2f0b4:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f0b8:	e0bfff17 	ldw	r2,-4(fp)
   2f0bc:	10800a17 	ldw	r2,40(r2)
   2f0c0:	1007883a 	mov	r3,r2
   2f0c4:	00800d84 	movi	r2,54
   2f0c8:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2f0cc:	e0bfff17 	ldw	r2,-4(fp)
   2f0d0:	10800a17 	ldw	r2,40(r2)
   2f0d4:	10800044 	addi	r2,r2,1
   2f0d8:	10800023 	ldbuio	r2,0(r2)
   2f0dc:	10803fcc 	andi	r2,r2,255
   2f0e0:	10ffffcc 	andi	r3,r2,65535
   2f0e4:	e0bffe17 	ldw	r2,-8(fp)
   2f0e8:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f0ec:	e0bfff17 	ldw	r2,-4(fp)
   2f0f0:	10800a17 	ldw	r2,40(r2)
   2f0f4:	1007883a 	mov	r3,r2
   2f0f8:	00800dc4 	movi	r2,55
   2f0fc:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   2f100:	e0bfff17 	ldw	r2,-4(fp)
   2f104:	10800a17 	ldw	r2,40(r2)
   2f108:	10800044 	addi	r2,r2,1
   2f10c:	10800023 	ldbuio	r2,0(r2)
   2f110:	10803fcc 	andi	r2,r2,255
   2f114:	1006923a 	slli	r3,r2,8
   2f118:	00804034 	movhi	r2,256
   2f11c:	10bfc004 	addi	r2,r2,-256
   2f120:	1884703a 	and	r2,r3,r2
   2f124:	e0fffe17 	ldw	r3,-8(fp)
   2f128:	18c00017 	ldw	r3,0(r3)
   2f12c:	10c5883a 	add	r2,r2,r3
   2f130:	1007883a 	mov	r3,r2
   2f134:	e0bffe17 	ldw	r2,-8(fp)
   2f138:	10c00015 	stw	r3,0(r2)

	if (*(z_axis) & 0x00008000)
   2f13c:	e0bffe17 	ldw	r2,-8(fp)
   2f140:	10800017 	ldw	r2,0(r2)
   2f144:	10a0000c 	andi	r2,r2,32768
   2f148:	10000626 	beq	r2,zero,2f164 <alt_up_accelerometer_spi_read_z_axis+0xc0>
	{
		*(z_axis) |= 0xFFFF0000;
   2f14c:	e0bffe17 	ldw	r2,-8(fp)
   2f150:	10800017 	ldw	r2,0(r2)
   2f154:	10bffff4 	orhi	r2,r2,65535
   2f158:	1007883a 	mov	r3,r2
   2f15c:	e0bffe17 	ldw	r2,-8(fp)
   2f160:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   2f164:	0005883a 	mov	r2,zero
}
   2f168:	e037883a 	mov	sp,fp
   2f16c:	df000017 	ldw	fp,0(sp)
   2f170:	dec00104 	addi	sp,sp,4
   2f174:	f800283a 	ret

0002f178 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   2f178:	defff504 	addi	sp,sp,-44
   2f17c:	df000a15 	stw	fp,40(sp)
   2f180:	df000a04 	addi	fp,sp,40
   2f184:	e13ff915 	stw	r4,-28(fp)
   2f188:	e17ff815 	stw	r5,-32(fp)
   2f18c:	e1bff715 	stw	r6,-36(fp)
   2f190:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   2f194:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
   2f198:	d0a72e17 	ldw	r2,-25416(gp)
  
  if (alt_ticks_per_second ())
   2f19c:	10003e26 	beq	r2,zero,2f298 <alt_alarm_start+0x120>
  {
    if (alarm)
   2f1a0:	e0bff917 	ldw	r2,-28(fp)
   2f1a4:	10003a26 	beq	r2,zero,2f290 <alt_alarm_start+0x118>
    {
      alarm->callback = callback;
   2f1a8:	e0bff917 	ldw	r2,-28(fp)
   2f1ac:	e0fff717 	ldw	r3,-36(fp)
   2f1b0:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   2f1b4:	e0bff917 	ldw	r2,-28(fp)
   2f1b8:	e0fff617 	ldw	r3,-40(fp)
   2f1bc:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
   2f1c0:	0005303a 	rdctl	r2,status
   2f1c4:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f1c8:	e0fffd17 	ldw	r3,-12(fp)
   2f1cc:	00bfff84 	movi	r2,-2
   2f1d0:	1884703a 	and	r2,r3,r2
   2f1d4:	1001703a 	wrctl	status,r2
  return context;
   2f1d8:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
   2f1dc:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   2f1e0:	d0a72f17 	ldw	r2,-25412(gp)
      
      current_nticks = alt_nticks();
   2f1e4:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   2f1e8:	e0fff817 	ldw	r3,-32(fp)
   2f1ec:	e0bfff17 	ldw	r2,-4(fp)
   2f1f0:	1885883a 	add	r2,r3,r2
   2f1f4:	10c00044 	addi	r3,r2,1
   2f1f8:	e0bff917 	ldw	r2,-28(fp)
   2f1fc:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   2f200:	e0bff917 	ldw	r2,-28(fp)
   2f204:	10c00217 	ldw	r3,8(r2)
   2f208:	e0bfff17 	ldw	r2,-4(fp)
   2f20c:	1880042e 	bgeu	r3,r2,2f220 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   2f210:	e0bff917 	ldw	r2,-28(fp)
   2f214:	00c00044 	movi	r3,1
   2f218:	10c00405 	stb	r3,16(r2)
   2f21c:	00000206 	br	2f228 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   2f220:	e0bff917 	ldw	r2,-28(fp)
   2f224:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   2f228:	e0bff917 	ldw	r2,-28(fp)
   2f22c:	d0e01104 	addi	r3,gp,-32700
   2f230:	e0fffb15 	stw	r3,-20(fp)
   2f234:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2f238:	e0bffa17 	ldw	r2,-24(fp)
   2f23c:	e0fffb17 	ldw	r3,-20(fp)
   2f240:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2f244:	e0bffb17 	ldw	r2,-20(fp)
   2f248:	10c00017 	ldw	r3,0(r2)
   2f24c:	e0bffa17 	ldw	r2,-24(fp)
   2f250:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2f254:	e0bffb17 	ldw	r2,-20(fp)
   2f258:	10800017 	ldw	r2,0(r2)
   2f25c:	e0fffa17 	ldw	r3,-24(fp)
   2f260:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2f264:	e0bffb17 	ldw	r2,-20(fp)
   2f268:	e0fffa17 	ldw	r3,-24(fp)
   2f26c:	10c00015 	stw	r3,0(r2)
}
   2f270:	0001883a 	nop
   2f274:	e0bffe17 	ldw	r2,-8(fp)
   2f278:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   2f27c:	e0bffc17 	ldw	r2,-16(fp)
   2f280:	1001703a 	wrctl	status,r2
}
   2f284:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
   2f288:	0005883a 	mov	r2,zero
   2f28c:	00000306 	br	2f29c <alt_alarm_start+0x124>
    }
    else
    {
      return -EINVAL;
   2f290:	00bffa84 	movi	r2,-22
   2f294:	00000106 	br	2f29c <alt_alarm_start+0x124>
    }
  }
  else
  {
    return -ENOTSUP;
   2f298:	00bfde84 	movi	r2,-134
  }
}
   2f29c:	e037883a 	mov	sp,fp
   2f2a0:	df000017 	ldw	fp,0(sp)
   2f2a4:	dec00104 	addi	sp,sp,4
   2f2a8:	f800283a 	ret

0002f2ac <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   2f2ac:	deffff04 	addi	sp,sp,-4
   2f2b0:	df000015 	stw	fp,0(sp)
   2f2b4:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   2f2b8:	0001883a 	nop
   2f2bc:	e037883a 	mov	sp,fp
   2f2c0:	df000017 	ldw	fp,0(sp)
   2f2c4:	dec00104 	addi	sp,sp,4
   2f2c8:	f800283a 	ret

0002f2cc <alt_get_errno>:
{
   2f2cc:	defffe04 	addi	sp,sp,-8
   2f2d0:	dfc00115 	stw	ra,4(sp)
   2f2d4:	df000015 	stw	fp,0(sp)
   2f2d8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2f2dc:	d0a00e17 	ldw	r2,-32712(gp)
   2f2e0:	10000326 	beq	r2,zero,2f2f0 <alt_get_errno+0x24>
   2f2e4:	d0a00e17 	ldw	r2,-32712(gp)
   2f2e8:	103ee83a 	callr	r2
   2f2ec:	00000106 	br	2f2f4 <alt_get_errno+0x28>
   2f2f0:	d0a72504 	addi	r2,gp,-25452
}
   2f2f4:	e037883a 	mov	sp,fp
   2f2f8:	dfc00117 	ldw	ra,4(sp)
   2f2fc:	df000017 	ldw	fp,0(sp)
   2f300:	dec00204 	addi	sp,sp,8
   2f304:	f800283a 	ret

0002f308 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   2f308:	defffa04 	addi	sp,sp,-24
   2f30c:	dfc00515 	stw	ra,20(sp)
   2f310:	df000415 	stw	fp,16(sp)
   2f314:	df000404 	addi	fp,sp,16
   2f318:	e13ffd15 	stw	r4,-12(fp)
   2f31c:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   2f320:	e0bffd17 	ldw	r2,-12(fp)
   2f324:	10000326 	beq	r2,zero,2f334 <alt_dev_llist_insert+0x2c>
   2f328:	e0bffd17 	ldw	r2,-12(fp)
   2f32c:	10800217 	ldw	r2,8(r2)
   2f330:	1000061e 	bne	r2,zero,2f34c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   2f334:	002f2cc0 	call	2f2cc <alt_get_errno>
   2f338:	1007883a 	mov	r3,r2
   2f33c:	00800584 	movi	r2,22
   2f340:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   2f344:	00bffa84 	movi	r2,-22
   2f348:	00001406 	br	2f39c <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   2f34c:	e0bffd17 	ldw	r2,-12(fp)
   2f350:	e0fffc17 	ldw	r3,-16(fp)
   2f354:	e0ffff15 	stw	r3,-4(fp)
   2f358:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
   2f35c:	e0bffe17 	ldw	r2,-8(fp)
   2f360:	e0ffff17 	ldw	r3,-4(fp)
   2f364:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2f368:	e0bfff17 	ldw	r2,-4(fp)
   2f36c:	10c00017 	ldw	r3,0(r2)
   2f370:	e0bffe17 	ldw	r2,-8(fp)
   2f374:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
   2f378:	e0bfff17 	ldw	r2,-4(fp)
   2f37c:	10800017 	ldw	r2,0(r2)
   2f380:	e0fffe17 	ldw	r3,-8(fp)
   2f384:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2f388:	e0bfff17 	ldw	r2,-4(fp)
   2f38c:	e0fffe17 	ldw	r3,-8(fp)
   2f390:	10c00015 	stw	r3,0(r2)
}
   2f394:	0001883a 	nop

  return 0;  
   2f398:	0005883a 	mov	r2,zero
}
   2f39c:	e037883a 	mov	sp,fp
   2f3a0:	dfc00117 	ldw	ra,4(sp)
   2f3a4:	df000017 	ldw	fp,0(sp)
   2f3a8:	dec00204 	addi	sp,sp,8
   2f3ac:	f800283a 	ret

0002f3b0 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   2f3b0:	defffd04 	addi	sp,sp,-12
   2f3b4:	dfc00215 	stw	ra,8(sp)
   2f3b8:	df000115 	stw	fp,4(sp)
   2f3bc:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2f3c0:	008000f4 	movhi	r2,3
   2f3c4:	10bfb604 	addi	r2,r2,-296
   2f3c8:	e0bfff15 	stw	r2,-4(fp)
   2f3cc:	00000606 	br	2f3e8 <_do_ctors+0x38>
        (*ctor) (); 
   2f3d0:	e0bfff17 	ldw	r2,-4(fp)
   2f3d4:	10800017 	ldw	r2,0(r2)
   2f3d8:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2f3dc:	e0bfff17 	ldw	r2,-4(fp)
   2f3e0:	10bfff04 	addi	r2,r2,-4
   2f3e4:	e0bfff15 	stw	r2,-4(fp)
   2f3e8:	e0ffff17 	ldw	r3,-4(fp)
   2f3ec:	008000f4 	movhi	r2,3
   2f3f0:	10bfb704 	addi	r2,r2,-292
   2f3f4:	18bff62e 	bgeu	r3,r2,2f3d0 <_do_ctors+0x20>
}
   2f3f8:	0001883a 	nop
   2f3fc:	0001883a 	nop
   2f400:	e037883a 	mov	sp,fp
   2f404:	dfc00117 	ldw	ra,4(sp)
   2f408:	df000017 	ldw	fp,0(sp)
   2f40c:	dec00204 	addi	sp,sp,8
   2f410:	f800283a 	ret

0002f414 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   2f414:	defffd04 	addi	sp,sp,-12
   2f418:	dfc00215 	stw	ra,8(sp)
   2f41c:	df000115 	stw	fp,4(sp)
   2f420:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2f424:	008000f4 	movhi	r2,3
   2f428:	10bfb604 	addi	r2,r2,-296
   2f42c:	e0bfff15 	stw	r2,-4(fp)
   2f430:	00000606 	br	2f44c <_do_dtors+0x38>
        (*dtor) (); 
   2f434:	e0bfff17 	ldw	r2,-4(fp)
   2f438:	10800017 	ldw	r2,0(r2)
   2f43c:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2f440:	e0bfff17 	ldw	r2,-4(fp)
   2f444:	10bfff04 	addi	r2,r2,-4
   2f448:	e0bfff15 	stw	r2,-4(fp)
   2f44c:	e0ffff17 	ldw	r3,-4(fp)
   2f450:	008000f4 	movhi	r2,3
   2f454:	10bfb704 	addi	r2,r2,-292
   2f458:	18bff62e 	bgeu	r3,r2,2f434 <_do_dtors+0x20>
}
   2f45c:	0001883a 	nop
   2f460:	0001883a 	nop
   2f464:	e037883a 	mov	sp,fp
   2f468:	dfc00117 	ldw	ra,4(sp)
   2f46c:	df000017 	ldw	fp,0(sp)
   2f470:	dec00204 	addi	sp,sp,8
   2f474:	f800283a 	ret

0002f478 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   2f478:	defffa04 	addi	sp,sp,-24
   2f47c:	dfc00515 	stw	ra,20(sp)
   2f480:	df000415 	stw	fp,16(sp)
   2f484:	df000404 	addi	fp,sp,16
   2f488:	e13ffd15 	stw	r4,-12(fp)
   2f48c:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
   2f490:	e0bffc17 	ldw	r2,-16(fp)
   2f494:	10800017 	ldw	r2,0(r2)
   2f498:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   2f49c:	e13ffd17 	ldw	r4,-12(fp)
   2f4a0:	00266f80 	call	266f8 <strlen>
   2f4a4:	10800044 	addi	r2,r2,1
   2f4a8:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2f4ac:	00000d06 	br	2f4e4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   2f4b0:	e0bfff17 	ldw	r2,-4(fp)
   2f4b4:	10800217 	ldw	r2,8(r2)
   2f4b8:	e0fffe17 	ldw	r3,-8(fp)
   2f4bc:	180d883a 	mov	r6,r3
   2f4c0:	e17ffd17 	ldw	r5,-12(fp)
   2f4c4:	1009883a 	mov	r4,r2
   2f4c8:	002fae80 	call	2fae8 <memcmp>
   2f4cc:	1000021e 	bne	r2,zero,2f4d8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   2f4d0:	e0bfff17 	ldw	r2,-4(fp)
   2f4d4:	00000706 	br	2f4f4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   2f4d8:	e0bfff17 	ldw	r2,-4(fp)
   2f4dc:	10800017 	ldw	r2,0(r2)
   2f4e0:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
   2f4e4:	e0ffff17 	ldw	r3,-4(fp)
   2f4e8:	e0bffc17 	ldw	r2,-16(fp)
   2f4ec:	18bff01e 	bne	r3,r2,2f4b0 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
   2f4f0:	0005883a 	mov	r2,zero
}
   2f4f4:	e037883a 	mov	sp,fp
   2f4f8:	dfc00117 	ldw	ra,4(sp)
   2f4fc:	df000017 	ldw	fp,0(sp)
   2f500:	dec00204 	addi	sp,sp,8
   2f504:	f800283a 	ret

0002f508 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   2f508:	defffb04 	addi	sp,sp,-20
   2f50c:	dfc00415 	stw	ra,16(sp)
   2f510:	df000315 	stw	fp,12(sp)
   2f514:	df000304 	addi	fp,sp,12
   2f518:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   2f51c:	d0a00917 	ldw	r2,-32732(gp)
   2f520:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2f524:	00003106 	br	2f5ec <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   2f528:	e0bfff17 	ldw	r2,-4(fp)
   2f52c:	10800217 	ldw	r2,8(r2)
   2f530:	1009883a 	mov	r4,r2
   2f534:	00266f80 	call	266f8 <strlen>
   2f538:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   2f53c:	e0bfff17 	ldw	r2,-4(fp)
   2f540:	10c00217 	ldw	r3,8(r2)
   2f544:	e0bffe17 	ldw	r2,-8(fp)
   2f548:	10bfffc4 	addi	r2,r2,-1
   2f54c:	1885883a 	add	r2,r3,r2
   2f550:	10800003 	ldbu	r2,0(r2)
   2f554:	10803fcc 	andi	r2,r2,255
   2f558:	1080201c 	xori	r2,r2,128
   2f55c:	10bfe004 	addi	r2,r2,-128
   2f560:	10800bd8 	cmpnei	r2,r2,47
   2f564:	1000031e 	bne	r2,zero,2f574 <alt_find_file+0x6c>
    {
      len -= 1;
   2f568:	e0bffe17 	ldw	r2,-8(fp)
   2f56c:	10bfffc4 	addi	r2,r2,-1
   2f570:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2f574:	e0bffe17 	ldw	r2,-8(fp)
   2f578:	e0fffd17 	ldw	r3,-12(fp)
   2f57c:	1885883a 	add	r2,r3,r2
   2f580:	10800003 	ldbu	r2,0(r2)
   2f584:	10803fcc 	andi	r2,r2,255
   2f588:	1080201c 	xori	r2,r2,128
   2f58c:	10bfe004 	addi	r2,r2,-128
   2f590:	10800be0 	cmpeqi	r2,r2,47
   2f594:	1000081e 	bne	r2,zero,2f5b8 <alt_find_file+0xb0>
   2f598:	e0bffe17 	ldw	r2,-8(fp)
   2f59c:	e0fffd17 	ldw	r3,-12(fp)
   2f5a0:	1885883a 	add	r2,r3,r2
   2f5a4:	10800003 	ldbu	r2,0(r2)
   2f5a8:	10803fcc 	andi	r2,r2,255
   2f5ac:	1080201c 	xori	r2,r2,128
   2f5b0:	10bfe004 	addi	r2,r2,-128
   2f5b4:	10000a1e 	bne	r2,zero,2f5e0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   2f5b8:	e0bfff17 	ldw	r2,-4(fp)
   2f5bc:	10800217 	ldw	r2,8(r2)
   2f5c0:	e0fffe17 	ldw	r3,-8(fp)
   2f5c4:	180d883a 	mov	r6,r3
   2f5c8:	e17ffd17 	ldw	r5,-12(fp)
   2f5cc:	1009883a 	mov	r4,r2
   2f5d0:	002fae80 	call	2fae8 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
   2f5d4:	1000021e 	bne	r2,zero,2f5e0 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
   2f5d8:	e0bfff17 	ldw	r2,-4(fp)
   2f5dc:	00000706 	br	2f5fc <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   2f5e0:	e0bfff17 	ldw	r2,-4(fp)
   2f5e4:	10800017 	ldw	r2,0(r2)
   2f5e8:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
   2f5ec:	e0ffff17 	ldw	r3,-4(fp)
   2f5f0:	d0a00904 	addi	r2,gp,-32732
   2f5f4:	18bfcc1e 	bne	r3,r2,2f528 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
   2f5f8:	0005883a 	mov	r2,zero
}
   2f5fc:	e037883a 	mov	sp,fp
   2f600:	dfc00117 	ldw	ra,4(sp)
   2f604:	df000017 	ldw	fp,0(sp)
   2f608:	dec00204 	addi	sp,sp,8
   2f60c:	f800283a 	ret

0002f610 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   2f610:	defffc04 	addi	sp,sp,-16
   2f614:	df000315 	stw	fp,12(sp)
   2f618:	df000304 	addi	fp,sp,12
   2f61c:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
   2f620:	00bffa04 	movi	r2,-24
   2f624:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2f628:	e03fff15 	stw	zero,-4(fp)
   2f62c:	00001d06 	br	2f6a4 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
   2f630:	e0ffff17 	ldw	r3,-4(fp)
   2f634:	1805883a 	mov	r2,r3
   2f638:	1085883a 	add	r2,r2,r2
   2f63c:	10c5883a 	add	r2,r2,r3
   2f640:	100490ba 	slli	r2,r2,2
   2f644:	00c000f4 	movhi	r3,3
   2f648:	10c7883a 	add	r3,r2,r3
   2f64c:	18842217 	ldw	r2,4232(r3)
   2f650:	1000111e 	bne	r2,zero,2f698 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
   2f654:	e0ffff17 	ldw	r3,-4(fp)
   2f658:	1805883a 	mov	r2,r3
   2f65c:	1085883a 	add	r2,r2,r2
   2f660:	10c5883a 	add	r2,r2,r3
   2f664:	100490ba 	slli	r2,r2,2
   2f668:	e13ffd17 	ldw	r4,-12(fp)
   2f66c:	00c000f4 	movhi	r3,3
   2f670:	10c7883a 	add	r3,r2,r3
   2f674:	19042215 	stw	r4,4232(r3)
      if (i > alt_max_fd)
   2f678:	d0e00d17 	ldw	r3,-32716(gp)
   2f67c:	e0bfff17 	ldw	r2,-4(fp)
   2f680:	1880020e 	bge	r3,r2,2f68c <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
   2f684:	e0bfff17 	ldw	r2,-4(fp)
   2f688:	d0a00d15 	stw	r2,-32716(gp)
      }
      rc = i;
   2f68c:	e0bfff17 	ldw	r2,-4(fp)
   2f690:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   2f694:	00000706 	br	2f6b4 <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
   2f698:	e0bfff17 	ldw	r2,-4(fp)
   2f69c:	10800044 	addi	r2,r2,1
   2f6a0:	e0bfff15 	stw	r2,-4(fp)
   2f6a4:	e0bfff17 	ldw	r2,-4(fp)
   2f6a8:	10800810 	cmplti	r2,r2,32
   2f6ac:	103fe01e 	bne	r2,zero,2f630 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
   2f6b0:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   2f6b4:	e0bffe17 	ldw	r2,-8(fp)
}
   2f6b8:	e037883a 	mov	sp,fp
   2f6bc:	df000017 	ldw	fp,0(sp)
   2f6c0:	dec00104 	addi	sp,sp,4
   2f6c4:	f800283a 	ret

0002f6c8 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   2f6c8:	deffff04 	addi	sp,sp,-4
   2f6cc:	df000015 	stw	fp,0(sp)
   2f6d0:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   2f6d4:	0001883a 	nop
   2f6d8:	e037883a 	mov	sp,fp
   2f6dc:	df000017 	ldw	fp,0(sp)
   2f6e0:	dec00104 	addi	sp,sp,4
   2f6e4:	f800283a 	ret

0002f6e8 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   2f6e8:	defff904 	addi	sp,sp,-28
   2f6ec:	dfc00615 	stw	ra,24(sp)
   2f6f0:	df000515 	stw	fp,20(sp)
   2f6f4:	df000504 	addi	fp,sp,20
   2f6f8:	e13ffe15 	stw	r4,-8(fp)
   2f6fc:	e17ffd15 	stw	r5,-12(fp)
   2f700:	e1bffc15 	stw	r6,-16(fp)
   2f704:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
   2f708:	e1bffb17 	ldw	r6,-20(fp)
   2f70c:	e17ffc17 	ldw	r5,-16(fp)
   2f710:	e13ffd17 	ldw	r4,-12(fp)
   2f714:	002d9fc0 	call	2d9fc <open>
   2f718:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
   2f71c:	e0bfff17 	ldw	r2,-4(fp)
   2f720:	10002016 	blt	r2,zero,2f7a4 <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
   2f724:	e0ffff17 	ldw	r3,-4(fp)
   2f728:	1805883a 	mov	r2,r3
   2f72c:	1085883a 	add	r2,r2,r2
   2f730:	10c5883a 	add	r2,r2,r3
   2f734:	100490ba 	slli	r2,r2,2
   2f738:	00c000f4 	movhi	r3,3
   2f73c:	10c7883a 	add	r3,r2,r3
   2f740:	18c42217 	ldw	r3,4232(r3)
   2f744:	e0bffe17 	ldw	r2,-8(fp)
   2f748:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   2f74c:	e0ffff17 	ldw	r3,-4(fp)
   2f750:	1805883a 	mov	r2,r3
   2f754:	1085883a 	add	r2,r2,r2
   2f758:	10c5883a 	add	r2,r2,r3
   2f75c:	100490ba 	slli	r2,r2,2
   2f760:	00c000f4 	movhi	r3,3
   2f764:	10c7883a 	add	r3,r2,r3
   2f768:	18c42317 	ldw	r3,4236(r3)
   2f76c:	e0bffe17 	ldw	r2,-8(fp)
   2f770:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   2f774:	e0ffff17 	ldw	r3,-4(fp)
   2f778:	1805883a 	mov	r2,r3
   2f77c:	1085883a 	add	r2,r2,r2
   2f780:	10c5883a 	add	r2,r2,r3
   2f784:	100490ba 	slli	r2,r2,2
   2f788:	00c000f4 	movhi	r3,3
   2f78c:	10c7883a 	add	r3,r2,r3
   2f790:	18c42417 	ldw	r3,4240(r3)
   2f794:	e0bffe17 	ldw	r2,-8(fp)
   2f798:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   2f79c:	e13fff17 	ldw	r4,-4(fp)
   2f7a0:	002defc0 	call	2defc <alt_release_fd>
  }
} 
   2f7a4:	0001883a 	nop
   2f7a8:	e037883a 	mov	sp,fp
   2f7ac:	dfc00117 	ldw	ra,4(sp)
   2f7b0:	df000017 	ldw	fp,0(sp)
   2f7b4:	dec00204 	addi	sp,sp,8
   2f7b8:	f800283a 	ret

0002f7bc <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   2f7bc:	defffb04 	addi	sp,sp,-20
   2f7c0:	dfc00415 	stw	ra,16(sp)
   2f7c4:	df000315 	stw	fp,12(sp)
   2f7c8:	df000304 	addi	fp,sp,12
   2f7cc:	e13fff15 	stw	r4,-4(fp)
   2f7d0:	e17ffe15 	stw	r5,-8(fp)
   2f7d4:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   2f7d8:	01c07fc4 	movi	r7,511
   2f7dc:	01800044 	movi	r6,1
   2f7e0:	e17fff17 	ldw	r5,-4(fp)
   2f7e4:	010000f4 	movhi	r4,3
   2f7e8:	21042504 	addi	r4,r4,4244
   2f7ec:	002f6e80 	call	2f6e8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   2f7f0:	01c07fc4 	movi	r7,511
   2f7f4:	000d883a 	mov	r6,zero
   2f7f8:	e17ffe17 	ldw	r5,-8(fp)
   2f7fc:	010000f4 	movhi	r4,3
   2f800:	21042204 	addi	r4,r4,4232
   2f804:	002f6e80 	call	2f6e8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   2f808:	01c07fc4 	movi	r7,511
   2f80c:	01800044 	movi	r6,1
   2f810:	e17ffd17 	ldw	r5,-12(fp)
   2f814:	010000f4 	movhi	r4,3
   2f818:	21042804 	addi	r4,r4,4256
   2f81c:	002f6e80 	call	2f6e8 <alt_open_fd>
}  
   2f820:	0001883a 	nop
   2f824:	e037883a 	mov	sp,fp
   2f828:	dfc00117 	ldw	ra,4(sp)
   2f82c:	df000017 	ldw	fp,0(sp)
   2f830:	dec00204 	addi	sp,sp,8
   2f834:	f800283a 	ret

0002f838 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   2f838:	defffa04 	addi	sp,sp,-24
   2f83c:	df000515 	stw	fp,20(sp)
   2f840:	df000504 	addi	fp,sp,20
   2f844:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
   2f848:	0005303a 	rdctl	r2,status
   2f84c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f850:	e0fffc17 	ldw	r3,-16(fp)
   2f854:	00bfff84 	movi	r2,-2
   2f858:	1884703a 	and	r2,r3,r2
   2f85c:	1001703a 	wrctl	status,r2
  return context;
   2f860:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   2f864:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
   2f868:	e0bffb17 	ldw	r2,-20(fp)
   2f86c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   2f870:	e0bffd17 	ldw	r2,-12(fp)
   2f874:	10800017 	ldw	r2,0(r2)
   2f878:	e0fffd17 	ldw	r3,-12(fp)
   2f87c:	18c00117 	ldw	r3,4(r3)
   2f880:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   2f884:	e0bffd17 	ldw	r2,-12(fp)
   2f888:	10800117 	ldw	r2,4(r2)
   2f88c:	e0fffd17 	ldw	r3,-12(fp)
   2f890:	18c00017 	ldw	r3,0(r3)
   2f894:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   2f898:	e0bffd17 	ldw	r2,-12(fp)
   2f89c:	e0fffd17 	ldw	r3,-12(fp)
   2f8a0:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   2f8a4:	e0bffd17 	ldw	r2,-12(fp)
   2f8a8:	e0fffd17 	ldw	r3,-12(fp)
   2f8ac:	10c00015 	stw	r3,0(r2)
} 
   2f8b0:	0001883a 	nop
   2f8b4:	e0bfff17 	ldw	r2,-4(fp)
   2f8b8:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   2f8bc:	e0bffe17 	ldw	r2,-8(fp)
   2f8c0:	1001703a 	wrctl	status,r2
}
   2f8c4:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
   2f8c8:	0001883a 	nop
   2f8cc:	e037883a 	mov	sp,fp
   2f8d0:	df000017 	ldw	fp,0(sp)
   2f8d4:	dec00104 	addi	sp,sp,4
   2f8d8:	f800283a 	ret

0002f8dc <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   2f8dc:	defffb04 	addi	sp,sp,-20
   2f8e0:	dfc00415 	stw	ra,16(sp)
   2f8e4:	df000315 	stw	fp,12(sp)
   2f8e8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   2f8ec:	d0a01117 	ldw	r2,-32700(gp)
   2f8f0:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   2f8f4:	d0a72f17 	ldw	r2,-25412(gp)
   2f8f8:	10800044 	addi	r2,r2,1
   2f8fc:	d0a72f15 	stw	r2,-25412(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2f900:	00002e06 	br	2f9bc <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   2f904:	e0bfff17 	ldw	r2,-4(fp)
   2f908:	10800017 	ldw	r2,0(r2)
   2f90c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   2f910:	e0bfff17 	ldw	r2,-4(fp)
   2f914:	10800403 	ldbu	r2,16(r2)
   2f918:	10803fcc 	andi	r2,r2,255
   2f91c:	10000426 	beq	r2,zero,2f930 <alt_tick+0x54>
   2f920:	d0a72f17 	ldw	r2,-25412(gp)
   2f924:	1000021e 	bne	r2,zero,2f930 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   2f928:	e0bfff17 	ldw	r2,-4(fp)
   2f92c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   2f930:	e0bfff17 	ldw	r2,-4(fp)
   2f934:	10800217 	ldw	r2,8(r2)
   2f938:	d0e72f17 	ldw	r3,-25412(gp)
   2f93c:	18801d36 	bltu	r3,r2,2f9b4 <alt_tick+0xd8>
   2f940:	e0bfff17 	ldw	r2,-4(fp)
   2f944:	10800403 	ldbu	r2,16(r2)
   2f948:	10803fcc 	andi	r2,r2,255
   2f94c:	1000191e 	bne	r2,zero,2f9b4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   2f950:	e0bfff17 	ldw	r2,-4(fp)
   2f954:	10800317 	ldw	r2,12(r2)
   2f958:	e0ffff17 	ldw	r3,-4(fp)
   2f95c:	18c00517 	ldw	r3,20(r3)
   2f960:	1809883a 	mov	r4,r3
   2f964:	103ee83a 	callr	r2
   2f968:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   2f96c:	e0bffd17 	ldw	r2,-12(fp)
   2f970:	1000031e 	bne	r2,zero,2f980 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   2f974:	e13fff17 	ldw	r4,-4(fp)
   2f978:	002f8380 	call	2f838 <alt_alarm_stop>
   2f97c:	00000d06 	br	2f9b4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   2f980:	e0bfff17 	ldw	r2,-4(fp)
   2f984:	10c00217 	ldw	r3,8(r2)
   2f988:	e0bffd17 	ldw	r2,-12(fp)
   2f98c:	1887883a 	add	r3,r3,r2
   2f990:	e0bfff17 	ldw	r2,-4(fp)
   2f994:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   2f998:	e0bfff17 	ldw	r2,-4(fp)
   2f99c:	10c00217 	ldw	r3,8(r2)
   2f9a0:	d0a72f17 	ldw	r2,-25412(gp)
   2f9a4:	1880032e 	bgeu	r3,r2,2f9b4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   2f9a8:	e0bfff17 	ldw	r2,-4(fp)
   2f9ac:	00c00044 	movi	r3,1
   2f9b0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   2f9b4:	e0bffe17 	ldw	r2,-8(fp)
   2f9b8:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
   2f9bc:	e0ffff17 	ldw	r3,-4(fp)
   2f9c0:	d0a01104 	addi	r2,gp,-32700
   2f9c4:	18bfcf1e 	bne	r3,r2,2f904 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   2f9c8:	0001883a 	nop
}
   2f9cc:	0001883a 	nop
   2f9d0:	e037883a 	mov	sp,fp
   2f9d4:	dfc00117 	ldw	ra,4(sp)
   2f9d8:	df000017 	ldw	fp,0(sp)
   2f9dc:	dec00204 	addi	sp,sp,8
   2f9e0:	f800283a 	ret

0002f9e4 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   2f9e4:	deffff04 	addi	sp,sp,-4
   2f9e8:	df000015 	stw	fp,0(sp)
   2f9ec:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   2f9f0:	000170fa 	wrctl	ienable,zero
}
   2f9f4:	0001883a 	nop
   2f9f8:	e037883a 	mov	sp,fp
   2f9fc:	df000017 	ldw	fp,0(sp)
   2fa00:	dec00104 	addi	sp,sp,4
   2fa04:	f800283a 	ret

0002fa08 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   2fa08:	defffe04 	addi	sp,sp,-8
   2fa0c:	df000115 	stw	fp,4(sp)
   2fa10:	df000104 	addi	fp,sp,4
   2fa14:	e13fff15 	stw	r4,-4(fp)
   2fa18:	e0bfff17 	ldw	r2,-4(fp)
   2fa1c:	10bffe84 	addi	r2,r2,-6
   2fa20:	10c00428 	cmpgeui	r3,r2,16
   2fa24:	1800191e 	bne	r3,zero,2fa8c <alt_exception_cause_generated_bad_addr+0x84>
   2fa28:	100690ba 	slli	r3,r2,2
   2fa2c:	008000f4 	movhi	r2,3
   2fa30:	1885883a 	add	r2,r3,r2
   2fa34:	10be8f17 	ldw	r2,-1476(r2)
   2fa38:	1000683a 	jmp	r2
   2fa3c:	0002fa7c 	xorhi	zero,zero,3049
   2fa40:	0002fa7c 	xorhi	zero,zero,3049
   2fa44:	0002fa8c 	andi	zero,zero,3050
   2fa48:	0002fa8c 	andi	zero,zero,3050
   2fa4c:	0002fa8c 	andi	zero,zero,3050
   2fa50:	0002fa7c 	xorhi	zero,zero,3049
   2fa54:	0002fa84 	movi	zero,3050
   2fa58:	0002fa8c 	andi	zero,zero,3050
   2fa5c:	0002fa7c 	xorhi	zero,zero,3049
   2fa60:	0002fa7c 	xorhi	zero,zero,3049
   2fa64:	0002fa8c 	andi	zero,zero,3050
   2fa68:	0002fa7c 	xorhi	zero,zero,3049
   2fa6c:	0002fa84 	movi	zero,3050
   2fa70:	0002fa8c 	andi	zero,zero,3050
   2fa74:	0002fa8c 	andi	zero,zero,3050
   2fa78:	0002fa7c 	xorhi	zero,zero,3049
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   2fa7c:	00800044 	movi	r2,1
   2fa80:	00000306 	br	2fa90 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   2fa84:	0005883a 	mov	r2,zero
   2fa88:	00000106 	br	2fa90 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
   2fa8c:	0005883a 	mov	r2,zero
  }
}
   2fa90:	e037883a 	mov	sp,fp
   2fa94:	df000017 	ldw	fp,0(sp)
   2fa98:	dec00104 	addi	sp,sp,4
   2fa9c:	f800283a 	ret

0002faa0 <atexit>:
   2faa0:	200b883a 	mov	r5,r4
   2faa4:	000f883a 	mov	r7,zero
   2faa8:	000d883a 	mov	r6,zero
   2faac:	0009883a 	mov	r4,zero
   2fab0:	002fb801 	jmpi	2fb80 <__register_exitproc>

0002fab4 <exit>:
   2fab4:	defffe04 	addi	sp,sp,-8
   2fab8:	000b883a 	mov	r5,zero
   2fabc:	dc000015 	stw	r16,0(sp)
   2fac0:	dfc00115 	stw	ra,4(sp)
   2fac4:	2021883a 	mov	r16,r4
   2fac8:	002fc100 	call	2fc10 <__call_exitprocs>
   2facc:	008000f4 	movhi	r2,3
   2fad0:	1108a917 	ldw	r4,8868(r2)
   2fad4:	20800f17 	ldw	r2,60(r4)
   2fad8:	10000126 	beq	r2,zero,2fae0 <exit+0x2c>
   2fadc:	103ee83a 	callr	r2
   2fae0:	8009883a 	mov	r4,r16
   2fae4:	002d0f40 	call	2d0f4 <_exit>

0002fae8 <memcmp>:
   2fae8:	30800130 	cmpltui	r2,r6,4
   2faec:	10000b1e 	bne	r2,zero,2fb1c <memcmp+0x34>
   2faf0:	2144b03a 	or	r2,r4,r5
   2faf4:	108000cc 	andi	r2,r2,3
   2faf8:	1000171e 	bne	r2,zero,2fb58 <memcmp+0x70>
   2fafc:	20c00017 	ldw	r3,0(r4)
   2fb00:	28800017 	ldw	r2,0(r5)
   2fb04:	1880141e 	bne	r3,r2,2fb58 <memcmp+0x70>
   2fb08:	31bfff04 	addi	r6,r6,-4
   2fb0c:	30800128 	cmpgeui	r2,r6,4
   2fb10:	21000104 	addi	r4,r4,4
   2fb14:	29400104 	addi	r5,r5,4
   2fb18:	103ff81e 	bne	r2,zero,2fafc <memcmp+0x14>
   2fb1c:	30bfffc4 	addi	r2,r6,-1
   2fb20:	30000b26 	beq	r6,zero,2fb50 <memcmp+0x68>
   2fb24:	11800044 	addi	r6,r2,1
   2fb28:	298d883a 	add	r6,r5,r6
   2fb2c:	00000106 	br	2fb34 <memcmp+0x4c>
   2fb30:	29800726 	beq	r5,r6,2fb50 <memcmp+0x68>
   2fb34:	20800003 	ldbu	r2,0(r4)
   2fb38:	28c00003 	ldbu	r3,0(r5)
   2fb3c:	21000044 	addi	r4,r4,1
   2fb40:	29400044 	addi	r5,r5,1
   2fb44:	10fffa26 	beq	r2,r3,2fb30 <memcmp+0x48>
   2fb48:	10c5c83a 	sub	r2,r2,r3
   2fb4c:	f800283a 	ret
   2fb50:	0005883a 	mov	r2,zero
   2fb54:	f800283a 	ret
   2fb58:	30bfffc4 	addi	r2,r6,-1
   2fb5c:	003ff106 	br	2fb24 <memcmp+0x3c>

0002fb60 <_putchar_r>:
   2fb60:	21800217 	ldw	r6,8(r4)
   2fb64:	002fd301 	jmpi	2fd30 <_putc_r>

0002fb68 <putchar>:
   2fb68:	008000f4 	movhi	r2,3
   2fb6c:	1088aa17 	ldw	r2,8872(r2)
   2fb70:	200b883a 	mov	r5,r4
   2fb74:	11800217 	ldw	r6,8(r2)
   2fb78:	1009883a 	mov	r4,r2
   2fb7c:	002fd301 	jmpi	2fd30 <_putc_r>

0002fb80 <__register_exitproc>:
   2fb80:	008000f4 	movhi	r2,3
   2fb84:	10c8a917 	ldw	r3,8868(r2)
   2fb88:	18805217 	ldw	r2,328(r3)
   2fb8c:	10001726 	beq	r2,zero,2fbec <__register_exitproc+0x6c>
   2fb90:	10c00117 	ldw	r3,4(r2)
   2fb94:	1a000808 	cmpgei	r8,r3,32
   2fb98:	40001b1e 	bne	r8,zero,2fc08 <__register_exitproc+0x88>
   2fb9c:	20000b26 	beq	r4,zero,2fbcc <__register_exitproc+0x4c>
   2fba0:	181090ba 	slli	r8,r3,2
   2fba4:	02400044 	movi	r9,1
   2fba8:	48d2983a 	sll	r9,r9,r3
   2fbac:	1211883a 	add	r8,r2,r8
   2fbb0:	41802215 	stw	r6,136(r8)
   2fbb4:	11806217 	ldw	r6,392(r2)
   2fbb8:	21000098 	cmpnei	r4,r4,2
   2fbbc:	324cb03a 	or	r6,r6,r9
   2fbc0:	11806215 	stw	r6,392(r2)
   2fbc4:	41c04215 	stw	r7,264(r8)
   2fbc8:	20000b26 	beq	r4,zero,2fbf8 <__register_exitproc+0x78>
   2fbcc:	19000084 	addi	r4,r3,2
   2fbd0:	200890ba 	slli	r4,r4,2
   2fbd4:	18c00044 	addi	r3,r3,1
   2fbd8:	10c00115 	stw	r3,4(r2)
   2fbdc:	1105883a 	add	r2,r2,r4
   2fbe0:	11400015 	stw	r5,0(r2)
   2fbe4:	0005883a 	mov	r2,zero
   2fbe8:	f800283a 	ret
   2fbec:	18805304 	addi	r2,r3,332
   2fbf0:	18805215 	stw	r2,328(r3)
   2fbf4:	003fe606 	br	2fb90 <__register_exitproc+0x10>
   2fbf8:	11006317 	ldw	r4,396(r2)
   2fbfc:	2252b03a 	or	r9,r4,r9
   2fc00:	12406315 	stw	r9,396(r2)
   2fc04:	003ff106 	br	2fbcc <__register_exitproc+0x4c>
   2fc08:	00bfffc4 	movi	r2,-1
   2fc0c:	f800283a 	ret

0002fc10 <__call_exitprocs>:
   2fc10:	defff704 	addi	sp,sp,-36
   2fc14:	008000f4 	movhi	r2,3
   2fc18:	dcc00315 	stw	r19,12(sp)
   2fc1c:	14c8a917 	ldw	r19,8868(r2)
   2fc20:	dc800215 	stw	r18,8(sp)
   2fc24:	dfc00815 	stw	ra,32(sp)
   2fc28:	9c805217 	ldw	r18,328(r19)
   2fc2c:	ddc00715 	stw	r23,28(sp)
   2fc30:	dd800615 	stw	r22,24(sp)
   2fc34:	dd400515 	stw	r21,20(sp)
   2fc38:	dd000415 	stw	r20,16(sp)
   2fc3c:	dc400115 	stw	r17,4(sp)
   2fc40:	dc000015 	stw	r16,0(sp)
   2fc44:	90001026 	beq	r18,zero,2fc88 <__call_exitprocs+0x78>
   2fc48:	202b883a 	mov	r21,r4
   2fc4c:	282d883a 	mov	r22,r5
   2fc50:	05000044 	movi	r20,1
   2fc54:	94000117 	ldw	r16,4(r18)
   2fc58:	847fffc4 	addi	r17,r16,-1
   2fc5c:	88000a16 	blt	r17,zero,2fc88 <__call_exitprocs+0x78>
   2fc60:	84000044 	addi	r16,r16,1
   2fc64:	802090ba 	slli	r16,r16,2
   2fc68:	9421883a 	add	r16,r18,r16
   2fc6c:	b0001126 	beq	r22,zero,2fcb4 <__call_exitprocs+0xa4>
   2fc70:	80804017 	ldw	r2,256(r16)
   2fc74:	15800f26 	beq	r2,r22,2fcb4 <__call_exitprocs+0xa4>
   2fc78:	8c7fffc4 	addi	r17,r17,-1
   2fc7c:	88bfffd8 	cmpnei	r2,r17,-1
   2fc80:	843fff04 	addi	r16,r16,-4
   2fc84:	103ff91e 	bne	r2,zero,2fc6c <__call_exitprocs+0x5c>
   2fc88:	dfc00817 	ldw	ra,32(sp)
   2fc8c:	ddc00717 	ldw	r23,28(sp)
   2fc90:	dd800617 	ldw	r22,24(sp)
   2fc94:	dd400517 	ldw	r21,20(sp)
   2fc98:	dd000417 	ldw	r20,16(sp)
   2fc9c:	dcc00317 	ldw	r19,12(sp)
   2fca0:	dc800217 	ldw	r18,8(sp)
   2fca4:	dc400117 	ldw	r17,4(sp)
   2fca8:	dc000017 	ldw	r16,0(sp)
   2fcac:	dec00904 	addi	sp,sp,36
   2fcb0:	f800283a 	ret
   2fcb4:	90800117 	ldw	r2,4(r18)
   2fcb8:	81800017 	ldw	r6,0(r16)
   2fcbc:	10bfffc4 	addi	r2,r2,-1
   2fcc0:	14401726 	beq	r2,r17,2fd20 <__call_exitprocs+0x110>
   2fcc4:	80000015 	stw	zero,0(r16)
   2fcc8:	303feb26 	beq	r6,zero,2fc78 <__call_exitprocs+0x68>
   2fccc:	a446983a 	sll	r3,r20,r17
   2fcd0:	90806217 	ldw	r2,392(r18)
   2fcd4:	95c00117 	ldw	r23,4(r18)
   2fcd8:	1884703a 	and	r2,r3,r2
   2fcdc:	1000081e 	bne	r2,zero,2fd00 <__call_exitprocs+0xf0>
   2fce0:	303ee83a 	callr	r6
   2fce4:	90c00117 	ldw	r3,4(r18)
   2fce8:	98805217 	ldw	r2,328(r19)
   2fcec:	1dc0011e 	bne	r3,r23,2fcf4 <__call_exitprocs+0xe4>
   2fcf0:	90bfe126 	beq	r18,r2,2fc78 <__call_exitprocs+0x68>
   2fcf4:	103fe426 	beq	r2,zero,2fc88 <__call_exitprocs+0x78>
   2fcf8:	1025883a 	mov	r18,r2
   2fcfc:	003fd506 	br	2fc54 <__call_exitprocs+0x44>
   2fd00:	90806317 	ldw	r2,396(r18)
   2fd04:	81002017 	ldw	r4,128(r16)
   2fd08:	1886703a 	and	r3,r3,r2
   2fd0c:	1800061e 	bne	r3,zero,2fd28 <__call_exitprocs+0x118>
   2fd10:	200b883a 	mov	r5,r4
   2fd14:	a809883a 	mov	r4,r21
   2fd18:	303ee83a 	callr	r6
   2fd1c:	003ff106 	br	2fce4 <__call_exitprocs+0xd4>
   2fd20:	94400115 	stw	r17,4(r18)
   2fd24:	003fe806 	br	2fcc8 <__call_exitprocs+0xb8>
   2fd28:	303ee83a 	callr	r6
   2fd2c:	003fed06 	br	2fce4 <__call_exitprocs+0xd4>

0002fd30 <_putc_r>:
   2fd30:	defffc04 	addi	sp,sp,-16
   2fd34:	dc400215 	stw	r17,8(sp)
   2fd38:	dfc00315 	stw	ra,12(sp)
   2fd3c:	2023883a 	mov	r17,r4
   2fd40:	20000226 	beq	r4,zero,2fd4c <_putc_r+0x1c>
   2fd44:	20800e17 	ldw	r2,56(r4)
   2fd48:	10000e26 	beq	r2,zero,2fd84 <_putc_r+0x54>
   2fd4c:	30800217 	ldw	r2,8(r6)
   2fd50:	10bfffc4 	addi	r2,r2,-1
   2fd54:	30800215 	stw	r2,8(r6)
   2fd58:	10001316 	blt	r2,zero,2fda8 <_putc_r+0x78>
   2fd5c:	30800017 	ldw	r2,0(r6)
   2fd60:	11400005 	stb	r5,0(r2)
   2fd64:	30800017 	ldw	r2,0(r6)
   2fd68:	10c00044 	addi	r3,r2,1
   2fd6c:	30c00015 	stw	r3,0(r6)
   2fd70:	10800003 	ldbu	r2,0(r2)
   2fd74:	dfc00317 	ldw	ra,12(sp)
   2fd78:	dc400217 	ldw	r17,8(sp)
   2fd7c:	dec00404 	addi	sp,sp,16
   2fd80:	f800283a 	ret
   2fd84:	d9800115 	stw	r6,4(sp)
   2fd88:	d9400015 	stw	r5,0(sp)
   2fd8c:	0023ed80 	call	23ed8 <__sinit>
   2fd90:	d9800117 	ldw	r6,4(sp)
   2fd94:	d9400017 	ldw	r5,0(sp)
   2fd98:	30800217 	ldw	r2,8(r6)
   2fd9c:	10bfffc4 	addi	r2,r2,-1
   2fda0:	30800215 	stw	r2,8(r6)
   2fda4:	103fed0e 	bge	r2,zero,2fd5c <_putc_r+0x2c>
   2fda8:	30c00617 	ldw	r3,24(r6)
   2fdac:	10c00e16 	blt	r2,r3,2fde8 <_putc_r+0xb8>
   2fdb0:	30800017 	ldw	r2,0(r6)
   2fdb4:	11400005 	stb	r5,0(r2)
   2fdb8:	30c00017 	ldw	r3,0(r6)
   2fdbc:	18800003 	ldbu	r2,0(r3)
   2fdc0:	108002a0 	cmpeqi	r2,r2,10
   2fdc4:	1000071e 	bne	r2,zero,2fde4 <_putc_r+0xb4>
   2fdc8:	18800044 	addi	r2,r3,1
   2fdcc:	30800015 	stw	r2,0(r6)
   2fdd0:	18800003 	ldbu	r2,0(r3)
   2fdd4:	dfc00317 	ldw	ra,12(sp)
   2fdd8:	dc400217 	ldw	r17,8(sp)
   2fddc:	dec00404 	addi	sp,sp,16
   2fde0:	f800283a 	ret
   2fde4:	01400284 	movi	r5,10
   2fde8:	8809883a 	mov	r4,r17
   2fdec:	dfc00317 	ldw	ra,12(sp)
   2fdf0:	dc400217 	ldw	r17,8(sp)
   2fdf4:	dec00404 	addi	sp,sp,16
   2fdf8:	00292e81 	jmpi	292e8 <__swbuf_r>

0002fdfc <putc>:
   2fdfc:	defffc04 	addi	sp,sp,-16
   2fe00:	008000f4 	movhi	r2,3
   2fe04:	dc800215 	stw	r18,8(sp)
   2fe08:	1488aa17 	ldw	r18,8872(r2)
   2fe0c:	dc400115 	stw	r17,4(sp)
   2fe10:	dfc00315 	stw	ra,12(sp)
   2fe14:	2023883a 	mov	r17,r4
   2fe18:	90000226 	beq	r18,zero,2fe24 <putc+0x28>
   2fe1c:	90800e17 	ldw	r2,56(r18)
   2fe20:	10000f26 	beq	r2,zero,2fe60 <putc+0x64>
   2fe24:	28800217 	ldw	r2,8(r5)
   2fe28:	10bfffc4 	addi	r2,r2,-1
   2fe2c:	28800215 	stw	r2,8(r5)
   2fe30:	10001316 	blt	r2,zero,2fe80 <putc+0x84>
   2fe34:	28800017 	ldw	r2,0(r5)
   2fe38:	14400005 	stb	r17,0(r2)
   2fe3c:	28800017 	ldw	r2,0(r5)
   2fe40:	10c00044 	addi	r3,r2,1
   2fe44:	28c00015 	stw	r3,0(r5)
   2fe48:	10800003 	ldbu	r2,0(r2)
   2fe4c:	dfc00317 	ldw	ra,12(sp)
   2fe50:	dc800217 	ldw	r18,8(sp)
   2fe54:	dc400117 	ldw	r17,4(sp)
   2fe58:	dec00404 	addi	sp,sp,16
   2fe5c:	f800283a 	ret
   2fe60:	9009883a 	mov	r4,r18
   2fe64:	d9400015 	stw	r5,0(sp)
   2fe68:	0023ed80 	call	23ed8 <__sinit>
   2fe6c:	d9400017 	ldw	r5,0(sp)
   2fe70:	28800217 	ldw	r2,8(r5)
   2fe74:	10bfffc4 	addi	r2,r2,-1
   2fe78:	28800215 	stw	r2,8(r5)
   2fe7c:	103fed0e 	bge	r2,zero,2fe34 <putc+0x38>
   2fe80:	28c00617 	ldw	r3,24(r5)
   2fe84:	10c00a16 	blt	r2,r3,2feb0 <putc+0xb4>
   2fe88:	28800017 	ldw	r2,0(r5)
   2fe8c:	14400005 	stb	r17,0(r2)
   2fe90:	28c00017 	ldw	r3,0(r5)
   2fe94:	18800003 	ldbu	r2,0(r3)
   2fe98:	108002a0 	cmpeqi	r2,r2,10
   2fe9c:	10000c1e 	bne	r2,zero,2fed0 <putc+0xd4>
   2fea0:	18800044 	addi	r2,r3,1
   2fea4:	28800015 	stw	r2,0(r5)
   2fea8:	18800003 	ldbu	r2,0(r3)
   2feac:	003fe706 	br	2fe4c <putc+0x50>
   2feb0:	280d883a 	mov	r6,r5
   2feb4:	880b883a 	mov	r5,r17
   2feb8:	9009883a 	mov	r4,r18
   2febc:	dfc00317 	ldw	ra,12(sp)
   2fec0:	dc800217 	ldw	r18,8(sp)
   2fec4:	dc400117 	ldw	r17,4(sp)
   2fec8:	dec00404 	addi	sp,sp,16
   2fecc:	00292e81 	jmpi	292e8 <__swbuf_r>
   2fed0:	280d883a 	mov	r6,r5
   2fed4:	01400284 	movi	r5,10
   2fed8:	003ff706 	br	2feb8 <putc+0xbc>
