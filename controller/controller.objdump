
controller.elf:     file format elf32-littlenios2
controller.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00020228

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x00010850 memsz 0x00010850 flags r-x
    LOAD off    0x00011870 vaddr 0x00030870 paddr 0x00032498 align 2**12
         filesz 0x00001c28 memsz 0x00001c28 flags rw-
    LOAD off    0x000140c0 vaddr 0x000340c0 paddr 0x000340c0 align 2**12
         filesz 0x00000000 memsz 0x00000168 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000208  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000ffb0  00020228  00020228  00001228  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000698  000301d8  000301d8  000111d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c28  00030870  00032498  00011870  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000168  000340c0  000340c0  000140c0  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory 00000000  00034228  00034228  00013498  2**0
                  CONTENTS
  7 .comment      0000002c  00000000  00000000  00013498  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001090  00000000  00000000  000134c8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0004d7bd  00000000  00000000  00014558  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000f930  00000000  00000000  00061d15  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00019e8c  00000000  00000000  00071645  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000024bc  00000000  00000000  0008b4d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00004377  00000000  00000000  0008d990  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001dad4  00000000  00000000  00091d07  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  000af7dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001dd0  00000000  00000000  000af7f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000b4bc5  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  000b4bc8  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000b4bcb  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000b4bcc  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000b4bcd  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000b4bd1  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000b4bd5  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  000b4bd9  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  000b4be2  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  000b4beb  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000015  00000000  00000000  000b4bf4  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000033  00000000  00000000  000b4c09  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     00059ac0  00000000  00000000  000b4c3c  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
00020228 l    d  .text	00000000 .text
000301d8 l    d  .rodata	00000000 .rodata
00030870 l    d  .rwdata	00000000 .rwdata
000340c0 l    d  .bss	00000000 .bss
00034228 l    d  .onchip_memory	00000000 .onchip_memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 /home/nik/eie/ip/information-not-processing/controller_bsp//obj/HAL/src/crt0.o
00020260 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00022b3c l     F .text	000000c0 __sbprintf
00030260 l     O .rodata	00000010 blanks.5176
00030250 l     O .rodata	00000010 zeroes.5177
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00022d58 l     F .text	00000220 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00024978 l     F .text	00000008 __fp_lock
0002498c l     F .text	00000168 __sinit.part.0
00024af4 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00030880 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00030314 l     O .rodata	0000000c p05.3991
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
00027e98 l     F .text	000000f4 __sprint_r.part.0
000292d4 l     F .text	000000c0 __sbprintf
00030448 l     O .rodata	00000010 blanks.5153
00030438 l     O .rodata	00000010 zeroes.5154
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00029eb8 l     F .text	0000004c _init_signal_r.part.0
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0002d7e8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0002d900 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0002d964 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0002da7c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0002db68 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0002dcd0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0002ddbc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0002df9c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00032488 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0002e208 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0002e348 l     F .text	00000034 alt_dev_reg
000313c0 l     O .rwdata	00001060 jtag_uart
00032420 l     O .rwdata	0000002c accelerometer_spi
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0002e628 l     F .text	00000210 altera_avalon_jtag_uart_irq
0002e838 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_up_avalon_accelerometer_spi.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0002f39c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0002f5f8 l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0002f8c8 l     F .text	0000003c alt_get_errno
0002f904 l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
000340fc g     O .bss	00000004 alt_instruction_exception_handler
000208a8 g     F .text	00000018 putchar
000274b4 g     F .text	00000070 _mprec_log10
00027590 g     F .text	00000060 __any_on
00029aac g     F .text	00000058 _isatty_r
00030320 g     O .rodata	00000028 __mprec_tinytens
0002ded8 g     F .text	0000007c alt_main
000208c0 g     F .text	000000cc _puts_r
00034128 g     O .bss	00000100 alt_irq
00029b9c g     F .text	00000064 _lseek_r
0003245c g     O .rwdata	00000004 en_f
00032498 g       *ABS*	00000000 __flash_rwdata_start
0002c238 g     F .text	00000080 .hidden __eqdf2
00034228 g       *ABS*	00000000 __alt_heap_start
0002a16c g     F .text	00000060 _kill_r
00020868 g     F .text	00000038 printf
00029d70 g     F .text	0000006c _wcrtomb_r
00029f18 g     F .text	00000084 _signal_r
00027e34 g     F .text	0000005c __sseek
00024c84 g     F .text	00000010 __sinit
00029394 g     F .text	00000148 __swbuf_r
00029b04 g     F .text	00000074 _setlocale_r
00024afc g     F .text	00000078 __sfmoreglue
0002df78 g     F .text	00000024 __malloc_unlock
0002629c g     F .text	0000012c memmove
00024c70 g     F .text	00000014 _cleanup
000340c0 g     O .bss	00000008 yz
000264b8 g     F .text	000000a4 _Balloc
0003244c g     O .rwdata	00000008 inact_thresh_coef
0002c2b8 g     F .text	000000f0 .hidden __gtdf2
0002fcec g     F .text	00000024 altera_nios2_gen2_irq_init
00020000 g     F .entry	0000000c __reset
000256f0 g     F .text	00000008 __localeconv_l
0002efcc g     F .text	000000d4 alt_up_accelerometer_spi_read_x_axis
00020020 g       *ABS*	00000000 __flash_exceptions_start
00029a4c g     F .text	00000060 _fstat_r
000340dc g     O .bss	00000004 errno
00027dac g     F .text	00000008 __seofread
000340e8 g     O .bss	00000004 alt_argv
0003a44c g       *ABS*	00000000 _gp
0002da5c g     F .text	00000020 getpid
00032454 g     O .rwdata	00000004 output
00031240 g     O .rwdata	00000180 alt_fd_list
000208a0 g     F .text	00000008 _putchar_r
0002f548 g     F .text	00000090 alt_find_dev
0002619c g     F .text	00000100 memcpy
00024980 g     F .text	0000000c _cleanup_r
0002d648 g     F .text	000000bc .hidden __floatsidf
0002f6cc g     F .text	0000007c alt_io_redirect
0002c3a8 g     F .text	000000f0 .hidden __ltdf2
000301d8 g       *ABS*	00000000 __DTOR_END__
0002098c g     F .text	00000010 puts
0002fed0 g     F .text	00000098 alt_exception_cause_generated_bad_addr
00030870 g     O .rwdata	00000010 act_thresh_coef
00027410 g     F .text	000000a4 __ratio
000292b8 g     F .text	0000001c __vfiprintf_internal
0002ea34 g     F .text	00000220 altera_avalon_jtag_uart_read
00020838 g     F .text	00000030 _printf_r
0002aea4 g     F .text	00000064 .hidden __udivsi3
0002dab8 g     F .text	000000b0 isatty
00029f9c g     F .text	000000c4 _raise_r
000295b0 g     F .text	00000064 __assert_func
00030370 g     O .rodata	000000c8 __mprec_tens
00020264 g     F .text	00000054 read_accelerometer
000340d8 g     O .bss	00000004 __malloc_top_pad
0002a1cc g     F .text	00000004 _getpid_r
000256f8 g     F .text	0000000c _localeconv_r
00026928 g     F .text	00000054 __i2b
000250e4 g     F .text	000004cc __sfvwrite_r
0002a060 g     F .text	000000b8 __sigtramp_r
00027d00 g     F .text	00000058 _sbrk_r
00029c50 g     F .text	00000064 _read_r
00032480 g     O .rwdata	00000004 alt_max_fd
000296ec g     F .text	000000f8 _fclose_r
00024950 g     F .text	00000028 fflush
000340d4 g     O .bss	00000004 __malloc_max_sbrked_mem
0002f748 g     F .text	00000180 alt_irq_register
0002af8c g     F .text	00000978 .hidden __adddf3
000271a8 g     F .text	00000104 __b2d
0002a7ec g     F .text	000005c4 .hidden __umoddi3
0002ddf8 g     F .text	000000e0 lseek
00032460 g     O .rwdata	00000004 _global_impure_ptr
0002779c g     F .text	00000564 _realloc_r
00034228 g       *ABS*	00000000 __bss_end
0002fbe4 g     F .text	00000108 alt_tick
0002a1d0 g     F .text	0000061c .hidden __udivdi3
000299b0 g     F .text	00000024 _fputwc_r
00030348 g     O .rodata	00000028 __mprec_bigtens
000266dc g     F .text	00000138 __s2b
00029ea0 g     F .text	00000018 abort
0002d704 g     F .text	00000090 .hidden __floatunsidf
00026ec8 g     F .text	00000058 __mcmp
00024ca4 g     F .text	00000014 __fp_lock_all
0002fb40 g     F .text	000000a4 alt_alarm_stop
000340f0 g     O .bss	00000004 alt_irq_active
000200fc g     F .exceptions	000000cc alt_irq_handler
00031218 g     O .rwdata	00000028 alt_dev_null
00020568 g     F .text	00000084 detect_INACT
0002f37c g     F .text	00000020 alt_dcache_flush_all
00026814 g     F .text	00000064 __hi0bits
0002d5c8 g     F .text	00000080 .hidden __fixdfsi
00032498 g       *ABS*	00000000 __ram_rwdata_end
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory
00032478 g     O .rwdata	00000008 alt_dev_list
0002e244 g     F .text	00000104 write
000275f0 g     F .text	000000cc _putc_r
00030870 g       *ABS*	00000000 __ram_rodata_end
0002d9a0 g     F .text	000000bc fstat
0002dba4 g     F .text	0000012c kill
0002c3a8 g     F .text	000000f0 .hidden __ledf2
00026c28 g     F .text	00000118 __pow5mult
00032458 g     O .rwdata	00000001 led
00027fa4 g     F .text	00001314 ___vfiprintf_internal_r
0002af08 g     F .text	0000005c .hidden __umodsi3
00034228 g       *ABS*	00000000 end
0002e574 g     F .text	000000b4 altera_avalon_jtag_uart_init
000201c8 g     F .exceptions	00000060 alt_instruction_exception_entry
000301d8 g       *ABS*	00000000 __CTOR_LIST__
00040000 g       *ABS*	00000000 __alt_stack_pointer
0002d794 g     F .text	00000054 .hidden __clzsi2
0002ec54 g     F .text	00000228 altera_avalon_jtag_uart_write
00024c94 g     F .text	00000004 __sfp_lock_acquire
000260c8 g     F .text	000000d4 memchr
00020a34 g     F .text	000020ec ___vfprintf_internal_r
00024de8 g     F .text	000002fc _free_r
000305ac g     O .rodata	00000180 _ctype_b
00029b78 g     F .text	0000000c __locale_mb_cur_max
000300b8 g     F .text	00000120 __call_exitprocs
00032468 g     O .rwdata	00000004 __malloc_sbrk_base
00020228 g     F .text	0000003c _start
000340f4 g     O .bss	00000004 _alt_tick_rate
00026d40 g     F .text	00000188 __lshift
000340f8 g     O .bss	00000004 _alt_nticks
0002a128 g     F .text	00000018 signal
0002dfd8 g     F .text	00000108 read
0002e3b8 g     F .text	00000058 alt_sys_init
0002eeb8 g     F .text	00000044 alt_up_accelerometer_spi_read_address_register
00030028 g     F .text	00000090 __register_exitproc
0002697c g     F .text	000002ac __multiply
0002e8d8 g     F .text	00000068 altera_avalon_jtag_uart_close
0002af64 g     F .text	00000028 .hidden __mulsi3
00030870 g       *ABS*	00000000 __ram_rwdata_start
000301d8 g       *ABS*	00000000 __ram_rodata_start
00034100 g     O .bss	00000028 __malloc_current_mallinfo
000272ac g     F .text	00000164 __d2b
0002e410 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0002fe18 g     F .text	000000b8 alt_get_fd
0002f0a0 g     F .text	000000d4 alt_up_accelerometer_spi_read_y_axis
00029558 g     F .text	00000058 _close_r
000202b8 g     F .text	000000a8 max
0002ffb0 g     F .text	00000078 memcmp
0002e4d0 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00034228 g       *ABS*	00000000 __alt_stack_base
0002e520 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00022bfc g     F .text	0000015c __swsetup_r
0002b904 g     F .text	00000934 .hidden __divdf3
00024b74 g     F .text	000000fc __sfp
00027524 g     F .text	0000006c __copybits
00030ca4 g     O .rwdata	00000408 __malloc_av_
00024ca0 g     F .text	00000004 __sinit_lock_release
0002c498 g     F .text	000007a8 .hidden __muldf3
00027d58 g     F .text	00000054 __sread
0002fd10 g     F .text	00000108 alt_find_file
0002f3d8 g     F .text	000000a8 alt_dev_llist_insert
0002df54 g     F .text	00000024 __malloc_lock
0002e150 g     F .text	000000b8 sbrk
000248f0 g     F .text	00000060 _fflush_r
00029628 g     F .text	000000c4 _calloc_r
000340c0 g       *ABS*	00000000 __bss_start
00020654 g     F .text	000000d8 write_7seg
000263c8 g     F .text	000000f0 memset
0002072c g     F .text	0000010c main
000340ec g     O .bss	00000004 alt_envp
000340d0 g     O .bss	00000004 __malloc_max_total_mem
0002e470 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
000294dc g     F .text	00000018 __swbuf
00027e90 g     F .text	00000008 __sclose
00040000 g       *ABS*	00000000 __alt_heap_limit
000297e4 g     F .text	00000010 fclose
00022f78 g     F .text	00001750 _dtoa_r
000258e8 g     F .text	000007e0 _malloc_r
00029e70 g     F .text	00000030 __ascii_wctomb
00032484 g     O .rwdata	00000004 alt_errno
000297f4 g     F .text	00000020 _fiprintf_r
0002a140 g     F .text	0000001c _init_signal
000255b0 g     F .text	00000098 _fwalk
00029c00 g     F .text	0000000c _mbtowc_r
000276bc g     F .text	000000e0 putc
0002adb0 g     F .text	00000080 .hidden __divsi3
00024ccc g     F .text	0000011c _malloc_trim_r
000301d8 g       *ABS*	00000000 __CTOR_END__
00029cb4 g     F .text	000000b8 strcmp
000301d8 g       *ABS*	00000000 __flash_rodata_start
000301d8 g       *ABS*	00000000 __DTOR_LIST__
00020360 g     F .text	000000a8 min
0002c238 g     F .text	00000080 .hidden __nedf2
000340c8 g     O .bss	00000004 inact_counter
0002e37c g     F .text	0000003c alt_irq_init
0002e0e0 g     F .text	00000070 alt_release_fd
0003072c g     O .rodata	00000100 .hidden __clz_tab
000340e0 g     O .bss	00000004 _PathLocale
0002ff68 g     F .text	00000014 atexit
00020408 g     F .text	00000160 detect_ACT
000294f4 g     F .text	00000064 _write_r
00029b84 g     F .text	00000018 setlocale
00032464 g     O .rwdata	00000004 _impure_ptr
000340e4 g     O .bss	00000004 alt_argc
000246c8 g     F .text	00000228 __sflush_r
0002f4e4 g     F .text	00000064 _do_dtors
00020020 g       .exceptions	00000000 alt_irq_entry
00029c0c g     F .text	00000044 __ascii_mbtowc
0002714c g     F .text	0000005c __ulp
00024cb8 g     F .text	00000014 __fp_unlock_all
00032470 g     O .rwdata	00000008 alt_fs_list
00020020 g       *ABS*	00000000 __ram_exceptions_start
0002ee7c g     F .text	0000003c alt_up_accelerometer_spi_open_dev
00025704 g     F .text	0000000c localeconv
00025710 g     F .text	00000098 __swhatbuf_r
00032498 g       *ABS*	00000000 _edata
00034228 g       *ABS*	00000000 _end
0002984c g     F .text	00000164 __fputwc
00020228 g       *ABS*	00000000 __ram_exceptions_end
0002e940 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
00027db4 g     F .text	00000080 __swrite
0003246c g     O .rwdata	00000004 __malloc_trim_threshold
0002ff7c g     F .text	00000034 exit
00029814 g     F .text	00000038 fiprintf
00029d6c g     F .text	00000004 _vfiprintf_r
00025648 g     F .text	000000a8 _fwalk_reent
00026f20 g     F .text	0000022c __mdiff
0002ae30 g     F .text	00000074 .hidden __modsi3
0002f174 g     F .text	000000d4 alt_up_accelerometer_spi_read_z_axis
00040000 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
00024c98 g     F .text	00000004 __sfp_lock_release
000304a8 g     O .rodata	00000101 _ctype_
000205ec g     F .text	00000068 wait_INACT
0002d574 g     F .text	00000054 .hidden __unorddf2
0002d92c g     F .text	00000038 _exit
0002f248 g     F .text	00000134 alt_alarm_start
0002eefc g     F .text	00000068 alt_up_accelerometer_spi_read
0002ef64 g     F .text	00000068 alt_up_accelerometer_spi_write
000257a8 g     F .text	00000140 __smakebuf_r
0002099c g     F .text	00000098 strlen
00029f04 g     F .text	00000014 _init_signal_r
0002f9e0 g     F .text	00000160 open
0002c2b8 g     F .text	000000f0 .hidden __gedf2
00029614 g     F .text	00000014 __assert
00027f8c g     F .text	00000018 __sprint_r
0002f5d8 g     F .text	00000020 alt_icache_flush_all
0003248c g     O .rwdata	00000004 alt_priority_mask
00022b20 g     F .text	0000001c __vfprintf_internal
00029e64 g     F .text	0000000c _wctomb_r
0002cc40 g     F .text	00000934 .hidden __subdf3
000340cc g     O .bss	00000004 acc_dev
00026878 g     F .text	000000b0 __lo0bits
00032490 g     O .rwdata	00000008 alt_alarm_list
0002f480 g     F .text	00000064 _do_ctors
0002a15c g     F .text	00000010 __sigtramp
00029ddc g     F .text	00000088 wcrtomb
0002d824 g     F .text	000000dc close
000310ac g     O .rwdata	0000016c __global_locale
0002dd38 g     F .text	00000084 alt_load
000299d4 g     F .text	00000078 fputwc
0002a118 g     F .text	00000010 raise
00024c9c g     F .text	00000004 __sinit_lock_acquire
00026580 g     F .text	0000015c __multadd
0002655c g     F .text	00000024 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20000:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20004:	08408a14 	ori	at,at,552
    jmp r1
   20008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201c80 	call	201c8 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffc15 	stw	r2,-16(fp)

  return active;
   20118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0ffff17 	ldw	r3,-4(fp)
   20130:	e0bffe17 	ldw	r2,-8(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001226 	beq	r2,zero,20184 <alt_irq_handler+0x88>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
   2013c:	e0bffd17 	ldw	r2,-12(fp)
   20140:	100690fa 	slli	r3,r2,3
   20144:	008000f4 	movhi	r2,3
   20148:	1885883a 	add	r2,r3,r2
   2014c:	10d04a17 	ldw	r3,16680(r2)
   20150:	e0bffd17 	ldw	r2,-12(fp)
   20154:	100890fa 	slli	r4,r2,3
   20158:	008000f4 	movhi	r2,3
   2015c:	2085883a 	add	r2,r4,r2
   20160:	10904b17 	ldw	r2,16684(r2)
   20164:	e17ffd17 	ldw	r5,-12(fp)
   20168:	1009883a 	mov	r4,r2
   2016c:	183ee83a 	callr	r3
#endif
        break;
   20170:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
   20174:	0005313a 	rdctl	r2,ipending
   20178:	e0bffb15 	stw	r2,-20(fp)
  return active;
   2017c:	e0bffb17 	ldw	r2,-20(fp)
   20180:	00000706 	br	201a0 <alt_irq_handler+0xa4>
      }
      mask <<= 1;
   20184:	e0bffe17 	ldw	r2,-8(fp)
   20188:	1085883a 	add	r2,r2,r2
   2018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
   20190:	e0bffd17 	ldw	r2,-12(fp)
   20194:	10800044 	addi	r2,r2,1
   20198:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
   2019c:	003fe306 	br	2012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
   201a0:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   201a4:	e0bfff17 	ldw	r2,-4(fp)
   201a8:	103fdd1e 	bne	r2,zero,20120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201ac:	0001883a 	nop
}
   201b0:	0001883a 	nop
   201b4:	e037883a 	mov	sp,fp
   201b8:	dfc00117 	ldw	ra,4(sp)
   201bc:	df000017 	ldw	fp,0(sp)
   201c0:	dec00204 	addi	sp,sp,8
   201c4:	f800283a 	ret

000201c8 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201c8:	defffb04 	addi	sp,sp,-20
   201cc:	dfc00415 	stw	ra,16(sp)
   201d0:	df000315 	stw	fp,12(sp)
   201d4:	df000304 	addi	fp,sp,12
   201d8:	e13ffd15 	stw	r4,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
   201dc:	00bfffc4 	movi	r2,-1
   201e0:	e0bfff15 	stw	r2,-4(fp)
  badaddr = 0;
   201e4:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   201e8:	d0a72c17 	ldw	r2,-25424(gp)
   201ec:	10000726 	beq	r2,zero,2020c <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   201f0:	d0a72c17 	ldw	r2,-25424(gp)
   201f4:	e0ffff17 	ldw	r3,-4(fp)
   201f8:	e1bffe17 	ldw	r6,-8(fp)
   201fc:	e17ffd17 	ldw	r5,-12(fp)
   20200:	1809883a 	mov	r4,r3
   20204:	103ee83a 	callr	r2
   20208:	00000206 	br	20214 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   2020c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   20210:	0005883a 	mov	r2,zero
}
   20214:	e037883a 	mov	sp,fp
   20218:	dfc00117 	ldw	ra,4(sp)
   2021c:	df000017 	ldw	fp,0(sp)
   20220:	dec00204 	addi	sp,sp,8
   20224:	f800283a 	ret

Disassembly of section .text:

00020228 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   20228:	06c00134 	movhi	sp,4
    ori sp, sp, %lo(__alt_stack_pointer)
   2022c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   20230:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   20234:	d6a91314 	ori	gp,gp,42060
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   20238:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   2023c:	10903014 	ori	r2,r2,16576

    movhi r3, %hi(__bss_end)
   20240:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20244:	18d08a14 	ori	r3,r3,16936

    beq r2, r3, 1f
   20248:	10c00326 	beq	r2,r3,20258 <_start+0x30>

0:
    stw zero, (r2)
   2024c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   20250:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20254:	10fffd36 	bltu	r2,r3,2024c <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   20258:	002dd380 	call	2dd38 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   2025c:	002ded80 	call	2ded8 <alt_main>

00020260 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   20260:	003fff06 	br	20260 <alt_after_alt_main>

00020264 <read_accelerometer>:
alt_u8 led = 0x1; //global LED counter to show interrupts occurring
int en_f = 1;
int inact_counter = 0;
alt_up_accelerometer_spi_dev * acc_dev;

void read_accelerometer(alt_32* yz) {
   20264:	defffd04 	addi	sp,sp,-12
   20268:	dfc00215 	stw	ra,8(sp)
   2026c:	df000115 	stw	fp,4(sp)
   20270:	df000104 	addi	fp,sp,4
   20274:	e13fff15 	stw	r4,-4(fp)
	//readings for all axes
	alt_up_accelerometer_spi_read_y_axis(acc_dev, yz);
   20278:	d0a72017 	ldw	r2,-25472(gp)
   2027c:	e17fff17 	ldw	r5,-4(fp)
   20280:	1009883a 	mov	r4,r2
   20284:	002f0a00 	call	2f0a0 <alt_up_accelerometer_spi_read_y_axis>
	alt_up_accelerometer_spi_read_z_axis(acc_dev, yz+1);
   20288:	d0e72017 	ldw	r3,-25472(gp)
   2028c:	e0bfff17 	ldw	r2,-4(fp)
   20290:	10800104 	addi	r2,r2,4
   20294:	100b883a 	mov	r5,r2
   20298:	1809883a 	mov	r4,r3
   2029c:	002f1740 	call	2f174 <alt_up_accelerometer_spi_read_z_axis>
}
   202a0:	0001883a 	nop
   202a4:	e037883a 	mov	sp,fp
   202a8:	dfc00117 	ldw	ra,4(sp)
   202ac:	df000017 	ldw	fp,0(sp)
   202b0:	dec00204 	addi	sp,sp,8
   202b4:	f800283a 	ret

000202b8 <max>:

int max() { //returns index of the maximum reading out of the 3 axes (current sample)
   202b8:	defffc04 	addi	sp,sp,-16
   202bc:	df000315 	stw	fp,12(sp)
   202c0:	df000304 	addi	fp,sp,12
	int index = 0;
   202c4:	e03fff15 	stw	zero,-4(fp)
	int max = abs(yz[0]);
   202c8:	d0a71d17 	ldw	r2,-25484(gp)
   202cc:	1000010e 	bge	r2,zero,202d4 <max+0x1c>
   202d0:	0085c83a 	sub	r2,zero,r2
   202d4:	e0bffe15 	stw	r2,-8(fp)
	for (int i=1; i<2; i++) {
   202d8:	00800044 	movi	r2,1
   202dc:	e0bffd15 	stw	r2,-12(fp)
   202e0:	00001706 	br	20340 <max+0x88>
		if (abs(yz[i]) > max) {
   202e4:	e0bffd17 	ldw	r2,-12(fp)
   202e8:	100690ba 	slli	r3,r2,2
   202ec:	d0a71d04 	addi	r2,gp,-25484
   202f0:	1885883a 	add	r2,r3,r2
   202f4:	10800017 	ldw	r2,0(r2)
   202f8:	1000010e 	bge	r2,zero,20300 <max+0x48>
   202fc:	0085c83a 	sub	r2,zero,r2
   20300:	1007883a 	mov	r3,r2
   20304:	e0bffe17 	ldw	r2,-8(fp)
   20308:	10c00a0e 	bge	r2,r3,20334 <max+0x7c>
			max = abs(yz[i]);
   2030c:	e0bffd17 	ldw	r2,-12(fp)
   20310:	100690ba 	slli	r3,r2,2
   20314:	d0a71d04 	addi	r2,gp,-25484
   20318:	1885883a 	add	r2,r3,r2
   2031c:	10800017 	ldw	r2,0(r2)
   20320:	1000010e 	bge	r2,zero,20328 <max+0x70>
   20324:	0085c83a 	sub	r2,zero,r2
   20328:	e0bffe15 	stw	r2,-8(fp)
			index = i;
   2032c:	e0bffd17 	ldw	r2,-12(fp)
   20330:	e0bfff15 	stw	r2,-4(fp)
	for (int i=1; i<2; i++) {
   20334:	e0bffd17 	ldw	r2,-12(fp)
   20338:	10800044 	addi	r2,r2,1
   2033c:	e0bffd15 	stw	r2,-12(fp)
   20340:	e0bffd17 	ldw	r2,-12(fp)
   20344:	10800090 	cmplti	r2,r2,2
   20348:	103fe61e 	bne	r2,zero,202e4 <max+0x2c>
		}
	}
	return index;
   2034c:	e0bfff17 	ldw	r2,-4(fp)
}
   20350:	e037883a 	mov	sp,fp
   20354:	df000017 	ldw	fp,0(sp)
   20358:	dec00104 	addi	sp,sp,4
   2035c:	f800283a 	ret

00020360 <min>:

int min() { //returns index of the maximum reading out of the 3 axes (current sample)
   20360:	defffc04 	addi	sp,sp,-16
   20364:	df000315 	stw	fp,12(sp)
   20368:	df000304 	addi	fp,sp,12
	int index = 0;
   2036c:	e03fff15 	stw	zero,-4(fp)
	int min = abs(yz[0]);
   20370:	d0a71d17 	ldw	r2,-25484(gp)
   20374:	1000010e 	bge	r2,zero,2037c <min+0x1c>
   20378:	0085c83a 	sub	r2,zero,r2
   2037c:	e0bffe15 	stw	r2,-8(fp)
	for (int i=1; i<2; i++) {
   20380:	00800044 	movi	r2,1
   20384:	e0bffd15 	stw	r2,-12(fp)
   20388:	00001706 	br	203e8 <min+0x88>
		if (abs(yz[i]) < min) {
   2038c:	e0bffd17 	ldw	r2,-12(fp)
   20390:	100690ba 	slli	r3,r2,2
   20394:	d0a71d04 	addi	r2,gp,-25484
   20398:	1885883a 	add	r2,r3,r2
   2039c:	10800017 	ldw	r2,0(r2)
   203a0:	1000010e 	bge	r2,zero,203a8 <min+0x48>
   203a4:	0085c83a 	sub	r2,zero,r2
   203a8:	1007883a 	mov	r3,r2
   203ac:	e0bffe17 	ldw	r2,-8(fp)
   203b0:	18800a0e 	bge	r3,r2,203dc <min+0x7c>
			min = abs(yz[i]);
   203b4:	e0bffd17 	ldw	r2,-12(fp)
   203b8:	100690ba 	slli	r3,r2,2
   203bc:	d0a71d04 	addi	r2,gp,-25484
   203c0:	1885883a 	add	r2,r3,r2
   203c4:	10800017 	ldw	r2,0(r2)
   203c8:	1000010e 	bge	r2,zero,203d0 <min+0x70>
   203cc:	0085c83a 	sub	r2,zero,r2
   203d0:	e0bffe15 	stw	r2,-8(fp)
			index = i;
   203d4:	e0bffd17 	ldw	r2,-12(fp)
   203d8:	e0bfff15 	stw	r2,-4(fp)
	for (int i=1; i<2; i++) {
   203dc:	e0bffd17 	ldw	r2,-12(fp)
   203e0:	10800044 	addi	r2,r2,1
   203e4:	e0bffd15 	stw	r2,-12(fp)
   203e8:	e0bffd17 	ldw	r2,-12(fp)
   203ec:	10800090 	cmplti	r2,r2,2
   203f0:	103fe61e 	bne	r2,zero,2038c <min+0x2c>
		}
	}
	return index;
   203f4:	e0bfff17 	ldw	r2,-4(fp)
}
   203f8:	e037883a 	mov	sp,fp
   203fc:	df000017 	ldw	fp,0(sp)
   20400:	dec00104 	addi	sp,sp,4
   20404:	f800283a 	ret

00020408 <detect_ACT>:

int detect_ACT() {
   20408:	defffd04 	addi	sp,sp,-12
   2040c:	dfc00215 	stw	ra,8(sp)
   20410:	df000115 	stw	fp,4(sp)
   20414:	df000104 	addi	fp,sp,4
	int i = max();
   20418:	00202b80 	call	202b8 <max>
   2041c:	e0bfff15 	stw	r2,-4(fp)

	//output char if the |acceleration|>threshold and gradient has same polarity
	if (yz[i]*10 > (act_thresh_coef[i][0]*THRESHOLD_1G)) { //multiplied by 10 to fine-tune threshold
   20420:	e0bfff17 	ldw	r2,-4(fp)
   20424:	100690ba 	slli	r3,r2,2
   20428:	d0a71d04 	addi	r2,gp,-25484
   2042c:	1885883a 	add	r2,r3,r2
   20430:	10c00017 	ldw	r3,0(r2)
   20434:	1805883a 	mov	r2,r3
   20438:	100490ba 	slli	r2,r2,2
   2043c:	10c5883a 	add	r2,r2,r3
   20440:	1085883a 	add	r2,r2,r2
   20444:	1009883a 	mov	r4,r2
   20448:	e0bfff17 	ldw	r2,-4(fp)
   2044c:	100690fa 	slli	r3,r2,3
   20450:	008000f4 	movhi	r2,3
   20454:	1885883a 	add	r2,r3,r2
   20458:	10c21c17 	ldw	r3,2160(r2)
   2045c:	1805883a 	mov	r2,r3
   20460:	1004923a 	slli	r2,r2,8
   20464:	10c5c83a 	sub	r2,r2,r3
   20468:	1100110e 	bge	r2,r4,204b0 <detect_ACT+0xa8>
		putchar(output[i][0]);
   2046c:	e0bfff17 	ldw	r2,-4(fp)
   20470:	1087883a 	add	r3,r2,r2
   20474:	d0a00204 	addi	r2,gp,-32760
   20478:	1885883a 	add	r2,r3,r2
   2047c:	10800003 	ldbu	r2,0(r2)
   20480:	10803fcc 	andi	r2,r2,255
   20484:	1080201c 	xori	r2,r2,128
   20488:	10bfe004 	addi	r2,r2,-128
   2048c:	1009883a 	mov	r4,r2
   20490:	00208a80 	call	208a8 <putchar>
		printf("\n");
   20494:	01000284 	movi	r4,10
   20498:	00208a80 	call	208a8 <putchar>
		led++;
   2049c:	d0a00303 	ldbu	r2,-32756(gp)
   204a0:	10800044 	addi	r2,r2,1
   204a4:	d0a00305 	stb	r2,-32756(gp)
		return 1;
   204a8:	00800044 	movi	r2,1
   204ac:	00002906 	br	20554 <detect_ACT+0x14c>
	} else if ((yz[i]*10 < -(act_thresh_coef[i][1]*THRESHOLD_1G))) { //Threshold cannot be below 255 as tilting the controller can cause reading abs(255) in any axis
   204b0:	e0bfff17 	ldw	r2,-4(fp)
   204b4:	100690ba 	slli	r3,r2,2
   204b8:	d0a71d04 	addi	r2,gp,-25484
   204bc:	1885883a 	add	r2,r3,r2
   204c0:	10c00017 	ldw	r3,0(r2)
   204c4:	1805883a 	mov	r2,r3
   204c8:	100490ba 	slli	r2,r2,2
   204cc:	10c5883a 	add	r2,r2,r3
   204d0:	1085883a 	add	r2,r2,r2
   204d4:	1009883a 	mov	r4,r2
   204d8:	e0bfff17 	ldw	r2,-4(fp)
   204dc:	100690fa 	slli	r3,r2,3
   204e0:	008000f4 	movhi	r2,3
   204e4:	1885883a 	add	r2,r3,r2
   204e8:	10821d17 	ldw	r2,2164(r2)
   204ec:	1007883a 	mov	r3,r2
   204f0:	1004923a 	slli	r2,r2,8
   204f4:	1885c83a 	sub	r2,r3,r2
   204f8:	2080110e 	bge	r4,r2,20540 <detect_ACT+0x138>
		putchar(output[i][1]);
   204fc:	e0bfff17 	ldw	r2,-4(fp)
   20500:	1087883a 	add	r3,r2,r2
   20504:	d0a00244 	addi	r2,gp,-32759
   20508:	1885883a 	add	r2,r3,r2
   2050c:	10800003 	ldbu	r2,0(r2)
   20510:	10803fcc 	andi	r2,r2,255
   20514:	1080201c 	xori	r2,r2,128
   20518:	10bfe004 	addi	r2,r2,-128
   2051c:	1009883a 	mov	r4,r2
   20520:	00208a80 	call	208a8 <putchar>
		printf("\n");
   20524:	01000284 	movi	r4,10
   20528:	00208a80 	call	208a8 <putchar>
		led++;
   2052c:	d0a00303 	ldbu	r2,-32756(gp)
   20530:	10800044 	addi	r2,r2,1
   20534:	d0a00305 	stb	r2,-32756(gp)
		return 1;
   20538:	00800044 	movi	r2,1
   2053c:	00000506 	br	20554 <detect_ACT+0x14c>
	} else {
		putchar('0');
   20540:	01000c04 	movi	r4,48
   20544:	00208a80 	call	208a8 <putchar>
		printf("\n");
   20548:	01000284 	movi	r4,10
   2054c:	00208a80 	call	208a8 <putchar>
		return 0; //return 0 if reading magnitude too small
   20550:	0005883a 	mov	r2,zero
	}
}
   20554:	e037883a 	mov	sp,fp
   20558:	dfc00117 	ldw	ra,4(sp)
   2055c:	df000017 	ldw	fp,0(sp)
   20560:	dec00204 	addi	sp,sp,8
   20564:	f800283a 	ret

00020568 <detect_INACT>:

int detect_INACT(int i){
   20568:	defffe04 	addi	sp,sp,-8
   2056c:	df000115 	stw	fp,4(sp)
   20570:	df000104 	addi	fp,sp,4
   20574:	e13fff15 	stw	r4,-4(fp)
	if ((abs(yz[i])*10) < (inact_thresh_coef[i]*THRESHOLD_1G)) { //multiplied by 10 to fine-tune threshold
   20578:	e0bfff17 	ldw	r2,-4(fp)
   2057c:	100690ba 	slli	r3,r2,2
   20580:	d0a71d04 	addi	r2,gp,-25484
   20584:	1885883a 	add	r2,r3,r2
   20588:	10800017 	ldw	r2,0(r2)
   2058c:	1000010e 	bge	r2,zero,20594 <detect_INACT+0x2c>
   20590:	0085c83a 	sub	r2,zero,r2
   20594:	1007883a 	mov	r3,r2
   20598:	1805883a 	mov	r2,r3
   2059c:	100490ba 	slli	r2,r2,2
   205a0:	10c5883a 	add	r2,r2,r3
   205a4:	1085883a 	add	r2,r2,r2
   205a8:	1009883a 	mov	r4,r2
   205ac:	e0bfff17 	ldw	r2,-4(fp)
   205b0:	100690ba 	slli	r3,r2,2
   205b4:	d0a00004 	addi	r2,gp,-32768
   205b8:	1885883a 	add	r2,r3,r2
   205bc:	10c00017 	ldw	r3,0(r2)
   205c0:	1805883a 	mov	r2,r3
   205c4:	1004923a 	slli	r2,r2,8
   205c8:	10c5c83a 	sub	r2,r2,r3
   205cc:	2080020e 	bge	r4,r2,205d8 <detect_INACT+0x70>
		return 1;
   205d0:	00800044 	movi	r2,1
   205d4:	00000106 	br	205dc <detect_INACT+0x74>
	} else {
		return 0; //return 0 if reading magnitude too large
   205d8:	0005883a 	mov	r2,zero
	}
}
   205dc:	e037883a 	mov	sp,fp
   205e0:	df000017 	ldw	fp,0(sp)
   205e4:	dec00104 	addi	sp,sp,4
   205e8:	f800283a 	ret

000205ec <wait_INACT>:

int wait_INACT() {
   205ec:	defffd04 	addi	sp,sp,-12
   205f0:	dfc00215 	stw	ra,8(sp)
   205f4:	df000115 	stw	fp,4(sp)
   205f8:	df000104 	addi	fp,sp,4
	int i = min();
   205fc:	00203600 	call	20360 <min>
   20600:	e0bfff15 	stw	r2,-4(fp)
	if (inact_counter < INACT_SAMPLES) {
   20604:	d0a71f17 	ldw	r2,-25476(gp)
   20608:	1080fa08 	cmpgei	r2,r2,1000
   2060c:	10000a1e 	bne	r2,zero,20638 <wait_INACT+0x4c>
		if (detect_INACT(i)) {
   20610:	e13fff17 	ldw	r4,-4(fp)
   20614:	00205680 	call	20568 <detect_INACT>
   20618:	10000426 	beq	r2,zero,2062c <wait_INACT+0x40>
			inact_counter++;
   2061c:	d0a71f17 	ldw	r2,-25476(gp)
   20620:	10800044 	addi	r2,r2,1
   20624:	d0a71f15 	stw	r2,-25476(gp)
   20628:	00000106 	br	20630 <wait_INACT+0x44>
		} else {
			inact_counter = 0;
   2062c:	d0271f15 	stw	zero,-25476(gp)
		}
		return 0;
   20630:	0005883a 	mov	r2,zero
   20634:	00000206 	br	20640 <wait_INACT+0x54>
	} else {
		inact_counter = 0;
   20638:	d0271f15 	stw	zero,-25476(gp)
		return 1;
   2063c:	00800044 	movi	r2,1
	}

}
   20640:	e037883a 	mov	sp,fp
   20644:	dfc00117 	ldw	ra,4(sp)
   20648:	df000017 	ldw	fp,0(sp)
   2064c:	dec00204 	addi	sp,sp,8
   20650:	f800283a 	ret

00020654 <write_7seg>:

//input should be 2 characters and a 16 bit score (30bits overall)
void write_7seg(char* characters, alt_16 score) {
   20654:	defff904 	addi	sp,sp,-28
   20658:	dfc00615 	stw	ra,24(sp)
   2065c:	df000515 	stw	fp,20(sp)
   20660:	df000504 	addi	fp,sp,20
   20664:	e13ffc15 	stw	r4,-16(fp)
   20668:	2805883a 	mov	r2,r5
   2066c:	e0bffb0d 	sth	r2,-20(fp)
	alt_u32 format_char0 = ((alt_u32)(characters[0]) << 25) >> 2;
   20670:	e0bffc17 	ldw	r2,-16(fp)
   20674:	10800003 	ldbu	r2,0(r2)
   20678:	10803fcc 	andi	r2,r2,255
   2067c:	1080201c 	xori	r2,r2,128
   20680:	10bfe004 	addi	r2,r2,-128
   20684:	1004967a 	slli	r2,r2,25
   20688:	1004d0ba 	srli	r2,r2,2
   2068c:	e0bfff15 	stw	r2,-4(fp)
	alt_u32 format_char1 = ((alt_u32)(characters[1]) << 25) >> 9;
   20690:	e0bffc17 	ldw	r2,-16(fp)
   20694:	10800044 	addi	r2,r2,1
   20698:	10800003 	ldbu	r2,0(r2)
   2069c:	10803fcc 	andi	r2,r2,255
   206a0:	1080201c 	xori	r2,r2,128
   206a4:	10bfe004 	addi	r2,r2,-128
   206a8:	1004967a 	slli	r2,r2,25
   206ac:	1004d27a 	srli	r2,r2,9
   206b0:	e0bffe15 	stw	r2,-8(fp)
	alt_u32 output = format_char0 + format_char1 + abs(score);
   206b4:	e0ffff17 	ldw	r3,-4(fp)
   206b8:	e0bffe17 	ldw	r2,-8(fp)
   206bc:	1887883a 	add	r3,r3,r2
   206c0:	e0bffb0b 	ldhu	r2,-20(fp)
   206c4:	113fffcc 	andi	r4,r2,65535
   206c8:	2120001c 	xori	r4,r4,32768
   206cc:	21200004 	addi	r4,r4,-32768
   206d0:	2000010e 	bge	r4,zero,206d8 <write_7seg+0x84>
   206d4:	0085c83a 	sub	r2,zero,r2
   206d8:	10bfffcc 	andi	r2,r2,65535
   206dc:	1885883a 	add	r2,r3,r2
   206e0:	e0bffd15 	stw	r2,-12(fp)
	printf("%d %c\n", output >> 23, output >> 23);
   206e4:	e0bffd17 	ldw	r2,-12(fp)
   206e8:	1006d5fa 	srli	r3,r2,23
   206ec:	e0bffd17 	ldw	r2,-12(fp)
   206f0:	1004d5fa 	srli	r2,r2,23
   206f4:	100d883a 	mov	r6,r2
   206f8:	180b883a 	mov	r5,r3
   206fc:	010000f4 	movhi	r4,3
   20700:	21007604 	addi	r4,r4,472
   20704:	00208680 	call	20868 <printf>
	IOWR_ALTERA_AVALON_PIO_DATA(HEX_DISPLAY_BASE, output);
   20708:	e0fffd17 	ldw	r3,-12(fp)
   2070c:	00800134 	movhi	r2,4
   20710:	10c42035 	stwio	r3,4224(r2)
}
   20714:	0001883a 	nop
   20718:	e037883a 	mov	sp,fp
   2071c:	dfc00117 	ldw	ra,4(sp)
   20720:	df000017 	ldw	fp,0(sp)
   20724:	dec00204 	addi	sp,sp,8
   20728:	f800283a 	ret

0002072c <main>:

int main(){
   2072c:	defffb04 	addi	sp,sp,-20
   20730:	dfc00415 	stw	ra,16(sp)
   20734:	df000315 	stw	fp,12(sp)
   20738:	df000304 	addi	fp,sp,12

	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
   2073c:	010000f4 	movhi	r4,3
   20740:	21007804 	addi	r4,r4,480
   20744:	002ee7c0 	call	2ee7c <alt_up_accelerometer_spi_open_dev>
   20748:	d0a72015 	stw	r2,-25472(gp)
	if (acc_dev == NULL) { // if return 1, check if the spi ip name is "accelerometer_spi"
   2074c:	d0a72017 	ldw	r2,-25472(gp)
   20750:	1000021e 	bne	r2,zero,2075c <main+0x30>
		return 1;
   20754:	00800044 	movi	r2,1
   20758:	00003206 	br	20824 <main+0xf8>
	}
	alt_up_accelerometer_spi_write(acc_dev, 0x1F, -63);
   2075c:	d0a72017 	ldw	r2,-25472(gp)
   20760:	01803044 	movi	r6,193
   20764:	014007c4 	movi	r5,31
   20768:	1009883a 	mov	r4,r2
   2076c:	002ef640 	call	2ef64 <alt_up_accelerometer_spi_write>
	//By default accelerometer reads 1g,0g
	//writing to Y OFFSET register on accelerometer, accounting for 1g caused by gravity.
	//The offset is scaled by a factor of 2 so (127 - 2*-63=0)(127=1G according to datasheet)
	//The output is scaled to 8 bits (255=1G), difference is confusing but worked.

	printf("connected\n");
   20770:	010000f4 	movhi	r4,3
   20774:	21007e04 	addi	r4,r4,504
   20778:	002098c0 	call	2098c <puts>

	//TEST HEX DISPLAY
	char characters[2] = {'S','c'};
   2077c:	0098d4c4 	movi	r2,25427
   20780:	e0bfff0d 	sth	r2,-4(fp)
	printf("%d\n",'s'); //s has ASCII value of 115, S has ASCII value of 83
   20784:	01401cc4 	movi	r5,115
   20788:	010000f4 	movhi	r4,3
   2078c:	21008104 	addi	r4,r4,516
   20790:	00208680 	call	20868 <printf>
	alt_16 score = 123;
   20794:	00801ec4 	movi	r2,123
   20798:	e0bfff8d 	sth	r2,-2(fp)
	write_7seg(characters, score);
   2079c:	e0ffff8f 	ldh	r3,-2(fp)
   207a0:	e0bfff04 	addi	r2,fp,-4
   207a4:	180b883a 	mov	r5,r3
   207a8:	1009883a 	mov	r4,r2
   207ac:	00206540 	call	20654 <write_7seg>

	while(1){
		//READ DATA
		alt_32 yz_raw[] = {0,0};
   207b0:	e03ffd15 	stw	zero,-12(fp)
   207b4:	e03ffe15 	stw	zero,-8(fp)
		read_accelerometer(yz_raw);
   207b8:	e0bffd04 	addi	r2,fp,-12
   207bc:	1009883a 	mov	r4,r2
   207c0:	00202640 	call	20264 <read_accelerometer>

		//FILTER DATA
		IOWR_ALTERA_AVALON_PIO_DATA(FILTER_Y_IN_BASE, yz_raw[0]);
   207c4:	e0fffd17 	ldw	r3,-12(fp)
   207c8:	00800134 	movhi	r2,4
   207cc:	10c41435 	stwio	r3,4176(r2)
		IOWR_ALTERA_AVALON_PIO_DATA(FILTER_Z_IN_BASE, yz_raw[1]);
   207d0:	e0fffe17 	ldw	r3,-8(fp)
   207d4:	00800134 	movhi	r2,4
   207d8:	10c40c35 	stwio	r3,4144(r2)

		yz[0] = IORD_ALTERA_AVALON_PIO_DATA(FILTER_Y_OUT_BASE);
   207dc:	00800134 	movhi	r2,4
   207e0:	10841037 	ldwio	r2,4160(r2)
   207e4:	d0a71d15 	stw	r2,-25484(gp)
		yz[1] = IORD_ALTERA_AVALON_PIO_DATA(FILTER_Z_OUT_BASE);
   207e8:	00800134 	movhi	r2,4
   207ec:	10840837 	ldwio	r2,4128(r2)
   207f0:	d0a71e15 	stw	r2,-25480(gp)

		//PROCESS INPUT
		if (en_f) {
   207f4:	d0a00417 	ldw	r2,-32752(gp)
   207f8:	10000526 	beq	r2,zero,20810 <main+0xe4>
			en_f = !detect_ACT();
   207fc:	00204080 	call	20408 <detect_ACT>
   20800:	1005003a 	cmpeq	r2,r2,zero
   20804:	10803fcc 	andi	r2,r2,255
   20808:	d0a00415 	stw	r2,-32752(gp)
   2080c:	003fe806 	br	207b0 <main+0x84>
		} else if (!en_f) {
   20810:	d0a00417 	ldw	r2,-32752(gp)
   20814:	103fe61e 	bne	r2,zero,207b0 <main+0x84>
			en_f = wait_INACT();
   20818:	00205ec0 	call	205ec <wait_INACT>
   2081c:	d0a00415 	stw	r2,-32752(gp)
	while(1){
   20820:	003fe306 	br	207b0 <main+0x84>


	}

	return 0;
}
   20824:	e037883a 	mov	sp,fp
   20828:	dfc00117 	ldw	ra,4(sp)
   2082c:	df000017 	ldw	fp,0(sp)
   20830:	dec00204 	addi	sp,sp,8
   20834:	f800283a 	ret

00020838 <_printf_r>:
   20838:	defffd04 	addi	sp,sp,-12
   2083c:	2805883a 	mov	r2,r5
   20840:	dfc00015 	stw	ra,0(sp)
   20844:	d9800115 	stw	r6,4(sp)
   20848:	d9c00215 	stw	r7,8(sp)
   2084c:	21400217 	ldw	r5,8(r4)
   20850:	d9c00104 	addi	r7,sp,4
   20854:	100d883a 	mov	r6,r2
   20858:	0020a340 	call	20a34 <___vfprintf_internal_r>
   2085c:	dfc00017 	ldw	ra,0(sp)
   20860:	dec00304 	addi	sp,sp,12
   20864:	f800283a 	ret

00020868 <printf>:
   20868:	defffc04 	addi	sp,sp,-16
   2086c:	dfc00015 	stw	ra,0(sp)
   20870:	d9400115 	stw	r5,4(sp)
   20874:	d9800215 	stw	r6,8(sp)
   20878:	d9c00315 	stw	r7,12(sp)
   2087c:	008000f4 	movhi	r2,3
   20880:	10891917 	ldw	r2,9316(r2)
   20884:	200b883a 	mov	r5,r4
   20888:	d9800104 	addi	r6,sp,4
   2088c:	11000217 	ldw	r4,8(r2)
   20890:	0022b200 	call	22b20 <__vfprintf_internal>
   20894:	dfc00017 	ldw	ra,0(sp)
   20898:	dec00404 	addi	sp,sp,16
   2089c:	f800283a 	ret

000208a0 <_putchar_r>:
   208a0:	21800217 	ldw	r6,8(r4)
   208a4:	00275f01 	jmpi	275f0 <_putc_r>

000208a8 <putchar>:
   208a8:	008000f4 	movhi	r2,3
   208ac:	10891917 	ldw	r2,9316(r2)
   208b0:	200b883a 	mov	r5,r4
   208b4:	11800217 	ldw	r6,8(r2)
   208b8:	1009883a 	mov	r4,r2
   208bc:	00275f01 	jmpi	275f0 <_putc_r>

000208c0 <_puts_r>:
   208c0:	defff504 	addi	sp,sp,-44
   208c4:	dc000815 	stw	r16,32(sp)
   208c8:	2021883a 	mov	r16,r4
   208cc:	2809883a 	mov	r4,r5
   208d0:	dc400915 	stw	r17,36(sp)
   208d4:	dfc00a15 	stw	ra,40(sp)
   208d8:	2823883a 	mov	r17,r5
   208dc:	002099c0 	call	2099c <strlen>
   208e0:	11000044 	addi	r4,r2,1
   208e4:	d8800515 	stw	r2,20(sp)
   208e8:	00800044 	movi	r2,1
   208ec:	00c000f4 	movhi	r3,3
   208f0:	d8800715 	stw	r2,28(sp)
   208f4:	d8800404 	addi	r2,sp,16
   208f8:	18c08204 	addi	r3,r3,520
   208fc:	d8800115 	stw	r2,4(sp)
   20900:	00800084 	movi	r2,2
   20904:	dc400415 	stw	r17,16(sp)
   20908:	d8c00615 	stw	r3,24(sp)
   2090c:	d9000315 	stw	r4,12(sp)
   20910:	d8800215 	stw	r2,8(sp)
   20914:	81400217 	ldw	r5,8(r16)
   20918:	80000226 	beq	r16,zero,20924 <_puts_r+0x64>
   2091c:	80800e17 	ldw	r2,56(r16)
   20920:	10001326 	beq	r2,zero,20970 <_puts_r+0xb0>
   20924:	2880030b 	ldhu	r2,12(r5)
   20928:	10c8000c 	andi	r3,r2,8192
   2092c:	1800061e 	bne	r3,zero,20948 <_puts_r+0x88>
   20930:	28c01917 	ldw	r3,100(r5)
   20934:	0137ffc4 	movi	r4,-8193
   20938:	10880014 	ori	r2,r2,8192
   2093c:	1906703a 	and	r3,r3,r4
   20940:	2880030d 	sth	r2,12(r5)
   20944:	28c01915 	stw	r3,100(r5)
   20948:	d9800104 	addi	r6,sp,4
   2094c:	8009883a 	mov	r4,r16
   20950:	00250e40 	call	250e4 <__sfvwrite_r>
   20954:	10000b1e 	bne	r2,zero,20984 <_puts_r+0xc4>
   20958:	00800284 	movi	r2,10
   2095c:	dfc00a17 	ldw	ra,40(sp)
   20960:	dc400917 	ldw	r17,36(sp)
   20964:	dc000817 	ldw	r16,32(sp)
   20968:	dec00b04 	addi	sp,sp,44
   2096c:	f800283a 	ret
   20970:	8009883a 	mov	r4,r16
   20974:	d9400015 	stw	r5,0(sp)
   20978:	0024c840 	call	24c84 <__sinit>
   2097c:	d9400017 	ldw	r5,0(sp)
   20980:	003fe806 	br	20924 <_puts_r+0x64>
   20984:	00bfffc4 	movi	r2,-1
   20988:	003ff406 	br	2095c <_puts_r+0x9c>

0002098c <puts>:
   2098c:	008000f4 	movhi	r2,3
   20990:	200b883a 	mov	r5,r4
   20994:	11091917 	ldw	r4,9316(r2)
   20998:	00208c01 	jmpi	208c0 <_puts_r>

0002099c <strlen>:
   2099c:	208000cc 	andi	r2,r4,3
   209a0:	10000926 	beq	r2,zero,209c8 <strlen+0x2c>
   209a4:	2005883a 	mov	r2,r4
   209a8:	00000306 	br	209b8 <strlen+0x1c>
   209ac:	10800044 	addi	r2,r2,1
   209b0:	10c000cc 	andi	r3,r2,3
   209b4:	18000526 	beq	r3,zero,209cc <strlen+0x30>
   209b8:	10c00007 	ldb	r3,0(r2)
   209bc:	183ffb1e 	bne	r3,zero,209ac <strlen+0x10>
   209c0:	1105c83a 	sub	r2,r2,r4
   209c4:	f800283a 	ret
   209c8:	2005883a 	mov	r2,r4
   209cc:	11400017 	ldw	r5,0(r2)
   209d0:	01ffbff4 	movhi	r7,65279
   209d4:	39ffbfc4 	addi	r7,r7,-257
   209d8:	29c7883a 	add	r3,r5,r7
   209dc:	01a02074 	movhi	r6,32897
   209e0:	014a303a 	nor	r5,zero,r5
   209e4:	1946703a 	and	r3,r3,r5
   209e8:	31a02004 	addi	r6,r6,-32640
   209ec:	1986703a 	and	r3,r3,r6
   209f0:	1800071e 	bne	r3,zero,20a10 <strlen+0x74>
   209f4:	11400117 	ldw	r5,4(r2)
   209f8:	10800104 	addi	r2,r2,4
   209fc:	29c7883a 	add	r3,r5,r7
   20a00:	014a303a 	nor	r5,zero,r5
   20a04:	1946703a 	and	r3,r3,r5
   20a08:	1986703a 	and	r3,r3,r6
   20a0c:	183ff926 	beq	r3,zero,209f4 <strlen+0x58>
   20a10:	10c00007 	ldb	r3,0(r2)
   20a14:	183fea26 	beq	r3,zero,209c0 <strlen+0x24>
   20a18:	10c00047 	ldb	r3,1(r2)
   20a1c:	10800044 	addi	r2,r2,1
   20a20:	183fe726 	beq	r3,zero,209c0 <strlen+0x24>
   20a24:	10c00047 	ldb	r3,1(r2)
   20a28:	10800044 	addi	r2,r2,1
   20a2c:	183ffa1e 	bne	r3,zero,20a18 <strlen+0x7c>
   20a30:	003fe306 	br	209c0 <strlen+0x24>

00020a34 <___vfprintf_internal_r>:
   20a34:	deffbf04 	addi	sp,sp,-260
   20a38:	dfc04015 	stw	ra,256(sp)
   20a3c:	dd803d15 	stw	r22,244(sp)
   20a40:	dcc03a15 	stw	r19,232(sp)
   20a44:	dc803915 	stw	r18,228(sp)
   20a48:	2027883a 	mov	r19,r4
   20a4c:	2825883a 	mov	r18,r5
   20a50:	302d883a 	mov	r22,r6
   20a54:	d9c00615 	stw	r7,24(sp)
   20a58:	df003f15 	stw	fp,252(sp)
   20a5c:	ddc03e15 	stw	r23,248(sp)
   20a60:	dd403c15 	stw	r21,240(sp)
   20a64:	dd003b15 	stw	r20,236(sp)
   20a68:	dc403815 	stw	r17,224(sp)
   20a6c:	dc003715 	stw	r16,220(sp)
   20a70:	00256f80 	call	256f8 <_localeconv_r>
   20a74:	10800017 	ldw	r2,0(r2)
   20a78:	1009883a 	mov	r4,r2
   20a7c:	d8800d15 	stw	r2,52(sp)
   20a80:	002099c0 	call	2099c <strlen>
   20a84:	d8800b15 	stw	r2,44(sp)
   20a88:	98000226 	beq	r19,zero,20a94 <___vfprintf_internal_r+0x60>
   20a8c:	98800e17 	ldw	r2,56(r19)
   20a90:	1001d726 	beq	r2,zero,211f0 <___vfprintf_internal_r+0x7bc>
   20a94:	9080030b 	ldhu	r2,12(r18)
   20a98:	10c8000c 	andi	r3,r2,8192
   20a9c:	1800061e 	bne	r3,zero,20ab8 <___vfprintf_internal_r+0x84>
   20aa0:	90c01917 	ldw	r3,100(r18)
   20aa4:	0137ffc4 	movi	r4,-8193
   20aa8:	10880014 	ori	r2,r2,8192
   20aac:	1906703a 	and	r3,r3,r4
   20ab0:	9080030d 	sth	r2,12(r18)
   20ab4:	90c01915 	stw	r3,100(r18)
   20ab8:	10c0020c 	andi	r3,r2,8
   20abc:	1800fc26 	beq	r3,zero,20eb0 <___vfprintf_internal_r+0x47c>
   20ac0:	90c00417 	ldw	r3,16(r18)
   20ac4:	1800fa26 	beq	r3,zero,20eb0 <___vfprintf_internal_r+0x47c>
   20ac8:	1080068c 	andi	r2,r2,26
   20acc:	10800298 	cmpnei	r2,r2,10
   20ad0:	1000ff26 	beq	r2,zero,20ed0 <___vfprintf_internal_r+0x49c>
   20ad4:	d8802704 	addi	r2,sp,156
   20ad8:	b02f883a 	mov	r23,r22
   20adc:	d8801a15 	stw	r2,104(sp)
   20ae0:	d8001c15 	stw	zero,112(sp)
   20ae4:	d8001b15 	stw	zero,108(sp)
   20ae8:	d8000815 	stw	zero,32(sp)
   20aec:	d8000915 	stw	zero,36(sp)
   20af0:	d8000a15 	stw	zero,40(sp)
   20af4:	d8000c15 	stw	zero,48(sp)
   20af8:	d8001015 	stw	zero,64(sp)
   20afc:	d8000515 	stw	zero,20(sp)
   20b00:	102d883a 	mov	r22,r2
   20b04:	b8800007 	ldb	r2,0(r23)
   20b08:	1000d726 	beq	r2,zero,20e68 <___vfprintf_internal_r+0x434>
   20b0c:	b821883a 	mov	r16,r23
   20b10:	00000306 	br	20b20 <___vfprintf_internal_r+0xec>
   20b14:	80800047 	ldb	r2,1(r16)
   20b18:	84000044 	addi	r16,r16,1
   20b1c:	10011926 	beq	r2,zero,20f84 <___vfprintf_internal_r+0x550>
   20b20:	10800958 	cmpnei	r2,r2,37
   20b24:	103ffb1e 	bne	r2,zero,20b14 <___vfprintf_internal_r+0xe0>
   20b28:	85e3c83a 	sub	r17,r16,r23
   20b2c:	85c1171e 	bne	r16,r23,20f8c <___vfprintf_internal_r+0x558>
   20b30:	80800003 	ldbu	r2,0(r16)
   20b34:	10803fcc 	andi	r2,r2,255
   20b38:	1080201c 	xori	r2,r2,128
   20b3c:	10bfe004 	addi	r2,r2,-128
   20b40:	1000c926 	beq	r2,zero,20e68 <___vfprintf_internal_r+0x434>
   20b44:	82c00047 	ldb	r11,1(r16)
   20b48:	85c00044 	addi	r23,r16,1
   20b4c:	d8001345 	stb	zero,77(sp)
   20b50:	0009883a 	mov	r4,zero
   20b54:	000b883a 	mov	r5,zero
   20b58:	023fffc4 	movi	r8,-1
   20b5c:	0021883a 	mov	r16,zero
   20b60:	0019883a 	mov	r12,zero
   20b64:	bdc00044 	addi	r23,r23,1
   20b68:	5839883a 	mov	fp,r11
   20b6c:	e0bff804 	addi	r2,fp,-32
   20b70:	10c01668 	cmpgeui	r3,r2,89
   20b74:	18006c1e 	bne	r3,zero,20d28 <___vfprintf_internal_r+0x2f4>
   20b78:	100490ba 	slli	r2,r2,2
   20b7c:	00c000b4 	movhi	r3,2
   20b80:	10c7883a 	add	r3,r2,r3
   20b84:	1882e317 	ldw	r2,2956(r3)
   20b88:	1000683a 	jmp	r2
   20b8c:	00021578 	rdprs	zero,zero,2133
   20b90:	00020d28 	cmpgeui	zero,zero,2100
   20b94:	00020d28 	cmpgeui	zero,zero,2100
   20b98:	0002156c 	andhi	zero,zero,2133
   20b9c:	00020d28 	cmpgeui	zero,zero,2100
   20ba0:	00020d28 	cmpgeui	zero,zero,2100
   20ba4:	00020d28 	cmpgeui	zero,zero,2100
   20ba8:	00020d28 	cmpgeui	zero,zero,2100
   20bac:	00020d28 	cmpgeui	zero,zero,2100
   20bb0:	00020d28 	cmpgeui	zero,zero,2100
   20bb4:	00021544 	movi	zero,2133
   20bb8:	00021534 	movhi	zero,2132
   20bbc:	00020d28 	cmpgeui	zero,zero,2100
   20bc0:	0002151c 	xori	zero,zero,2132
   20bc4:	000214d0 	cmplti	zero,zero,2131
   20bc8:	00020d28 	cmpgeui	zero,zero,2100
   20bcc:	000214c4 	movi	zero,2131
   20bd0:	00020cf0 	cmpltui	zero,zero,2099
   20bd4:	00020cf0 	cmpltui	zero,zero,2099
   20bd8:	00020cf0 	cmpltui	zero,zero,2099
   20bdc:	00020cf0 	cmpltui	zero,zero,2099
   20be0:	00020cf0 	cmpltui	zero,zero,2099
   20be4:	00020cf0 	cmpltui	zero,zero,2099
   20be8:	00020cf0 	cmpltui	zero,zero,2099
   20bec:	00020cf0 	cmpltui	zero,zero,2099
   20bf0:	00020cf0 	cmpltui	zero,zero,2099
   20bf4:	00020d28 	cmpgeui	zero,zero,2100
   20bf8:	00020d28 	cmpgeui	zero,zero,2100
   20bfc:	00020d28 	cmpgeui	zero,zero,2100
   20c00:	00020d28 	cmpgeui	zero,zero,2100
   20c04:	00020d28 	cmpgeui	zero,zero,2100
   20c08:	00020d28 	cmpgeui	zero,zero,2100
   20c0c:	00020d28 	cmpgeui	zero,zero,2100
   20c10:	00020d28 	cmpgeui	zero,zero,2100
   20c14:	00020d28 	cmpgeui	zero,zero,2100
   20c18:	00020d28 	cmpgeui	zero,zero,2100
   20c1c:	000213b8 	rdprs	zero,zero,2126
   20c20:	00020fe8 	cmpgeui	zero,zero,2111
   20c24:	00020d28 	cmpgeui	zero,zero,2100
   20c28:	00020fe8 	cmpgeui	zero,zero,2111
   20c2c:	00020d28 	cmpgeui	zero,zero,2100
   20c30:	00020d28 	cmpgeui	zero,zero,2100
   20c34:	00020d28 	cmpgeui	zero,zero,2100
   20c38:	00020d28 	cmpgeui	zero,zero,2100
   20c3c:	000215a4 	muli	zero,zero,2134
   20c40:	00020d28 	cmpgeui	zero,zero,2100
   20c44:	00020d28 	cmpgeui	zero,zero,2100
   20c48:	00020f1c 	xori	zero,zero,2108
   20c4c:	00020d28 	cmpgeui	zero,zero,2100
   20c50:	00020d28 	cmpgeui	zero,zero,2100
   20c54:	00020d28 	cmpgeui	zero,zero,2100
   20c58:	00020d28 	cmpgeui	zero,zero,2100
   20c5c:	00020d28 	cmpgeui	zero,zero,2100
   20c60:	00020ef4 	movhi	zero,2107
   20c64:	00020d28 	cmpgeui	zero,zero,2100
   20c68:	00020d28 	cmpgeui	zero,zero,2100
   20c6c:	000215d8 	cmpnei	zero,zero,2135
   20c70:	00020d28 	cmpgeui	zero,zero,2100
   20c74:	00020d28 	cmpgeui	zero,zero,2100
   20c78:	00020d28 	cmpgeui	zero,zero,2100
   20c7c:	00020d28 	cmpgeui	zero,zero,2100
   20c80:	00020d28 	cmpgeui	zero,zero,2100
   20c84:	00020d28 	cmpgeui	zero,zero,2100
   20c88:	00020d28 	cmpgeui	zero,zero,2100
   20c8c:	00020d28 	cmpgeui	zero,zero,2100
   20c90:	00020d28 	cmpgeui	zero,zero,2100
   20c94:	00020d28 	cmpgeui	zero,zero,2100
   20c98:	000215b0 	cmpltui	zero,zero,2134
   20c9c:	000211fc 	xorhi	zero,zero,2119
   20ca0:	00020fe8 	cmpgeui	zero,zero,2111
   20ca4:	00020fe8 	cmpgeui	zero,zero,2111
   20ca8:	00020fe8 	cmpgeui	zero,zero,2111
   20cac:	00021270 	cmpltui	zero,zero,2121
   20cb0:	000211fc 	xorhi	zero,zero,2119
   20cb4:	00020d28 	cmpgeui	zero,zero,2100
   20cb8:	00020d28 	cmpgeui	zero,zero,2100
   20cbc:	000213a4 	muli	zero,zero,2126
   20cc0:	00020d28 	cmpgeui	zero,zero,2100
   20cc4:	00021368 	cmpgeui	zero,zero,2125
   20cc8:	00020f20 	cmpeqi	zero,zero,2108
   20ccc:	00021328 	cmpgeui	zero,zero,2124
   20cd0:	0002131c 	xori	zero,zero,2124
   20cd4:	00020d28 	cmpgeui	zero,zero,2100
   20cd8:	000212c4 	movi	zero,2123
   20cdc:	00020d28 	cmpgeui	zero,zero,2100
   20ce0:	00020ef8 	rdprs	zero,zero,2107
   20ce4:	00020d28 	cmpgeui	zero,zero,2100
   20ce8:	00020d28 	cmpgeui	zero,zero,2100
   20cec:	0002127c 	xorhi	zero,zero,2121
   20cf0:	0021883a 	mov	r16,zero
   20cf4:	e0fff404 	addi	r3,fp,-48
   20cf8:	800490ba 	slli	r2,r16,2
   20cfc:	bf000007 	ldb	fp,0(r23)
   20d00:	bdc00044 	addi	r23,r23,1
   20d04:	1421883a 	add	r16,r2,r16
   20d08:	8421883a 	add	r16,r16,r16
   20d0c:	1c21883a 	add	r16,r3,r16
   20d10:	e0fff404 	addi	r3,fp,-48
   20d14:	188002b0 	cmpltui	r2,r3,10
   20d18:	103ff71e 	bne	r2,zero,20cf8 <___vfprintf_internal_r+0x2c4>
   20d1c:	e0bff804 	addi	r2,fp,-32
   20d20:	10c01668 	cmpgeui	r3,r2,89
   20d24:	183f9426 	beq	r3,zero,20b78 <___vfprintf_internal_r+0x144>
   20d28:	21003fcc 	andi	r4,r4,255
   20d2c:	20068f1e 	bne	r4,zero,2276c <___vfprintf_internal_r+0x1d38>
   20d30:	e0004d26 	beq	fp,zero,20e68 <___vfprintf_internal_r+0x434>
   20d34:	df001d05 	stb	fp,116(sp)
   20d38:	d8001345 	stb	zero,77(sp)
   20d3c:	05000044 	movi	r20,1
   20d40:	05400044 	movi	r21,1
   20d44:	dc401d04 	addi	r17,sp,116
   20d48:	db000415 	stw	r12,16(sp)
   20d4c:	0011883a 	mov	r8,zero
   20d50:	d8000715 	stw	zero,28(sp)
   20d54:	d8800417 	ldw	r2,16(sp)
   20d58:	1380008c 	andi	r14,r2,2
   20d5c:	70000126 	beq	r14,zero,20d64 <___vfprintf_internal_r+0x330>
   20d60:	a5000084 	addi	r20,r20,2
   20d64:	d8800417 	ldw	r2,16(sp)
   20d68:	d8c01c17 	ldw	r3,112(sp)
   20d6c:	1340210c 	andi	r13,r2,132
   20d70:	6800021e 	bne	r13,zero,20d7c <___vfprintf_internal_r+0x348>
   20d74:	850fc83a 	sub	r7,r16,r20
   20d78:	01c36016 	blt	zero,r7,21afc <___vfprintf_internal_r+0x10c8>
   20d7c:	d8801347 	ldb	r2,77(sp)
   20d80:	10000c26 	beq	r2,zero,20db4 <___vfprintf_internal_r+0x380>
   20d84:	d8801b17 	ldw	r2,108(sp)
   20d88:	d9001344 	addi	r4,sp,77
   20d8c:	18c00044 	addi	r3,r3,1
   20d90:	10800044 	addi	r2,r2,1
   20d94:	b1000015 	stw	r4,0(r22)
   20d98:	01000044 	movi	r4,1
   20d9c:	d8801b15 	stw	r2,108(sp)
   20da0:	b1000115 	stw	r4,4(r22)
   20da4:	d8c01c15 	stw	r3,112(sp)
   20da8:	10800208 	cmpgei	r2,r2,8
   20dac:	1003a01e 	bne	r2,zero,21c30 <___vfprintf_internal_r+0x11fc>
   20db0:	b5800204 	addi	r22,r22,8
   20db4:	70000c26 	beq	r14,zero,20de8 <___vfprintf_internal_r+0x3b4>
   20db8:	d8801b17 	ldw	r2,108(sp)
   20dbc:	d9001384 	addi	r4,sp,78
   20dc0:	18c00084 	addi	r3,r3,2
   20dc4:	10800044 	addi	r2,r2,1
   20dc8:	b1000015 	stw	r4,0(r22)
   20dcc:	01000084 	movi	r4,2
   20dd0:	d8801b15 	stw	r2,108(sp)
   20dd4:	b1000115 	stw	r4,4(r22)
   20dd8:	d8c01c15 	stw	r3,112(sp)
   20ddc:	10800208 	cmpgei	r2,r2,8
   20de0:	1003871e 	bne	r2,zero,21c00 <___vfprintf_internal_r+0x11cc>
   20de4:	b5800204 	addi	r22,r22,8
   20de8:	6b402018 	cmpnei	r13,r13,128
   20dec:	68025226 	beq	r13,zero,21738 <___vfprintf_internal_r+0xd04>
   20df0:	4551c83a 	sub	r8,r8,r21
   20df4:	02028a16 	blt	zero,r8,21820 <___vfprintf_internal_r+0xdec>
   20df8:	d8800417 	ldw	r2,16(sp)
   20dfc:	1080400c 	andi	r2,r2,256
   20e00:	1002071e 	bne	r2,zero,21620 <___vfprintf_internal_r+0xbec>
   20e04:	d8801b17 	ldw	r2,108(sp)
   20e08:	1d47883a 	add	r3,r3,r21
   20e0c:	b4400015 	stw	r17,0(r22)
   20e10:	10800044 	addi	r2,r2,1
   20e14:	b5400115 	stw	r21,4(r22)
   20e18:	d8801b15 	stw	r2,108(sp)
   20e1c:	d8c01c15 	stw	r3,112(sp)
   20e20:	10800208 	cmpgei	r2,r2,8
   20e24:	1002ee1e 	bne	r2,zero,219e0 <___vfprintf_internal_r+0xfac>
   20e28:	b5800204 	addi	r22,r22,8
   20e2c:	d8800417 	ldw	r2,16(sp)
   20e30:	1440010c 	andi	r17,r2,4
   20e34:	88000226 	beq	r17,zero,20e40 <___vfprintf_internal_r+0x40c>
   20e38:	8523c83a 	sub	r17,r16,r20
   20e3c:	0440bd16 	blt	zero,r17,21134 <___vfprintf_internal_r+0x700>
   20e40:	8500010e 	bge	r16,r20,20e48 <___vfprintf_internal_r+0x414>
   20e44:	a021883a 	mov	r16,r20
   20e48:	d8800517 	ldw	r2,20(sp)
   20e4c:	1405883a 	add	r2,r2,r16
   20e50:	d8800515 	stw	r2,20(sp)
   20e54:	1802b91e 	bne	r3,zero,2193c <___vfprintf_internal_r+0xf08>
   20e58:	b8800007 	ldb	r2,0(r23)
   20e5c:	d8001b15 	stw	zero,108(sp)
   20e60:	dd802704 	addi	r22,sp,156
   20e64:	103f291e 	bne	r2,zero,20b0c <___vfprintf_internal_r+0xd8>
   20e68:	d8801c17 	ldw	r2,112(sp)
   20e6c:	10063a1e 	bne	r2,zero,22758 <___vfprintf_internal_r+0x1d24>
   20e70:	9080030b 	ldhu	r2,12(r18)
   20e74:	1080100c 	andi	r2,r2,64
   20e78:	1006c91e 	bne	r2,zero,229a0 <___vfprintf_internal_r+0x1f6c>
   20e7c:	d8800517 	ldw	r2,20(sp)
   20e80:	dfc04017 	ldw	ra,256(sp)
   20e84:	df003f17 	ldw	fp,252(sp)
   20e88:	ddc03e17 	ldw	r23,248(sp)
   20e8c:	dd803d17 	ldw	r22,244(sp)
   20e90:	dd403c17 	ldw	r21,240(sp)
   20e94:	dd003b17 	ldw	r20,236(sp)
   20e98:	dcc03a17 	ldw	r19,232(sp)
   20e9c:	dc803917 	ldw	r18,228(sp)
   20ea0:	dc403817 	ldw	r17,224(sp)
   20ea4:	dc003717 	ldw	r16,220(sp)
   20ea8:	dec04104 	addi	sp,sp,260
   20eac:	f800283a 	ret
   20eb0:	900b883a 	mov	r5,r18
   20eb4:	9809883a 	mov	r4,r19
   20eb8:	0022bfc0 	call	22bfc <__swsetup_r>
   20ebc:	1006b81e 	bne	r2,zero,229a0 <___vfprintf_internal_r+0x1f6c>
   20ec0:	9080030b 	ldhu	r2,12(r18)
   20ec4:	1080068c 	andi	r2,r2,26
   20ec8:	10800298 	cmpnei	r2,r2,10
   20ecc:	103f011e 	bne	r2,zero,20ad4 <___vfprintf_internal_r+0xa0>
   20ed0:	9080038f 	ldh	r2,14(r18)
   20ed4:	103eff16 	blt	r2,zero,20ad4 <___vfprintf_internal_r+0xa0>
   20ed8:	d9c00617 	ldw	r7,24(sp)
   20edc:	b00d883a 	mov	r6,r22
   20ee0:	900b883a 	mov	r5,r18
   20ee4:	9809883a 	mov	r4,r19
   20ee8:	0022b3c0 	call	22b3c <__sbprintf>
   20eec:	d8800515 	stw	r2,20(sp)
   20ef0:	003fe206 	br	20e7c <___vfprintf_internal_r+0x448>
   20ef4:	63000414 	ori	r12,r12,16
   20ef8:	6080080c 	andi	r2,r12,32
   20efc:	10008126 	beq	r2,zero,21104 <___vfprintf_internal_r+0x6d0>
   20f00:	d8c00617 	ldw	r3,24(sp)
   20f04:	00800044 	movi	r2,1
   20f08:	1d000017 	ldw	r20,0(r3)
   20f0c:	1d400117 	ldw	r21,4(r3)
   20f10:	18c00204 	addi	r3,r3,8
   20f14:	d8c00615 	stw	r3,24(sp)
   20f18:	00000906 	br	20f40 <___vfprintf_internal_r+0x50c>
   20f1c:	63000414 	ori	r12,r12,16
   20f20:	6080080c 	andi	r2,r12,32
   20f24:	10006b26 	beq	r2,zero,210d4 <___vfprintf_internal_r+0x6a0>
   20f28:	d8c00617 	ldw	r3,24(sp)
   20f2c:	0005883a 	mov	r2,zero
   20f30:	1d000017 	ldw	r20,0(r3)
   20f34:	1d400117 	ldw	r21,4(r3)
   20f38:	18c00204 	addi	r3,r3,8
   20f3c:	d8c00615 	stw	r3,24(sp)
   20f40:	d8001345 	stb	zero,77(sp)
   20f44:	40ffffe0 	cmpeqi	r3,r8,-1
   20f48:	001b883a 	mov	r13,zero
   20f4c:	1801351e 	bne	r3,zero,21424 <___vfprintf_internal_r+0x9f0>
   20f50:	047fdfc4 	movi	r17,-129
   20f54:	6448703a 	and	r4,r12,r17
   20f58:	a546b03a 	or	r3,r20,r21
   20f5c:	d9000415 	stw	r4,16(sp)
   20f60:	1802e41e 	bne	r3,zero,21af4 <___vfprintf_internal_r+0x10c0>
   20f64:	40025f1e 	bne	r8,zero,218e4 <___vfprintf_internal_r+0xeb0>
   20f68:	1003a61e 	bne	r2,zero,21e04 <___vfprintf_internal_r+0x13d0>
   20f6c:	6540004c 	andi	r21,r12,1
   20f70:	a803d426 	beq	r21,zero,21ec4 <___vfprintf_internal_r+0x1490>
   20f74:	00800c04 	movi	r2,48
   20f78:	d88026c5 	stb	r2,155(sp)
   20f7c:	dc4026c4 	addi	r17,sp,155
   20f80:	00014606 	br	2149c <___vfprintf_internal_r+0xa68>
   20f84:	85e3c83a 	sub	r17,r16,r23
   20f88:	85ffb726 	beq	r16,r23,20e68 <___vfprintf_internal_r+0x434>
   20f8c:	d8c01c17 	ldw	r3,112(sp)
   20f90:	d8801b17 	ldw	r2,108(sp)
   20f94:	b5c00015 	stw	r23,0(r22)
   20f98:	1c47883a 	add	r3,r3,r17
   20f9c:	10800044 	addi	r2,r2,1
   20fa0:	d8801b15 	stw	r2,108(sp)
   20fa4:	b4400115 	stw	r17,4(r22)
   20fa8:	d8c01c15 	stw	r3,112(sp)
   20fac:	10800208 	cmpgei	r2,r2,8
   20fb0:	1000061e 	bne	r2,zero,20fcc <___vfprintf_internal_r+0x598>
   20fb4:	b5800204 	addi	r22,r22,8
   20fb8:	d8c00517 	ldw	r3,20(sp)
   20fbc:	80800003 	ldbu	r2,0(r16)
   20fc0:	1c47883a 	add	r3,r3,r17
   20fc4:	d8c00515 	stw	r3,20(sp)
   20fc8:	003eda06 	br	20b34 <___vfprintf_internal_r+0x100>
   20fcc:	d9801a04 	addi	r6,sp,104
   20fd0:	900b883a 	mov	r5,r18
   20fd4:	9809883a 	mov	r4,r19
   20fd8:	0027f8c0 	call	27f8c <__sprint_r>
   20fdc:	103fa41e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   20fe0:	dd802704 	addi	r22,sp,156
   20fe4:	003ff406 	br	20fb8 <___vfprintf_internal_r+0x584>
   20fe8:	21003fcc 	andi	r4,r4,255
   20fec:	20066a1e 	bne	r4,zero,22998 <___vfprintf_internal_r+0x1f64>
   20ff0:	d8c00617 	ldw	r3,24(sp)
   20ff4:	6080020c 	andi	r2,r12,8
   20ff8:	19000204 	addi	r4,r3,8
   20ffc:	d9000e15 	stw	r4,56(sp)
   21000:	1003d01e 	bne	r2,zero,21f44 <___vfprintf_internal_r+0x1510>
   21004:	d8800617 	ldw	r2,24(sp)
   21008:	10c00017 	ldw	r3,0(r2)
   2100c:	10800117 	ldw	r2,4(r2)
   21010:	d8c00915 	stw	r3,36(sp)
   21014:	d8800a15 	stw	r2,40(sp)
   21018:	dd400a17 	ldw	r21,40(sp)
   2101c:	dd000917 	ldw	r20,36(sp)
   21020:	00a00034 	movhi	r2,32768
   21024:	10bfffc4 	addi	r2,r2,-1
   21028:	a8a2703a 	and	r17,r21,r2
   2102c:	01dffc34 	movhi	r7,32752
   21030:	01bfffc4 	movi	r6,-1
   21034:	39ffffc4 	addi	r7,r7,-1
   21038:	a009883a 	mov	r4,r20
   2103c:	880b883a 	mov	r5,r17
   21040:	da000615 	stw	r8,24(sp)
   21044:	db000415 	stw	r12,16(sp)
   21048:	002d5740 	call	2d574 <__unorddf2>
   2104c:	db000417 	ldw	r12,16(sp)
   21050:	da000617 	ldw	r8,24(sp)
   21054:	1004701e 	bne	r2,zero,22218 <___vfprintf_internal_r+0x17e4>
   21058:	01dffc34 	movhi	r7,32752
   2105c:	01bfffc4 	movi	r6,-1
   21060:	39ffffc4 	addi	r7,r7,-1
   21064:	a009883a 	mov	r4,r20
   21068:	880b883a 	mov	r5,r17
   2106c:	002c3a80 	call	2c3a8 <__ledf2>
   21070:	db000417 	ldw	r12,16(sp)
   21074:	da000617 	ldw	r8,24(sp)
   21078:	0084670e 	bge	zero,r2,22218 <___vfprintf_internal_r+0x17e4>
   2107c:	000d883a 	mov	r6,zero
   21080:	000f883a 	mov	r7,zero
   21084:	a009883a 	mov	r4,r20
   21088:	a80b883a 	mov	r5,r21
   2108c:	002c3a80 	call	2c3a8 <__ledf2>
   21090:	db000417 	ldw	r12,16(sp)
   21094:	10059d16 	blt	r2,zero,2270c <___vfprintf_internal_r+0x1cd8>
   21098:	db401343 	ldbu	r13,77(sp)
   2109c:	e0801210 	cmplti	r2,fp,72
   210a0:	1005741e 	bne	r2,zero,22674 <___vfprintf_internal_r+0x1c40>
   210a4:	044000f4 	movhi	r17,3
   210a8:	8c408404 	addi	r17,r17,528
   210ac:	00bfdfc4 	movi	r2,-129
   210b0:	6084703a 	and	r2,r12,r2
   210b4:	d8800415 	stw	r2,16(sp)
   210b8:	d8800e17 	ldw	r2,56(sp)
   210bc:	050000c4 	movi	r20,3
   210c0:	054000c4 	movi	r21,3
   210c4:	d8800615 	stw	r2,24(sp)
   210c8:	0011883a 	mov	r8,zero
   210cc:	d8000715 	stw	zero,28(sp)
   210d0:	0000f606 	br	214ac <___vfprintf_internal_r+0xa78>
   210d4:	d9000617 	ldw	r4,24(sp)
   210d8:	6080040c 	andi	r2,r12,16
   210dc:	20c00104 	addi	r3,r4,4
   210e0:	1003891e 	bne	r2,zero,21f08 <___vfprintf_internal_r+0x14d4>
   210e4:	6080100c 	andi	r2,r12,64
   210e8:	10056b26 	beq	r2,zero,22698 <___vfprintf_internal_r+0x1c64>
   210ec:	d8800617 	ldw	r2,24(sp)
   210f0:	002b883a 	mov	r21,zero
   210f4:	d8c00615 	stw	r3,24(sp)
   210f8:	1500000b 	ldhu	r20,0(r2)
   210fc:	0005883a 	mov	r2,zero
   21100:	003f8f06 	br	20f40 <___vfprintf_internal_r+0x50c>
   21104:	d9000617 	ldw	r4,24(sp)
   21108:	6080040c 	andi	r2,r12,16
   2110c:	20c00104 	addi	r3,r4,4
   21110:	1003821e 	bne	r2,zero,21f1c <___vfprintf_internal_r+0x14e8>
   21114:	6080100c 	andi	r2,r12,64
   21118:	10056526 	beq	r2,zero,226b0 <___vfprintf_internal_r+0x1c7c>
   2111c:	d8800617 	ldw	r2,24(sp)
   21120:	002b883a 	mov	r21,zero
   21124:	d8c00615 	stw	r3,24(sp)
   21128:	1500000b 	ldhu	r20,0(r2)
   2112c:	00800044 	movi	r2,1
   21130:	003f8306 	br	20f40 <___vfprintf_internal_r+0x50c>
   21134:	030000f4 	movhi	r12,3
   21138:	89000450 	cmplti	r4,r17,17
   2113c:	d8801b17 	ldw	r2,108(sp)
   21140:	63009804 	addi	r12,r12,608
   21144:	20001b1e 	bne	r4,zero,211b4 <___vfprintf_internal_r+0x780>
   21148:	05400404 	movi	r21,16
   2114c:	6039883a 	mov	fp,r12
   21150:	00000406 	br	21164 <___vfprintf_internal_r+0x730>
   21154:	8c7ffc04 	addi	r17,r17,-16
   21158:	89000448 	cmpgei	r4,r17,17
   2115c:	b5800204 	addi	r22,r22,8
   21160:	20001326 	beq	r4,zero,211b0 <___vfprintf_internal_r+0x77c>
   21164:	10800044 	addi	r2,r2,1
   21168:	18c00404 	addi	r3,r3,16
   2116c:	b7000015 	stw	fp,0(r22)
   21170:	b5400115 	stw	r21,4(r22)
   21174:	d8c01c15 	stw	r3,112(sp)
   21178:	d8801b15 	stw	r2,108(sp)
   2117c:	11000208 	cmpgei	r4,r2,8
   21180:	203ff426 	beq	r4,zero,21154 <___vfprintf_internal_r+0x720>
   21184:	d9801a04 	addi	r6,sp,104
   21188:	900b883a 	mov	r5,r18
   2118c:	9809883a 	mov	r4,r19
   21190:	0027f8c0 	call	27f8c <__sprint_r>
   21194:	103f361e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   21198:	8c7ffc04 	addi	r17,r17,-16
   2119c:	89000448 	cmpgei	r4,r17,17
   211a0:	d8c01c17 	ldw	r3,112(sp)
   211a4:	d8801b17 	ldw	r2,108(sp)
   211a8:	dd802704 	addi	r22,sp,156
   211ac:	203fed1e 	bne	r4,zero,21164 <___vfprintf_internal_r+0x730>
   211b0:	e019883a 	mov	r12,fp
   211b4:	10800044 	addi	r2,r2,1
   211b8:	1c47883a 	add	r3,r3,r17
   211bc:	d8801b15 	stw	r2,108(sp)
   211c0:	b3000015 	stw	r12,0(r22)
   211c4:	b4400115 	stw	r17,4(r22)
   211c8:	d8c01c15 	stw	r3,112(sp)
   211cc:	10800210 	cmplti	r2,r2,8
   211d0:	103f1b1e 	bne	r2,zero,20e40 <___vfprintf_internal_r+0x40c>
   211d4:	d9801a04 	addi	r6,sp,104
   211d8:	900b883a 	mov	r5,r18
   211dc:	9809883a 	mov	r4,r19
   211e0:	0027f8c0 	call	27f8c <__sprint_r>
   211e4:	103f221e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   211e8:	d8c01c17 	ldw	r3,112(sp)
   211ec:	003f1406 	br	20e40 <___vfprintf_internal_r+0x40c>
   211f0:	9809883a 	mov	r4,r19
   211f4:	0024c840 	call	24c84 <__sinit>
   211f8:	003e2606 	br	20a94 <___vfprintf_internal_r+0x60>
   211fc:	21003fcc 	andi	r4,r4,255
   21200:	2005db1e 	bne	r4,zero,22970 <___vfprintf_internal_r+0x1f3c>
   21204:	6080080c 	andi	r2,r12,32
   21208:	10007026 	beq	r2,zero,213cc <___vfprintf_internal_r+0x998>
   2120c:	d8c00617 	ldw	r3,24(sp)
   21210:	18800117 	ldw	r2,4(r3)
   21214:	1d000017 	ldw	r20,0(r3)
   21218:	18c00204 	addi	r3,r3,8
   2121c:	d8c00615 	stw	r3,24(sp)
   21220:	102b883a 	mov	r21,r2
   21224:	10007516 	blt	r2,zero,213fc <___vfprintf_internal_r+0x9c8>
   21228:	40bfffd8 	cmpnei	r2,r8,-1
   2122c:	10034a26 	beq	r2,zero,21f58 <___vfprintf_internal_r+0x1524>
   21230:	047fdfc4 	movi	r17,-129
   21234:	6446703a 	and	r3,r12,r17
   21238:	a544b03a 	or	r2,r20,r21
   2123c:	d8c00415 	stw	r3,16(sp)
   21240:	db401343 	ldbu	r13,77(sp)
   21244:	1002ee26 	beq	r2,zero,21e00 <___vfprintf_internal_r+0x13cc>
   21248:	db000417 	ldw	r12,16(sp)
   2124c:	a803441e 	bne	r21,zero,21f60 <___vfprintf_internal_r+0x152c>
   21250:	a08002a8 	cmpgeui	r2,r20,10
   21254:	1003421e 	bne	r2,zero,21f60 <___vfprintf_internal_r+0x152c>
   21258:	a5000c04 	addi	r20,r20,48
   2125c:	dd0026c5 	stb	r20,155(sp)
   21260:	db000415 	stw	r12,16(sp)
   21264:	05400044 	movi	r21,1
   21268:	dc4026c4 	addi	r17,sp,155
   2126c:	00008b06 	br	2149c <___vfprintf_internal_r+0xa68>
   21270:	bac00007 	ldb	r11,0(r23)
   21274:	63001014 	ori	r12,r12,64
   21278:	003e3a06 	br	20b64 <___vfprintf_internal_r+0x130>
   2127c:	21003fcc 	andi	r4,r4,255
   21280:	2005c11e 	bne	r4,zero,22988 <___vfprintf_internal_r+0x1f54>
   21284:	008000f4 	movhi	r2,3
   21288:	10808c04 	addi	r2,r2,560
   2128c:	d8800c15 	stw	r2,48(sp)
   21290:	6080080c 	andi	r2,r12,32
   21294:	1000d726 	beq	r2,zero,215f4 <___vfprintf_internal_r+0xbc0>
   21298:	d8800617 	ldw	r2,24(sp)
   2129c:	15000017 	ldw	r20,0(r2)
   212a0:	15400117 	ldw	r21,4(r2)
   212a4:	10800204 	addi	r2,r2,8
   212a8:	d8800615 	stw	r2,24(sp)
   212ac:	6080004c 	andi	r2,r12,1
   212b0:	10000226 	beq	r2,zero,212bc <___vfprintf_internal_r+0x888>
   212b4:	a544b03a 	or	r2,r20,r21
   212b8:	1003091e 	bne	r2,zero,21ee0 <___vfprintf_internal_r+0x14ac>
   212bc:	00800084 	movi	r2,2
   212c0:	003f1f06 	br	20f40 <___vfprintf_internal_r+0x50c>
   212c4:	d8800617 	ldw	r2,24(sp)
   212c8:	d8001345 	stb	zero,77(sp)
   212cc:	14400017 	ldw	r17,0(r2)
   212d0:	10c00104 	addi	r3,r2,4
   212d4:	88037726 	beq	r17,zero,220b4 <___vfprintf_internal_r+0x1680>
   212d8:	40bfffe0 	cmpeqi	r2,r8,-1
   212dc:	1004661e 	bne	r2,zero,22478 <___vfprintf_internal_r+0x1a44>
   212e0:	400d883a 	mov	r6,r8
   212e4:	000b883a 	mov	r5,zero
   212e8:	8809883a 	mov	r4,r17
   212ec:	d8c00715 	stw	r3,28(sp)
   212f0:	db000615 	stw	r12,24(sp)
   212f4:	da000415 	stw	r8,16(sp)
   212f8:	00260c80 	call	260c8 <memchr>
   212fc:	da000417 	ldw	r8,16(sp)
   21300:	db000617 	ldw	r12,24(sp)
   21304:	d8c00717 	ldw	r3,28(sp)
   21308:	10058926 	beq	r2,zero,22930 <___vfprintf_internal_r+0x1efc>
   2130c:	146bc83a 	sub	r21,r2,r17
   21310:	a829883a 	mov	r20,r21
   21314:	d8c00615 	stw	r3,24(sp)
   21318:	003e8b06 	br	20d48 <___vfprintf_internal_r+0x314>
   2131c:	bac00007 	ldb	r11,0(r23)
   21320:	63000814 	ori	r12,r12,32
   21324:	003e0f06 	br	20b64 <___vfprintf_internal_r+0x130>
   21328:	d8c00617 	ldw	r3,24(sp)
   2132c:	00800c04 	movi	r2,48
   21330:	d8801385 	stb	r2,78(sp)
   21334:	00801e04 	movi	r2,120
   21338:	010000f4 	movhi	r4,3
   2133c:	d88013c5 	stb	r2,79(sp)
   21340:	18800104 	addi	r2,r3,4
   21344:	d8800615 	stw	r2,24(sp)
   21348:	20808c04 	addi	r2,r4,560
   2134c:	d8800c15 	stw	r2,48(sp)
   21350:	1d000017 	ldw	r20,0(r3)
   21354:	002b883a 	mov	r21,zero
   21358:	63000094 	ori	r12,r12,2
   2135c:	00800084 	movi	r2,2
   21360:	07001e04 	movi	fp,120
   21364:	003ef606 	br	20f40 <___vfprintf_internal_r+0x50c>
   21368:	21003fcc 	andi	r4,r4,255
   2136c:	2005881e 	bne	r4,zero,22990 <___vfprintf_internal_r+0x1f5c>
   21370:	d9000617 	ldw	r4,24(sp)
   21374:	6080080c 	andi	r2,r12,32
   21378:	20c00017 	ldw	r3,0(r4)
   2137c:	21000104 	addi	r4,r4,4
   21380:	d9000615 	stw	r4,24(sp)
   21384:	1002d11e 	bne	r2,zero,21ecc <___vfprintf_internal_r+0x1498>
   21388:	6080040c 	andi	r2,r12,16
   2138c:	10036f1e 	bne	r2,zero,2214c <___vfprintf_internal_r+0x1718>
   21390:	6300100c 	andi	r12,r12,64
   21394:	60036d26 	beq	r12,zero,2214c <___vfprintf_internal_r+0x1718>
   21398:	d8800517 	ldw	r2,20(sp)
   2139c:	1880000d 	sth	r2,0(r3)
   213a0:	003dd806 	br	20b04 <___vfprintf_internal_r+0xd0>
   213a4:	bac00007 	ldb	r11,0(r23)
   213a8:	58801b18 	cmpnei	r2,r11,108
   213ac:	10033026 	beq	r2,zero,22070 <___vfprintf_internal_r+0x163c>
   213b0:	63000414 	ori	r12,r12,16
   213b4:	003deb06 	br	20b64 <___vfprintf_internal_r+0x130>
   213b8:	21003fcc 	andi	r4,r4,255
   213bc:	2005701e 	bne	r4,zero,22980 <___vfprintf_internal_r+0x1f4c>
   213c0:	63000414 	ori	r12,r12,16
   213c4:	6080080c 	andi	r2,r12,32
   213c8:	103f901e 	bne	r2,zero,2120c <___vfprintf_internal_r+0x7d8>
   213cc:	d9000617 	ldw	r4,24(sp)
   213d0:	6080040c 	andi	r2,r12,16
   213d4:	20c00104 	addi	r3,r4,4
   213d8:	1002d51e 	bne	r2,zero,21f30 <___vfprintf_internal_r+0x14fc>
   213dc:	6080100c 	andi	r2,r12,64
   213e0:	1004a726 	beq	r2,zero,22680 <___vfprintf_internal_r+0x1c4c>
   213e4:	d8800617 	ldw	r2,24(sp)
   213e8:	d8c00615 	stw	r3,24(sp)
   213ec:	1500000f 	ldh	r20,0(r2)
   213f0:	a02bd7fa 	srai	r21,r20,31
   213f4:	a805883a 	mov	r2,r21
   213f8:	103f8b0e 	bge	r2,zero,21228 <___vfprintf_internal_r+0x7f4>
   213fc:	a004c03a 	cmpne	r2,r20,zero
   21400:	056bc83a 	sub	r21,zero,r21
   21404:	a8abc83a 	sub	r21,r21,r2
   21408:	00800b44 	movi	r2,45
   2140c:	d8801345 	stb	r2,77(sp)
   21410:	40ffffe0 	cmpeqi	r3,r8,-1
   21414:	0529c83a 	sub	r20,zero,r20
   21418:	03400b44 	movi	r13,45
   2141c:	00800044 	movi	r2,1
   21420:	183ecb26 	beq	r3,zero,20f50 <___vfprintf_internal_r+0x51c>
   21424:	10c00060 	cmpeqi	r3,r2,1
   21428:	183f881e 	bne	r3,zero,2124c <___vfprintf_internal_r+0x818>
   2142c:	108000a0 	cmpeqi	r2,r2,2
   21430:	1001311e 	bne	r2,zero,218f8 <___vfprintf_internal_r+0xec4>
   21434:	dc402704 	addi	r17,sp,156
   21438:	a004d0fa 	srli	r2,r20,3
   2143c:	a806977a 	slli	r3,r21,29
   21440:	a82ad0fa 	srli	r21,r21,3
   21444:	a50001cc 	andi	r20,r20,7
   21448:	a1000c04 	addi	r4,r20,48
   2144c:	18a8b03a 	or	r20,r3,r2
   21450:	893fffc5 	stb	r4,-1(r17)
   21454:	a544b03a 	or	r2,r20,r21
   21458:	880b883a 	mov	r5,r17
   2145c:	8c7fffc4 	addi	r17,r17,-1
   21460:	103ff51e 	bne	r2,zero,21438 <___vfprintf_internal_r+0xa04>
   21464:	6080004c 	andi	r2,r12,1
   21468:	10013026 	beq	r2,zero,2192c <___vfprintf_internal_r+0xef8>
   2146c:	21003fcc 	andi	r4,r4,255
   21470:	2100201c 	xori	r4,r4,128
   21474:	213fe004 	addi	r4,r4,-128
   21478:	20800c18 	cmpnei	r2,r4,48
   2147c:	10012b26 	beq	r2,zero,2192c <___vfprintf_internal_r+0xef8>
   21480:	00800c04 	movi	r2,48
   21484:	297fff84 	addi	r5,r5,-2
   21488:	88bfffc5 	stb	r2,-1(r17)
   2148c:	d8802704 	addi	r2,sp,156
   21490:	116bc83a 	sub	r21,r2,r5
   21494:	db000415 	stw	r12,16(sp)
   21498:	2823883a 	mov	r17,r5
   2149c:	4029883a 	mov	r20,r8
   214a0:	4540010e 	bge	r8,r21,214a8 <___vfprintf_internal_r+0xa74>
   214a4:	a829883a 	mov	r20,r21
   214a8:	d8000715 	stw	zero,28(sp)
   214ac:	6b403fcc 	andi	r13,r13,255
   214b0:	6b40201c 	xori	r13,r13,128
   214b4:	6b7fe004 	addi	r13,r13,-128
   214b8:	683e2626 	beq	r13,zero,20d54 <___vfprintf_internal_r+0x320>
   214bc:	a5000044 	addi	r20,r20,1
   214c0:	003e2406 	br	20d54 <___vfprintf_internal_r+0x320>
   214c4:	bac00007 	ldb	r11,0(r23)
   214c8:	63002014 	ori	r12,r12,128
   214cc:	003da506 	br	20b64 <___vfprintf_internal_r+0x130>
   214d0:	bf000007 	ldb	fp,0(r23)
   214d4:	b8800044 	addi	r2,r23,1
   214d8:	e0c00aa0 	cmpeqi	r3,fp,42
   214dc:	1805841e 	bne	r3,zero,22af0 <___vfprintf_internal_r+0x20bc>
   214e0:	e0fff404 	addi	r3,fp,-48
   214e4:	198002b0 	cmpltui	r6,r3,10
   214e8:	102f883a 	mov	r23,r2
   214ec:	0011883a 	mov	r8,zero
   214f0:	303d9e26 	beq	r6,zero,20b6c <___vfprintf_internal_r+0x138>
   214f4:	400490ba 	slli	r2,r8,2
   214f8:	bf000007 	ldb	fp,0(r23)
   214fc:	bdc00044 	addi	r23,r23,1
   21500:	1211883a 	add	r8,r2,r8
   21504:	4211883a 	add	r8,r8,r8
   21508:	40d1883a 	add	r8,r8,r3
   2150c:	e0fff404 	addi	r3,fp,-48
   21510:	188002b0 	cmpltui	r2,r3,10
   21514:	103ff71e 	bne	r2,zero,214f4 <___vfprintf_internal_r+0xac0>
   21518:	003d9406 	br	20b6c <___vfprintf_internal_r+0x138>
   2151c:	bf000003 	ldbu	fp,0(r23)
   21520:	e2c03fcc 	andi	r11,fp,255
   21524:	5ac0201c 	xori	r11,r11,128
   21528:	63000114 	ori	r12,r12,4
   2152c:	5affe004 	addi	r11,r11,-128
   21530:	003d8c06 	br	20b64 <___vfprintf_internal_r+0x130>
   21534:	bac00007 	ldb	r11,0(r23)
   21538:	01000044 	movi	r4,1
   2153c:	01400ac4 	movi	r5,43
   21540:	003d8806 	br	20b64 <___vfprintf_internal_r+0x130>
   21544:	d8800617 	ldw	r2,24(sp)
   21548:	bf000003 	ldbu	fp,0(r23)
   2154c:	14000017 	ldw	r16,0(r2)
   21550:	10800104 	addi	r2,r2,4
   21554:	8002aa16 	blt	r16,zero,22000 <___vfprintf_internal_r+0x15cc>
   21558:	d8800615 	stw	r2,24(sp)
   2155c:	e2c03fcc 	andi	r11,fp,255
   21560:	5ac0201c 	xori	r11,r11,128
   21564:	5affe004 	addi	r11,r11,-128
   21568:	003d7e06 	br	20b64 <___vfprintf_internal_r+0x130>
   2156c:	bac00007 	ldb	r11,0(r23)
   21570:	63000054 	ori	r12,r12,1
   21574:	003d7b06 	br	20b64 <___vfprintf_internal_r+0x130>
   21578:	28803fcc 	andi	r2,r5,255
   2157c:	1080201c 	xori	r2,r2,128
   21580:	10bfe004 	addi	r2,r2,-128
   21584:	bf000003 	ldbu	fp,0(r23)
   21588:	103ff41e 	bne	r2,zero,2155c <___vfprintf_internal_r+0xb28>
   2158c:	e2c03fcc 	andi	r11,fp,255
   21590:	5ac0201c 	xori	r11,r11,128
   21594:	01000044 	movi	r4,1
   21598:	01400804 	movi	r5,32
   2159c:	5affe004 	addi	r11,r11,-128
   215a0:	003d7006 	br	20b64 <___vfprintf_internal_r+0x130>
   215a4:	bac00007 	ldb	r11,0(r23)
   215a8:	63000214 	ori	r12,r12,8
   215ac:	003d6d06 	br	20b64 <___vfprintf_internal_r+0x130>
   215b0:	d8c00617 	ldw	r3,24(sp)
   215b4:	d8001345 	stb	zero,77(sp)
   215b8:	05000044 	movi	r20,1
   215bc:	18800017 	ldw	r2,0(r3)
   215c0:	18c00104 	addi	r3,r3,4
   215c4:	d8c00615 	stw	r3,24(sp)
   215c8:	d8801d05 	stb	r2,116(sp)
   215cc:	05400044 	movi	r21,1
   215d0:	dc401d04 	addi	r17,sp,116
   215d4:	003ddc06 	br	20d48 <___vfprintf_internal_r+0x314>
   215d8:	21003fcc 	andi	r4,r4,255
   215dc:	2004e61e 	bne	r4,zero,22978 <___vfprintf_internal_r+0x1f44>
   215e0:	008000f4 	movhi	r2,3
   215e4:	10808704 	addi	r2,r2,540
   215e8:	d8800c15 	stw	r2,48(sp)
   215ec:	6080080c 	andi	r2,r12,32
   215f0:	103f291e 	bne	r2,zero,21298 <___vfprintf_internal_r+0x864>
   215f4:	d9000617 	ldw	r4,24(sp)
   215f8:	6080040c 	andi	r2,r12,16
   215fc:	20c00104 	addi	r3,r4,4
   21600:	10023d1e 	bne	r2,zero,21ef8 <___vfprintf_internal_r+0x14c4>
   21604:	6080100c 	andi	r2,r12,64
   21608:	10042f26 	beq	r2,zero,226c8 <___vfprintf_internal_r+0x1c94>
   2160c:	d8800617 	ldw	r2,24(sp)
   21610:	002b883a 	mov	r21,zero
   21614:	d8c00615 	stw	r3,24(sp)
   21618:	1500000b 	ldhu	r20,0(r2)
   2161c:	003f2306 	br	212ac <___vfprintf_internal_r+0x878>
   21620:	e2c01990 	cmplti	r11,fp,102
   21624:	5800f61e 	bne	r11,zero,21a00 <___vfprintf_internal_r+0xfcc>
   21628:	d9000917 	ldw	r4,36(sp)
   2162c:	d9400a17 	ldw	r5,40(sp)
   21630:	000d883a 	mov	r6,zero
   21634:	000f883a 	mov	r7,zero
   21638:	d8c00e15 	stw	r3,56(sp)
   2163c:	002c2380 	call	2c238 <__eqdf2>
   21640:	d8c00e17 	ldw	r3,56(sp)
   21644:	1001881e 	bne	r2,zero,21c68 <___vfprintf_internal_r+0x1234>
   21648:	d8801b17 	ldw	r2,108(sp)
   2164c:	010000f4 	movhi	r4,3
   21650:	21009304 	addi	r4,r4,588
   21654:	10800044 	addi	r2,r2,1
   21658:	18c00044 	addi	r3,r3,1
   2165c:	b1000015 	stw	r4,0(r22)
   21660:	01000044 	movi	r4,1
   21664:	d8801b15 	stw	r2,108(sp)
   21668:	b1000115 	stw	r4,4(r22)
   2166c:	d8c01c15 	stw	r3,112(sp)
   21670:	10800208 	cmpgei	r2,r2,8
   21674:	10036e1e 	bne	r2,zero,22430 <___vfprintf_internal_r+0x19fc>
   21678:	b5800204 	addi	r22,r22,8
   2167c:	d8801417 	ldw	r2,80(sp)
   21680:	d9000817 	ldw	r4,32(sp)
   21684:	11020b0e 	bge	r2,r4,21eb4 <___vfprintf_internal_r+0x1480>
   21688:	d8800d17 	ldw	r2,52(sp)
   2168c:	d9000b17 	ldw	r4,44(sp)
   21690:	b0800015 	stw	r2,0(r22)
   21694:	d8801b17 	ldw	r2,108(sp)
   21698:	1907883a 	add	r3,r3,r4
   2169c:	b1000115 	stw	r4,4(r22)
   216a0:	10800044 	addi	r2,r2,1
   216a4:	d8801b15 	stw	r2,108(sp)
   216a8:	d8c01c15 	stw	r3,112(sp)
   216ac:	10800208 	cmpgei	r2,r2,8
   216b0:	1002761e 	bne	r2,zero,2208c <___vfprintf_internal_r+0x1658>
   216b4:	b5800204 	addi	r22,r22,8
   216b8:	d8800817 	ldw	r2,32(sp)
   216bc:	157fffc4 	addi	r21,r2,-1
   216c0:	057dda0e 	bge	zero,r21,20e2c <___vfprintf_internal_r+0x3f8>
   216c4:	01c000f4 	movhi	r7,3
   216c8:	a9000450 	cmplti	r4,r21,17
   216cc:	d8801b17 	ldw	r2,108(sp)
   216d0:	39c09404 	addi	r7,r7,592
   216d4:	2003521e 	bne	r4,zero,22420 <___vfprintf_internal_r+0x19ec>
   216d8:	07000404 	movi	fp,16
   216dc:	3823883a 	mov	r17,r7
   216e0:	00000406 	br	216f4 <___vfprintf_internal_r+0xcc0>
   216e4:	b5800204 	addi	r22,r22,8
   216e8:	ad7ffc04 	addi	r21,r21,-16
   216ec:	a9000448 	cmpgei	r4,r21,17
   216f0:	20034a26 	beq	r4,zero,2241c <___vfprintf_internal_r+0x19e8>
   216f4:	10800044 	addi	r2,r2,1
   216f8:	18c00404 	addi	r3,r3,16
   216fc:	b4400015 	stw	r17,0(r22)
   21700:	b7000115 	stw	fp,4(r22)
   21704:	d8c01c15 	stw	r3,112(sp)
   21708:	d8801b15 	stw	r2,108(sp)
   2170c:	11000208 	cmpgei	r4,r2,8
   21710:	203ff426 	beq	r4,zero,216e4 <___vfprintf_internal_r+0xcb0>
   21714:	d9801a04 	addi	r6,sp,104
   21718:	900b883a 	mov	r5,r18
   2171c:	9809883a 	mov	r4,r19
   21720:	0027f8c0 	call	27f8c <__sprint_r>
   21724:	103dd21e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   21728:	d8c01c17 	ldw	r3,112(sp)
   2172c:	d8801b17 	ldw	r2,108(sp)
   21730:	dd802704 	addi	r22,sp,156
   21734:	003fec06 	br	216e8 <___vfprintf_internal_r+0xcb4>
   21738:	8519c83a 	sub	r12,r16,r20
   2173c:	033dac0e 	bge	zero,r12,20df0 <___vfprintf_internal_r+0x3bc>
   21740:	01c000f4 	movhi	r7,3
   21744:	61000450 	cmplti	r4,r12,17
   21748:	d8801b17 	ldw	r2,108(sp)
   2174c:	39c09404 	addi	r7,r7,592
   21750:	2000281e 	bne	r4,zero,217f4 <___vfprintf_internal_r+0xdc0>
   21754:	dc400e15 	stw	r17,56(sp)
   21758:	dc000f15 	stw	r16,60(sp)
   2175c:	b009883a 	mov	r4,r22
   21760:	03400404 	movi	r13,16
   21764:	a02d883a 	mov	r22,r20
   21768:	6021883a 	mov	r16,r12
   2176c:	4029883a 	mov	r20,r8
   21770:	3823883a 	mov	r17,r7
   21774:	00000406 	br	21788 <___vfprintf_internal_r+0xd54>
   21778:	843ffc04 	addi	r16,r16,-16
   2177c:	81400448 	cmpgei	r5,r16,17
   21780:	21000204 	addi	r4,r4,8
   21784:	28001426 	beq	r5,zero,217d8 <___vfprintf_internal_r+0xda4>
   21788:	10800044 	addi	r2,r2,1
   2178c:	18c00404 	addi	r3,r3,16
   21790:	24400015 	stw	r17,0(r4)
   21794:	23400115 	stw	r13,4(r4)
   21798:	d8c01c15 	stw	r3,112(sp)
   2179c:	d8801b15 	stw	r2,108(sp)
   217a0:	11400208 	cmpgei	r5,r2,8
   217a4:	283ff426 	beq	r5,zero,21778 <___vfprintf_internal_r+0xd44>
   217a8:	d9801a04 	addi	r6,sp,104
   217ac:	900b883a 	mov	r5,r18
   217b0:	9809883a 	mov	r4,r19
   217b4:	0027f8c0 	call	27f8c <__sprint_r>
   217b8:	103dad1e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   217bc:	843ffc04 	addi	r16,r16,-16
   217c0:	81400448 	cmpgei	r5,r16,17
   217c4:	d8c01c17 	ldw	r3,112(sp)
   217c8:	d8801b17 	ldw	r2,108(sp)
   217cc:	d9002704 	addi	r4,sp,156
   217d0:	03400404 	movi	r13,16
   217d4:	283fec1e 	bne	r5,zero,21788 <___vfprintf_internal_r+0xd54>
   217d8:	8019883a 	mov	r12,r16
   217dc:	880f883a 	mov	r7,r17
   217e0:	dc000f17 	ldw	r16,60(sp)
   217e4:	dc400e17 	ldw	r17,56(sp)
   217e8:	a011883a 	mov	r8,r20
   217ec:	b029883a 	mov	r20,r22
   217f0:	202d883a 	mov	r22,r4
   217f4:	10800044 	addi	r2,r2,1
   217f8:	1b07883a 	add	r3,r3,r12
   217fc:	d8801b15 	stw	r2,108(sp)
   21800:	b1c00015 	stw	r7,0(r22)
   21804:	b3000115 	stw	r12,4(r22)
   21808:	d8c01c15 	stw	r3,112(sp)
   2180c:	10800208 	cmpgei	r2,r2,8
   21810:	10030f1e 	bne	r2,zero,22450 <___vfprintf_internal_r+0x1a1c>
   21814:	4551c83a 	sub	r8,r8,r21
   21818:	b5800204 	addi	r22,r22,8
   2181c:	023d760e 	bge	zero,r8,20df8 <___vfprintf_internal_r+0x3c4>
   21820:	01c000f4 	movhi	r7,3
   21824:	41000450 	cmplti	r4,r8,17
   21828:	d8801b17 	ldw	r2,108(sp)
   2182c:	39c09404 	addi	r7,r7,592
   21830:	2000221e 	bne	r4,zero,218bc <___vfprintf_internal_r+0xe88>
   21834:	dc400e15 	stw	r17,56(sp)
   21838:	dc000f15 	stw	r16,60(sp)
   2183c:	03000404 	movi	r12,16
   21840:	4021883a 	mov	r16,r8
   21844:	3823883a 	mov	r17,r7
   21848:	00000406 	br	2185c <___vfprintf_internal_r+0xe28>
   2184c:	843ffc04 	addi	r16,r16,-16
   21850:	81000448 	cmpgei	r4,r16,17
   21854:	b5800204 	addi	r22,r22,8
   21858:	20001426 	beq	r4,zero,218ac <___vfprintf_internal_r+0xe78>
   2185c:	10800044 	addi	r2,r2,1
   21860:	18c00404 	addi	r3,r3,16
   21864:	b4400015 	stw	r17,0(r22)
   21868:	b3000115 	stw	r12,4(r22)
   2186c:	d8c01c15 	stw	r3,112(sp)
   21870:	d8801b15 	stw	r2,108(sp)
   21874:	11000208 	cmpgei	r4,r2,8
   21878:	203ff426 	beq	r4,zero,2184c <___vfprintf_internal_r+0xe18>
   2187c:	d9801a04 	addi	r6,sp,104
   21880:	900b883a 	mov	r5,r18
   21884:	9809883a 	mov	r4,r19
   21888:	0027f8c0 	call	27f8c <__sprint_r>
   2188c:	103d781e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   21890:	843ffc04 	addi	r16,r16,-16
   21894:	81000448 	cmpgei	r4,r16,17
   21898:	d8c01c17 	ldw	r3,112(sp)
   2189c:	d8801b17 	ldw	r2,108(sp)
   218a0:	dd802704 	addi	r22,sp,156
   218a4:	03000404 	movi	r12,16
   218a8:	203fec1e 	bne	r4,zero,2185c <___vfprintf_internal_r+0xe28>
   218ac:	8011883a 	mov	r8,r16
   218b0:	880f883a 	mov	r7,r17
   218b4:	dc000f17 	ldw	r16,60(sp)
   218b8:	dc400e17 	ldw	r17,56(sp)
   218bc:	10800044 	addi	r2,r2,1
   218c0:	1a07883a 	add	r3,r3,r8
   218c4:	d8801b15 	stw	r2,108(sp)
   218c8:	b1c00015 	stw	r7,0(r22)
   218cc:	b2000115 	stw	r8,4(r22)
   218d0:	d8c01c15 	stw	r3,112(sp)
   218d4:	10800208 	cmpgei	r2,r2,8
   218d8:	10016e1e 	bne	r2,zero,21e94 <___vfprintf_internal_r+0x1460>
   218dc:	b5800204 	addi	r22,r22,8
   218e0:	003d4506 	br	20df8 <___vfprintf_internal_r+0x3c4>
   218e4:	10c00060 	cmpeqi	r3,r2,1
   218e8:	1803c81e 	bne	r3,zero,2280c <___vfprintf_internal_r+0x1dd8>
   218ec:	108000a0 	cmpeqi	r2,r2,2
   218f0:	db000417 	ldw	r12,16(sp)
   218f4:	103ecf26 	beq	r2,zero,21434 <___vfprintf_internal_r+0xa00>
   218f8:	d9000c17 	ldw	r4,48(sp)
   218fc:	dc402704 	addi	r17,sp,156
   21900:	a08003cc 	andi	r2,r20,15
   21904:	a806973a 	slli	r3,r21,28
   21908:	a028d13a 	srli	r20,r20,4
   2190c:	2085883a 	add	r2,r4,r2
   21910:	10800003 	ldbu	r2,0(r2)
   21914:	a82ad13a 	srli	r21,r21,4
   21918:	1d28b03a 	or	r20,r3,r20
   2191c:	88bfffc5 	stb	r2,-1(r17)
   21920:	a544b03a 	or	r2,r20,r21
   21924:	8c7fffc4 	addi	r17,r17,-1
   21928:	103ff51e 	bne	r2,zero,21900 <___vfprintf_internal_r+0xecc>
   2192c:	d8802704 	addi	r2,sp,156
   21930:	146bc83a 	sub	r21,r2,r17
   21934:	db000415 	stw	r12,16(sp)
   21938:	003ed806 	br	2149c <___vfprintf_internal_r+0xa68>
   2193c:	d9801a04 	addi	r6,sp,104
   21940:	900b883a 	mov	r5,r18
   21944:	9809883a 	mov	r4,r19
   21948:	0027f8c0 	call	27f8c <__sprint_r>
   2194c:	103d4226 	beq	r2,zero,20e58 <___vfprintf_internal_r+0x424>
   21950:	003d4706 	br	20e70 <___vfprintf_internal_r+0x43c>
   21954:	d9801a04 	addi	r6,sp,104
   21958:	900b883a 	mov	r5,r18
   2195c:	9809883a 	mov	r4,r19
   21960:	0027f8c0 	call	27f8c <__sprint_r>
   21964:	103d421e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   21968:	d9401417 	ldw	r5,80(sp)
   2196c:	d8c01c17 	ldw	r3,112(sp)
   21970:	dd802704 	addi	r22,sp,156
   21974:	2802c81e 	bne	r5,zero,22498 <___vfprintf_internal_r+0x1a64>
   21978:	d8800417 	ldw	r2,16(sp)
   2197c:	d9000817 	ldw	r4,32(sp)
   21980:	1080004c 	andi	r2,r2,1
   21984:	1104b03a 	or	r2,r2,r4
   21988:	103d2826 	beq	r2,zero,20e2c <___vfprintf_internal_r+0x3f8>
   2198c:	d8800d17 	ldw	r2,52(sp)
   21990:	d9000b17 	ldw	r4,44(sp)
   21994:	b0800015 	stw	r2,0(r22)
   21998:	d8801b17 	ldw	r2,108(sp)
   2199c:	20c7883a 	add	r3,r4,r3
   219a0:	b1000115 	stw	r4,4(r22)
   219a4:	10800044 	addi	r2,r2,1
   219a8:	d8c01c15 	stw	r3,112(sp)
   219ac:	d8801b15 	stw	r2,108(sp)
   219b0:	11000208 	cmpgei	r4,r2,8
   219b4:	2003821e 	bne	r4,zero,227c0 <___vfprintf_internal_r+0x1d8c>
   219b8:	b5800204 	addi	r22,r22,8
   219bc:	d9000817 	ldw	r4,32(sp)
   219c0:	10800044 	addi	r2,r2,1
   219c4:	d8801b15 	stw	r2,108(sp)
   219c8:	20c7883a 	add	r3,r4,r3
   219cc:	b4400015 	stw	r17,0(r22)
   219d0:	b1000115 	stw	r4,4(r22)
   219d4:	d8c01c15 	stw	r3,112(sp)
   219d8:	10800208 	cmpgei	r2,r2,8
   219dc:	103d1226 	beq	r2,zero,20e28 <___vfprintf_internal_r+0x3f4>
   219e0:	d9801a04 	addi	r6,sp,104
   219e4:	900b883a 	mov	r5,r18
   219e8:	9809883a 	mov	r4,r19
   219ec:	0027f8c0 	call	27f8c <__sprint_r>
   219f0:	103d1f1e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   219f4:	d8c01c17 	ldw	r3,112(sp)
   219f8:	dd802704 	addi	r22,sp,156
   219fc:	003d0b06 	br	20e2c <___vfprintf_internal_r+0x3f8>
   21a00:	d8800817 	ldw	r2,32(sp)
   21a04:	da001b17 	ldw	r8,108(sp)
   21a08:	18c00044 	addi	r3,r3,1
   21a0c:	10800088 	cmpgei	r2,r2,2
   21a10:	45400044 	addi	r21,r8,1
   21a14:	b7000204 	addi	fp,r22,8
   21a18:	1000ec26 	beq	r2,zero,21dcc <___vfprintf_internal_r+0x1398>
   21a1c:	00800044 	movi	r2,1
   21a20:	b0800115 	stw	r2,4(r22)
   21a24:	b4400015 	stw	r17,0(r22)
   21a28:	d8c01c15 	stw	r3,112(sp)
   21a2c:	dd401b15 	stw	r21,108(sp)
   21a30:	a8800210 	cmplti	r2,r21,8
   21a34:	1001d126 	beq	r2,zero,2217c <___vfprintf_internal_r+0x1748>
   21a38:	d8800b17 	ldw	r2,44(sp)
   21a3c:	d9000d17 	ldw	r4,52(sp)
   21a40:	ad400044 	addi	r21,r21,1
   21a44:	1887883a 	add	r3,r3,r2
   21a48:	e0800115 	stw	r2,4(fp)
   21a4c:	e1000015 	stw	r4,0(fp)
   21a50:	d8c01c15 	stw	r3,112(sp)
   21a54:	dd401b15 	stw	r21,108(sp)
   21a58:	a8800208 	cmpgei	r2,r21,8
   21a5c:	1001be1e 	bne	r2,zero,22158 <___vfprintf_internal_r+0x1724>
   21a60:	e7000204 	addi	fp,fp,8
   21a64:	d9000917 	ldw	r4,36(sp)
   21a68:	d9400a17 	ldw	r5,40(sp)
   21a6c:	aa000044 	addi	r8,r21,1
   21a70:	000d883a 	mov	r6,zero
   21a74:	000f883a 	mov	r7,zero
   21a78:	d8c00e15 	stw	r3,56(sp)
   21a7c:	da000715 	stw	r8,28(sp)
   21a80:	002c2380 	call	2c238 <__eqdf2>
   21a84:	d8c00817 	ldw	r3,32(sp)
   21a88:	da000717 	ldw	r8,28(sp)
   21a8c:	e5800204 	addi	r22,fp,8
   21a90:	1affffc4 	addi	r11,r3,-1
   21a94:	d8c00e17 	ldw	r3,56(sp)
   21a98:	1000de26 	beq	r2,zero,21e14 <___vfprintf_internal_r+0x13e0>
   21a9c:	8a400044 	addi	r9,r17,1
   21aa0:	1ac7883a 	add	r3,r3,r11
   21aa4:	da001b15 	stw	r8,108(sp)
   21aa8:	e2400015 	stw	r9,0(fp)
   21aac:	e2c00115 	stw	r11,4(fp)
   21ab0:	d8c01c15 	stw	r3,112(sp)
   21ab4:	42000208 	cmpgei	r8,r8,8
   21ab8:	4001621e 	bne	r8,zero,22044 <___vfprintf_internal_r+0x1610>
   21abc:	e0800404 	addi	r2,fp,16
   21ac0:	aa000084 	addi	r8,r21,2
   21ac4:	b039883a 	mov	fp,r22
   21ac8:	102d883a 	mov	r22,r2
   21acc:	d9001017 	ldw	r4,64(sp)
   21ad0:	d8801644 	addi	r2,sp,89
   21ad4:	da001b15 	stw	r8,108(sp)
   21ad8:	20c7883a 	add	r3,r4,r3
   21adc:	e0800015 	stw	r2,0(fp)
   21ae0:	e1000115 	stw	r4,4(fp)
   21ae4:	d8c01c15 	stw	r3,112(sp)
   21ae8:	42000210 	cmplti	r8,r8,8
   21aec:	403ccf1e 	bne	r8,zero,20e2c <___vfprintf_internal_r+0x3f8>
   21af0:	003fbb06 	br	219e0 <___vfprintf_internal_r+0xfac>
   21af4:	db000417 	ldw	r12,16(sp)
   21af8:	003e4a06 	br	21424 <___vfprintf_internal_r+0x9f0>
   21afc:	030000f4 	movhi	r12,3
   21b00:	39000450 	cmplti	r4,r7,17
   21b04:	d8801b17 	ldw	r2,108(sp)
   21b08:	63009804 	addi	r12,r12,608
   21b0c:	2000321e 	bne	r4,zero,21bd8 <___vfprintf_internal_r+0x11a4>
   21b10:	dc401115 	stw	r17,68(sp)
   21b14:	b009883a 	mov	r4,r22
   21b18:	9023883a 	mov	r17,r18
   21b1c:	a82d883a 	mov	r22,r21
   21b20:	ddc01215 	stw	r23,72(sp)
   21b24:	03c00404 	movi	r15,16
   21b28:	a02f883a 	mov	r23,r20
   21b2c:	db800e15 	stw	r14,56(sp)
   21b30:	8029883a 	mov	r20,r16
   21b34:	db400f15 	stw	r13,60(sp)
   21b38:	402b883a 	mov	r21,r8
   21b3c:	3821883a 	mov	r16,r7
   21b40:	6025883a 	mov	r18,r12
   21b44:	00000406 	br	21b58 <___vfprintf_internal_r+0x1124>
   21b48:	843ffc04 	addi	r16,r16,-16
   21b4c:	81800448 	cmpgei	r6,r16,17
   21b50:	21000204 	addi	r4,r4,8
   21b54:	30001426 	beq	r6,zero,21ba8 <___vfprintf_internal_r+0x1174>
   21b58:	10800044 	addi	r2,r2,1
   21b5c:	18c00404 	addi	r3,r3,16
   21b60:	24800015 	stw	r18,0(r4)
   21b64:	23c00115 	stw	r15,4(r4)
   21b68:	d8c01c15 	stw	r3,112(sp)
   21b6c:	d8801b15 	stw	r2,108(sp)
   21b70:	11800208 	cmpgei	r6,r2,8
   21b74:	303ff426 	beq	r6,zero,21b48 <___vfprintf_internal_r+0x1114>
   21b78:	d9801a04 	addi	r6,sp,104
   21b7c:	880b883a 	mov	r5,r17
   21b80:	9809883a 	mov	r4,r19
   21b84:	0027f8c0 	call	27f8c <__sprint_r>
   21b88:	1001a11e 	bne	r2,zero,22210 <___vfprintf_internal_r+0x17dc>
   21b8c:	843ffc04 	addi	r16,r16,-16
   21b90:	81800448 	cmpgei	r6,r16,17
   21b94:	d8c01c17 	ldw	r3,112(sp)
   21b98:	d8801b17 	ldw	r2,108(sp)
   21b9c:	d9002704 	addi	r4,sp,156
   21ba0:	03c00404 	movi	r15,16
   21ba4:	303fec1e 	bne	r6,zero,21b58 <___vfprintf_internal_r+0x1124>
   21ba8:	800f883a 	mov	r7,r16
   21bac:	9019883a 	mov	r12,r18
   21bb0:	a021883a 	mov	r16,r20
   21bb4:	8825883a 	mov	r18,r17
   21bb8:	b829883a 	mov	r20,r23
   21bbc:	db800e17 	ldw	r14,56(sp)
   21bc0:	db400f17 	ldw	r13,60(sp)
   21bc4:	ddc01217 	ldw	r23,72(sp)
   21bc8:	dc401117 	ldw	r17,68(sp)
   21bcc:	a811883a 	mov	r8,r21
   21bd0:	b02b883a 	mov	r21,r22
   21bd4:	202d883a 	mov	r22,r4
   21bd8:	10800044 	addi	r2,r2,1
   21bdc:	19c7883a 	add	r3,r3,r7
   21be0:	d8801b15 	stw	r2,108(sp)
   21be4:	b3000015 	stw	r12,0(r22)
   21be8:	b1c00115 	stw	r7,4(r22)
   21bec:	d8c01c15 	stw	r3,112(sp)
   21bf0:	10800208 	cmpgei	r2,r2,8
   21bf4:	1001781e 	bne	r2,zero,221d8 <___vfprintf_internal_r+0x17a4>
   21bf8:	b5800204 	addi	r22,r22,8
   21bfc:	003c5f06 	br	20d7c <___vfprintf_internal_r+0x348>
   21c00:	d9801a04 	addi	r6,sp,104
   21c04:	900b883a 	mov	r5,r18
   21c08:	9809883a 	mov	r4,r19
   21c0c:	da000f15 	stw	r8,60(sp)
   21c10:	db400e15 	stw	r13,56(sp)
   21c14:	0027f8c0 	call	27f8c <__sprint_r>
   21c18:	103c951e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   21c1c:	d8c01c17 	ldw	r3,112(sp)
   21c20:	da000f17 	ldw	r8,60(sp)
   21c24:	db400e17 	ldw	r13,56(sp)
   21c28:	dd802704 	addi	r22,sp,156
   21c2c:	003c6e06 	br	20de8 <___vfprintf_internal_r+0x3b4>
   21c30:	d9801a04 	addi	r6,sp,104
   21c34:	900b883a 	mov	r5,r18
   21c38:	9809883a 	mov	r4,r19
   21c3c:	da001115 	stw	r8,68(sp)
   21c40:	db400f15 	stw	r13,60(sp)
   21c44:	db800e15 	stw	r14,56(sp)
   21c48:	0027f8c0 	call	27f8c <__sprint_r>
   21c4c:	103c881e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   21c50:	d8c01c17 	ldw	r3,112(sp)
   21c54:	da001117 	ldw	r8,68(sp)
   21c58:	db400f17 	ldw	r13,60(sp)
   21c5c:	db800e17 	ldw	r14,56(sp)
   21c60:	dd802704 	addi	r22,sp,156
   21c64:	003c5306 	br	20db4 <___vfprintf_internal_r+0x380>
   21c68:	d9401417 	ldw	r5,80(sp)
   21c6c:	01414c0e 	bge	zero,r5,221a0 <___vfprintf_internal_r+0x176c>
   21c70:	d8800717 	ldw	r2,28(sp)
   21c74:	d9000817 	ldw	r4,32(sp)
   21c78:	102b883a 	mov	r21,r2
   21c7c:	2080e316 	blt	r4,r2,2200c <___vfprintf_internal_r+0x15d8>
   21c80:	05400a0e 	bge	zero,r21,21cac <___vfprintf_internal_r+0x1278>
   21c84:	d8801b17 	ldw	r2,108(sp)
   21c88:	1d47883a 	add	r3,r3,r21
   21c8c:	b4400015 	stw	r17,0(r22)
   21c90:	10800044 	addi	r2,r2,1
   21c94:	d8801b15 	stw	r2,108(sp)
   21c98:	b5400115 	stw	r21,4(r22)
   21c9c:	d8c01c15 	stw	r3,112(sp)
   21ca0:	10800208 	cmpgei	r2,r2,8
   21ca4:	10030c1e 	bne	r2,zero,228d8 <___vfprintf_internal_r+0x1ea4>
   21ca8:	b5800204 	addi	r22,r22,8
   21cac:	a800ff16 	blt	r21,zero,220ac <___vfprintf_internal_r+0x1678>
   21cb0:	d8800717 	ldw	r2,28(sp)
   21cb4:	156bc83a 	sub	r21,r2,r21
   21cb8:	05410616 	blt	zero,r21,220d4 <___vfprintf_internal_r+0x16a0>
   21cbc:	dd401417 	ldw	r21,80(sp)
   21cc0:	d8800817 	ldw	r2,32(sp)
   21cc4:	a880d40e 	bge	r21,r2,22018 <___vfprintf_internal_r+0x15e4>
   21cc8:	d8800d17 	ldw	r2,52(sp)
   21ccc:	d9000b17 	ldw	r4,44(sp)
   21cd0:	b0800015 	stw	r2,0(r22)
   21cd4:	d8801b17 	ldw	r2,108(sp)
   21cd8:	1907883a 	add	r3,r3,r4
   21cdc:	b1000115 	stw	r4,4(r22)
   21ce0:	10800044 	addi	r2,r2,1
   21ce4:	d8801b15 	stw	r2,108(sp)
   21ce8:	d8c01c15 	stw	r3,112(sp)
   21cec:	10800208 	cmpgei	r2,r2,8
   21cf0:	10028e1e 	bne	r2,zero,2272c <___vfprintf_internal_r+0x1cf8>
   21cf4:	b5800204 	addi	r22,r22,8
   21cf8:	d9000817 	ldw	r4,32(sp)
   21cfc:	d9400717 	ldw	r5,28(sp)
   21d00:	2545c83a 	sub	r2,r4,r21
   21d04:	2149c83a 	sub	r4,r4,r5
   21d08:	102b883a 	mov	r21,r2
   21d0c:	2080010e 	bge	r4,r2,21d14 <___vfprintf_internal_r+0x12e0>
   21d10:	202b883a 	mov	r21,r4
   21d14:	05400c0e 	bge	zero,r21,21d48 <___vfprintf_internal_r+0x1314>
   21d18:	d9000717 	ldw	r4,28(sp)
   21d1c:	1d47883a 	add	r3,r3,r21
   21d20:	b5400115 	stw	r21,4(r22)
   21d24:	8913883a 	add	r9,r17,r4
   21d28:	d9001b17 	ldw	r4,108(sp)
   21d2c:	b2400015 	stw	r9,0(r22)
   21d30:	d8c01c15 	stw	r3,112(sp)
   21d34:	21000044 	addi	r4,r4,1
   21d38:	d9001b15 	stw	r4,108(sp)
   21d3c:	21000208 	cmpgei	r4,r4,8
   21d40:	2002f01e 	bne	r4,zero,22904 <___vfprintf_internal_r+0x1ed0>
   21d44:	b5800204 	addi	r22,r22,8
   21d48:	a800010e 	bge	r21,zero,21d50 <___vfprintf_internal_r+0x131c>
   21d4c:	002b883a 	mov	r21,zero
   21d50:	156bc83a 	sub	r21,r2,r21
   21d54:	057c350e 	bge	zero,r21,20e2c <___vfprintf_internal_r+0x3f8>
   21d58:	01c000f4 	movhi	r7,3
   21d5c:	a9000450 	cmplti	r4,r21,17
   21d60:	d8801b17 	ldw	r2,108(sp)
   21d64:	39c09404 	addi	r7,r7,592
   21d68:	2001ad1e 	bne	r4,zero,22420 <___vfprintf_internal_r+0x19ec>
   21d6c:	07000404 	movi	fp,16
   21d70:	3823883a 	mov	r17,r7
   21d74:	00000406 	br	21d88 <___vfprintf_internal_r+0x1354>
   21d78:	b5800204 	addi	r22,r22,8
   21d7c:	ad7ffc04 	addi	r21,r21,-16
   21d80:	a9000448 	cmpgei	r4,r21,17
   21d84:	2001a526 	beq	r4,zero,2241c <___vfprintf_internal_r+0x19e8>
   21d88:	10800044 	addi	r2,r2,1
   21d8c:	18c00404 	addi	r3,r3,16
   21d90:	b4400015 	stw	r17,0(r22)
   21d94:	b7000115 	stw	fp,4(r22)
   21d98:	d8c01c15 	stw	r3,112(sp)
   21d9c:	d8801b15 	stw	r2,108(sp)
   21da0:	11000208 	cmpgei	r4,r2,8
   21da4:	203ff426 	beq	r4,zero,21d78 <___vfprintf_internal_r+0x1344>
   21da8:	d9801a04 	addi	r6,sp,104
   21dac:	900b883a 	mov	r5,r18
   21db0:	9809883a 	mov	r4,r19
   21db4:	0027f8c0 	call	27f8c <__sprint_r>
   21db8:	103c2d1e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   21dbc:	d8c01c17 	ldw	r3,112(sp)
   21dc0:	d8801b17 	ldw	r2,108(sp)
   21dc4:	dd802704 	addi	r22,sp,156
   21dc8:	003fec06 	br	21d7c <___vfprintf_internal_r+0x1348>
   21dcc:	d8800417 	ldw	r2,16(sp)
   21dd0:	1080004c 	andi	r2,r2,1
   21dd4:	103f111e 	bne	r2,zero,21a1c <___vfprintf_internal_r+0xfe8>
   21dd8:	00800044 	movi	r2,1
   21ddc:	dd401b15 	stw	r21,108(sp)
   21de0:	b4400015 	stw	r17,0(r22)
   21de4:	b0800115 	stw	r2,4(r22)
   21de8:	d8c01c15 	stw	r3,112(sp)
   21dec:	ad400208 	cmpgei	r21,r21,8
   21df0:	a800941e 	bne	r21,zero,22044 <___vfprintf_internal_r+0x1610>
   21df4:	42000084 	addi	r8,r8,2
   21df8:	b5800404 	addi	r22,r22,16
   21dfc:	003f3306 	br	21acc <___vfprintf_internal_r+0x1098>
   21e00:	4002821e 	bne	r8,zero,2280c <___vfprintf_internal_r+0x1dd8>
   21e04:	0011883a 	mov	r8,zero
   21e08:	002b883a 	mov	r21,zero
   21e0c:	dc402704 	addi	r17,sp,156
   21e10:	003da206 	br	2149c <___vfprintf_internal_r+0xa68>
   21e14:	02ff2d0e 	bge	zero,r11,21acc <___vfprintf_internal_r+0x1098>
   21e18:	58800450 	cmplti	r2,r11,17
   21e1c:	01c000f4 	movhi	r7,3
   21e20:	1003261e 	bne	r2,zero,22abc <___vfprintf_internal_r+0x2088>
   21e24:	39c09404 	addi	r7,r7,592
   21e28:	dc000715 	stw	r16,28(sp)
   21e2c:	05800404 	movi	r22,16
   21e30:	5823883a 	mov	r17,r11
   21e34:	402b883a 	mov	r21,r8
   21e38:	3821883a 	mov	r16,r7
   21e3c:	00000506 	br	21e54 <___vfprintf_internal_r+0x1420>
   21e40:	e7000204 	addi	fp,fp,8
   21e44:	8c7ffc04 	addi	r17,r17,-16
   21e48:	88800448 	cmpgei	r2,r17,17
   21e4c:	1001be26 	beq	r2,zero,22548 <___vfprintf_internal_r+0x1b14>
   21e50:	ad400044 	addi	r21,r21,1
   21e54:	18c00404 	addi	r3,r3,16
   21e58:	e4000015 	stw	r16,0(fp)
   21e5c:	e5800115 	stw	r22,4(fp)
   21e60:	d8c01c15 	stw	r3,112(sp)
   21e64:	dd401b15 	stw	r21,108(sp)
   21e68:	a8800208 	cmpgei	r2,r21,8
   21e6c:	103ff426 	beq	r2,zero,21e40 <___vfprintf_internal_r+0x140c>
   21e70:	d9801a04 	addi	r6,sp,104
   21e74:	900b883a 	mov	r5,r18
   21e78:	9809883a 	mov	r4,r19
   21e7c:	0027f8c0 	call	27f8c <__sprint_r>
   21e80:	103bfb1e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   21e84:	dd401b17 	ldw	r21,108(sp)
   21e88:	d8c01c17 	ldw	r3,112(sp)
   21e8c:	df002704 	addi	fp,sp,156
   21e90:	003fec06 	br	21e44 <___vfprintf_internal_r+0x1410>
   21e94:	d9801a04 	addi	r6,sp,104
   21e98:	900b883a 	mov	r5,r18
   21e9c:	9809883a 	mov	r4,r19
   21ea0:	0027f8c0 	call	27f8c <__sprint_r>
   21ea4:	103bf21e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   21ea8:	d8c01c17 	ldw	r3,112(sp)
   21eac:	dd802704 	addi	r22,sp,156
   21eb0:	003bd106 	br	20df8 <___vfprintf_internal_r+0x3c4>
   21eb4:	d8800417 	ldw	r2,16(sp)
   21eb8:	1080004c 	andi	r2,r2,1
   21ebc:	103bdb26 	beq	r2,zero,20e2c <___vfprintf_internal_r+0x3f8>
   21ec0:	003df106 	br	21688 <___vfprintf_internal_r+0xc54>
   21ec4:	dc402704 	addi	r17,sp,156
   21ec8:	003d7406 	br	2149c <___vfprintf_internal_r+0xa68>
   21ecc:	d9000517 	ldw	r4,20(sp)
   21ed0:	2005d7fa 	srai	r2,r4,31
   21ed4:	19000015 	stw	r4,0(r3)
   21ed8:	18800115 	stw	r2,4(r3)
   21edc:	003b0906 	br	20b04 <___vfprintf_internal_r+0xd0>
   21ee0:	00800c04 	movi	r2,48
   21ee4:	d8801385 	stb	r2,78(sp)
   21ee8:	df0013c5 	stb	fp,79(sp)
   21eec:	63000094 	ori	r12,r12,2
   21ef0:	00800084 	movi	r2,2
   21ef4:	003c1206 	br	20f40 <___vfprintf_internal_r+0x50c>
   21ef8:	25000017 	ldw	r20,0(r4)
   21efc:	002b883a 	mov	r21,zero
   21f00:	d8c00615 	stw	r3,24(sp)
   21f04:	003ce906 	br	212ac <___vfprintf_internal_r+0x878>
   21f08:	25000017 	ldw	r20,0(r4)
   21f0c:	002b883a 	mov	r21,zero
   21f10:	d8c00615 	stw	r3,24(sp)
   21f14:	0005883a 	mov	r2,zero
   21f18:	003c0906 	br	20f40 <___vfprintf_internal_r+0x50c>
   21f1c:	25000017 	ldw	r20,0(r4)
   21f20:	002b883a 	mov	r21,zero
   21f24:	d8c00615 	stw	r3,24(sp)
   21f28:	00800044 	movi	r2,1
   21f2c:	003c0406 	br	20f40 <___vfprintf_internal_r+0x50c>
   21f30:	25000017 	ldw	r20,0(r4)
   21f34:	d8c00615 	stw	r3,24(sp)
   21f38:	a02bd7fa 	srai	r21,r20,31
   21f3c:	a805883a 	mov	r2,r21
   21f40:	003cb806 	br	21224 <___vfprintf_internal_r+0x7f0>
   21f44:	18800017 	ldw	r2,0(r3)
   21f48:	d8800915 	stw	r2,36(sp)
   21f4c:	18800117 	ldw	r2,4(r3)
   21f50:	d8800a15 	stw	r2,40(sp)
   21f54:	003c3006 	br	21018 <___vfprintf_internal_r+0x5e4>
   21f58:	db401343 	ldbu	r13,77(sp)
   21f5c:	a83cbc26 	beq	r21,zero,21250 <___vfprintf_internal_r+0x81c>
   21f60:	dc402704 	addi	r17,sp,156
   21f64:	a805883a 	mov	r2,r21
   21f68:	dc000715 	stw	r16,28(sp)
   21f6c:	902b883a 	mov	r21,r18
   21f70:	8821883a 	mov	r16,r17
   21f74:	db000415 	stw	r12,16(sp)
   21f78:	a023883a 	mov	r17,r20
   21f7c:	da000e15 	stw	r8,56(sp)
   21f80:	9829883a 	mov	r20,r19
   21f84:	1025883a 	mov	r18,r2
   21f88:	6827883a 	mov	r19,r13
   21f8c:	8809883a 	mov	r4,r17
   21f90:	900b883a 	mov	r5,r18
   21f94:	01800284 	movi	r6,10
   21f98:	000f883a 	mov	r7,zero
   21f9c:	002a7ec0 	call	2a7ec <__umoddi3>
   21fa0:	10800c04 	addi	r2,r2,48
   21fa4:	8809883a 	mov	r4,r17
   21fa8:	900b883a 	mov	r5,r18
   21fac:	01800284 	movi	r6,10
   21fb0:	000f883a 	mov	r7,zero
   21fb4:	80bfffc5 	stb	r2,-1(r16)
   21fb8:	002a1d00 	call	2a1d0 <__udivdi3>
   21fbc:	900d883a 	mov	r6,r18
   21fc0:	880f883a 	mov	r7,r17
   21fc4:	843fffc4 	addi	r16,r16,-1
   21fc8:	1023883a 	mov	r17,r2
   21fcc:	1825883a 	mov	r18,r3
   21fd0:	303fee1e 	bne	r6,zero,21f8c <___vfprintf_internal_r+0x1558>
   21fd4:	39c002a8 	cmpgeui	r7,r7,10
   21fd8:	383fec1e 	bne	r7,zero,21f8c <___vfprintf_internal_r+0x1558>
   21fdc:	8023883a 	mov	r17,r16
   21fe0:	d8802704 	addi	r2,sp,156
   21fe4:	981b883a 	mov	r13,r19
   21fe8:	a825883a 	mov	r18,r21
   21fec:	dc000717 	ldw	r16,28(sp)
   21ff0:	da000e17 	ldw	r8,56(sp)
   21ff4:	a027883a 	mov	r19,r20
   21ff8:	146bc83a 	sub	r21,r2,r17
   21ffc:	003d2706 	br	2149c <___vfprintf_internal_r+0xa68>
   22000:	0421c83a 	sub	r16,zero,r16
   22004:	d8800615 	stw	r2,24(sp)
   22008:	003d4506 	br	21520 <___vfprintf_internal_r+0xaec>
   2200c:	202b883a 	mov	r21,r4
   22010:	057f1c16 	blt	zero,r21,21c84 <___vfprintf_internal_r+0x1250>
   22014:	003f2506 	br	21cac <___vfprintf_internal_r+0x1278>
   22018:	d8800417 	ldw	r2,16(sp)
   2201c:	1080004c 	andi	r2,r2,1
   22020:	103f291e 	bne	r2,zero,21cc8 <___vfprintf_internal_r+0x1294>
   22024:	d9000817 	ldw	r4,32(sp)
   22028:	d9400717 	ldw	r5,28(sp)
   2202c:	2545c83a 	sub	r2,r4,r21
   22030:	2179c83a 	sub	fp,r4,r5
   22034:	102b883a 	mov	r21,r2
   22038:	e0bf430e 	bge	fp,r2,21d48 <___vfprintf_internal_r+0x1314>
   2203c:	e02b883a 	mov	r21,fp
   22040:	003f4106 	br	21d48 <___vfprintf_internal_r+0x1314>
   22044:	d9801a04 	addi	r6,sp,104
   22048:	900b883a 	mov	r5,r18
   2204c:	9809883a 	mov	r4,r19
   22050:	0027f8c0 	call	27f8c <__sprint_r>
   22054:	103b861e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   22058:	da001b17 	ldw	r8,108(sp)
   2205c:	d8c01c17 	ldw	r3,112(sp)
   22060:	dd802904 	addi	r22,sp,164
   22064:	42000044 	addi	r8,r8,1
   22068:	df002704 	addi	fp,sp,156
   2206c:	003e9706 	br	21acc <___vfprintf_internal_r+0x1098>
   22070:	bf000043 	ldbu	fp,1(r23)
   22074:	63000814 	ori	r12,r12,32
   22078:	bdc00044 	addi	r23,r23,1
   2207c:	e2c03fcc 	andi	r11,fp,255
   22080:	5ac0201c 	xori	r11,r11,128
   22084:	5affe004 	addi	r11,r11,-128
   22088:	003ab606 	br	20b64 <___vfprintf_internal_r+0x130>
   2208c:	d9801a04 	addi	r6,sp,104
   22090:	900b883a 	mov	r5,r18
   22094:	9809883a 	mov	r4,r19
   22098:	0027f8c0 	call	27f8c <__sprint_r>
   2209c:	103b741e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   220a0:	d8c01c17 	ldw	r3,112(sp)
   220a4:	dd802704 	addi	r22,sp,156
   220a8:	003d8306 	br	216b8 <___vfprintf_internal_r+0xc84>
   220ac:	002b883a 	mov	r21,zero
   220b0:	003eff06 	br	21cb0 <___vfprintf_internal_r+0x127c>
   220b4:	408001f0 	cmpltui	r2,r8,7
   220b8:	402b883a 	mov	r21,r8
   220bc:	1001a426 	beq	r2,zero,22750 <___vfprintf_internal_r+0x1d1c>
   220c0:	044000f4 	movhi	r17,3
   220c4:	a829883a 	mov	r20,r21
   220c8:	d8c00615 	stw	r3,24(sp)
   220cc:	8c409104 	addi	r17,r17,580
   220d0:	003b1d06 	br	20d48 <___vfprintf_internal_r+0x314>
   220d4:	01c000f4 	movhi	r7,3
   220d8:	a9000450 	cmplti	r4,r21,17
   220dc:	d8801b17 	ldw	r2,108(sp)
   220e0:	39c09404 	addi	r7,r7,592
   220e4:	20017f1e 	bne	r4,zero,226e4 <___vfprintf_internal_r+0x1cb0>
   220e8:	dc000e15 	stw	r16,56(sp)
   220ec:	07000404 	movi	fp,16
   220f0:	3821883a 	mov	r16,r7
   220f4:	00000406 	br	22108 <___vfprintf_internal_r+0x16d4>
   220f8:	b5800204 	addi	r22,r22,8
   220fc:	ad7ffc04 	addi	r21,r21,-16
   22100:	a9000448 	cmpgei	r4,r21,17
   22104:	20017526 	beq	r4,zero,226dc <___vfprintf_internal_r+0x1ca8>
   22108:	10800044 	addi	r2,r2,1
   2210c:	18c00404 	addi	r3,r3,16
   22110:	b4000015 	stw	r16,0(r22)
   22114:	b7000115 	stw	fp,4(r22)
   22118:	d8c01c15 	stw	r3,112(sp)
   2211c:	d8801b15 	stw	r2,108(sp)
   22120:	11000208 	cmpgei	r4,r2,8
   22124:	203ff426 	beq	r4,zero,220f8 <___vfprintf_internal_r+0x16c4>
   22128:	d9801a04 	addi	r6,sp,104
   2212c:	900b883a 	mov	r5,r18
   22130:	9809883a 	mov	r4,r19
   22134:	0027f8c0 	call	27f8c <__sprint_r>
   22138:	103b4d1e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   2213c:	d8c01c17 	ldw	r3,112(sp)
   22140:	d8801b17 	ldw	r2,108(sp)
   22144:	dd802704 	addi	r22,sp,156
   22148:	003fec06 	br	220fc <___vfprintf_internal_r+0x16c8>
   2214c:	d8800517 	ldw	r2,20(sp)
   22150:	18800015 	stw	r2,0(r3)
   22154:	003a6b06 	br	20b04 <___vfprintf_internal_r+0xd0>
   22158:	d9801a04 	addi	r6,sp,104
   2215c:	900b883a 	mov	r5,r18
   22160:	9809883a 	mov	r4,r19
   22164:	0027f8c0 	call	27f8c <__sprint_r>
   22168:	103b411e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   2216c:	d8c01c17 	ldw	r3,112(sp)
   22170:	dd401b17 	ldw	r21,108(sp)
   22174:	df002704 	addi	fp,sp,156
   22178:	003e3a06 	br	21a64 <___vfprintf_internal_r+0x1030>
   2217c:	d9801a04 	addi	r6,sp,104
   22180:	900b883a 	mov	r5,r18
   22184:	9809883a 	mov	r4,r19
   22188:	0027f8c0 	call	27f8c <__sprint_r>
   2218c:	103b381e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   22190:	d8c01c17 	ldw	r3,112(sp)
   22194:	dd401b17 	ldw	r21,108(sp)
   22198:	df002704 	addi	fp,sp,156
   2219c:	003e2606 	br	21a38 <___vfprintf_internal_r+0x1004>
   221a0:	d8801b17 	ldw	r2,108(sp)
   221a4:	010000f4 	movhi	r4,3
   221a8:	21009304 	addi	r4,r4,588
   221ac:	10800044 	addi	r2,r2,1
   221b0:	18c00044 	addi	r3,r3,1
   221b4:	b1000015 	stw	r4,0(r22)
   221b8:	01000044 	movi	r4,1
   221bc:	d8801b15 	stw	r2,108(sp)
   221c0:	b1000115 	stw	r4,4(r22)
   221c4:	d8c01c15 	stw	r3,112(sp)
   221c8:	10800208 	cmpgei	r2,r2,8
   221cc:	103de11e 	bne	r2,zero,21954 <___vfprintf_internal_r+0xf20>
   221d0:	b5800204 	addi	r22,r22,8
   221d4:	003de706 	br	21974 <___vfprintf_internal_r+0xf40>
   221d8:	d9801a04 	addi	r6,sp,104
   221dc:	900b883a 	mov	r5,r18
   221e0:	9809883a 	mov	r4,r19
   221e4:	da001115 	stw	r8,68(sp)
   221e8:	db400f15 	stw	r13,60(sp)
   221ec:	db800e15 	stw	r14,56(sp)
   221f0:	0027f8c0 	call	27f8c <__sprint_r>
   221f4:	103b1e1e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   221f8:	d8c01c17 	ldw	r3,112(sp)
   221fc:	da001117 	ldw	r8,68(sp)
   22200:	db400f17 	ldw	r13,60(sp)
   22204:	db800e17 	ldw	r14,56(sp)
   22208:	dd802704 	addi	r22,sp,156
   2220c:	003adb06 	br	20d7c <___vfprintf_internal_r+0x348>
   22210:	8825883a 	mov	r18,r17
   22214:	003b1606 	br	20e70 <___vfprintf_internal_r+0x43c>
   22218:	d9000917 	ldw	r4,36(sp)
   2221c:	d9400a17 	ldw	r5,40(sp)
   22220:	da000615 	stw	r8,24(sp)
   22224:	200d883a 	mov	r6,r4
   22228:	280f883a 	mov	r7,r5
   2222c:	db000415 	stw	r12,16(sp)
   22230:	002d5740 	call	2d574 <__unorddf2>
   22234:	db000417 	ldw	r12,16(sp)
   22238:	da000617 	ldw	r8,24(sp)
   2223c:	1002091e 	bne	r2,zero,22a64 <___vfprintf_internal_r+0x2030>
   22240:	057ff7c4 	movi	r21,-33
   22244:	40bfffe0 	cmpeqi	r2,r8,-1
   22248:	e56a703a 	and	r21,fp,r21
   2224c:	1001ab1e 	bne	r2,zero,228fc <___vfprintf_internal_r+0x1ec8>
   22250:	a88011d8 	cmpnei	r2,r21,71
   22254:	10015726 	beq	r2,zero,227b4 <___vfprintf_internal_r+0x1d80>
   22258:	60804014 	ori	r2,r12,256
   2225c:	d8800415 	stw	r2,16(sp)
   22260:	d8800a17 	ldw	r2,40(sp)
   22264:	10012d16 	blt	r2,zero,2271c <___vfprintf_internal_r+0x1ce8>
   22268:	dd000a17 	ldw	r20,40(sp)
   2226c:	d8000605 	stb	zero,24(sp)
   22270:	e08019a0 	cmpeqi	r2,fp,102
   22274:	d8800f15 	stw	r2,60(sp)
   22278:	1000c31e 	bne	r2,zero,22588 <___vfprintf_internal_r+0x1b54>
   2227c:	e08011a0 	cmpeqi	r2,fp,70
   22280:	1000c11e 	bne	r2,zero,22588 <___vfprintf_internal_r+0x1b54>
   22284:	a8801158 	cmpnei	r2,r21,69
   22288:	10016226 	beq	r2,zero,22814 <___vfprintf_internal_r+0x1de0>
   2228c:	d8801804 	addi	r2,sp,96
   22290:	d8800315 	stw	r2,12(sp)
   22294:	d9400917 	ldw	r5,36(sp)
   22298:	d8801504 	addi	r2,sp,84
   2229c:	d8800215 	stw	r2,8(sp)
   222a0:	d8801404 	addi	r2,sp,80
   222a4:	da000015 	stw	r8,0(sp)
   222a8:	9809883a 	mov	r4,r19
   222ac:	d8800115 	stw	r2,4(sp)
   222b0:	01c00084 	movi	r7,2
   222b4:	a00d883a 	mov	r6,r20
   222b8:	db000815 	stw	r12,32(sp)
   222bc:	da000715 	stw	r8,28(sp)
   222c0:	0022f780 	call	22f78 <_dtoa_r>
   222c4:	da000717 	ldw	r8,28(sp)
   222c8:	e10019d8 	cmpnei	r4,fp,103
   222cc:	db000817 	ldw	r12,32(sp)
   222d0:	1023883a 	mov	r17,r2
   222d4:	4007883a 	mov	r3,r8
   222d8:	2001621e 	bne	r4,zero,22864 <___vfprintf_internal_r+0x1e30>
   222dc:	6080004c 	andi	r2,r12,1
   222e0:	1001621e 	bne	r2,zero,2286c <___vfprintf_internal_r+0x1e38>
   222e4:	d8801417 	ldw	r2,80(sp)
   222e8:	ad4011e0 	cmpeqi	r21,r21,71
   222ec:	d8800715 	stw	r2,28(sp)
   222f0:	d8801817 	ldw	r2,96(sp)
   222f4:	1445c83a 	sub	r2,r2,r17
   222f8:	d8800815 	stw	r2,32(sp)
   222fc:	a8000526 	beq	r21,zero,22314 <___vfprintf_internal_r+0x18e0>
   22300:	d8c00717 	ldw	r3,28(sp)
   22304:	18bfff50 	cmplti	r2,r3,-3
   22308:	1000011e 	bne	r2,zero,22310 <___vfprintf_internal_r+0x18dc>
   2230c:	40c1670e 	bge	r8,r3,228ac <___vfprintf_internal_r+0x1e78>
   22310:	e73fff84 	addi	fp,fp,-2
   22314:	d8800717 	ldw	r2,28(sp)
   22318:	df001645 	stb	fp,89(sp)
   2231c:	157fffc4 	addi	r21,r2,-1
   22320:	dd401415 	stw	r21,80(sp)
   22324:	a801c316 	blt	r21,zero,22a34 <___vfprintf_internal_r+0x2000>
   22328:	00800ac4 	movi	r2,43
   2232c:	d8801685 	stb	r2,90(sp)
   22330:	a8800290 	cmplti	r2,r21,10
   22334:	1001b81e 	bne	r2,zero,22a18 <___vfprintf_internal_r+0x1fe4>
   22338:	d98019c4 	addi	r6,sp,103
   2233c:	9029883a 	mov	r20,r18
   22340:	dc400715 	stw	r17,28(sp)
   22344:	8025883a 	mov	r18,r16
   22348:	db000f15 	stw	r12,60(sp)
   2234c:	3021883a 	mov	r16,r6
   22350:	a809883a 	mov	r4,r21
   22354:	01400284 	movi	r5,10
   22358:	002ae300 	call	2ae30 <__modsi3>
   2235c:	10800c04 	addi	r2,r2,48
   22360:	a809883a 	mov	r4,r21
   22364:	80bfffc5 	stb	r2,-1(r16)
   22368:	01400284 	movi	r5,10
   2236c:	002adb00 	call	2adb0 <__divsi3>
   22370:	a9001908 	cmpgei	r4,r21,100
   22374:	8023883a 	mov	r17,r16
   22378:	102b883a 	mov	r21,r2
   2237c:	843fffc4 	addi	r16,r16,-1
   22380:	203ff31e 	bne	r4,zero,22350 <___vfprintf_internal_r+0x191c>
   22384:	800d883a 	mov	r6,r16
   22388:	11000c04 	addi	r4,r2,48
   2238c:	9021883a 	mov	r16,r18
   22390:	a025883a 	mov	r18,r20
   22394:	8829883a 	mov	r20,r17
   22398:	a0bfff84 	addi	r2,r20,-2
   2239c:	313fffc5 	stb	r4,-1(r6)
   223a0:	d8c019c4 	addi	r3,sp,103
   223a4:	db000f17 	ldw	r12,60(sp)
   223a8:	dc400717 	ldw	r17,28(sp)
   223ac:	10c1cd2e 	bgeu	r2,r3,22ae4 <___vfprintf_internal_r+0x20b0>
   223b0:	d8c016c4 	addi	r3,sp,91
   223b4:	00000106 	br	223bc <___vfprintf_internal_r+0x1988>
   223b8:	11000003 	ldbu	r4,0(r2)
   223bc:	19000005 	stb	r4,0(r3)
   223c0:	10800044 	addi	r2,r2,1
   223c4:	d90019c4 	addi	r4,sp,103
   223c8:	18c00044 	addi	r3,r3,1
   223cc:	113ffa1e 	bne	r2,r4,223b8 <___vfprintf_internal_r+0x1984>
   223d0:	d8801a44 	addi	r2,sp,105
   223d4:	d8c016c4 	addi	r3,sp,91
   223d8:	1505c83a 	sub	r2,r2,r20
   223dc:	1885883a 	add	r2,r3,r2
   223e0:	d8c01644 	addi	r3,sp,89
   223e4:	10c5c83a 	sub	r2,r2,r3
   223e8:	d8801015 	stw	r2,64(sp)
   223ec:	d8c00817 	ldw	r3,32(sp)
   223f0:	d9001017 	ldw	r4,64(sp)
   223f4:	18800088 	cmpgei	r2,r3,2
   223f8:	20eb883a 	add	r21,r4,r3
   223fc:	10019226 	beq	r2,zero,22a48 <___vfprintf_internal_r+0x2014>
   22400:	d8800b17 	ldw	r2,44(sp)
   22404:	a8ab883a 	add	r21,r21,r2
   22408:	a829883a 	mov	r20,r21
   2240c:	a800010e 	bge	r21,zero,22414 <___vfprintf_internal_r+0x19e0>
   22410:	0029883a 	mov	r20,zero
   22414:	d8000715 	stw	zero,28(sp)
   22418:	00008e06 	br	22654 <___vfprintf_internal_r+0x1c20>
   2241c:	880f883a 	mov	r7,r17
   22420:	10800044 	addi	r2,r2,1
   22424:	1d47883a 	add	r3,r3,r21
   22428:	b1c00015 	stw	r7,0(r22)
   2242c:	003a7906 	br	20e14 <___vfprintf_internal_r+0x3e0>
   22430:	d9801a04 	addi	r6,sp,104
   22434:	900b883a 	mov	r5,r18
   22438:	9809883a 	mov	r4,r19
   2243c:	0027f8c0 	call	27f8c <__sprint_r>
   22440:	103a8b1e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   22444:	d8c01c17 	ldw	r3,112(sp)
   22448:	dd802704 	addi	r22,sp,156
   2244c:	003c8b06 	br	2167c <___vfprintf_internal_r+0xc48>
   22450:	d9801a04 	addi	r6,sp,104
   22454:	900b883a 	mov	r5,r18
   22458:	9809883a 	mov	r4,r19
   2245c:	da000e15 	stw	r8,56(sp)
   22460:	0027f8c0 	call	27f8c <__sprint_r>
   22464:	103a821e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   22468:	d8c01c17 	ldw	r3,112(sp)
   2246c:	da000e17 	ldw	r8,56(sp)
   22470:	dd802704 	addi	r22,sp,156
   22474:	003a5e06 	br	20df0 <___vfprintf_internal_r+0x3bc>
   22478:	8809883a 	mov	r4,r17
   2247c:	db000415 	stw	r12,16(sp)
   22480:	d8c00615 	stw	r3,24(sp)
   22484:	002099c0 	call	2099c <strlen>
   22488:	db000417 	ldw	r12,16(sp)
   2248c:	102b883a 	mov	r21,r2
   22490:	1029883a 	mov	r20,r2
   22494:	003a2c06 	br	20d48 <___vfprintf_internal_r+0x314>
   22498:	d8800d17 	ldw	r2,52(sp)
   2249c:	d9000b17 	ldw	r4,44(sp)
   224a0:	b0800015 	stw	r2,0(r22)
   224a4:	d8801b17 	ldw	r2,108(sp)
   224a8:	20c7883a 	add	r3,r4,r3
   224ac:	b1000115 	stw	r4,4(r22)
   224b0:	10800044 	addi	r2,r2,1
   224b4:	d8c01c15 	stw	r3,112(sp)
   224b8:	d8801b15 	stw	r2,108(sp)
   224bc:	11000208 	cmpgei	r4,r2,8
   224c0:	2000bf1e 	bne	r4,zero,227c0 <___vfprintf_internal_r+0x1d8c>
   224c4:	b5800204 	addi	r22,r22,8
   224c8:	283d3c0e 	bge	r5,zero,219bc <___vfprintf_internal_r+0xf88>
   224cc:	01c000f4 	movhi	r7,3
   224d0:	293ffc08 	cmpgei	r4,r5,-16
   224d4:	39c09404 	addi	r7,r7,592
   224d8:	0179c83a 	sub	fp,zero,r5
   224dc:	2001361e 	bne	r4,zero,229b8 <___vfprintf_internal_r+0x1f84>
   224e0:	dc000715 	stw	r16,28(sp)
   224e4:	05400404 	movi	r21,16
   224e8:	9021883a 	mov	r16,r18
   224ec:	3825883a 	mov	r18,r7
   224f0:	00000406 	br	22504 <___vfprintf_internal_r+0x1ad0>
   224f4:	b5800204 	addi	r22,r22,8
   224f8:	e73ffc04 	addi	fp,fp,-16
   224fc:	e1800448 	cmpgei	r6,fp,17
   22500:	30012a26 	beq	r6,zero,229ac <___vfprintf_internal_r+0x1f78>
   22504:	10800044 	addi	r2,r2,1
   22508:	18c00404 	addi	r3,r3,16
   2250c:	b4800015 	stw	r18,0(r22)
   22510:	b5400115 	stw	r21,4(r22)
   22514:	d8c01c15 	stw	r3,112(sp)
   22518:	d8801b15 	stw	r2,108(sp)
   2251c:	11800208 	cmpgei	r6,r2,8
   22520:	303ff426 	beq	r6,zero,224f4 <___vfprintf_internal_r+0x1ac0>
   22524:	d9801a04 	addi	r6,sp,104
   22528:	800b883a 	mov	r5,r16
   2252c:	9809883a 	mov	r4,r19
   22530:	0027f8c0 	call	27f8c <__sprint_r>
   22534:	10015f1e 	bne	r2,zero,22ab4 <___vfprintf_internal_r+0x2080>
   22538:	d8c01c17 	ldw	r3,112(sp)
   2253c:	d8801b17 	ldw	r2,108(sp)
   22540:	dd802704 	addi	r22,sp,156
   22544:	003fec06 	br	224f8 <___vfprintf_internal_r+0x1ac4>
   22548:	800f883a 	mov	r7,r16
   2254c:	dc000717 	ldw	r16,28(sp)
   22550:	8817883a 	mov	r11,r17
   22554:	aa000044 	addi	r8,r21,1
   22558:	e0800204 	addi	r2,fp,8
   2255c:	1ac7883a 	add	r3,r3,r11
   22560:	e1c00015 	stw	r7,0(fp)
   22564:	e2c00115 	stw	r11,4(fp)
   22568:	d8c01c15 	stw	r3,112(sp)
   2256c:	da001b15 	stw	r8,108(sp)
   22570:	41000208 	cmpgei	r4,r8,8
   22574:	203eb31e 	bne	r4,zero,22044 <___vfprintf_internal_r+0x1610>
   22578:	42000044 	addi	r8,r8,1
   2257c:	15800204 	addi	r22,r2,8
   22580:	1039883a 	mov	fp,r2
   22584:	003d5106 	br	21acc <___vfprintf_internal_r+0x1098>
   22588:	d8801804 	addi	r2,sp,96
   2258c:	d8800315 	stw	r2,12(sp)
   22590:	d9400917 	ldw	r5,36(sp)
   22594:	d8801504 	addi	r2,sp,84
   22598:	d8800215 	stw	r2,8(sp)
   2259c:	d8801404 	addi	r2,sp,80
   225a0:	da000015 	stw	r8,0(sp)
   225a4:	d8800115 	stw	r2,4(sp)
   225a8:	01c000c4 	movi	r7,3
   225ac:	a00d883a 	mov	r6,r20
   225b0:	9809883a 	mov	r4,r19
   225b4:	db000815 	stw	r12,32(sp)
   225b8:	da000715 	stw	r8,28(sp)
   225bc:	0022f780 	call	22f78 <_dtoa_r>
   225c0:	da000717 	ldw	r8,28(sp)
   225c4:	1023883a 	mov	r17,r2
   225c8:	db000817 	ldw	r12,32(sp)
   225cc:	1207883a 	add	r3,r2,r8
   225d0:	88800007 	ldb	r2,0(r17)
   225d4:	10800c20 	cmpeqi	r2,r2,48
   225d8:	1000661e 	bne	r2,zero,22774 <___vfprintf_internal_r+0x1d40>
   225dc:	d8801417 	ldw	r2,80(sp)
   225e0:	1893883a 	add	r9,r3,r2
   225e4:	d9000917 	ldw	r4,36(sp)
   225e8:	000d883a 	mov	r6,zero
   225ec:	000f883a 	mov	r7,zero
   225f0:	a00b883a 	mov	r5,r20
   225f4:	da401115 	stw	r9,68(sp)
   225f8:	da000815 	stw	r8,32(sp)
   225fc:	db000715 	stw	r12,28(sp)
   22600:	002c2380 	call	2c238 <__eqdf2>
   22604:	db000717 	ldw	r12,28(sp)
   22608:	da000817 	ldw	r8,32(sp)
   2260c:	da401117 	ldw	r9,68(sp)
   22610:	1000981e 	bne	r2,zero,22874 <___vfprintf_internal_r+0x1e40>
   22614:	4805883a 	mov	r2,r9
   22618:	d8c01417 	ldw	r3,80(sp)
   2261c:	1445c83a 	sub	r2,r2,r17
   22620:	ad4011d8 	cmpnei	r21,r21,71
   22624:	d8c00715 	stw	r3,28(sp)
   22628:	d8800815 	stw	r2,32(sp)
   2262c:	a83f3426 	beq	r21,zero,22300 <___vfprintf_internal_r+0x18cc>
   22630:	d8800f17 	ldw	r2,60(sp)
   22634:	103f3726 	beq	r2,zero,22314 <___vfprintf_internal_r+0x18e0>
   22638:	d8c00717 	ldw	r3,28(sp)
   2263c:	6080004c 	andi	r2,r12,1
   22640:	1204b03a 	or	r2,r2,r8
   22644:	00c1130e 	bge	zero,r3,22a94 <___vfprintf_internal_r+0x2060>
   22648:	10010e1e 	bne	r2,zero,22a84 <___vfprintf_internal_r+0x2050>
   2264c:	dd400717 	ldw	r21,28(sp)
   22650:	a829883a 	mov	r20,r21
   22654:	d8800607 	ldb	r2,24(sp)
   22658:	10008f26 	beq	r2,zero,22898 <___vfprintf_internal_r+0x1e64>
   2265c:	00800b44 	movi	r2,45
   22660:	d8801345 	stb	r2,77(sp)
   22664:	d8800e17 	ldw	r2,56(sp)
   22668:	0011883a 	mov	r8,zero
   2266c:	d8800615 	stw	r2,24(sp)
   22670:	003b9206 	br	214bc <___vfprintf_internal_r+0xa88>
   22674:	044000f4 	movhi	r17,3
   22678:	8c408304 	addi	r17,r17,524
   2267c:	003a8b06 	br	210ac <___vfprintf_internal_r+0x678>
   22680:	d8800617 	ldw	r2,24(sp)
   22684:	d8c00615 	stw	r3,24(sp)
   22688:	15000017 	ldw	r20,0(r2)
   2268c:	a02bd7fa 	srai	r21,r20,31
   22690:	a805883a 	mov	r2,r21
   22694:	003ae306 	br	21224 <___vfprintf_internal_r+0x7f0>
   22698:	d8800617 	ldw	r2,24(sp)
   2269c:	002b883a 	mov	r21,zero
   226a0:	d8c00615 	stw	r3,24(sp)
   226a4:	15000017 	ldw	r20,0(r2)
   226a8:	0005883a 	mov	r2,zero
   226ac:	003a2406 	br	20f40 <___vfprintf_internal_r+0x50c>
   226b0:	d8800617 	ldw	r2,24(sp)
   226b4:	002b883a 	mov	r21,zero
   226b8:	d8c00615 	stw	r3,24(sp)
   226bc:	15000017 	ldw	r20,0(r2)
   226c0:	00800044 	movi	r2,1
   226c4:	003a1e06 	br	20f40 <___vfprintf_internal_r+0x50c>
   226c8:	d8800617 	ldw	r2,24(sp)
   226cc:	002b883a 	mov	r21,zero
   226d0:	d8c00615 	stw	r3,24(sp)
   226d4:	15000017 	ldw	r20,0(r2)
   226d8:	003af406 	br	212ac <___vfprintf_internal_r+0x878>
   226dc:	800f883a 	mov	r7,r16
   226e0:	dc000e17 	ldw	r16,56(sp)
   226e4:	10800044 	addi	r2,r2,1
   226e8:	1d47883a 	add	r3,r3,r21
   226ec:	d8801b15 	stw	r2,108(sp)
   226f0:	b1c00015 	stw	r7,0(r22)
   226f4:	b5400115 	stw	r21,4(r22)
   226f8:	d8c01c15 	stw	r3,112(sp)
   226fc:	10800208 	cmpgei	r2,r2,8
   22700:	10003a1e 	bne	r2,zero,227ec <___vfprintf_internal_r+0x1db8>
   22704:	b5800204 	addi	r22,r22,8
   22708:	003d6c06 	br	21cbc <___vfprintf_internal_r+0x1288>
   2270c:	00800b44 	movi	r2,45
   22710:	d8801345 	stb	r2,77(sp)
   22714:	03400b44 	movi	r13,45
   22718:	003a6006 	br	2109c <___vfprintf_internal_r+0x668>
   2271c:	1520003c 	xorhi	r20,r2,32768
   22720:	00800b44 	movi	r2,45
   22724:	d8800605 	stb	r2,24(sp)
   22728:	003ed106 	br	22270 <___vfprintf_internal_r+0x183c>
   2272c:	d9801a04 	addi	r6,sp,104
   22730:	900b883a 	mov	r5,r18
   22734:	9809883a 	mov	r4,r19
   22738:	0027f8c0 	call	27f8c <__sprint_r>
   2273c:	1039cc1e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   22740:	dd401417 	ldw	r21,80(sp)
   22744:	d8c01c17 	ldw	r3,112(sp)
   22748:	dd802704 	addi	r22,sp,156
   2274c:	003d6a06 	br	21cf8 <___vfprintf_internal_r+0x12c4>
   22750:	05400184 	movi	r21,6
   22754:	003e5a06 	br	220c0 <___vfprintf_internal_r+0x168c>
   22758:	d9801a04 	addi	r6,sp,104
   2275c:	900b883a 	mov	r5,r18
   22760:	9809883a 	mov	r4,r19
   22764:	0027f8c0 	call	27f8c <__sprint_r>
   22768:	0039c106 	br	20e70 <___vfprintf_internal_r+0x43c>
   2276c:	d9401345 	stb	r5,77(sp)
   22770:	00396f06 	br	20d30 <___vfprintf_internal_r+0x2fc>
   22774:	d9000917 	ldw	r4,36(sp)
   22778:	000d883a 	mov	r6,zero
   2277c:	000f883a 	mov	r7,zero
   22780:	a00b883a 	mov	r5,r20
   22784:	d8c01115 	stw	r3,68(sp)
   22788:	da000815 	stw	r8,32(sp)
   2278c:	db000715 	stw	r12,28(sp)
   22790:	002c2380 	call	2c238 <__eqdf2>
   22794:	db000717 	ldw	r12,28(sp)
   22798:	da000817 	ldw	r8,32(sp)
   2279c:	d8c01117 	ldw	r3,68(sp)
   227a0:	103f8e26 	beq	r2,zero,225dc <___vfprintf_internal_r+0x1ba8>
   227a4:	00800044 	movi	r2,1
   227a8:	1205c83a 	sub	r2,r2,r8
   227ac:	d8801415 	stw	r2,80(sp)
   227b0:	003f8b06 	br	225e0 <___vfprintf_internal_r+0x1bac>
   227b4:	403ea81e 	bne	r8,zero,22258 <___vfprintf_internal_r+0x1824>
   227b8:	02000044 	movi	r8,1
   227bc:	003ea606 	br	22258 <___vfprintf_internal_r+0x1824>
   227c0:	d9801a04 	addi	r6,sp,104
   227c4:	900b883a 	mov	r5,r18
   227c8:	9809883a 	mov	r4,r19
   227cc:	0027f8c0 	call	27f8c <__sprint_r>
   227d0:	1039a71e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   227d4:	d9401417 	ldw	r5,80(sp)
   227d8:	d8c01c17 	ldw	r3,112(sp)
   227dc:	d8801b17 	ldw	r2,108(sp)
   227e0:	dd802704 	addi	r22,sp,156
   227e4:	283c750e 	bge	r5,zero,219bc <___vfprintf_internal_r+0xf88>
   227e8:	003f3806 	br	224cc <___vfprintf_internal_r+0x1a98>
   227ec:	d9801a04 	addi	r6,sp,104
   227f0:	900b883a 	mov	r5,r18
   227f4:	9809883a 	mov	r4,r19
   227f8:	0027f8c0 	call	27f8c <__sprint_r>
   227fc:	10399c1e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   22800:	d8c01c17 	ldw	r3,112(sp)
   22804:	dd802704 	addi	r22,sp,156
   22808:	003d2c06 	br	21cbc <___vfprintf_internal_r+0x1288>
   2280c:	db000417 	ldw	r12,16(sp)
   22810:	003a9106 	br	21258 <___vfprintf_internal_r+0x824>
   22814:	d8801804 	addi	r2,sp,96
   22818:	d8800315 	stw	r2,12(sp)
   2281c:	d9400917 	ldw	r5,36(sp)
   22820:	d8801504 	addi	r2,sp,84
   22824:	40c00044 	addi	r3,r8,1
   22828:	d8800215 	stw	r2,8(sp)
   2282c:	d8801404 	addi	r2,sp,80
   22830:	d8c00015 	stw	r3,0(sp)
   22834:	d8800115 	stw	r2,4(sp)
   22838:	01c00084 	movi	r7,2
   2283c:	a00d883a 	mov	r6,r20
   22840:	9809883a 	mov	r4,r19
   22844:	db001115 	stw	r12,68(sp)
   22848:	da000815 	stw	r8,32(sp)
   2284c:	d8c00715 	stw	r3,28(sp)
   22850:	0022f780 	call	22f78 <_dtoa_r>
   22854:	d8c00717 	ldw	r3,28(sp)
   22858:	da000817 	ldw	r8,32(sp)
   2285c:	db001117 	ldw	r12,68(sp)
   22860:	1023883a 	mov	r17,r2
   22864:	e08011d8 	cmpnei	r2,fp,71
   22868:	103e9c26 	beq	r2,zero,222dc <___vfprintf_internal_r+0x18a8>
   2286c:	88d3883a 	add	r9,r17,r3
   22870:	003f5c06 	br	225e4 <___vfprintf_internal_r+0x1bb0>
   22874:	d8801817 	ldw	r2,96(sp)
   22878:	127f672e 	bgeu	r2,r9,22618 <___vfprintf_internal_r+0x1be4>
   2287c:	01000c04 	movi	r4,48
   22880:	10c00044 	addi	r3,r2,1
   22884:	d8c01815 	stw	r3,96(sp)
   22888:	11000005 	stb	r4,0(r2)
   2288c:	d8801817 	ldw	r2,96(sp)
   22890:	127ffb36 	bltu	r2,r9,22880 <___vfprintf_internal_r+0x1e4c>
   22894:	003f6006 	br	22618 <___vfprintf_internal_r+0x1be4>
   22898:	d8800e17 	ldw	r2,56(sp)
   2289c:	db401343 	ldbu	r13,77(sp)
   228a0:	0011883a 	mov	r8,zero
   228a4:	d8800615 	stw	r2,24(sp)
   228a8:	003b0006 	br	214ac <___vfprintf_internal_r+0xa78>
   228ac:	d8800717 	ldw	r2,28(sp)
   228b0:	d8c00817 	ldw	r3,32(sp)
   228b4:	10c02216 	blt	r2,r3,22940 <___vfprintf_internal_r+0x1f0c>
   228b8:	6300004c 	andi	r12,r12,1
   228bc:	60004f1e 	bne	r12,zero,229fc <___vfprintf_internal_r+0x1fc8>
   228c0:	1029883a 	mov	r20,r2
   228c4:	1000010e 	bge	r2,zero,228cc <___vfprintf_internal_r+0x1e98>
   228c8:	0029883a 	mov	r20,zero
   228cc:	dd400717 	ldw	r21,28(sp)
   228d0:	070019c4 	movi	fp,103
   228d4:	003f5f06 	br	22654 <___vfprintf_internal_r+0x1c20>
   228d8:	d9801a04 	addi	r6,sp,104
   228dc:	900b883a 	mov	r5,r18
   228e0:	9809883a 	mov	r4,r19
   228e4:	0027f8c0 	call	27f8c <__sprint_r>
   228e8:	1039611e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   228ec:	d8c01c17 	ldw	r3,112(sp)
   228f0:	dd802704 	addi	r22,sp,156
   228f4:	a83cee0e 	bge	r21,zero,21cb0 <___vfprintf_internal_r+0x127c>
   228f8:	003dec06 	br	220ac <___vfprintf_internal_r+0x1678>
   228fc:	02000184 	movi	r8,6
   22900:	003e5506 	br	22258 <___vfprintf_internal_r+0x1824>
   22904:	d9801a04 	addi	r6,sp,104
   22908:	900b883a 	mov	r5,r18
   2290c:	9809883a 	mov	r4,r19
   22910:	0027f8c0 	call	27f8c <__sprint_r>
   22914:	1039561e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   22918:	d8801417 	ldw	r2,80(sp)
   2291c:	d9000817 	ldw	r4,32(sp)
   22920:	d8c01c17 	ldw	r3,112(sp)
   22924:	dd802704 	addi	r22,sp,156
   22928:	2085c83a 	sub	r2,r4,r2
   2292c:	003d0606 	br	21d48 <___vfprintf_internal_r+0x1314>
   22930:	4029883a 	mov	r20,r8
   22934:	d8c00615 	stw	r3,24(sp)
   22938:	402b883a 	mov	r21,r8
   2293c:	00390206 	br	20d48 <___vfprintf_internal_r+0x314>
   22940:	d8800817 	ldw	r2,32(sp)
   22944:	d8c00b17 	ldw	r3,44(sp)
   22948:	10eb883a 	add	r21,r2,r3
   2294c:	d8800717 	ldw	r2,28(sp)
   22950:	00800316 	blt	zero,r2,22960 <___vfprintf_internal_r+0x1f2c>
   22954:	d8800717 	ldw	r2,28(sp)
   22958:	a8abc83a 	sub	r21,r21,r2
   2295c:	ad400044 	addi	r21,r21,1
   22960:	a829883a 	mov	r20,r21
   22964:	a8002a16 	blt	r21,zero,22a10 <___vfprintf_internal_r+0x1fdc>
   22968:	070019c4 	movi	fp,103
   2296c:	003f3906 	br	22654 <___vfprintf_internal_r+0x1c20>
   22970:	d9401345 	stb	r5,77(sp)
   22974:	003a2306 	br	21204 <___vfprintf_internal_r+0x7d0>
   22978:	d9401345 	stb	r5,77(sp)
   2297c:	003b1806 	br	215e0 <___vfprintf_internal_r+0xbac>
   22980:	d9401345 	stb	r5,77(sp)
   22984:	003a8e06 	br	213c0 <___vfprintf_internal_r+0x98c>
   22988:	d9401345 	stb	r5,77(sp)
   2298c:	003a3d06 	br	21284 <___vfprintf_internal_r+0x850>
   22990:	d9401345 	stb	r5,77(sp)
   22994:	003a7606 	br	21370 <___vfprintf_internal_r+0x93c>
   22998:	d9401345 	stb	r5,77(sp)
   2299c:	00399406 	br	20ff0 <___vfprintf_internal_r+0x5bc>
   229a0:	00bfffc4 	movi	r2,-1
   229a4:	d8800515 	stw	r2,20(sp)
   229a8:	00393406 	br	20e7c <___vfprintf_internal_r+0x448>
   229ac:	900f883a 	mov	r7,r18
   229b0:	8025883a 	mov	r18,r16
   229b4:	dc000717 	ldw	r16,28(sp)
   229b8:	10800044 	addi	r2,r2,1
   229bc:	1f07883a 	add	r3,r3,fp
   229c0:	b1c00015 	stw	r7,0(r22)
   229c4:	b7000115 	stw	fp,4(r22)
   229c8:	d8c01c15 	stw	r3,112(sp)
   229cc:	d8801b15 	stw	r2,108(sp)
   229d0:	11000208 	cmpgei	r4,r2,8
   229d4:	203bf826 	beq	r4,zero,219b8 <___vfprintf_internal_r+0xf84>
   229d8:	d9801a04 	addi	r6,sp,104
   229dc:	900b883a 	mov	r5,r18
   229e0:	9809883a 	mov	r4,r19
   229e4:	0027f8c0 	call	27f8c <__sprint_r>
   229e8:	1039211e 	bne	r2,zero,20e70 <___vfprintf_internal_r+0x43c>
   229ec:	d8c01c17 	ldw	r3,112(sp)
   229f0:	d8801b17 	ldw	r2,108(sp)
   229f4:	dd802704 	addi	r22,sp,156
   229f8:	003bf006 	br	219bc <___vfprintf_internal_r+0xf88>
   229fc:	d8800717 	ldw	r2,28(sp)
   22a00:	d8c00b17 	ldw	r3,44(sp)
   22a04:	10eb883a 	add	r21,r2,r3
   22a08:	a829883a 	mov	r20,r21
   22a0c:	a83fd60e 	bge	r21,zero,22968 <___vfprintf_internal_r+0x1f34>
   22a10:	0029883a 	mov	r20,zero
   22a14:	003fd406 	br	22968 <___vfprintf_internal_r+0x1f34>
   22a18:	00800c04 	movi	r2,48
   22a1c:	ad400c04 	addi	r21,r21,48
   22a20:	d88016c5 	stb	r2,91(sp)
   22a24:	00800104 	movi	r2,4
   22a28:	dd401705 	stb	r21,92(sp)
   22a2c:	d8801015 	stw	r2,64(sp)
   22a30:	003e6e06 	br	223ec <___vfprintf_internal_r+0x19b8>
   22a34:	05400044 	movi	r21,1
   22a38:	a8abc83a 	sub	r21,r21,r2
   22a3c:	00800b44 	movi	r2,45
   22a40:	d8801685 	stb	r2,90(sp)
   22a44:	003e3a06 	br	22330 <___vfprintf_internal_r+0x18fc>
   22a48:	6080004c 	andi	r2,r12,1
   22a4c:	d8800715 	stw	r2,28(sp)
   22a50:	103e6b1e 	bne	r2,zero,22400 <___vfprintf_internal_r+0x19cc>
   22a54:	a829883a 	mov	r20,r21
   22a58:	a83efe0e 	bge	r21,zero,22654 <___vfprintf_internal_r+0x1c20>
   22a5c:	0029883a 	mov	r20,zero
   22a60:	003efc06 	br	22654 <___vfprintf_internal_r+0x1c20>
   22a64:	d8800a17 	ldw	r2,40(sp)
   22a68:	10001a16 	blt	r2,zero,22ad4 <___vfprintf_internal_r+0x20a0>
   22a6c:	db401343 	ldbu	r13,77(sp)
   22a70:	e0801210 	cmplti	r2,fp,72
   22a74:	1000141e 	bne	r2,zero,22ac8 <___vfprintf_internal_r+0x2094>
   22a78:	044000f4 	movhi	r17,3
   22a7c:	8c408604 	addi	r17,r17,536
   22a80:	00398a06 	br	210ac <___vfprintf_internal_r+0x678>
   22a84:	d8800b17 	ldw	r2,44(sp)
   22a88:	18ab883a 	add	r21,r3,r2
   22a8c:	aa2b883a 	add	r21,r21,r8
   22a90:	003ff006 	br	22a54 <___vfprintf_internal_r+0x2020>
   22a94:	1000031e 	bne	r2,zero,22aa4 <___vfprintf_internal_r+0x2070>
   22a98:	05000044 	movi	r20,1
   22a9c:	05400044 	movi	r21,1
   22aa0:	003eec06 	br	22654 <___vfprintf_internal_r+0x1c20>
   22aa4:	d8800b17 	ldw	r2,44(sp)
   22aa8:	15400044 	addi	r21,r2,1
   22aac:	aa2b883a 	add	r21,r21,r8
   22ab0:	003fe806 	br	22a54 <___vfprintf_internal_r+0x2020>
   22ab4:	8025883a 	mov	r18,r16
   22ab8:	0038ed06 	br	20e70 <___vfprintf_internal_r+0x43c>
   22abc:	b005883a 	mov	r2,r22
   22ac0:	39c09404 	addi	r7,r7,592
   22ac4:	003ea506 	br	2255c <___vfprintf_internal_r+0x1b28>
   22ac8:	044000f4 	movhi	r17,3
   22acc:	8c408504 	addi	r17,r17,532
   22ad0:	00397606 	br	210ac <___vfprintf_internal_r+0x678>
   22ad4:	00800b44 	movi	r2,45
   22ad8:	d8801345 	stb	r2,77(sp)
   22adc:	03400b44 	movi	r13,45
   22ae0:	003fe306 	br	22a70 <___vfprintf_internal_r+0x203c>
   22ae4:	00800084 	movi	r2,2
   22ae8:	d8801015 	stw	r2,64(sp)
   22aec:	003e3f06 	br	223ec <___vfprintf_internal_r+0x19b8>
   22af0:	d8c00617 	ldw	r3,24(sp)
   22af4:	1a000017 	ldw	r8,0(r3)
   22af8:	18c00104 	addi	r3,r3,4
   22afc:	4000010e 	bge	r8,zero,22b04 <___vfprintf_internal_r+0x20d0>
   22b00:	023fffc4 	movi	r8,-1
   22b04:	bf000043 	ldbu	fp,1(r23)
   22b08:	d8c00615 	stw	r3,24(sp)
   22b0c:	102f883a 	mov	r23,r2
   22b10:	e2c03fcc 	andi	r11,fp,255
   22b14:	5ac0201c 	xori	r11,r11,128
   22b18:	5affe004 	addi	r11,r11,-128
   22b1c:	00381106 	br	20b64 <___vfprintf_internal_r+0x130>

00022b20 <__vfprintf_internal>:
   22b20:	00c000f4 	movhi	r3,3
   22b24:	2005883a 	mov	r2,r4
   22b28:	19091917 	ldw	r4,9316(r3)
   22b2c:	300f883a 	mov	r7,r6
   22b30:	280d883a 	mov	r6,r5
   22b34:	100b883a 	mov	r5,r2
   22b38:	0020a341 	jmpi	20a34 <___vfprintf_internal_r>

00022b3c <__sbprintf>:
   22b3c:	2880030b 	ldhu	r2,12(r5)
   22b40:	2b001917 	ldw	r12,100(r5)
   22b44:	2ac0038b 	ldhu	r11,14(r5)
   22b48:	2a800717 	ldw	r10,28(r5)
   22b4c:	2a400917 	ldw	r9,36(r5)
   22b50:	defee204 	addi	sp,sp,-1144
   22b54:	da001a04 	addi	r8,sp,104
   22b58:	00c10004 	movi	r3,1024
   22b5c:	dc011a15 	stw	r16,1128(sp)
   22b60:	10bfff4c 	andi	r2,r2,65533
   22b64:	2821883a 	mov	r16,r5
   22b68:	d80b883a 	mov	r5,sp
   22b6c:	dc811c15 	stw	r18,1136(sp)
   22b70:	dc411b15 	stw	r17,1132(sp)
   22b74:	dfc11d15 	stw	ra,1140(sp)
   22b78:	2025883a 	mov	r18,r4
   22b7c:	d880030d 	sth	r2,12(sp)
   22b80:	db001915 	stw	r12,100(sp)
   22b84:	dac0038d 	sth	r11,14(sp)
   22b88:	da800715 	stw	r10,28(sp)
   22b8c:	da400915 	stw	r9,36(sp)
   22b90:	da000015 	stw	r8,0(sp)
   22b94:	da000415 	stw	r8,16(sp)
   22b98:	d8c00215 	stw	r3,8(sp)
   22b9c:	d8c00515 	stw	r3,20(sp)
   22ba0:	d8000615 	stw	zero,24(sp)
   22ba4:	0020a340 	call	20a34 <___vfprintf_internal_r>
   22ba8:	1023883a 	mov	r17,r2
   22bac:	10000d0e 	bge	r2,zero,22be4 <__sbprintf+0xa8>
   22bb0:	d880030b 	ldhu	r2,12(sp)
   22bb4:	1080100c 	andi	r2,r2,64
   22bb8:	10000326 	beq	r2,zero,22bc8 <__sbprintf+0x8c>
   22bbc:	8080030b 	ldhu	r2,12(r16)
   22bc0:	10801014 	ori	r2,r2,64
   22bc4:	8080030d 	sth	r2,12(r16)
   22bc8:	8805883a 	mov	r2,r17
   22bcc:	dfc11d17 	ldw	ra,1140(sp)
   22bd0:	dc811c17 	ldw	r18,1136(sp)
   22bd4:	dc411b17 	ldw	r17,1132(sp)
   22bd8:	dc011a17 	ldw	r16,1128(sp)
   22bdc:	dec11e04 	addi	sp,sp,1144
   22be0:	f800283a 	ret
   22be4:	d80b883a 	mov	r5,sp
   22be8:	9009883a 	mov	r4,r18
   22bec:	00248f00 	call	248f0 <_fflush_r>
   22bf0:	103fef26 	beq	r2,zero,22bb0 <__sbprintf+0x74>
   22bf4:	047fffc4 	movi	r17,-1
   22bf8:	003fed06 	br	22bb0 <__sbprintf+0x74>

00022bfc <__swsetup_r>:
   22bfc:	008000f4 	movhi	r2,3
   22c00:	10891917 	ldw	r2,9316(r2)
   22c04:	defffd04 	addi	sp,sp,-12
   22c08:	dc400115 	stw	r17,4(sp)
   22c0c:	dc000015 	stw	r16,0(sp)
   22c10:	dfc00215 	stw	ra,8(sp)
   22c14:	2023883a 	mov	r17,r4
   22c18:	2821883a 	mov	r16,r5
   22c1c:	10000226 	beq	r2,zero,22c28 <__swsetup_r+0x2c>
   22c20:	10c00e17 	ldw	r3,56(r2)
   22c24:	18003326 	beq	r3,zero,22cf4 <__swsetup_r+0xf8>
   22c28:	8180030b 	ldhu	r6,12(r16)
   22c2c:	30c0020c 	andi	r3,r6,8
   22c30:	3005883a 	mov	r2,r6
   22c34:	18000f26 	beq	r3,zero,22c74 <__swsetup_r+0x78>
   22c38:	80c00417 	ldw	r3,16(r16)
   22c3c:	18001626 	beq	r3,zero,22c98 <__swsetup_r+0x9c>
   22c40:	1100004c 	andi	r4,r2,1
   22c44:	20001f1e 	bne	r4,zero,22cc4 <__swsetup_r+0xc8>
   22c48:	1100008c 	andi	r4,r2,2
   22c4c:	20002c1e 	bne	r4,zero,22d00 <__swsetup_r+0x104>
   22c50:	81000517 	ldw	r4,20(r16)
   22c54:	81000215 	stw	r4,8(r16)
   22c58:	18001f26 	beq	r3,zero,22cd8 <__swsetup_r+0xdc>
   22c5c:	0005883a 	mov	r2,zero
   22c60:	dfc00217 	ldw	ra,8(sp)
   22c64:	dc400117 	ldw	r17,4(sp)
   22c68:	dc000017 	ldw	r16,0(sp)
   22c6c:	dec00304 	addi	sp,sp,12
   22c70:	f800283a 	ret
   22c74:	3080040c 	andi	r2,r6,16
   22c78:	10003126 	beq	r2,zero,22d40 <__swsetup_r+0x144>
   22c7c:	3080010c 	andi	r2,r6,4
   22c80:	1000211e 	bne	r2,zero,22d08 <__swsetup_r+0x10c>
   22c84:	80c00417 	ldw	r3,16(r16)
   22c88:	30800214 	ori	r2,r6,8
   22c8c:	8080030d 	sth	r2,12(r16)
   22c90:	100d883a 	mov	r6,r2
   22c94:	183fea1e 	bne	r3,zero,22c40 <__swsetup_r+0x44>
   22c98:	1100a00c 	andi	r4,r2,640
   22c9c:	21008020 	cmpeqi	r4,r4,512
   22ca0:	203fe71e 	bne	r4,zero,22c40 <__swsetup_r+0x44>
   22ca4:	8809883a 	mov	r4,r17
   22ca8:	800b883a 	mov	r5,r16
   22cac:	00257a80 	call	257a8 <__smakebuf_r>
   22cb0:	8180030b 	ldhu	r6,12(r16)
   22cb4:	80c00417 	ldw	r3,16(r16)
   22cb8:	3005883a 	mov	r2,r6
   22cbc:	1100004c 	andi	r4,r2,1
   22cc0:	203fe126 	beq	r4,zero,22c48 <__swsetup_r+0x4c>
   22cc4:	81000517 	ldw	r4,20(r16)
   22cc8:	80000215 	stw	zero,8(r16)
   22ccc:	0109c83a 	sub	r4,zero,r4
   22cd0:	81000615 	stw	r4,24(r16)
   22cd4:	183fe11e 	bne	r3,zero,22c5c <__swsetup_r+0x60>
   22cd8:	10c0200c 	andi	r3,r2,128
   22cdc:	0005883a 	mov	r2,zero
   22ce0:	183fdf26 	beq	r3,zero,22c60 <__swsetup_r+0x64>
   22ce4:	31801014 	ori	r6,r6,64
   22ce8:	8180030d 	sth	r6,12(r16)
   22cec:	00bfffc4 	movi	r2,-1
   22cf0:	003fdb06 	br	22c60 <__swsetup_r+0x64>
   22cf4:	1009883a 	mov	r4,r2
   22cf8:	0024c840 	call	24c84 <__sinit>
   22cfc:	003fca06 	br	22c28 <__swsetup_r+0x2c>
   22d00:	0009883a 	mov	r4,zero
   22d04:	003fd306 	br	22c54 <__swsetup_r+0x58>
   22d08:	81400c17 	ldw	r5,48(r16)
   22d0c:	28000626 	beq	r5,zero,22d28 <__swsetup_r+0x12c>
   22d10:	80801004 	addi	r2,r16,64
   22d14:	28800326 	beq	r5,r2,22d24 <__swsetup_r+0x128>
   22d18:	8809883a 	mov	r4,r17
   22d1c:	0024de80 	call	24de8 <_free_r>
   22d20:	8180030b 	ldhu	r6,12(r16)
   22d24:	80000c15 	stw	zero,48(r16)
   22d28:	80c00417 	ldw	r3,16(r16)
   22d2c:	00bff6c4 	movi	r2,-37
   22d30:	118c703a 	and	r6,r2,r6
   22d34:	80000115 	stw	zero,4(r16)
   22d38:	80c00015 	stw	r3,0(r16)
   22d3c:	003fd206 	br	22c88 <__swsetup_r+0x8c>
   22d40:	00800244 	movi	r2,9
   22d44:	88800015 	stw	r2,0(r17)
   22d48:	31801014 	ori	r6,r6,64
   22d4c:	8180030d 	sth	r6,12(r16)
   22d50:	00bfffc4 	movi	r2,-1
   22d54:	003fc206 	br	22c60 <__swsetup_r+0x64>

00022d58 <quorem>:
   22d58:	defff204 	addi	sp,sp,-56
   22d5c:	dc400515 	stw	r17,20(sp)
   22d60:	20800417 	ldw	r2,16(r4)
   22d64:	2c400417 	ldw	r17,16(r5)
   22d68:	dfc00d15 	stw	ra,52(sp)
   22d6c:	df000c15 	stw	fp,48(sp)
   22d70:	ddc00b15 	stw	r23,44(sp)
   22d74:	dd800a15 	stw	r22,40(sp)
   22d78:	dd400915 	stw	r21,36(sp)
   22d7c:	dd000815 	stw	r20,32(sp)
   22d80:	dcc00715 	stw	r19,28(sp)
   22d84:	dc800615 	stw	r18,24(sp)
   22d88:	dc000415 	stw	r16,16(sp)
   22d8c:	d9000115 	stw	r4,4(sp)
   22d90:	d9400215 	stw	r5,8(sp)
   22d94:	14407616 	blt	r2,r17,22f70 <quorem+0x218>
   22d98:	8c7fffc4 	addi	r17,r17,-1
   22d9c:	882a90ba 	slli	r21,r17,2
   22da0:	2f000504 	addi	fp,r5,20
   22da4:	25800504 	addi	r22,r4,20
   22da8:	e565883a 	add	r18,fp,r21
   22dac:	b545883a 	add	r2,r22,r21
   22db0:	95c00017 	ldw	r23,0(r18)
   22db4:	15000017 	ldw	r20,0(r2)
   22db8:	dd800015 	stw	r22,0(sp)
   22dbc:	bdc00044 	addi	r23,r23,1
   22dc0:	b80b883a 	mov	r5,r23
   22dc4:	a009883a 	mov	r4,r20
   22dc8:	d8800315 	stw	r2,12(sp)
   22dcc:	002aea40 	call	2aea4 <__udivsi3>
   22dd0:	1021883a 	mov	r16,r2
   22dd4:	a5c02f36 	bltu	r20,r23,22e94 <quorem+0x13c>
   22dd8:	e029883a 	mov	r20,fp
   22ddc:	002b883a 	mov	r21,zero
   22de0:	002f883a 	mov	r23,zero
   22de4:	a4c00017 	ldw	r19,0(r20)
   22de8:	800b883a 	mov	r5,r16
   22dec:	b5800104 	addi	r22,r22,4
   22df0:	993fffcc 	andi	r4,r19,65535
   22df4:	002af640 	call	2af64 <__mulsi3>
   22df8:	9808d43a 	srli	r4,r19,16
   22dfc:	800b883a 	mov	r5,r16
   22e00:	156b883a 	add	r21,r2,r21
   22e04:	002af640 	call	2af64 <__mulsi3>
   22e08:	b0ffff17 	ldw	r3,-4(r22)
   22e0c:	a80ad43a 	srli	r5,r21,16
   22e10:	a93fffcc 	andi	r4,r21,65535
   22e14:	19bfffcc 	andi	r6,r3,65535
   22e18:	b909c83a 	sub	r4,r23,r4
   22e1c:	2189883a 	add	r4,r4,r6
   22e20:	1806d43a 	srli	r3,r3,16
   22e24:	1145883a 	add	r2,r2,r5
   22e28:	200bd43a 	srai	r5,r4,16
   22e2c:	11bfffcc 	andi	r6,r2,65535
   22e30:	1987c83a 	sub	r3,r3,r6
   22e34:	1947883a 	add	r3,r3,r5
   22e38:	180a943a 	slli	r5,r3,16
   22e3c:	213fffcc 	andi	r4,r4,65535
   22e40:	a5000104 	addi	r20,r20,4
   22e44:	2908b03a 	or	r4,r5,r4
   22e48:	b13fff15 	stw	r4,-4(r22)
   22e4c:	102ad43a 	srli	r21,r2,16
   22e50:	182fd43a 	srai	r23,r3,16
   22e54:	953fe32e 	bgeu	r18,r20,22de4 <quorem+0x8c>
   22e58:	d8c00317 	ldw	r3,12(sp)
   22e5c:	18800017 	ldw	r2,0(r3)
   22e60:	10000c1e 	bne	r2,zero,22e94 <quorem+0x13c>
   22e64:	d8800017 	ldw	r2,0(sp)
   22e68:	1d7fff04 	addi	r21,r3,-4
   22e6c:	15400436 	bltu	r2,r21,22e80 <quorem+0x128>
   22e70:	00000606 	br	22e8c <quorem+0x134>
   22e74:	d8800017 	ldw	r2,0(sp)
   22e78:	8c7fffc4 	addi	r17,r17,-1
   22e7c:	1540032e 	bgeu	r2,r21,22e8c <quorem+0x134>
   22e80:	a8800017 	ldw	r2,0(r21)
   22e84:	ad7fff04 	addi	r21,r21,-4
   22e88:	103ffa26 	beq	r2,zero,22e74 <quorem+0x11c>
   22e8c:	d8800117 	ldw	r2,4(sp)
   22e90:	14400415 	stw	r17,16(r2)
   22e94:	d9400217 	ldw	r5,8(sp)
   22e98:	d9000117 	ldw	r4,4(sp)
   22e9c:	0026ec80 	call	26ec8 <__mcmp>
   22ea0:	10002616 	blt	r2,zero,22f3c <quorem+0x1e4>
   22ea4:	d9800017 	ldw	r6,0(sp)
   22ea8:	84000044 	addi	r16,r16,1
   22eac:	0007883a 	mov	r3,zero
   22eb0:	e1000017 	ldw	r4,0(fp)
   22eb4:	31400017 	ldw	r5,0(r6)
   22eb8:	31800104 	addi	r6,r6,4
   22ebc:	20bfffcc 	andi	r2,r4,65535
   22ec0:	1887c83a 	sub	r3,r3,r2
   22ec4:	28bfffcc 	andi	r2,r5,65535
   22ec8:	1885883a 	add	r2,r3,r2
   22ecc:	2008d43a 	srli	r4,r4,16
   22ed0:	2806d43a 	srli	r3,r5,16
   22ed4:	100fd43a 	srai	r7,r2,16
   22ed8:	117fffcc 	andi	r5,r2,65535
   22edc:	1907c83a 	sub	r3,r3,r4
   22ee0:	19c7883a 	add	r3,r3,r7
   22ee4:	1804943a 	slli	r2,r3,16
   22ee8:	e7000104 	addi	fp,fp,4
   22eec:	1807d43a 	srai	r3,r3,16
   22ef0:	1144b03a 	or	r2,r2,r5
   22ef4:	30bfff15 	stw	r2,-4(r6)
   22ef8:	973fed2e 	bgeu	r18,fp,22eb0 <quorem+0x158>
   22efc:	880490ba 	slli	r2,r17,2
   22f00:	d9000017 	ldw	r4,0(sp)
   22f04:	2085883a 	add	r2,r4,r2
   22f08:	10c00017 	ldw	r3,0(r2)
   22f0c:	18000b1e 	bne	r3,zero,22f3c <quorem+0x1e4>
   22f10:	10bfff04 	addi	r2,r2,-4
   22f14:	20800436 	bltu	r4,r2,22f28 <quorem+0x1d0>
   22f18:	00000606 	br	22f34 <quorem+0x1dc>
   22f1c:	d8c00017 	ldw	r3,0(sp)
   22f20:	8c7fffc4 	addi	r17,r17,-1
   22f24:	1880032e 	bgeu	r3,r2,22f34 <quorem+0x1dc>
   22f28:	10c00017 	ldw	r3,0(r2)
   22f2c:	10bfff04 	addi	r2,r2,-4
   22f30:	183ffa26 	beq	r3,zero,22f1c <quorem+0x1c4>
   22f34:	d8800117 	ldw	r2,4(sp)
   22f38:	14400415 	stw	r17,16(r2)
   22f3c:	8005883a 	mov	r2,r16
   22f40:	dfc00d17 	ldw	ra,52(sp)
   22f44:	df000c17 	ldw	fp,48(sp)
   22f48:	ddc00b17 	ldw	r23,44(sp)
   22f4c:	dd800a17 	ldw	r22,40(sp)
   22f50:	dd400917 	ldw	r21,36(sp)
   22f54:	dd000817 	ldw	r20,32(sp)
   22f58:	dcc00717 	ldw	r19,28(sp)
   22f5c:	dc800617 	ldw	r18,24(sp)
   22f60:	dc400517 	ldw	r17,20(sp)
   22f64:	dc000417 	ldw	r16,16(sp)
   22f68:	dec00e04 	addi	sp,sp,56
   22f6c:	f800283a 	ret
   22f70:	0005883a 	mov	r2,zero
   22f74:	003ff206 	br	22f40 <quorem+0x1e8>

00022f78 <_dtoa_r>:
   22f78:	20801017 	ldw	r2,64(r4)
   22f7c:	deffe204 	addi	sp,sp,-120
   22f80:	ddc01b15 	stw	r23,108(sp)
   22f84:	dd001815 	stw	r20,96(sp)
   22f88:	dc801615 	stw	r18,88(sp)
   22f8c:	dc401515 	stw	r17,84(sp)
   22f90:	dc001415 	stw	r16,80(sp)
   22f94:	dfc01d15 	stw	ra,116(sp)
   22f98:	df001c15 	stw	fp,112(sp)
   22f9c:	dd801a15 	stw	r22,104(sp)
   22fa0:	dd401915 	stw	r21,100(sp)
   22fa4:	dcc01715 	stw	r19,92(sp)
   22fa8:	d9c00115 	stw	r7,4(sp)
   22fac:	dc002017 	ldw	r16,128(sp)
   22fb0:	202f883a 	mov	r23,r4
   22fb4:	3025883a 	mov	r18,r6
   22fb8:	2829883a 	mov	r20,r5
   22fbc:	3023883a 	mov	r17,r6
   22fc0:	10000826 	beq	r2,zero,22fe4 <_dtoa_r+0x6c>
   22fc4:	21801117 	ldw	r6,68(r4)
   22fc8:	00c00044 	movi	r3,1
   22fcc:	100b883a 	mov	r5,r2
   22fd0:	1986983a 	sll	r3,r3,r6
   22fd4:	11800115 	stw	r6,4(r2)
   22fd8:	10c00215 	stw	r3,8(r2)
   22fdc:	002655c0 	call	2655c <_Bfree>
   22fe0:	b8001015 	stw	zero,64(r23)
   22fe4:	90018616 	blt	r18,zero,23600 <_dtoa_r+0x688>
   22fe8:	80000015 	stw	zero,0(r16)
   22fec:	909ffc2c 	andhi	r2,r18,32752
   22ff0:	00dffc34 	movhi	r3,32752
   22ff4:	10c18b26 	beq	r2,r3,23624 <_dtoa_r+0x6ac>
   22ff8:	000d883a 	mov	r6,zero
   22ffc:	000f883a 	mov	r7,zero
   23000:	a009883a 	mov	r4,r20
   23004:	880b883a 	mov	r5,r17
   23008:	002c2380 	call	2c238 <__eqdf2>
   2300c:	1000181e 	bne	r2,zero,23070 <_dtoa_r+0xf8>
   23010:	d8c01f17 	ldw	r3,124(sp)
   23014:	00800044 	movi	r2,1
   23018:	18800015 	stw	r2,0(r3)
   2301c:	d8802117 	ldw	r2,132(sp)
   23020:	10030b26 	beq	r2,zero,23c50 <_dtoa_r+0xcd8>
   23024:	d8c02117 	ldw	r3,132(sp)
   23028:	008000f4 	movhi	r2,3
   2302c:	10809344 	addi	r2,r2,589
   23030:	070000f4 	movhi	fp,3
   23034:	18800015 	stw	r2,0(r3)
   23038:	e7009304 	addi	fp,fp,588
   2303c:	e005883a 	mov	r2,fp
   23040:	dfc01d17 	ldw	ra,116(sp)
   23044:	df001c17 	ldw	fp,112(sp)
   23048:	ddc01b17 	ldw	r23,108(sp)
   2304c:	dd801a17 	ldw	r22,104(sp)
   23050:	dd401917 	ldw	r21,100(sp)
   23054:	dd001817 	ldw	r20,96(sp)
   23058:	dcc01717 	ldw	r19,92(sp)
   2305c:	dc801617 	ldw	r18,88(sp)
   23060:	dc401517 	ldw	r17,84(sp)
   23064:	dc001417 	ldw	r16,80(sp)
   23068:	dec01e04 	addi	sp,sp,120
   2306c:	f800283a 	ret
   23070:	d8801204 	addi	r2,sp,72
   23074:	9020d53a 	srli	r16,r18,20
   23078:	d8800015 	stw	r2,0(sp)
   2307c:	d9c01304 	addi	r7,sp,76
   23080:	a00b883a 	mov	r5,r20
   23084:	880d883a 	mov	r6,r17
   23088:	b809883a 	mov	r4,r23
   2308c:	00272ac0 	call	272ac <__d2b>
   23090:	102d883a 	mov	r22,r2
   23094:	8001741e 	bne	r16,zero,23668 <_dtoa_r+0x6f0>
   23098:	df001217 	ldw	fp,72(sp)
   2309c:	dc001317 	ldw	r16,76(sp)
   230a0:	e421883a 	add	r16,fp,r16
   230a4:	80810c84 	addi	r2,r16,1074
   230a8:	10c00850 	cmplti	r3,r2,33
   230ac:	1802f81e 	bne	r3,zero,23c90 <_dtoa_r+0xd18>
   230b0:	01001004 	movi	r4,64
   230b4:	2085c83a 	sub	r2,r4,r2
   230b8:	81010484 	addi	r4,r16,1042
   230bc:	90a4983a 	sll	r18,r18,r2
   230c0:	a108d83a 	srl	r4,r20,r4
   230c4:	9108b03a 	or	r4,r18,r4
   230c8:	002d7040 	call	2d704 <__floatunsidf>
   230cc:	1009883a 	mov	r4,r2
   230d0:	017f8434 	movhi	r5,65040
   230d4:	00800044 	movi	r2,1
   230d8:	194b883a 	add	r5,r3,r5
   230dc:	843fffc4 	addi	r16,r16,-1
   230e0:	d8800915 	stw	r2,36(sp)
   230e4:	000d883a 	mov	r6,zero
   230e8:	01cffe34 	movhi	r7,16376
   230ec:	002cc400 	call	2cc40 <__subdf3>
   230f0:	0198dbf4 	movhi	r6,25455
   230f4:	01cff4f4 	movhi	r7,16339
   230f8:	3190d844 	addi	r6,r6,17249
   230fc:	39e1e9c4 	addi	r7,r7,-30809
   23100:	1009883a 	mov	r4,r2
   23104:	180b883a 	mov	r5,r3
   23108:	002c4980 	call	2c498 <__muldf3>
   2310c:	01a2d874 	movhi	r6,35681
   23110:	01cff1f4 	movhi	r7,16327
   23114:	31b22cc4 	addi	r6,r6,-14157
   23118:	39e28a04 	addi	r7,r7,-30168
   2311c:	180b883a 	mov	r5,r3
   23120:	1009883a 	mov	r4,r2
   23124:	002af8c0 	call	2af8c <__adddf3>
   23128:	8009883a 	mov	r4,r16
   2312c:	1027883a 	mov	r19,r2
   23130:	1825883a 	mov	r18,r3
   23134:	002d6480 	call	2d648 <__floatsidf>
   23138:	019427f4 	movhi	r6,20639
   2313c:	01cff4f4 	movhi	r7,16339
   23140:	319e7ec4 	addi	r6,r6,31227
   23144:	39d104c4 	addi	r7,r7,17427
   23148:	1009883a 	mov	r4,r2
   2314c:	180b883a 	mov	r5,r3
   23150:	002c4980 	call	2c498 <__muldf3>
   23154:	100d883a 	mov	r6,r2
   23158:	180f883a 	mov	r7,r3
   2315c:	9809883a 	mov	r4,r19
   23160:	900b883a 	mov	r5,r18
   23164:	002af8c0 	call	2af8c <__adddf3>
   23168:	1009883a 	mov	r4,r2
   2316c:	180b883a 	mov	r5,r3
   23170:	1025883a 	mov	r18,r2
   23174:	182b883a 	mov	r21,r3
   23178:	002d5c80 	call	2d5c8 <__fixdfsi>
   2317c:	000d883a 	mov	r6,zero
   23180:	000f883a 	mov	r7,zero
   23184:	9009883a 	mov	r4,r18
   23188:	a80b883a 	mov	r5,r21
   2318c:	1027883a 	mov	r19,r2
   23190:	002c3a80 	call	2c3a8 <__ledf2>
   23194:	1002a416 	blt	r2,zero,23c28 <_dtoa_r+0xcb0>
   23198:	e439c83a 	sub	fp,fp,r16
   2319c:	e0ffffc4 	addi	r3,fp,-1
   231a0:	988005e8 	cmpgeui	r2,r19,23
   231a4:	d8c00215 	stw	r3,8(sp)
   231a8:	1002961e 	bne	r2,zero,23c04 <_dtoa_r+0xc8c>
   231ac:	980690fa 	slli	r3,r19,3
   231b0:	008000f4 	movhi	r2,3
   231b4:	1080dc04 	addi	r2,r2,880
   231b8:	10c5883a 	add	r2,r2,r3
   231bc:	11800017 	ldw	r6,0(r2)
   231c0:	11c00117 	ldw	r7,4(r2)
   231c4:	a009883a 	mov	r4,r20
   231c8:	880b883a 	mov	r5,r17
   231cc:	002c3a80 	call	2c3a8 <__ledf2>
   231d0:	1002670e 	bge	r2,zero,23b70 <_dtoa_r+0xbf8>
   231d4:	d8000815 	stw	zero,32(sp)
   231d8:	e0bfffc4 	addi	r2,fp,-1
   231dc:	9cffffc4 	addi	r19,r19,-1
   231e0:	10028c16 	blt	r2,zero,23c14 <_dtoa_r+0xc9c>
   231e4:	d8000515 	stw	zero,20(sp)
   231e8:	9802650e 	bge	r19,zero,23b80 <_dtoa_r+0xc08>
   231ec:	d8800517 	ldw	r2,20(sp)
   231f0:	d8c00117 	ldw	r3,4(sp)
   231f4:	dcc00315 	stw	r19,12(sp)
   231f8:	14c5c83a 	sub	r2,r2,r19
   231fc:	d8800515 	stw	r2,20(sp)
   23200:	04c5c83a 	sub	r2,zero,r19
   23204:	d8800715 	stw	r2,28(sp)
   23208:	188002a8 	cmpgeui	r2,r3,10
   2320c:	0027883a 	mov	r19,zero
   23210:	1002631e 	bne	r2,zero,23ba0 <_dtoa_r+0xc28>
   23214:	18800190 	cmplti	r2,r3,6
   23218:	1002a11e 	bne	r2,zero,23ca0 <_dtoa_r+0xd28>
   2321c:	18bfff04 	addi	r2,r3,-4
   23220:	d8800115 	stw	r2,4(sp)
   23224:	0021883a 	mov	r16,zero
   23228:	d8c00117 	ldw	r3,4(sp)
   2322c:	18800120 	cmpeqi	r2,r3,4
   23230:	1003721e 	bne	r2,zero,23ffc <_dtoa_r+0x1084>
   23234:	18800160 	cmpeqi	r2,r3,5
   23238:	10032f1e 	bne	r2,zero,23ef8 <_dtoa_r+0xf80>
   2323c:	188000a0 	cmpeqi	r2,r3,2
   23240:	10026326 	beq	r2,zero,23bd0 <_dtoa_r+0xc58>
   23244:	d8000615 	stw	zero,24(sp)
   23248:	d8801e17 	ldw	r2,120(sp)
   2324c:	00833c0e 	bge	zero,r2,23f40 <_dtoa_r+0xfc8>
   23250:	d8800b15 	stw	r2,44(sp)
   23254:	d8800415 	stw	r2,16(sp)
   23258:	100d883a 	mov	r6,r2
   2325c:	b8001115 	stw	zero,68(r23)
   23260:	30800610 	cmplti	r2,r6,24
   23264:	1005161e 	bne	r2,zero,246c0 <_dtoa_r+0x1748>
   23268:	00c00044 	movi	r3,1
   2326c:	00800104 	movi	r2,4
   23270:	1085883a 	add	r2,r2,r2
   23274:	11000504 	addi	r4,r2,20
   23278:	180b883a 	mov	r5,r3
   2327c:	18c00044 	addi	r3,r3,1
   23280:	313ffb2e 	bgeu	r6,r4,23270 <_dtoa_r+0x2f8>
   23284:	b9401115 	stw	r5,68(r23)
   23288:	b809883a 	mov	r4,r23
   2328c:	00264b80 	call	264b8 <_Balloc>
   23290:	1039883a 	mov	fp,r2
   23294:	1004f526 	beq	r2,zero,2466c <_dtoa_r+0x16f4>
   23298:	b8801015 	stw	r2,64(r23)
   2329c:	d8800417 	ldw	r2,16(sp)
   232a0:	108003e8 	cmpgeui	r2,r2,15
   232a4:	10010b1e 	bne	r2,zero,236d4 <_dtoa_r+0x75c>
   232a8:	80010a26 	beq	r16,zero,236d4 <_dtoa_r+0x75c>
   232ac:	d9000317 	ldw	r4,12(sp)
   232b0:	0103a30e 	bge	zero,r4,24140 <_dtoa_r+0x11c8>
   232b4:	208003cc 	andi	r2,r4,15
   232b8:	100690fa 	slli	r3,r2,3
   232bc:	202bd13a 	srai	r21,r4,4
   232c0:	008000f4 	movhi	r2,3
   232c4:	1080dc04 	addi	r2,r2,880
   232c8:	10c5883a 	add	r2,r2,r3
   232cc:	a8c0040c 	andi	r3,r21,16
   232d0:	12800017 	ldw	r10,0(r2)
   232d4:	12400117 	ldw	r9,4(r2)
   232d8:	18034226 	beq	r3,zero,23fe4 <_dtoa_r+0x106c>
   232dc:	008000f4 	movhi	r2,3
   232e0:	1080d204 	addi	r2,r2,840
   232e4:	11800817 	ldw	r6,32(r2)
   232e8:	11c00917 	ldw	r7,36(r2)
   232ec:	a009883a 	mov	r4,r20
   232f0:	880b883a 	mov	r5,r17
   232f4:	da400e15 	stw	r9,56(sp)
   232f8:	da800d15 	stw	r10,52(sp)
   232fc:	002b9040 	call	2b904 <__divdf3>
   23300:	da800d17 	ldw	r10,52(sp)
   23304:	da400e17 	ldw	r9,56(sp)
   23308:	ad4003cc 	andi	r21,r21,15
   2330c:	d8800a15 	stw	r2,40(sp)
   23310:	d8c00c15 	stw	r3,48(sp)
   23314:	040000c4 	movi	r16,3
   23318:	a8001126 	beq	r21,zero,23360 <_dtoa_r+0x3e8>
   2331c:	048000f4 	movhi	r18,3
   23320:	9480d204 	addi	r18,r18,840
   23324:	5009883a 	mov	r4,r10
   23328:	480b883a 	mov	r5,r9
   2332c:	a980004c 	andi	r6,r21,1
   23330:	30000626 	beq	r6,zero,2334c <_dtoa_r+0x3d4>
   23334:	91800017 	ldw	r6,0(r18)
   23338:	91c00117 	ldw	r7,4(r18)
   2333c:	84000044 	addi	r16,r16,1
   23340:	002c4980 	call	2c498 <__muldf3>
   23344:	1009883a 	mov	r4,r2
   23348:	180b883a 	mov	r5,r3
   2334c:	a82bd07a 	srai	r21,r21,1
   23350:	94800204 	addi	r18,r18,8
   23354:	a83ff51e 	bne	r21,zero,2332c <_dtoa_r+0x3b4>
   23358:	2015883a 	mov	r10,r4
   2335c:	2813883a 	mov	r9,r5
   23360:	d9000a17 	ldw	r4,40(sp)
   23364:	d9400c17 	ldw	r5,48(sp)
   23368:	500d883a 	mov	r6,r10
   2336c:	480f883a 	mov	r7,r9
   23370:	002b9040 	call	2b904 <__divdf3>
   23374:	1025883a 	mov	r18,r2
   23378:	d8c00a15 	stw	r3,40(sp)
   2337c:	d8800817 	ldw	r2,32(sp)
   23380:	10000726 	beq	r2,zero,233a0 <_dtoa_r+0x428>
   23384:	dd400a17 	ldw	r21,40(sp)
   23388:	000d883a 	mov	r6,zero
   2338c:	01cffc34 	movhi	r7,16368
   23390:	9009883a 	mov	r4,r18
   23394:	a80b883a 	mov	r5,r21
   23398:	002c3a80 	call	2c3a8 <__ledf2>
   2339c:	10045516 	blt	r2,zero,244f4 <_dtoa_r+0x157c>
   233a0:	8009883a 	mov	r4,r16
   233a4:	002d6480 	call	2d648 <__floatsidf>
   233a8:	d9c00a17 	ldw	r7,40(sp)
   233ac:	900d883a 	mov	r6,r18
   233b0:	1009883a 	mov	r4,r2
   233b4:	180b883a 	mov	r5,r3
   233b8:	002c4980 	call	2c498 <__muldf3>
   233bc:	000d883a 	mov	r6,zero
   233c0:	01d00734 	movhi	r7,16412
   233c4:	1009883a 	mov	r4,r2
   233c8:	180b883a 	mov	r5,r3
   233cc:	002af8c0 	call	2af8c <__adddf3>
   233d0:	d8800c15 	stw	r2,48(sp)
   233d4:	00bf3034 	movhi	r2,64704
   233d8:	1885883a 	add	r2,r3,r2
   233dc:	d8800d15 	stw	r2,52(sp)
   233e0:	d8800417 	ldw	r2,16(sp)
   233e4:	10033926 	beq	r2,zero,240cc <_dtoa_r+0x1154>
   233e8:	d8800317 	ldw	r2,12(sp)
   233ec:	d8801115 	stw	r2,68(sp)
   233f0:	d8800417 	ldw	r2,16(sp)
   233f4:	d8800e15 	stw	r2,56(sp)
   233f8:	dc000a17 	ldw	r16,40(sp)
   233fc:	9009883a 	mov	r4,r18
   23400:	800b883a 	mov	r5,r16
   23404:	002d5c80 	call	2d5c8 <__fixdfsi>
   23408:	d8c00e17 	ldw	r3,56(sp)
   2340c:	d8801015 	stw	r2,64(sp)
   23410:	18ffffc4 	addi	r3,r3,-1
   23414:	180890fa 	slli	r4,r3,3
   23418:	00c000f4 	movhi	r3,3
   2341c:	18c0dc04 	addi	r3,r3,880
   23420:	1907883a 	add	r3,r3,r4
   23424:	1b000017 	ldw	r12,0(r3)
   23428:	1b400117 	ldw	r13,4(r3)
   2342c:	1009883a 	mov	r4,r2
   23430:	db000f15 	stw	r12,60(sp)
   23434:	db400a15 	stw	r13,40(sp)
   23438:	002d6480 	call	2d648 <__floatsidf>
   2343c:	9009883a 	mov	r4,r18
   23440:	800b883a 	mov	r5,r16
   23444:	100d883a 	mov	r6,r2
   23448:	180f883a 	mov	r7,r3
   2344c:	002cc400 	call	2cc40 <__subdf3>
   23450:	dac01017 	ldw	r11,64(sp)
   23454:	102b883a 	mov	r21,r2
   23458:	d8800617 	ldw	r2,24(sp)
   2345c:	db400a17 	ldw	r13,40(sp)
   23460:	db000f17 	ldw	r12,60(sp)
   23464:	e4000044 	addi	r16,fp,1
   23468:	1825883a 	mov	r18,r3
   2346c:	5ac00c04 	addi	r11,r11,48
   23470:	1003c626 	beq	r2,zero,2438c <_dtoa_r+0x1414>
   23474:	600d883a 	mov	r6,r12
   23478:	680f883a 	mov	r7,r13
   2347c:	0009883a 	mov	r4,zero
   23480:	014ff834 	movhi	r5,16352
   23484:	dac00f15 	stw	r11,60(sp)
   23488:	002b9040 	call	2b904 <__divdf3>
   2348c:	d9800c17 	ldw	r6,48(sp)
   23490:	d9c00d17 	ldw	r7,52(sp)
   23494:	1009883a 	mov	r4,r2
   23498:	180b883a 	mov	r5,r3
   2349c:	002cc400 	call	2cc40 <__subdf3>
   234a0:	dac00f17 	ldw	r11,60(sp)
   234a4:	a80d883a 	mov	r6,r21
   234a8:	900f883a 	mov	r7,r18
   234ac:	e2c00005 	stb	r11,0(fp)
   234b0:	1009883a 	mov	r4,r2
   234b4:	180b883a 	mov	r5,r3
   234b8:	d8800a15 	stw	r2,40(sp)
   234bc:	d8c00c15 	stw	r3,48(sp)
   234c0:	002c2b80 	call	2c2b8 <__gedf2>
   234c4:	00844116 	blt	zero,r2,245cc <_dtoa_r+0x1654>
   234c8:	0005883a 	mov	r2,zero
   234cc:	dcc00f15 	stw	r19,60(sp)
   234d0:	dd800d15 	stw	r22,52(sp)
   234d4:	dcc00c17 	ldw	r19,48(sp)
   234d8:	dd800e17 	ldw	r22,56(sp)
   234dc:	dc400c15 	stw	r17,48(sp)
   234e0:	ddc00e15 	stw	r23,56(sp)
   234e4:	dc400a17 	ldw	r17,40(sp)
   234e8:	dd000a15 	stw	r20,40(sp)
   234ec:	1029883a 	mov	r20,r2
   234f0:	00002606 	br	2358c <_dtoa_r+0x614>
   234f4:	a5000044 	addi	r20,r20,1
   234f8:	a5843d0e 	bge	r20,r22,245f0 <_dtoa_r+0x1678>
   234fc:	8809883a 	mov	r4,r17
   23500:	980b883a 	mov	r5,r19
   23504:	000d883a 	mov	r6,zero
   23508:	01d00934 	movhi	r7,16420
   2350c:	002c4980 	call	2c498 <__muldf3>
   23510:	000d883a 	mov	r6,zero
   23514:	01d00934 	movhi	r7,16420
   23518:	a809883a 	mov	r4,r21
   2351c:	900b883a 	mov	r5,r18
   23520:	1023883a 	mov	r17,r2
   23524:	1827883a 	mov	r19,r3
   23528:	002c4980 	call	2c498 <__muldf3>
   2352c:	180b883a 	mov	r5,r3
   23530:	1009883a 	mov	r4,r2
   23534:	1825883a 	mov	r18,r3
   23538:	102b883a 	mov	r21,r2
   2353c:	002d5c80 	call	2d5c8 <__fixdfsi>
   23540:	1009883a 	mov	r4,r2
   23544:	102f883a 	mov	r23,r2
   23548:	002d6480 	call	2d648 <__floatsidf>
   2354c:	a809883a 	mov	r4,r21
   23550:	900b883a 	mov	r5,r18
   23554:	100d883a 	mov	r6,r2
   23558:	180f883a 	mov	r7,r3
   2355c:	002cc400 	call	2cc40 <__subdf3>
   23560:	84000044 	addi	r16,r16,1
   23564:	ba000c04 	addi	r8,r23,48
   23568:	823fffc5 	stb	r8,-1(r16)
   2356c:	880d883a 	mov	r6,r17
   23570:	980f883a 	mov	r7,r19
   23574:	1009883a 	mov	r4,r2
   23578:	180b883a 	mov	r5,r3
   2357c:	102b883a 	mov	r21,r2
   23580:	1825883a 	mov	r18,r3
   23584:	002c3a80 	call	2c3a8 <__ledf2>
   23588:	10040e16 	blt	r2,zero,245c4 <_dtoa_r+0x164c>
   2358c:	a80d883a 	mov	r6,r21
   23590:	900f883a 	mov	r7,r18
   23594:	0009883a 	mov	r4,zero
   23598:	014ffc34 	movhi	r5,16368
   2359c:	002cc400 	call	2cc40 <__subdf3>
   235a0:	880d883a 	mov	r6,r17
   235a4:	980f883a 	mov	r7,r19
   235a8:	1009883a 	mov	r4,r2
   235ac:	180b883a 	mov	r5,r3
   235b0:	002c3a80 	call	2c3a8 <__ledf2>
   235b4:	103fcf0e 	bge	r2,zero,234f4 <_dtoa_r+0x57c>
   235b8:	dd800d17 	ldw	r22,52(sp)
   235bc:	ddc00e17 	ldw	r23,56(sp)
   235c0:	d8801117 	ldw	r2,68(sp)
   235c4:	10800044 	addi	r2,r2,1
   235c8:	d8800315 	stw	r2,12(sp)
   235cc:	00000106 	br	235d4 <_dtoa_r+0x65c>
   235d0:	e403ee26 	beq	fp,r16,2458c <_dtoa_r+0x1614>
   235d4:	80ffffc3 	ldbu	r3,-1(r16)
   235d8:	8025883a 	mov	r18,r16
   235dc:	843fffc4 	addi	r16,r16,-1
   235e0:	18803fcc 	andi	r2,r3,255
   235e4:	1080201c 	xori	r2,r2,128
   235e8:	10bfe004 	addi	r2,r2,-128
   235ec:	10800e60 	cmpeqi	r2,r2,57
   235f0:	103ff71e 	bne	r2,zero,235d0 <_dtoa_r+0x658>
   235f4:	18c00044 	addi	r3,r3,1
   235f8:	80c00005 	stb	r3,0(r16)
   235fc:	00015106 	br	23b44 <_dtoa_r+0xbcc>
   23600:	04600034 	movhi	r17,32768
   23604:	8c7fffc4 	addi	r17,r17,-1
   23608:	9462703a 	and	r17,r18,r17
   2360c:	00800044 	movi	r2,1
   23610:	8825883a 	mov	r18,r17
   23614:	80800015 	stw	r2,0(r16)
   23618:	00dffc34 	movhi	r3,32752
   2361c:	909ffc2c 	andhi	r2,r18,32752
   23620:	10fe751e 	bne	r2,r3,22ff8 <_dtoa_r+0x80>
   23624:	d8c01f17 	ldw	r3,124(sp)
   23628:	00800434 	movhi	r2,16
   2362c:	10bfffc4 	addi	r2,r2,-1
   23630:	90a4703a 	and	r18,r18,r2
   23634:	0089c3c4 	movi	r2,9999
   23638:	18800015 	stw	r2,0(r3)
   2363c:	9528b03a 	or	r20,r18,r20
   23640:	a000121e 	bne	r20,zero,2368c <_dtoa_r+0x714>
   23644:	d8802117 	ldw	r2,132(sp)
   23648:	070000f4 	movhi	fp,3
   2364c:	10041526 	beq	r2,zero,246a4 <_dtoa_r+0x172c>
   23650:	008000f4 	movhi	r2,3
   23654:	e7009d04 	addi	fp,fp,628
   23658:	10809f04 	addi	r2,r2,636
   2365c:	d8c02117 	ldw	r3,132(sp)
   23660:	18800015 	stw	r2,0(r3)
   23664:	003e7506 	br	2303c <_dtoa_r+0xc4>
   23668:	01400434 	movhi	r5,16
   2366c:	297fffc4 	addi	r5,r5,-1
   23670:	894a703a 	and	r5,r17,r5
   23674:	df001217 	ldw	fp,72(sp)
   23678:	a009883a 	mov	r4,r20
   2367c:	294ffc34 	orhi	r5,r5,16368
   23680:	843f0044 	addi	r16,r16,-1023
   23684:	d8000915 	stw	zero,36(sp)
   23688:	003e9606 	br	230e4 <_dtoa_r+0x16c>
   2368c:	d8802117 	ldw	r2,132(sp)
   23690:	070000f4 	movhi	fp,3
   23694:	1002141e 	bne	r2,zero,23ee8 <_dtoa_r+0xf70>
   23698:	e7009c04 	addi	fp,fp,624
   2369c:	003e6706 	br	2303c <_dtoa_r+0xc4>
   236a0:	b8001115 	stw	zero,68(r23)
   236a4:	000b883a 	mov	r5,zero
   236a8:	b809883a 	mov	r4,r23
   236ac:	00264b80 	call	264b8 <_Balloc>
   236b0:	1039883a 	mov	fp,r2
   236b4:	1003ed26 	beq	r2,zero,2466c <_dtoa_r+0x16f4>
   236b8:	b8801015 	stw	r2,64(r23)
   236bc:	00bfffc4 	movi	r2,-1
   236c0:	d8800415 	stw	r2,16(sp)
   236c4:	d8800b15 	stw	r2,44(sp)
   236c8:	00800044 	movi	r2,1
   236cc:	d8001e15 	stw	zero,120(sp)
   236d0:	d8800615 	stw	r2,24(sp)
   236d4:	d8801317 	ldw	r2,76(sp)
   236d8:	10007216 	blt	r2,zero,238a4 <_dtoa_r+0x92c>
   236dc:	d9000317 	ldw	r4,12(sp)
   236e0:	20c003c8 	cmpgei	r3,r4,15
   236e4:	18006f1e 	bne	r3,zero,238a4 <_dtoa_r+0x92c>
   236e8:	200690fa 	slli	r3,r4,3
   236ec:	008000f4 	movhi	r2,3
   236f0:	1080dc04 	addi	r2,r2,880
   236f4:	10c5883a 	add	r2,r2,r3
   236f8:	10c00017 	ldw	r3,0(r2)
   236fc:	14800117 	ldw	r18,4(r2)
   23700:	d8801e17 	ldw	r2,120(sp)
   23704:	d8c00115 	stw	r3,4(sp)
   23708:	1000150e 	bge	r2,zero,23760 <_dtoa_r+0x7e8>
   2370c:	d8800417 	ldw	r2,16(sp)
   23710:	00801316 	blt	zero,r2,23760 <_dtoa_r+0x7e8>
   23714:	d8800417 	ldw	r2,16(sp)
   23718:	1002801e 	bne	r2,zero,2411c <_dtoa_r+0x11a4>
   2371c:	d9000117 	ldw	r4,4(sp)
   23720:	000d883a 	mov	r6,zero
   23724:	01d00534 	movhi	r7,16404
   23728:	900b883a 	mov	r5,r18
   2372c:	002c4980 	call	2c498 <__muldf3>
   23730:	100d883a 	mov	r6,r2
   23734:	180f883a 	mov	r7,r3
   23738:	a009883a 	mov	r4,r20
   2373c:	880b883a 	mov	r5,r17
   23740:	002c3a80 	call	2c3a8 <__ledf2>
   23744:	002b883a 	mov	r21,zero
   23748:	0021883a 	mov	r16,zero
   2374c:	00820f16 	blt	zero,r2,23f8c <_dtoa_r+0x1014>
   23750:	d8801e17 	ldw	r2,120(sp)
   23754:	e025883a 	mov	r18,fp
   23758:	00a2303a 	nor	r17,zero,r2
   2375c:	00021006 	br	23fa0 <_dtoa_r+0x1028>
   23760:	dd400117 	ldw	r21,4(sp)
   23764:	900f883a 	mov	r7,r18
   23768:	a009883a 	mov	r4,r20
   2376c:	a80d883a 	mov	r6,r21
   23770:	880b883a 	mov	r5,r17
   23774:	002b9040 	call	2b904 <__divdf3>
   23778:	180b883a 	mov	r5,r3
   2377c:	1009883a 	mov	r4,r2
   23780:	002d5c80 	call	2d5c8 <__fixdfsi>
   23784:	1009883a 	mov	r4,r2
   23788:	1027883a 	mov	r19,r2
   2378c:	002d6480 	call	2d648 <__floatsidf>
   23790:	a80d883a 	mov	r6,r21
   23794:	900f883a 	mov	r7,r18
   23798:	1009883a 	mov	r4,r2
   2379c:	180b883a 	mov	r5,r3
   237a0:	002c4980 	call	2c498 <__muldf3>
   237a4:	100d883a 	mov	r6,r2
   237a8:	a009883a 	mov	r4,r20
   237ac:	880b883a 	mov	r5,r17
   237b0:	180f883a 	mov	r7,r3
   237b4:	002cc400 	call	2cc40 <__subdf3>
   237b8:	d9800417 	ldw	r6,16(sp)
   237bc:	1009883a 	mov	r4,r2
   237c0:	98800c04 	addi	r2,r19,48
   237c4:	e0800005 	stb	r2,0(fp)
   237c8:	30800060 	cmpeqi	r2,r6,1
   237cc:	180b883a 	mov	r5,r3
   237d0:	e4000044 	addi	r16,fp,1
   237d4:	1002a91e 	bne	r2,zero,2427c <_dtoa_r+0x1304>
   237d8:	04400044 	movi	r17,1
   237dc:	3027883a 	mov	r19,r6
   237e0:	dd800215 	stw	r22,8(sp)
   237e4:	ddc00415 	stw	r23,16(sp)
   237e8:	00001c06 	br	2385c <_dtoa_r+0x8e4>
   237ec:	a80d883a 	mov	r6,r21
   237f0:	900f883a 	mov	r7,r18
   237f4:	b809883a 	mov	r4,r23
   237f8:	a00b883a 	mov	r5,r20
   237fc:	002b9040 	call	2b904 <__divdf3>
   23800:	180b883a 	mov	r5,r3
   23804:	1009883a 	mov	r4,r2
   23808:	002d5c80 	call	2d5c8 <__fixdfsi>
   2380c:	1009883a 	mov	r4,r2
   23810:	102d883a 	mov	r22,r2
   23814:	002d6480 	call	2d648 <__floatsidf>
   23818:	a80d883a 	mov	r6,r21
   2381c:	900f883a 	mov	r7,r18
   23820:	1009883a 	mov	r4,r2
   23824:	180b883a 	mov	r5,r3
   23828:	002c4980 	call	2c498 <__muldf3>
   2382c:	b809883a 	mov	r4,r23
   23830:	a00b883a 	mov	r5,r20
   23834:	100d883a 	mov	r6,r2
   23838:	180f883a 	mov	r7,r3
   2383c:	002cc400 	call	2cc40 <__subdf3>
   23840:	b1000c04 	addi	r4,r22,48
   23844:	81000005 	stb	r4,0(r16)
   23848:	8c400044 	addi	r17,r17,1
   2384c:	84000044 	addi	r16,r16,1
   23850:	1009883a 	mov	r4,r2
   23854:	180b883a 	mov	r5,r3
   23858:	9c428526 	beq	r19,r17,24270 <_dtoa_r+0x12f8>
   2385c:	000d883a 	mov	r6,zero
   23860:	01d00934 	movhi	r7,16420
   23864:	002c4980 	call	2c498 <__muldf3>
   23868:	000d883a 	mov	r6,zero
   2386c:	000f883a 	mov	r7,zero
   23870:	1009883a 	mov	r4,r2
   23874:	180b883a 	mov	r5,r3
   23878:	102f883a 	mov	r23,r2
   2387c:	1829883a 	mov	r20,r3
   23880:	002c2380 	call	2c238 <__eqdf2>
   23884:	103fd91e 	bne	r2,zero,237ec <_dtoa_r+0x874>
   23888:	d8800317 	ldw	r2,12(sp)
   2388c:	dd800217 	ldw	r22,8(sp)
   23890:	ddc00417 	ldw	r23,16(sp)
   23894:	10800044 	addi	r2,r2,1
   23898:	d8800315 	stw	r2,12(sp)
   2389c:	8025883a 	mov	r18,r16
   238a0:	0000a806 	br	23b44 <_dtoa_r+0xbcc>
   238a4:	d8c00617 	ldw	r3,24(sp)
   238a8:	1800ec26 	beq	r3,zero,23c5c <_dtoa_r+0xce4>
   238ac:	d8c00117 	ldw	r3,4(sp)
   238b0:	18c00088 	cmpgei	r3,r3,2
   238b4:	1801e926 	beq	r3,zero,2405c <_dtoa_r+0x10e4>
   238b8:	d8800417 	ldw	r2,16(sp)
   238bc:	157fffc4 	addi	r21,r2,-1
   238c0:	d8800717 	ldw	r2,28(sp)
   238c4:	1541c50e 	bge	r2,r21,23fdc <_dtoa_r+0x1064>
   238c8:	d8800717 	ldw	r2,28(sp)
   238cc:	dd400715 	stw	r21,28(sp)
   238d0:	a885c83a 	sub	r2,r21,r2
   238d4:	98a7883a 	add	r19,r19,r2
   238d8:	002b883a 	mov	r21,zero
   238dc:	d8800417 	ldw	r2,16(sp)
   238e0:	10029516 	blt	r2,zero,24338 <_dtoa_r+0x13c0>
   238e4:	d8c00517 	ldw	r3,20(sp)
   238e8:	d9000217 	ldw	r4,8(sp)
   238ec:	1825883a 	mov	r18,r3
   238f0:	2089883a 	add	r4,r4,r2
   238f4:	10c5883a 	add	r2,r2,r3
   238f8:	d9000215 	stw	r4,8(sp)
   238fc:	d8800515 	stw	r2,20(sp)
   23900:	01400044 	movi	r5,1
   23904:	b809883a 	mov	r4,r23
   23908:	00269280 	call	26928 <__i2b>
   2390c:	1021883a 	mov	r16,r2
   23910:	04800b0e 	bge	zero,r18,23940 <_dtoa_r+0x9c8>
   23914:	d8c00217 	ldw	r3,8(sp)
   23918:	00c0090e 	bge	zero,r3,23940 <_dtoa_r+0x9c8>
   2391c:	9005883a 	mov	r2,r18
   23920:	1c81a616 	blt	r3,r18,23fbc <_dtoa_r+0x1044>
   23924:	d8c00517 	ldw	r3,20(sp)
   23928:	90a5c83a 	sub	r18,r18,r2
   2392c:	1887c83a 	sub	r3,r3,r2
   23930:	d8c00515 	stw	r3,20(sp)
   23934:	d8c00217 	ldw	r3,8(sp)
   23938:	1885c83a 	sub	r2,r3,r2
   2393c:	d8800215 	stw	r2,8(sp)
   23940:	d8800717 	ldw	r2,28(sp)
   23944:	10001526 	beq	r2,zero,2399c <_dtoa_r+0xa24>
   23948:	d8800617 	ldw	r2,24(sp)
   2394c:	1001f626 	beq	r2,zero,24128 <_dtoa_r+0x11b0>
   23950:	05400f0e 	bge	zero,r21,23990 <_dtoa_r+0xa18>
   23954:	800b883a 	mov	r5,r16
   23958:	a80d883a 	mov	r6,r21
   2395c:	b809883a 	mov	r4,r23
   23960:	0026c280 	call	26c28 <__pow5mult>
   23964:	b00d883a 	mov	r6,r22
   23968:	100b883a 	mov	r5,r2
   2396c:	b809883a 	mov	r4,r23
   23970:	1021883a 	mov	r16,r2
   23974:	002697c0 	call	2697c <__multiply>
   23978:	b00b883a 	mov	r5,r22
   2397c:	b809883a 	mov	r4,r23
   23980:	d8800915 	stw	r2,36(sp)
   23984:	002655c0 	call	2655c <_Bfree>
   23988:	d8800917 	ldw	r2,36(sp)
   2398c:	102d883a 	mov	r22,r2
   23990:	d8800717 	ldw	r2,28(sp)
   23994:	154dc83a 	sub	r6,r2,r21
   23998:	1542621e 	bne	r2,r21,24324 <_dtoa_r+0x13ac>
   2399c:	01400044 	movi	r5,1
   239a0:	b809883a 	mov	r4,r23
   239a4:	00269280 	call	26928 <__i2b>
   239a8:	102b883a 	mov	r21,r2
   239ac:	04c0be16 	blt	zero,r19,23ca8 <_dtoa_r+0xd30>
   239b0:	d8800117 	ldw	r2,4(sp)
   239b4:	10800088 	cmpgei	r2,r2,2
   239b8:	10015226 	beq	r2,zero,23f04 <_dtoa_r+0xf8c>
   239bc:	0023883a 	mov	r17,zero
   239c0:	00800044 	movi	r2,1
   239c4:	9800c11e 	bne	r19,zero,23ccc <_dtoa_r+0xd54>
   239c8:	d9400217 	ldw	r5,8(sp)
   239cc:	1145883a 	add	r2,r2,r5
   239d0:	108007cc 	andi	r2,r2,31
   239d4:	1000a526 	beq	r2,zero,23c6c <_dtoa_r+0xcf4>
   239d8:	00c00804 	movi	r3,32
   239dc:	1887c83a 	sub	r3,r3,r2
   239e0:	19000150 	cmplti	r4,r3,5
   239e4:	2003311e 	bne	r4,zero,246ac <_dtoa_r+0x1734>
   239e8:	00c00704 	movi	r3,28
   239ec:	1885c83a 	sub	r2,r3,r2
   239f0:	d8c00517 	ldw	r3,20(sp)
   239f4:	90a5883a 	add	r18,r18,r2
   239f8:	1887883a 	add	r3,r3,r2
   239fc:	2885883a 	add	r2,r5,r2
   23a00:	d8c00515 	stw	r3,20(sp)
   23a04:	d8800215 	stw	r2,8(sp)
   23a08:	d8800517 	ldw	r2,20(sp)
   23a0c:	0080050e 	bge	zero,r2,23a24 <_dtoa_r+0xaac>
   23a10:	b00b883a 	mov	r5,r22
   23a14:	100d883a 	mov	r6,r2
   23a18:	b809883a 	mov	r4,r23
   23a1c:	0026d400 	call	26d40 <__lshift>
   23a20:	102d883a 	mov	r22,r2
   23a24:	d8800217 	ldw	r2,8(sp)
   23a28:	0080050e 	bge	zero,r2,23a40 <_dtoa_r+0xac8>
   23a2c:	a80b883a 	mov	r5,r21
   23a30:	100d883a 	mov	r6,r2
   23a34:	b809883a 	mov	r4,r23
   23a38:	0026d400 	call	26d40 <__lshift>
   23a3c:	102b883a 	mov	r21,r2
   23a40:	d8800817 	ldw	r2,32(sp)
   23a44:	1001161e 	bne	r2,zero,23ea0 <_dtoa_r+0xf28>
   23a48:	d8800417 	ldw	r2,16(sp)
   23a4c:	0081040e 	bge	zero,r2,23e60 <_dtoa_r+0xee8>
   23a50:	d8800617 	ldw	r2,24(sp)
   23a54:	1000b01e 	bne	r2,zero,23d18 <_dtoa_r+0xda0>
   23a58:	d8800317 	ldw	r2,12(sp)
   23a5c:	10800044 	addi	r2,r2,1
   23a60:	d8800315 	stw	r2,12(sp)
   23a64:	dc800417 	ldw	r18,16(sp)
   23a68:	04400044 	movi	r17,1
   23a6c:	00000706 	br	23a8c <_dtoa_r+0xb14>
   23a70:	b00b883a 	mov	r5,r22
   23a74:	000f883a 	mov	r7,zero
   23a78:	01800284 	movi	r6,10
   23a7c:	b809883a 	mov	r4,r23
   23a80:	00265800 	call	26580 <__multadd>
   23a84:	102d883a 	mov	r22,r2
   23a88:	8c400044 	addi	r17,r17,1
   23a8c:	a80b883a 	mov	r5,r21
   23a90:	b009883a 	mov	r4,r22
   23a94:	0022d580 	call	22d58 <quorem>
   23a98:	10c00c04 	addi	r3,r2,48
   23a9c:	e445883a 	add	r2,fp,r17
   23aa0:	10ffffc5 	stb	r3,-1(r2)
   23aa4:	8cbff216 	blt	r17,r18,23a70 <_dtoa_r+0xaf8>
   23aa8:	d8800417 	ldw	r2,16(sp)
   23aac:	0081510e 	bge	zero,r2,23ff4 <_dtoa_r+0x107c>
   23ab0:	e0a5883a 	add	r18,fp,r2
   23ab4:	0023883a 	mov	r17,zero
   23ab8:	b00b883a 	mov	r5,r22
   23abc:	01800044 	movi	r6,1
   23ac0:	b809883a 	mov	r4,r23
   23ac4:	d8c00115 	stw	r3,4(sp)
   23ac8:	0026d400 	call	26d40 <__lshift>
   23acc:	1009883a 	mov	r4,r2
   23ad0:	a80b883a 	mov	r5,r21
   23ad4:	102d883a 	mov	r22,r2
   23ad8:	0026ec80 	call	26ec8 <__mcmp>
   23adc:	913fffc3 	ldbu	r4,-1(r18)
   23ae0:	00800416 	blt	zero,r2,23af4 <_dtoa_r+0xb7c>
   23ae4:	00014806 	br	24008 <_dtoa_r+0x1090>
   23ae8:	e0c15626 	beq	fp,r3,24044 <_dtoa_r+0x10cc>
   23aec:	193fffc3 	ldbu	r4,-1(r3)
   23af0:	1825883a 	mov	r18,r3
   23af4:	20803fcc 	andi	r2,r4,255
   23af8:	1080201c 	xori	r2,r2,128
   23afc:	10bfe004 	addi	r2,r2,-128
   23b00:	10800e60 	cmpeqi	r2,r2,57
   23b04:	90ffffc4 	addi	r3,r18,-1
   23b08:	103ff71e 	bne	r2,zero,23ae8 <_dtoa_r+0xb70>
   23b0c:	21000044 	addi	r4,r4,1
   23b10:	19000005 	stb	r4,0(r3)
   23b14:	a80b883a 	mov	r5,r21
   23b18:	b809883a 	mov	r4,r23
   23b1c:	002655c0 	call	2655c <_Bfree>
   23b20:	80000826 	beq	r16,zero,23b44 <_dtoa_r+0xbcc>
   23b24:	88000426 	beq	r17,zero,23b38 <_dtoa_r+0xbc0>
   23b28:	8c000326 	beq	r17,r16,23b38 <_dtoa_r+0xbc0>
   23b2c:	880b883a 	mov	r5,r17
   23b30:	b809883a 	mov	r4,r23
   23b34:	002655c0 	call	2655c <_Bfree>
   23b38:	800b883a 	mov	r5,r16
   23b3c:	b809883a 	mov	r4,r23
   23b40:	002655c0 	call	2655c <_Bfree>
   23b44:	b00b883a 	mov	r5,r22
   23b48:	b809883a 	mov	r4,r23
   23b4c:	002655c0 	call	2655c <_Bfree>
   23b50:	d8801f17 	ldw	r2,124(sp)
   23b54:	d8c00317 	ldw	r3,12(sp)
   23b58:	90000005 	stb	zero,0(r18)
   23b5c:	10c00015 	stw	r3,0(r2)
   23b60:	d8802117 	ldw	r2,132(sp)
   23b64:	103d3526 	beq	r2,zero,2303c <_dtoa_r+0xc4>
   23b68:	14800015 	stw	r18,0(r2)
   23b6c:	003d3306 	br	2303c <_dtoa_r+0xc4>
   23b70:	e0bfffc4 	addi	r2,fp,-1
   23b74:	d8000815 	stw	zero,32(sp)
   23b78:	10002616 	blt	r2,zero,23c14 <_dtoa_r+0xc9c>
   23b7c:	d8000515 	stw	zero,20(sp)
   23b80:	d8800217 	ldw	r2,8(sp)
   23b84:	d8c00117 	ldw	r3,4(sp)
   23b88:	dcc00315 	stw	r19,12(sp)
   23b8c:	14c5883a 	add	r2,r2,r19
   23b90:	d8800215 	stw	r2,8(sp)
   23b94:	d8000715 	stw	zero,28(sp)
   23b98:	188002a8 	cmpgeui	r2,r3,10
   23b9c:	103d9d26 	beq	r2,zero,23214 <_dtoa_r+0x29c>
   23ba0:	00800044 	movi	r2,1
   23ba4:	d8800615 	stw	r2,24(sp)
   23ba8:	00bfffc4 	movi	r2,-1
   23bac:	04000044 	movi	r16,1
   23bb0:	d8000115 	stw	zero,4(sp)
   23bb4:	d8800415 	stw	r2,16(sp)
   23bb8:	d8001e15 	stw	zero,120(sp)
   23bbc:	d8800417 	ldw	r2,16(sp)
   23bc0:	b8001115 	stw	zero,68(r23)
   23bc4:	000b883a 	mov	r5,zero
   23bc8:	d8800b15 	stw	r2,44(sp)
   23bcc:	003dae06 	br	23288 <_dtoa_r+0x310>
   23bd0:	188000e0 	cmpeqi	r2,r3,3
   23bd4:	d8000615 	stw	zero,24(sp)
   23bd8:	103eb126 	beq	r2,zero,236a0 <_dtoa_r+0x728>
   23bdc:	d8801e17 	ldw	r2,120(sp)
   23be0:	d8c00317 	ldw	r3,12(sp)
   23be4:	10c5883a 	add	r2,r2,r3
   23be8:	d8800b15 	stw	r2,44(sp)
   23bec:	10800044 	addi	r2,r2,1
   23bf0:	d8800415 	stw	r2,16(sp)
   23bf4:	100d883a 	mov	r6,r2
   23bf8:	00bd9816 	blt	zero,r2,2325c <_dtoa_r+0x2e4>
   23bfc:	01800044 	movi	r6,1
   23c00:	003d9606 	br	2325c <_dtoa_r+0x2e4>
   23c04:	00800044 	movi	r2,1
   23c08:	d8800815 	stw	r2,32(sp)
   23c0c:	e0bfffc4 	addi	r2,fp,-1
   23c10:	103d740e 	bge	r2,zero,231e4 <_dtoa_r+0x26c>
   23c14:	00800044 	movi	r2,1
   23c18:	1705c83a 	sub	r2,r2,fp
   23c1c:	d8800515 	stw	r2,20(sp)
   23c20:	d8000215 	stw	zero,8(sp)
   23c24:	003d7006 	br	231e8 <_dtoa_r+0x270>
   23c28:	9809883a 	mov	r4,r19
   23c2c:	002d6480 	call	2d648 <__floatsidf>
   23c30:	900d883a 	mov	r6,r18
   23c34:	a80f883a 	mov	r7,r21
   23c38:	1009883a 	mov	r4,r2
   23c3c:	180b883a 	mov	r5,r3
   23c40:	002c2380 	call	2c238 <__eqdf2>
   23c44:	103d5426 	beq	r2,zero,23198 <_dtoa_r+0x220>
   23c48:	9cffffc4 	addi	r19,r19,-1
   23c4c:	003d5206 	br	23198 <_dtoa_r+0x220>
   23c50:	070000f4 	movhi	fp,3
   23c54:	e7009304 	addi	fp,fp,588
   23c58:	003cf806 	br	2303c <_dtoa_r+0xc4>
   23c5c:	dd400717 	ldw	r21,28(sp)
   23c60:	dc800517 	ldw	r18,20(sp)
   23c64:	0021883a 	mov	r16,zero
   23c68:	003f2906 	br	23910 <_dtoa_r+0x998>
   23c6c:	00800704 	movi	r2,28
   23c70:	d8c00517 	ldw	r3,20(sp)
   23c74:	90a5883a 	add	r18,r18,r2
   23c78:	1887883a 	add	r3,r3,r2
   23c7c:	d8c00515 	stw	r3,20(sp)
   23c80:	d8c00217 	ldw	r3,8(sp)
   23c84:	1885883a 	add	r2,r3,r2
   23c88:	d8800215 	stw	r2,8(sp)
   23c8c:	003f5e06 	br	23a08 <_dtoa_r+0xa90>
   23c90:	01000804 	movi	r4,32
   23c94:	2089c83a 	sub	r4,r4,r2
   23c98:	a108983a 	sll	r4,r20,r4
   23c9c:	003d0a06 	br	230c8 <_dtoa_r+0x150>
   23ca0:	04000044 	movi	r16,1
   23ca4:	003d6006 	br	23228 <_dtoa_r+0x2b0>
   23ca8:	100b883a 	mov	r5,r2
   23cac:	980d883a 	mov	r6,r19
   23cb0:	b809883a 	mov	r4,r23
   23cb4:	0026c280 	call	26c28 <__pow5mult>
   23cb8:	d8c00117 	ldw	r3,4(sp)
   23cbc:	102b883a 	mov	r21,r2
   23cc0:	18c00090 	cmplti	r3,r3,2
   23cc4:	18014b1e 	bne	r3,zero,241f4 <_dtoa_r+0x127c>
   23cc8:	0023883a 	mov	r17,zero
   23ccc:	a8800417 	ldw	r2,16(r21)
   23cd0:	10800104 	addi	r2,r2,4
   23cd4:	100490ba 	slli	r2,r2,2
   23cd8:	a885883a 	add	r2,r21,r2
   23cdc:	11000017 	ldw	r4,0(r2)
   23ce0:	00268140 	call	26814 <__hi0bits>
   23ce4:	00c00804 	movi	r3,32
   23ce8:	1885c83a 	sub	r2,r3,r2
   23cec:	003f3606 	br	239c8 <_dtoa_r+0xa50>
   23cf0:	800b883a 	mov	r5,r16
   23cf4:	000f883a 	mov	r7,zero
   23cf8:	01800284 	movi	r6,10
   23cfc:	b809883a 	mov	r4,r23
   23d00:	00265800 	call	26580 <__multadd>
   23d04:	1021883a 	mov	r16,r2
   23d08:	d8800b17 	ldw	r2,44(sp)
   23d0c:	00824d0e 	bge	zero,r2,24644 <_dtoa_r+0x16cc>
   23d10:	dcc00315 	stw	r19,12(sp)
   23d14:	d8800415 	stw	r2,16(sp)
   23d18:	0480aa16 	blt	zero,r18,23fc4 <_dtoa_r+0x104c>
   23d1c:	8801701e 	bne	r17,zero,242e0 <_dtoa_r+0x1368>
   23d20:	8027883a 	mov	r19,r16
   23d24:	d9000417 	ldw	r4,16(sp)
   23d28:	e0bfffc4 	addi	r2,fp,-1
   23d2c:	a0c0004c 	andi	r3,r20,1
   23d30:	1105883a 	add	r2,r2,r4
   23d34:	d8800415 	stw	r2,16(sp)
   23d38:	d8800117 	ldw	r2,4(sp)
   23d3c:	d8c00715 	stw	r3,28(sp)
   23d40:	e029883a 	mov	r20,fp
   23d44:	1884b03a 	or	r2,r3,r2
   23d48:	d8800615 	stw	r2,24(sp)
   23d4c:	df000815 	stw	fp,32(sp)
   23d50:	00002906 	br	23df8 <_dtoa_r+0xe80>
   23d54:	b009883a 	mov	r4,r22
   23d58:	0026ec80 	call	26ec8 <__mcmp>
   23d5c:	900b883a 	mov	r5,r18
   23d60:	b809883a 	mov	r4,r23
   23d64:	d8800215 	stw	r2,8(sp)
   23d68:	002655c0 	call	2655c <_Bfree>
   23d6c:	d8800217 	ldw	r2,8(sp)
   23d70:	1000021e 	bne	r2,zero,23d7c <_dtoa_r+0xe04>
   23d74:	d8c00617 	ldw	r3,24(sp)
   23d78:	18022326 	beq	r3,zero,24608 <_dtoa_r+0x1690>
   23d7c:	a4800044 	addi	r18,r20,1
   23d80:	88012216 	blt	r17,zero,2420c <_dtoa_r+0x1294>
   23d84:	d8c00117 	ldw	r3,4(sp)
   23d88:	1c62b03a 	or	r17,r3,r17
   23d8c:	d8c00717 	ldw	r3,28(sp)
   23d90:	1c62b03a 	or	r17,r3,r17
   23d94:	88011d26 	beq	r17,zero,2420c <_dtoa_r+0x1294>
   23d98:	00816b16 	blt	zero,r2,24348 <_dtoa_r+0x13d0>
   23d9c:	d8800417 	ldw	r2,16(sp)
   23da0:	a7000005 	stb	fp,0(r20)
   23da4:	15017126 	beq	r2,r20,2436c <_dtoa_r+0x13f4>
   23da8:	b00b883a 	mov	r5,r22
   23dac:	000f883a 	mov	r7,zero
   23db0:	01800284 	movi	r6,10
   23db4:	b809883a 	mov	r4,r23
   23db8:	00265800 	call	26580 <__multadd>
   23dbc:	102d883a 	mov	r22,r2
   23dc0:	800b883a 	mov	r5,r16
   23dc4:	000f883a 	mov	r7,zero
   23dc8:	01800284 	movi	r6,10
   23dcc:	b809883a 	mov	r4,r23
   23dd0:	84c01f26 	beq	r16,r19,23e50 <_dtoa_r+0xed8>
   23dd4:	00265800 	call	26580 <__multadd>
   23dd8:	980b883a 	mov	r5,r19
   23ddc:	000f883a 	mov	r7,zero
   23de0:	01800284 	movi	r6,10
   23de4:	b809883a 	mov	r4,r23
   23de8:	1021883a 	mov	r16,r2
   23dec:	00265800 	call	26580 <__multadd>
   23df0:	1027883a 	mov	r19,r2
   23df4:	9029883a 	mov	r20,r18
   23df8:	a80b883a 	mov	r5,r21
   23dfc:	b009883a 	mov	r4,r22
   23e00:	0022d580 	call	22d58 <quorem>
   23e04:	800b883a 	mov	r5,r16
   23e08:	b009883a 	mov	r4,r22
   23e0c:	1039883a 	mov	fp,r2
   23e10:	d8800515 	stw	r2,20(sp)
   23e14:	0026ec80 	call	26ec8 <__mcmp>
   23e18:	a80b883a 	mov	r5,r21
   23e1c:	980d883a 	mov	r6,r19
   23e20:	b809883a 	mov	r4,r23
   23e24:	1023883a 	mov	r17,r2
   23e28:	0026f200 	call	26f20 <__mdiff>
   23e2c:	1025883a 	mov	r18,r2
   23e30:	10800317 	ldw	r2,12(r2)
   23e34:	e7000c04 	addi	fp,fp,48
   23e38:	900b883a 	mov	r5,r18
   23e3c:	103fc526 	beq	r2,zero,23d54 <_dtoa_r+0xddc>
   23e40:	b809883a 	mov	r4,r23
   23e44:	002655c0 	call	2655c <_Bfree>
   23e48:	00800044 	movi	r2,1
   23e4c:	003fcb06 	br	23d7c <_dtoa_r+0xe04>
   23e50:	00265800 	call	26580 <__multadd>
   23e54:	1021883a 	mov	r16,r2
   23e58:	1027883a 	mov	r19,r2
   23e5c:	003fe506 	br	23df4 <_dtoa_r+0xe7c>
   23e60:	d8800117 	ldw	r2,4(sp)
   23e64:	108000d0 	cmplti	r2,r2,3
   23e68:	10003c26 	beq	r2,zero,23f5c <_dtoa_r+0xfe4>
   23e6c:	d8800617 	ldw	r2,24(sp)
   23e70:	103fa91e 	bne	r2,zero,23d18 <_dtoa_r+0xda0>
   23e74:	a80b883a 	mov	r5,r21
   23e78:	b009883a 	mov	r4,r22
   23e7c:	0022d580 	call	22d58 <quorem>
   23e80:	10c00c04 	addi	r3,r2,48
   23e84:	d8800317 	ldw	r2,12(sp)
   23e88:	e4800044 	addi	r18,fp,1
   23e8c:	e0c00005 	stb	r3,0(fp)
   23e90:	10800044 	addi	r2,r2,1
   23e94:	d8800315 	stw	r2,12(sp)
   23e98:	0023883a 	mov	r17,zero
   23e9c:	003f0606 	br	23ab8 <_dtoa_r+0xb40>
   23ea0:	a80b883a 	mov	r5,r21
   23ea4:	b009883a 	mov	r4,r22
   23ea8:	0026ec80 	call	26ec8 <__mcmp>
   23eac:	103ee60e 	bge	r2,zero,23a48 <_dtoa_r+0xad0>
   23eb0:	b00b883a 	mov	r5,r22
   23eb4:	000f883a 	mov	r7,zero
   23eb8:	01800284 	movi	r6,10
   23ebc:	b809883a 	mov	r4,r23
   23ec0:	00265800 	call	26580 <__multadd>
   23ec4:	d8c00317 	ldw	r3,12(sp)
   23ec8:	102d883a 	mov	r22,r2
   23ecc:	d8800617 	ldw	r2,24(sp)
   23ed0:	1cffffc4 	addi	r19,r3,-1
   23ed4:	103f861e 	bne	r2,zero,23cf0 <_dtoa_r+0xd78>
   23ed8:	d8800b17 	ldw	r2,44(sp)
   23edc:	0081d40e 	bge	zero,r2,24630 <_dtoa_r+0x16b8>
   23ee0:	d8800415 	stw	r2,16(sp)
   23ee4:	003edf06 	br	23a64 <_dtoa_r+0xaec>
   23ee8:	008000f4 	movhi	r2,3
   23eec:	e7009c04 	addi	fp,fp,624
   23ef0:	10809cc4 	addi	r2,r2,627
   23ef4:	003dd906 	br	2365c <_dtoa_r+0x6e4>
   23ef8:	00800044 	movi	r2,1
   23efc:	d8800615 	stw	r2,24(sp)
   23f00:	003f3606 	br	23bdc <_dtoa_r+0xc64>
   23f04:	a03ead1e 	bne	r20,zero,239bc <_dtoa_r+0xa44>
   23f08:	00800434 	movhi	r2,16
   23f0c:	10bfffc4 	addi	r2,r2,-1
   23f10:	8884703a 	and	r2,r17,r2
   23f14:	103ea91e 	bne	r2,zero,239bc <_dtoa_r+0xa44>
   23f18:	8c5ffc2c 	andhi	r17,r17,32752
   23f1c:	883ea726 	beq	r17,zero,239bc <_dtoa_r+0xa44>
   23f20:	d8800517 	ldw	r2,20(sp)
   23f24:	04400044 	movi	r17,1
   23f28:	10800044 	addi	r2,r2,1
   23f2c:	d8800515 	stw	r2,20(sp)
   23f30:	d8800217 	ldw	r2,8(sp)
   23f34:	10800044 	addi	r2,r2,1
   23f38:	d8800215 	stw	r2,8(sp)
   23f3c:	003ea006 	br	239c0 <_dtoa_r+0xa48>
   23f40:	00800044 	movi	r2,1
   23f44:	d8800415 	stw	r2,16(sp)
   23f48:	d8801e15 	stw	r2,120(sp)
   23f4c:	003f1b06 	br	23bbc <_dtoa_r+0xc44>
   23f50:	d8800b17 	ldw	r2,44(sp)
   23f54:	dcc00315 	stw	r19,12(sp)
   23f58:	d8800415 	stw	r2,16(sp)
   23f5c:	d8800417 	ldw	r2,16(sp)
   23f60:	103dfb1e 	bne	r2,zero,23750 <_dtoa_r+0x7d8>
   23f64:	a80b883a 	mov	r5,r21
   23f68:	b809883a 	mov	r4,r23
   23f6c:	000f883a 	mov	r7,zero
   23f70:	01800144 	movi	r6,5
   23f74:	00265800 	call	26580 <__multadd>
   23f78:	100b883a 	mov	r5,r2
   23f7c:	b009883a 	mov	r4,r22
   23f80:	102b883a 	mov	r21,r2
   23f84:	0026ec80 	call	26ec8 <__mcmp>
   23f88:	00bdf10e 	bge	zero,r2,23750 <_dtoa_r+0x7d8>
   23f8c:	00800c44 	movi	r2,49
   23f90:	e0800005 	stb	r2,0(fp)
   23f94:	d8800317 	ldw	r2,12(sp)
   23f98:	e4800044 	addi	r18,fp,1
   23f9c:	14400044 	addi	r17,r2,1
   23fa0:	a80b883a 	mov	r5,r21
   23fa4:	b809883a 	mov	r4,r23
   23fa8:	002655c0 	call	2655c <_Bfree>
   23fac:	88800044 	addi	r2,r17,1
   23fb0:	d8800315 	stw	r2,12(sp)
   23fb4:	803ee01e 	bne	r16,zero,23b38 <_dtoa_r+0xbc0>
   23fb8:	003ee206 	br	23b44 <_dtoa_r+0xbcc>
   23fbc:	1805883a 	mov	r2,r3
   23fc0:	003e5806 	br	23924 <_dtoa_r+0x9ac>
   23fc4:	800b883a 	mov	r5,r16
   23fc8:	900d883a 	mov	r6,r18
   23fcc:	b809883a 	mov	r4,r23
   23fd0:	0026d400 	call	26d40 <__lshift>
   23fd4:	1021883a 	mov	r16,r2
   23fd8:	003f5006 	br	23d1c <_dtoa_r+0xda4>
   23fdc:	156bc83a 	sub	r21,r2,r21
   23fe0:	003e3e06 	br	238dc <_dtoa_r+0x964>
   23fe4:	dd000a15 	stw	r20,40(sp)
   23fe8:	dc400c15 	stw	r17,48(sp)
   23fec:	04000084 	movi	r16,2
   23ff0:	003cc906 	br	23318 <_dtoa_r+0x3a0>
   23ff4:	00800044 	movi	r2,1
   23ff8:	003ead06 	br	23ab0 <_dtoa_r+0xb38>
   23ffc:	00800044 	movi	r2,1
   24000:	d8800615 	stw	r2,24(sp)
   24004:	003c9006 	br	23248 <_dtoa_r+0x2d0>
   24008:	1000031e 	bne	r2,zero,24018 <_dtoa_r+0x10a0>
   2400c:	d8c00117 	ldw	r3,4(sp)
   24010:	18c0004c 	andi	r3,r3,1
   24014:	183eb71e 	bne	r3,zero,23af4 <_dtoa_r+0xb7c>
   24018:	2005883a 	mov	r2,r4
   2401c:	00000206 	br	24028 <_dtoa_r+0x10b0>
   24020:	90bfff83 	ldbu	r2,-2(r18)
   24024:	1825883a 	mov	r18,r3
   24028:	10803fcc 	andi	r2,r2,255
   2402c:	1080201c 	xori	r2,r2,128
   24030:	10bfe004 	addi	r2,r2,-128
   24034:	10800c18 	cmpnei	r2,r2,48
   24038:	90ffffc4 	addi	r3,r18,-1
   2403c:	103ff826 	beq	r2,zero,24020 <_dtoa_r+0x10a8>
   24040:	003eb406 	br	23b14 <_dtoa_r+0xb9c>
   24044:	00800c44 	movi	r2,49
   24048:	e0800005 	stb	r2,0(fp)
   2404c:	d8800317 	ldw	r2,12(sp)
   24050:	10800044 	addi	r2,r2,1
   24054:	d8800315 	stw	r2,12(sp)
   24058:	003eae06 	br	23b14 <_dtoa_r+0xb9c>
   2405c:	d8c00917 	ldw	r3,36(sp)
   24060:	18011826 	beq	r3,zero,244c4 <_dtoa_r+0x154c>
   24064:	d8c00517 	ldw	r3,20(sp)
   24068:	d9000217 	ldw	r4,8(sp)
   2406c:	10810cc4 	addi	r2,r2,1075
   24070:	dd400717 	ldw	r21,28(sp)
   24074:	2089883a 	add	r4,r4,r2
   24078:	1885883a 	add	r2,r3,r2
   2407c:	1825883a 	mov	r18,r3
   24080:	d9000215 	stw	r4,8(sp)
   24084:	d8800515 	stw	r2,20(sp)
   24088:	003e1d06 	br	23900 <_dtoa_r+0x988>
   2408c:	8009883a 	mov	r4,r16
   24090:	002d6480 	call	2d648 <__floatsidf>
   24094:	d9c00a17 	ldw	r7,40(sp)
   24098:	900d883a 	mov	r6,r18
   2409c:	1009883a 	mov	r4,r2
   240a0:	180b883a 	mov	r5,r3
   240a4:	002c4980 	call	2c498 <__muldf3>
   240a8:	000d883a 	mov	r6,zero
   240ac:	01d00734 	movhi	r7,16412
   240b0:	1009883a 	mov	r4,r2
   240b4:	180b883a 	mov	r5,r3
   240b8:	002af8c0 	call	2af8c <__adddf3>
   240bc:	d8800c15 	stw	r2,48(sp)
   240c0:	00bf3034 	movhi	r2,64704
   240c4:	1885883a 	add	r2,r3,r2
   240c8:	d8800d15 	stw	r2,52(sp)
   240cc:	d9400a17 	ldw	r5,40(sp)
   240d0:	9009883a 	mov	r4,r18
   240d4:	000d883a 	mov	r6,zero
   240d8:	01d00534 	movhi	r7,16404
   240dc:	002cc400 	call	2cc40 <__subdf3>
   240e0:	dd400d17 	ldw	r21,52(sp)
   240e4:	d9800c17 	ldw	r6,48(sp)
   240e8:	1009883a 	mov	r4,r2
   240ec:	a80f883a 	mov	r7,r21
   240f0:	180b883a 	mov	r5,r3
   240f4:	1025883a 	mov	r18,r2
   240f8:	1821883a 	mov	r16,r3
   240fc:	002c2b80 	call	2c2b8 <__gedf2>
   24100:	00812d16 	blt	zero,r2,245b8 <_dtoa_r+0x1640>
   24104:	d9800c17 	ldw	r6,48(sp)
   24108:	a9e0003c 	xorhi	r7,r21,32768
   2410c:	9009883a 	mov	r4,r18
   24110:	800b883a 	mov	r5,r16
   24114:	002c3a80 	call	2c3a8 <__ledf2>
   24118:	103d6e0e 	bge	r2,zero,236d4 <_dtoa_r+0x75c>
   2411c:	002b883a 	mov	r21,zero
   24120:	0021883a 	mov	r16,zero
   24124:	003d8a06 	br	23750 <_dtoa_r+0x7d8>
   24128:	d9800717 	ldw	r6,28(sp)
   2412c:	b00b883a 	mov	r5,r22
   24130:	b809883a 	mov	r4,r23
   24134:	0026c280 	call	26c28 <__pow5mult>
   24138:	102d883a 	mov	r22,r2
   2413c:	003e1706 	br	2399c <_dtoa_r+0xa24>
   24140:	d8800317 	ldw	r2,12(sp)
   24144:	10010d26 	beq	r2,zero,2457c <_dtoa_r+0x1604>
   24148:	00abc83a 	sub	r21,zero,r2
   2414c:	a88003cc 	andi	r2,r21,15
   24150:	100690fa 	slli	r3,r2,3
   24154:	008000f4 	movhi	r2,3
   24158:	1080dc04 	addi	r2,r2,880
   2415c:	10c5883a 	add	r2,r2,r3
   24160:	11800017 	ldw	r6,0(r2)
   24164:	11c00117 	ldw	r7,4(r2)
   24168:	a009883a 	mov	r4,r20
   2416c:	880b883a 	mov	r5,r17
   24170:	a82bd13a 	srai	r21,r21,4
   24174:	002c4980 	call	2c498 <__muldf3>
   24178:	d8c00a15 	stw	r3,40(sp)
   2417c:	1025883a 	mov	r18,r2
   24180:	a8013826 	beq	r21,zero,24664 <_dtoa_r+0x16ec>
   24184:	020000f4 	movhi	r8,3
   24188:	04000084 	movi	r16,2
   2418c:	4200d204 	addi	r8,r8,840
   24190:	180b883a 	mov	r5,r3
   24194:	dc400c15 	stw	r17,48(sp)
   24198:	1009883a 	mov	r4,r2
   2419c:	8023883a 	mov	r17,r16
   241a0:	0007883a 	mov	r3,zero
   241a4:	4021883a 	mov	r16,r8
   241a8:	a980004c 	andi	r6,r21,1
   241ac:	30000726 	beq	r6,zero,241cc <_dtoa_r+0x1254>
   241b0:	81800017 	ldw	r6,0(r16)
   241b4:	81c00117 	ldw	r7,4(r16)
   241b8:	8c400044 	addi	r17,r17,1
   241bc:	002c4980 	call	2c498 <__muldf3>
   241c0:	180b883a 	mov	r5,r3
   241c4:	1009883a 	mov	r4,r2
   241c8:	00c00044 	movi	r3,1
   241cc:	a82bd07a 	srai	r21,r21,1
   241d0:	84000204 	addi	r16,r16,8
   241d4:	a83ff41e 	bne	r21,zero,241a8 <_dtoa_r+0x1230>
   241d8:	18c03fcc 	andi	r3,r3,255
   241dc:	8821883a 	mov	r16,r17
   241e0:	dc400c17 	ldw	r17,48(sp)
   241e4:	183c6526 	beq	r3,zero,2337c <_dtoa_r+0x404>
   241e8:	2025883a 	mov	r18,r4
   241ec:	d9400a15 	stw	r5,40(sp)
   241f0:	003c6206 	br	2337c <_dtoa_r+0x404>
   241f4:	a03eb41e 	bne	r20,zero,23cc8 <_dtoa_r+0xd50>
   241f8:	00800434 	movhi	r2,16
   241fc:	10bfffc4 	addi	r2,r2,-1
   24200:	8884703a 	and	r2,r17,r2
   24204:	103f4426 	beq	r2,zero,23f18 <_dtoa_r+0xfa0>
   24208:	003eaf06 	br	23cc8 <_dtoa_r+0xd50>
   2420c:	d9000317 	ldw	r4,12(sp)
   24210:	e007883a 	mov	r3,fp
   24214:	df000817 	ldw	fp,32(sp)
   24218:	21000044 	addi	r4,r4,1
   2421c:	d9000315 	stw	r4,12(sp)
   24220:	00800f0e 	bge	zero,r2,24260 <_dtoa_r+0x12e8>
   24224:	b00b883a 	mov	r5,r22
   24228:	01800044 	movi	r6,1
   2422c:	b809883a 	mov	r4,r23
   24230:	d8c00115 	stw	r3,4(sp)
   24234:	0026d400 	call	26d40 <__lshift>
   24238:	a80b883a 	mov	r5,r21
   2423c:	1009883a 	mov	r4,r2
   24240:	102d883a 	mov	r22,r2
   24244:	0026ec80 	call	26ec8 <__mcmp>
   24248:	d8c00117 	ldw	r3,4(sp)
   2424c:	0080e40e 	bge	zero,r2,245e0 <_dtoa_r+0x1668>
   24250:	18c00e60 	cmpeqi	r3,r3,57
   24254:	1800d21e 	bne	r3,zero,245a0 <_dtoa_r+0x1628>
   24258:	d8800517 	ldw	r2,20(sp)
   2425c:	10c00c44 	addi	r3,r2,49
   24260:	8023883a 	mov	r17,r16
   24264:	a0c00005 	stb	r3,0(r20)
   24268:	9821883a 	mov	r16,r19
   2426c:	003e2906 	br	23b14 <_dtoa_r+0xb9c>
   24270:	b027883a 	mov	r19,r22
   24274:	ddc00417 	ldw	r23,16(sp)
   24278:	dd800217 	ldw	r22,8(sp)
   2427c:	200d883a 	mov	r6,r4
   24280:	280f883a 	mov	r7,r5
   24284:	002af8c0 	call	2af8c <__adddf3>
   24288:	dd400117 	ldw	r21,4(sp)
   2428c:	180b883a 	mov	r5,r3
   24290:	900f883a 	mov	r7,r18
   24294:	a80d883a 	mov	r6,r21
   24298:	1009883a 	mov	r4,r2
   2429c:	1823883a 	mov	r17,r3
   242a0:	1029883a 	mov	r20,r2
   242a4:	002c2b80 	call	2c2b8 <__gedf2>
   242a8:	d8c00317 	ldw	r3,12(sp)
   242ac:	18c00044 	addi	r3,r3,1
   242b0:	d8c00315 	stw	r3,12(sp)
   242b4:	00bcc716 	blt	zero,r2,235d4 <_dtoa_r+0x65c>
   242b8:	a80d883a 	mov	r6,r21
   242bc:	900f883a 	mov	r7,r18
   242c0:	a009883a 	mov	r4,r20
   242c4:	880b883a 	mov	r5,r17
   242c8:	002c2380 	call	2c238 <__eqdf2>
   242cc:	1000021e 	bne	r2,zero,242d8 <_dtoa_r+0x1360>
   242d0:	9cc0004c 	andi	r19,r19,1
   242d4:	983cbf1e 	bne	r19,zero,235d4 <_dtoa_r+0x65c>
   242d8:	8025883a 	mov	r18,r16
   242dc:	003e1906 	br	23b44 <_dtoa_r+0xbcc>
   242e0:	81400117 	ldw	r5,4(r16)
   242e4:	b809883a 	mov	r4,r23
   242e8:	00264b80 	call	264b8 <_Balloc>
   242ec:	1023883a 	mov	r17,r2
   242f0:	1000e526 	beq	r2,zero,24688 <_dtoa_r+0x1710>
   242f4:	81800417 	ldw	r6,16(r16)
   242f8:	81400304 	addi	r5,r16,12
   242fc:	11000304 	addi	r4,r2,12
   24300:	31800084 	addi	r6,r6,2
   24304:	300c90ba 	slli	r6,r6,2
   24308:	002619c0 	call	2619c <memcpy>
   2430c:	01800044 	movi	r6,1
   24310:	880b883a 	mov	r5,r17
   24314:	b809883a 	mov	r4,r23
   24318:	0026d400 	call	26d40 <__lshift>
   2431c:	1027883a 	mov	r19,r2
   24320:	003e8006 	br	23d24 <_dtoa_r+0xdac>
   24324:	b00b883a 	mov	r5,r22
   24328:	b809883a 	mov	r4,r23
   2432c:	0026c280 	call	26c28 <__pow5mult>
   24330:	102d883a 	mov	r22,r2
   24334:	003d9906 	br	2399c <_dtoa_r+0xa24>
   24338:	d8800517 	ldw	r2,20(sp)
   2433c:	d8c00417 	ldw	r3,16(sp)
   24340:	10e5c83a 	sub	r18,r2,r3
   24344:	003d6e06 	br	23900 <_dtoa_r+0x988>
   24348:	d9000317 	ldw	r4,12(sp)
   2434c:	e007883a 	mov	r3,fp
   24350:	18800e58 	cmpnei	r2,r3,57
   24354:	21000044 	addi	r4,r4,1
   24358:	d9000315 	stw	r4,12(sp)
   2435c:	df000817 	ldw	fp,32(sp)
   24360:	10008f26 	beq	r2,zero,245a0 <_dtoa_r+0x1628>
   24364:	18c00044 	addi	r3,r3,1
   24368:	003fbd06 	br	24260 <_dtoa_r+0x12e8>
   2436c:	d8800317 	ldw	r2,12(sp)
   24370:	e007883a 	mov	r3,fp
   24374:	8023883a 	mov	r17,r16
   24378:	10800044 	addi	r2,r2,1
   2437c:	df000817 	ldw	fp,32(sp)
   24380:	d8800315 	stw	r2,12(sp)
   24384:	9821883a 	mov	r16,r19
   24388:	003dcb06 	br	23ab8 <_dtoa_r+0xb40>
   2438c:	d9000c17 	ldw	r4,48(sp)
   24390:	d9400d17 	ldw	r5,52(sp)
   24394:	600d883a 	mov	r6,r12
   24398:	680f883a 	mov	r7,r13
   2439c:	dac00a15 	stw	r11,40(sp)
   243a0:	002c4980 	call	2c498 <__muldf3>
   243a4:	dac00a17 	ldw	r11,40(sp)
   243a8:	d9400e17 	ldw	r5,56(sp)
   243ac:	d8800a15 	stw	r2,40(sp)
   243b0:	e2c00005 	stb	r11,0(fp)
   243b4:	29000058 	cmpnei	r4,r5,1
   243b8:	d8c00c15 	stw	r3,48(sp)
   243bc:	e145883a 	add	r2,fp,r5
   243c0:	20002126 	beq	r4,zero,24448 <_dtoa_r+0x14d0>
   243c4:	dc400e15 	stw	r17,56(sp)
   243c8:	dcc00d15 	stw	r19,52(sp)
   243cc:	8023883a 	mov	r17,r16
   243d0:	a809883a 	mov	r4,r21
   243d4:	900b883a 	mov	r5,r18
   243d8:	1021883a 	mov	r16,r2
   243dc:	000d883a 	mov	r6,zero
   243e0:	01d00934 	movhi	r7,16420
   243e4:	002c4980 	call	2c498 <__muldf3>
   243e8:	180b883a 	mov	r5,r3
   243ec:	1009883a 	mov	r4,r2
   243f0:	182b883a 	mov	r21,r3
   243f4:	1027883a 	mov	r19,r2
   243f8:	002d5c80 	call	2d5c8 <__fixdfsi>
   243fc:	1009883a 	mov	r4,r2
   24400:	1025883a 	mov	r18,r2
   24404:	002d6480 	call	2d648 <__floatsidf>
   24408:	9809883a 	mov	r4,r19
   2440c:	a80b883a 	mov	r5,r21
   24410:	100d883a 	mov	r6,r2
   24414:	180f883a 	mov	r7,r3
   24418:	8c400044 	addi	r17,r17,1
   2441c:	94800c04 	addi	r18,r18,48
   24420:	002cc400 	call	2cc40 <__subdf3>
   24424:	8cbfffc5 	stb	r18,-1(r17)
   24428:	1009883a 	mov	r4,r2
   2442c:	180b883a 	mov	r5,r3
   24430:	847fea1e 	bne	r16,r17,243dc <_dtoa_r+0x1464>
   24434:	8821883a 	mov	r16,r17
   24438:	dcc00d17 	ldw	r19,52(sp)
   2443c:	dc400e17 	ldw	r17,56(sp)
   24440:	102b883a 	mov	r21,r2
   24444:	1825883a 	mov	r18,r3
   24448:	d9000a17 	ldw	r4,40(sp)
   2444c:	d9400c17 	ldw	r5,48(sp)
   24450:	000d883a 	mov	r6,zero
   24454:	01cff834 	movhi	r7,16352
   24458:	002af8c0 	call	2af8c <__adddf3>
   2445c:	a80d883a 	mov	r6,r21
   24460:	900f883a 	mov	r7,r18
   24464:	1009883a 	mov	r4,r2
   24468:	180b883a 	mov	r5,r3
   2446c:	002c3a80 	call	2c3a8 <__ledf2>
   24470:	103c5316 	blt	r2,zero,235c0 <_dtoa_r+0x648>
   24474:	d9800a17 	ldw	r6,40(sp)
   24478:	d9c00c17 	ldw	r7,48(sp)
   2447c:	0009883a 	mov	r4,zero
   24480:	014ff834 	movhi	r5,16352
   24484:	002cc400 	call	2cc40 <__subdf3>
   24488:	a80d883a 	mov	r6,r21
   2448c:	900f883a 	mov	r7,r18
   24490:	1009883a 	mov	r4,r2
   24494:	180b883a 	mov	r5,r3
   24498:	002c2b80 	call	2c2b8 <__gedf2>
   2449c:	00bc8d0e 	bge	zero,r2,236d4 <_dtoa_r+0x75c>
   244a0:	80bfffc7 	ldb	r2,-1(r16)
   244a4:	8025883a 	mov	r18,r16
   244a8:	843fffc4 	addi	r16,r16,-1
   244ac:	10800c20 	cmpeqi	r2,r2,48
   244b0:	103ffb1e 	bne	r2,zero,244a0 <_dtoa_r+0x1528>
   244b4:	d8801117 	ldw	r2,68(sp)
   244b8:	10800044 	addi	r2,r2,1
   244bc:	d8800315 	stw	r2,12(sp)
   244c0:	003da006 	br	23b44 <_dtoa_r+0xbcc>
   244c4:	d8c01217 	ldw	r3,72(sp)
   244c8:	00800d84 	movi	r2,54
   244cc:	d9000517 	ldw	r4,20(sp)
   244d0:	10c5c83a 	sub	r2,r2,r3
   244d4:	d8c00217 	ldw	r3,8(sp)
   244d8:	dd400717 	ldw	r21,28(sp)
   244dc:	2025883a 	mov	r18,r4
   244e0:	1887883a 	add	r3,r3,r2
   244e4:	2085883a 	add	r2,r4,r2
   244e8:	d8c00215 	stw	r3,8(sp)
   244ec:	d8800515 	stw	r2,20(sp)
   244f0:	003d0306 	br	23900 <_dtoa_r+0x988>
   244f4:	d8800417 	ldw	r2,16(sp)
   244f8:	103ee426 	beq	r2,zero,2408c <_dtoa_r+0x1114>
   244fc:	d8800b17 	ldw	r2,44(sp)
   24500:	00bc740e 	bge	zero,r2,236d4 <_dtoa_r+0x75c>
   24504:	a80b883a 	mov	r5,r21
   24508:	9009883a 	mov	r4,r18
   2450c:	000d883a 	mov	r6,zero
   24510:	01d00934 	movhi	r7,16420
   24514:	002c4980 	call	2c498 <__muldf3>
   24518:	81000044 	addi	r4,r16,1
   2451c:	1025883a 	mov	r18,r2
   24520:	182b883a 	mov	r21,r3
   24524:	d8c00a15 	stw	r3,40(sp)
   24528:	002d6480 	call	2d648 <__floatsidf>
   2452c:	900d883a 	mov	r6,r18
   24530:	a80f883a 	mov	r7,r21
   24534:	1009883a 	mov	r4,r2
   24538:	180b883a 	mov	r5,r3
   2453c:	002c4980 	call	2c498 <__muldf3>
   24540:	1009883a 	mov	r4,r2
   24544:	000d883a 	mov	r6,zero
   24548:	01d00734 	movhi	r7,16412
   2454c:	180b883a 	mov	r5,r3
   24550:	002af8c0 	call	2af8c <__adddf3>
   24554:	d9000317 	ldw	r4,12(sp)
   24558:	d8800c15 	stw	r2,48(sp)
   2455c:	00bf3034 	movhi	r2,64704
   24560:	1887883a 	add	r3,r3,r2
   24564:	d8800b17 	ldw	r2,44(sp)
   24568:	213fffc4 	addi	r4,r4,-1
   2456c:	d9001115 	stw	r4,68(sp)
   24570:	d8c00d15 	stw	r3,52(sp)
   24574:	d8800e15 	stw	r2,56(sp)
   24578:	003b9f06 	br	233f8 <_dtoa_r+0x480>
   2457c:	a025883a 	mov	r18,r20
   24580:	dc400a15 	stw	r17,40(sp)
   24584:	04000084 	movi	r16,2
   24588:	003b7c06 	br	2337c <_dtoa_r+0x404>
   2458c:	d8800317 	ldw	r2,12(sp)
   24590:	00c00c44 	movi	r3,49
   24594:	10800044 	addi	r2,r2,1
   24598:	d8800315 	stw	r2,12(sp)
   2459c:	003c1606 	br	235f8 <_dtoa_r+0x680>
   245a0:	00800e44 	movi	r2,57
   245a4:	8023883a 	mov	r17,r16
   245a8:	a0800005 	stb	r2,0(r20)
   245ac:	9821883a 	mov	r16,r19
   245b0:	01000e44 	movi	r4,57
   245b4:	003d4f06 	br	23af4 <_dtoa_r+0xb7c>
   245b8:	002b883a 	mov	r21,zero
   245bc:	0021883a 	mov	r16,zero
   245c0:	003e7206 	br	23f8c <_dtoa_r+0x1014>
   245c4:	dd800d17 	ldw	r22,52(sp)
   245c8:	ddc00e17 	ldw	r23,56(sp)
   245cc:	d8801117 	ldw	r2,68(sp)
   245d0:	8025883a 	mov	r18,r16
   245d4:	10800044 	addi	r2,r2,1
   245d8:	d8800315 	stw	r2,12(sp)
   245dc:	003d5906 	br	23b44 <_dtoa_r+0xbcc>
   245e0:	103f1f1e 	bne	r2,zero,24260 <_dtoa_r+0x12e8>
   245e4:	1880004c 	andi	r2,r3,1
   245e8:	103f191e 	bne	r2,zero,24250 <_dtoa_r+0x12d8>
   245ec:	003f1c06 	br	24260 <_dtoa_r+0x12e8>
   245f0:	dcc00f17 	ldw	r19,60(sp)
   245f4:	dd800d17 	ldw	r22,52(sp)
   245f8:	ddc00e17 	ldw	r23,56(sp)
   245fc:	dc400c17 	ldw	r17,48(sp)
   24600:	dd000a17 	ldw	r20,40(sp)
   24604:	003c3306 	br	236d4 <_dtoa_r+0x75c>
   24608:	d9000317 	ldw	r4,12(sp)
   2460c:	e007883a 	mov	r3,fp
   24610:	18800e60 	cmpeqi	r2,r3,57
   24614:	21000044 	addi	r4,r4,1
   24618:	d9000315 	stw	r4,12(sp)
   2461c:	df000817 	ldw	fp,32(sp)
   24620:	a4800044 	addi	r18,r20,1
   24624:	103fde1e 	bne	r2,zero,245a0 <_dtoa_r+0x1628>
   24628:	047f0b16 	blt	zero,r17,24258 <_dtoa_r+0x12e0>
   2462c:	003f0c06 	br	24260 <_dtoa_r+0x12e8>
   24630:	d8800117 	ldw	r2,4(sp)
   24634:	108000c8 	cmpgei	r2,r2,3
   24638:	103e451e 	bne	r2,zero,23f50 <_dtoa_r+0xfd8>
   2463c:	dcc00315 	stw	r19,12(sp)
   24640:	003e0c06 	br	23e74 <_dtoa_r+0xefc>
   24644:	d8800117 	ldw	r2,4(sp)
   24648:	108000c8 	cmpgei	r2,r2,3
   2464c:	103e401e 	bne	r2,zero,23f50 <_dtoa_r+0xfd8>
   24650:	d8800b17 	ldw	r2,44(sp)
   24654:	dcc00315 	stw	r19,12(sp)
   24658:	d8800415 	stw	r2,16(sp)
   2465c:	04bdaf0e 	bge	zero,r18,23d1c <_dtoa_r+0xda4>
   24660:	003e5806 	br	23fc4 <_dtoa_r+0x104c>
   24664:	04000084 	movi	r16,2
   24668:	003b4406 	br	2337c <_dtoa_r+0x404>
   2466c:	01c000f4 	movhi	r7,3
   24670:	010000f4 	movhi	r4,3
   24674:	39c0a004 	addi	r7,r7,640
   24678:	000d883a 	mov	r6,zero
   2467c:	01406a84 	movi	r5,426
   24680:	2100a504 	addi	r4,r4,660
   24684:	00295b00 	call	295b0 <__assert_func>
   24688:	01c000f4 	movhi	r7,3
   2468c:	010000f4 	movhi	r4,3
   24690:	39c0a004 	addi	r7,r7,640
   24694:	000d883a 	mov	r6,zero
   24698:	0140ba84 	movi	r5,746
   2469c:	2100a504 	addi	r4,r4,660
   246a0:	00295b00 	call	295b0 <__assert_func>
   246a4:	e7009d04 	addi	fp,fp,628
   246a8:	003a6406 	br	2303c <_dtoa_r+0xc4>
   246ac:	18c00120 	cmpeqi	r3,r3,4
   246b0:	183cd51e 	bne	r3,zero,23a08 <_dtoa_r+0xa90>
   246b4:	00c00f04 	movi	r3,60
   246b8:	1885c83a 	sub	r2,r3,r2
   246bc:	003d6c06 	br	23c70 <_dtoa_r+0xcf8>
   246c0:	000b883a 	mov	r5,zero
   246c4:	003af006 	br	23288 <_dtoa_r+0x310>

000246c8 <__sflush_r>:
   246c8:	2880030b 	ldhu	r2,12(r5)
   246cc:	defffb04 	addi	sp,sp,-20
   246d0:	dcc00315 	stw	r19,12(sp)
   246d4:	dc000015 	stw	r16,0(sp)
   246d8:	dfc00415 	stw	ra,16(sp)
   246dc:	dc800215 	stw	r18,8(sp)
   246e0:	dc400115 	stw	r17,4(sp)
   246e4:	10c0020c 	andi	r3,r2,8
   246e8:	2821883a 	mov	r16,r5
   246ec:	2027883a 	mov	r19,r4
   246f0:	18003f1e 	bne	r3,zero,247f0 <__sflush_r+0x128>
   246f4:	28c00117 	ldw	r3,4(r5)
   246f8:	10820014 	ori	r2,r2,2048
   246fc:	2880030d 	sth	r2,12(r5)
   24700:	00c0550e 	bge	zero,r3,24858 <__sflush_r+0x190>
   24704:	82000a17 	ldw	r8,40(r16)
   24708:	40003126 	beq	r8,zero,247d0 <__sflush_r+0x108>
   2470c:	9c400017 	ldw	r17,0(r19)
   24710:	1104000c 	andi	r4,r2,4096
   24714:	98000015 	stw	zero,0(r19)
   24718:	81400717 	ldw	r5,28(r16)
   2471c:	1007883a 	mov	r3,r2
   24720:	2000521e 	bne	r4,zero,2486c <__sflush_r+0x1a4>
   24724:	01c00044 	movi	r7,1
   24728:	000d883a 	mov	r6,zero
   2472c:	9809883a 	mov	r4,r19
   24730:	403ee83a 	callr	r8
   24734:	10ffffd8 	cmpnei	r3,r2,-1
   24738:	18005826 	beq	r3,zero,2489c <__sflush_r+0x1d4>
   2473c:	80c0030b 	ldhu	r3,12(r16)
   24740:	82000a17 	ldw	r8,40(r16)
   24744:	81400717 	ldw	r5,28(r16)
   24748:	18c0010c 	andi	r3,r3,4
   2474c:	18000626 	beq	r3,zero,24768 <__sflush_r+0xa0>
   24750:	81000117 	ldw	r4,4(r16)
   24754:	80c00c17 	ldw	r3,48(r16)
   24758:	1105c83a 	sub	r2,r2,r4
   2475c:	18000226 	beq	r3,zero,24768 <__sflush_r+0xa0>
   24760:	80c00f17 	ldw	r3,60(r16)
   24764:	10c5c83a 	sub	r2,r2,r3
   24768:	100d883a 	mov	r6,r2
   2476c:	000f883a 	mov	r7,zero
   24770:	9809883a 	mov	r4,r19
   24774:	403ee83a 	callr	r8
   24778:	10ffffd8 	cmpnei	r3,r2,-1
   2477c:	18003d1e 	bne	r3,zero,24874 <__sflush_r+0x1ac>
   24780:	99000017 	ldw	r4,0(r19)
   24784:	80c0030b 	ldhu	r3,12(r16)
   24788:	20004e26 	beq	r4,zero,248c4 <__sflush_r+0x1fc>
   2478c:	21400760 	cmpeqi	r5,r4,29
   24790:	2800021e 	bne	r5,zero,2479c <__sflush_r+0xd4>
   24794:	210005a0 	cmpeqi	r4,r4,22
   24798:	20002c26 	beq	r4,zero,2484c <__sflush_r+0x184>
   2479c:	80800417 	ldw	r2,16(r16)
   247a0:	18fdffcc 	andi	r3,r3,63487
   247a4:	80c0030d 	sth	r3,12(r16)
   247a8:	80000115 	stw	zero,4(r16)
   247ac:	80800015 	stw	r2,0(r16)
   247b0:	81400c17 	ldw	r5,48(r16)
   247b4:	9c400015 	stw	r17,0(r19)
   247b8:	28000526 	beq	r5,zero,247d0 <__sflush_r+0x108>
   247bc:	80801004 	addi	r2,r16,64
   247c0:	28800226 	beq	r5,r2,247cc <__sflush_r+0x104>
   247c4:	9809883a 	mov	r4,r19
   247c8:	0024de80 	call	24de8 <_free_r>
   247cc:	80000c15 	stw	zero,48(r16)
   247d0:	0005883a 	mov	r2,zero
   247d4:	dfc00417 	ldw	ra,16(sp)
   247d8:	dcc00317 	ldw	r19,12(sp)
   247dc:	dc800217 	ldw	r18,8(sp)
   247e0:	dc400117 	ldw	r17,4(sp)
   247e4:	dc000017 	ldw	r16,0(sp)
   247e8:	dec00504 	addi	sp,sp,20
   247ec:	f800283a 	ret
   247f0:	2c800417 	ldw	r18,16(r5)
   247f4:	903ff626 	beq	r18,zero,247d0 <__sflush_r+0x108>
   247f8:	2c400017 	ldw	r17,0(r5)
   247fc:	108000cc 	andi	r2,r2,3
   24800:	2c800015 	stw	r18,0(r5)
   24804:	8ca3c83a 	sub	r17,r17,r18
   24808:	1000161e 	bne	r2,zero,24864 <__sflush_r+0x19c>
   2480c:	28800517 	ldw	r2,20(r5)
   24810:	80800215 	stw	r2,8(r16)
   24814:	04400316 	blt	zero,r17,24824 <__sflush_r+0x15c>
   24818:	003fed06 	br	247d0 <__sflush_r+0x108>
   2481c:	90a5883a 	add	r18,r18,r2
   24820:	047feb0e 	bge	zero,r17,247d0 <__sflush_r+0x108>
   24824:	80800917 	ldw	r2,36(r16)
   24828:	81400717 	ldw	r5,28(r16)
   2482c:	880f883a 	mov	r7,r17
   24830:	900d883a 	mov	r6,r18
   24834:	9809883a 	mov	r4,r19
   24838:	103ee83a 	callr	r2
   2483c:	88a3c83a 	sub	r17,r17,r2
   24840:	00bff616 	blt	zero,r2,2481c <__sflush_r+0x154>
   24844:	80c0030b 	ldhu	r3,12(r16)
   24848:	00bfffc4 	movi	r2,-1
   2484c:	18c01014 	ori	r3,r3,64
   24850:	80c0030d 	sth	r3,12(r16)
   24854:	003fdf06 	br	247d4 <__sflush_r+0x10c>
   24858:	28c00f17 	ldw	r3,60(r5)
   2485c:	00ffa916 	blt	zero,r3,24704 <__sflush_r+0x3c>
   24860:	003fdb06 	br	247d0 <__sflush_r+0x108>
   24864:	0005883a 	mov	r2,zero
   24868:	003fe906 	br	24810 <__sflush_r+0x148>
   2486c:	80801417 	ldw	r2,80(r16)
   24870:	003fb506 	br	24748 <__sflush_r+0x80>
   24874:	80c0030b 	ldhu	r3,12(r16)
   24878:	81000417 	ldw	r4,16(r16)
   2487c:	80000115 	stw	zero,4(r16)
   24880:	197dffcc 	andi	r5,r3,63487
   24884:	8140030d 	sth	r5,12(r16)
   24888:	81000015 	stw	r4,0(r16)
   2488c:	18c4000c 	andi	r3,r3,4096
   24890:	183fc726 	beq	r3,zero,247b0 <__sflush_r+0xe8>
   24894:	80801415 	stw	r2,80(r16)
   24898:	003fc506 	br	247b0 <__sflush_r+0xe8>
   2489c:	98c00017 	ldw	r3,0(r19)
   248a0:	183fa626 	beq	r3,zero,2473c <__sflush_r+0x74>
   248a4:	19000760 	cmpeqi	r4,r3,29
   248a8:	20000e1e 	bne	r4,zero,248e4 <__sflush_r+0x21c>
   248ac:	18c00598 	cmpnei	r3,r3,22
   248b0:	18000c26 	beq	r3,zero,248e4 <__sflush_r+0x21c>
   248b4:	80c0030b 	ldhu	r3,12(r16)
   248b8:	18c01014 	ori	r3,r3,64
   248bc:	80c0030d 	sth	r3,12(r16)
   248c0:	003fc406 	br	247d4 <__sflush_r+0x10c>
   248c4:	81000417 	ldw	r4,16(r16)
   248c8:	197dffcc 	andi	r5,r3,63487
   248cc:	8140030d 	sth	r5,12(r16)
   248d0:	80000115 	stw	zero,4(r16)
   248d4:	81000015 	stw	r4,0(r16)
   248d8:	18c4000c 	andi	r3,r3,4096
   248dc:	183fb426 	beq	r3,zero,247b0 <__sflush_r+0xe8>
   248e0:	003fec06 	br	24894 <__sflush_r+0x1cc>
   248e4:	9c400015 	stw	r17,0(r19)
   248e8:	0005883a 	mov	r2,zero
   248ec:	003fb906 	br	247d4 <__sflush_r+0x10c>

000248f0 <_fflush_r>:
   248f0:	defffd04 	addi	sp,sp,-12
   248f4:	dc000115 	stw	r16,4(sp)
   248f8:	dfc00215 	stw	ra,8(sp)
   248fc:	2021883a 	mov	r16,r4
   24900:	20000226 	beq	r4,zero,2490c <_fflush_r+0x1c>
   24904:	20800e17 	ldw	r2,56(r4)
   24908:	10000726 	beq	r2,zero,24928 <_fflush_r+0x38>
   2490c:	2880030f 	ldh	r2,12(r5)
   24910:	10000a1e 	bne	r2,zero,2493c <_fflush_r+0x4c>
   24914:	0005883a 	mov	r2,zero
   24918:	dfc00217 	ldw	ra,8(sp)
   2491c:	dc000117 	ldw	r16,4(sp)
   24920:	dec00304 	addi	sp,sp,12
   24924:	f800283a 	ret
   24928:	d9400015 	stw	r5,0(sp)
   2492c:	0024c840 	call	24c84 <__sinit>
   24930:	d9400017 	ldw	r5,0(sp)
   24934:	2880030f 	ldh	r2,12(r5)
   24938:	103ff626 	beq	r2,zero,24914 <_fflush_r+0x24>
   2493c:	8009883a 	mov	r4,r16
   24940:	dfc00217 	ldw	ra,8(sp)
   24944:	dc000117 	ldw	r16,4(sp)
   24948:	dec00304 	addi	sp,sp,12
   2494c:	00246c81 	jmpi	246c8 <__sflush_r>

00024950 <fflush>:
   24950:	200b883a 	mov	r5,r4
   24954:	20000326 	beq	r4,zero,24964 <fflush+0x14>
   24958:	008000f4 	movhi	r2,3
   2495c:	11091917 	ldw	r4,9316(r2)
   24960:	00248f01 	jmpi	248f0 <_fflush_r>
   24964:	008000f4 	movhi	r2,3
   24968:	11091817 	ldw	r4,9312(r2)
   2496c:	014000b4 	movhi	r5,2
   24970:	29523c04 	addi	r5,r5,18672
   24974:	00256481 	jmpi	25648 <_fwalk_reent>

00024978 <__fp_lock>:
   24978:	0005883a 	mov	r2,zero
   2497c:	f800283a 	ret

00024980 <_cleanup_r>:
   24980:	014000f4 	movhi	r5,3
   24984:	2965bb04 	addi	r5,r5,-26900
   24988:	00256481 	jmpi	25648 <_fwalk_reent>

0002498c <__sinit.part.0>:
   2498c:	00c000b4 	movhi	r3,2
   24990:	20800117 	ldw	r2,4(r4)
   24994:	18d26004 	addi	r3,r3,18816
   24998:	20c00f15 	stw	r3,60(r4)
   2499c:	2140bb04 	addi	r5,r4,748
   249a0:	00c000c4 	movi	r3,3
   249a4:	20c0b915 	stw	r3,740(r4)
   249a8:	2140ba15 	stw	r5,744(r4)
   249ac:	2000b815 	stw	zero,736(r4)
   249b0:	10001705 	stb	zero,92(r2)
   249b4:	10001745 	stb	zero,93(r2)
   249b8:	10001785 	stb	zero,94(r2)
   249bc:	100017c5 	stb	zero,95(r2)
   249c0:	10001805 	stb	zero,96(r2)
   249c4:	10001845 	stb	zero,97(r2)
   249c8:	10001885 	stb	zero,98(r2)
   249cc:	100018c5 	stb	zero,99(r2)
   249d0:	00c00104 	movi	r3,4
   249d4:	10c00315 	stw	r3,12(r2)
   249d8:	020000b4 	movhi	r8,2
   249dc:	20c00217 	ldw	r3,8(r4)
   249e0:	01c000b4 	movhi	r7,2
   249e4:	018000b4 	movhi	r6,2
   249e8:	014000b4 	movhi	r5,2
   249ec:	421f5604 	addi	r8,r8,32088
   249f0:	39df6d04 	addi	r7,r7,32180
   249f4:	319f8d04 	addi	r6,r6,32308
   249f8:	295fa404 	addi	r5,r5,32400
   249fc:	02400074 	movhi	r9,1
   24a00:	10001915 	stw	zero,100(r2)
   24a04:	10000015 	stw	zero,0(r2)
   24a08:	10000115 	stw	zero,4(r2)
   24a0c:	10000215 	stw	zero,8(r2)
   24a10:	10000415 	stw	zero,16(r2)
   24a14:	10000515 	stw	zero,20(r2)
   24a18:	10000615 	stw	zero,24(r2)
   24a1c:	10800715 	stw	r2,28(r2)
   24a20:	12000815 	stw	r8,32(r2)
   24a24:	11c00915 	stw	r7,36(r2)
   24a28:	11800a15 	stw	r6,40(r2)
   24a2c:	11400b15 	stw	r5,44(r2)
   24a30:	4a400284 	addi	r9,r9,10
   24a34:	1a400315 	stw	r9,12(r3)
   24a38:	18001915 	stw	zero,100(r3)
   24a3c:	18000015 	stw	zero,0(r3)
   24a40:	18000115 	stw	zero,4(r3)
   24a44:	18000215 	stw	zero,8(r3)
   24a48:	18000415 	stw	zero,16(r3)
   24a4c:	18001705 	stb	zero,92(r3)
   24a50:	18001745 	stb	zero,93(r3)
   24a54:	18001785 	stb	zero,94(r3)
   24a58:	180017c5 	stb	zero,95(r3)
   24a5c:	18001805 	stb	zero,96(r3)
   24a60:	18001845 	stb	zero,97(r3)
   24a64:	18001885 	stb	zero,98(r3)
   24a68:	180018c5 	stb	zero,99(r3)
   24a6c:	20800317 	ldw	r2,12(r4)
   24a70:	024000b4 	movhi	r9,2
   24a74:	18000515 	stw	zero,20(r3)
   24a78:	18000615 	stw	zero,24(r3)
   24a7c:	18c00715 	stw	r3,28(r3)
   24a80:	1a000815 	stw	r8,32(r3)
   24a84:	19c00915 	stw	r7,36(r3)
   24a88:	19800a15 	stw	r6,40(r3)
   24a8c:	19400b15 	stw	r5,44(r3)
   24a90:	4a400484 	addi	r9,r9,18
   24a94:	10001915 	stw	zero,100(r2)
   24a98:	10000015 	stw	zero,0(r2)
   24a9c:	10000115 	stw	zero,4(r2)
   24aa0:	10000215 	stw	zero,8(r2)
   24aa4:	12400315 	stw	r9,12(r2)
   24aa8:	10000415 	stw	zero,16(r2)
   24aac:	10000515 	stw	zero,20(r2)
   24ab0:	10000615 	stw	zero,24(r2)
   24ab4:	10001705 	stb	zero,92(r2)
   24ab8:	10001745 	stb	zero,93(r2)
   24abc:	10001785 	stb	zero,94(r2)
   24ac0:	100017c5 	stb	zero,95(r2)
   24ac4:	10001805 	stb	zero,96(r2)
   24ac8:	10001845 	stb	zero,97(r2)
   24acc:	10001885 	stb	zero,98(r2)
   24ad0:	100018c5 	stb	zero,99(r2)
   24ad4:	10800715 	stw	r2,28(r2)
   24ad8:	12000815 	stw	r8,32(r2)
   24adc:	11c00915 	stw	r7,36(r2)
   24ae0:	11800a15 	stw	r6,40(r2)
   24ae4:	11400b15 	stw	r5,44(r2)
   24ae8:	00800044 	movi	r2,1
   24aec:	20800e15 	stw	r2,56(r4)
   24af0:	f800283a 	ret

00024af4 <__fp_unlock>:
   24af4:	0005883a 	mov	r2,zero
   24af8:	f800283a 	ret

00024afc <__sfmoreglue>:
   24afc:	defffc04 	addi	sp,sp,-16
   24b00:	dc800215 	stw	r18,8(sp)
   24b04:	2825883a 	mov	r18,r5
   24b08:	dc000015 	stw	r16,0(sp)
   24b0c:	01401a04 	movi	r5,104
   24b10:	2021883a 	mov	r16,r4
   24b14:	913fffc4 	addi	r4,r18,-1
   24b18:	dfc00315 	stw	ra,12(sp)
   24b1c:	dc400115 	stw	r17,4(sp)
   24b20:	002af640 	call	2af64 <__mulsi3>
   24b24:	8009883a 	mov	r4,r16
   24b28:	11401d04 	addi	r5,r2,116
   24b2c:	1023883a 	mov	r17,r2
   24b30:	00258e80 	call	258e8 <_malloc_r>
   24b34:	1021883a 	mov	r16,r2
   24b38:	10000726 	beq	r2,zero,24b58 <__sfmoreglue+0x5c>
   24b3c:	11000304 	addi	r4,r2,12
   24b40:	10000015 	stw	zero,0(r2)
   24b44:	14800115 	stw	r18,4(r2)
   24b48:	11000215 	stw	r4,8(r2)
   24b4c:	89801a04 	addi	r6,r17,104
   24b50:	000b883a 	mov	r5,zero
   24b54:	00263c80 	call	263c8 <memset>
   24b58:	8005883a 	mov	r2,r16
   24b5c:	dfc00317 	ldw	ra,12(sp)
   24b60:	dc800217 	ldw	r18,8(sp)
   24b64:	dc400117 	ldw	r17,4(sp)
   24b68:	dc000017 	ldw	r16,0(sp)
   24b6c:	dec00404 	addi	sp,sp,16
   24b70:	f800283a 	ret

00024b74 <__sfp>:
   24b74:	defffd04 	addi	sp,sp,-12
   24b78:	008000f4 	movhi	r2,3
   24b7c:	dc000015 	stw	r16,0(sp)
   24b80:	14091817 	ldw	r16,9312(r2)
   24b84:	dc400115 	stw	r17,4(sp)
   24b88:	dfc00215 	stw	ra,8(sp)
   24b8c:	80800e17 	ldw	r2,56(r16)
   24b90:	2023883a 	mov	r17,r4
   24b94:	10002b26 	beq	r2,zero,24c44 <__sfp+0xd0>
   24b98:	8400b804 	addi	r16,r16,736
   24b9c:	80c00117 	ldw	r3,4(r16)
   24ba0:	80800217 	ldw	r2,8(r16)
   24ba4:	18ffffc4 	addi	r3,r3,-1
   24ba8:	1800030e 	bge	r3,zero,24bb8 <__sfp+0x44>
   24bac:	00002106 	br	24c34 <__sfp+0xc0>
   24bb0:	10801a04 	addi	r2,r2,104
   24bb4:	30001f26 	beq	r6,zero,24c34 <__sfp+0xc0>
   24bb8:	1140030f 	ldh	r5,12(r2)
   24bbc:	18ffffc4 	addi	r3,r3,-1
   24bc0:	19bfffd8 	cmpnei	r6,r3,-1
   24bc4:	283ffa1e 	bne	r5,zero,24bb0 <__sfp+0x3c>
   24bc8:	00fffff4 	movhi	r3,65535
   24bcc:	18c00044 	addi	r3,r3,1
   24bd0:	10001915 	stw	zero,100(r2)
   24bd4:	10000015 	stw	zero,0(r2)
   24bd8:	10000115 	stw	zero,4(r2)
   24bdc:	10000215 	stw	zero,8(r2)
   24be0:	10c00315 	stw	r3,12(r2)
   24be4:	10000415 	stw	zero,16(r2)
   24be8:	10000515 	stw	zero,20(r2)
   24bec:	10000615 	stw	zero,24(r2)
   24bf0:	10001705 	stb	zero,92(r2)
   24bf4:	10001745 	stb	zero,93(r2)
   24bf8:	10001785 	stb	zero,94(r2)
   24bfc:	100017c5 	stb	zero,95(r2)
   24c00:	10001805 	stb	zero,96(r2)
   24c04:	10001845 	stb	zero,97(r2)
   24c08:	10001885 	stb	zero,98(r2)
   24c0c:	100018c5 	stb	zero,99(r2)
   24c10:	10000c15 	stw	zero,48(r2)
   24c14:	10000d15 	stw	zero,52(r2)
   24c18:	10001115 	stw	zero,68(r2)
   24c1c:	10001215 	stw	zero,72(r2)
   24c20:	dfc00217 	ldw	ra,8(sp)
   24c24:	dc400117 	ldw	r17,4(sp)
   24c28:	dc000017 	ldw	r16,0(sp)
   24c2c:	dec00304 	addi	sp,sp,12
   24c30:	f800283a 	ret
   24c34:	80800017 	ldw	r2,0(r16)
   24c38:	10000526 	beq	r2,zero,24c50 <__sfp+0xdc>
   24c3c:	1021883a 	mov	r16,r2
   24c40:	003fd606 	br	24b9c <__sfp+0x28>
   24c44:	8009883a 	mov	r4,r16
   24c48:	002498c0 	call	2498c <__sinit.part.0>
   24c4c:	003fd206 	br	24b98 <__sfp+0x24>
   24c50:	01400104 	movi	r5,4
   24c54:	8809883a 	mov	r4,r17
   24c58:	0024afc0 	call	24afc <__sfmoreglue>
   24c5c:	80800015 	stw	r2,0(r16)
   24c60:	103ff61e 	bne	r2,zero,24c3c <__sfp+0xc8>
   24c64:	00c00304 	movi	r3,12
   24c68:	88c00015 	stw	r3,0(r17)
   24c6c:	003fec06 	br	24c20 <__sfp+0xac>

00024c70 <_cleanup>:
   24c70:	008000f4 	movhi	r2,3
   24c74:	11091817 	ldw	r4,9312(r2)
   24c78:	014000f4 	movhi	r5,3
   24c7c:	2965bb04 	addi	r5,r5,-26900
   24c80:	00256481 	jmpi	25648 <_fwalk_reent>

00024c84 <__sinit>:
   24c84:	20800e17 	ldw	r2,56(r4)
   24c88:	10000126 	beq	r2,zero,24c90 <__sinit+0xc>
   24c8c:	f800283a 	ret
   24c90:	002498c1 	jmpi	2498c <__sinit.part.0>

00024c94 <__sfp_lock_acquire>:
   24c94:	f800283a 	ret

00024c98 <__sfp_lock_release>:
   24c98:	f800283a 	ret

00024c9c <__sinit_lock_acquire>:
   24c9c:	f800283a 	ret

00024ca0 <__sinit_lock_release>:
   24ca0:	f800283a 	ret

00024ca4 <__fp_lock_all>:
   24ca4:	008000f4 	movhi	r2,3
   24ca8:	11091917 	ldw	r4,9316(r2)
   24cac:	014000b4 	movhi	r5,2
   24cb0:	29525e04 	addi	r5,r5,18808
   24cb4:	00255b01 	jmpi	255b0 <_fwalk>

00024cb8 <__fp_unlock_all>:
   24cb8:	008000f4 	movhi	r2,3
   24cbc:	11091917 	ldw	r4,9316(r2)
   24cc0:	014000b4 	movhi	r5,2
   24cc4:	2952bd04 	addi	r5,r5,19188
   24cc8:	00255b01 	jmpi	255b0 <_fwalk>

00024ccc <_malloc_trim_r>:
   24ccc:	defffb04 	addi	sp,sp,-20
   24cd0:	dcc00315 	stw	r19,12(sp)
   24cd4:	04c000f4 	movhi	r19,3
   24cd8:	dc800215 	stw	r18,8(sp)
   24cdc:	dc400115 	stw	r17,4(sp)
   24ce0:	dc000015 	stw	r16,0(sp)
   24ce4:	dfc00415 	stw	ra,16(sp)
   24ce8:	2821883a 	mov	r16,r5
   24cec:	9cc32904 	addi	r19,r19,3236
   24cf0:	2025883a 	mov	r18,r4
   24cf4:	002df540 	call	2df54 <__malloc_lock>
   24cf8:	98800217 	ldw	r2,8(r19)
   24cfc:	14400117 	ldw	r17,4(r2)
   24d00:	00bfff04 	movi	r2,-4
   24d04:	88a2703a 	and	r17,r17,r2
   24d08:	8c21c83a 	sub	r16,r17,r16
   24d0c:	8403fbc4 	addi	r16,r16,4079
   24d10:	8020d33a 	srli	r16,r16,12
   24d14:	843fffc4 	addi	r16,r16,-1
   24d18:	8020933a 	slli	r16,r16,12
   24d1c:	80840008 	cmpgei	r2,r16,4096
   24d20:	10000626 	beq	r2,zero,24d3c <_malloc_trim_r+0x70>
   24d24:	000b883a 	mov	r5,zero
   24d28:	9009883a 	mov	r4,r18
   24d2c:	0027d000 	call	27d00 <_sbrk_r>
   24d30:	98c00217 	ldw	r3,8(r19)
   24d34:	1c47883a 	add	r3,r3,r17
   24d38:	10c00a26 	beq	r2,r3,24d64 <_malloc_trim_r+0x98>
   24d3c:	9009883a 	mov	r4,r18
   24d40:	002df780 	call	2df78 <__malloc_unlock>
   24d44:	0005883a 	mov	r2,zero
   24d48:	dfc00417 	ldw	ra,16(sp)
   24d4c:	dcc00317 	ldw	r19,12(sp)
   24d50:	dc800217 	ldw	r18,8(sp)
   24d54:	dc400117 	ldw	r17,4(sp)
   24d58:	dc000017 	ldw	r16,0(sp)
   24d5c:	dec00504 	addi	sp,sp,20
   24d60:	f800283a 	ret
   24d64:	040bc83a 	sub	r5,zero,r16
   24d68:	9009883a 	mov	r4,r18
   24d6c:	0027d000 	call	27d00 <_sbrk_r>
   24d70:	10bfffd8 	cmpnei	r2,r2,-1
   24d74:	10000d26 	beq	r2,zero,24dac <_malloc_trim_r+0xe0>
   24d78:	008000f4 	movhi	r2,3
   24d7c:	10904017 	ldw	r2,16640(r2)
   24d80:	98c00217 	ldw	r3,8(r19)
   24d84:	8c23c83a 	sub	r17,r17,r16
   24d88:	8c400054 	ori	r17,r17,1
   24d8c:	1421c83a 	sub	r16,r2,r16
   24d90:	1c400115 	stw	r17,4(r3)
   24d94:	008000f4 	movhi	r2,3
   24d98:	9009883a 	mov	r4,r18
   24d9c:	14104015 	stw	r16,16640(r2)
   24da0:	002df780 	call	2df78 <__malloc_unlock>
   24da4:	00800044 	movi	r2,1
   24da8:	003fe706 	br	24d48 <_malloc_trim_r+0x7c>
   24dac:	000b883a 	mov	r5,zero
   24db0:	9009883a 	mov	r4,r18
   24db4:	0027d000 	call	27d00 <_sbrk_r>
   24db8:	99000217 	ldw	r4,8(r19)
   24dbc:	1107c83a 	sub	r3,r2,r4
   24dc0:	19400410 	cmplti	r5,r3,16
   24dc4:	283fdd1e 	bne	r5,zero,24d3c <_malloc_trim_r+0x70>
   24dc8:	014000f4 	movhi	r5,3
   24dcc:	29491a17 	ldw	r5,9320(r5)
   24dd0:	18c00054 	ori	r3,r3,1
   24dd4:	20c00115 	stw	r3,4(r4)
   24dd8:	1145c83a 	sub	r2,r2,r5
   24ddc:	014000f4 	movhi	r5,3
   24de0:	28904015 	stw	r2,16640(r5)
   24de4:	003fd506 	br	24d3c <_malloc_trim_r+0x70>

00024de8 <_free_r>:
   24de8:	28004f26 	beq	r5,zero,24f28 <_free_r+0x140>
   24dec:	defffd04 	addi	sp,sp,-12
   24df0:	dc400115 	stw	r17,4(sp)
   24df4:	dc000015 	stw	r16,0(sp)
   24df8:	2023883a 	mov	r17,r4
   24dfc:	2821883a 	mov	r16,r5
   24e00:	dfc00215 	stw	ra,8(sp)
   24e04:	002df540 	call	2df54 <__malloc_lock>
   24e08:	81ffff17 	ldw	r7,-4(r16)
   24e0c:	00bfff84 	movi	r2,-2
   24e10:	80fffe04 	addi	r3,r16,-8
   24e14:	3884703a 	and	r2,r7,r2
   24e18:	010000f4 	movhi	r4,3
   24e1c:	188d883a 	add	r6,r3,r2
   24e20:	21032904 	addi	r4,r4,3236
   24e24:	31400117 	ldw	r5,4(r6)
   24e28:	22000217 	ldw	r8,8(r4)
   24e2c:	027fff04 	movi	r9,-4
   24e30:	2a4a703a 	and	r5,r5,r9
   24e34:	41806426 	beq	r8,r6,24fc8 <_free_r+0x1e0>
   24e38:	31400115 	stw	r5,4(r6)
   24e3c:	39c0004c 	andi	r7,r7,1
   24e40:	3151883a 	add	r8,r6,r5
   24e44:	3800281e 	bne	r7,zero,24ee8 <_free_r+0x100>
   24e48:	82bffe17 	ldw	r10,-8(r16)
   24e4c:	42000117 	ldw	r8,4(r8)
   24e50:	01c000f4 	movhi	r7,3
   24e54:	1a87c83a 	sub	r3,r3,r10
   24e58:	1a400217 	ldw	r9,8(r3)
   24e5c:	39c32b04 	addi	r7,r7,3244
   24e60:	1285883a 	add	r2,r2,r10
   24e64:	4200004c 	andi	r8,r8,1
   24e68:	49c04c26 	beq	r9,r7,24f9c <_free_r+0x1b4>
   24e6c:	1a800317 	ldw	r10,12(r3)
   24e70:	4a800315 	stw	r10,12(r9)
   24e74:	52400215 	stw	r9,8(r10)
   24e78:	40007126 	beq	r8,zero,25040 <_free_r+0x258>
   24e7c:	11400054 	ori	r5,r2,1
   24e80:	19400115 	stw	r5,4(r3)
   24e84:	30800015 	stw	r2,0(r6)
   24e88:	11408028 	cmpgeui	r5,r2,512
   24e8c:	28002c1e 	bne	r5,zero,24f40 <_free_r+0x158>
   24e90:	100ad0fa 	srli	r5,r2,3
   24e94:	100cd17a 	srli	r6,r2,5
   24e98:	00800044 	movi	r2,1
   24e9c:	29400044 	addi	r5,r5,1
   24ea0:	280a90fa 	slli	r5,r5,3
   24ea4:	21c00117 	ldw	r7,4(r4)
   24ea8:	1184983a 	sll	r2,r2,r6
   24eac:	214b883a 	add	r5,r4,r5
   24eb0:	29800017 	ldw	r6,0(r5)
   24eb4:	11c4b03a 	or	r2,r2,r7
   24eb8:	29fffe04 	addi	r7,r5,-8
   24ebc:	19c00315 	stw	r7,12(r3)
   24ec0:	19800215 	stw	r6,8(r3)
   24ec4:	20800115 	stw	r2,4(r4)
   24ec8:	28c00015 	stw	r3,0(r5)
   24ecc:	30c00315 	stw	r3,12(r6)
   24ed0:	8809883a 	mov	r4,r17
   24ed4:	dfc00217 	ldw	ra,8(sp)
   24ed8:	dc400117 	ldw	r17,4(sp)
   24edc:	dc000017 	ldw	r16,0(sp)
   24ee0:	dec00304 	addi	sp,sp,12
   24ee4:	002df781 	jmpi	2df78 <__malloc_unlock>
   24ee8:	41c00117 	ldw	r7,4(r8)
   24eec:	39c0004c 	andi	r7,r7,1
   24ef0:	38000e1e 	bne	r7,zero,24f2c <_free_r+0x144>
   24ef4:	01c000f4 	movhi	r7,3
   24ef8:	1145883a 	add	r2,r2,r5
   24efc:	39c32b04 	addi	r7,r7,3244
   24f00:	31400217 	ldw	r5,8(r6)
   24f04:	12400054 	ori	r9,r2,1
   24f08:	1891883a 	add	r8,r3,r2
   24f0c:	29c05226 	beq	r5,r7,25058 <_free_r+0x270>
   24f10:	31800317 	ldw	r6,12(r6)
   24f14:	29800315 	stw	r6,12(r5)
   24f18:	31400215 	stw	r5,8(r6)
   24f1c:	1a400115 	stw	r9,4(r3)
   24f20:	40800015 	stw	r2,0(r8)
   24f24:	003fd806 	br	24e88 <_free_r+0xa0>
   24f28:	f800283a 	ret
   24f2c:	11400054 	ori	r5,r2,1
   24f30:	817fff15 	stw	r5,-4(r16)
   24f34:	30800015 	stw	r2,0(r6)
   24f38:	11408028 	cmpgeui	r5,r2,512
   24f3c:	283fd426 	beq	r5,zero,24e90 <_free_r+0xa8>
   24f40:	100ad27a 	srli	r5,r2,9
   24f44:	29800168 	cmpgeui	r6,r5,5
   24f48:	3000341e 	bne	r6,zero,2501c <_free_r+0x234>
   24f4c:	100ad1ba 	srli	r5,r2,6
   24f50:	29800e44 	addi	r6,r5,57
   24f54:	300c90fa 	slli	r6,r6,3
   24f58:	29c00e04 	addi	r7,r5,56
   24f5c:	218d883a 	add	r6,r4,r6
   24f60:	31400017 	ldw	r5,0(r6)
   24f64:	31bffe04 	addi	r6,r6,-8
   24f68:	31404226 	beq	r6,r5,25074 <_free_r+0x28c>
   24f6c:	01ffff04 	movi	r7,-4
   24f70:	29000117 	ldw	r4,4(r5)
   24f74:	21c8703a 	and	r4,r4,r7
   24f78:	1100022e 	bgeu	r2,r4,24f84 <_free_r+0x19c>
   24f7c:	29400217 	ldw	r5,8(r5)
   24f80:	317ffb1e 	bne	r6,r5,24f70 <_free_r+0x188>
   24f84:	29800317 	ldw	r6,12(r5)
   24f88:	19800315 	stw	r6,12(r3)
   24f8c:	19400215 	stw	r5,8(r3)
   24f90:	30c00215 	stw	r3,8(r6)
   24f94:	28c00315 	stw	r3,12(r5)
   24f98:	003fcd06 	br	24ed0 <_free_r+0xe8>
   24f9c:	40004d1e 	bne	r8,zero,250d4 <_free_r+0x2ec>
   24fa0:	31000317 	ldw	r4,12(r6)
   24fa4:	31800217 	ldw	r6,8(r6)
   24fa8:	2885883a 	add	r2,r5,r2
   24fac:	11400054 	ori	r5,r2,1
   24fb0:	31000315 	stw	r4,12(r6)
   24fb4:	21800215 	stw	r6,8(r4)
   24fb8:	19400115 	stw	r5,4(r3)
   24fbc:	1887883a 	add	r3,r3,r2
   24fc0:	18800015 	stw	r2,0(r3)
   24fc4:	003fc206 	br	24ed0 <_free_r+0xe8>
   24fc8:	39c0004c 	andi	r7,r7,1
   24fcc:	1145883a 	add	r2,r2,r5
   24fd0:	3800071e 	bne	r7,zero,24ff0 <_free_r+0x208>
   24fd4:	81fffe17 	ldw	r7,-8(r16)
   24fd8:	19c7c83a 	sub	r3,r3,r7
   24fdc:	19400317 	ldw	r5,12(r3)
   24fe0:	19800217 	ldw	r6,8(r3)
   24fe4:	11c5883a 	add	r2,r2,r7
   24fe8:	31400315 	stw	r5,12(r6)
   24fec:	29800215 	stw	r6,8(r5)
   24ff0:	014000f4 	movhi	r5,3
   24ff4:	11800054 	ori	r6,r2,1
   24ff8:	29491b17 	ldw	r5,9324(r5)
   24ffc:	19800115 	stw	r6,4(r3)
   25000:	20c00215 	stw	r3,8(r4)
   25004:	117fb236 	bltu	r2,r5,24ed0 <_free_r+0xe8>
   25008:	008000f4 	movhi	r2,3
   2500c:	11503617 	ldw	r5,16600(r2)
   25010:	8809883a 	mov	r4,r17
   25014:	0024ccc0 	call	24ccc <_malloc_trim_r>
   25018:	003fad06 	br	24ed0 <_free_r+0xe8>
   2501c:	29800568 	cmpgeui	r6,r5,21
   25020:	30000926 	beq	r6,zero,25048 <_free_r+0x260>
   25024:	29801568 	cmpgeui	r6,r5,85
   25028:	3000191e 	bne	r6,zero,25090 <_free_r+0x2a8>
   2502c:	100ad33a 	srli	r5,r2,12
   25030:	29801bc4 	addi	r6,r5,111
   25034:	300c90fa 	slli	r6,r6,3
   25038:	29c01b84 	addi	r7,r5,110
   2503c:	003fc706 	br	24f5c <_free_r+0x174>
   25040:	1145883a 	add	r2,r2,r5
   25044:	003fae06 	br	24f00 <_free_r+0x118>
   25048:	29801704 	addi	r6,r5,92
   2504c:	300c90fa 	slli	r6,r6,3
   25050:	29c016c4 	addi	r7,r5,91
   25054:	003fc106 	br	24f5c <_free_r+0x174>
   25058:	20c00515 	stw	r3,20(r4)
   2505c:	20c00415 	stw	r3,16(r4)
   25060:	19c00315 	stw	r7,12(r3)
   25064:	19c00215 	stw	r7,8(r3)
   25068:	1a400115 	stw	r9,4(r3)
   2506c:	40800015 	stw	r2,0(r8)
   25070:	003f9706 	br	24ed0 <_free_r+0xe8>
   25074:	380fd0ba 	srai	r7,r7,2
   25078:	00800044 	movi	r2,1
   2507c:	22000117 	ldw	r8,4(r4)
   25080:	11ce983a 	sll	r7,r2,r7
   25084:	3a0eb03a 	or	r7,r7,r8
   25088:	21c00115 	stw	r7,4(r4)
   2508c:	003fbe06 	br	24f88 <_free_r+0x1a0>
   25090:	29805568 	cmpgeui	r6,r5,341
   25094:	3000051e 	bne	r6,zero,250ac <_free_r+0x2c4>
   25098:	100ad3fa 	srli	r5,r2,15
   2509c:	29801e04 	addi	r6,r5,120
   250a0:	300c90fa 	slli	r6,r6,3
   250a4:	29c01dc4 	addi	r7,r5,119
   250a8:	003fac06 	br	24f5c <_free_r+0x174>
   250ac:	29415568 	cmpgeui	r5,r5,1365
   250b0:	2800051e 	bne	r5,zero,250c8 <_free_r+0x2e0>
   250b4:	100ad4ba 	srli	r5,r2,18
   250b8:	29801f44 	addi	r6,r5,125
   250bc:	300c90fa 	slli	r6,r6,3
   250c0:	29c01f04 	addi	r7,r5,124
   250c4:	003fa506 	br	24f5c <_free_r+0x174>
   250c8:	0180fe04 	movi	r6,1016
   250cc:	01c01f84 	movi	r7,126
   250d0:	003fa206 	br	24f5c <_free_r+0x174>
   250d4:	11000054 	ori	r4,r2,1
   250d8:	19000115 	stw	r4,4(r3)
   250dc:	30800015 	stw	r2,0(r6)
   250e0:	003f7b06 	br	24ed0 <_free_r+0xe8>

000250e4 <__sfvwrite_r>:
   250e4:	30800217 	ldw	r2,8(r6)
   250e8:	1000c826 	beq	r2,zero,2540c <__sfvwrite_r+0x328>
   250ec:	29c0030b 	ldhu	r7,12(r5)
   250f0:	defff404 	addi	sp,sp,-48
   250f4:	dd800815 	stw	r22,32(sp)
   250f8:	dd400715 	stw	r21,28(sp)
   250fc:	dc000215 	stw	r16,8(sp)
   25100:	dfc00b15 	stw	ra,44(sp)
   25104:	df000a15 	stw	fp,40(sp)
   25108:	ddc00915 	stw	r23,36(sp)
   2510c:	dd000615 	stw	r20,24(sp)
   25110:	dcc00515 	stw	r19,20(sp)
   25114:	dc800415 	stw	r18,16(sp)
   25118:	dc400315 	stw	r17,12(sp)
   2511c:	3880020c 	andi	r2,r7,8
   25120:	302d883a 	mov	r22,r6
   25124:	202b883a 	mov	r21,r4
   25128:	2821883a 	mov	r16,r5
   2512c:	10002226 	beq	r2,zero,251b8 <__sfvwrite_r+0xd4>
   25130:	28800417 	ldw	r2,16(r5)
   25134:	10002026 	beq	r2,zero,251b8 <__sfvwrite_r+0xd4>
   25138:	3880008c 	andi	r2,r7,2
   2513c:	b4400017 	ldw	r17,0(r22)
   25140:	10002526 	beq	r2,zero,251d8 <__sfvwrite_r+0xf4>
   25144:	80800917 	ldw	r2,36(r16)
   25148:	81400717 	ldw	r5,28(r16)
   2514c:	05200034 	movhi	r20,32768
   25150:	0027883a 	mov	r19,zero
   25154:	0025883a 	mov	r18,zero
   25158:	a53f0004 	addi	r20,r20,-1024
   2515c:	980d883a 	mov	r6,r19
   25160:	a809883a 	mov	r4,r21
   25164:	90001026 	beq	r18,zero,251a8 <__sfvwrite_r+0xc4>
   25168:	900f883a 	mov	r7,r18
   2516c:	a480012e 	bgeu	r20,r18,25174 <__sfvwrite_r+0x90>
   25170:	a00f883a 	mov	r7,r20
   25174:	103ee83a 	callr	r2
   25178:	00809f0e 	bge	zero,r2,253f8 <__sfvwrite_r+0x314>
   2517c:	b1000217 	ldw	r4,8(r22)
   25180:	98a7883a 	add	r19,r19,r2
   25184:	90a5c83a 	sub	r18,r18,r2
   25188:	2085c83a 	sub	r2,r4,r2
   2518c:	b0800215 	stw	r2,8(r22)
   25190:	10006326 	beq	r2,zero,25320 <__sfvwrite_r+0x23c>
   25194:	80800917 	ldw	r2,36(r16)
   25198:	81400717 	ldw	r5,28(r16)
   2519c:	980d883a 	mov	r6,r19
   251a0:	a809883a 	mov	r4,r21
   251a4:	903ff01e 	bne	r18,zero,25168 <__sfvwrite_r+0x84>
   251a8:	8cc00017 	ldw	r19,0(r17)
   251ac:	8c800117 	ldw	r18,4(r17)
   251b0:	8c400204 	addi	r17,r17,8
   251b4:	003fe906 	br	2515c <__sfvwrite_r+0x78>
   251b8:	800b883a 	mov	r5,r16
   251bc:	a809883a 	mov	r4,r21
   251c0:	0022bfc0 	call	22bfc <__swsetup_r>
   251c4:	1000f81e 	bne	r2,zero,255a8 <__sfvwrite_r+0x4c4>
   251c8:	81c0030b 	ldhu	r7,12(r16)
   251cc:	b4400017 	ldw	r17,0(r22)
   251d0:	3880008c 	andi	r2,r7,2
   251d4:	103fdb1e 	bne	r2,zero,25144 <__sfvwrite_r+0x60>
   251d8:	3880004c 	andi	r2,r7,1
   251dc:	84800217 	ldw	r18,8(r16)
   251e0:	82000017 	ldw	r8,0(r16)
   251e4:	10008b1e 	bne	r2,zero,25414 <__sfvwrite_r+0x330>
   251e8:	00a00034 	movhi	r2,32768
   251ec:	10bfff84 	addi	r2,r2,-2
   251f0:	00e00034 	movhi	r3,32768
   251f4:	d8800015 	stw	r2,0(sp)
   251f8:	18bfffc4 	addi	r2,r3,-1
   251fc:	0039883a 	mov	fp,zero
   25200:	0027883a 	mov	r19,zero
   25204:	d8800115 	stw	r2,4(sp)
   25208:	98004126 	beq	r19,zero,25310 <__sfvwrite_r+0x22c>
   2520c:	3880800c 	andi	r2,r7,512
   25210:	10009326 	beq	r2,zero,25460 <__sfvwrite_r+0x37c>
   25214:	902f883a 	mov	r23,r18
   25218:	9c80ba36 	bltu	r19,r18,25504 <__sfvwrite_r+0x420>
   2521c:	3881200c 	andi	r2,r7,1152
   25220:	10002626 	beq	r2,zero,252bc <__sfvwrite_r+0x1d8>
   25224:	81800517 	ldw	r6,20(r16)
   25228:	81400417 	ldw	r5,16(r16)
   2522c:	98800044 	addi	r2,r19,1
   25230:	3189883a 	add	r4,r6,r6
   25234:	2189883a 	add	r4,r4,r6
   25238:	2028d7fa 	srli	r20,r4,31
   2523c:	4165c83a 	sub	r18,r8,r5
   25240:	1485883a 	add	r2,r2,r18
   25244:	a109883a 	add	r4,r20,r4
   25248:	2029d07a 	srai	r20,r4,1
   2524c:	a00d883a 	mov	r6,r20
   25250:	a080022e 	bgeu	r20,r2,2525c <__sfvwrite_r+0x178>
   25254:	1029883a 	mov	r20,r2
   25258:	100d883a 	mov	r6,r2
   2525c:	39c1000c 	andi	r7,r7,1024
   25260:	3800c126 	beq	r7,zero,25568 <__sfvwrite_r+0x484>
   25264:	a809883a 	mov	r4,r21
   25268:	300b883a 	mov	r5,r6
   2526c:	00258e80 	call	258e8 <_malloc_r>
   25270:	1009883a 	mov	r4,r2
   25274:	1000c826 	beq	r2,zero,25598 <__sfvwrite_r+0x4b4>
   25278:	81400417 	ldw	r5,16(r16)
   2527c:	900d883a 	mov	r6,r18
   25280:	002619c0 	call	2619c <memcpy>
   25284:	1009883a 	mov	r4,r2
   25288:	8080030b 	ldhu	r2,12(r16)
   2528c:	00fedfc4 	movi	r3,-1153
   25290:	10c4703a 	and	r2,r2,r3
   25294:	10802014 	ori	r2,r2,128
   25298:	8080030d 	sth	r2,12(r16)
   2529c:	2491883a 	add	r8,r4,r18
   252a0:	a485c83a 	sub	r2,r20,r18
   252a4:	81000415 	stw	r4,16(r16)
   252a8:	82000015 	stw	r8,0(r16)
   252ac:	85000515 	stw	r20,20(r16)
   252b0:	9825883a 	mov	r18,r19
   252b4:	80800215 	stw	r2,8(r16)
   252b8:	982f883a 	mov	r23,r19
   252bc:	4009883a 	mov	r4,r8
   252c0:	b80d883a 	mov	r6,r23
   252c4:	e00b883a 	mov	r5,fp
   252c8:	002629c0 	call	2629c <memmove>
   252cc:	81000217 	ldw	r4,8(r16)
   252d0:	80800017 	ldw	r2,0(r16)
   252d4:	9829883a 	mov	r20,r19
   252d8:	24a5c83a 	sub	r18,r4,r18
   252dc:	15c5883a 	add	r2,r2,r23
   252e0:	84800215 	stw	r18,8(r16)
   252e4:	80800015 	stw	r2,0(r16)
   252e8:	0027883a 	mov	r19,zero
   252ec:	b0800217 	ldw	r2,8(r22)
   252f0:	e539883a 	add	fp,fp,r20
   252f4:	1529c83a 	sub	r20,r2,r20
   252f8:	b5000215 	stw	r20,8(r22)
   252fc:	a0000826 	beq	r20,zero,25320 <__sfvwrite_r+0x23c>
   25300:	81c0030b 	ldhu	r7,12(r16)
   25304:	84800217 	ldw	r18,8(r16)
   25308:	82000017 	ldw	r8,0(r16)
   2530c:	983fbf1e 	bne	r19,zero,2520c <__sfvwrite_r+0x128>
   25310:	8f000017 	ldw	fp,0(r17)
   25314:	8cc00117 	ldw	r19,4(r17)
   25318:	8c400204 	addi	r17,r17,8
   2531c:	003fba06 	br	25208 <__sfvwrite_r+0x124>
   25320:	0005883a 	mov	r2,zero
   25324:	dfc00b17 	ldw	ra,44(sp)
   25328:	df000a17 	ldw	fp,40(sp)
   2532c:	ddc00917 	ldw	r23,36(sp)
   25330:	dd800817 	ldw	r22,32(sp)
   25334:	dd400717 	ldw	r21,28(sp)
   25338:	dd000617 	ldw	r20,24(sp)
   2533c:	dcc00517 	ldw	r19,20(sp)
   25340:	dc800417 	ldw	r18,16(sp)
   25344:	dc400317 	ldw	r17,12(sp)
   25348:	dc000217 	ldw	r16,8(sp)
   2534c:	dec00c04 	addi	sp,sp,48
   25350:	f800283a 	ret
   25354:	e1c07316 	blt	fp,r7,25524 <__sfvwrite_r+0x440>
   25358:	80800917 	ldw	r2,36(r16)
   2535c:	81400717 	ldw	r5,28(r16)
   25360:	b80d883a 	mov	r6,r23
   25364:	a809883a 	mov	r4,r21
   25368:	103ee83a 	callr	r2
   2536c:	1025883a 	mov	r18,r2
   25370:	0080210e 	bge	zero,r2,253f8 <__sfvwrite_r+0x314>
   25374:	a4a9c83a 	sub	r20,r20,r18
   25378:	a0006526 	beq	r20,zero,25510 <__sfvwrite_r+0x42c>
   2537c:	00800044 	movi	r2,1
   25380:	b1800217 	ldw	r6,8(r22)
   25384:	bcaf883a 	add	r23,r23,r18
   25388:	9ca7c83a 	sub	r19,r19,r18
   2538c:	34a5c83a 	sub	r18,r6,r18
   25390:	b4800215 	stw	r18,8(r22)
   25394:	903fe226 	beq	r18,zero,25320 <__sfvwrite_r+0x23c>
   25398:	84800217 	ldw	r18,8(r16)
   2539c:	82000017 	ldw	r8,0(r16)
   253a0:	98002126 	beq	r19,zero,25428 <__sfvwrite_r+0x344>
   253a4:	10002426 	beq	r2,zero,25438 <__sfvwrite_r+0x354>
   253a8:	a005883a 	mov	r2,r20
   253ac:	9839883a 	mov	fp,r19
   253b0:	14c0012e 	bgeu	r2,r19,253b8 <__sfvwrite_r+0x2d4>
   253b4:	1039883a 	mov	fp,r2
   253b8:	80800417 	ldw	r2,16(r16)
   253bc:	81c00517 	ldw	r7,20(r16)
   253c0:	123fe42e 	bgeu	r2,r8,25354 <__sfvwrite_r+0x270>
   253c4:	3ca5883a 	add	r18,r7,r18
   253c8:	973fe20e 	bge	r18,fp,25354 <__sfvwrite_r+0x270>
   253cc:	b80b883a 	mov	r5,r23
   253d0:	4009883a 	mov	r4,r8
   253d4:	900d883a 	mov	r6,r18
   253d8:	002629c0 	call	2629c <memmove>
   253dc:	80800017 	ldw	r2,0(r16)
   253e0:	800b883a 	mov	r5,r16
   253e4:	a809883a 	mov	r4,r21
   253e8:	1485883a 	add	r2,r2,r18
   253ec:	80800015 	stw	r2,0(r16)
   253f0:	00248f00 	call	248f0 <_fflush_r>
   253f4:	103fdf26 	beq	r2,zero,25374 <__sfvwrite_r+0x290>
   253f8:	8080030b 	ldhu	r2,12(r16)
   253fc:	10801014 	ori	r2,r2,64
   25400:	8080030d 	sth	r2,12(r16)
   25404:	00bfffc4 	movi	r2,-1
   25408:	003fc606 	br	25324 <__sfvwrite_r+0x240>
   2540c:	0005883a 	mov	r2,zero
   25410:	f800283a 	ret
   25414:	0027883a 	mov	r19,zero
   25418:	0029883a 	mov	r20,zero
   2541c:	0005883a 	mov	r2,zero
   25420:	002f883a 	mov	r23,zero
   25424:	983fdf1e 	bne	r19,zero,253a4 <__sfvwrite_r+0x2c0>
   25428:	8cc00117 	ldw	r19,4(r17)
   2542c:	8dc00017 	ldw	r23,0(r17)
   25430:	8c400204 	addi	r17,r17,8
   25434:	983ffc26 	beq	r19,zero,25428 <__sfvwrite_r+0x344>
   25438:	980d883a 	mov	r6,r19
   2543c:	01400284 	movi	r5,10
   25440:	b809883a 	mov	r4,r23
   25444:	da000015 	stw	r8,0(sp)
   25448:	00260c80 	call	260c8 <memchr>
   2544c:	da000017 	ldw	r8,0(sp)
   25450:	10004226 	beq	r2,zero,2555c <__sfvwrite_r+0x478>
   25454:	10800044 	addi	r2,r2,1
   25458:	15e9c83a 	sub	r20,r2,r23
   2545c:	003fd206 	br	253a8 <__sfvwrite_r+0x2c4>
   25460:	80800417 	ldw	r2,16(r16)
   25464:	12001436 	bltu	r2,r8,254b8 <__sfvwrite_r+0x3d4>
   25468:	85000517 	ldw	r20,20(r16)
   2546c:	9d001236 	bltu	r19,r20,254b8 <__sfvwrite_r+0x3d4>
   25470:	d8800017 	ldw	r2,0(sp)
   25474:	14c0372e 	bgeu	r2,r19,25554 <__sfvwrite_r+0x470>
   25478:	d9000117 	ldw	r4,4(sp)
   2547c:	a00b883a 	mov	r5,r20
   25480:	002adb00 	call	2adb0 <__divsi3>
   25484:	a00b883a 	mov	r5,r20
   25488:	1009883a 	mov	r4,r2
   2548c:	002af640 	call	2af64 <__mulsi3>
   25490:	82000917 	ldw	r8,36(r16)
   25494:	81400717 	ldw	r5,28(r16)
   25498:	100f883a 	mov	r7,r2
   2549c:	e00d883a 	mov	r6,fp
   254a0:	a809883a 	mov	r4,r21
   254a4:	403ee83a 	callr	r8
   254a8:	1029883a 	mov	r20,r2
   254ac:	00bfd20e 	bge	zero,r2,253f8 <__sfvwrite_r+0x314>
   254b0:	9d27c83a 	sub	r19,r19,r20
   254b4:	003f8d06 	br	252ec <__sfvwrite_r+0x208>
   254b8:	9029883a 	mov	r20,r18
   254bc:	9c80012e 	bgeu	r19,r18,254c4 <__sfvwrite_r+0x3e0>
   254c0:	9829883a 	mov	r20,r19
   254c4:	4009883a 	mov	r4,r8
   254c8:	a00d883a 	mov	r6,r20
   254cc:	e00b883a 	mov	r5,fp
   254d0:	002629c0 	call	2629c <memmove>
   254d4:	80800217 	ldw	r2,8(r16)
   254d8:	81000017 	ldw	r4,0(r16)
   254dc:	1505c83a 	sub	r2,r2,r20
   254e0:	2509883a 	add	r4,r4,r20
   254e4:	80800215 	stw	r2,8(r16)
   254e8:	81000015 	stw	r4,0(r16)
   254ec:	103ff01e 	bne	r2,zero,254b0 <__sfvwrite_r+0x3cc>
   254f0:	800b883a 	mov	r5,r16
   254f4:	a809883a 	mov	r4,r21
   254f8:	00248f00 	call	248f0 <_fflush_r>
   254fc:	103fec26 	beq	r2,zero,254b0 <__sfvwrite_r+0x3cc>
   25500:	003fbd06 	br	253f8 <__sfvwrite_r+0x314>
   25504:	9825883a 	mov	r18,r19
   25508:	982f883a 	mov	r23,r19
   2550c:	003f6b06 	br	252bc <__sfvwrite_r+0x1d8>
   25510:	800b883a 	mov	r5,r16
   25514:	a809883a 	mov	r4,r21
   25518:	00248f00 	call	248f0 <_fflush_r>
   2551c:	103f9826 	beq	r2,zero,25380 <__sfvwrite_r+0x29c>
   25520:	003fb506 	br	253f8 <__sfvwrite_r+0x314>
   25524:	e00d883a 	mov	r6,fp
   25528:	b80b883a 	mov	r5,r23
   2552c:	4009883a 	mov	r4,r8
   25530:	002629c0 	call	2629c <memmove>
   25534:	80800217 	ldw	r2,8(r16)
   25538:	81800017 	ldw	r6,0(r16)
   2553c:	e025883a 	mov	r18,fp
   25540:	1705c83a 	sub	r2,r2,fp
   25544:	370d883a 	add	r6,r6,fp
   25548:	80800215 	stw	r2,8(r16)
   2554c:	81800015 	stw	r6,0(r16)
   25550:	003f8806 	br	25374 <__sfvwrite_r+0x290>
   25554:	9809883a 	mov	r4,r19
   25558:	003fc806 	br	2547c <__sfvwrite_r+0x398>
   2555c:	98800044 	addi	r2,r19,1
   25560:	1029883a 	mov	r20,r2
   25564:	003f9106 	br	253ac <__sfvwrite_r+0x2c8>
   25568:	a809883a 	mov	r4,r21
   2556c:	002779c0 	call	2779c <_realloc_r>
   25570:	1009883a 	mov	r4,r2
   25574:	103f491e 	bne	r2,zero,2529c <__sfvwrite_r+0x1b8>
   25578:	81400417 	ldw	r5,16(r16)
   2557c:	a809883a 	mov	r4,r21
   25580:	0024de80 	call	24de8 <_free_r>
   25584:	8080030b 	ldhu	r2,12(r16)
   25588:	00c00304 	movi	r3,12
   2558c:	a8c00015 	stw	r3,0(r21)
   25590:	10bfdfcc 	andi	r2,r2,65407
   25594:	003f9906 	br	253fc <__sfvwrite_r+0x318>
   25598:	00c00304 	movi	r3,12
   2559c:	8080030b 	ldhu	r2,12(r16)
   255a0:	a8c00015 	stw	r3,0(r21)
   255a4:	003f9506 	br	253fc <__sfvwrite_r+0x318>
   255a8:	00bfffc4 	movi	r2,-1
   255ac:	003f5d06 	br	25324 <__sfvwrite_r+0x240>

000255b0 <_fwalk>:
   255b0:	defffa04 	addi	sp,sp,-24
   255b4:	dd000415 	stw	r20,16(sp)
   255b8:	dcc00315 	stw	r19,12(sp)
   255bc:	dc800215 	stw	r18,8(sp)
   255c0:	dfc00515 	stw	ra,20(sp)
   255c4:	dc400115 	stw	r17,4(sp)
   255c8:	dc000015 	stw	r16,0(sp)
   255cc:	2827883a 	mov	r19,r5
   255d0:	2480b804 	addi	r18,r4,736
   255d4:	0029883a 	mov	r20,zero
   255d8:	94400117 	ldw	r17,4(r18)
   255dc:	94000217 	ldw	r16,8(r18)
   255e0:	8c7fffc4 	addi	r17,r17,-1
   255e4:	88000d16 	blt	r17,zero,2561c <_fwalk+0x6c>
   255e8:	8080030b 	ldhu	r2,12(r16)
   255ec:	8c7fffc4 	addi	r17,r17,-1
   255f0:	108000b0 	cmpltui	r2,r2,2
   255f4:	1000061e 	bne	r2,zero,25610 <_fwalk+0x60>
   255f8:	8080038f 	ldh	r2,14(r16)
   255fc:	8009883a 	mov	r4,r16
   25600:	10bfffe0 	cmpeqi	r2,r2,-1
   25604:	1000021e 	bne	r2,zero,25610 <_fwalk+0x60>
   25608:	983ee83a 	callr	r19
   2560c:	a0a8b03a 	or	r20,r20,r2
   25610:	88bfffd8 	cmpnei	r2,r17,-1
   25614:	84001a04 	addi	r16,r16,104
   25618:	103ff31e 	bne	r2,zero,255e8 <_fwalk+0x38>
   2561c:	94800017 	ldw	r18,0(r18)
   25620:	903fed1e 	bne	r18,zero,255d8 <_fwalk+0x28>
   25624:	a005883a 	mov	r2,r20
   25628:	dfc00517 	ldw	ra,20(sp)
   2562c:	dd000417 	ldw	r20,16(sp)
   25630:	dcc00317 	ldw	r19,12(sp)
   25634:	dc800217 	ldw	r18,8(sp)
   25638:	dc400117 	ldw	r17,4(sp)
   2563c:	dc000017 	ldw	r16,0(sp)
   25640:	dec00604 	addi	sp,sp,24
   25644:	f800283a 	ret

00025648 <_fwalk_reent>:
   25648:	defff904 	addi	sp,sp,-28
   2564c:	dd400515 	stw	r21,20(sp)
   25650:	dd000415 	stw	r20,16(sp)
   25654:	dcc00315 	stw	r19,12(sp)
   25658:	dc800215 	stw	r18,8(sp)
   2565c:	dfc00615 	stw	ra,24(sp)
   25660:	dc400115 	stw	r17,4(sp)
   25664:	dc000015 	stw	r16,0(sp)
   25668:	202b883a 	mov	r21,r4
   2566c:	2827883a 	mov	r19,r5
   25670:	2480b804 	addi	r18,r4,736
   25674:	0029883a 	mov	r20,zero
   25678:	94400117 	ldw	r17,4(r18)
   2567c:	94000217 	ldw	r16,8(r18)
   25680:	8c7fffc4 	addi	r17,r17,-1
   25684:	88000e16 	blt	r17,zero,256c0 <_fwalk_reent+0x78>
   25688:	8080030b 	ldhu	r2,12(r16)
   2568c:	8c7fffc4 	addi	r17,r17,-1
   25690:	108000b0 	cmpltui	r2,r2,2
   25694:	1000071e 	bne	r2,zero,256b4 <_fwalk_reent+0x6c>
   25698:	8080038f 	ldh	r2,14(r16)
   2569c:	800b883a 	mov	r5,r16
   256a0:	a809883a 	mov	r4,r21
   256a4:	10bfffe0 	cmpeqi	r2,r2,-1
   256a8:	1000021e 	bne	r2,zero,256b4 <_fwalk_reent+0x6c>
   256ac:	983ee83a 	callr	r19
   256b0:	a0a8b03a 	or	r20,r20,r2
   256b4:	88bfffd8 	cmpnei	r2,r17,-1
   256b8:	84001a04 	addi	r16,r16,104
   256bc:	103ff21e 	bne	r2,zero,25688 <_fwalk_reent+0x40>
   256c0:	94800017 	ldw	r18,0(r18)
   256c4:	903fec1e 	bne	r18,zero,25678 <_fwalk_reent+0x30>
   256c8:	a005883a 	mov	r2,r20
   256cc:	dfc00617 	ldw	ra,24(sp)
   256d0:	dd400517 	ldw	r21,20(sp)
   256d4:	dd000417 	ldw	r20,16(sp)
   256d8:	dcc00317 	ldw	r19,12(sp)
   256dc:	dc800217 	ldw	r18,8(sp)
   256e0:	dc400117 	ldw	r17,4(sp)
   256e4:	dc000017 	ldw	r16,0(sp)
   256e8:	dec00704 	addi	sp,sp,28
   256ec:	f800283a 	ret

000256f0 <__localeconv_l>:
   256f0:	20803c04 	addi	r2,r4,240
   256f4:	f800283a 	ret

000256f8 <_localeconv_r>:
   256f8:	008000f4 	movhi	r2,3
   256fc:	10846704 	addi	r2,r2,4508
   25700:	f800283a 	ret

00025704 <localeconv>:
   25704:	008000f4 	movhi	r2,3
   25708:	10846704 	addi	r2,r2,4508
   2570c:	f800283a 	ret

00025710 <__swhatbuf_r>:
   25710:	deffea04 	addi	sp,sp,-88
   25714:	dc001215 	stw	r16,72(sp)
   25718:	2821883a 	mov	r16,r5
   2571c:	2940038f 	ldh	r5,14(r5)
   25720:	dc801415 	stw	r18,80(sp)
   25724:	dc401315 	stw	r17,76(sp)
   25728:	dfc01515 	stw	ra,84(sp)
   2572c:	3023883a 	mov	r17,r6
   25730:	3825883a 	mov	r18,r7
   25734:	28001016 	blt	r5,zero,25778 <__swhatbuf_r+0x68>
   25738:	d80d883a 	mov	r6,sp
   2573c:	0029a4c0 	call	29a4c <_fstat_r>
   25740:	10000d16 	blt	r2,zero,25778 <__swhatbuf_r+0x68>
   25744:	d8c00117 	ldw	r3,4(sp)
   25748:	00820004 	movi	r2,2048
   2574c:	18fc000c 	andi	r3,r3,61440
   25750:	18c80020 	cmpeqi	r3,r3,8192
   25754:	90c00015 	stw	r3,0(r18)
   25758:	00c10004 	movi	r3,1024
   2575c:	88c00015 	stw	r3,0(r17)
   25760:	dfc01517 	ldw	ra,84(sp)
   25764:	dc801417 	ldw	r18,80(sp)
   25768:	dc401317 	ldw	r17,76(sp)
   2576c:	dc001217 	ldw	r16,72(sp)
   25770:	dec01604 	addi	sp,sp,88
   25774:	f800283a 	ret
   25778:	8080030b 	ldhu	r2,12(r16)
   2577c:	90000015 	stw	zero,0(r18)
   25780:	1080200c 	andi	r2,r2,128
   25784:	10000426 	beq	r2,zero,25798 <__swhatbuf_r+0x88>
   25788:	00801004 	movi	r2,64
   2578c:	88800015 	stw	r2,0(r17)
   25790:	0005883a 	mov	r2,zero
   25794:	003ff206 	br	25760 <__swhatbuf_r+0x50>
   25798:	00810004 	movi	r2,1024
   2579c:	88800015 	stw	r2,0(r17)
   257a0:	0005883a 	mov	r2,zero
   257a4:	003fee06 	br	25760 <__swhatbuf_r+0x50>

000257a8 <__smakebuf_r>:
   257a8:	2880030b 	ldhu	r2,12(r5)
   257ac:	defffa04 	addi	sp,sp,-24
   257b0:	dc000215 	stw	r16,8(sp)
   257b4:	dfc00515 	stw	ra,20(sp)
   257b8:	dc800415 	stw	r18,16(sp)
   257bc:	dc400315 	stw	r17,12(sp)
   257c0:	1080008c 	andi	r2,r2,2
   257c4:	2821883a 	mov	r16,r5
   257c8:	10000b26 	beq	r2,zero,257f8 <__smakebuf_r+0x50>
   257cc:	288010c4 	addi	r2,r5,67
   257d0:	28800015 	stw	r2,0(r5)
   257d4:	28800415 	stw	r2,16(r5)
   257d8:	00800044 	movi	r2,1
   257dc:	28800515 	stw	r2,20(r5)
   257e0:	dfc00517 	ldw	ra,20(sp)
   257e4:	dc800417 	ldw	r18,16(sp)
   257e8:	dc400317 	ldw	r17,12(sp)
   257ec:	dc000217 	ldw	r16,8(sp)
   257f0:	dec00604 	addi	sp,sp,24
   257f4:	f800283a 	ret
   257f8:	d9c00104 	addi	r7,sp,4
   257fc:	d80d883a 	mov	r6,sp
   25800:	2023883a 	mov	r17,r4
   25804:	00257100 	call	25710 <__swhatbuf_r>
   25808:	d9000117 	ldw	r4,4(sp)
   2580c:	1025883a 	mov	r18,r2
   25810:	2000131e 	bne	r4,zero,25860 <__smakebuf_r+0xb8>
   25814:	d9400017 	ldw	r5,0(sp)
   25818:	8809883a 	mov	r4,r17
   2581c:	00258e80 	call	258e8 <_malloc_r>
   25820:	10001c26 	beq	r2,zero,25894 <__smakebuf_r+0xec>
   25824:	010000b4 	movhi	r4,2
   25828:	21126004 	addi	r4,r4,18816
   2582c:	80c0030b 	ldhu	r3,12(r16)
   25830:	89000f15 	stw	r4,60(r17)
   25834:	80800015 	stw	r2,0(r16)
   25838:	80800415 	stw	r2,16(r16)
   2583c:	d8800017 	ldw	r2,0(sp)
   25840:	d9400117 	ldw	r5,4(sp)
   25844:	18c02014 	ori	r3,r3,128
   25848:	80c0030d 	sth	r3,12(r16)
   2584c:	80800515 	stw	r2,20(r16)
   25850:	28001d1e 	bne	r5,zero,258c8 <__smakebuf_r+0x120>
   25854:	90c6b03a 	or	r3,r18,r3
   25858:	80c0030d 	sth	r3,12(r16)
   2585c:	003fe006 	br	257e0 <__smakebuf_r+0x38>
   25860:	8140038f 	ldh	r5,14(r16)
   25864:	8809883a 	mov	r4,r17
   25868:	0029aac0 	call	29aac <_isatty_r>
   2586c:	103fe926 	beq	r2,zero,25814 <__smakebuf_r+0x6c>
   25870:	8080030b 	ldhu	r2,12(r16)
   25874:	80c010c4 	addi	r3,r16,67
   25878:	80c00015 	stw	r3,0(r16)
   2587c:	10800054 	ori	r2,r2,1
   25880:	8080030d 	sth	r2,12(r16)
   25884:	00800044 	movi	r2,1
   25888:	80c00415 	stw	r3,16(r16)
   2588c:	80800515 	stw	r2,20(r16)
   25890:	003fe006 	br	25814 <__smakebuf_r+0x6c>
   25894:	8080030b 	ldhu	r2,12(r16)
   25898:	10c0800c 	andi	r3,r2,512
   2589c:	183fd01e 	bne	r3,zero,257e0 <__smakebuf_r+0x38>
   258a0:	00ffff04 	movi	r3,-4
   258a4:	10c4703a 	and	r2,r2,r3
   258a8:	10800094 	ori	r2,r2,2
   258ac:	80c010c4 	addi	r3,r16,67
   258b0:	8080030d 	sth	r2,12(r16)
   258b4:	00800044 	movi	r2,1
   258b8:	80c00015 	stw	r3,0(r16)
   258bc:	80c00415 	stw	r3,16(r16)
   258c0:	80800515 	stw	r2,20(r16)
   258c4:	003fc606 	br	257e0 <__smakebuf_r+0x38>
   258c8:	8140038f 	ldh	r5,14(r16)
   258cc:	8809883a 	mov	r4,r17
   258d0:	0029aac0 	call	29aac <_isatty_r>
   258d4:	80c0030b 	ldhu	r3,12(r16)
   258d8:	103fde26 	beq	r2,zero,25854 <__smakebuf_r+0xac>
   258dc:	18ffff0c 	andi	r3,r3,65532
   258e0:	18c00054 	ori	r3,r3,1
   258e4:	003fdb06 	br	25854 <__smakebuf_r+0xac>

000258e8 <_malloc_r>:
   258e8:	defff604 	addi	sp,sp,-40
   258ec:	dc400115 	stw	r17,4(sp)
   258f0:	2c4002c4 	addi	r17,r5,11
   258f4:	dc800215 	stw	r18,8(sp)
   258f8:	dfc00915 	stw	ra,36(sp)
   258fc:	df000815 	stw	fp,32(sp)
   25900:	ddc00715 	stw	r23,28(sp)
   25904:	dd800615 	stw	r22,24(sp)
   25908:	dd400515 	stw	r21,20(sp)
   2590c:	dd000415 	stw	r20,16(sp)
   25910:	dcc00315 	stw	r19,12(sp)
   25914:	dc000015 	stw	r16,0(sp)
   25918:	888005e8 	cmpgeui	r2,r17,23
   2591c:	2025883a 	mov	r18,r4
   25920:	10001b1e 	bne	r2,zero,25990 <_malloc_r+0xa8>
   25924:	29400468 	cmpgeui	r5,r5,17
   25928:	2800821e 	bne	r5,zero,25b34 <_malloc_r+0x24c>
   2592c:	002df540 	call	2df54 <__malloc_lock>
   25930:	04400404 	movi	r17,16
   25934:	01c00084 	movi	r7,2
   25938:	00800604 	movi	r2,24
   2593c:	04c000f4 	movhi	r19,3
   25940:	9cc32904 	addi	r19,r19,3236
   25944:	9885883a 	add	r2,r19,r2
   25948:	14000117 	ldw	r16,4(r2)
   2594c:	10fffe04 	addi	r3,r2,-8
   25950:	80c08b26 	beq	r16,r3,25b80 <_malloc_r+0x298>
   25954:	80800117 	ldw	r2,4(r16)
   25958:	81000317 	ldw	r4,12(r16)
   2595c:	00ffff04 	movi	r3,-4
   25960:	10c4703a 	and	r2,r2,r3
   25964:	81400217 	ldw	r5,8(r16)
   25968:	8085883a 	add	r2,r16,r2
   2596c:	10c00117 	ldw	r3,4(r2)
   25970:	29000315 	stw	r4,12(r5)
   25974:	21400215 	stw	r5,8(r4)
   25978:	18c00054 	ori	r3,r3,1
   2597c:	10c00115 	stw	r3,4(r2)
   25980:	9009883a 	mov	r4,r18
   25984:	002df780 	call	2df78 <__malloc_unlock>
   25988:	80800204 	addi	r2,r16,8
   2598c:	00006c06 	br	25b40 <_malloc_r+0x258>
   25990:	00bffe04 	movi	r2,-8
   25994:	88a2703a 	and	r17,r17,r2
   25998:	88006616 	blt	r17,zero,25b34 <_malloc_r+0x24c>
   2599c:	89406536 	bltu	r17,r5,25b34 <_malloc_r+0x24c>
   259a0:	002df540 	call	2df54 <__malloc_lock>
   259a4:	88807e28 	cmpgeui	r2,r17,504
   259a8:	10012226 	beq	r2,zero,25e34 <_malloc_r+0x54c>
   259ac:	8804d27a 	srli	r2,r17,9
   259b0:	10006f26 	beq	r2,zero,25b70 <_malloc_r+0x288>
   259b4:	10c00168 	cmpgeui	r3,r2,5
   259b8:	1800fe1e 	bne	r3,zero,25db4 <_malloc_r+0x4cc>
   259bc:	8804d1ba 	srli	r2,r17,6
   259c0:	11c00e44 	addi	r7,r2,57
   259c4:	380890fa 	slli	r4,r7,3
   259c8:	12000e04 	addi	r8,r2,56
   259cc:	04c000f4 	movhi	r19,3
   259d0:	9cc32904 	addi	r19,r19,3236
   259d4:	9909883a 	add	r4,r19,r4
   259d8:	24000117 	ldw	r16,4(r4)
   259dc:	213ffe04 	addi	r4,r4,-8
   259e0:	24000b26 	beq	r4,r16,25a10 <_malloc_r+0x128>
   259e4:	01bfff04 	movi	r6,-4
   259e8:	00000306 	br	259f8 <_malloc_r+0x110>
   259ec:	1800d60e 	bge	r3,zero,25d48 <_malloc_r+0x460>
   259f0:	84000317 	ldw	r16,12(r16)
   259f4:	24000626 	beq	r4,r16,25a10 <_malloc_r+0x128>
   259f8:	80800117 	ldw	r2,4(r16)
   259fc:	1184703a 	and	r2,r2,r6
   25a00:	1447c83a 	sub	r3,r2,r17
   25a04:	19400408 	cmpgei	r5,r3,16
   25a08:	283ff826 	beq	r5,zero,259ec <_malloc_r+0x104>
   25a0c:	400f883a 	mov	r7,r8
   25a10:	9c000417 	ldw	r16,16(r19)
   25a14:	024000f4 	movhi	r9,3
   25a18:	4a432b04 	addi	r9,r9,3244
   25a1c:	82405f26 	beq	r16,r9,25b9c <_malloc_r+0x2b4>
   25a20:	80c00117 	ldw	r3,4(r16)
   25a24:	00bfff04 	movi	r2,-4
   25a28:	1884703a 	and	r2,r3,r2
   25a2c:	1447c83a 	sub	r3,r2,r17
   25a30:	19000410 	cmplti	r4,r3,16
   25a34:	20010a26 	beq	r4,zero,25e60 <_malloc_r+0x578>
   25a38:	9a400515 	stw	r9,20(r19)
   25a3c:	9a400415 	stw	r9,16(r19)
   25a40:	1800ff0e 	bge	r3,zero,25e40 <_malloc_r+0x558>
   25a44:	10c08028 	cmpgeui	r3,r2,512
   25a48:	1800c11e 	bne	r3,zero,25d50 <_malloc_r+0x468>
   25a4c:	1006d0fa 	srli	r3,r2,3
   25a50:	1008d17a 	srli	r4,r2,5
   25a54:	00800044 	movi	r2,1
   25a58:	18c00044 	addi	r3,r3,1
   25a5c:	180690fa 	slli	r3,r3,3
   25a60:	99400117 	ldw	r5,4(r19)
   25a64:	1104983a 	sll	r2,r2,r4
   25a68:	98c7883a 	add	r3,r19,r3
   25a6c:	19000017 	ldw	r4,0(r3)
   25a70:	1144b03a 	or	r2,r2,r5
   25a74:	197ffe04 	addi	r5,r3,-8
   25a78:	81400315 	stw	r5,12(r16)
   25a7c:	81000215 	stw	r4,8(r16)
   25a80:	98800115 	stw	r2,4(r19)
   25a84:	1c000015 	stw	r16,0(r3)
   25a88:	24000315 	stw	r16,12(r4)
   25a8c:	3807d0ba 	srai	r3,r7,2
   25a90:	01000044 	movi	r4,1
   25a94:	20c8983a 	sll	r4,r4,r3
   25a98:	11004536 	bltu	r2,r4,25bb0 <_malloc_r+0x2c8>
   25a9c:	2086703a 	and	r3,r4,r2
   25aa0:	18000a1e 	bne	r3,zero,25acc <_malloc_r+0x1e4>
   25aa4:	00ffff04 	movi	r3,-4
   25aa8:	2109883a 	add	r4,r4,r4
   25aac:	38ce703a 	and	r7,r7,r3
   25ab0:	2086703a 	and	r3,r4,r2
   25ab4:	39c00104 	addi	r7,r7,4
   25ab8:	1800041e 	bne	r3,zero,25acc <_malloc_r+0x1e4>
   25abc:	2109883a 	add	r4,r4,r4
   25ac0:	2086703a 	and	r3,r4,r2
   25ac4:	39c00104 	addi	r7,r7,4
   25ac8:	183ffc26 	beq	r3,zero,25abc <_malloc_r+0x1d4>
   25acc:	02bfff04 	movi	r10,-4
   25ad0:	381690fa 	slli	r11,r7,3
   25ad4:	3819883a 	mov	r12,r7
   25ad8:	9ad7883a 	add	r11,r19,r11
   25adc:	5811883a 	mov	r8,r11
   25ae0:	40800317 	ldw	r2,12(r8)
   25ae4:	4080bc26 	beq	r8,r2,25dd8 <_malloc_r+0x4f0>
   25ae8:	10c00117 	ldw	r3,4(r2)
   25aec:	1021883a 	mov	r16,r2
   25af0:	10800317 	ldw	r2,12(r2)
   25af4:	1a86703a 	and	r3,r3,r10
   25af8:	1c4bc83a 	sub	r5,r3,r17
   25afc:	29800410 	cmplti	r6,r5,16
   25b00:	3000ba26 	beq	r6,zero,25dec <_malloc_r+0x504>
   25b04:	283ff716 	blt	r5,zero,25ae4 <_malloc_r+0x1fc>
   25b08:	80c7883a 	add	r3,r16,r3
   25b0c:	19400117 	ldw	r5,4(r3)
   25b10:	81800217 	ldw	r6,8(r16)
   25b14:	9009883a 	mov	r4,r18
   25b18:	29400054 	ori	r5,r5,1
   25b1c:	19400115 	stw	r5,4(r3)
   25b20:	30800315 	stw	r2,12(r6)
   25b24:	11800215 	stw	r6,8(r2)
   25b28:	002df780 	call	2df78 <__malloc_unlock>
   25b2c:	80800204 	addi	r2,r16,8
   25b30:	00000306 	br	25b40 <_malloc_r+0x258>
   25b34:	00800304 	movi	r2,12
   25b38:	90800015 	stw	r2,0(r18)
   25b3c:	0005883a 	mov	r2,zero
   25b40:	dfc00917 	ldw	ra,36(sp)
   25b44:	df000817 	ldw	fp,32(sp)
   25b48:	ddc00717 	ldw	r23,28(sp)
   25b4c:	dd800617 	ldw	r22,24(sp)
   25b50:	dd400517 	ldw	r21,20(sp)
   25b54:	dd000417 	ldw	r20,16(sp)
   25b58:	dcc00317 	ldw	r19,12(sp)
   25b5c:	dc800217 	ldw	r18,8(sp)
   25b60:	dc400117 	ldw	r17,4(sp)
   25b64:	dc000017 	ldw	r16,0(sp)
   25b68:	dec00a04 	addi	sp,sp,40
   25b6c:	f800283a 	ret
   25b70:	01008004 	movi	r4,512
   25b74:	01c01004 	movi	r7,64
   25b78:	02000fc4 	movi	r8,63
   25b7c:	003f9306 	br	259cc <_malloc_r+0xe4>
   25b80:	14000317 	ldw	r16,12(r2)
   25b84:	39c00084 	addi	r7,r7,2
   25b88:	143f721e 	bne	r2,r16,25954 <_malloc_r+0x6c>
   25b8c:	9c000417 	ldw	r16,16(r19)
   25b90:	024000f4 	movhi	r9,3
   25b94:	4a432b04 	addi	r9,r9,3244
   25b98:	827fa11e 	bne	r16,r9,25a20 <_malloc_r+0x138>
   25b9c:	3807d0ba 	srai	r3,r7,2
   25ba0:	01000044 	movi	r4,1
   25ba4:	98800117 	ldw	r2,4(r19)
   25ba8:	20c8983a 	sll	r4,r4,r3
   25bac:	113fbb2e 	bgeu	r2,r4,25a9c <_malloc_r+0x1b4>
   25bb0:	9c000217 	ldw	r16,8(r19)
   25bb4:	00bfff04 	movi	r2,-4
   25bb8:	85400117 	ldw	r21,4(r16)
   25bbc:	a8ac703a 	and	r22,r21,r2
   25bc0:	b4400336 	bltu	r22,r17,25bd0 <_malloc_r+0x2e8>
   25bc4:	b445c83a 	sub	r2,r22,r17
   25bc8:	10c00408 	cmpgei	r3,r2,16
   25bcc:	1800541e 	bne	r3,zero,25d20 <_malloc_r+0x438>
   25bd0:	008000f4 	movhi	r2,3
   25bd4:	10891a17 	ldw	r2,9320(r2)
   25bd8:	00c000f4 	movhi	r3,3
   25bdc:	1d503617 	ldw	r21,16600(r3)
   25be0:	10bfffd8 	cmpnei	r2,r2,-1
   25be4:	85b9883a 	add	fp,r16,r22
   25be8:	8d6b883a 	add	r21,r17,r21
   25bec:	1000d626 	beq	r2,zero,25f48 <_malloc_r+0x660>
   25bf0:	ad4403c4 	addi	r21,r21,4111
   25bf4:	00bc0004 	movi	r2,-4096
   25bf8:	a8aa703a 	and	r21,r21,r2
   25bfc:	a80b883a 	mov	r5,r21
   25c00:	9009883a 	mov	r4,r18
   25c04:	0027d000 	call	27d00 <_sbrk_r>
   25c08:	102f883a 	mov	r23,r2
   25c0c:	10bfffd8 	cmpnei	r2,r2,-1
   25c10:	1000a826 	beq	r2,zero,25eb4 <_malloc_r+0x5cc>
   25c14:	bf00a636 	bltu	r23,fp,25eb0 <_malloc_r+0x5c8>
   25c18:	008000f4 	movhi	r2,3
   25c1c:	15104017 	ldw	r20,16640(r2)
   25c20:	ad29883a 	add	r20,r21,r20
   25c24:	15104015 	stw	r20,16640(r2)
   25c28:	a007883a 	mov	r3,r20
   25c2c:	e5c0ec26 	beq	fp,r23,25fe0 <_malloc_r+0x6f8>
   25c30:	008000f4 	movhi	r2,3
   25c34:	10891a17 	ldw	r2,9320(r2)
   25c38:	10bfffd8 	cmpnei	r2,r2,-1
   25c3c:	1000ef26 	beq	r2,zero,25ffc <_malloc_r+0x714>
   25c40:	bf39c83a 	sub	fp,r23,fp
   25c44:	e0c7883a 	add	r3,fp,r3
   25c48:	008000f4 	movhi	r2,3
   25c4c:	10d04015 	stw	r3,16640(r2)
   25c50:	bf0001cc 	andi	fp,r23,7
   25c54:	e000c526 	beq	fp,zero,25f6c <_malloc_r+0x684>
   25c58:	bf2fc83a 	sub	r23,r23,fp
   25c5c:	bdc00204 	addi	r23,r23,8
   25c60:	05040204 	movi	r20,4104
   25c64:	a729c83a 	sub	r20,r20,fp
   25c68:	bd6b883a 	add	r21,r23,r21
   25c6c:	a569c83a 	sub	r20,r20,r21
   25c70:	a503ffcc 	andi	r20,r20,4095
   25c74:	a00b883a 	mov	r5,r20
   25c78:	9009883a 	mov	r4,r18
   25c7c:	0027d000 	call	27d00 <_sbrk_r>
   25c80:	10ffffe0 	cmpeqi	r3,r2,-1
   25c84:	1800f31e 	bne	r3,zero,26054 <_malloc_r+0x76c>
   25c88:	15c5c83a 	sub	r2,r2,r23
   25c8c:	152b883a 	add	r21,r2,r20
   25c90:	008000f4 	movhi	r2,3
   25c94:	11504017 	ldw	r5,16640(r2)
   25c98:	9dc00215 	stw	r23,8(r19)
   25c9c:	ad400054 	ori	r21,r21,1
   25ca0:	a169883a 	add	r20,r20,r5
   25ca4:	15104015 	stw	r20,16640(r2)
   25ca8:	bd400115 	stw	r21,4(r23)
   25cac:	84c0d626 	beq	r16,r19,26008 <_malloc_r+0x720>
   25cb0:	b0800428 	cmpgeui	r2,r22,16
   25cb4:	1000d626 	beq	r2,zero,26010 <_malloc_r+0x728>
   25cb8:	80c00117 	ldw	r3,4(r16)
   25cbc:	013ffe04 	movi	r4,-8
   25cc0:	b0bffd04 	addi	r2,r22,-12
   25cc4:	1104703a 	and	r2,r2,r4
   25cc8:	18c0004c 	andi	r3,r3,1
   25ccc:	1886b03a 	or	r3,r3,r2
   25cd0:	80c00115 	stw	r3,4(r16)
   25cd4:	01000144 	movi	r4,5
   25cd8:	8087883a 	add	r3,r16,r2
   25cdc:	19000115 	stw	r4,4(r3)
   25ce0:	19000215 	stw	r4,8(r3)
   25ce4:	10800428 	cmpgeui	r2,r2,16
   25ce8:	1000df1e 	bne	r2,zero,26068 <_malloc_r+0x780>
   25cec:	bd400117 	ldw	r21,4(r23)
   25cf0:	b821883a 	mov	r16,r23
   25cf4:	008000f4 	movhi	r2,3
   25cf8:	10903517 	ldw	r2,16596(r2)
   25cfc:	1500022e 	bgeu	r2,r20,25d08 <_malloc_r+0x420>
   25d00:	008000f4 	movhi	r2,3
   25d04:	15103515 	stw	r20,16596(r2)
   25d08:	008000f4 	movhi	r2,3
   25d0c:	10903417 	ldw	r2,16592(r2)
   25d10:	15006a2e 	bgeu	r2,r20,25ebc <_malloc_r+0x5d4>
   25d14:	008000f4 	movhi	r2,3
   25d18:	15103415 	stw	r20,16592(r2)
   25d1c:	00006706 	br	25ebc <_malloc_r+0x5d4>
   25d20:	88c00054 	ori	r3,r17,1
   25d24:	80c00115 	stw	r3,4(r16)
   25d28:	8463883a 	add	r17,r16,r17
   25d2c:	10800054 	ori	r2,r2,1
   25d30:	9c400215 	stw	r17,8(r19)
   25d34:	88800115 	stw	r2,4(r17)
   25d38:	9009883a 	mov	r4,r18
   25d3c:	002df780 	call	2df78 <__malloc_unlock>
   25d40:	80800204 	addi	r2,r16,8
   25d44:	003f7e06 	br	25b40 <_malloc_r+0x258>
   25d48:	81000317 	ldw	r4,12(r16)
   25d4c:	003f0506 	br	25964 <_malloc_r+0x7c>
   25d50:	1006d27a 	srli	r3,r2,9
   25d54:	19000168 	cmpgeui	r4,r3,5
   25d58:	20005026 	beq	r4,zero,25e9c <_malloc_r+0x5b4>
   25d5c:	19000568 	cmpgeui	r4,r3,21
   25d60:	20008c1e 	bne	r4,zero,25f94 <_malloc_r+0x6ac>
   25d64:	19401704 	addi	r5,r3,92
   25d68:	280a90fa 	slli	r5,r5,3
   25d6c:	190016c4 	addi	r4,r3,91
   25d70:	994b883a 	add	r5,r19,r5
   25d74:	28c00017 	ldw	r3,0(r5)
   25d78:	297ffe04 	addi	r5,r5,-8
   25d7c:	28c07426 	beq	r5,r3,25f50 <_malloc_r+0x668>
   25d80:	01bfff04 	movi	r6,-4
   25d84:	19000117 	ldw	r4,4(r3)
   25d88:	2188703a 	and	r4,r4,r6
   25d8c:	1100022e 	bgeu	r2,r4,25d98 <_malloc_r+0x4b0>
   25d90:	18c00217 	ldw	r3,8(r3)
   25d94:	28fffb1e 	bne	r5,r3,25d84 <_malloc_r+0x49c>
   25d98:	19400317 	ldw	r5,12(r3)
   25d9c:	98800117 	ldw	r2,4(r19)
   25da0:	81400315 	stw	r5,12(r16)
   25da4:	80c00215 	stw	r3,8(r16)
   25da8:	2c000215 	stw	r16,8(r5)
   25dac:	1c000315 	stw	r16,12(r3)
   25db0:	003f3606 	br	25a8c <_malloc_r+0x1a4>
   25db4:	10c00568 	cmpgeui	r3,r2,21
   25db8:	18004a26 	beq	r3,zero,25ee4 <_malloc_r+0x5fc>
   25dbc:	10c01568 	cmpgeui	r3,r2,85
   25dc0:	18007b1e 	bne	r3,zero,25fb0 <_malloc_r+0x6c8>
   25dc4:	8804d33a 	srli	r2,r17,12
   25dc8:	11c01bc4 	addi	r7,r2,111
   25dcc:	380890fa 	slli	r4,r7,3
   25dd0:	12001b84 	addi	r8,r2,110
   25dd4:	003efd06 	br	259cc <_malloc_r+0xe4>
   25dd8:	63000044 	addi	r12,r12,1
   25ddc:	608000cc 	andi	r2,r12,3
   25de0:	42000204 	addi	r8,r8,8
   25de4:	103f3e1e 	bne	r2,zero,25ae0 <_malloc_r+0x1f8>
   25de8:	00004506 	br	25f00 <_malloc_r+0x618>
   25dec:	81000217 	ldw	r4,8(r16)
   25df0:	89800054 	ori	r6,r17,1
   25df4:	81800115 	stw	r6,4(r16)
   25df8:	20800315 	stw	r2,12(r4)
   25dfc:	11000215 	stw	r4,8(r2)
   25e00:	8463883a 	add	r17,r16,r17
   25e04:	9c400515 	stw	r17,20(r19)
   25e08:	9c400415 	stw	r17,16(r19)
   25e0c:	28800054 	ori	r2,r5,1
   25e10:	88800115 	stw	r2,4(r17)
   25e14:	8a400315 	stw	r9,12(r17)
   25e18:	8a400215 	stw	r9,8(r17)
   25e1c:	80c7883a 	add	r3,r16,r3
   25e20:	19400015 	stw	r5,0(r3)
   25e24:	9009883a 	mov	r4,r18
   25e28:	002df780 	call	2df78 <__malloc_unlock>
   25e2c:	80800204 	addi	r2,r16,8
   25e30:	003f4306 	br	25b40 <_malloc_r+0x258>
   25e34:	880ed0fa 	srli	r7,r17,3
   25e38:	88800204 	addi	r2,r17,8
   25e3c:	003ebf06 	br	2593c <_malloc_r+0x54>
   25e40:	8085883a 	add	r2,r16,r2
   25e44:	10c00117 	ldw	r3,4(r2)
   25e48:	9009883a 	mov	r4,r18
   25e4c:	18c00054 	ori	r3,r3,1
   25e50:	10c00115 	stw	r3,4(r2)
   25e54:	002df780 	call	2df78 <__malloc_unlock>
   25e58:	80800204 	addi	r2,r16,8
   25e5c:	003f3806 	br	25b40 <_malloc_r+0x258>
   25e60:	89000054 	ori	r4,r17,1
   25e64:	81000115 	stw	r4,4(r16)
   25e68:	8463883a 	add	r17,r16,r17
   25e6c:	9c400515 	stw	r17,20(r19)
   25e70:	9c400415 	stw	r17,16(r19)
   25e74:	19000054 	ori	r4,r3,1
   25e78:	89000115 	stw	r4,4(r17)
   25e7c:	8085883a 	add	r2,r16,r2
   25e80:	8a400315 	stw	r9,12(r17)
   25e84:	8a400215 	stw	r9,8(r17)
   25e88:	10c00015 	stw	r3,0(r2)
   25e8c:	9009883a 	mov	r4,r18
   25e90:	002df780 	call	2df78 <__malloc_unlock>
   25e94:	80800204 	addi	r2,r16,8
   25e98:	003f2906 	br	25b40 <_malloc_r+0x258>
   25e9c:	1006d1ba 	srli	r3,r2,6
   25ea0:	19400e44 	addi	r5,r3,57
   25ea4:	280a90fa 	slli	r5,r5,3
   25ea8:	19000e04 	addi	r4,r3,56
   25eac:	003fb006 	br	25d70 <_malloc_r+0x488>
   25eb0:	84c04626 	beq	r16,r19,25fcc <_malloc_r+0x6e4>
   25eb4:	9c000217 	ldw	r16,8(r19)
   25eb8:	85400117 	ldw	r21,4(r16)
   25ebc:	00bfff04 	movi	r2,-4
   25ec0:	a8aa703a 	and	r21,r21,r2
   25ec4:	ac45c83a 	sub	r2,r21,r17
   25ec8:	ac400236 	bltu	r21,r17,25ed4 <_malloc_r+0x5ec>
   25ecc:	10c00408 	cmpgei	r3,r2,16
   25ed0:	183f931e 	bne	r3,zero,25d20 <_malloc_r+0x438>
   25ed4:	9009883a 	mov	r4,r18
   25ed8:	002df780 	call	2df78 <__malloc_unlock>
   25edc:	0005883a 	mov	r2,zero
   25ee0:	003f1706 	br	25b40 <_malloc_r+0x258>
   25ee4:	11c01704 	addi	r7,r2,92
   25ee8:	380890fa 	slli	r4,r7,3
   25eec:	120016c4 	addi	r8,r2,91
   25ef0:	003eb606 	br	259cc <_malloc_r+0xe4>
   25ef4:	58800217 	ldw	r2,8(r11)
   25ef8:	39ffffc4 	addi	r7,r7,-1
   25efc:	12c0701e 	bne	r2,r11,260c0 <_malloc_r+0x7d8>
   25f00:	388000cc 	andi	r2,r7,3
   25f04:	5afffe04 	addi	r11,r11,-8
   25f08:	103ffa1e 	bne	r2,zero,25ef4 <_malloc_r+0x60c>
   25f0c:	98c00117 	ldw	r3,4(r19)
   25f10:	0104303a 	nor	r2,zero,r4
   25f14:	10c4703a 	and	r2,r2,r3
   25f18:	98800115 	stw	r2,4(r19)
   25f1c:	2109883a 	add	r4,r4,r4
   25f20:	113f2336 	bltu	r2,r4,25bb0 <_malloc_r+0x2c8>
   25f24:	203f2226 	beq	r4,zero,25bb0 <_malloc_r+0x2c8>
   25f28:	2086703a 	and	r3,r4,r2
   25f2c:	1800041e 	bne	r3,zero,25f40 <_malloc_r+0x658>
   25f30:	2109883a 	add	r4,r4,r4
   25f34:	2086703a 	and	r3,r4,r2
   25f38:	63000104 	addi	r12,r12,4
   25f3c:	183ffc26 	beq	r3,zero,25f30 <_malloc_r+0x648>
   25f40:	600f883a 	mov	r7,r12
   25f44:	003ee206 	br	25ad0 <_malloc_r+0x1e8>
   25f48:	ad400404 	addi	r21,r21,16
   25f4c:	003f2b06 	br	25bfc <_malloc_r+0x314>
   25f50:	2009d0ba 	srai	r4,r4,2
   25f54:	00800044 	movi	r2,1
   25f58:	99800117 	ldw	r6,4(r19)
   25f5c:	1104983a 	sll	r2,r2,r4
   25f60:	1184b03a 	or	r2,r2,r6
   25f64:	98800115 	stw	r2,4(r19)
   25f68:	003f8d06 	br	25da0 <_malloc_r+0x4b8>
   25f6c:	bd69883a 	add	r20,r23,r21
   25f70:	0529c83a 	sub	r20,zero,r20
   25f74:	a503ffcc 	andi	r20,r20,4095
   25f78:	a00b883a 	mov	r5,r20
   25f7c:	9009883a 	mov	r4,r18
   25f80:	0027d000 	call	27d00 <_sbrk_r>
   25f84:	10ffffe0 	cmpeqi	r3,r2,-1
   25f88:	183f3f26 	beq	r3,zero,25c88 <_malloc_r+0x3a0>
   25f8c:	0029883a 	mov	r20,zero
   25f90:	003f3f06 	br	25c90 <_malloc_r+0x3a8>
   25f94:	19001568 	cmpgeui	r4,r3,85
   25f98:	2000201e 	bne	r4,zero,2601c <_malloc_r+0x734>
   25f9c:	1006d33a 	srli	r3,r2,12
   25fa0:	19401bc4 	addi	r5,r3,111
   25fa4:	280a90fa 	slli	r5,r5,3
   25fa8:	19001b84 	addi	r4,r3,110
   25fac:	003f7006 	br	25d70 <_malloc_r+0x488>
   25fb0:	10c05568 	cmpgeui	r3,r2,341
   25fb4:	1800201e 	bne	r3,zero,26038 <_malloc_r+0x750>
   25fb8:	8804d3fa 	srli	r2,r17,15
   25fbc:	11c01e04 	addi	r7,r2,120
   25fc0:	380890fa 	slli	r4,r7,3
   25fc4:	12001dc4 	addi	r8,r2,119
   25fc8:	003e8006 	br	259cc <_malloc_r+0xe4>
   25fcc:	008000f4 	movhi	r2,3
   25fd0:	10d04017 	ldw	r3,16640(r2)
   25fd4:	a8c7883a 	add	r3,r21,r3
   25fd8:	10d04015 	stw	r3,16640(r2)
   25fdc:	003f1406 	br	25c30 <_malloc_r+0x348>
   25fe0:	e083ffcc 	andi	r2,fp,4095
   25fe4:	103f121e 	bne	r2,zero,25c30 <_malloc_r+0x348>
   25fe8:	9c000217 	ldw	r16,8(r19)
   25fec:	b56b883a 	add	r21,r22,r21
   25ff0:	ad400054 	ori	r21,r21,1
   25ff4:	85400115 	stw	r21,4(r16)
   25ff8:	003f3e06 	br	25cf4 <_malloc_r+0x40c>
   25ffc:	008000f4 	movhi	r2,3
   26000:	15c91a15 	stw	r23,9320(r2)
   26004:	003f1206 	br	25c50 <_malloc_r+0x368>
   26008:	b821883a 	mov	r16,r23
   2600c:	003f3906 	br	25cf4 <_malloc_r+0x40c>
   26010:	00800044 	movi	r2,1
   26014:	b8800115 	stw	r2,4(r23)
   26018:	003fae06 	br	25ed4 <_malloc_r+0x5ec>
   2601c:	19005568 	cmpgeui	r4,r3,341
   26020:	2000191e 	bne	r4,zero,26088 <_malloc_r+0x7a0>
   26024:	1006d3fa 	srli	r3,r2,15
   26028:	19401e04 	addi	r5,r3,120
   2602c:	280a90fa 	slli	r5,r5,3
   26030:	19001dc4 	addi	r4,r3,119
   26034:	003f4e06 	br	25d70 <_malloc_r+0x488>
   26038:	10815568 	cmpgeui	r2,r2,1365
   2603c:	1000191e 	bne	r2,zero,260a4 <_malloc_r+0x7bc>
   26040:	8804d4ba 	srli	r2,r17,18
   26044:	11c01f44 	addi	r7,r2,125
   26048:	380890fa 	slli	r4,r7,3
   2604c:	12001f04 	addi	r8,r2,124
   26050:	003e5e06 	br	259cc <_malloc_r+0xe4>
   26054:	e73ffe04 	addi	fp,fp,-8
   26058:	af2b883a 	add	r21,r21,fp
   2605c:	adebc83a 	sub	r21,r21,r23
   26060:	0029883a 	mov	r20,zero
   26064:	003f0a06 	br	25c90 <_malloc_r+0x3a8>
   26068:	81400204 	addi	r5,r16,8
   2606c:	9009883a 	mov	r4,r18
   26070:	0024de80 	call	24de8 <_free_r>
   26074:	9c000217 	ldw	r16,8(r19)
   26078:	008000f4 	movhi	r2,3
   2607c:	15104017 	ldw	r20,16640(r2)
   26080:	85400117 	ldw	r21,4(r16)
   26084:	003f1b06 	br	25cf4 <_malloc_r+0x40c>
   26088:	18c15568 	cmpgeui	r3,r3,1365
   2608c:	1800091e 	bne	r3,zero,260b4 <_malloc_r+0x7cc>
   26090:	1006d4ba 	srli	r3,r2,18
   26094:	19401f44 	addi	r5,r3,125
   26098:	280a90fa 	slli	r5,r5,3
   2609c:	19001f04 	addi	r4,r3,124
   260a0:	003f3306 	br	25d70 <_malloc_r+0x488>
   260a4:	0100fe04 	movi	r4,1016
   260a8:	01c01fc4 	movi	r7,127
   260ac:	02001f84 	movi	r8,126
   260b0:	003e4606 	br	259cc <_malloc_r+0xe4>
   260b4:	0140fe04 	movi	r5,1016
   260b8:	01001f84 	movi	r4,126
   260bc:	003f2c06 	br	25d70 <_malloc_r+0x488>
   260c0:	98800117 	ldw	r2,4(r19)
   260c4:	003f9506 	br	25f1c <_malloc_r+0x634>

000260c8 <memchr>:
   260c8:	208000cc 	andi	r2,r4,3
   260cc:	280f883a 	mov	r7,r5
   260d0:	10000e26 	beq	r2,zero,2610c <memchr+0x44>
   260d4:	30bfffc4 	addi	r2,r6,-1
   260d8:	30001726 	beq	r6,zero,26138 <memchr+0x70>
   260dc:	29803fcc 	andi	r6,r5,255
   260e0:	00000606 	br	260fc <memchr+0x34>
   260e4:	21000044 	addi	r4,r4,1
   260e8:	20c000cc 	andi	r3,r4,3
   260ec:	18000826 	beq	r3,zero,26110 <memchr+0x48>
   260f0:	10bfffc4 	addi	r2,r2,-1
   260f4:	10ffffe0 	cmpeqi	r3,r2,-1
   260f8:	18000f1e 	bne	r3,zero,26138 <memchr+0x70>
   260fc:	20c00003 	ldbu	r3,0(r4)
   26100:	19bff81e 	bne	r3,r6,260e4 <memchr+0x1c>
   26104:	2005883a 	mov	r2,r4
   26108:	f800283a 	ret
   2610c:	3005883a 	mov	r2,r6
   26110:	10c00128 	cmpgeui	r3,r2,4
   26114:	18000a1e 	bne	r3,zero,26140 <memchr+0x78>
   26118:	10001f26 	beq	r2,zero,26198 <memchr+0xd0>
   2611c:	2087883a 	add	r3,r4,r2
   26120:	39803fcc 	andi	r6,r7,255
   26124:	2005883a 	mov	r2,r4
   26128:	11000003 	ldbu	r4,0(r2)
   2612c:	21bff626 	beq	r4,r6,26108 <memchr+0x40>
   26130:	10800044 	addi	r2,r2,1
   26134:	18bffc1e 	bne	r3,r2,26128 <memchr+0x60>
   26138:	0005883a 	mov	r2,zero
   2613c:	f800283a 	ret
   26140:	2810923a 	slli	r8,r5,8
   26144:	29403fcc 	andi	r5,r5,255
   26148:	027fbff4 	movhi	r9,65279
   2614c:	423fffcc 	andi	r8,r8,65535
   26150:	414ab03a 	or	r5,r8,r5
   26154:	2810943a 	slli	r8,r5,16
   26158:	01a02074 	movhi	r6,32897
   2615c:	4a7fbfc4 	addi	r9,r9,-257
   26160:	4150b03a 	or	r8,r8,r5
   26164:	31a02004 	addi	r6,r6,-32640
   26168:	20c00017 	ldw	r3,0(r4)
   2616c:	40c6f03a 	xor	r3,r8,r3
   26170:	1a4b883a 	add	r5,r3,r9
   26174:	00c6303a 	nor	r3,zero,r3
   26178:	28c6703a 	and	r3,r5,r3
   2617c:	1986703a 	and	r3,r3,r6
   26180:	183fe61e 	bne	r3,zero,2611c <memchr+0x54>
   26184:	10bfff04 	addi	r2,r2,-4
   26188:	10c00128 	cmpgeui	r3,r2,4
   2618c:	21000104 	addi	r4,r4,4
   26190:	183ff51e 	bne	r3,zero,26168 <memchr+0xa0>
   26194:	003fe006 	br	26118 <memchr+0x50>
   26198:	f800283a 	ret

0002619c <memcpy>:
   2619c:	30c00430 	cmpltui	r3,r6,16
   261a0:	2005883a 	mov	r2,r4
   261a4:	18002d1e 	bne	r3,zero,2625c <memcpy+0xc0>
   261a8:	2906b03a 	or	r3,r5,r4
   261ac:	18c000cc 	andi	r3,r3,3
   261b0:	1800351e 	bne	r3,zero,26288 <memcpy+0xec>
   261b4:	32fffc04 	addi	r11,r6,-16
   261b8:	5816d13a 	srli	r11,r11,4
   261bc:	280f883a 	mov	r7,r5
   261c0:	2007883a 	mov	r3,r4
   261c4:	5ac00044 	addi	r11,r11,1
   261c8:	5816913a 	slli	r11,r11,4
   261cc:	22d5883a 	add	r10,r4,r11
   261d0:	39000117 	ldw	r4,4(r7)
   261d4:	3a400017 	ldw	r9,0(r7)
   261d8:	3a000217 	ldw	r8,8(r7)
   261dc:	19000115 	stw	r4,4(r3)
   261e0:	39000317 	ldw	r4,12(r7)
   261e4:	1a400015 	stw	r9,0(r3)
   261e8:	1a000215 	stw	r8,8(r3)
   261ec:	19000315 	stw	r4,12(r3)
   261f0:	18c00404 	addi	r3,r3,16
   261f4:	39c00404 	addi	r7,r7,16
   261f8:	50fff51e 	bne	r10,r3,261d0 <memcpy+0x34>
   261fc:	3100030c 	andi	r4,r6,12
   26200:	2acb883a 	add	r5,r5,r11
   26204:	320003cc 	andi	r8,r6,15
   26208:	20002226 	beq	r4,zero,26294 <memcpy+0xf8>
   2620c:	280f883a 	mov	r7,r5
   26210:	1813883a 	mov	r9,r3
   26214:	39c00104 	addi	r7,r7,4
   26218:	3abfff17 	ldw	r10,-4(r7)
   2621c:	41c9c83a 	sub	r4,r8,r7
   26220:	2909883a 	add	r4,r5,r4
   26224:	4a800015 	stw	r10,0(r9)
   26228:	21000128 	cmpgeui	r4,r4,4
   2622c:	4a400104 	addi	r9,r9,4
   26230:	203ff81e 	bne	r4,zero,26214 <memcpy+0x78>
   26234:	413fff04 	addi	r4,r8,-4
   26238:	2008d0ba 	srli	r4,r4,2
   2623c:	318000cc 	andi	r6,r6,3
   26240:	31ffffc4 	addi	r7,r6,-1
   26244:	21000044 	addi	r4,r4,1
   26248:	200890ba 	slli	r4,r4,2
   2624c:	1907883a 	add	r3,r3,r4
   26250:	290b883a 	add	r5,r5,r4
   26254:	3000041e 	bne	r6,zero,26268 <memcpy+0xcc>
   26258:	f800283a 	ret
   2625c:	2007883a 	mov	r3,r4
   26260:	31ffffc4 	addi	r7,r6,-1
   26264:	303ffc26 	beq	r6,zero,26258 <memcpy+0xbc>
   26268:	39c00044 	addi	r7,r7,1
   2626c:	19cf883a 	add	r7,r3,r7
   26270:	29800003 	ldbu	r6,0(r5)
   26274:	18c00044 	addi	r3,r3,1
   26278:	29400044 	addi	r5,r5,1
   2627c:	19bfffc5 	stb	r6,-1(r3)
   26280:	38fffb1e 	bne	r7,r3,26270 <memcpy+0xd4>
   26284:	f800283a 	ret
   26288:	31ffffc4 	addi	r7,r6,-1
   2628c:	2007883a 	mov	r3,r4
   26290:	003ff506 	br	26268 <memcpy+0xcc>
   26294:	400d883a 	mov	r6,r8
   26298:	003ff106 	br	26260 <memcpy+0xc4>

0002629c <memmove>:
   2629c:	2005883a 	mov	r2,r4
   262a0:	29000a2e 	bgeu	r5,r4,262cc <memmove+0x30>
   262a4:	2989883a 	add	r4,r5,r6
   262a8:	1100082e 	bgeu	r2,r4,262cc <memmove+0x30>
   262ac:	1187883a 	add	r3,r2,r6
   262b0:	30003e26 	beq	r6,zero,263ac <memmove+0x110>
   262b4:	217fffc3 	ldbu	r5,-1(r4)
   262b8:	18ffffc4 	addi	r3,r3,-1
   262bc:	213fffc4 	addi	r4,r4,-1
   262c0:	19400005 	stb	r5,0(r3)
   262c4:	10fffb1e 	bne	r2,r3,262b4 <memmove+0x18>
   262c8:	f800283a 	ret
   262cc:	30c00430 	cmpltui	r3,r6,16
   262d0:	18000b26 	beq	r3,zero,26300 <memmove+0x64>
   262d4:	1007883a 	mov	r3,r2
   262d8:	31ffffc4 	addi	r7,r6,-1
   262dc:	30003726 	beq	r6,zero,263bc <memmove+0x120>
   262e0:	39c00044 	addi	r7,r7,1
   262e4:	29cf883a 	add	r7,r5,r7
   262e8:	29800003 	ldbu	r6,0(r5)
   262ec:	29400044 	addi	r5,r5,1
   262f0:	18c00044 	addi	r3,r3,1
   262f4:	19bfffc5 	stb	r6,-1(r3)
   262f8:	29fffb1e 	bne	r5,r7,262e8 <memmove+0x4c>
   262fc:	f800283a 	ret
   26300:	2886b03a 	or	r3,r5,r2
   26304:	18c000cc 	andi	r3,r3,3
   26308:	1800291e 	bne	r3,zero,263b0 <memmove+0x114>
   2630c:	327ffc04 	addi	r9,r6,-16
   26310:	4812d13a 	srli	r9,r9,4
   26314:	280f883a 	mov	r7,r5
   26318:	1007883a 	mov	r3,r2
   2631c:	4a400044 	addi	r9,r9,1
   26320:	4812913a 	slli	r9,r9,4
   26324:	1251883a 	add	r8,r2,r9
   26328:	39000017 	ldw	r4,0(r7)
   2632c:	39c00404 	addi	r7,r7,16
   26330:	18c00404 	addi	r3,r3,16
   26334:	193ffc15 	stw	r4,-16(r3)
   26338:	393ffd17 	ldw	r4,-12(r7)
   2633c:	193ffd15 	stw	r4,-12(r3)
   26340:	393ffe17 	ldw	r4,-8(r7)
   26344:	193ffe15 	stw	r4,-8(r3)
   26348:	393fff17 	ldw	r4,-4(r7)
   2634c:	193fff15 	stw	r4,-4(r3)
   26350:	40fff51e 	bne	r8,r3,26328 <memmove+0x8c>
   26354:	3100030c 	andi	r4,r6,12
   26358:	2a4b883a 	add	r5,r5,r9
   2635c:	320003cc 	andi	r8,r6,15
   26360:	20001726 	beq	r4,zero,263c0 <memmove+0x124>
   26364:	2813883a 	mov	r9,r5
   26368:	180f883a 	mov	r7,r3
   2636c:	4a800017 	ldw	r10,0(r9)
   26370:	39c00104 	addi	r7,r7,4
   26374:	41c9c83a 	sub	r4,r8,r7
   26378:	1909883a 	add	r4,r3,r4
   2637c:	21000128 	cmpgeui	r4,r4,4
   26380:	3abfff15 	stw	r10,-4(r7)
   26384:	4a400104 	addi	r9,r9,4
   26388:	203ff81e 	bne	r4,zero,2636c <memmove+0xd0>
   2638c:	413fff04 	addi	r4,r8,-4
   26390:	2008d0ba 	srli	r4,r4,2
   26394:	318000cc 	andi	r6,r6,3
   26398:	21000044 	addi	r4,r4,1
   2639c:	200890ba 	slli	r4,r4,2
   263a0:	1907883a 	add	r3,r3,r4
   263a4:	290b883a 	add	r5,r5,r4
   263a8:	003fcb06 	br	262d8 <memmove+0x3c>
   263ac:	f800283a 	ret
   263b0:	31ffffc4 	addi	r7,r6,-1
   263b4:	1007883a 	mov	r3,r2
   263b8:	003fc906 	br	262e0 <memmove+0x44>
   263bc:	f800283a 	ret
   263c0:	400d883a 	mov	r6,r8
   263c4:	003fc406 	br	262d8 <memmove+0x3c>

000263c8 <memset>:
   263c8:	20c000cc 	andi	r3,r4,3
   263cc:	2005883a 	mov	r2,r4
   263d0:	18003626 	beq	r3,zero,264ac <memset+0xe4>
   263d4:	31ffffc4 	addi	r7,r6,-1
   263d8:	30003326 	beq	r6,zero,264a8 <memset+0xe0>
   263dc:	2811883a 	mov	r8,r5
   263e0:	2007883a 	mov	r3,r4
   263e4:	00000306 	br	263f4 <memset+0x2c>
   263e8:	39ffffc4 	addi	r7,r7,-1
   263ec:	39bfffe0 	cmpeqi	r6,r7,-1
   263f0:	30002d1e 	bne	r6,zero,264a8 <memset+0xe0>
   263f4:	18c00044 	addi	r3,r3,1
   263f8:	198000cc 	andi	r6,r3,3
   263fc:	1a3fffc5 	stb	r8,-1(r3)
   26400:	303ff91e 	bne	r6,zero,263e8 <memset+0x20>
   26404:	39000130 	cmpltui	r4,r7,4
   26408:	2000221e 	bne	r4,zero,26494 <memset+0xcc>
   2640c:	29003fcc 	andi	r4,r5,255
   26410:	200c923a 	slli	r6,r4,8
   26414:	3a000430 	cmpltui	r8,r7,16
   26418:	3108b03a 	or	r4,r6,r4
   2641c:	200c943a 	slli	r6,r4,16
   26420:	310cb03a 	or	r6,r6,r4
   26424:	40000e1e 	bne	r8,zero,26460 <memset+0x98>
   26428:	393ffc04 	addi	r4,r7,-16
   2642c:	2008d13a 	srli	r4,r4,4
   26430:	21000044 	addi	r4,r4,1
   26434:	2008913a 	slli	r4,r4,4
   26438:	1909883a 	add	r4,r3,r4
   2643c:	19800015 	stw	r6,0(r3)
   26440:	19800115 	stw	r6,4(r3)
   26444:	19800215 	stw	r6,8(r3)
   26448:	19800315 	stw	r6,12(r3)
   2644c:	18c00404 	addi	r3,r3,16
   26450:	20fffa1e 	bne	r4,r3,2643c <memset+0x74>
   26454:	3900030c 	andi	r4,r7,12
   26458:	39c003cc 	andi	r7,r7,15
   2645c:	20000d26 	beq	r4,zero,26494 <memset+0xcc>
   26460:	1811883a 	mov	r8,r3
   26464:	42000104 	addi	r8,r8,4
   26468:	3a09c83a 	sub	r4,r7,r8
   2646c:	1909883a 	add	r4,r3,r4
   26470:	21000128 	cmpgeui	r4,r4,4
   26474:	41bfff15 	stw	r6,-4(r8)
   26478:	203ffa1e 	bne	r4,zero,26464 <memset+0x9c>
   2647c:	393fff04 	addi	r4,r7,-4
   26480:	2008d0ba 	srli	r4,r4,2
   26484:	39c000cc 	andi	r7,r7,3
   26488:	21000044 	addi	r4,r4,1
   2648c:	200890ba 	slli	r4,r4,2
   26490:	1907883a 	add	r3,r3,r4
   26494:	38000426 	beq	r7,zero,264a8 <memset+0xe0>
   26498:	19cf883a 	add	r7,r3,r7
   2649c:	18c00044 	addi	r3,r3,1
   264a0:	197fffc5 	stb	r5,-1(r3)
   264a4:	38fffd1e 	bne	r7,r3,2649c <memset+0xd4>
   264a8:	f800283a 	ret
   264ac:	2007883a 	mov	r3,r4
   264b0:	300f883a 	mov	r7,r6
   264b4:	003fd306 	br	26404 <memset+0x3c>

000264b8 <_Balloc>:
   264b8:	20801317 	ldw	r2,76(r4)
   264bc:	defffc04 	addi	sp,sp,-16
   264c0:	dc400115 	stw	r17,4(sp)
   264c4:	dc000015 	stw	r16,0(sp)
   264c8:	dfc00315 	stw	ra,12(sp)
   264cc:	dc800215 	stw	r18,8(sp)
   264d0:	2021883a 	mov	r16,r4
   264d4:	2823883a 	mov	r17,r5
   264d8:	10000e26 	beq	r2,zero,26514 <_Balloc+0x5c>
   264dc:	880690ba 	slli	r3,r17,2
   264e0:	10c7883a 	add	r3,r2,r3
   264e4:	18800017 	ldw	r2,0(r3)
   264e8:	10001126 	beq	r2,zero,26530 <_Balloc+0x78>
   264ec:	11000017 	ldw	r4,0(r2)
   264f0:	19000015 	stw	r4,0(r3)
   264f4:	10000415 	stw	zero,16(r2)
   264f8:	10000315 	stw	zero,12(r2)
   264fc:	dfc00317 	ldw	ra,12(sp)
   26500:	dc800217 	ldw	r18,8(sp)
   26504:	dc400117 	ldw	r17,4(sp)
   26508:	dc000017 	ldw	r16,0(sp)
   2650c:	dec00404 	addi	sp,sp,16
   26510:	f800283a 	ret
   26514:	01800844 	movi	r6,33
   26518:	01400104 	movi	r5,4
   2651c:	00296280 	call	29628 <_calloc_r>
   26520:	80801315 	stw	r2,76(r16)
   26524:	103fed1e 	bne	r2,zero,264dc <_Balloc+0x24>
   26528:	0005883a 	mov	r2,zero
   2652c:	003ff306 	br	264fc <_Balloc+0x44>
   26530:	04800044 	movi	r18,1
   26534:	9464983a 	sll	r18,r18,r17
   26538:	01400044 	movi	r5,1
   2653c:	8009883a 	mov	r4,r16
   26540:	91800144 	addi	r6,r18,5
   26544:	300c90ba 	slli	r6,r6,2
   26548:	00296280 	call	29628 <_calloc_r>
   2654c:	103ff626 	beq	r2,zero,26528 <_Balloc+0x70>
   26550:	14400115 	stw	r17,4(r2)
   26554:	14800215 	stw	r18,8(r2)
   26558:	003fe606 	br	264f4 <_Balloc+0x3c>

0002655c <_Bfree>:
   2655c:	28000726 	beq	r5,zero,2657c <_Bfree+0x20>
   26560:	28c00117 	ldw	r3,4(r5)
   26564:	20801317 	ldw	r2,76(r4)
   26568:	180690ba 	slli	r3,r3,2
   2656c:	10c5883a 	add	r2,r2,r3
   26570:	10c00017 	ldw	r3,0(r2)
   26574:	28c00015 	stw	r3,0(r5)
   26578:	11400015 	stw	r5,0(r2)
   2657c:	f800283a 	ret

00026580 <__multadd>:
   26580:	defff704 	addi	sp,sp,-36
   26584:	dc800215 	stw	r18,8(sp)
   26588:	2c800417 	ldw	r18,16(r5)
   2658c:	ddc00715 	stw	r23,28(sp)
   26590:	dd800615 	stw	r22,24(sp)
   26594:	dd400515 	stw	r21,20(sp)
   26598:	dd000415 	stw	r20,16(sp)
   2659c:	dcc00315 	stw	r19,12(sp)
   265a0:	dc400115 	stw	r17,4(sp)
   265a4:	dfc00815 	stw	ra,32(sp)
   265a8:	dc000015 	stw	r16,0(sp)
   265ac:	2827883a 	mov	r19,r5
   265b0:	2029883a 	mov	r20,r4
   265b4:	302b883a 	mov	r21,r6
   265b8:	3823883a 	mov	r17,r7
   265bc:	2d800504 	addi	r22,r5,20
   265c0:	002f883a 	mov	r23,zero
   265c4:	b4000017 	ldw	r16,0(r22)
   265c8:	a80b883a 	mov	r5,r21
   265cc:	b5800104 	addi	r22,r22,4
   265d0:	813fffcc 	andi	r4,r16,65535
   265d4:	002af640 	call	2af64 <__mulsi3>
   265d8:	8008d43a 	srli	r4,r16,16
   265dc:	a80b883a 	mov	r5,r21
   265e0:	1461883a 	add	r16,r2,r17
   265e4:	002af640 	call	2af64 <__mulsi3>
   265e8:	800ed43a 	srli	r7,r16,16
   265ec:	843fffcc 	andi	r16,r16,65535
   265f0:	bdc00044 	addi	r23,r23,1
   265f4:	11c5883a 	add	r2,r2,r7
   265f8:	1006943a 	slli	r3,r2,16
   265fc:	1022d43a 	srli	r17,r2,16
   26600:	1c21883a 	add	r16,r3,r16
   26604:	b43fff15 	stw	r16,-4(r22)
   26608:	bcbfee16 	blt	r23,r18,265c4 <__multadd+0x44>
   2660c:	88000826 	beq	r17,zero,26630 <__multadd+0xb0>
   26610:	98800217 	ldw	r2,8(r19)
   26614:	9080120e 	bge	r18,r2,26660 <__multadd+0xe0>
   26618:	90800144 	addi	r2,r18,5
   2661c:	100490ba 	slli	r2,r2,2
   26620:	94800044 	addi	r18,r18,1
   26624:	9885883a 	add	r2,r19,r2
   26628:	14400015 	stw	r17,0(r2)
   2662c:	9c800415 	stw	r18,16(r19)
   26630:	9805883a 	mov	r2,r19
   26634:	dfc00817 	ldw	ra,32(sp)
   26638:	ddc00717 	ldw	r23,28(sp)
   2663c:	dd800617 	ldw	r22,24(sp)
   26640:	dd400517 	ldw	r21,20(sp)
   26644:	dd000417 	ldw	r20,16(sp)
   26648:	dcc00317 	ldw	r19,12(sp)
   2664c:	dc800217 	ldw	r18,8(sp)
   26650:	dc400117 	ldw	r17,4(sp)
   26654:	dc000017 	ldw	r16,0(sp)
   26658:	dec00904 	addi	sp,sp,36
   2665c:	f800283a 	ret
   26660:	99400117 	ldw	r5,4(r19)
   26664:	a009883a 	mov	r4,r20
   26668:	29400044 	addi	r5,r5,1
   2666c:	00264b80 	call	264b8 <_Balloc>
   26670:	1021883a 	mov	r16,r2
   26674:	10001226 	beq	r2,zero,266c0 <__multadd+0x140>
   26678:	99800417 	ldw	r6,16(r19)
   2667c:	99400304 	addi	r5,r19,12
   26680:	11000304 	addi	r4,r2,12
   26684:	31800084 	addi	r6,r6,2
   26688:	300c90ba 	slli	r6,r6,2
   2668c:	002619c0 	call	2619c <memcpy>
   26690:	98000926 	beq	r19,zero,266b8 <__multadd+0x138>
   26694:	98c00117 	ldw	r3,4(r19)
   26698:	a0801317 	ldw	r2,76(r20)
   2669c:	180690ba 	slli	r3,r3,2
   266a0:	10c5883a 	add	r2,r2,r3
   266a4:	10c00017 	ldw	r3,0(r2)
   266a8:	98c00015 	stw	r3,0(r19)
   266ac:	14c00015 	stw	r19,0(r2)
   266b0:	8027883a 	mov	r19,r16
   266b4:	003fd806 	br	26618 <__multadd+0x98>
   266b8:	8027883a 	mov	r19,r16
   266bc:	003fd606 	br	26618 <__multadd+0x98>
   266c0:	01c000f4 	movhi	r7,3
   266c4:	010000f4 	movhi	r4,3
   266c8:	39c0a004 	addi	r7,r7,640
   266cc:	000d883a 	mov	r6,zero
   266d0:	01402d44 	movi	r5,181
   266d4:	2100b504 	addi	r4,r4,724
   266d8:	00295b00 	call	295b0 <__assert_func>

000266dc <__s2b>:
   266dc:	defff904 	addi	sp,sp,-28
   266e0:	dc800215 	stw	r18,8(sp)
   266e4:	dc000015 	stw	r16,0(sp)
   266e8:	2025883a 	mov	r18,r4
   266ec:	2821883a 	mov	r16,r5
   266f0:	39000204 	addi	r4,r7,8
   266f4:	01400244 	movi	r5,9
   266f8:	dcc00315 	stw	r19,12(sp)
   266fc:	dc400115 	stw	r17,4(sp)
   26700:	dfc00615 	stw	ra,24(sp)
   26704:	3823883a 	mov	r17,r7
   26708:	dd400515 	stw	r21,20(sp)
   2670c:	dd000415 	stw	r20,16(sp)
   26710:	3027883a 	mov	r19,r6
   26714:	002adb00 	call	2adb0 <__divsi3>
   26718:	88c00290 	cmplti	r3,r17,10
   2671c:	1800341e 	bne	r3,zero,267f0 <__s2b+0x114>
   26720:	00c00044 	movi	r3,1
   26724:	000b883a 	mov	r5,zero
   26728:	18c7883a 	add	r3,r3,r3
   2672c:	29400044 	addi	r5,r5,1
   26730:	18bffd16 	blt	r3,r2,26728 <__s2b+0x4c>
   26734:	9009883a 	mov	r4,r18
   26738:	00264b80 	call	264b8 <_Balloc>
   2673c:	100b883a 	mov	r5,r2
   26740:	10002d26 	beq	r2,zero,267f8 <__s2b+0x11c>
   26744:	d8800717 	ldw	r2,28(sp)
   26748:	28800515 	stw	r2,20(r5)
   2674c:	00800044 	movi	r2,1
   26750:	28800415 	stw	r2,16(r5)
   26754:	98800290 	cmplti	r2,r19,10
   26758:	1000221e 	bne	r2,zero,267e4 <__s2b+0x108>
   2675c:	85400244 	addi	r21,r16,9
   26760:	a829883a 	mov	r20,r21
   26764:	84e1883a 	add	r16,r16,r19
   26768:	a1c00007 	ldb	r7,0(r20)
   2676c:	01800284 	movi	r6,10
   26770:	9009883a 	mov	r4,r18
   26774:	39fff404 	addi	r7,r7,-48
   26778:	00265800 	call	26580 <__multadd>
   2677c:	a5000044 	addi	r20,r20,1
   26780:	100b883a 	mov	r5,r2
   26784:	a43ff81e 	bne	r20,r16,26768 <__s2b+0x8c>
   26788:	9c3ffe04 	addi	r16,r19,-8
   2678c:	ac21883a 	add	r16,r21,r16
   26790:	9c400a0e 	bge	r19,r17,267bc <__s2b+0xe0>
   26794:	8ce3c83a 	sub	r17,r17,r19
   26798:	8463883a 	add	r17,r16,r17
   2679c:	81c00007 	ldb	r7,0(r16)
   267a0:	01800284 	movi	r6,10
   267a4:	9009883a 	mov	r4,r18
   267a8:	39fff404 	addi	r7,r7,-48
   267ac:	00265800 	call	26580 <__multadd>
   267b0:	84000044 	addi	r16,r16,1
   267b4:	100b883a 	mov	r5,r2
   267b8:	8c3ff81e 	bne	r17,r16,2679c <__s2b+0xc0>
   267bc:	2805883a 	mov	r2,r5
   267c0:	dfc00617 	ldw	ra,24(sp)
   267c4:	dd400517 	ldw	r21,20(sp)
   267c8:	dd000417 	ldw	r20,16(sp)
   267cc:	dcc00317 	ldw	r19,12(sp)
   267d0:	dc800217 	ldw	r18,8(sp)
   267d4:	dc400117 	ldw	r17,4(sp)
   267d8:	dc000017 	ldw	r16,0(sp)
   267dc:	dec00704 	addi	sp,sp,28
   267e0:	f800283a 	ret
   267e4:	84000284 	addi	r16,r16,10
   267e8:	04c00244 	movi	r19,9
   267ec:	003fe806 	br	26790 <__s2b+0xb4>
   267f0:	000b883a 	mov	r5,zero
   267f4:	003fcf06 	br	26734 <__s2b+0x58>
   267f8:	01c000f4 	movhi	r7,3
   267fc:	010000f4 	movhi	r4,3
   26800:	39c0a004 	addi	r7,r7,640
   26804:	000d883a 	mov	r6,zero
   26808:	01403384 	movi	r5,206
   2680c:	2100b504 	addi	r4,r4,724
   26810:	00295b00 	call	295b0 <__assert_func>

00026814 <__hi0bits>:
   26814:	20bfffec 	andhi	r2,r4,65535
   26818:	1000131e 	bne	r2,zero,26868 <__hi0bits+0x54>
   2681c:	2008943a 	slli	r4,r4,16
   26820:	00800404 	movi	r2,16
   26824:	20ffc02c 	andhi	r3,r4,65280
   26828:	1800021e 	bne	r3,zero,26834 <__hi0bits+0x20>
   2682c:	2008923a 	slli	r4,r4,8
   26830:	10800204 	addi	r2,r2,8
   26834:	20fc002c 	andhi	r3,r4,61440
   26838:	1800021e 	bne	r3,zero,26844 <__hi0bits+0x30>
   2683c:	2008913a 	slli	r4,r4,4
   26840:	10800104 	addi	r2,r2,4
   26844:	20f0002c 	andhi	r3,r4,49152
   26848:	1800021e 	bne	r3,zero,26854 <__hi0bits+0x40>
   2684c:	200890ba 	slli	r4,r4,2
   26850:	10800084 	addi	r2,r2,2
   26854:	20000316 	blt	r4,zero,26864 <__hi0bits+0x50>
   26858:	2110002c 	andhi	r4,r4,16384
   2685c:	10800044 	addi	r2,r2,1
   26860:	20000326 	beq	r4,zero,26870 <__hi0bits+0x5c>
   26864:	f800283a 	ret
   26868:	0005883a 	mov	r2,zero
   2686c:	003fed06 	br	26824 <__hi0bits+0x10>
   26870:	00800804 	movi	r2,32
   26874:	f800283a 	ret

00026878 <__lo0bits>:
   26878:	20c00017 	ldw	r3,0(r4)
   2687c:	188001cc 	andi	r2,r3,7
   26880:	10000826 	beq	r2,zero,268a4 <__lo0bits+0x2c>
   26884:	1880004c 	andi	r2,r3,1
   26888:	10001f1e 	bne	r2,zero,26908 <__lo0bits+0x90>
   2688c:	1880008c 	andi	r2,r3,2
   26890:	10002126 	beq	r2,zero,26918 <__lo0bits+0xa0>
   26894:	1806d07a 	srli	r3,r3,1
   26898:	00800044 	movi	r2,1
   2689c:	20c00015 	stw	r3,0(r4)
   268a0:	f800283a 	ret
   268a4:	18bfffcc 	andi	r2,r3,65535
   268a8:	10001426 	beq	r2,zero,268fc <__lo0bits+0x84>
   268ac:	0005883a 	mov	r2,zero
   268b0:	19403fcc 	andi	r5,r3,255
   268b4:	2800021e 	bne	r5,zero,268c0 <__lo0bits+0x48>
   268b8:	1806d23a 	srli	r3,r3,8
   268bc:	10800204 	addi	r2,r2,8
   268c0:	194003cc 	andi	r5,r3,15
   268c4:	2800021e 	bne	r5,zero,268d0 <__lo0bits+0x58>
   268c8:	1806d13a 	srli	r3,r3,4
   268cc:	10800104 	addi	r2,r2,4
   268d0:	194000cc 	andi	r5,r3,3
   268d4:	2800021e 	bne	r5,zero,268e0 <__lo0bits+0x68>
   268d8:	1806d0ba 	srli	r3,r3,2
   268dc:	10800084 	addi	r2,r2,2
   268e0:	1940004c 	andi	r5,r3,1
   268e4:	2800031e 	bne	r5,zero,268f4 <__lo0bits+0x7c>
   268e8:	1806d07a 	srli	r3,r3,1
   268ec:	10800044 	addi	r2,r2,1
   268f0:	18000726 	beq	r3,zero,26910 <__lo0bits+0x98>
   268f4:	20c00015 	stw	r3,0(r4)
   268f8:	f800283a 	ret
   268fc:	1806d43a 	srli	r3,r3,16
   26900:	00800404 	movi	r2,16
   26904:	003fea06 	br	268b0 <__lo0bits+0x38>
   26908:	0005883a 	mov	r2,zero
   2690c:	f800283a 	ret
   26910:	00800804 	movi	r2,32
   26914:	f800283a 	ret
   26918:	1806d0ba 	srli	r3,r3,2
   2691c:	00800084 	movi	r2,2
   26920:	20c00015 	stw	r3,0(r4)
   26924:	f800283a 	ret

00026928 <__i2b>:
   26928:	defffe04 	addi	sp,sp,-8
   2692c:	dc000015 	stw	r16,0(sp)
   26930:	2821883a 	mov	r16,r5
   26934:	01400044 	movi	r5,1
   26938:	dfc00115 	stw	ra,4(sp)
   2693c:	00264b80 	call	264b8 <_Balloc>
   26940:	10000726 	beq	r2,zero,26960 <__i2b+0x38>
   26944:	01000044 	movi	r4,1
   26948:	14000515 	stw	r16,20(r2)
   2694c:	11000415 	stw	r4,16(r2)
   26950:	dfc00117 	ldw	ra,4(sp)
   26954:	dc000017 	ldw	r16,0(sp)
   26958:	dec00204 	addi	sp,sp,8
   2695c:	f800283a 	ret
   26960:	01c000f4 	movhi	r7,3
   26964:	010000f4 	movhi	r4,3
   26968:	39c0a004 	addi	r7,r7,640
   2696c:	000d883a 	mov	r6,zero
   26970:	01405004 	movi	r5,320
   26974:	2100b504 	addi	r4,r4,724
   26978:	00295b00 	call	295b0 <__assert_func>

0002697c <__multiply>:
   2697c:	defff004 	addi	sp,sp,-64
   26980:	dd800c15 	stw	r22,48(sp)
   26984:	dc400715 	stw	r17,28(sp)
   26988:	2d800417 	ldw	r22,16(r5)
   2698c:	34400417 	ldw	r17,16(r6)
   26990:	dc800815 	stw	r18,32(sp)
   26994:	dc000615 	stw	r16,24(sp)
   26998:	dfc00f15 	stw	ra,60(sp)
   2699c:	df000e15 	stw	fp,56(sp)
   269a0:	ddc00d15 	stw	r23,52(sp)
   269a4:	dd400b15 	stw	r21,44(sp)
   269a8:	dd000a15 	stw	r20,40(sp)
   269ac:	dcc00915 	stw	r19,36(sp)
   269b0:	2825883a 	mov	r18,r5
   269b4:	3021883a 	mov	r16,r6
   269b8:	b4400516 	blt	r22,r17,269d0 <__multiply+0x54>
   269bc:	8807883a 	mov	r3,r17
   269c0:	2821883a 	mov	r16,r5
   269c4:	b023883a 	mov	r17,r22
   269c8:	3025883a 	mov	r18,r6
   269cc:	182d883a 	mov	r22,r3
   269d0:	80800217 	ldw	r2,8(r16)
   269d4:	8d87883a 	add	r3,r17,r22
   269d8:	d8c00115 	stw	r3,4(sp)
   269dc:	81400117 	ldw	r5,4(r16)
   269e0:	10c0010e 	bge	r2,r3,269e8 <__multiply+0x6c>
   269e4:	29400044 	addi	r5,r5,1
   269e8:	00264b80 	call	264b8 <_Balloc>
   269ec:	d8800515 	stw	r2,20(sp)
   269f0:	10008626 	beq	r2,zero,26c0c <__multiply+0x290>
   269f4:	d8800117 	ldw	r2,4(sp)
   269f8:	102690ba 	slli	r19,r2,2
   269fc:	d8800517 	ldw	r2,20(sp)
   26a00:	10c00504 	addi	r3,r2,20
   26a04:	d8c00015 	stw	r3,0(sp)
   26a08:	1ce7883a 	add	r19,r3,r19
   26a0c:	1805883a 	mov	r2,r3
   26a10:	1cc0032e 	bgeu	r3,r19,26a20 <__multiply+0xa4>
   26a14:	10000015 	stw	zero,0(r2)
   26a18:	10800104 	addi	r2,r2,4
   26a1c:	14fffd36 	bltu	r2,r19,26a14 <__multiply+0x98>
   26a20:	b02c90ba 	slli	r22,r22,2
   26a24:	882290ba 	slli	r17,r17,2
   26a28:	94800504 	addi	r18,r18,20
   26a2c:	80800504 	addi	r2,r16,20
   26a30:	9587883a 	add	r3,r18,r22
   26a34:	d8800315 	stw	r2,12(sp)
   26a38:	d8c00215 	stw	r3,8(sp)
   26a3c:	1463883a 	add	r17,r2,r17
   26a40:	90c0342e 	bgeu	r18,r3,26b14 <__multiply+0x198>
   26a44:	80800544 	addi	r2,r16,21
   26a48:	88804b36 	bltu	r17,r2,26b78 <__multiply+0x1fc>
   26a4c:	8c05c83a 	sub	r2,r17,r16
   26a50:	10bffac4 	addi	r2,r2,-21
   26a54:	1004d0ba 	srli	r2,r2,2
   26a58:	10800044 	addi	r2,r2,1
   26a5c:	100490ba 	slli	r2,r2,2
   26a60:	d8800415 	stw	r2,16(sp)
   26a64:	00000606 	br	26a80 <__multiply+0x104>
   26a68:	d8800017 	ldw	r2,0(sp)
   26a6c:	94800104 	addi	r18,r18,4
   26a70:	10800104 	addi	r2,r2,4
   26a74:	d8800015 	stw	r2,0(sp)
   26a78:	d8800217 	ldw	r2,8(sp)
   26a7c:	9080252e 	bgeu	r18,r2,26b14 <__multiply+0x198>
   26a80:	90800017 	ldw	r2,0(r18)
   26a84:	15ffffcc 	andi	r23,r2,65535
   26a88:	b800401e 	bne	r23,zero,26b8c <__multiply+0x210>
   26a8c:	1028d43a 	srli	r20,r2,16
   26a90:	a03ff526 	beq	r20,zero,26a68 <__multiply+0xec>
   26a94:	dd400017 	ldw	r21,0(sp)
   26a98:	dd800317 	ldw	r22,12(sp)
   26a9c:	0039883a 	mov	fp,zero
   26aa0:	adc00017 	ldw	r23,0(r21)
   26aa4:	b821883a 	mov	r16,r23
   26aa8:	b100000b 	ldhu	r4,0(r22)
   26aac:	a00b883a 	mov	r5,r20
   26ab0:	ad400104 	addi	r21,r21,4
   26ab4:	002af640 	call	2af64 <__mulsi3>
   26ab8:	800cd43a 	srli	r6,r16,16
   26abc:	b8ffffcc 	andi	r3,r23,65535
   26ac0:	b5800104 	addi	r22,r22,4
   26ac4:	118d883a 	add	r6,r2,r6
   26ac8:	3739883a 	add	fp,r6,fp
   26acc:	e004943a 	slli	r2,fp,16
   26ad0:	ac000017 	ldw	r16,0(r21)
   26ad4:	a00b883a 	mov	r5,r20
   26ad8:	10c6b03a 	or	r3,r2,r3
   26adc:	a8ffff15 	stw	r3,-4(r21)
   26ae0:	b13fff8b 	ldhu	r4,-2(r22)
   26ae4:	002af640 	call	2af64 <__mulsi3>
   26ae8:	e00cd43a 	srli	r6,fp,16
   26aec:	80ffffcc 	andi	r3,r16,65535
   26af0:	10c7883a 	add	r3,r2,r3
   26af4:	19af883a 	add	r23,r3,r6
   26af8:	b838d43a 	srli	fp,r23,16
   26afc:	b47fea36 	bltu	r22,r17,26aa8 <__multiply+0x12c>
   26b00:	d8800017 	ldw	r2,0(sp)
   26b04:	d8c00417 	ldw	r3,16(sp)
   26b08:	10c5883a 	add	r2,r2,r3
   26b0c:	15c00015 	stw	r23,0(r2)
   26b10:	003fd506 	br	26a68 <__multiply+0xec>
   26b14:	d8800117 	ldw	r2,4(sp)
   26b18:	00800516 	blt	zero,r2,26b30 <__multiply+0x1b4>
   26b1c:	00000706 	br	26b3c <__multiply+0x1c0>
   26b20:	d8800117 	ldw	r2,4(sp)
   26b24:	10bfffc4 	addi	r2,r2,-1
   26b28:	d8800115 	stw	r2,4(sp)
   26b2c:	10000326 	beq	r2,zero,26b3c <__multiply+0x1c0>
   26b30:	98bfff17 	ldw	r2,-4(r19)
   26b34:	9cffff04 	addi	r19,r19,-4
   26b38:	103ff926 	beq	r2,zero,26b20 <__multiply+0x1a4>
   26b3c:	d8800517 	ldw	r2,20(sp)
   26b40:	d8c00117 	ldw	r3,4(sp)
   26b44:	10c00415 	stw	r3,16(r2)
   26b48:	dfc00f17 	ldw	ra,60(sp)
   26b4c:	df000e17 	ldw	fp,56(sp)
   26b50:	ddc00d17 	ldw	r23,52(sp)
   26b54:	dd800c17 	ldw	r22,48(sp)
   26b58:	dd400b17 	ldw	r21,44(sp)
   26b5c:	dd000a17 	ldw	r20,40(sp)
   26b60:	dcc00917 	ldw	r19,36(sp)
   26b64:	dc800817 	ldw	r18,32(sp)
   26b68:	dc400717 	ldw	r17,28(sp)
   26b6c:	dc000617 	ldw	r16,24(sp)
   26b70:	dec01004 	addi	sp,sp,64
   26b74:	f800283a 	ret
   26b78:	00800104 	movi	r2,4
   26b7c:	d8800415 	stw	r2,16(sp)
   26b80:	90800017 	ldw	r2,0(r18)
   26b84:	15ffffcc 	andi	r23,r2,65535
   26b88:	b83fc026 	beq	r23,zero,26a8c <__multiply+0x110>
   26b8c:	dd800017 	ldw	r22,0(sp)
   26b90:	dd400317 	ldw	r21,12(sp)
   26b94:	0029883a 	mov	r20,zero
   26b98:	af000017 	ldw	fp,0(r21)
   26b9c:	b4000017 	ldw	r16,0(r22)
   26ba0:	b80b883a 	mov	r5,r23
   26ba4:	e13fffcc 	andi	r4,fp,65535
   26ba8:	002af640 	call	2af64 <__mulsi3>
   26bac:	e008d43a 	srli	r4,fp,16
   26bb0:	823fffcc 	andi	r8,r16,65535
   26bb4:	1205883a 	add	r2,r2,r8
   26bb8:	b80b883a 	mov	r5,r23
   26bbc:	1529883a 	add	r20,r2,r20
   26bc0:	8020d43a 	srli	r16,r16,16
   26bc4:	002af640 	call	2af64 <__mulsi3>
   26bc8:	a008d43a 	srli	r4,r20,16
   26bcc:	1405883a 	add	r2,r2,r16
   26bd0:	a0ffffcc 	andi	r3,r20,65535
   26bd4:	1105883a 	add	r2,r2,r4
   26bd8:	1008943a 	slli	r4,r2,16
   26bdc:	b5800104 	addi	r22,r22,4
   26be0:	ad400104 	addi	r21,r21,4
   26be4:	20c6b03a 	or	r3,r4,r3
   26be8:	b0ffff15 	stw	r3,-4(r22)
   26bec:	1028d43a 	srli	r20,r2,16
   26bf0:	ac7fe936 	bltu	r21,r17,26b98 <__multiply+0x21c>
   26bf4:	d8800017 	ldw	r2,0(sp)
   26bf8:	d8c00417 	ldw	r3,16(sp)
   26bfc:	10c5883a 	add	r2,r2,r3
   26c00:	15000015 	stw	r20,0(r2)
   26c04:	90800017 	ldw	r2,0(r18)
   26c08:	003fa006 	br	26a8c <__multiply+0x110>
   26c0c:	01c000f4 	movhi	r7,3
   26c10:	010000f4 	movhi	r4,3
   26c14:	39c0a004 	addi	r7,r7,640
   26c18:	000d883a 	mov	r6,zero
   26c1c:	01405744 	movi	r5,349
   26c20:	2100b504 	addi	r4,r4,724
   26c24:	00295b00 	call	295b0 <__assert_func>

00026c28 <__pow5mult>:
   26c28:	defffb04 	addi	sp,sp,-20
   26c2c:	dcc00315 	stw	r19,12(sp)
   26c30:	dc000015 	stw	r16,0(sp)
   26c34:	dfc00415 	stw	ra,16(sp)
   26c38:	dc800215 	stw	r18,8(sp)
   26c3c:	dc400115 	stw	r17,4(sp)
   26c40:	308000cc 	andi	r2,r6,3
   26c44:	3021883a 	mov	r16,r6
   26c48:	2027883a 	mov	r19,r4
   26c4c:	10002d1e 	bne	r2,zero,26d04 <__pow5mult+0xdc>
   26c50:	2825883a 	mov	r18,r5
   26c54:	8021d0ba 	srai	r16,r16,2
   26c58:	80001926 	beq	r16,zero,26cc0 <__pow5mult+0x98>
   26c5c:	9c401217 	ldw	r17,72(r19)
   26c60:	8800061e 	bne	r17,zero,26c7c <__pow5mult+0x54>
   26c64:	00002f06 	br	26d24 <__pow5mult+0xfc>
   26c68:	8021d07a 	srai	r16,r16,1
   26c6c:	80001426 	beq	r16,zero,26cc0 <__pow5mult+0x98>
   26c70:	88800017 	ldw	r2,0(r17)
   26c74:	10001a26 	beq	r2,zero,26ce0 <__pow5mult+0xb8>
   26c78:	1023883a 	mov	r17,r2
   26c7c:	8080004c 	andi	r2,r16,1
   26c80:	103ff926 	beq	r2,zero,26c68 <__pow5mult+0x40>
   26c84:	880d883a 	mov	r6,r17
   26c88:	900b883a 	mov	r5,r18
   26c8c:	9809883a 	mov	r4,r19
   26c90:	002697c0 	call	2697c <__multiply>
   26c94:	90001926 	beq	r18,zero,26cfc <__pow5mult+0xd4>
   26c98:	91000117 	ldw	r4,4(r18)
   26c9c:	98c01317 	ldw	r3,76(r19)
   26ca0:	8021d07a 	srai	r16,r16,1
   26ca4:	200890ba 	slli	r4,r4,2
   26ca8:	1907883a 	add	r3,r3,r4
   26cac:	19000017 	ldw	r4,0(r3)
   26cb0:	91000015 	stw	r4,0(r18)
   26cb4:	1c800015 	stw	r18,0(r3)
   26cb8:	1025883a 	mov	r18,r2
   26cbc:	803fec1e 	bne	r16,zero,26c70 <__pow5mult+0x48>
   26cc0:	9005883a 	mov	r2,r18
   26cc4:	dfc00417 	ldw	ra,16(sp)
   26cc8:	dcc00317 	ldw	r19,12(sp)
   26ccc:	dc800217 	ldw	r18,8(sp)
   26cd0:	dc400117 	ldw	r17,4(sp)
   26cd4:	dc000017 	ldw	r16,0(sp)
   26cd8:	dec00504 	addi	sp,sp,20
   26cdc:	f800283a 	ret
   26ce0:	880d883a 	mov	r6,r17
   26ce4:	880b883a 	mov	r5,r17
   26ce8:	9809883a 	mov	r4,r19
   26cec:	002697c0 	call	2697c <__multiply>
   26cf0:	88800015 	stw	r2,0(r17)
   26cf4:	10000015 	stw	zero,0(r2)
   26cf8:	003fdf06 	br	26c78 <__pow5mult+0x50>
   26cfc:	1025883a 	mov	r18,r2
   26d00:	003fd906 	br	26c68 <__pow5mult+0x40>
   26d04:	100490ba 	slli	r2,r2,2
   26d08:	00c000f4 	movhi	r3,3
   26d0c:	000f883a 	mov	r7,zero
   26d10:	10c7883a 	add	r3,r2,r3
   26d14:	1980c417 	ldw	r6,784(r3)
   26d18:	00265800 	call	26580 <__multadd>
   26d1c:	1025883a 	mov	r18,r2
   26d20:	003fcc06 	br	26c54 <__pow5mult+0x2c>
   26d24:	01409c44 	movi	r5,625
   26d28:	9809883a 	mov	r4,r19
   26d2c:	00269280 	call	26928 <__i2b>
   26d30:	98801215 	stw	r2,72(r19)
   26d34:	1023883a 	mov	r17,r2
   26d38:	10000015 	stw	zero,0(r2)
   26d3c:	003fcf06 	br	26c7c <__pow5mult+0x54>

00026d40 <__lshift>:
   26d40:	defff904 	addi	sp,sp,-28
   26d44:	dd400515 	stw	r21,20(sp)
   26d48:	dc800215 	stw	r18,8(sp)
   26d4c:	302bd17a 	srai	r21,r6,5
   26d50:	2c800417 	ldw	r18,16(r5)
   26d54:	28800217 	ldw	r2,8(r5)
   26d58:	dd000415 	stw	r20,16(sp)
   26d5c:	aca5883a 	add	r18,r21,r18
   26d60:	dcc00315 	stw	r19,12(sp)
   26d64:	dc400115 	stw	r17,4(sp)
   26d68:	dc000015 	stw	r16,0(sp)
   26d6c:	dfc00615 	stw	ra,24(sp)
   26d70:	94400044 	addi	r17,r18,1
   26d74:	2821883a 	mov	r16,r5
   26d78:	3029883a 	mov	r20,r6
   26d7c:	29400117 	ldw	r5,4(r5)
   26d80:	2027883a 	mov	r19,r4
   26d84:	1440030e 	bge	r2,r17,26d94 <__lshift+0x54>
   26d88:	1085883a 	add	r2,r2,r2
   26d8c:	29400044 	addi	r5,r5,1
   26d90:	147ffd16 	blt	r2,r17,26d88 <__lshift+0x48>
   26d94:	9809883a 	mov	r4,r19
   26d98:	00264b80 	call	264b8 <_Balloc>
   26d9c:	10004326 	beq	r2,zero,26eac <__lshift+0x16c>
   26da0:	12000504 	addi	r8,r2,20
   26da4:	0540090e 	bge	zero,r21,26dcc <__lshift+0x8c>
   26da8:	ad400144 	addi	r21,r21,5
   26dac:	a82a90ba 	slli	r21,r21,2
   26db0:	4007883a 	mov	r3,r8
   26db4:	1549883a 	add	r4,r2,r21
   26db8:	18c00104 	addi	r3,r3,4
   26dbc:	183fff15 	stw	zero,-4(r3)
   26dc0:	193ffd1e 	bne	r3,r4,26db8 <__lshift+0x78>
   26dc4:	ad7ffb04 	addi	r21,r21,-20
   26dc8:	4551883a 	add	r8,r8,r21
   26dcc:	82400417 	ldw	r9,16(r16)
   26dd0:	80c00504 	addi	r3,r16,20
   26dd4:	a14007cc 	andi	r5,r20,31
   26dd8:	481290ba 	slli	r9,r9,2
   26ddc:	1a53883a 	add	r9,r3,r9
   26de0:	28002a26 	beq	r5,zero,26e8c <__lshift+0x14c>
   26de4:	02800804 	movi	r10,32
   26de8:	5155c83a 	sub	r10,r10,r5
   26dec:	4009883a 	mov	r4,r8
   26df0:	000f883a 	mov	r7,zero
   26df4:	19800017 	ldw	r6,0(r3)
   26df8:	21000104 	addi	r4,r4,4
   26dfc:	18c00104 	addi	r3,r3,4
   26e00:	314c983a 	sll	r6,r6,r5
   26e04:	31ccb03a 	or	r6,r6,r7
   26e08:	21bfff15 	stw	r6,-4(r4)
   26e0c:	19bfff17 	ldw	r6,-4(r3)
   26e10:	328ed83a 	srl	r7,r6,r10
   26e14:	1a7ff736 	bltu	r3,r9,26df4 <__lshift+0xb4>
   26e18:	80c00544 	addi	r3,r16,21
   26e1c:	48c02136 	bltu	r9,r3,26ea4 <__lshift+0x164>
   26e20:	4c07c83a 	sub	r3,r9,r16
   26e24:	18fffac4 	addi	r3,r3,-21
   26e28:	1806d0ba 	srli	r3,r3,2
   26e2c:	18c00044 	addi	r3,r3,1
   26e30:	180690ba 	slli	r3,r3,2
   26e34:	40d1883a 	add	r8,r8,r3
   26e38:	41c00015 	stw	r7,0(r8)
   26e3c:	38000126 	beq	r7,zero,26e44 <__lshift+0x104>
   26e40:	8825883a 	mov	r18,r17
   26e44:	14800415 	stw	r18,16(r2)
   26e48:	80000726 	beq	r16,zero,26e68 <__lshift+0x128>
   26e4c:	81000117 	ldw	r4,4(r16)
   26e50:	98c01317 	ldw	r3,76(r19)
   26e54:	200890ba 	slli	r4,r4,2
   26e58:	1907883a 	add	r3,r3,r4
   26e5c:	19000017 	ldw	r4,0(r3)
   26e60:	81000015 	stw	r4,0(r16)
   26e64:	1c000015 	stw	r16,0(r3)
   26e68:	dfc00617 	ldw	ra,24(sp)
   26e6c:	dd400517 	ldw	r21,20(sp)
   26e70:	dd000417 	ldw	r20,16(sp)
   26e74:	dcc00317 	ldw	r19,12(sp)
   26e78:	dc800217 	ldw	r18,8(sp)
   26e7c:	dc400117 	ldw	r17,4(sp)
   26e80:	dc000017 	ldw	r16,0(sp)
   26e84:	dec00704 	addi	sp,sp,28
   26e88:	f800283a 	ret
   26e8c:	19000017 	ldw	r4,0(r3)
   26e90:	18c00104 	addi	r3,r3,4
   26e94:	42000104 	addi	r8,r8,4
   26e98:	413fff15 	stw	r4,-4(r8)
   26e9c:	1a7ffb36 	bltu	r3,r9,26e8c <__lshift+0x14c>
   26ea0:	003fe806 	br	26e44 <__lshift+0x104>
   26ea4:	00c00104 	movi	r3,4
   26ea8:	003fe206 	br	26e34 <__lshift+0xf4>
   26eac:	01c000f4 	movhi	r7,3
   26eb0:	010000f4 	movhi	r4,3
   26eb4:	39c0a004 	addi	r7,r7,640
   26eb8:	000d883a 	mov	r6,zero
   26ebc:	01407644 	movi	r5,473
   26ec0:	2100b504 	addi	r4,r4,724
   26ec4:	00295b00 	call	295b0 <__assert_func>

00026ec8 <__mcmp>:
   26ec8:	21800417 	ldw	r6,16(r4)
   26ecc:	28c00417 	ldw	r3,16(r5)
   26ed0:	30c5c83a 	sub	r2,r6,r3
   26ed4:	30c00e1e 	bne	r6,r3,26f10 <__mcmp+0x48>
   26ed8:	180690ba 	slli	r3,r3,2
   26edc:	21c00504 	addi	r7,r4,20
   26ee0:	29400504 	addi	r5,r5,20
   26ee4:	38c9883a 	add	r4,r7,r3
   26ee8:	28c7883a 	add	r3,r5,r3
   26eec:	00000106 	br	26ef4 <__mcmp+0x2c>
   26ef0:	3900082e 	bgeu	r7,r4,26f14 <__mcmp+0x4c>
   26ef4:	21bfff17 	ldw	r6,-4(r4)
   26ef8:	197fff17 	ldw	r5,-4(r3)
   26efc:	213fff04 	addi	r4,r4,-4
   26f00:	18ffff04 	addi	r3,r3,-4
   26f04:	317ffa26 	beq	r6,r5,26ef0 <__mcmp+0x28>
   26f08:	3140032e 	bgeu	r6,r5,26f18 <__mcmp+0x50>
   26f0c:	00bfffc4 	movi	r2,-1
   26f10:	f800283a 	ret
   26f14:	f800283a 	ret
   26f18:	00800044 	movi	r2,1
   26f1c:	f800283a 	ret

00026f20 <__mdiff>:
   26f20:	28800417 	ldw	r2,16(r5)
   26f24:	30c00417 	ldw	r3,16(r6)
   26f28:	defffc04 	addi	sp,sp,-16
   26f2c:	dc800215 	stw	r18,8(sp)
   26f30:	dc400115 	stw	r17,4(sp)
   26f34:	dc000015 	stw	r16,0(sp)
   26f38:	dfc00315 	stw	ra,12(sp)
   26f3c:	2823883a 	mov	r17,r5
   26f40:	3021883a 	mov	r16,r6
   26f44:	10e5c83a 	sub	r18,r2,r3
   26f48:	10c0641e 	bne	r2,r3,270dc <__mdiff+0x1bc>
   26f4c:	180c90ba 	slli	r6,r3,2
   26f50:	29400504 	addi	r5,r5,20
   26f54:	80c00504 	addi	r3,r16,20
   26f58:	2985883a 	add	r2,r5,r6
   26f5c:	1987883a 	add	r3,r3,r6
   26f60:	00000106 	br	26f68 <__mdiff+0x48>
   26f64:	2880642e 	bgeu	r5,r2,270f8 <__mdiff+0x1d8>
   26f68:	11ffff17 	ldw	r7,-4(r2)
   26f6c:	19bfff17 	ldw	r6,-4(r3)
   26f70:	10bfff04 	addi	r2,r2,-4
   26f74:	18ffff04 	addi	r3,r3,-4
   26f78:	39bffa26 	beq	r7,r6,26f64 <__mdiff+0x44>
   26f7c:	39805236 	bltu	r7,r6,270c8 <__mdiff+0x1a8>
   26f80:	89400117 	ldw	r5,4(r17)
   26f84:	00264b80 	call	264b8 <_Balloc>
   26f88:	10006226 	beq	r2,zero,27114 <__mdiff+0x1f4>
   26f8c:	8a400417 	ldw	r9,16(r17)
   26f90:	83000417 	ldw	r12,16(r16)
   26f94:	8ac00504 	addi	r11,r17,20
   26f98:	481090ba 	slli	r8,r9,2
   26f9c:	601890ba 	slli	r12,r12,2
   26fa0:	81800504 	addi	r6,r16,20
   26fa4:	13400504 	addi	r13,r2,20
   26fa8:	14800315 	stw	r18,12(r2)
   26fac:	5a11883a 	add	r8,r11,r8
   26fb0:	3319883a 	add	r12,r6,r12
   26fb4:	681d883a 	mov	r14,r13
   26fb8:	5815883a 	mov	r10,r11
   26fbc:	0007883a 	mov	r3,zero
   26fc0:	51000017 	ldw	r4,0(r10)
   26fc4:	31c00017 	ldw	r7,0(r6)
   26fc8:	73800104 	addi	r14,r14,4
   26fcc:	217fffcc 	andi	r5,r4,65535
   26fd0:	28cb883a 	add	r5,r5,r3
   26fd4:	38ffffcc 	andi	r3,r7,65535
   26fd8:	28cbc83a 	sub	r5,r5,r3
   26fdc:	380ed43a 	srli	r7,r7,16
   26fe0:	2006d43a 	srli	r3,r4,16
   26fe4:	2809d43a 	srai	r4,r5,16
   26fe8:	297fffcc 	andi	r5,r5,65535
   26fec:	19c7c83a 	sub	r3,r3,r7
   26ff0:	1907883a 	add	r3,r3,r4
   26ff4:	1808943a 	slli	r4,r3,16
   26ff8:	31800104 	addi	r6,r6,4
   26ffc:	1807d43a 	srai	r3,r3,16
   27000:	214ab03a 	or	r5,r4,r5
   27004:	717fff15 	stw	r5,-4(r14)
   27008:	52800104 	addi	r10,r10,4
   2700c:	333fec36 	bltu	r6,r12,26fc0 <__mdiff+0xa0>
   27010:	640fc83a 	sub	r7,r12,r16
   27014:	39fffac4 	addi	r7,r7,-21
   27018:	84000544 	addi	r16,r16,21
   2701c:	380ed0ba 	srli	r7,r7,2
   27020:	64003336 	bltu	r12,r16,270f0 <__mdiff+0x1d0>
   27024:	380890ba 	slli	r4,r7,2
   27028:	6909883a 	add	r4,r13,r4
   2702c:	64002e36 	bltu	r12,r16,270e8 <__mdiff+0x1c8>
   27030:	39800044 	addi	r6,r7,1
   27034:	300c90ba 	slli	r6,r6,2
   27038:	5997883a 	add	r11,r11,r6
   2703c:	699b883a 	add	r13,r13,r6
   27040:	5a00152e 	bgeu	r11,r8,27098 <__mdiff+0x178>
   27044:	680f883a 	mov	r7,r13
   27048:	580d883a 	mov	r6,r11
   2704c:	31000017 	ldw	r4,0(r6)
   27050:	39c00104 	addi	r7,r7,4
   27054:	31800104 	addi	r6,r6,4
   27058:	217fffcc 	andi	r5,r4,65535
   2705c:	28cb883a 	add	r5,r5,r3
   27060:	2815d43a 	srai	r10,r5,16
   27064:	2006d43a 	srli	r3,r4,16
   27068:	297fffcc 	andi	r5,r5,65535
   2706c:	1a87883a 	add	r3,r3,r10
   27070:	1814943a 	slli	r10,r3,16
   27074:	1807d43a 	srai	r3,r3,16
   27078:	514ab03a 	or	r5,r10,r5
   2707c:	397fff15 	stw	r5,-4(r7)
   27080:	323ff236 	bltu	r6,r8,2704c <__mdiff+0x12c>
   27084:	413fffc4 	addi	r4,r8,-1
   27088:	22c9c83a 	sub	r4,r4,r11
   2708c:	2008d0ba 	srli	r4,r4,2
   27090:	200890ba 	slli	r4,r4,2
   27094:	6909883a 	add	r4,r13,r4
   27098:	2800041e 	bne	r5,zero,270ac <__mdiff+0x18c>
   2709c:	20ffff17 	ldw	r3,-4(r4)
   270a0:	4a7fffc4 	addi	r9,r9,-1
   270a4:	213fff04 	addi	r4,r4,-4
   270a8:	183ffc26 	beq	r3,zero,2709c <__mdiff+0x17c>
   270ac:	12400415 	stw	r9,16(r2)
   270b0:	dfc00317 	ldw	ra,12(sp)
   270b4:	dc800217 	ldw	r18,8(sp)
   270b8:	dc400117 	ldw	r17,4(sp)
   270bc:	dc000017 	ldw	r16,0(sp)
   270c0:	dec00404 	addi	sp,sp,16
   270c4:	f800283a 	ret
   270c8:	8805883a 	mov	r2,r17
   270cc:	04800044 	movi	r18,1
   270d0:	8023883a 	mov	r17,r16
   270d4:	1021883a 	mov	r16,r2
   270d8:	003fa906 	br	26f80 <__mdiff+0x60>
   270dc:	903ffa16 	blt	r18,zero,270c8 <__mdiff+0x1a8>
   270e0:	0025883a 	mov	r18,zero
   270e4:	003fa606 	br	26f80 <__mdiff+0x60>
   270e8:	01800104 	movi	r6,4
   270ec:	003fd206 	br	27038 <__mdiff+0x118>
   270f0:	0009883a 	mov	r4,zero
   270f4:	003fcc06 	br	27028 <__mdiff+0x108>
   270f8:	000b883a 	mov	r5,zero
   270fc:	00264b80 	call	264b8 <_Balloc>
   27100:	10000b26 	beq	r2,zero,27130 <__mdiff+0x210>
   27104:	00c00044 	movi	r3,1
   27108:	10c00415 	stw	r3,16(r2)
   2710c:	10000515 	stw	zero,20(r2)
   27110:	003fe706 	br	270b0 <__mdiff+0x190>
   27114:	01c000f4 	movhi	r7,3
   27118:	010000f4 	movhi	r4,3
   2711c:	39c0a004 	addi	r7,r7,640
   27120:	000d883a 	mov	r6,zero
   27124:	01409004 	movi	r5,576
   27128:	2100b504 	addi	r4,r4,724
   2712c:	00295b00 	call	295b0 <__assert_func>
   27130:	01c000f4 	movhi	r7,3
   27134:	010000f4 	movhi	r4,3
   27138:	39c0a004 	addi	r7,r7,640
   2713c:	000d883a 	mov	r6,zero
   27140:	01408c84 	movi	r5,562
   27144:	2100b504 	addi	r4,r4,724
   27148:	00295b00 	call	295b0 <__assert_func>

0002714c <__ulp>:
   2714c:	28dffc2c 	andhi	r3,r5,32752
   27150:	017f3034 	movhi	r5,64704
   27154:	1947883a 	add	r3,r3,r5
   27158:	00c0020e 	bge	zero,r3,27164 <__ulp+0x18>
   2715c:	0005883a 	mov	r2,zero
   27160:	f800283a 	ret
   27164:	00c7c83a 	sub	r3,zero,r3
   27168:	1807d53a 	srai	r3,r3,20
   2716c:	18800508 	cmpgei	r2,r3,20
   27170:	1000041e 	bne	r2,zero,27184 <__ulp+0x38>
   27174:	00800234 	movhi	r2,8
   27178:	10c7d83a 	sra	r3,r2,r3
   2717c:	0005883a 	mov	r2,zero
   27180:	f800283a 	ret
   27184:	193ffb04 	addi	r4,r3,-20
   27188:	208007c8 	cmpgei	r2,r4,31
   2718c:	0007883a 	mov	r3,zero
   27190:	1000031e 	bne	r2,zero,271a0 <__ulp+0x54>
   27194:	00a00034 	movhi	r2,32768
   27198:	1104d83a 	srl	r2,r2,r4
   2719c:	f800283a 	ret
   271a0:	00800044 	movi	r2,1
   271a4:	f800283a 	ret

000271a8 <__b2d>:
   271a8:	defffa04 	addi	sp,sp,-24
   271ac:	dc400115 	stw	r17,4(sp)
   271b0:	24400417 	ldw	r17,16(r4)
   271b4:	dc000015 	stw	r16,0(sp)
   271b8:	24000504 	addi	r16,r4,20
   271bc:	882290ba 	slli	r17,r17,2
   271c0:	dc800215 	stw	r18,8(sp)
   271c4:	dd000415 	stw	r20,16(sp)
   271c8:	8463883a 	add	r17,r16,r17
   271cc:	8cbfff17 	ldw	r18,-4(r17)
   271d0:	dcc00315 	stw	r19,12(sp)
   271d4:	dfc00515 	stw	ra,20(sp)
   271d8:	9009883a 	mov	r4,r18
   271dc:	2827883a 	mov	r19,r5
   271e0:	00268140 	call	26814 <__hi0bits>
   271e4:	01000804 	movi	r4,32
   271e8:	2087c83a 	sub	r3,r4,r2
   271ec:	98c00015 	stw	r3,0(r19)
   271f0:	10c002c8 	cmpgei	r3,r2,11
   271f4:	8d3fff04 	addi	r20,r17,-4
   271f8:	18001f26 	beq	r3,zero,27278 <__b2d+0xd0>
   271fc:	10fffd44 	addi	r3,r2,-11
   27200:	85000e2e 	bgeu	r16,r20,2723c <__b2d+0x94>
   27204:	88bffe17 	ldw	r2,-8(r17)
   27208:	18001226 	beq	r3,zero,27254 <__b2d+0xac>
   2720c:	20c9c83a 	sub	r4,r4,r3
   27210:	110cd83a 	srl	r6,r2,r4
   27214:	90e4983a 	sll	r18,r18,r3
   27218:	10c4983a 	sll	r2,r2,r3
   2721c:	897ffe04 	addi	r5,r17,-8
   27220:	9186b03a 	or	r3,r18,r6
   27224:	18cffc34 	orhi	r3,r3,16368
   27228:	81400b2e 	bgeu	r16,r5,27258 <__b2d+0xb0>
   2722c:	897ffd17 	ldw	r5,-12(r17)
   27230:	2908d83a 	srl	r4,r5,r4
   27234:	1104b03a 	or	r2,r2,r4
   27238:	00000706 	br	27258 <__b2d+0xb0>
   2723c:	18000426 	beq	r3,zero,27250 <__b2d+0xa8>
   27240:	90c6983a 	sll	r3,r18,r3
   27244:	0005883a 	mov	r2,zero
   27248:	18cffc34 	orhi	r3,r3,16368
   2724c:	00000206 	br	27258 <__b2d+0xb0>
   27250:	0005883a 	mov	r2,zero
   27254:	90cffc34 	orhi	r3,r18,16368
   27258:	dfc00517 	ldw	ra,20(sp)
   2725c:	dd000417 	ldw	r20,16(sp)
   27260:	dcc00317 	ldw	r19,12(sp)
   27264:	dc800217 	ldw	r18,8(sp)
   27268:	dc400117 	ldw	r17,4(sp)
   2726c:	dc000017 	ldw	r16,0(sp)
   27270:	dec00604 	addi	sp,sp,24
   27274:	f800283a 	ret
   27278:	014002c4 	movi	r5,11
   2727c:	2889c83a 	sub	r4,r5,r2
   27280:	9106d83a 	srl	r3,r18,r4
   27284:	18cffc34 	orhi	r3,r3,16368
   27288:	85000536 	bltu	r16,r20,272a0 <__b2d+0xf8>
   2728c:	000b883a 	mov	r5,zero
   27290:	10800544 	addi	r2,r2,21
   27294:	9084983a 	sll	r2,r18,r2
   27298:	1144b03a 	or	r2,r2,r5
   2729c:	003fee06 	br	27258 <__b2d+0xb0>
   272a0:	897ffe17 	ldw	r5,-8(r17)
   272a4:	290ad83a 	srl	r5,r5,r4
   272a8:	003ff906 	br	27290 <__b2d+0xe8>

000272ac <__d2b>:
   272ac:	defff804 	addi	sp,sp,-32
   272b0:	dd000615 	stw	r20,24(sp)
   272b4:	2829883a 	mov	r20,r5
   272b8:	01400044 	movi	r5,1
   272bc:	dcc00515 	stw	r19,20(sp)
   272c0:	dc000215 	stw	r16,8(sp)
   272c4:	dfc00715 	stw	ra,28(sp)
   272c8:	dc800415 	stw	r18,16(sp)
   272cc:	dc400315 	stw	r17,12(sp)
   272d0:	3021883a 	mov	r16,r6
   272d4:	3827883a 	mov	r19,r7
   272d8:	00264b80 	call	264b8 <_Balloc>
   272dc:	10004526 	beq	r2,zero,273f4 <__d2b+0x148>
   272e0:	8024d53a 	srli	r18,r16,20
   272e4:	01800434 	movhi	r6,16
   272e8:	31bfffc4 	addi	r6,r6,-1
   272ec:	9481ffcc 	andi	r18,r18,2047
   272f0:	1023883a 	mov	r17,r2
   272f4:	81a0703a 	and	r16,r16,r6
   272f8:	90000126 	beq	r18,zero,27300 <__d2b+0x54>
   272fc:	84000434 	orhi	r16,r16,16
   27300:	dc000115 	stw	r16,4(sp)
   27304:	a0002226 	beq	r20,zero,27390 <__d2b+0xe4>
   27308:	d809883a 	mov	r4,sp
   2730c:	dd000015 	stw	r20,0(sp)
   27310:	00268780 	call	26878 <__lo0bits>
   27314:	d8c00117 	ldw	r3,4(sp)
   27318:	10003326 	beq	r2,zero,273e8 <__d2b+0x13c>
   2731c:	01000804 	movi	r4,32
   27320:	2089c83a 	sub	r4,r4,r2
   27324:	1908983a 	sll	r4,r3,r4
   27328:	d9400017 	ldw	r5,0(sp)
   2732c:	1886d83a 	srl	r3,r3,r2
   27330:	2148b03a 	or	r4,r4,r5
   27334:	89000515 	stw	r4,20(r17)
   27338:	d8c00115 	stw	r3,4(sp)
   2733c:	88c00615 	stw	r3,24(r17)
   27340:	1800271e 	bne	r3,zero,273e0 <__d2b+0x134>
   27344:	04000044 	movi	r16,1
   27348:	8c000415 	stw	r16,16(r17)
   2734c:	90001926 	beq	r18,zero,273b4 <__d2b+0x108>
   27350:	00c00d44 	movi	r3,53
   27354:	94bef344 	addi	r18,r18,-1075
   27358:	90a5883a 	add	r18,r18,r2
   2735c:	1885c83a 	sub	r2,r3,r2
   27360:	d8c00817 	ldw	r3,32(sp)
   27364:	9c800015 	stw	r18,0(r19)
   27368:	18800015 	stw	r2,0(r3)
   2736c:	8805883a 	mov	r2,r17
   27370:	dfc00717 	ldw	ra,28(sp)
   27374:	dd000617 	ldw	r20,24(sp)
   27378:	dcc00517 	ldw	r19,20(sp)
   2737c:	dc800417 	ldw	r18,16(sp)
   27380:	dc400317 	ldw	r17,12(sp)
   27384:	dc000217 	ldw	r16,8(sp)
   27388:	dec00804 	addi	sp,sp,32
   2738c:	f800283a 	ret
   27390:	d9000104 	addi	r4,sp,4
   27394:	00268780 	call	26878 <__lo0bits>
   27398:	00c00044 	movi	r3,1
   2739c:	88c00415 	stw	r3,16(r17)
   273a0:	d8c00117 	ldw	r3,4(sp)
   273a4:	10800804 	addi	r2,r2,32
   273a8:	04000044 	movi	r16,1
   273ac:	88c00515 	stw	r3,20(r17)
   273b0:	903fe71e 	bne	r18,zero,27350 <__d2b+0xa4>
   273b4:	800690ba 	slli	r3,r16,2
   273b8:	10bef384 	addi	r2,r2,-1074
   273bc:	98800015 	stw	r2,0(r19)
   273c0:	88c5883a 	add	r2,r17,r3
   273c4:	11000417 	ldw	r4,16(r2)
   273c8:	8020917a 	slli	r16,r16,5
   273cc:	00268140 	call	26814 <__hi0bits>
   273d0:	80a1c83a 	sub	r16,r16,r2
   273d4:	d8800817 	ldw	r2,32(sp)
   273d8:	14000015 	stw	r16,0(r2)
   273dc:	003fe306 	br	2736c <__d2b+0xc0>
   273e0:	04000084 	movi	r16,2
   273e4:	003fd806 	br	27348 <__d2b+0x9c>
   273e8:	d9000017 	ldw	r4,0(sp)
   273ec:	89000515 	stw	r4,20(r17)
   273f0:	003fd206 	br	2733c <__d2b+0x90>
   273f4:	01c000f4 	movhi	r7,3
   273f8:	010000f4 	movhi	r4,3
   273fc:	39c0a004 	addi	r7,r7,640
   27400:	000d883a 	mov	r6,zero
   27404:	0140c284 	movi	r5,778
   27408:	2100b504 	addi	r4,r4,724
   2740c:	00295b00 	call	295b0 <__assert_func>

00027410 <__ratio>:
   27410:	defff904 	addi	sp,sp,-28
   27414:	dc400315 	stw	r17,12(sp)
   27418:	2823883a 	mov	r17,r5
   2741c:	d80b883a 	mov	r5,sp
   27420:	dfc00615 	stw	ra,24(sp)
   27424:	dcc00515 	stw	r19,20(sp)
   27428:	dc800415 	stw	r18,16(sp)
   2742c:	2027883a 	mov	r19,r4
   27430:	dc000215 	stw	r16,8(sp)
   27434:	00271a80 	call	271a8 <__b2d>
   27438:	d9400104 	addi	r5,sp,4
   2743c:	8809883a 	mov	r4,r17
   27440:	1025883a 	mov	r18,r2
   27444:	1821883a 	mov	r16,r3
   27448:	00271a80 	call	271a8 <__b2d>
   2744c:	89400417 	ldw	r5,16(r17)
   27450:	99000417 	ldw	r4,16(r19)
   27454:	d9800117 	ldw	r6,4(sp)
   27458:	180f883a 	mov	r7,r3
   2745c:	2149c83a 	sub	r4,r4,r5
   27460:	d9400017 	ldw	r5,0(sp)
   27464:	2008917a 	slli	r4,r4,5
   27468:	298bc83a 	sub	r5,r5,r6
   2746c:	2149883a 	add	r4,r4,r5
   27470:	100d883a 	mov	r6,r2
   27474:	01000c0e 	bge	zero,r4,274a8 <__ratio+0x98>
   27478:	2008953a 	slli	r4,r4,20
   2747c:	2421883a 	add	r16,r4,r16
   27480:	9009883a 	mov	r4,r18
   27484:	800b883a 	mov	r5,r16
   27488:	002b9040 	call	2b904 <__divdf3>
   2748c:	dfc00617 	ldw	ra,24(sp)
   27490:	dcc00517 	ldw	r19,20(sp)
   27494:	dc800417 	ldw	r18,16(sp)
   27498:	dc400317 	ldw	r17,12(sp)
   2749c:	dc000217 	ldw	r16,8(sp)
   274a0:	dec00704 	addi	sp,sp,28
   274a4:	f800283a 	ret
   274a8:	2008953a 	slli	r4,r4,20
   274ac:	190fc83a 	sub	r7,r3,r4
   274b0:	003ff306 	br	27480 <__ratio+0x70>

000274b4 <_mprec_log10>:
   274b4:	defffe04 	addi	sp,sp,-8
   274b8:	dc000015 	stw	r16,0(sp)
   274bc:	dfc00115 	stw	ra,4(sp)
   274c0:	20800608 	cmpgei	r2,r4,24
   274c4:	2021883a 	mov	r16,r4
   274c8:	10000f26 	beq	r2,zero,27508 <_mprec_log10+0x54>
   274cc:	0009883a 	mov	r4,zero
   274d0:	014ffc34 	movhi	r5,16368
   274d4:	000d883a 	mov	r6,zero
   274d8:	01d00934 	movhi	r7,16420
   274dc:	002c4980 	call	2c498 <__muldf3>
   274e0:	843fffc4 	addi	r16,r16,-1
   274e4:	1009883a 	mov	r4,r2
   274e8:	180b883a 	mov	r5,r3
   274ec:	803ff91e 	bne	r16,zero,274d4 <_mprec_log10+0x20>
   274f0:	2005883a 	mov	r2,r4
   274f4:	2807883a 	mov	r3,r5
   274f8:	dfc00117 	ldw	ra,4(sp)
   274fc:	dc000017 	ldw	r16,0(sp)
   27500:	dec00204 	addi	sp,sp,8
   27504:	f800283a 	ret
   27508:	202090fa 	slli	r16,r4,3
   2750c:	008000f4 	movhi	r2,3
   27510:	1080dc04 	addi	r2,r2,880
   27514:	1421883a 	add	r16,r2,r16
   27518:	81000017 	ldw	r4,0(r16)
   2751c:	81400117 	ldw	r5,4(r16)
   27520:	003ff306 	br	274f0 <_mprec_log10+0x3c>

00027524 <__copybits>:
   27524:	297fffc4 	addi	r5,r5,-1
   27528:	280fd17a 	srai	r7,r5,5
   2752c:	31400417 	ldw	r5,16(r6)
   27530:	30800504 	addi	r2,r6,20
   27534:	39c00044 	addi	r7,r7,1
   27538:	280a90ba 	slli	r5,r5,2
   2753c:	380e90ba 	slli	r7,r7,2
   27540:	114b883a 	add	r5,r2,r5
   27544:	21cf883a 	add	r7,r4,r7
   27548:	11400c2e 	bgeu	r2,r5,2757c <__copybits+0x58>
   2754c:	2007883a 	mov	r3,r4
   27550:	12000017 	ldw	r8,0(r2)
   27554:	10800104 	addi	r2,r2,4
   27558:	18c00104 	addi	r3,r3,4
   2755c:	1a3fff15 	stw	r8,-4(r3)
   27560:	117ffb36 	bltu	r2,r5,27550 <__copybits+0x2c>
   27564:	2985c83a 	sub	r2,r5,r6
   27568:	10bffac4 	addi	r2,r2,-21
   2756c:	1004d0ba 	srli	r2,r2,2
   27570:	10800044 	addi	r2,r2,1
   27574:	100490ba 	slli	r2,r2,2
   27578:	2089883a 	add	r4,r4,r2
   2757c:	21c0032e 	bgeu	r4,r7,2758c <__copybits+0x68>
   27580:	21000104 	addi	r4,r4,4
   27584:	203fff15 	stw	zero,-4(r4)
   27588:	21fffd36 	bltu	r4,r7,27580 <__copybits+0x5c>
   2758c:	f800283a 	ret

00027590 <__any_on>:
   27590:	20c00417 	ldw	r3,16(r4)
   27594:	280dd17a 	srai	r6,r5,5
   27598:	21000504 	addi	r4,r4,20
   2759c:	1980080e 	bge	r3,r6,275c0 <__any_on+0x30>
   275a0:	180490ba 	slli	r2,r3,2
   275a4:	2085883a 	add	r2,r4,r2
   275a8:	20800f2e 	bgeu	r4,r2,275e8 <__any_on+0x58>
   275ac:	10ffff17 	ldw	r3,-4(r2)
   275b0:	10bfff04 	addi	r2,r2,-4
   275b4:	183ffc26 	beq	r3,zero,275a8 <__any_on+0x18>
   275b8:	00800044 	movi	r2,1
   275bc:	f800283a 	ret
   275c0:	300490ba 	slli	r2,r6,2
   275c4:	2085883a 	add	r2,r4,r2
   275c8:	30fff70e 	bge	r6,r3,275a8 <__any_on+0x18>
   275cc:	294007cc 	andi	r5,r5,31
   275d0:	283ff526 	beq	r5,zero,275a8 <__any_on+0x18>
   275d4:	11800017 	ldw	r6,0(r2)
   275d8:	3146d83a 	srl	r3,r6,r5
   275dc:	194a983a 	sll	r5,r3,r5
   275e0:	317ff51e 	bne	r6,r5,275b8 <__any_on+0x28>
   275e4:	003ff006 	br	275a8 <__any_on+0x18>
   275e8:	0005883a 	mov	r2,zero
   275ec:	f800283a 	ret

000275f0 <_putc_r>:
   275f0:	defffc04 	addi	sp,sp,-16
   275f4:	dc400215 	stw	r17,8(sp)
   275f8:	dfc00315 	stw	ra,12(sp)
   275fc:	2023883a 	mov	r17,r4
   27600:	20000226 	beq	r4,zero,2760c <_putc_r+0x1c>
   27604:	20800e17 	ldw	r2,56(r4)
   27608:	10000e26 	beq	r2,zero,27644 <_putc_r+0x54>
   2760c:	30800217 	ldw	r2,8(r6)
   27610:	10bfffc4 	addi	r2,r2,-1
   27614:	30800215 	stw	r2,8(r6)
   27618:	10001316 	blt	r2,zero,27668 <_putc_r+0x78>
   2761c:	30800017 	ldw	r2,0(r6)
   27620:	11400005 	stb	r5,0(r2)
   27624:	30800017 	ldw	r2,0(r6)
   27628:	10c00044 	addi	r3,r2,1
   2762c:	30c00015 	stw	r3,0(r6)
   27630:	10800003 	ldbu	r2,0(r2)
   27634:	dfc00317 	ldw	ra,12(sp)
   27638:	dc400217 	ldw	r17,8(sp)
   2763c:	dec00404 	addi	sp,sp,16
   27640:	f800283a 	ret
   27644:	d9800115 	stw	r6,4(sp)
   27648:	d9400015 	stw	r5,0(sp)
   2764c:	0024c840 	call	24c84 <__sinit>
   27650:	d9800117 	ldw	r6,4(sp)
   27654:	d9400017 	ldw	r5,0(sp)
   27658:	30800217 	ldw	r2,8(r6)
   2765c:	10bfffc4 	addi	r2,r2,-1
   27660:	30800215 	stw	r2,8(r6)
   27664:	103fed0e 	bge	r2,zero,2761c <_putc_r+0x2c>
   27668:	30c00617 	ldw	r3,24(r6)
   2766c:	10c00e16 	blt	r2,r3,276a8 <_putc_r+0xb8>
   27670:	30800017 	ldw	r2,0(r6)
   27674:	11400005 	stb	r5,0(r2)
   27678:	30c00017 	ldw	r3,0(r6)
   2767c:	18800003 	ldbu	r2,0(r3)
   27680:	108002a0 	cmpeqi	r2,r2,10
   27684:	1000071e 	bne	r2,zero,276a4 <_putc_r+0xb4>
   27688:	18800044 	addi	r2,r3,1
   2768c:	30800015 	stw	r2,0(r6)
   27690:	18800003 	ldbu	r2,0(r3)
   27694:	dfc00317 	ldw	ra,12(sp)
   27698:	dc400217 	ldw	r17,8(sp)
   2769c:	dec00404 	addi	sp,sp,16
   276a0:	f800283a 	ret
   276a4:	01400284 	movi	r5,10
   276a8:	8809883a 	mov	r4,r17
   276ac:	dfc00317 	ldw	ra,12(sp)
   276b0:	dc400217 	ldw	r17,8(sp)
   276b4:	dec00404 	addi	sp,sp,16
   276b8:	00293941 	jmpi	29394 <__swbuf_r>

000276bc <putc>:
   276bc:	defffc04 	addi	sp,sp,-16
   276c0:	008000f4 	movhi	r2,3
   276c4:	dc800215 	stw	r18,8(sp)
   276c8:	14891917 	ldw	r18,9316(r2)
   276cc:	dc400115 	stw	r17,4(sp)
   276d0:	dfc00315 	stw	ra,12(sp)
   276d4:	2023883a 	mov	r17,r4
   276d8:	90000226 	beq	r18,zero,276e4 <putc+0x28>
   276dc:	90800e17 	ldw	r2,56(r18)
   276e0:	10000f26 	beq	r2,zero,27720 <putc+0x64>
   276e4:	28800217 	ldw	r2,8(r5)
   276e8:	10bfffc4 	addi	r2,r2,-1
   276ec:	28800215 	stw	r2,8(r5)
   276f0:	10001316 	blt	r2,zero,27740 <putc+0x84>
   276f4:	28800017 	ldw	r2,0(r5)
   276f8:	14400005 	stb	r17,0(r2)
   276fc:	28800017 	ldw	r2,0(r5)
   27700:	10c00044 	addi	r3,r2,1
   27704:	28c00015 	stw	r3,0(r5)
   27708:	10800003 	ldbu	r2,0(r2)
   2770c:	dfc00317 	ldw	ra,12(sp)
   27710:	dc800217 	ldw	r18,8(sp)
   27714:	dc400117 	ldw	r17,4(sp)
   27718:	dec00404 	addi	sp,sp,16
   2771c:	f800283a 	ret
   27720:	9009883a 	mov	r4,r18
   27724:	d9400015 	stw	r5,0(sp)
   27728:	0024c840 	call	24c84 <__sinit>
   2772c:	d9400017 	ldw	r5,0(sp)
   27730:	28800217 	ldw	r2,8(r5)
   27734:	10bfffc4 	addi	r2,r2,-1
   27738:	28800215 	stw	r2,8(r5)
   2773c:	103fed0e 	bge	r2,zero,276f4 <putc+0x38>
   27740:	28c00617 	ldw	r3,24(r5)
   27744:	10c00a16 	blt	r2,r3,27770 <putc+0xb4>
   27748:	28800017 	ldw	r2,0(r5)
   2774c:	14400005 	stb	r17,0(r2)
   27750:	28c00017 	ldw	r3,0(r5)
   27754:	18800003 	ldbu	r2,0(r3)
   27758:	108002a0 	cmpeqi	r2,r2,10
   2775c:	10000c1e 	bne	r2,zero,27790 <putc+0xd4>
   27760:	18800044 	addi	r2,r3,1
   27764:	28800015 	stw	r2,0(r5)
   27768:	18800003 	ldbu	r2,0(r3)
   2776c:	003fe706 	br	2770c <putc+0x50>
   27770:	280d883a 	mov	r6,r5
   27774:	880b883a 	mov	r5,r17
   27778:	9009883a 	mov	r4,r18
   2777c:	dfc00317 	ldw	ra,12(sp)
   27780:	dc800217 	ldw	r18,8(sp)
   27784:	dc400117 	ldw	r17,4(sp)
   27788:	dec00404 	addi	sp,sp,16
   2778c:	00293941 	jmpi	29394 <__swbuf_r>
   27790:	280d883a 	mov	r6,r5
   27794:	01400284 	movi	r5,10
   27798:	003ff706 	br	27778 <putc+0xbc>

0002779c <_realloc_r>:
   2779c:	defff504 	addi	sp,sp,-44
   277a0:	dc800315 	stw	r18,12(sp)
   277a4:	dfc00a15 	stw	ra,40(sp)
   277a8:	df000915 	stw	fp,36(sp)
   277ac:	ddc00815 	stw	r23,32(sp)
   277b0:	dd800715 	stw	r22,28(sp)
   277b4:	dd400615 	stw	r21,24(sp)
   277b8:	dd000515 	stw	r20,20(sp)
   277bc:	dcc00415 	stw	r19,16(sp)
   277c0:	dc400215 	stw	r17,8(sp)
   277c4:	dc000115 	stw	r16,4(sp)
   277c8:	3025883a 	mov	r18,r6
   277cc:	28008b26 	beq	r5,zero,279fc <_realloc_r+0x260>
   277d0:	2821883a 	mov	r16,r5
   277d4:	2027883a 	mov	r19,r4
   277d8:	944002c4 	addi	r17,r18,11
   277dc:	002df540 	call	2df54 <__malloc_lock>
   277e0:	888005f0 	cmpltui	r2,r17,23
   277e4:	1000521e 	bne	r2,zero,27930 <_realloc_r+0x194>
   277e8:	017ffe04 	movi	r5,-8
   277ec:	8962703a 	and	r17,r17,r5
   277f0:	8807883a 	mov	r3,r17
   277f4:	88005116 	blt	r17,zero,2793c <_realloc_r+0x1a0>
   277f8:	8c805036 	bltu	r17,r18,2793c <_realloc_r+0x1a0>
   277fc:	80bfff17 	ldw	r2,-4(r16)
   27800:	017fff04 	movi	r5,-4
   27804:	857ffe04 	addi	r21,r16,-8
   27808:	1168703a 	and	r20,r2,r5
   2780c:	ad2d883a 	add	r22,r21,r20
   27810:	a0c0390e 	bge	r20,r3,278f8 <_realloc_r+0x15c>
   27814:	070000f4 	movhi	fp,3
   27818:	e7032904 	addi	fp,fp,3236
   2781c:	e2000217 	ldw	r8,8(fp)
   27820:	b1000117 	ldw	r4,4(r22)
   27824:	45808e26 	beq	r8,r22,27a60 <_realloc_r+0x2c4>
   27828:	01bfff84 	movi	r6,-2
   2782c:	218c703a 	and	r6,r4,r6
   27830:	b18d883a 	add	r6,r22,r6
   27834:	31800117 	ldw	r6,4(r6)
   27838:	3180004c 	andi	r6,r6,1
   2783c:	30004f1e 	bne	r6,zero,2797c <_realloc_r+0x1e0>
   27840:	2148703a 	and	r4,r4,r5
   27844:	a10b883a 	add	r5,r20,r4
   27848:	28c0bf0e 	bge	r5,r3,27b48 <_realloc_r+0x3ac>
   2784c:	1080004c 	andi	r2,r2,1
   27850:	10004c1e 	bne	r2,zero,27984 <_realloc_r+0x1e8>
   27854:	81fffe17 	ldw	r7,-8(r16)
   27858:	00bfff04 	movi	r2,-4
   2785c:	a9cfc83a 	sub	r7,r21,r7
   27860:	39400117 	ldw	r5,4(r7)
   27864:	288a703a 	and	r5,r5,r2
   27868:	b0000426 	beq	r22,zero,2787c <_realloc_r+0xe0>
   2786c:	a16f883a 	add	r23,r20,r5
   27870:	b92f883a 	add	r23,r23,r4
   27874:	4580bf26 	beq	r8,r22,27b74 <_realloc_r+0x3d8>
   27878:	b8c0930e 	bge	r23,r3,27ac8 <_realloc_r+0x32c>
   2787c:	38004126 	beq	r7,zero,27984 <_realloc_r+0x1e8>
   27880:	a16f883a 	add	r23,r20,r5
   27884:	b8c03f16 	blt	r23,r3,27984 <_realloc_r+0x1e8>
   27888:	38800317 	ldw	r2,12(r7)
   2788c:	38c00217 	ldw	r3,8(r7)
   27890:	a1bfff04 	addi	r6,r20,-4
   27894:	31400968 	cmpgeui	r5,r6,37
   27898:	18800315 	stw	r2,12(r3)
   2789c:	10c00215 	stw	r3,8(r2)
   278a0:	39000204 	addi	r4,r7,8
   278a4:	3ded883a 	add	r22,r7,r23
   278a8:	2800941e 	bne	r5,zero,27afc <_realloc_r+0x360>
   278ac:	30800530 	cmpltui	r2,r6,20
   278b0:	80c00017 	ldw	r3,0(r16)
   278b4:	1000df1e 	bne	r2,zero,27c34 <_realloc_r+0x498>
   278b8:	38c00215 	stw	r3,8(r7)
   278bc:	80c00117 	ldw	r3,4(r16)
   278c0:	30800728 	cmpgeui	r2,r6,28
   278c4:	38c00315 	stw	r3,12(r7)
   278c8:	1000dc1e 	bne	r2,zero,27c3c <_realloc_r+0x4a0>
   278cc:	80c00217 	ldw	r3,8(r16)
   278d0:	38800404 	addi	r2,r7,16
   278d4:	84000204 	addi	r16,r16,8
   278d8:	10c00015 	stw	r3,0(r2)
   278dc:	80c00117 	ldw	r3,4(r16)
   278e0:	b829883a 	mov	r20,r23
   278e4:	382b883a 	mov	r21,r7
   278e8:	10c00115 	stw	r3,4(r2)
   278ec:	80c00217 	ldw	r3,8(r16)
   278f0:	2021883a 	mov	r16,r4
   278f4:	10c00215 	stw	r3,8(r2)
   278f8:	a9800117 	ldw	r6,4(r21)
   278fc:	a445c83a 	sub	r2,r20,r17
   27900:	10c00430 	cmpltui	r3,r2,16
   27904:	3180004c 	andi	r6,r6,1
   27908:	18004926 	beq	r3,zero,27a30 <_realloc_r+0x294>
   2790c:	a18cb03a 	or	r6,r20,r6
   27910:	a9800115 	stw	r6,4(r21)
   27914:	b0800117 	ldw	r2,4(r22)
   27918:	10800054 	ori	r2,r2,1
   2791c:	b0800115 	stw	r2,4(r22)
   27920:	9809883a 	mov	r4,r19
   27924:	002df780 	call	2df78 <__malloc_unlock>
   27928:	8025883a 	mov	r18,r16
   2792c:	00000606 	br	27948 <_realloc_r+0x1ac>
   27930:	04400404 	movi	r17,16
   27934:	00c00404 	movi	r3,16
   27938:	8cbfb02e 	bgeu	r17,r18,277fc <_realloc_r+0x60>
   2793c:	00800304 	movi	r2,12
   27940:	98800015 	stw	r2,0(r19)
   27944:	0025883a 	mov	r18,zero
   27948:	9005883a 	mov	r2,r18
   2794c:	dfc00a17 	ldw	ra,40(sp)
   27950:	df000917 	ldw	fp,36(sp)
   27954:	ddc00817 	ldw	r23,32(sp)
   27958:	dd800717 	ldw	r22,28(sp)
   2795c:	dd400617 	ldw	r21,24(sp)
   27960:	dd000517 	ldw	r20,20(sp)
   27964:	dcc00417 	ldw	r19,16(sp)
   27968:	dc800317 	ldw	r18,12(sp)
   2796c:	dc400217 	ldw	r17,8(sp)
   27970:	dc000117 	ldw	r16,4(sp)
   27974:	dec00b04 	addi	sp,sp,44
   27978:	f800283a 	ret
   2797c:	1080004c 	andi	r2,r2,1
   27980:	10006c26 	beq	r2,zero,27b34 <_realloc_r+0x398>
   27984:	900b883a 	mov	r5,r18
   27988:	9809883a 	mov	r4,r19
   2798c:	00258e80 	call	258e8 <_malloc_r>
   27990:	1025883a 	mov	r18,r2
   27994:	10001626 	beq	r2,zero,279f0 <_realloc_r+0x254>
   27998:	80bfff17 	ldw	r2,-4(r16)
   2799c:	013fff84 	movi	r4,-2
   279a0:	90fffe04 	addi	r3,r18,-8
   279a4:	1104703a 	and	r2,r2,r4
   279a8:	a885883a 	add	r2,r21,r2
   279ac:	10c05b26 	beq	r2,r3,27b1c <_realloc_r+0x380>
   279b0:	a1bfff04 	addi	r6,r20,-4
   279b4:	30800968 	cmpgeui	r2,r6,37
   279b8:	10006a1e 	bne	r2,zero,27b64 <_realloc_r+0x3c8>
   279bc:	30800530 	cmpltui	r2,r6,20
   279c0:	81000017 	ldw	r4,0(r16)
   279c4:	10003726 	beq	r2,zero,27aa4 <_realloc_r+0x308>
   279c8:	9005883a 	mov	r2,r18
   279cc:	8007883a 	mov	r3,r16
   279d0:	11000015 	stw	r4,0(r2)
   279d4:	19000117 	ldw	r4,4(r3)
   279d8:	11000115 	stw	r4,4(r2)
   279dc:	18c00217 	ldw	r3,8(r3)
   279e0:	10c00215 	stw	r3,8(r2)
   279e4:	800b883a 	mov	r5,r16
   279e8:	9809883a 	mov	r4,r19
   279ec:	0024de80 	call	24de8 <_free_r>
   279f0:	9809883a 	mov	r4,r19
   279f4:	002df780 	call	2df78 <__malloc_unlock>
   279f8:	003fd306 	br	27948 <_realloc_r+0x1ac>
   279fc:	300b883a 	mov	r5,r6
   27a00:	dfc00a17 	ldw	ra,40(sp)
   27a04:	df000917 	ldw	fp,36(sp)
   27a08:	ddc00817 	ldw	r23,32(sp)
   27a0c:	dd800717 	ldw	r22,28(sp)
   27a10:	dd400617 	ldw	r21,24(sp)
   27a14:	dd000517 	ldw	r20,20(sp)
   27a18:	dcc00417 	ldw	r19,16(sp)
   27a1c:	dc800317 	ldw	r18,12(sp)
   27a20:	dc400217 	ldw	r17,8(sp)
   27a24:	dc000117 	ldw	r16,4(sp)
   27a28:	dec00b04 	addi	sp,sp,44
   27a2c:	00258e81 	jmpi	258e8 <_malloc_r>
   27a30:	344cb03a 	or	r6,r6,r17
   27a34:	a9800115 	stw	r6,4(r21)
   27a38:	ac4b883a 	add	r5,r21,r17
   27a3c:	10800054 	ori	r2,r2,1
   27a40:	28800115 	stw	r2,4(r5)
   27a44:	b0800117 	ldw	r2,4(r22)
   27a48:	29400204 	addi	r5,r5,8
   27a4c:	9809883a 	mov	r4,r19
   27a50:	10800054 	ori	r2,r2,1
   27a54:	b0800115 	stw	r2,4(r22)
   27a58:	0024de80 	call	24de8 <_free_r>
   27a5c:	003fb006 	br	27920 <_realloc_r+0x184>
   27a60:	2148703a 	and	r4,r4,r5
   27a64:	a10b883a 	add	r5,r20,r4
   27a68:	89800404 	addi	r6,r17,16
   27a6c:	29bf7716 	blt	r5,r6,2784c <_realloc_r+0xb0>
   27a70:	ac6b883a 	add	r21,r21,r17
   27a74:	2c45c83a 	sub	r2,r5,r17
   27a78:	e5400215 	stw	r21,8(fp)
   27a7c:	10800054 	ori	r2,r2,1
   27a80:	a8800115 	stw	r2,4(r21)
   27a84:	80bfff17 	ldw	r2,-4(r16)
   27a88:	9809883a 	mov	r4,r19
   27a8c:	8025883a 	mov	r18,r16
   27a90:	1080004c 	andi	r2,r2,1
   27a94:	1462b03a 	or	r17,r2,r17
   27a98:	847fff15 	stw	r17,-4(r16)
   27a9c:	002df780 	call	2df78 <__malloc_unlock>
   27aa0:	003fa906 	br	27948 <_realloc_r+0x1ac>
   27aa4:	91000015 	stw	r4,0(r18)
   27aa8:	80c00117 	ldw	r3,4(r16)
   27aac:	30800728 	cmpgeui	r2,r6,28
   27ab0:	90c00115 	stw	r3,4(r18)
   27ab4:	1000551e 	bne	r2,zero,27c0c <_realloc_r+0x470>
   27ab8:	81000217 	ldw	r4,8(r16)
   27abc:	80c00204 	addi	r3,r16,8
   27ac0:	90800204 	addi	r2,r18,8
   27ac4:	003fc206 	br	279d0 <_realloc_r+0x234>
   27ac8:	b0800317 	ldw	r2,12(r22)
   27acc:	b0c00217 	ldw	r3,8(r22)
   27ad0:	a1bfff04 	addi	r6,r20,-4
   27ad4:	31400968 	cmpgeui	r5,r6,37
   27ad8:	18800315 	stw	r2,12(r3)
   27adc:	10c00215 	stw	r3,8(r2)
   27ae0:	38c00217 	ldw	r3,8(r7)
   27ae4:	38800317 	ldw	r2,12(r7)
   27ae8:	39000204 	addi	r4,r7,8
   27aec:	3ded883a 	add	r22,r7,r23
   27af0:	18800315 	stw	r2,12(r3)
   27af4:	10c00215 	stw	r3,8(r2)
   27af8:	283f6c26 	beq	r5,zero,278ac <_realloc_r+0x110>
   27afc:	800b883a 	mov	r5,r16
   27b00:	d9c00015 	stw	r7,0(sp)
   27b04:	002629c0 	call	2629c <memmove>
   27b08:	d9c00017 	ldw	r7,0(sp)
   27b0c:	1021883a 	mov	r16,r2
   27b10:	b829883a 	mov	r20,r23
   27b14:	382b883a 	mov	r21,r7
   27b18:	003f7706 	br	278f8 <_realloc_r+0x15c>
   27b1c:	90bfff17 	ldw	r2,-4(r18)
   27b20:	00ffff04 	movi	r3,-4
   27b24:	10c4703a 	and	r2,r2,r3
   27b28:	a0a9883a 	add	r20,r20,r2
   27b2c:	ad2d883a 	add	r22,r21,r20
   27b30:	003f7106 	br	278f8 <_realloc_r+0x15c>
   27b34:	81fffe17 	ldw	r7,-8(r16)
   27b38:	a9cfc83a 	sub	r7,r21,r7
   27b3c:	39000117 	ldw	r4,4(r7)
   27b40:	214a703a 	and	r5,r4,r5
   27b44:	003f4d06 	br	2787c <_realloc_r+0xe0>
   27b48:	b0800317 	ldw	r2,12(r22)
   27b4c:	b0c00217 	ldw	r3,8(r22)
   27b50:	2829883a 	mov	r20,r5
   27b54:	a96d883a 	add	r22,r21,r5
   27b58:	18800315 	stw	r2,12(r3)
   27b5c:	10c00215 	stw	r3,8(r2)
   27b60:	003f6506 	br	278f8 <_realloc_r+0x15c>
   27b64:	800b883a 	mov	r5,r16
   27b68:	9009883a 	mov	r4,r18
   27b6c:	002629c0 	call	2629c <memmove>
   27b70:	003f9c06 	br	279e4 <_realloc_r+0x248>
   27b74:	88800404 	addi	r2,r17,16
   27b78:	b8bf4016 	blt	r23,r2,2787c <_realloc_r+0xe0>
   27b7c:	38800317 	ldw	r2,12(r7)
   27b80:	38c00217 	ldw	r3,8(r7)
   27b84:	a1bfff04 	addi	r6,r20,-4
   27b88:	31000968 	cmpgeui	r4,r6,37
   27b8c:	18800315 	stw	r2,12(r3)
   27b90:	10c00215 	stw	r3,8(r2)
   27b94:	3c800204 	addi	r18,r7,8
   27b98:	20003b1e 	bne	r4,zero,27c88 <_realloc_r+0x4ec>
   27b9c:	30800530 	cmpltui	r2,r6,20
   27ba0:	80c00017 	ldw	r3,0(r16)
   27ba4:	1000361e 	bne	r2,zero,27c80 <_realloc_r+0x4e4>
   27ba8:	38c00215 	stw	r3,8(r7)
   27bac:	80c00117 	ldw	r3,4(r16)
   27bb0:	30800728 	cmpgeui	r2,r6,28
   27bb4:	38c00315 	stw	r3,12(r7)
   27bb8:	1000401e 	bne	r2,zero,27cbc <_realloc_r+0x520>
   27bbc:	80c00217 	ldw	r3,8(r16)
   27bc0:	38800404 	addi	r2,r7,16
   27bc4:	84000204 	addi	r16,r16,8
   27bc8:	10c00015 	stw	r3,0(r2)
   27bcc:	80c00117 	ldw	r3,4(r16)
   27bd0:	10c00115 	stw	r3,4(r2)
   27bd4:	80c00217 	ldw	r3,8(r16)
   27bd8:	10c00215 	stw	r3,8(r2)
   27bdc:	3c47883a 	add	r3,r7,r17
   27be0:	bc45c83a 	sub	r2,r23,r17
   27be4:	e0c00215 	stw	r3,8(fp)
   27be8:	10800054 	ori	r2,r2,1
   27bec:	18800115 	stw	r2,4(r3)
   27bf0:	38800117 	ldw	r2,4(r7)
   27bf4:	9809883a 	mov	r4,r19
   27bf8:	1080004c 	andi	r2,r2,1
   27bfc:	1462b03a 	or	r17,r2,r17
   27c00:	3c400115 	stw	r17,4(r7)
   27c04:	002df780 	call	2df78 <__malloc_unlock>
   27c08:	003f4f06 	br	27948 <_realloc_r+0x1ac>
   27c0c:	80800217 	ldw	r2,8(r16)
   27c10:	31800920 	cmpeqi	r6,r6,36
   27c14:	90800215 	stw	r2,8(r18)
   27c18:	80800317 	ldw	r2,12(r16)
   27c1c:	90800315 	stw	r2,12(r18)
   27c20:	81000417 	ldw	r4,16(r16)
   27c24:	30000f1e 	bne	r6,zero,27c64 <_realloc_r+0x4c8>
   27c28:	80c00404 	addi	r3,r16,16
   27c2c:	90800404 	addi	r2,r18,16
   27c30:	003f6706 	br	279d0 <_realloc_r+0x234>
   27c34:	2005883a 	mov	r2,r4
   27c38:	003f2706 	br	278d8 <_realloc_r+0x13c>
   27c3c:	80800217 	ldw	r2,8(r16)
   27c40:	31800920 	cmpeqi	r6,r6,36
   27c44:	38800415 	stw	r2,16(r7)
   27c48:	80800317 	ldw	r2,12(r16)
   27c4c:	38800515 	stw	r2,20(r7)
   27c50:	80c00417 	ldw	r3,16(r16)
   27c54:	3000121e 	bne	r6,zero,27ca0 <_realloc_r+0x504>
   27c58:	38800604 	addi	r2,r7,24
   27c5c:	84000404 	addi	r16,r16,16
   27c60:	003f1d06 	br	278d8 <_realloc_r+0x13c>
   27c64:	91000415 	stw	r4,16(r18)
   27c68:	81000517 	ldw	r4,20(r16)
   27c6c:	80c00604 	addi	r3,r16,24
   27c70:	90800604 	addi	r2,r18,24
   27c74:	91000515 	stw	r4,20(r18)
   27c78:	81000617 	ldw	r4,24(r16)
   27c7c:	003f5406 	br	279d0 <_realloc_r+0x234>
   27c80:	9005883a 	mov	r2,r18
   27c84:	003fd006 	br	27bc8 <_realloc_r+0x42c>
   27c88:	800b883a 	mov	r5,r16
   27c8c:	9009883a 	mov	r4,r18
   27c90:	d9c00015 	stw	r7,0(sp)
   27c94:	002629c0 	call	2629c <memmove>
   27c98:	d9c00017 	ldw	r7,0(sp)
   27c9c:	003fcf06 	br	27bdc <_realloc_r+0x440>
   27ca0:	84000604 	addi	r16,r16,24
   27ca4:	38c00615 	stw	r3,24(r7)
   27ca8:	80ffff17 	ldw	r3,-4(r16)
   27cac:	38800804 	addi	r2,r7,32
   27cb0:	38c00715 	stw	r3,28(r7)
   27cb4:	80c00017 	ldw	r3,0(r16)
   27cb8:	003f0706 	br	278d8 <_realloc_r+0x13c>
   27cbc:	80800217 	ldw	r2,8(r16)
   27cc0:	31800920 	cmpeqi	r6,r6,36
   27cc4:	38800415 	stw	r2,16(r7)
   27cc8:	80800317 	ldw	r2,12(r16)
   27ccc:	38800515 	stw	r2,20(r7)
   27cd0:	80c00417 	ldw	r3,16(r16)
   27cd4:	3000031e 	bne	r6,zero,27ce4 <_realloc_r+0x548>
   27cd8:	38800604 	addi	r2,r7,24
   27cdc:	84000404 	addi	r16,r16,16
   27ce0:	003fb906 	br	27bc8 <_realloc_r+0x42c>
   27ce4:	84000604 	addi	r16,r16,24
   27ce8:	38c00615 	stw	r3,24(r7)
   27cec:	80ffff17 	ldw	r3,-4(r16)
   27cf0:	38800804 	addi	r2,r7,32
   27cf4:	38c00715 	stw	r3,28(r7)
   27cf8:	80c00017 	ldw	r3,0(r16)
   27cfc:	003fb206 	br	27bc8 <_realloc_r+0x42c>

00027d00 <_sbrk_r>:
   27d00:	defffe04 	addi	sp,sp,-8
   27d04:	dc000015 	stw	r16,0(sp)
   27d08:	008000f4 	movhi	r2,3
   27d0c:	2021883a 	mov	r16,r4
   27d10:	2809883a 	mov	r4,r5
   27d14:	dfc00115 	stw	ra,4(sp)
   27d18:	10103715 	stw	zero,16604(r2)
   27d1c:	002e1500 	call	2e150 <sbrk>
   27d20:	10ffffd8 	cmpnei	r3,r2,-1
   27d24:	18000426 	beq	r3,zero,27d38 <_sbrk_r+0x38>
   27d28:	dfc00117 	ldw	ra,4(sp)
   27d2c:	dc000017 	ldw	r16,0(sp)
   27d30:	dec00204 	addi	sp,sp,8
   27d34:	f800283a 	ret
   27d38:	00c000f4 	movhi	r3,3
   27d3c:	18d03717 	ldw	r3,16604(r3)
   27d40:	183ff926 	beq	r3,zero,27d28 <_sbrk_r+0x28>
   27d44:	80c00015 	stw	r3,0(r16)
   27d48:	dfc00117 	ldw	ra,4(sp)
   27d4c:	dc000017 	ldw	r16,0(sp)
   27d50:	dec00204 	addi	sp,sp,8
   27d54:	f800283a 	ret

00027d58 <__sread>:
   27d58:	defffe04 	addi	sp,sp,-8
   27d5c:	dc000015 	stw	r16,0(sp)
   27d60:	2821883a 	mov	r16,r5
   27d64:	2940038f 	ldh	r5,14(r5)
   27d68:	dfc00115 	stw	ra,4(sp)
   27d6c:	0029c500 	call	29c50 <_read_r>
   27d70:	10000716 	blt	r2,zero,27d90 <__sread+0x38>
   27d74:	80c01417 	ldw	r3,80(r16)
   27d78:	1887883a 	add	r3,r3,r2
   27d7c:	80c01415 	stw	r3,80(r16)
   27d80:	dfc00117 	ldw	ra,4(sp)
   27d84:	dc000017 	ldw	r16,0(sp)
   27d88:	dec00204 	addi	sp,sp,8
   27d8c:	f800283a 	ret
   27d90:	80c0030b 	ldhu	r3,12(r16)
   27d94:	18fbffcc 	andi	r3,r3,61439
   27d98:	80c0030d 	sth	r3,12(r16)
   27d9c:	dfc00117 	ldw	ra,4(sp)
   27da0:	dc000017 	ldw	r16,0(sp)
   27da4:	dec00204 	addi	sp,sp,8
   27da8:	f800283a 	ret

00027dac <__seofread>:
   27dac:	0005883a 	mov	r2,zero
   27db0:	f800283a 	ret

00027db4 <__swrite>:
   27db4:	2880030b 	ldhu	r2,12(r5)
   27db8:	defffb04 	addi	sp,sp,-20
   27dbc:	dcc00315 	stw	r19,12(sp)
   27dc0:	dc800215 	stw	r18,8(sp)
   27dc4:	dc400115 	stw	r17,4(sp)
   27dc8:	dc000015 	stw	r16,0(sp)
   27dcc:	dfc00415 	stw	ra,16(sp)
   27dd0:	10c0400c 	andi	r3,r2,256
   27dd4:	2821883a 	mov	r16,r5
   27dd8:	2023883a 	mov	r17,r4
   27ddc:	2940038f 	ldh	r5,14(r5)
   27de0:	3025883a 	mov	r18,r6
   27de4:	3827883a 	mov	r19,r7
   27de8:	18000c1e 	bne	r3,zero,27e1c <__swrite+0x68>
   27dec:	10bbffcc 	andi	r2,r2,61439
   27df0:	980f883a 	mov	r7,r19
   27df4:	900d883a 	mov	r6,r18
   27df8:	8809883a 	mov	r4,r17
   27dfc:	8080030d 	sth	r2,12(r16)
   27e00:	dfc00417 	ldw	ra,16(sp)
   27e04:	dcc00317 	ldw	r19,12(sp)
   27e08:	dc800217 	ldw	r18,8(sp)
   27e0c:	dc400117 	ldw	r17,4(sp)
   27e10:	dc000017 	ldw	r16,0(sp)
   27e14:	dec00504 	addi	sp,sp,20
   27e18:	00294f41 	jmpi	294f4 <_write_r>
   27e1c:	01c00084 	movi	r7,2
   27e20:	000d883a 	mov	r6,zero
   27e24:	0029b9c0 	call	29b9c <_lseek_r>
   27e28:	8080030b 	ldhu	r2,12(r16)
   27e2c:	8140038f 	ldh	r5,14(r16)
   27e30:	003fee06 	br	27dec <__swrite+0x38>

00027e34 <__sseek>:
   27e34:	defffe04 	addi	sp,sp,-8
   27e38:	dc000015 	stw	r16,0(sp)
   27e3c:	2821883a 	mov	r16,r5
   27e40:	2940038f 	ldh	r5,14(r5)
   27e44:	dfc00115 	stw	ra,4(sp)
   27e48:	0029b9c0 	call	29b9c <_lseek_r>
   27e4c:	10ffffd8 	cmpnei	r3,r2,-1
   27e50:	18000826 	beq	r3,zero,27e74 <__sseek+0x40>
   27e54:	80c0030b 	ldhu	r3,12(r16)
   27e58:	80801415 	stw	r2,80(r16)
   27e5c:	18c40014 	ori	r3,r3,4096
   27e60:	80c0030d 	sth	r3,12(r16)
   27e64:	dfc00117 	ldw	ra,4(sp)
   27e68:	dc000017 	ldw	r16,0(sp)
   27e6c:	dec00204 	addi	sp,sp,8
   27e70:	f800283a 	ret
   27e74:	80c0030b 	ldhu	r3,12(r16)
   27e78:	18fbffcc 	andi	r3,r3,61439
   27e7c:	80c0030d 	sth	r3,12(r16)
   27e80:	dfc00117 	ldw	ra,4(sp)
   27e84:	dc000017 	ldw	r16,0(sp)
   27e88:	dec00204 	addi	sp,sp,8
   27e8c:	f800283a 	ret

00027e90 <__sclose>:
   27e90:	2940038f 	ldh	r5,14(r5)
   27e94:	00295581 	jmpi	29558 <_close_r>

00027e98 <__sprint_r.part.0>:
   27e98:	28801917 	ldw	r2,100(r5)
   27e9c:	defff604 	addi	sp,sp,-40
   27ea0:	dcc00315 	stw	r19,12(sp)
   27ea4:	dfc00915 	stw	ra,36(sp)
   27ea8:	df000815 	stw	fp,32(sp)
   27eac:	ddc00715 	stw	r23,28(sp)
   27eb0:	dd800615 	stw	r22,24(sp)
   27eb4:	dd400515 	stw	r21,20(sp)
   27eb8:	dd000415 	stw	r20,16(sp)
   27ebc:	dc800215 	stw	r18,8(sp)
   27ec0:	dc400115 	stw	r17,4(sp)
   27ec4:	dc000015 	stw	r16,0(sp)
   27ec8:	1088000c 	andi	r2,r2,8192
   27ecc:	3027883a 	mov	r19,r6
   27ed0:	10002c26 	beq	r2,zero,27f84 <__sprint_r.part.0+0xec>
   27ed4:	30800217 	ldw	r2,8(r6)
   27ed8:	35000017 	ldw	r20,0(r6)
   27edc:	2821883a 	mov	r16,r5
   27ee0:	2023883a 	mov	r17,r4
   27ee4:	05bfff04 	movi	r22,-4
   27ee8:	10002426 	beq	r2,zero,27f7c <__sprint_r.part.0+0xe4>
   27eec:	a5400117 	ldw	r21,4(r20)
   27ef0:	a5c00017 	ldw	r23,0(r20)
   27ef4:	a824d0ba 	srli	r18,r21,2
   27ef8:	90001b26 	beq	r18,zero,27f68 <__sprint_r.part.0+0xd0>
   27efc:	0039883a 	mov	fp,zero
   27f00:	00000206 	br	27f0c <__sprint_r.part.0+0x74>
   27f04:	bdc00104 	addi	r23,r23,4
   27f08:	97001626 	beq	r18,fp,27f64 <__sprint_r.part.0+0xcc>
   27f0c:	b9400017 	ldw	r5,0(r23)
   27f10:	800d883a 	mov	r6,r16
   27f14:	8809883a 	mov	r4,r17
   27f18:	00299b00 	call	299b0 <_fputwc_r>
   27f1c:	10bfffe0 	cmpeqi	r2,r2,-1
   27f20:	e7000044 	addi	fp,fp,1
   27f24:	103ff726 	beq	r2,zero,27f04 <__sprint_r.part.0+0x6c>
   27f28:	00bfffc4 	movi	r2,-1
   27f2c:	98000215 	stw	zero,8(r19)
   27f30:	98000115 	stw	zero,4(r19)
   27f34:	dfc00917 	ldw	ra,36(sp)
   27f38:	df000817 	ldw	fp,32(sp)
   27f3c:	ddc00717 	ldw	r23,28(sp)
   27f40:	dd800617 	ldw	r22,24(sp)
   27f44:	dd400517 	ldw	r21,20(sp)
   27f48:	dd000417 	ldw	r20,16(sp)
   27f4c:	dcc00317 	ldw	r19,12(sp)
   27f50:	dc800217 	ldw	r18,8(sp)
   27f54:	dc400117 	ldw	r17,4(sp)
   27f58:	dc000017 	ldw	r16,0(sp)
   27f5c:	dec00a04 	addi	sp,sp,40
   27f60:	f800283a 	ret
   27f64:	98800217 	ldw	r2,8(r19)
   27f68:	adaa703a 	and	r21,r21,r22
   27f6c:	1545c83a 	sub	r2,r2,r21
   27f70:	98800215 	stw	r2,8(r19)
   27f74:	a5000204 	addi	r20,r20,8
   27f78:	103fdc1e 	bne	r2,zero,27eec <__sprint_r.part.0+0x54>
   27f7c:	0005883a 	mov	r2,zero
   27f80:	003fea06 	br	27f2c <__sprint_r.part.0+0x94>
   27f84:	00250e40 	call	250e4 <__sfvwrite_r>
   27f88:	003fe806 	br	27f2c <__sprint_r.part.0+0x94>

00027f8c <__sprint_r>:
   27f8c:	30c00217 	ldw	r3,8(r6)
   27f90:	18000126 	beq	r3,zero,27f98 <__sprint_r+0xc>
   27f94:	0027e981 	jmpi	27e98 <__sprint_r.part.0>
   27f98:	30000115 	stw	zero,4(r6)
   27f9c:	0005883a 	mov	r2,zero
   27fa0:	f800283a 	ret

00027fa4 <___vfiprintf_internal_r>:
   27fa4:	deffcf04 	addi	sp,sp,-196
   27fa8:	dd802d15 	stw	r22,180(sp)
   27fac:	dd402c15 	stw	r21,176(sp)
   27fb0:	dd002b15 	stw	r20,172(sp)
   27fb4:	dfc03015 	stw	ra,192(sp)
   27fb8:	df002f15 	stw	fp,188(sp)
   27fbc:	ddc02e15 	stw	r23,184(sp)
   27fc0:	dcc02a15 	stw	r19,168(sp)
   27fc4:	dc802915 	stw	r18,164(sp)
   27fc8:	dc402815 	stw	r17,160(sp)
   27fcc:	dc002715 	stw	r16,156(sp)
   27fd0:	d9c00415 	stw	r7,16(sp)
   27fd4:	202d883a 	mov	r22,r4
   27fd8:	282b883a 	mov	r21,r5
   27fdc:	3029883a 	mov	r20,r6
   27fe0:	20000226 	beq	r4,zero,27fec <___vfiprintf_internal_r+0x48>
   27fe4:	20800e17 	ldw	r2,56(r4)
   27fe8:	1001b426 	beq	r2,zero,286bc <___vfiprintf_internal_r+0x718>
   27fec:	a880030b 	ldhu	r2,12(r21)
   27ff0:	10c8000c 	andi	r3,r2,8192
   27ff4:	1800061e 	bne	r3,zero,28010 <___vfiprintf_internal_r+0x6c>
   27ff8:	a8c01917 	ldw	r3,100(r21)
   27ffc:	0137ffc4 	movi	r4,-8193
   28000:	10880014 	ori	r2,r2,8192
   28004:	1906703a 	and	r3,r3,r4
   28008:	a880030d 	sth	r2,12(r21)
   2800c:	a8c01915 	stw	r3,100(r21)
   28010:	10c0020c 	andi	r3,r2,8
   28014:	18010826 	beq	r3,zero,28438 <___vfiprintf_internal_r+0x494>
   28018:	a8c00417 	ldw	r3,16(r21)
   2801c:	18010626 	beq	r3,zero,28438 <___vfiprintf_internal_r+0x494>
   28020:	1080068c 	andi	r2,r2,26
   28024:	10800298 	cmpnei	r2,r2,10
   28028:	10010b26 	beq	r2,zero,28458 <___vfiprintf_internal_r+0x4b4>
   2802c:	dc801704 	addi	r18,sp,92
   28030:	dc800a15 	stw	r18,40(sp)
   28034:	d8000c15 	stw	zero,48(sp)
   28038:	d8000b15 	stw	zero,44(sp)
   2803c:	9021883a 	mov	r16,r18
   28040:	d8000515 	stw	zero,20(sp)
   28044:	d8000115 	stw	zero,4(sp)
   28048:	a0c00007 	ldb	r3,0(r20)
   2804c:	1800e826 	beq	r3,zero,283f0 <___vfiprintf_internal_r+0x44c>
   28050:	a023883a 	mov	r17,r20
   28054:	00000306 	br	28064 <___vfiprintf_internal_r+0xc0>
   28058:	88c00047 	ldb	r3,1(r17)
   2805c:	8c400044 	addi	r17,r17,1
   28060:	18012a26 	beq	r3,zero,2850c <___vfiprintf_internal_r+0x568>
   28064:	18c00958 	cmpnei	r3,r3,37
   28068:	183ffb1e 	bne	r3,zero,28058 <___vfiprintf_internal_r+0xb4>
   2806c:	8d27c83a 	sub	r19,r17,r20
   28070:	8d01281e 	bne	r17,r20,28514 <___vfiprintf_internal_r+0x570>
   28074:	88800003 	ldbu	r2,0(r17)
   28078:	10803fcc 	andi	r2,r2,255
   2807c:	1080201c 	xori	r2,r2,128
   28080:	10bfe004 	addi	r2,r2,-128
   28084:	1000da26 	beq	r2,zero,283f0 <___vfiprintf_internal_r+0x44c>
   28088:	88800047 	ldb	r2,1(r17)
   2808c:	8d000044 	addi	r20,r17,1
   28090:	d8000945 	stb	zero,37(sp)
   28094:	000b883a 	mov	r5,zero
   28098:	000d883a 	mov	r6,zero
   2809c:	023fffc4 	movi	r8,-1
   280a0:	0023883a 	mov	r17,zero
   280a4:	001b883a 	mov	r13,zero
   280a8:	a5000044 	addi	r20,r20,1
   280ac:	10fff804 	addi	r3,r2,-32
   280b0:	19001668 	cmpgeui	r4,r3,89
   280b4:	20006c1e 	bne	r4,zero,28268 <___vfiprintf_internal_r+0x2c4>
   280b8:	180690ba 	slli	r3,r3,2
   280bc:	010000f4 	movhi	r4,3
   280c0:	1909883a 	add	r4,r3,r4
   280c4:	20e03317 	ldw	r3,-32564(r4)
   280c8:	1800683a 	jmp	r3
   280cc:	000289cc 	andi	zero,zero,2599
   280d0:	00028268 	cmpgeui	zero,zero,2569
   280d4:	00028268 	cmpgeui	zero,zero,2569
   280d8:	000289c0 	call	289c <__alt_mem_onchip_memory-0x1d764>
   280dc:	00028268 	cmpgeui	zero,zero,2569
   280e0:	00028268 	cmpgeui	zero,zero,2569
   280e4:	00028268 	cmpgeui	zero,zero,2569
   280e8:	00028268 	cmpgeui	zero,zero,2569
   280ec:	00028268 	cmpgeui	zero,zero,2569
   280f0:	00028268 	cmpgeui	zero,zero,2569
   280f4:	00028998 	cmpnei	zero,zero,2598
   280f8:	00028988 	cmpgei	zero,zero,2598
   280fc:	00028268 	cmpgeui	zero,zero,2569
   28100:	00028970 	cmpltui	zero,zero,2597
   28104:	00028924 	muli	zero,zero,2596
   28108:	00028268 	cmpgeui	zero,zero,2569
   2810c:	00028918 	cmpnei	zero,zero,2596
   28110:	00028230 	cmpltui	zero,zero,2568
   28114:	00028230 	cmpltui	zero,zero,2568
   28118:	00028230 	cmpltui	zero,zero,2568
   2811c:	00028230 	cmpltui	zero,zero,2568
   28120:	00028230 	cmpltui	zero,zero,2568
   28124:	00028230 	cmpltui	zero,zero,2568
   28128:	00028230 	cmpltui	zero,zero,2568
   2812c:	00028230 	cmpltui	zero,zero,2568
   28130:	00028230 	cmpltui	zero,zero,2568
   28134:	00028268 	cmpgeui	zero,zero,2569
   28138:	00028268 	cmpgeui	zero,zero,2569
   2813c:	00028268 	cmpgeui	zero,zero,2569
   28140:	00028268 	cmpgeui	zero,zero,2569
   28144:	00028268 	cmpgeui	zero,zero,2569
   28148:	00028268 	cmpgeui	zero,zero,2569
   2814c:	00028268 	cmpgeui	zero,zero,2569
   28150:	00028268 	cmpgeui	zero,zero,2569
   28154:	00028268 	cmpgeui	zero,zero,2569
   28158:	00028268 	cmpgeui	zero,zero,2569
   2815c:	00028834 	movhi	zero,2592
   28160:	00028268 	cmpgeui	zero,zero,2569
   28164:	00028268 	cmpgeui	zero,zero,2569
   28168:	00028268 	cmpgeui	zero,zero,2569
   2816c:	00028268 	cmpgeui	zero,zero,2569
   28170:	00028268 	cmpgeui	zero,zero,2569
   28174:	00028268 	cmpgeui	zero,zero,2569
   28178:	00028268 	cmpgeui	zero,zero,2569
   2817c:	00028268 	cmpgeui	zero,zero,2569
   28180:	00028268 	cmpgeui	zero,zero,2569
   28184:	00028268 	cmpgeui	zero,zero,2569
   28188:	000284a4 	muli	zero,zero,2578
   2818c:	00028268 	cmpgeui	zero,zero,2569
   28190:	00028268 	cmpgeui	zero,zero,2569
   28194:	00028268 	cmpgeui	zero,zero,2569
   28198:	00028268 	cmpgeui	zero,zero,2569
   2819c:	00028268 	cmpgeui	zero,zero,2569
   281a0:	0002847c 	xorhi	zero,zero,2577
   281a4:	00028268 	cmpgeui	zero,zero,2569
   281a8:	00028268 	cmpgeui	zero,zero,2569
   281ac:	000287ec 	andhi	zero,zero,2591
   281b0:	00028268 	cmpgeui	zero,zero,2569
   281b4:	00028268 	cmpgeui	zero,zero,2569
   281b8:	00028268 	cmpgeui	zero,zero,2569
   281bc:	00028268 	cmpgeui	zero,zero,2569
   281c0:	00028268 	cmpgeui	zero,zero,2569
   281c4:	00028268 	cmpgeui	zero,zero,2569
   281c8:	00028268 	cmpgeui	zero,zero,2569
   281cc:	00028268 	cmpgeui	zero,zero,2569
   281d0:	00028268 	cmpgeui	zero,zero,2569
   281d4:	00028268 	cmpgeui	zero,zero,2569
   281d8:	000287c4 	movi	zero,2591
   281dc:	000286c4 	movi	zero,2587
   281e0:	00028268 	cmpgeui	zero,zero,2569
   281e4:	00028268 	cmpgeui	zero,zero,2569
   281e8:	00028268 	cmpgeui	zero,zero,2569
   281ec:	00028768 	cmpgeui	zero,zero,2589
   281f0:	000286c4 	movi	zero,2587
   281f4:	00028268 	cmpgeui	zero,zero,2569
   281f8:	00028268 	cmpgeui	zero,zero,2569
   281fc:	000287b0 	cmpltui	zero,zero,2590
   28200:	00028268 	cmpgeui	zero,zero,2569
   28204:	00028774 	movhi	zero,2589
   28208:	000284a8 	cmpgeui	zero,zero,2578
   2820c:	00028aa4 	muli	zero,zero,2602
   28210:	00028a98 	cmpnei	zero,zero,2602
   28214:	00028268 	cmpgeui	zero,zero,2569
   28218:	00028a40 	call	28a4 <__alt_mem_onchip_memory-0x1d75c>
   2821c:	00028268 	cmpgeui	zero,zero,2569
   28220:	00028480 	call	2848 <__alt_mem_onchip_memory-0x1d7b8>
   28224:	00028268 	cmpgeui	zero,zero,2569
   28228:	00028268 	cmpgeui	zero,zero,2569
   2822c:	000289f8 	rdprs	zero,zero,2599
   28230:	0023883a 	mov	r17,zero
   28234:	113ff404 	addi	r4,r2,-48
   28238:	880690ba 	slli	r3,r17,2
   2823c:	a0800007 	ldb	r2,0(r20)
   28240:	a5000044 	addi	r20,r20,1
   28244:	1c63883a 	add	r17,r3,r17
   28248:	8c63883a 	add	r17,r17,r17
   2824c:	2463883a 	add	r17,r4,r17
   28250:	113ff404 	addi	r4,r2,-48
   28254:	20c002b0 	cmpltui	r3,r4,10
   28258:	183ff71e 	bne	r3,zero,28238 <___vfiprintf_internal_r+0x294>
   2825c:	10fff804 	addi	r3,r2,-32
   28260:	19001668 	cmpgeui	r4,r3,89
   28264:	203f9426 	beq	r4,zero,280b8 <___vfiprintf_internal_r+0x114>
   28268:	29403fcc 	andi	r5,r5,255
   2826c:	2803e31e 	bne	r5,zero,291fc <___vfiprintf_internal_r+0x1258>
   28270:	10005f26 	beq	r2,zero,283f0 <___vfiprintf_internal_r+0x44c>
   28274:	d8800d05 	stb	r2,52(sp)
   28278:	d8000945 	stb	zero,37(sp)
   2827c:	05c00044 	movi	r23,1
   28280:	07000044 	movi	fp,1
   28284:	dcc00d04 	addi	r19,sp,52
   28288:	db400015 	stw	r13,0(sp)
   2828c:	0011883a 	mov	r8,zero
   28290:	d8800017 	ldw	r2,0(sp)
   28294:	1380008c 	andi	r14,r2,2
   28298:	70000126 	beq	r14,zero,282a0 <___vfiprintf_internal_r+0x2fc>
   2829c:	bdc00084 	addi	r23,r23,2
   282a0:	d8800017 	ldw	r2,0(sp)
   282a4:	d9000b17 	ldw	r4,44(sp)
   282a8:	1340210c 	andi	r13,r2,132
   282ac:	21800044 	addi	r6,r4,1
   282b0:	d8800c17 	ldw	r2,48(sp)
   282b4:	300b883a 	mov	r5,r6
   282b8:	6800021e 	bne	r13,zero,282c4 <___vfiprintf_internal_r+0x320>
   282bc:	8dc7c83a 	sub	r3,r17,r23
   282c0:	00c2d716 	blt	zero,r3,28e20 <___vfiprintf_internal_r+0xe7c>
   282c4:	d8c00947 	ldb	r3,37(sp)
   282c8:	81800204 	addi	r6,r16,8
   282cc:	18000d26 	beq	r3,zero,28304 <___vfiprintf_internal_r+0x360>
   282d0:	d8c00944 	addi	r3,sp,37
   282d4:	10800044 	addi	r2,r2,1
   282d8:	80c00015 	stw	r3,0(r16)
   282dc:	00c00044 	movi	r3,1
   282e0:	80c00115 	stw	r3,4(r16)
   282e4:	d8800c15 	stw	r2,48(sp)
   282e8:	d9400b15 	stw	r5,44(sp)
   282ec:	28c00208 	cmpgei	r3,r5,8
   282f0:	1802ac1e 	bne	r3,zero,28da4 <___vfiprintf_internal_r+0xe00>
   282f4:	2809883a 	mov	r4,r5
   282f8:	3021883a 	mov	r16,r6
   282fc:	29400044 	addi	r5,r5,1
   28300:	31800204 	addi	r6,r6,8
   28304:	70001826 	beq	r14,zero,28368 <___vfiprintf_internal_r+0x3c4>
   28308:	d8c00984 	addi	r3,sp,38
   2830c:	10800084 	addi	r2,r2,2
   28310:	80c00015 	stw	r3,0(r16)
   28314:	00c00084 	movi	r3,2
   28318:	80c00115 	stw	r3,4(r16)
   2831c:	d8800c15 	stw	r2,48(sp)
   28320:	d9400b15 	stw	r5,44(sp)
   28324:	28c00208 	cmpgei	r3,r5,8
   28328:	1802b626 	beq	r3,zero,28e04 <___vfiprintf_internal_r+0xe60>
   2832c:	10031226 	beq	r2,zero,28f78 <___vfiprintf_internal_r+0xfd4>
   28330:	d9800a04 	addi	r6,sp,40
   28334:	a80b883a 	mov	r5,r21
   28338:	b009883a 	mov	r4,r22
   2833c:	da000315 	stw	r8,12(sp)
   28340:	db400215 	stw	r13,8(sp)
   28344:	0027e980 	call	27e98 <__sprint_r.part.0>
   28348:	10002b1e 	bne	r2,zero,283f8 <___vfiprintf_internal_r+0x454>
   2834c:	d9000b17 	ldw	r4,44(sp)
   28350:	d8800c17 	ldw	r2,48(sp)
   28354:	da000317 	ldw	r8,12(sp)
   28358:	db400217 	ldw	r13,8(sp)
   2835c:	d9801904 	addi	r6,sp,100
   28360:	21400044 	addi	r5,r4,1
   28364:	9021883a 	mov	r16,r18
   28368:	6b402018 	cmpnei	r13,r13,128
   2836c:	68020c26 	beq	r13,zero,28ba0 <___vfiprintf_internal_r+0xbfc>
   28370:	4711c83a 	sub	r8,r8,fp
   28374:	02024b16 	blt	zero,r8,28ca4 <___vfiprintf_internal_r+0xd00>
   28378:	e085883a 	add	r2,fp,r2
   2837c:	d9400b15 	stw	r5,44(sp)
   28380:	84c00015 	stw	r19,0(r16)
   28384:	87000115 	stw	fp,4(r16)
   28388:	d8800c15 	stw	r2,48(sp)
   2838c:	29400210 	cmplti	r5,r5,8
   28390:	2800081e 	bne	r5,zero,283b4 <___vfiprintf_internal_r+0x410>
   28394:	10008f26 	beq	r2,zero,285d4 <___vfiprintf_internal_r+0x630>
   28398:	d9800a04 	addi	r6,sp,40
   2839c:	a80b883a 	mov	r5,r21
   283a0:	b009883a 	mov	r4,r22
   283a4:	0027e980 	call	27e98 <__sprint_r.part.0>
   283a8:	1000131e 	bne	r2,zero,283f8 <___vfiprintf_internal_r+0x454>
   283ac:	d8800c17 	ldw	r2,48(sp)
   283b0:	900d883a 	mov	r6,r18
   283b4:	d8c00017 	ldw	r3,0(sp)
   283b8:	1cc0010c 	andi	r19,r3,4
   283bc:	98000226 	beq	r19,zero,283c8 <___vfiprintf_internal_r+0x424>
   283c0:	8de1c83a 	sub	r16,r17,r23
   283c4:	04008a16 	blt	zero,r16,285f0 <___vfiprintf_internal_r+0x64c>
   283c8:	8dc0010e 	bge	r17,r23,283d0 <___vfiprintf_internal_r+0x42c>
   283cc:	b823883a 	mov	r17,r23
   283d0:	d8c00117 	ldw	r3,4(sp)
   283d4:	1c47883a 	add	r3,r3,r17
   283d8:	d8c00115 	stw	r3,4(sp)
   283dc:	1002671e 	bne	r2,zero,28d7c <___vfiprintf_internal_r+0xdd8>
   283e0:	a0c00007 	ldb	r3,0(r20)
   283e4:	d8000b15 	stw	zero,44(sp)
   283e8:	9021883a 	mov	r16,r18
   283ec:	183f181e 	bne	r3,zero,28050 <___vfiprintf_internal_r+0xac>
   283f0:	d8800c17 	ldw	r2,48(sp)
   283f4:	1003831e 	bne	r2,zero,29204 <___vfiprintf_internal_r+0x1260>
   283f8:	a880030b 	ldhu	r2,12(r21)
   283fc:	1080100c 	andi	r2,r2,64
   28400:	10039e1e 	bne	r2,zero,2927c <___vfiprintf_internal_r+0x12d8>
   28404:	d8800117 	ldw	r2,4(sp)
   28408:	dfc03017 	ldw	ra,192(sp)
   2840c:	df002f17 	ldw	fp,188(sp)
   28410:	ddc02e17 	ldw	r23,184(sp)
   28414:	dd802d17 	ldw	r22,180(sp)
   28418:	dd402c17 	ldw	r21,176(sp)
   2841c:	dd002b17 	ldw	r20,172(sp)
   28420:	dcc02a17 	ldw	r19,168(sp)
   28424:	dc802917 	ldw	r18,164(sp)
   28428:	dc402817 	ldw	r17,160(sp)
   2842c:	dc002717 	ldw	r16,156(sp)
   28430:	dec03104 	addi	sp,sp,196
   28434:	f800283a 	ret
   28438:	a80b883a 	mov	r5,r21
   2843c:	b009883a 	mov	r4,r22
   28440:	0022bfc0 	call	22bfc <__swsetup_r>
   28444:	10038d1e 	bne	r2,zero,2927c <___vfiprintf_internal_r+0x12d8>
   28448:	a880030b 	ldhu	r2,12(r21)
   2844c:	1080068c 	andi	r2,r2,26
   28450:	10800298 	cmpnei	r2,r2,10
   28454:	103ef51e 	bne	r2,zero,2802c <___vfiprintf_internal_r+0x88>
   28458:	a880038f 	ldh	r2,14(r21)
   2845c:	103ef316 	blt	r2,zero,2802c <___vfiprintf_internal_r+0x88>
   28460:	d9c00417 	ldw	r7,16(sp)
   28464:	a00d883a 	mov	r6,r20
   28468:	a80b883a 	mov	r5,r21
   2846c:	b009883a 	mov	r4,r22
   28470:	00292d40 	call	292d4 <__sbprintf>
   28474:	d8800115 	stw	r2,4(sp)
   28478:	003fe206 	br	28404 <___vfiprintf_internal_r+0x460>
   2847c:	6b400414 	ori	r13,r13,16
   28480:	6880080c 	andi	r2,r13,32
   28484:	10004726 	beq	r2,zero,285a4 <___vfiprintf_internal_r+0x600>
   28488:	d8c00417 	ldw	r3,16(sp)
   2848c:	00800044 	movi	r2,1
   28490:	1dc00017 	ldw	r23,0(r3)
   28494:	1f000117 	ldw	fp,4(r3)
   28498:	18c00204 	addi	r3,r3,8
   2849c:	d8c00415 	stw	r3,16(sp)
   284a0:	00000906 	br	284c8 <___vfiprintf_internal_r+0x524>
   284a4:	6b400414 	ori	r13,r13,16
   284a8:	6880080c 	andi	r2,r13,32
   284ac:	10003126 	beq	r2,zero,28574 <___vfiprintf_internal_r+0x5d0>
   284b0:	d8c00417 	ldw	r3,16(sp)
   284b4:	0005883a 	mov	r2,zero
   284b8:	1dc00017 	ldw	r23,0(r3)
   284bc:	1f000117 	ldw	fp,4(r3)
   284c0:	18c00204 	addi	r3,r3,8
   284c4:	d8c00415 	stw	r3,16(sp)
   284c8:	d8000945 	stb	zero,37(sp)
   284cc:	40ffffe0 	cmpeqi	r3,r8,-1
   284d0:	001d883a 	mov	r14,zero
   284d4:	1800f21e 	bne	r3,zero,288a0 <___vfiprintf_internal_r+0x8fc>
   284d8:	04ffdfc4 	movi	r19,-129
   284dc:	6cc8703a 	and	r4,r13,r19
   284e0:	bf06b03a 	or	r3,r23,fp
   284e4:	d9000015 	stw	r4,0(sp)
   284e8:	18024b1e 	bne	r3,zero,28e18 <___vfiprintf_internal_r+0xe74>
   284ec:	4003091e 	bne	r8,zero,29114 <___vfiprintf_internal_r+0x1170>
   284f0:	1002a61e 	bne	r2,zero,28f8c <___vfiprintf_internal_r+0xfe8>
   284f4:	6f00004c 	andi	fp,r13,1
   284f8:	e002b826 	beq	fp,zero,28fdc <___vfiprintf_internal_r+0x1038>
   284fc:	00800c04 	movi	r2,48
   28500:	d88016c5 	stb	r2,91(sp)
   28504:	dcc016c4 	addi	r19,sp,91
   28508:	00008e06 	br	28744 <___vfiprintf_internal_r+0x7a0>
   2850c:	8d27c83a 	sub	r19,r17,r20
   28510:	8d3fb726 	beq	r17,r20,283f0 <___vfiprintf_internal_r+0x44c>
   28514:	d8c00c17 	ldw	r3,48(sp)
   28518:	d8800b17 	ldw	r2,44(sp)
   2851c:	85000015 	stw	r20,0(r16)
   28520:	98c7883a 	add	r3,r19,r3
   28524:	10800044 	addi	r2,r2,1
   28528:	d8800b15 	stw	r2,44(sp)
   2852c:	84c00115 	stw	r19,4(r16)
   28530:	d8c00c15 	stw	r3,48(sp)
   28534:	10800208 	cmpgei	r2,r2,8
   28538:	1000061e 	bne	r2,zero,28554 <___vfiprintf_internal_r+0x5b0>
   2853c:	84000204 	addi	r16,r16,8
   28540:	d8c00117 	ldw	r3,4(sp)
   28544:	88800003 	ldbu	r2,0(r17)
   28548:	1cc7883a 	add	r3,r3,r19
   2854c:	d8c00115 	stw	r3,4(sp)
   28550:	003ec906 	br	28078 <___vfiprintf_internal_r+0xd4>
   28554:	18027f26 	beq	r3,zero,28f54 <___vfiprintf_internal_r+0xfb0>
   28558:	d9800a04 	addi	r6,sp,40
   2855c:	a80b883a 	mov	r5,r21
   28560:	b009883a 	mov	r4,r22
   28564:	0027e980 	call	27e98 <__sprint_r.part.0>
   28568:	103fa31e 	bne	r2,zero,283f8 <___vfiprintf_internal_r+0x454>
   2856c:	9021883a 	mov	r16,r18
   28570:	003ff306 	br	28540 <___vfiprintf_internal_r+0x59c>
   28574:	d9000417 	ldw	r4,16(sp)
   28578:	6880040c 	andi	r2,r13,16
   2857c:	20c00104 	addi	r3,r4,4
   28580:	1002a31e 	bne	r2,zero,29010 <___vfiprintf_internal_r+0x106c>
   28584:	6880100c 	andi	r2,r13,64
   28588:	1002f626 	beq	r2,zero,29164 <___vfiprintf_internal_r+0x11c0>
   2858c:	d8800417 	ldw	r2,16(sp)
   28590:	0039883a 	mov	fp,zero
   28594:	d8c00415 	stw	r3,16(sp)
   28598:	15c0000b 	ldhu	r23,0(r2)
   2859c:	0005883a 	mov	r2,zero
   285a0:	003fc906 	br	284c8 <___vfiprintf_internal_r+0x524>
   285a4:	d9000417 	ldw	r4,16(sp)
   285a8:	6880040c 	andi	r2,r13,16
   285ac:	20c00104 	addi	r3,r4,4
   285b0:	1002ab1e 	bne	r2,zero,29060 <___vfiprintf_internal_r+0x10bc>
   285b4:	6880100c 	andi	r2,r13,64
   285b8:	1002f026 	beq	r2,zero,2917c <___vfiprintf_internal_r+0x11d8>
   285bc:	d8800417 	ldw	r2,16(sp)
   285c0:	0039883a 	mov	fp,zero
   285c4:	d8c00415 	stw	r3,16(sp)
   285c8:	15c0000b 	ldhu	r23,0(r2)
   285cc:	00800044 	movi	r2,1
   285d0:	003fbd06 	br	284c8 <___vfiprintf_internal_r+0x524>
   285d4:	d8c00017 	ldw	r3,0(sp)
   285d8:	d8000b15 	stw	zero,44(sp)
   285dc:	1cc0010c 	andi	r19,r3,4
   285e0:	98024a26 	beq	r19,zero,28f0c <___vfiprintf_internal_r+0xf68>
   285e4:	8de1c83a 	sub	r16,r17,r23
   285e8:	0402480e 	bge	zero,r16,28f0c <___vfiprintf_internal_r+0xf68>
   285ec:	900d883a 	mov	r6,r18
   285f0:	80c00450 	cmplti	r3,r16,17
   285f4:	d9000b17 	ldw	r4,44(sp)
   285f8:	01c000f4 	movhi	r7,3
   285fc:	1803171e 	bne	r3,zero,2925c <___vfiprintf_internal_r+0x12b8>
   28600:	39c11204 	addi	r7,r7,1096
   28604:	04c00404 	movi	r19,16
   28608:	00000606 	br	28624 <___vfiprintf_internal_r+0x680>
   2860c:	21400084 	addi	r5,r4,2
   28610:	31800204 	addi	r6,r6,8
   28614:	1809883a 	mov	r4,r3
   28618:	843ffc04 	addi	r16,r16,-16
   2861c:	80c00448 	cmpgei	r3,r16,17
   28620:	18001726 	beq	r3,zero,28680 <___vfiprintf_internal_r+0x6dc>
   28624:	20c00044 	addi	r3,r4,1
   28628:	10800404 	addi	r2,r2,16
   2862c:	31c00015 	stw	r7,0(r6)
   28630:	34c00115 	stw	r19,4(r6)
   28634:	d8800c15 	stw	r2,48(sp)
   28638:	d8c00b15 	stw	r3,44(sp)
   2863c:	19400208 	cmpgei	r5,r3,8
   28640:	283ff226 	beq	r5,zero,2860c <___vfiprintf_internal_r+0x668>
   28644:	d9800a04 	addi	r6,sp,40
   28648:	a80b883a 	mov	r5,r21
   2864c:	b009883a 	mov	r4,r22
   28650:	10014f26 	beq	r2,zero,28b90 <___vfiprintf_internal_r+0xbec>
   28654:	d9c00015 	stw	r7,0(sp)
   28658:	0027e980 	call	27e98 <__sprint_r.part.0>
   2865c:	103f661e 	bne	r2,zero,283f8 <___vfiprintf_internal_r+0x454>
   28660:	d9000b17 	ldw	r4,44(sp)
   28664:	843ffc04 	addi	r16,r16,-16
   28668:	80c00448 	cmpgei	r3,r16,17
   2866c:	d8800c17 	ldw	r2,48(sp)
   28670:	d9c00017 	ldw	r7,0(sp)
   28674:	900d883a 	mov	r6,r18
   28678:	21400044 	addi	r5,r4,1
   2867c:	183fe91e 	bne	r3,zero,28624 <___vfiprintf_internal_r+0x680>
   28680:	1405883a 	add	r2,r2,r16
   28684:	d9400b15 	stw	r5,44(sp)
   28688:	31c00015 	stw	r7,0(r6)
   2868c:	34000115 	stw	r16,4(r6)
   28690:	d8800c15 	stw	r2,48(sp)
   28694:	29400210 	cmplti	r5,r5,8
   28698:	283f4b1e 	bne	r5,zero,283c8 <___vfiprintf_internal_r+0x424>
   2869c:	10021b26 	beq	r2,zero,28f0c <___vfiprintf_internal_r+0xf68>
   286a0:	d9800a04 	addi	r6,sp,40
   286a4:	a80b883a 	mov	r5,r21
   286a8:	b009883a 	mov	r4,r22
   286ac:	0027e980 	call	27e98 <__sprint_r.part.0>
   286b0:	103f511e 	bne	r2,zero,283f8 <___vfiprintf_internal_r+0x454>
   286b4:	d8800c17 	ldw	r2,48(sp)
   286b8:	003f4306 	br	283c8 <___vfiprintf_internal_r+0x424>
   286bc:	0024c840 	call	24c84 <__sinit>
   286c0:	003e4a06 	br	27fec <___vfiprintf_internal_r+0x48>
   286c4:	29403fcc 	andi	r5,r5,255
   286c8:	2802e01e 	bne	r5,zero,2924c <___vfiprintf_internal_r+0x12a8>
   286cc:	6880080c 	andi	r2,r13,32
   286d0:	10005d26 	beq	r2,zero,28848 <___vfiprintf_internal_r+0x8a4>
   286d4:	d8c00417 	ldw	r3,16(sp)
   286d8:	18800117 	ldw	r2,4(r3)
   286dc:	1dc00017 	ldw	r23,0(r3)
   286e0:	18c00204 	addi	r3,r3,8
   286e4:	d8c00415 	stw	r3,16(sp)
   286e8:	1039883a 	mov	fp,r2
   286ec:	10006216 	blt	r2,zero,28878 <___vfiprintf_internal_r+0x8d4>
   286f0:	40bfffd8 	cmpnei	r2,r8,-1
   286f4:	10000a26 	beq	r2,zero,28720 <___vfiprintf_internal_r+0x77c>
   286f8:	00ffdfc4 	movi	r3,-129
   286fc:	bf04b03a 	or	r2,r23,fp
   28700:	db800943 	ldbu	r14,37(sp)
   28704:	68da703a 	and	r13,r13,r3
   28708:	1000061e 	bne	r2,zero,28724 <___vfiprintf_internal_r+0x780>
   2870c:	4000081e 	bne	r8,zero,28730 <___vfiprintf_internal_r+0x78c>
   28710:	0039883a 	mov	fp,zero
   28714:	db400015 	stw	r13,0(sp)
   28718:	9027883a 	mov	r19,r18
   2871c:	00000906 	br	28744 <___vfiprintf_internal_r+0x7a0>
   28720:	db800943 	ldbu	r14,37(sp)
   28724:	e000ee1e 	bne	fp,zero,28ae0 <___vfiprintf_internal_r+0xb3c>
   28728:	b88002a8 	cmpgeui	r2,r23,10
   2872c:	1000ec1e 	bne	r2,zero,28ae0 <___vfiprintf_internal_r+0xb3c>
   28730:	bdc00c04 	addi	r23,r23,48
   28734:	ddc016c5 	stb	r23,91(sp)
   28738:	db400015 	stw	r13,0(sp)
   2873c:	07000044 	movi	fp,1
   28740:	dcc016c4 	addi	r19,sp,91
   28744:	402f883a 	mov	r23,r8
   28748:	4700010e 	bge	r8,fp,28750 <___vfiprintf_internal_r+0x7ac>
   2874c:	e02f883a 	mov	r23,fp
   28750:	73803fcc 	andi	r14,r14,255
   28754:	7380201c 	xori	r14,r14,128
   28758:	73bfe004 	addi	r14,r14,-128
   2875c:	703ecc26 	beq	r14,zero,28290 <___vfiprintf_internal_r+0x2ec>
   28760:	bdc00044 	addi	r23,r23,1
   28764:	003eca06 	br	28290 <___vfiprintf_internal_r+0x2ec>
   28768:	a0800007 	ldb	r2,0(r20)
   2876c:	6b401014 	ori	r13,r13,64
   28770:	003e4d06 	br	280a8 <___vfiprintf_internal_r+0x104>
   28774:	29403fcc 	andi	r5,r5,255
   28778:	2802b21e 	bne	r5,zero,29244 <___vfiprintf_internal_r+0x12a0>
   2877c:	d9000417 	ldw	r4,16(sp)
   28780:	6880080c 	andi	r2,r13,32
   28784:	20c00017 	ldw	r3,0(r4)
   28788:	21000104 	addi	r4,r4,4
   2878c:	1002251e 	bne	r2,zero,29024 <___vfiprintf_internal_r+0x1080>
   28790:	6880040c 	andi	r2,r13,16
   28794:	1002531e 	bne	r2,zero,290e4 <___vfiprintf_internal_r+0x1140>
   28798:	6b40100c 	andi	r13,r13,64
   2879c:	68025126 	beq	r13,zero,290e4 <___vfiprintf_internal_r+0x1140>
   287a0:	d8800117 	ldw	r2,4(sp)
   287a4:	d9000415 	stw	r4,16(sp)
   287a8:	1880000d 	sth	r2,0(r3)
   287ac:	003e2606 	br	28048 <___vfiprintf_internal_r+0xa4>
   287b0:	a0800007 	ldb	r2,0(r20)
   287b4:	10c01b18 	cmpnei	r3,r2,108
   287b8:	18025a26 	beq	r3,zero,29124 <___vfiprintf_internal_r+0x1180>
   287bc:	6b400414 	ori	r13,r13,16
   287c0:	003e3906 	br	280a8 <___vfiprintf_internal_r+0x104>
   287c4:	d8c00417 	ldw	r3,16(sp)
   287c8:	d8000945 	stb	zero,37(sp)
   287cc:	05c00044 	movi	r23,1
   287d0:	18800017 	ldw	r2,0(r3)
   287d4:	18c00104 	addi	r3,r3,4
   287d8:	d8c00415 	stw	r3,16(sp)
   287dc:	d8800d05 	stb	r2,52(sp)
   287e0:	07000044 	movi	fp,1
   287e4:	dcc00d04 	addi	r19,sp,52
   287e8:	003ea706 	br	28288 <___vfiprintf_internal_r+0x2e4>
   287ec:	29403fcc 	andi	r5,r5,255
   287f0:	2802981e 	bne	r5,zero,29254 <___vfiprintf_internal_r+0x12b0>
   287f4:	00c000f4 	movhi	r3,3
   287f8:	18c08704 	addi	r3,r3,540
   287fc:	d8c00515 	stw	r3,20(sp)
   28800:	68c0080c 	andi	r3,r13,32
   28804:	18008326 	beq	r3,zero,28a14 <___vfiprintf_internal_r+0xa70>
   28808:	d8c00417 	ldw	r3,16(sp)
   2880c:	1dc00017 	ldw	r23,0(r3)
   28810:	1f000117 	ldw	fp,4(r3)
   28814:	18c00204 	addi	r3,r3,8
   28818:	d8c00415 	stw	r3,16(sp)
   2881c:	68c0004c 	andi	r3,r13,1
   28820:	18000226 	beq	r3,zero,2882c <___vfiprintf_internal_r+0x888>
   28824:	bf06b03a 	or	r3,r23,fp
   28828:	1801f31e 	bne	r3,zero,28ff8 <___vfiprintf_internal_r+0x1054>
   2882c:	00800084 	movi	r2,2
   28830:	003f2506 	br	284c8 <___vfiprintf_internal_r+0x524>
   28834:	29403fcc 	andi	r5,r5,255
   28838:	2802801e 	bne	r5,zero,2923c <___vfiprintf_internal_r+0x1298>
   2883c:	6b400414 	ori	r13,r13,16
   28840:	6880080c 	andi	r2,r13,32
   28844:	103fa31e 	bne	r2,zero,286d4 <___vfiprintf_internal_r+0x730>
   28848:	d9000417 	ldw	r4,16(sp)
   2884c:	6880040c 	andi	r2,r13,16
   28850:	20c00104 	addi	r3,r4,4
   28854:	1001f91e 	bne	r2,zero,2903c <___vfiprintf_internal_r+0x1098>
   28858:	6880100c 	andi	r2,r13,64
   2885c:	10025226 	beq	r2,zero,291a8 <___vfiprintf_internal_r+0x1204>
   28860:	d8800417 	ldw	r2,16(sp)
   28864:	d8c00415 	stw	r3,16(sp)
   28868:	15c0000f 	ldh	r23,0(r2)
   2886c:	b839d7fa 	srai	fp,r23,31
   28870:	e005883a 	mov	r2,fp
   28874:	103f9e0e 	bge	r2,zero,286f0 <___vfiprintf_internal_r+0x74c>
   28878:	b804c03a 	cmpne	r2,r23,zero
   2887c:	0739c83a 	sub	fp,zero,fp
   28880:	e0b9c83a 	sub	fp,fp,r2
   28884:	00800b44 	movi	r2,45
   28888:	d8800945 	stb	r2,37(sp)
   2888c:	40ffffe0 	cmpeqi	r3,r8,-1
   28890:	05efc83a 	sub	r23,zero,r23
   28894:	03800b44 	movi	r14,45
   28898:	00800044 	movi	r2,1
   2889c:	183f0e26 	beq	r3,zero,284d8 <___vfiprintf_internal_r+0x534>
   288a0:	10c00060 	cmpeqi	r3,r2,1
   288a4:	183f9f1e 	bne	r3,zero,28724 <___vfiprintf_internal_r+0x780>
   288a8:	108000a0 	cmpeqi	r2,r2,2
   288ac:	9027883a 	mov	r19,r18
   288b0:	1000a81e 	bne	r2,zero,28b54 <___vfiprintf_internal_r+0xbb0>
   288b4:	e006977a 	slli	r3,fp,29
   288b8:	b804d0fa 	srli	r2,r23,3
   288bc:	e038d0fa 	srli	fp,fp,3
   288c0:	b90001cc 	andi	r4,r23,7
   288c4:	21000c04 	addi	r4,r4,48
   288c8:	18aeb03a 	or	r23,r3,r2
   288cc:	993fffc5 	stb	r4,-1(r19)
   288d0:	bf04b03a 	or	r2,r23,fp
   288d4:	980b883a 	mov	r5,r19
   288d8:	9cffffc4 	addi	r19,r19,-1
   288dc:	103ff51e 	bne	r2,zero,288b4 <___vfiprintf_internal_r+0x910>
   288e0:	6880004c 	andi	r2,r13,1
   288e4:	1000a726 	beq	r2,zero,28b84 <___vfiprintf_internal_r+0xbe0>
   288e8:	21003fcc 	andi	r4,r4,255
   288ec:	2100201c 	xori	r4,r4,128
   288f0:	213fe004 	addi	r4,r4,-128
   288f4:	20800c18 	cmpnei	r2,r4,48
   288f8:	1000a226 	beq	r2,zero,28b84 <___vfiprintf_internal_r+0xbe0>
   288fc:	297fff84 	addi	r5,r5,-2
   28900:	00800c04 	movi	r2,48
   28904:	98bfffc5 	stb	r2,-1(r19)
   28908:	9179c83a 	sub	fp,r18,r5
   2890c:	db400015 	stw	r13,0(sp)
   28910:	2827883a 	mov	r19,r5
   28914:	003f8b06 	br	28744 <___vfiprintf_internal_r+0x7a0>
   28918:	a0800007 	ldb	r2,0(r20)
   2891c:	6b402014 	ori	r13,r13,128
   28920:	003de106 	br	280a8 <___vfiprintf_internal_r+0x104>
   28924:	a0800007 	ldb	r2,0(r20)
   28928:	a0c00044 	addi	r3,r20,1
   2892c:	11000aa0 	cmpeqi	r4,r2,42
   28930:	2002551e 	bne	r4,zero,29288 <___vfiprintf_internal_r+0x12e4>
   28934:	113ff404 	addi	r4,r2,-48
   28938:	21c002b0 	cmpltui	r7,r4,10
   2893c:	1829883a 	mov	r20,r3
   28940:	0011883a 	mov	r8,zero
   28944:	383dd926 	beq	r7,zero,280ac <___vfiprintf_internal_r+0x108>
   28948:	400690ba 	slli	r3,r8,2
   2894c:	a0800007 	ldb	r2,0(r20)
   28950:	a5000044 	addi	r20,r20,1
   28954:	1a11883a 	add	r8,r3,r8
   28958:	4211883a 	add	r8,r8,r8
   2895c:	4111883a 	add	r8,r8,r4
   28960:	113ff404 	addi	r4,r2,-48
   28964:	20c002b0 	cmpltui	r3,r4,10
   28968:	183ff71e 	bne	r3,zero,28948 <___vfiprintf_internal_r+0x9a4>
   2896c:	003dcf06 	br	280ac <___vfiprintf_internal_r+0x108>
   28970:	a0800003 	ldbu	r2,0(r20)
   28974:	10803fcc 	andi	r2,r2,255
   28978:	1080201c 	xori	r2,r2,128
   2897c:	6b400114 	ori	r13,r13,4
   28980:	10bfe004 	addi	r2,r2,-128
   28984:	003dc806 	br	280a8 <___vfiprintf_internal_r+0x104>
   28988:	a0800007 	ldb	r2,0(r20)
   2898c:	01400044 	movi	r5,1
   28990:	01800ac4 	movi	r6,43
   28994:	003dc406 	br	280a8 <___vfiprintf_internal_r+0x104>
   28998:	d8c00417 	ldw	r3,16(sp)
   2899c:	a0800003 	ldbu	r2,0(r20)
   289a0:	1c400017 	ldw	r17,0(r3)
   289a4:	18c00104 	addi	r3,r3,4
   289a8:	8801b916 	blt	r17,zero,29090 <___vfiprintf_internal_r+0x10ec>
   289ac:	d8c00415 	stw	r3,16(sp)
   289b0:	10803fcc 	andi	r2,r2,255
   289b4:	1080201c 	xori	r2,r2,128
   289b8:	10bfe004 	addi	r2,r2,-128
   289bc:	003dba06 	br	280a8 <___vfiprintf_internal_r+0x104>
   289c0:	a0800007 	ldb	r2,0(r20)
   289c4:	6b400054 	ori	r13,r13,1
   289c8:	003db706 	br	280a8 <___vfiprintf_internal_r+0x104>
   289cc:	30c03fcc 	andi	r3,r6,255
   289d0:	18c0201c 	xori	r3,r3,128
   289d4:	18ffe004 	addi	r3,r3,-128
   289d8:	a0800003 	ldbu	r2,0(r20)
   289dc:	183ff41e 	bne	r3,zero,289b0 <___vfiprintf_internal_r+0xa0c>
   289e0:	10803fcc 	andi	r2,r2,255
   289e4:	1080201c 	xori	r2,r2,128
   289e8:	01400044 	movi	r5,1
   289ec:	01800804 	movi	r6,32
   289f0:	10bfe004 	addi	r2,r2,-128
   289f4:	003dac06 	br	280a8 <___vfiprintf_internal_r+0x104>
   289f8:	29403fcc 	andi	r5,r5,255
   289fc:	28020a1e 	bne	r5,zero,29228 <___vfiprintf_internal_r+0x1284>
   28a00:	00c000f4 	movhi	r3,3
   28a04:	18c08c04 	addi	r3,r3,560
   28a08:	d8c00515 	stw	r3,20(sp)
   28a0c:	68c0080c 	andi	r3,r13,32
   28a10:	183f7d1e 	bne	r3,zero,28808 <___vfiprintf_internal_r+0x864>
   28a14:	d9400417 	ldw	r5,16(sp)
   28a18:	68c0040c 	andi	r3,r13,16
   28a1c:	29000104 	addi	r4,r5,4
   28a20:	18018b1e 	bne	r3,zero,29050 <___vfiprintf_internal_r+0x10ac>
   28a24:	68c0100c 	andi	r3,r13,64
   28a28:	1801da26 	beq	r3,zero,29194 <___vfiprintf_internal_r+0x11f0>
   28a2c:	d8c00417 	ldw	r3,16(sp)
   28a30:	0039883a 	mov	fp,zero
   28a34:	d9000415 	stw	r4,16(sp)
   28a38:	1dc0000b 	ldhu	r23,0(r3)
   28a3c:	003f7706 	br	2881c <___vfiprintf_internal_r+0x878>
   28a40:	d8800417 	ldw	r2,16(sp)
   28a44:	d8000945 	stb	zero,37(sp)
   28a48:	14c00017 	ldw	r19,0(r2)
   28a4c:	10c00104 	addi	r3,r2,4
   28a50:	9801bb26 	beq	r19,zero,29140 <___vfiprintf_internal_r+0x119c>
   28a54:	40bfffe0 	cmpeqi	r2,r8,-1
   28a58:	1001901e 	bne	r2,zero,2909c <___vfiprintf_internal_r+0x10f8>
   28a5c:	400d883a 	mov	r6,r8
   28a60:	000b883a 	mov	r5,zero
   28a64:	9809883a 	mov	r4,r19
   28a68:	d8c00315 	stw	r3,12(sp)
   28a6c:	db400215 	stw	r13,8(sp)
   28a70:	da000015 	stw	r8,0(sp)
   28a74:	00260c80 	call	260c8 <memchr>
   28a78:	da000017 	ldw	r8,0(sp)
   28a7c:	db400217 	ldw	r13,8(sp)
   28a80:	d8c00317 	ldw	r3,12(sp)
   28a84:	1001e426 	beq	r2,zero,29218 <___vfiprintf_internal_r+0x1274>
   28a88:	14f9c83a 	sub	fp,r2,r19
   28a8c:	e02f883a 	mov	r23,fp
   28a90:	d8c00415 	stw	r3,16(sp)
   28a94:	003dfc06 	br	28288 <___vfiprintf_internal_r+0x2e4>
   28a98:	a0800007 	ldb	r2,0(r20)
   28a9c:	6b400814 	ori	r13,r13,32
   28aa0:	003d8106 	br	280a8 <___vfiprintf_internal_r+0x104>
   28aa4:	d8c00417 	ldw	r3,16(sp)
   28aa8:	00800c04 	movi	r2,48
   28aac:	d8800985 	stb	r2,38(sp)
   28ab0:	00801e04 	movi	r2,120
   28ab4:	010000f4 	movhi	r4,3
   28ab8:	d88009c5 	stb	r2,39(sp)
   28abc:	18800104 	addi	r2,r3,4
   28ac0:	d8800415 	stw	r2,16(sp)
   28ac4:	20808c04 	addi	r2,r4,560
   28ac8:	d8800515 	stw	r2,20(sp)
   28acc:	1dc00017 	ldw	r23,0(r3)
   28ad0:	0039883a 	mov	fp,zero
   28ad4:	6b400094 	ori	r13,r13,2
   28ad8:	00800084 	movi	r2,2
   28adc:	003e7a06 	br	284c8 <___vfiprintf_internal_r+0x524>
   28ae0:	9027883a 	mov	r19,r18
   28ae4:	b809883a 	mov	r4,r23
   28ae8:	e00b883a 	mov	r5,fp
   28aec:	01800284 	movi	r6,10
   28af0:	000f883a 	mov	r7,zero
   28af4:	db800315 	stw	r14,12(sp)
   28af8:	da000215 	stw	r8,8(sp)
   28afc:	db400015 	stw	r13,0(sp)
   28b00:	002a7ec0 	call	2a7ec <__umoddi3>
   28b04:	10800c04 	addi	r2,r2,48
   28b08:	b809883a 	mov	r4,r23
   28b0c:	e00b883a 	mov	r5,fp
   28b10:	98bfffc5 	stb	r2,-1(r19)
   28b14:	01800284 	movi	r6,10
   28b18:	000f883a 	mov	r7,zero
   28b1c:	002a1d00 	call	2a1d0 <__udivdi3>
   28b20:	e009883a 	mov	r4,fp
   28b24:	b80b883a 	mov	r5,r23
   28b28:	db400017 	ldw	r13,0(sp)
   28b2c:	da000217 	ldw	r8,8(sp)
   28b30:	db800317 	ldw	r14,12(sp)
   28b34:	9cffffc4 	addi	r19,r19,-1
   28b38:	102f883a 	mov	r23,r2
   28b3c:	1839883a 	mov	fp,r3
   28b40:	203fe81e 	bne	r4,zero,28ae4 <___vfiprintf_internal_r+0xb40>
   28b44:	294002a8 	cmpgeui	r5,r5,10
   28b48:	283fe61e 	bne	r5,zero,28ae4 <___vfiprintf_internal_r+0xb40>
   28b4c:	94f9c83a 	sub	fp,r18,r19
   28b50:	003efc06 	br	28744 <___vfiprintf_internal_r+0x7a0>
   28b54:	d9000517 	ldw	r4,20(sp)
   28b58:	b88003cc 	andi	r2,r23,15
   28b5c:	e006973a 	slli	r3,fp,28
   28b60:	b82ed13a 	srli	r23,r23,4
   28b64:	2085883a 	add	r2,r4,r2
   28b68:	10800003 	ldbu	r2,0(r2)
   28b6c:	e038d13a 	srli	fp,fp,4
   28b70:	1deeb03a 	or	r23,r3,r23
   28b74:	98bfffc5 	stb	r2,-1(r19)
   28b78:	bf04b03a 	or	r2,r23,fp
   28b7c:	9cffffc4 	addi	r19,r19,-1
   28b80:	103ff41e 	bne	r2,zero,28b54 <___vfiprintf_internal_r+0xbb0>
   28b84:	94f9c83a 	sub	fp,r18,r19
   28b88:	db400015 	stw	r13,0(sp)
   28b8c:	003eed06 	br	28744 <___vfiprintf_internal_r+0x7a0>
   28b90:	01400044 	movi	r5,1
   28b94:	0009883a 	mov	r4,zero
   28b98:	900d883a 	mov	r6,r18
   28b9c:	003e9e06 	br	28618 <___vfiprintf_internal_r+0x674>
   28ba0:	8dc7c83a 	sub	r3,r17,r23
   28ba4:	00fdf20e 	bge	zero,r3,28370 <___vfiprintf_internal_r+0x3cc>
   28ba8:	19c00450 	cmplti	r7,r3,17
   28bac:	3801ae1e 	bne	r7,zero,29268 <___vfiprintf_internal_r+0x12c4>
   28bb0:	01c000f4 	movhi	r7,3
   28bb4:	39c10e04 	addi	r7,r7,1080
   28bb8:	03400404 	movi	r13,16
   28bbc:	00000606 	br	28bd8 <___vfiprintf_internal_r+0xc34>
   28bc0:	23800084 	addi	r14,r4,2
   28bc4:	84000204 	addi	r16,r16,8
   28bc8:	2809883a 	mov	r4,r5
   28bcc:	18fffc04 	addi	r3,r3,-16
   28bd0:	19400448 	cmpgei	r5,r3,17
   28bd4:	28001c26 	beq	r5,zero,28c48 <___vfiprintf_internal_r+0xca4>
   28bd8:	21400044 	addi	r5,r4,1
   28bdc:	10800404 	addi	r2,r2,16
   28be0:	81c00015 	stw	r7,0(r16)
   28be4:	83400115 	stw	r13,4(r16)
   28be8:	d8800c15 	stw	r2,48(sp)
   28bec:	d9400b15 	stw	r5,44(sp)
   28bf0:	29800208 	cmpgei	r6,r5,8
   28bf4:	303ff226 	beq	r6,zero,28bc0 <___vfiprintf_internal_r+0xc1c>
   28bf8:	d9800a04 	addi	r6,sp,40
   28bfc:	a80b883a 	mov	r5,r21
   28c00:	b009883a 	mov	r4,r22
   28c04:	10006326 	beq	r2,zero,28d94 <___vfiprintf_internal_r+0xdf0>
   28c08:	d9c00615 	stw	r7,24(sp)
   28c0c:	d8c00315 	stw	r3,12(sp)
   28c10:	da000215 	stw	r8,8(sp)
   28c14:	0027e980 	call	27e98 <__sprint_r.part.0>
   28c18:	103df71e 	bne	r2,zero,283f8 <___vfiprintf_internal_r+0x454>
   28c1c:	d8c00317 	ldw	r3,12(sp)
   28c20:	d9000b17 	ldw	r4,44(sp)
   28c24:	d8800c17 	ldw	r2,48(sp)
   28c28:	18fffc04 	addi	r3,r3,-16
   28c2c:	19400448 	cmpgei	r5,r3,17
   28c30:	d9c00617 	ldw	r7,24(sp)
   28c34:	da000217 	ldw	r8,8(sp)
   28c38:	9021883a 	mov	r16,r18
   28c3c:	23800044 	addi	r14,r4,1
   28c40:	03400404 	movi	r13,16
   28c44:	283fe41e 	bne	r5,zero,28bd8 <___vfiprintf_internal_r+0xc34>
   28c48:	83400204 	addi	r13,r16,8
   28c4c:	10c5883a 	add	r2,r2,r3
   28c50:	80c00115 	stw	r3,4(r16)
   28c54:	81c00015 	stw	r7,0(r16)
   28c58:	d8800c15 	stw	r2,48(sp)
   28c5c:	db800b15 	stw	r14,44(sp)
   28c60:	70c00208 	cmpgei	r3,r14,8
   28c64:	1800df26 	beq	r3,zero,28fe4 <___vfiprintf_internal_r+0x1040>
   28c68:	10015826 	beq	r2,zero,291cc <___vfiprintf_internal_r+0x1228>
   28c6c:	d9800a04 	addi	r6,sp,40
   28c70:	a80b883a 	mov	r5,r21
   28c74:	b009883a 	mov	r4,r22
   28c78:	da000215 	stw	r8,8(sp)
   28c7c:	0027e980 	call	27e98 <__sprint_r.part.0>
   28c80:	103ddd1e 	bne	r2,zero,283f8 <___vfiprintf_internal_r+0x454>
   28c84:	da000217 	ldw	r8,8(sp)
   28c88:	d9000b17 	ldw	r4,44(sp)
   28c8c:	d8800c17 	ldw	r2,48(sp)
   28c90:	4711c83a 	sub	r8,r8,fp
   28c94:	d9801904 	addi	r6,sp,100
   28c98:	21400044 	addi	r5,r4,1
   28c9c:	9021883a 	mov	r16,r18
   28ca0:	023db50e 	bge	zero,r8,28378 <___vfiprintf_internal_r+0x3d4>
   28ca4:	40c00450 	cmplti	r3,r8,17
   28ca8:	01c000f4 	movhi	r7,3
   28cac:	1801441e 	bne	r3,zero,291c0 <___vfiprintf_internal_r+0x121c>
   28cb0:	39c10e04 	addi	r7,r7,1080
   28cb4:	03400404 	movi	r13,16
   28cb8:	00000606 	br	28cd4 <___vfiprintf_internal_r+0xd30>
   28cbc:	21400084 	addi	r5,r4,2
   28cc0:	84000204 	addi	r16,r16,8
   28cc4:	1809883a 	mov	r4,r3
   28cc8:	423ffc04 	addi	r8,r8,-16
   28ccc:	40c00448 	cmpgei	r3,r8,17
   28cd0:	18001a26 	beq	r3,zero,28d3c <___vfiprintf_internal_r+0xd98>
   28cd4:	20c00044 	addi	r3,r4,1
   28cd8:	10800404 	addi	r2,r2,16
   28cdc:	81c00015 	stw	r7,0(r16)
   28ce0:	83400115 	stw	r13,4(r16)
   28ce4:	d8800c15 	stw	r2,48(sp)
   28ce8:	d8c00b15 	stw	r3,44(sp)
   28cec:	19400208 	cmpgei	r5,r3,8
   28cf0:	283ff226 	beq	r5,zero,28cbc <___vfiprintf_internal_r+0xd18>
   28cf4:	d9800a04 	addi	r6,sp,40
   28cf8:	a80b883a 	mov	r5,r21
   28cfc:	b009883a 	mov	r4,r22
   28d00:	10001a26 	beq	r2,zero,28d6c <___vfiprintf_internal_r+0xdc8>
   28d04:	d9c00315 	stw	r7,12(sp)
   28d08:	da000215 	stw	r8,8(sp)
   28d0c:	0027e980 	call	27e98 <__sprint_r.part.0>
   28d10:	103db91e 	bne	r2,zero,283f8 <___vfiprintf_internal_r+0x454>
   28d14:	da000217 	ldw	r8,8(sp)
   28d18:	d9000b17 	ldw	r4,44(sp)
   28d1c:	d8800c17 	ldw	r2,48(sp)
   28d20:	423ffc04 	addi	r8,r8,-16
   28d24:	40c00448 	cmpgei	r3,r8,17
   28d28:	d9c00317 	ldw	r7,12(sp)
   28d2c:	9021883a 	mov	r16,r18
   28d30:	21400044 	addi	r5,r4,1
   28d34:	03400404 	movi	r13,16
   28d38:	183fe61e 	bne	r3,zero,28cd4 <___vfiprintf_internal_r+0xd30>
   28d3c:	81000204 	addi	r4,r16,8
   28d40:	1205883a 	add	r2,r2,r8
   28d44:	81c00015 	stw	r7,0(r16)
   28d48:	82000115 	stw	r8,4(r16)
   28d4c:	d8800c15 	stw	r2,48(sp)
   28d50:	d9400b15 	stw	r5,44(sp)
   28d54:	28c00208 	cmpgei	r3,r5,8
   28d58:	1800721e 	bne	r3,zero,28f24 <___vfiprintf_internal_r+0xf80>
   28d5c:	29400044 	addi	r5,r5,1
   28d60:	21800204 	addi	r6,r4,8
   28d64:	2021883a 	mov	r16,r4
   28d68:	003d8306 	br	28378 <___vfiprintf_internal_r+0x3d4>
   28d6c:	01400044 	movi	r5,1
   28d70:	0009883a 	mov	r4,zero
   28d74:	9021883a 	mov	r16,r18
   28d78:	003fd306 	br	28cc8 <___vfiprintf_internal_r+0xd24>
   28d7c:	d9800a04 	addi	r6,sp,40
   28d80:	a80b883a 	mov	r5,r21
   28d84:	b009883a 	mov	r4,r22
   28d88:	0027e980 	call	27e98 <__sprint_r.part.0>
   28d8c:	103d9426 	beq	r2,zero,283e0 <___vfiprintf_internal_r+0x43c>
   28d90:	003d9906 	br	283f8 <___vfiprintf_internal_r+0x454>
   28d94:	03800044 	movi	r14,1
   28d98:	0009883a 	mov	r4,zero
   28d9c:	9021883a 	mov	r16,r18
   28da0:	003f8a06 	br	28bcc <___vfiprintf_internal_r+0xc28>
   28da4:	10006e26 	beq	r2,zero,28f60 <___vfiprintf_internal_r+0xfbc>
   28da8:	d9800a04 	addi	r6,sp,40
   28dac:	a80b883a 	mov	r5,r21
   28db0:	b009883a 	mov	r4,r22
   28db4:	da000615 	stw	r8,24(sp)
   28db8:	db400315 	stw	r13,12(sp)
   28dbc:	db800215 	stw	r14,8(sp)
   28dc0:	0027e980 	call	27e98 <__sprint_r.part.0>
   28dc4:	103d8c1e 	bne	r2,zero,283f8 <___vfiprintf_internal_r+0x454>
   28dc8:	d9000b17 	ldw	r4,44(sp)
   28dcc:	d8800c17 	ldw	r2,48(sp)
   28dd0:	da000617 	ldw	r8,24(sp)
   28dd4:	db400317 	ldw	r13,12(sp)
   28dd8:	db800217 	ldw	r14,8(sp)
   28ddc:	d9801904 	addi	r6,sp,100
   28de0:	21400044 	addi	r5,r4,1
   28de4:	9021883a 	mov	r16,r18
   28de8:	003d4606 	br	28304 <___vfiprintf_internal_r+0x360>
   28dec:	d8800984 	addi	r2,sp,38
   28df0:	d8801715 	stw	r2,92(sp)
   28df4:	00800084 	movi	r2,2
   28df8:	d8801815 	stw	r2,96(sp)
   28dfc:	d9801904 	addi	r6,sp,100
   28e00:	01400044 	movi	r5,1
   28e04:	3021883a 	mov	r16,r6
   28e08:	2809883a 	mov	r4,r5
   28e0c:	21400044 	addi	r5,r4,1
   28e10:	81800204 	addi	r6,r16,8
   28e14:	003d5406 	br	28368 <___vfiprintf_internal_r+0x3c4>
   28e18:	db400017 	ldw	r13,0(sp)
   28e1c:	003ea006 	br	288a0 <___vfiprintf_internal_r+0x8fc>
   28e20:	19400450 	cmplti	r5,r3,17
   28e24:	01c000f4 	movhi	r7,3
   28e28:	2801011e 	bne	r5,zero,29230 <___vfiprintf_internal_r+0x128c>
   28e2c:	39c11204 	addi	r7,r7,1096
   28e30:	03c00404 	movi	r15,16
   28e34:	00000706 	br	28e54 <___vfiprintf_internal_r+0xeb0>
   28e38:	27c00084 	addi	ra,r4,2
   28e3c:	84000204 	addi	r16,r16,8
   28e40:	3009883a 	mov	r4,r6
   28e44:	18fffc04 	addi	r3,r3,-16
   28e48:	19400448 	cmpgei	r5,r3,17
   28e4c:	28002026 	beq	r5,zero,28ed0 <___vfiprintf_internal_r+0xf2c>
   28e50:	21800044 	addi	r6,r4,1
   28e54:	10800404 	addi	r2,r2,16
   28e58:	81c00015 	stw	r7,0(r16)
   28e5c:	83c00115 	stw	r15,4(r16)
   28e60:	d8800c15 	stw	r2,48(sp)
   28e64:	d9800b15 	stw	r6,44(sp)
   28e68:	31400208 	cmpgei	r5,r6,8
   28e6c:	283ff226 	beq	r5,zero,28e38 <___vfiprintf_internal_r+0xe94>
   28e70:	d9800a04 	addi	r6,sp,40
   28e74:	a80b883a 	mov	r5,r21
   28e78:	b009883a 	mov	r4,r22
   28e7c:	10001f26 	beq	r2,zero,28efc <___vfiprintf_internal_r+0xf58>
   28e80:	d9c00815 	stw	r7,32(sp)
   28e84:	d8c00715 	stw	r3,28(sp)
   28e88:	da000615 	stw	r8,24(sp)
   28e8c:	db400315 	stw	r13,12(sp)
   28e90:	db800215 	stw	r14,8(sp)
   28e94:	0027e980 	call	27e98 <__sprint_r.part.0>
   28e98:	103d571e 	bne	r2,zero,283f8 <___vfiprintf_internal_r+0x454>
   28e9c:	d8c00717 	ldw	r3,28(sp)
   28ea0:	d9000b17 	ldw	r4,44(sp)
   28ea4:	d8800c17 	ldw	r2,48(sp)
   28ea8:	18fffc04 	addi	r3,r3,-16
   28eac:	19400448 	cmpgei	r5,r3,17
   28eb0:	d9c00817 	ldw	r7,32(sp)
   28eb4:	da000617 	ldw	r8,24(sp)
   28eb8:	db400317 	ldw	r13,12(sp)
   28ebc:	db800217 	ldw	r14,8(sp)
   28ec0:	9021883a 	mov	r16,r18
   28ec4:	27c00044 	addi	ra,r4,1
   28ec8:	03c00404 	movi	r15,16
   28ecc:	283fe01e 	bne	r5,zero,28e50 <___vfiprintf_internal_r+0xeac>
   28ed0:	10c5883a 	add	r2,r2,r3
   28ed4:	80c00115 	stw	r3,4(r16)
   28ed8:	81c00015 	stw	r7,0(r16)
   28edc:	d8800c15 	stw	r2,48(sp)
   28ee0:	dfc00b15 	stw	ra,44(sp)
   28ee4:	f8c00208 	cmpgei	r3,ra,8
   28ee8:	18002b1e 	bne	r3,zero,28f98 <___vfiprintf_internal_r+0xff4>
   28eec:	84000204 	addi	r16,r16,8
   28ef0:	f9400044 	addi	r5,ra,1
   28ef4:	f809883a 	mov	r4,ra
   28ef8:	003cf206 	br	282c4 <___vfiprintf_internal_r+0x320>
   28efc:	0009883a 	mov	r4,zero
   28f00:	07c00044 	movi	ra,1
   28f04:	9021883a 	mov	r16,r18
   28f08:	003fce06 	br	28e44 <___vfiprintf_internal_r+0xea0>
   28f0c:	8dc0010e 	bge	r17,r23,28f14 <___vfiprintf_internal_r+0xf70>
   28f10:	b823883a 	mov	r17,r23
   28f14:	d8800117 	ldw	r2,4(sp)
   28f18:	1445883a 	add	r2,r2,r17
   28f1c:	d8800115 	stw	r2,4(sp)
   28f20:	003d2f06 	br	283e0 <___vfiprintf_internal_r+0x43c>
   28f24:	10007326 	beq	r2,zero,290f4 <___vfiprintf_internal_r+0x1150>
   28f28:	d9800a04 	addi	r6,sp,40
   28f2c:	a80b883a 	mov	r5,r21
   28f30:	b009883a 	mov	r4,r22
   28f34:	0027e980 	call	27e98 <__sprint_r.part.0>
   28f38:	103d2f1e 	bne	r2,zero,283f8 <___vfiprintf_internal_r+0x454>
   28f3c:	d9400b17 	ldw	r5,44(sp)
   28f40:	d8800c17 	ldw	r2,48(sp)
   28f44:	d9801904 	addi	r6,sp,100
   28f48:	29400044 	addi	r5,r5,1
   28f4c:	9021883a 	mov	r16,r18
   28f50:	003d0906 	br	28378 <___vfiprintf_internal_r+0x3d4>
   28f54:	d8000b15 	stw	zero,44(sp)
   28f58:	9021883a 	mov	r16,r18
   28f5c:	003d7806 	br	28540 <___vfiprintf_internal_r+0x59c>
   28f60:	7000441e 	bne	r14,zero,29074 <___vfiprintf_internal_r+0x10d0>
   28f64:	0009883a 	mov	r4,zero
   28f68:	d9801904 	addi	r6,sp,100
   28f6c:	01400044 	movi	r5,1
   28f70:	9021883a 	mov	r16,r18
   28f74:	003cfc06 	br	28368 <___vfiprintf_internal_r+0x3c4>
   28f78:	d9801904 	addi	r6,sp,100
   28f7c:	01400044 	movi	r5,1
   28f80:	0009883a 	mov	r4,zero
   28f84:	9021883a 	mov	r16,r18
   28f88:	003cf706 	br	28368 <___vfiprintf_internal_r+0x3c4>
   28f8c:	0039883a 	mov	fp,zero
   28f90:	9027883a 	mov	r19,r18
   28f94:	003deb06 	br	28744 <___vfiprintf_internal_r+0x7a0>
   28f98:	10004a26 	beq	r2,zero,290c4 <___vfiprintf_internal_r+0x1120>
   28f9c:	d9800a04 	addi	r6,sp,40
   28fa0:	a80b883a 	mov	r5,r21
   28fa4:	b009883a 	mov	r4,r22
   28fa8:	da000615 	stw	r8,24(sp)
   28fac:	db400315 	stw	r13,12(sp)
   28fb0:	db800215 	stw	r14,8(sp)
   28fb4:	0027e980 	call	27e98 <__sprint_r.part.0>
   28fb8:	103d0f1e 	bne	r2,zero,283f8 <___vfiprintf_internal_r+0x454>
   28fbc:	d9000b17 	ldw	r4,44(sp)
   28fc0:	d8800c17 	ldw	r2,48(sp)
   28fc4:	da000617 	ldw	r8,24(sp)
   28fc8:	db400317 	ldw	r13,12(sp)
   28fcc:	db800217 	ldw	r14,8(sp)
   28fd0:	9021883a 	mov	r16,r18
   28fd4:	21400044 	addi	r5,r4,1
   28fd8:	003cba06 	br	282c4 <___vfiprintf_internal_r+0x320>
   28fdc:	9027883a 	mov	r19,r18
   28fe0:	003dd806 	br	28744 <___vfiprintf_internal_r+0x7a0>
   28fe4:	71400044 	addi	r5,r14,1
   28fe8:	69800204 	addi	r6,r13,8
   28fec:	7009883a 	mov	r4,r14
   28ff0:	6821883a 	mov	r16,r13
   28ff4:	003cde06 	br	28370 <___vfiprintf_internal_r+0x3cc>
   28ff8:	00c00c04 	movi	r3,48
   28ffc:	d88009c5 	stb	r2,39(sp)
   29000:	d8c00985 	stb	r3,38(sp)
   29004:	6b400094 	ori	r13,r13,2
   29008:	00800084 	movi	r2,2
   2900c:	003d2e06 	br	284c8 <___vfiprintf_internal_r+0x524>
   29010:	25c00017 	ldw	r23,0(r4)
   29014:	0039883a 	mov	fp,zero
   29018:	d8c00415 	stw	r3,16(sp)
   2901c:	0005883a 	mov	r2,zero
   29020:	003d2906 	br	284c8 <___vfiprintf_internal_r+0x524>
   29024:	d9400117 	ldw	r5,4(sp)
   29028:	d9000415 	stw	r4,16(sp)
   2902c:	2805d7fa 	srai	r2,r5,31
   29030:	19400015 	stw	r5,0(r3)
   29034:	18800115 	stw	r2,4(r3)
   29038:	003c0306 	br	28048 <___vfiprintf_internal_r+0xa4>
   2903c:	25c00017 	ldw	r23,0(r4)
   29040:	d8c00415 	stw	r3,16(sp)
   29044:	b839d7fa 	srai	fp,r23,31
   29048:	e005883a 	mov	r2,fp
   2904c:	003da706 	br	286ec <___vfiprintf_internal_r+0x748>
   29050:	2dc00017 	ldw	r23,0(r5)
   29054:	0039883a 	mov	fp,zero
   29058:	d9000415 	stw	r4,16(sp)
   2905c:	003def06 	br	2881c <___vfiprintf_internal_r+0x878>
   29060:	25c00017 	ldw	r23,0(r4)
   29064:	0039883a 	mov	fp,zero
   29068:	d8c00415 	stw	r3,16(sp)
   2906c:	00800044 	movi	r2,1
   29070:	003d1506 	br	284c8 <___vfiprintf_internal_r+0x524>
   29074:	d8800984 	addi	r2,sp,38
   29078:	d8801715 	stw	r2,92(sp)
   2907c:	00800084 	movi	r2,2
   29080:	d8801815 	stw	r2,96(sp)
   29084:	dc001904 	addi	r16,sp,100
   29088:	01000044 	movi	r4,1
   2908c:	003f5f06 	br	28e0c <___vfiprintf_internal_r+0xe68>
   29090:	0463c83a 	sub	r17,zero,r17
   29094:	d8c00415 	stw	r3,16(sp)
   29098:	003e3606 	br	28974 <___vfiprintf_internal_r+0x9d0>
   2909c:	9809883a 	mov	r4,r19
   290a0:	d8c00215 	stw	r3,8(sp)
   290a4:	db400015 	stw	r13,0(sp)
   290a8:	002099c0 	call	2099c <strlen>
   290ac:	d8c00217 	ldw	r3,8(sp)
   290b0:	db400017 	ldw	r13,0(sp)
   290b4:	1039883a 	mov	fp,r2
   290b8:	102f883a 	mov	r23,r2
   290bc:	d8c00415 	stw	r3,16(sp)
   290c0:	003c7106 	br	28288 <___vfiprintf_internal_r+0x2e4>
   290c4:	d8c00947 	ldb	r3,37(sp)
   290c8:	1800451e 	bne	r3,zero,291e0 <___vfiprintf_internal_r+0x123c>
   290cc:	703f471e 	bne	r14,zero,28dec <___vfiprintf_internal_r+0xe48>
   290d0:	0009883a 	mov	r4,zero
   290d4:	d9801904 	addi	r6,sp,100
   290d8:	01400044 	movi	r5,1
   290dc:	9021883a 	mov	r16,r18
   290e0:	003ca306 	br	28370 <___vfiprintf_internal_r+0x3cc>
   290e4:	d8800117 	ldw	r2,4(sp)
   290e8:	18800015 	stw	r2,0(r3)
   290ec:	d9000415 	stw	r4,16(sp)
   290f0:	003bd506 	br	28048 <___vfiprintf_internal_r+0xa4>
   290f4:	00c00044 	movi	r3,1
   290f8:	e005883a 	mov	r2,fp
   290fc:	dcc01715 	stw	r19,92(sp)
   29100:	df001815 	stw	fp,96(sp)
   29104:	df000c15 	stw	fp,48(sp)
   29108:	d8c00b15 	stw	r3,44(sp)
   2910c:	d9801904 	addi	r6,sp,100
   29110:	003ca806 	br	283b4 <___vfiprintf_internal_r+0x410>
   29114:	10c00060 	cmpeqi	r3,r2,1
   29118:	db400017 	ldw	r13,0(sp)
   2911c:	183de226 	beq	r3,zero,288a8 <___vfiprintf_internal_r+0x904>
   29120:	003d8306 	br	28730 <___vfiprintf_internal_r+0x78c>
   29124:	a0800043 	ldbu	r2,1(r20)
   29128:	6b400814 	ori	r13,r13,32
   2912c:	a5000044 	addi	r20,r20,1
   29130:	10803fcc 	andi	r2,r2,255
   29134:	1080201c 	xori	r2,r2,128
   29138:	10bfe004 	addi	r2,r2,-128
   2913c:	003bda06 	br	280a8 <___vfiprintf_internal_r+0x104>
   29140:	408001f0 	cmpltui	r2,r8,7
   29144:	4039883a 	mov	fp,r8
   29148:	1000011e 	bne	r2,zero,29150 <___vfiprintf_internal_r+0x11ac>
   2914c:	07000184 	movi	fp,6
   29150:	04c000f4 	movhi	r19,3
   29154:	e02f883a 	mov	r23,fp
   29158:	d8c00415 	stw	r3,16(sp)
   2915c:	9cc09104 	addi	r19,r19,580
   29160:	003c4906 	br	28288 <___vfiprintf_internal_r+0x2e4>
   29164:	d8800417 	ldw	r2,16(sp)
   29168:	0039883a 	mov	fp,zero
   2916c:	d8c00415 	stw	r3,16(sp)
   29170:	15c00017 	ldw	r23,0(r2)
   29174:	0005883a 	mov	r2,zero
   29178:	003cd306 	br	284c8 <___vfiprintf_internal_r+0x524>
   2917c:	d8800417 	ldw	r2,16(sp)
   29180:	0039883a 	mov	fp,zero
   29184:	d8c00415 	stw	r3,16(sp)
   29188:	15c00017 	ldw	r23,0(r2)
   2918c:	00800044 	movi	r2,1
   29190:	003ccd06 	br	284c8 <___vfiprintf_internal_r+0x524>
   29194:	d8c00417 	ldw	r3,16(sp)
   29198:	0039883a 	mov	fp,zero
   2919c:	d9000415 	stw	r4,16(sp)
   291a0:	1dc00017 	ldw	r23,0(r3)
   291a4:	003d9d06 	br	2881c <___vfiprintf_internal_r+0x878>
   291a8:	d8800417 	ldw	r2,16(sp)
   291ac:	d8c00415 	stw	r3,16(sp)
   291b0:	15c00017 	ldw	r23,0(r2)
   291b4:	b839d7fa 	srai	fp,r23,31
   291b8:	e005883a 	mov	r2,fp
   291bc:	003d4b06 	br	286ec <___vfiprintf_internal_r+0x748>
   291c0:	3009883a 	mov	r4,r6
   291c4:	39c10e04 	addi	r7,r7,1080
   291c8:	003edd06 	br	28d40 <___vfiprintf_internal_r+0xd9c>
   291cc:	d9801904 	addi	r6,sp,100
   291d0:	01400044 	movi	r5,1
   291d4:	0009883a 	mov	r4,zero
   291d8:	9021883a 	mov	r16,r18
   291dc:	003c6406 	br	28370 <___vfiprintf_internal_r+0x3cc>
   291e0:	d8800944 	addi	r2,sp,37
   291e4:	d8801715 	stw	r2,92(sp)
   291e8:	00800044 	movi	r2,1
   291ec:	d8801815 	stw	r2,96(sp)
   291f0:	d9801904 	addi	r6,sp,100
   291f4:	01400044 	movi	r5,1
   291f8:	003c3e06 	br	282f4 <___vfiprintf_internal_r+0x350>
   291fc:	d9800945 	stb	r6,37(sp)
   29200:	003c1b06 	br	28270 <___vfiprintf_internal_r+0x2cc>
   29204:	d9800a04 	addi	r6,sp,40
   29208:	a80b883a 	mov	r5,r21
   2920c:	b009883a 	mov	r4,r22
   29210:	0027e980 	call	27e98 <__sprint_r.part.0>
   29214:	003c7806 	br	283f8 <___vfiprintf_internal_r+0x454>
   29218:	402f883a 	mov	r23,r8
   2921c:	d8c00415 	stw	r3,16(sp)
   29220:	4039883a 	mov	fp,r8
   29224:	003c1806 	br	28288 <___vfiprintf_internal_r+0x2e4>
   29228:	d9800945 	stb	r6,37(sp)
   2922c:	003df406 	br	28a00 <___vfiprintf_internal_r+0xa5c>
   29230:	303f883a 	mov	ra,r6
   29234:	39c11204 	addi	r7,r7,1096
   29238:	003f2506 	br	28ed0 <___vfiprintf_internal_r+0xf2c>
   2923c:	d9800945 	stb	r6,37(sp)
   29240:	003d7e06 	br	2883c <___vfiprintf_internal_r+0x898>
   29244:	d9800945 	stb	r6,37(sp)
   29248:	003d4c06 	br	2877c <___vfiprintf_internal_r+0x7d8>
   2924c:	d9800945 	stb	r6,37(sp)
   29250:	003d1e06 	br	286cc <___vfiprintf_internal_r+0x728>
   29254:	d9800945 	stb	r6,37(sp)
   29258:	003d6606 	br	287f4 <___vfiprintf_internal_r+0x850>
   2925c:	21400044 	addi	r5,r4,1
   29260:	39c11204 	addi	r7,r7,1096
   29264:	003d0606 	br	28680 <___vfiprintf_internal_r+0x6dc>
   29268:	01c000f4 	movhi	r7,3
   2926c:	301b883a 	mov	r13,r6
   29270:	281d883a 	mov	r14,r5
   29274:	39c10e04 	addi	r7,r7,1080
   29278:	003e7406 	br	28c4c <___vfiprintf_internal_r+0xca8>
   2927c:	00bfffc4 	movi	r2,-1
   29280:	d8800115 	stw	r2,4(sp)
   29284:	003c5f06 	br	28404 <___vfiprintf_internal_r+0x460>
   29288:	d8800417 	ldw	r2,16(sp)
   2928c:	12000017 	ldw	r8,0(r2)
   29290:	11000104 	addi	r4,r2,4
   29294:	4000010e 	bge	r8,zero,2929c <___vfiprintf_internal_r+0x12f8>
   29298:	023fffc4 	movi	r8,-1
   2929c:	a0800043 	ldbu	r2,1(r20)
   292a0:	d9000415 	stw	r4,16(sp)
   292a4:	1829883a 	mov	r20,r3
   292a8:	10803fcc 	andi	r2,r2,255
   292ac:	1080201c 	xori	r2,r2,128
   292b0:	10bfe004 	addi	r2,r2,-128
   292b4:	003b7c06 	br	280a8 <___vfiprintf_internal_r+0x104>

000292b8 <__vfiprintf_internal>:
   292b8:	00c000f4 	movhi	r3,3
   292bc:	2005883a 	mov	r2,r4
   292c0:	19091917 	ldw	r4,9316(r3)
   292c4:	300f883a 	mov	r7,r6
   292c8:	280d883a 	mov	r6,r5
   292cc:	100b883a 	mov	r5,r2
   292d0:	0027fa41 	jmpi	27fa4 <___vfiprintf_internal_r>

000292d4 <__sbprintf>:
   292d4:	2880030b 	ldhu	r2,12(r5)
   292d8:	2b001917 	ldw	r12,100(r5)
   292dc:	2ac0038b 	ldhu	r11,14(r5)
   292e0:	2a800717 	ldw	r10,28(r5)
   292e4:	2a400917 	ldw	r9,36(r5)
   292e8:	defee204 	addi	sp,sp,-1144
   292ec:	da001a04 	addi	r8,sp,104
   292f0:	00c10004 	movi	r3,1024
   292f4:	dc011a15 	stw	r16,1128(sp)
   292f8:	10bfff4c 	andi	r2,r2,65533
   292fc:	2821883a 	mov	r16,r5
   29300:	d80b883a 	mov	r5,sp
   29304:	dc811c15 	stw	r18,1136(sp)
   29308:	dc411b15 	stw	r17,1132(sp)
   2930c:	dfc11d15 	stw	ra,1140(sp)
   29310:	2025883a 	mov	r18,r4
   29314:	d880030d 	sth	r2,12(sp)
   29318:	db001915 	stw	r12,100(sp)
   2931c:	dac0038d 	sth	r11,14(sp)
   29320:	da800715 	stw	r10,28(sp)
   29324:	da400915 	stw	r9,36(sp)
   29328:	da000015 	stw	r8,0(sp)
   2932c:	da000415 	stw	r8,16(sp)
   29330:	d8c00215 	stw	r3,8(sp)
   29334:	d8c00515 	stw	r3,20(sp)
   29338:	d8000615 	stw	zero,24(sp)
   2933c:	0027fa40 	call	27fa4 <___vfiprintf_internal_r>
   29340:	1023883a 	mov	r17,r2
   29344:	10000d0e 	bge	r2,zero,2937c <__sbprintf+0xa8>
   29348:	d880030b 	ldhu	r2,12(sp)
   2934c:	1080100c 	andi	r2,r2,64
   29350:	10000326 	beq	r2,zero,29360 <__sbprintf+0x8c>
   29354:	8080030b 	ldhu	r2,12(r16)
   29358:	10801014 	ori	r2,r2,64
   2935c:	8080030d 	sth	r2,12(r16)
   29360:	8805883a 	mov	r2,r17
   29364:	dfc11d17 	ldw	ra,1140(sp)
   29368:	dc811c17 	ldw	r18,1136(sp)
   2936c:	dc411b17 	ldw	r17,1132(sp)
   29370:	dc011a17 	ldw	r16,1128(sp)
   29374:	dec11e04 	addi	sp,sp,1144
   29378:	f800283a 	ret
   2937c:	d80b883a 	mov	r5,sp
   29380:	9009883a 	mov	r4,r18
   29384:	00248f00 	call	248f0 <_fflush_r>
   29388:	103fef26 	beq	r2,zero,29348 <__sbprintf+0x74>
   2938c:	047fffc4 	movi	r17,-1
   29390:	003fed06 	br	29348 <__sbprintf+0x74>

00029394 <__swbuf_r>:
   29394:	defffb04 	addi	sp,sp,-20
   29398:	dcc00315 	stw	r19,12(sp)
   2939c:	dc400115 	stw	r17,4(sp)
   293a0:	dc000015 	stw	r16,0(sp)
   293a4:	dfc00415 	stw	ra,16(sp)
   293a8:	dc800215 	stw	r18,8(sp)
   293ac:	2027883a 	mov	r19,r4
   293b0:	2823883a 	mov	r17,r5
   293b4:	3021883a 	mov	r16,r6
   293b8:	20000226 	beq	r4,zero,293c4 <__swbuf_r+0x30>
   293bc:	20800e17 	ldw	r2,56(r4)
   293c0:	10003e26 	beq	r2,zero,294bc <__swbuf_r+0x128>
   293c4:	80800617 	ldw	r2,24(r16)
   293c8:	80c0030b 	ldhu	r3,12(r16)
   293cc:	80800215 	stw	r2,8(r16)
   293d0:	1880020c 	andi	r2,r3,8
   293d4:	10001f26 	beq	r2,zero,29454 <__swbuf_r+0xc0>
   293d8:	80800417 	ldw	r2,16(r16)
   293dc:	10001d26 	beq	r2,zero,29454 <__swbuf_r+0xc0>
   293e0:	1948000c 	andi	r5,r3,8192
   293e4:	8c803fcc 	andi	r18,r17,255
   293e8:	28002326 	beq	r5,zero,29478 <__swbuf_r+0xe4>
   293ec:	80c00017 	ldw	r3,0(r16)
   293f0:	81000517 	ldw	r4,20(r16)
   293f4:	1885c83a 	sub	r2,r3,r2
   293f8:	1100290e 	bge	r2,r4,294a0 <__swbuf_r+0x10c>
   293fc:	10800044 	addi	r2,r2,1
   29400:	81400217 	ldw	r5,8(r16)
   29404:	19000044 	addi	r4,r3,1
   29408:	81000015 	stw	r4,0(r16)
   2940c:	297fffc4 	addi	r5,r5,-1
   29410:	81400215 	stw	r5,8(r16)
   29414:	1c400005 	stb	r17,0(r3)
   29418:	80c00517 	ldw	r3,20(r16)
   2941c:	18802926 	beq	r3,r2,294c4 <__swbuf_r+0x130>
   29420:	8080030b 	ldhu	r2,12(r16)
   29424:	1080004c 	andi	r2,r2,1
   29428:	10000226 	beq	r2,zero,29434 <__swbuf_r+0xa0>
   2942c:	90800298 	cmpnei	r2,r18,10
   29430:	10002426 	beq	r2,zero,294c4 <__swbuf_r+0x130>
   29434:	9005883a 	mov	r2,r18
   29438:	dfc00417 	ldw	ra,16(sp)
   2943c:	dcc00317 	ldw	r19,12(sp)
   29440:	dc800217 	ldw	r18,8(sp)
   29444:	dc400117 	ldw	r17,4(sp)
   29448:	dc000017 	ldw	r16,0(sp)
   2944c:	dec00504 	addi	sp,sp,20
   29450:	f800283a 	ret
   29454:	800b883a 	mov	r5,r16
   29458:	9809883a 	mov	r4,r19
   2945c:	0022bfc0 	call	22bfc <__swsetup_r>
   29460:	10001c1e 	bne	r2,zero,294d4 <__swbuf_r+0x140>
   29464:	80c0030b 	ldhu	r3,12(r16)
   29468:	80800417 	ldw	r2,16(r16)
   2946c:	8c803fcc 	andi	r18,r17,255
   29470:	1948000c 	andi	r5,r3,8192
   29474:	283fdd1e 	bne	r5,zero,293ec <__swbuf_r+0x58>
   29478:	81001917 	ldw	r4,100(r16)
   2947c:	18c80014 	ori	r3,r3,8192
   29480:	0177ffc4 	movi	r5,-8193
   29484:	2148703a 	and	r4,r4,r5
   29488:	80c0030d 	sth	r3,12(r16)
   2948c:	80c00017 	ldw	r3,0(r16)
   29490:	81001915 	stw	r4,100(r16)
   29494:	81000517 	ldw	r4,20(r16)
   29498:	1885c83a 	sub	r2,r3,r2
   2949c:	113fd716 	blt	r2,r4,293fc <__swbuf_r+0x68>
   294a0:	800b883a 	mov	r5,r16
   294a4:	9809883a 	mov	r4,r19
   294a8:	00248f00 	call	248f0 <_fflush_r>
   294ac:	1000091e 	bne	r2,zero,294d4 <__swbuf_r+0x140>
   294b0:	80c00017 	ldw	r3,0(r16)
   294b4:	00800044 	movi	r2,1
   294b8:	003fd106 	br	29400 <__swbuf_r+0x6c>
   294bc:	0024c840 	call	24c84 <__sinit>
   294c0:	003fc006 	br	293c4 <__swbuf_r+0x30>
   294c4:	800b883a 	mov	r5,r16
   294c8:	9809883a 	mov	r4,r19
   294cc:	00248f00 	call	248f0 <_fflush_r>
   294d0:	103fd826 	beq	r2,zero,29434 <__swbuf_r+0xa0>
   294d4:	04bfffc4 	movi	r18,-1
   294d8:	003fd606 	br	29434 <__swbuf_r+0xa0>

000294dc <__swbuf>:
   294dc:	00c000f4 	movhi	r3,3
   294e0:	2005883a 	mov	r2,r4
   294e4:	19091917 	ldw	r4,9316(r3)
   294e8:	280d883a 	mov	r6,r5
   294ec:	100b883a 	mov	r5,r2
   294f0:	00293941 	jmpi	29394 <__swbuf_r>

000294f4 <_write_r>:
   294f4:	2807883a 	mov	r3,r5
   294f8:	defffe04 	addi	sp,sp,-8
   294fc:	dc000015 	stw	r16,0(sp)
   29500:	300b883a 	mov	r5,r6
   29504:	008000f4 	movhi	r2,3
   29508:	380d883a 	mov	r6,r7
   2950c:	2021883a 	mov	r16,r4
   29510:	1809883a 	mov	r4,r3
   29514:	dfc00115 	stw	ra,4(sp)
   29518:	10103715 	stw	zero,16604(r2)
   2951c:	002e2440 	call	2e244 <write>
   29520:	10ffffd8 	cmpnei	r3,r2,-1
   29524:	18000426 	beq	r3,zero,29538 <_write_r+0x44>
   29528:	dfc00117 	ldw	ra,4(sp)
   2952c:	dc000017 	ldw	r16,0(sp)
   29530:	dec00204 	addi	sp,sp,8
   29534:	f800283a 	ret
   29538:	00c000f4 	movhi	r3,3
   2953c:	18d03717 	ldw	r3,16604(r3)
   29540:	183ff926 	beq	r3,zero,29528 <_write_r+0x34>
   29544:	80c00015 	stw	r3,0(r16)
   29548:	dfc00117 	ldw	ra,4(sp)
   2954c:	dc000017 	ldw	r16,0(sp)
   29550:	dec00204 	addi	sp,sp,8
   29554:	f800283a 	ret

00029558 <_close_r>:
   29558:	defffe04 	addi	sp,sp,-8
   2955c:	dc000015 	stw	r16,0(sp)
   29560:	008000f4 	movhi	r2,3
   29564:	2021883a 	mov	r16,r4
   29568:	2809883a 	mov	r4,r5
   2956c:	dfc00115 	stw	ra,4(sp)
   29570:	10103715 	stw	zero,16604(r2)
   29574:	002d8240 	call	2d824 <close>
   29578:	10ffffd8 	cmpnei	r3,r2,-1
   2957c:	18000426 	beq	r3,zero,29590 <_close_r+0x38>
   29580:	dfc00117 	ldw	ra,4(sp)
   29584:	dc000017 	ldw	r16,0(sp)
   29588:	dec00204 	addi	sp,sp,8
   2958c:	f800283a 	ret
   29590:	00c000f4 	movhi	r3,3
   29594:	18d03717 	ldw	r3,16604(r3)
   29598:	183ff926 	beq	r3,zero,29580 <_close_r+0x28>
   2959c:	80c00015 	stw	r3,0(r16)
   295a0:	dfc00117 	ldw	ra,4(sp)
   295a4:	dc000017 	ldw	r16,0(sp)
   295a8:	dec00204 	addi	sp,sp,8
   295ac:	f800283a 	ret

000295b0 <__assert_func>:
   295b0:	008000f4 	movhi	r2,3
   295b4:	12091917 	ldw	r8,9316(r2)
   295b8:	defffc04 	addi	sp,sp,-16
   295bc:	3807883a 	mov	r3,r7
   295c0:	3005883a 	mov	r2,r6
   295c4:	dfc00315 	stw	ra,12(sp)
   295c8:	42400317 	ldw	r9,12(r8)
   295cc:	200f883a 	mov	r7,r4
   295d0:	2811883a 	mov	r8,r5
   295d4:	180d883a 	mov	r6,r3
   295d8:	10000a26 	beq	r2,zero,29604 <__assert_func+0x54>
   295dc:	00c000f4 	movhi	r3,3
   295e0:	18c11604 	addi	r3,r3,1112
   295e4:	014000f4 	movhi	r5,3
   295e8:	29411a04 	addi	r5,r5,1128
   295ec:	4809883a 	mov	r4,r9
   295f0:	d8c00115 	stw	r3,4(sp)
   295f4:	da000015 	stw	r8,0(sp)
   295f8:	d8800215 	stw	r2,8(sp)
   295fc:	00298140 	call	29814 <fiprintf>
   29600:	0029ea00 	call	29ea0 <abort>
   29604:	00c000f4 	movhi	r3,3
   29608:	18c11904 	addi	r3,r3,1124
   2960c:	1805883a 	mov	r2,r3
   29610:	003ff406 	br	295e4 <__assert_func+0x34>

00029614 <__assert>:
   29614:	deffff04 	addi	sp,sp,-4
   29618:	300f883a 	mov	r7,r6
   2961c:	000d883a 	mov	r6,zero
   29620:	dfc00015 	stw	ra,0(sp)
   29624:	00295b00 	call	295b0 <__assert_func>

00029628 <_calloc_r>:
   29628:	defffe04 	addi	sp,sp,-8
   2962c:	dc000015 	stw	r16,0(sp)
   29630:	2021883a 	mov	r16,r4
   29634:	2809883a 	mov	r4,r5
   29638:	300b883a 	mov	r5,r6
   2963c:	dfc00115 	stw	ra,4(sp)
   29640:	002af640 	call	2af64 <__mulsi3>
   29644:	8009883a 	mov	r4,r16
   29648:	100b883a 	mov	r5,r2
   2964c:	00258e80 	call	258e8 <_malloc_r>
   29650:	1009883a 	mov	r4,r2
   29654:	10000c26 	beq	r2,zero,29688 <_calloc_r+0x60>
   29658:	11bfff17 	ldw	r6,-4(r2)
   2965c:	00bfff04 	movi	r2,-4
   29660:	308c703a 	and	r6,r6,r2
   29664:	31bfff04 	addi	r6,r6,-4
   29668:	30800968 	cmpgeui	r2,r6,37
   2966c:	1000151e 	bne	r2,zero,296c4 <_calloc_r+0x9c>
   29670:	30800530 	cmpltui	r2,r6,20
   29674:	10000926 	beq	r2,zero,2969c <_calloc_r+0x74>
   29678:	2005883a 	mov	r2,r4
   2967c:	10000015 	stw	zero,0(r2)
   29680:	10000115 	stw	zero,4(r2)
   29684:	10000215 	stw	zero,8(r2)
   29688:	2005883a 	mov	r2,r4
   2968c:	dfc00117 	ldw	ra,4(sp)
   29690:	dc000017 	ldw	r16,0(sp)
   29694:	dec00204 	addi	sp,sp,8
   29698:	f800283a 	ret
   2969c:	20000015 	stw	zero,0(r4)
   296a0:	20000115 	stw	zero,4(r4)
   296a4:	30800728 	cmpgeui	r2,r6,28
   296a8:	10000a26 	beq	r2,zero,296d4 <_calloc_r+0xac>
   296ac:	20000215 	stw	zero,8(r4)
   296b0:	20000315 	stw	zero,12(r4)
   296b4:	31800920 	cmpeqi	r6,r6,36
   296b8:	3000081e 	bne	r6,zero,296dc <_calloc_r+0xb4>
   296bc:	20800404 	addi	r2,r4,16
   296c0:	003fee06 	br	2967c <_calloc_r+0x54>
   296c4:	000b883a 	mov	r5,zero
   296c8:	00263c80 	call	263c8 <memset>
   296cc:	1009883a 	mov	r4,r2
   296d0:	003fed06 	br	29688 <_calloc_r+0x60>
   296d4:	20800204 	addi	r2,r4,8
   296d8:	003fe806 	br	2967c <_calloc_r+0x54>
   296dc:	20000415 	stw	zero,16(r4)
   296e0:	20800604 	addi	r2,r4,24
   296e4:	20000515 	stw	zero,20(r4)
   296e8:	003fe406 	br	2967c <_calloc_r+0x54>

000296ec <_fclose_r>:
   296ec:	defffc04 	addi	sp,sp,-16
   296f0:	dfc00315 	stw	ra,12(sp)
   296f4:	dc800215 	stw	r18,8(sp)
   296f8:	dc400115 	stw	r17,4(sp)
   296fc:	dc000015 	stw	r16,0(sp)
   29700:	28000726 	beq	r5,zero,29720 <_fclose_r+0x34>
   29704:	2821883a 	mov	r16,r5
   29708:	2023883a 	mov	r17,r4
   2970c:	20000226 	beq	r4,zero,29718 <_fclose_r+0x2c>
   29710:	20800e17 	ldw	r2,56(r4)
   29714:	10002726 	beq	r2,zero,297b4 <_fclose_r+0xc8>
   29718:	8080030f 	ldh	r2,12(r16)
   2971c:	1000081e 	bne	r2,zero,29740 <_fclose_r+0x54>
   29720:	0025883a 	mov	r18,zero
   29724:	9005883a 	mov	r2,r18
   29728:	dfc00317 	ldw	ra,12(sp)
   2972c:	dc800217 	ldw	r18,8(sp)
   29730:	dc400117 	ldw	r17,4(sp)
   29734:	dc000017 	ldw	r16,0(sp)
   29738:	dec00404 	addi	sp,sp,16
   2973c:	f800283a 	ret
   29740:	800b883a 	mov	r5,r16
   29744:	8809883a 	mov	r4,r17
   29748:	00246c80 	call	246c8 <__sflush_r>
   2974c:	80c00b17 	ldw	r3,44(r16)
   29750:	1025883a 	mov	r18,r2
   29754:	18000426 	beq	r3,zero,29768 <_fclose_r+0x7c>
   29758:	81400717 	ldw	r5,28(r16)
   2975c:	8809883a 	mov	r4,r17
   29760:	183ee83a 	callr	r3
   29764:	10001716 	blt	r2,zero,297c4 <_fclose_r+0xd8>
   29768:	8080030b 	ldhu	r2,12(r16)
   2976c:	1080200c 	andi	r2,r2,128
   29770:	1000181e 	bne	r2,zero,297d4 <_fclose_r+0xe8>
   29774:	81400c17 	ldw	r5,48(r16)
   29778:	28000526 	beq	r5,zero,29790 <_fclose_r+0xa4>
   2977c:	80801004 	addi	r2,r16,64
   29780:	28800226 	beq	r5,r2,2978c <_fclose_r+0xa0>
   29784:	8809883a 	mov	r4,r17
   29788:	0024de80 	call	24de8 <_free_r>
   2978c:	80000c15 	stw	zero,48(r16)
   29790:	81401117 	ldw	r5,68(r16)
   29794:	28000326 	beq	r5,zero,297a4 <_fclose_r+0xb8>
   29798:	8809883a 	mov	r4,r17
   2979c:	0024de80 	call	24de8 <_free_r>
   297a0:	80001115 	stw	zero,68(r16)
   297a4:	0024c940 	call	24c94 <__sfp_lock_acquire>
   297a8:	8000030d 	sth	zero,12(r16)
   297ac:	0024c980 	call	24c98 <__sfp_lock_release>
   297b0:	003fdc06 	br	29724 <_fclose_r+0x38>
   297b4:	0024c840 	call	24c84 <__sinit>
   297b8:	8080030f 	ldh	r2,12(r16)
   297bc:	103fd826 	beq	r2,zero,29720 <_fclose_r+0x34>
   297c0:	003fdf06 	br	29740 <_fclose_r+0x54>
   297c4:	8080030b 	ldhu	r2,12(r16)
   297c8:	04bfffc4 	movi	r18,-1
   297cc:	1080200c 	andi	r2,r2,128
   297d0:	103fe826 	beq	r2,zero,29774 <_fclose_r+0x88>
   297d4:	81400417 	ldw	r5,16(r16)
   297d8:	8809883a 	mov	r4,r17
   297dc:	0024de80 	call	24de8 <_free_r>
   297e0:	003fe406 	br	29774 <_fclose_r+0x88>

000297e4 <fclose>:
   297e4:	008000f4 	movhi	r2,3
   297e8:	200b883a 	mov	r5,r4
   297ec:	11091917 	ldw	r4,9316(r2)
   297f0:	00296ec1 	jmpi	296ec <_fclose_r>

000297f4 <_fiprintf_r>:
   297f4:	defffe04 	addi	sp,sp,-8
   297f8:	dfc00015 	stw	ra,0(sp)
   297fc:	d9c00115 	stw	r7,4(sp)
   29800:	d9c00104 	addi	r7,sp,4
   29804:	0029d6c0 	call	29d6c <_vfiprintf_r>
   29808:	dfc00017 	ldw	ra,0(sp)
   2980c:	dec00204 	addi	sp,sp,8
   29810:	f800283a 	ret

00029814 <fiprintf>:
   29814:	defffd04 	addi	sp,sp,-12
   29818:	2005883a 	mov	r2,r4
   2981c:	dfc00015 	stw	ra,0(sp)
   29820:	d9800115 	stw	r6,4(sp)
   29824:	d9c00215 	stw	r7,8(sp)
   29828:	00c000f4 	movhi	r3,3
   2982c:	19091917 	ldw	r4,9316(r3)
   29830:	280d883a 	mov	r6,r5
   29834:	d9c00104 	addi	r7,sp,4
   29838:	100b883a 	mov	r5,r2
   2983c:	0029d6c0 	call	29d6c <_vfiprintf_r>
   29840:	dfc00017 	ldw	ra,0(sp)
   29844:	dec00304 	addi	sp,sp,12
   29848:	f800283a 	ret

0002984c <__fputwc>:
   2984c:	defff904 	addi	sp,sp,-28
   29850:	dcc00415 	stw	r19,16(sp)
   29854:	dc800315 	stw	r18,12(sp)
   29858:	dc000115 	stw	r16,4(sp)
   2985c:	dfc00615 	stw	ra,24(sp)
   29860:	dd000515 	stw	r20,20(sp)
   29864:	dc400215 	stw	r17,8(sp)
   29868:	2025883a 	mov	r18,r4
   2986c:	2827883a 	mov	r19,r5
   29870:	3021883a 	mov	r16,r6
   29874:	0029b780 	call	29b78 <__locale_mb_cur_max>
   29878:	10800058 	cmpnei	r2,r2,1
   2987c:	1000071e 	bne	r2,zero,2989c <__fputwc+0x50>
   29880:	98bfffc4 	addi	r2,r19,-1
   29884:	10803fe8 	cmpgeui	r2,r2,255
   29888:	1000041e 	bne	r2,zero,2989c <__fputwc+0x50>
   2988c:	980b883a 	mov	r5,r19
   29890:	dcc000c5 	stb	r19,3(sp)
   29894:	05000044 	movi	r20,1
   29898:	00000a06 	br	298c4 <__fputwc+0x78>
   2989c:	81c01704 	addi	r7,r16,92
   298a0:	980d883a 	mov	r6,r19
   298a4:	d94000c4 	addi	r5,sp,3
   298a8:	9009883a 	mov	r4,r18
   298ac:	0029d700 	call	29d70 <_wcrtomb_r>
   298b0:	1029883a 	mov	r20,r2
   298b4:	10bfffd8 	cmpnei	r2,r2,-1
   298b8:	10003926 	beq	r2,zero,299a0 <__fputwc+0x154>
   298bc:	a0001f26 	beq	r20,zero,2993c <__fputwc+0xf0>
   298c0:	d94000c3 	ldbu	r5,3(sp)
   298c4:	0023883a 	mov	r17,zero
   298c8:	00000a06 	br	298f4 <__fputwc+0xa8>
   298cc:	80800017 	ldw	r2,0(r16)
   298d0:	11400005 	stb	r5,0(r2)
   298d4:	80c00017 	ldw	r3,0(r16)
   298d8:	18c00044 	addi	r3,r3,1
   298dc:	80c00015 	stw	r3,0(r16)
   298e0:	8c400044 	addi	r17,r17,1
   298e4:	d88000c4 	addi	r2,sp,3
   298e8:	1447883a 	add	r3,r2,r17
   298ec:	8d00132e 	bgeu	r17,r20,2993c <__fputwc+0xf0>
   298f0:	19400003 	ldbu	r5,0(r3)
   298f4:	80c00217 	ldw	r3,8(r16)
   298f8:	18ffffc4 	addi	r3,r3,-1
   298fc:	80c00215 	stw	r3,8(r16)
   29900:	183ff20e 	bge	r3,zero,298cc <__fputwc+0x80>
   29904:	80800617 	ldw	r2,24(r16)
   29908:	18801616 	blt	r3,r2,29964 <__fputwc+0x118>
   2990c:	80800017 	ldw	r2,0(r16)
   29910:	11400005 	stb	r5,0(r2)
   29914:	80800017 	ldw	r2,0(r16)
   29918:	10c00003 	ldbu	r3,0(r2)
   2991c:	10800044 	addi	r2,r2,1
   29920:	18c002a0 	cmpeqi	r3,r3,10
   29924:	1800181e 	bne	r3,zero,29988 <__fputwc+0x13c>
   29928:	80800015 	stw	r2,0(r16)
   2992c:	8c400044 	addi	r17,r17,1
   29930:	d88000c4 	addi	r2,sp,3
   29934:	1447883a 	add	r3,r2,r17
   29938:	8d3fed36 	bltu	r17,r20,298f0 <__fputwc+0xa4>
   2993c:	9829883a 	mov	r20,r19
   29940:	a005883a 	mov	r2,r20
   29944:	dfc00617 	ldw	ra,24(sp)
   29948:	dd000517 	ldw	r20,20(sp)
   2994c:	dcc00417 	ldw	r19,16(sp)
   29950:	dc800317 	ldw	r18,12(sp)
   29954:	dc400217 	ldw	r17,8(sp)
   29958:	dc000117 	ldw	r16,4(sp)
   2995c:	dec00704 	addi	sp,sp,28
   29960:	f800283a 	ret
   29964:	29403fcc 	andi	r5,r5,255
   29968:	800d883a 	mov	r6,r16
   2996c:	9009883a 	mov	r4,r18
   29970:	00293940 	call	29394 <__swbuf_r>
   29974:	10ffffe0 	cmpeqi	r3,r2,-1
   29978:	18c03fcc 	andi	r3,r3,255
   2997c:	183fd826 	beq	r3,zero,298e0 <__fputwc+0x94>
   29980:	053fffc4 	movi	r20,-1
   29984:	003fee06 	br	29940 <__fputwc+0xf4>
   29988:	800d883a 	mov	r6,r16
   2998c:	01400284 	movi	r5,10
   29990:	9009883a 	mov	r4,r18
   29994:	00293940 	call	29394 <__swbuf_r>
   29998:	10ffffe0 	cmpeqi	r3,r2,-1
   2999c:	003ff606 	br	29978 <__fputwc+0x12c>
   299a0:	8080030b 	ldhu	r2,12(r16)
   299a4:	10801014 	ori	r2,r2,64
   299a8:	8080030d 	sth	r2,12(r16)
   299ac:	003fe406 	br	29940 <__fputwc+0xf4>

000299b0 <_fputwc_r>:
   299b0:	3080030b 	ldhu	r2,12(r6)
   299b4:	10c8000c 	andi	r3,r2,8192
   299b8:	1800051e 	bne	r3,zero,299d0 <_fputwc_r+0x20>
   299bc:	30c01917 	ldw	r3,100(r6)
   299c0:	10880014 	ori	r2,r2,8192
   299c4:	3080030d 	sth	r2,12(r6)
   299c8:	18880014 	ori	r2,r3,8192
   299cc:	30801915 	stw	r2,100(r6)
   299d0:	002984c1 	jmpi	2984c <__fputwc>

000299d4 <fputwc>:
   299d4:	defffc04 	addi	sp,sp,-16
   299d8:	008000f4 	movhi	r2,3
   299dc:	dc000215 	stw	r16,8(sp)
   299e0:	14091917 	ldw	r16,9316(r2)
   299e4:	dfc00315 	stw	ra,12(sp)
   299e8:	280d883a 	mov	r6,r5
   299ec:	200b883a 	mov	r5,r4
   299f0:	80000226 	beq	r16,zero,299fc <fputwc+0x28>
   299f4:	80800e17 	ldw	r2,56(r16)
   299f8:	10000d26 	beq	r2,zero,29a30 <fputwc+0x5c>
   299fc:	3080030b 	ldhu	r2,12(r6)
   29a00:	10c8000c 	andi	r3,r2,8192
   29a04:	1800051e 	bne	r3,zero,29a1c <fputwc+0x48>
   29a08:	30c01917 	ldw	r3,100(r6)
   29a0c:	10880014 	ori	r2,r2,8192
   29a10:	3080030d 	sth	r2,12(r6)
   29a14:	18880014 	ori	r2,r3,8192
   29a18:	30801915 	stw	r2,100(r6)
   29a1c:	8009883a 	mov	r4,r16
   29a20:	dfc00317 	ldw	ra,12(sp)
   29a24:	dc000217 	ldw	r16,8(sp)
   29a28:	dec00404 	addi	sp,sp,16
   29a2c:	002984c1 	jmpi	2984c <__fputwc>
   29a30:	d9000015 	stw	r4,0(sp)
   29a34:	8009883a 	mov	r4,r16
   29a38:	d9800115 	stw	r6,4(sp)
   29a3c:	0024c840 	call	24c84 <__sinit>
   29a40:	d9800117 	ldw	r6,4(sp)
   29a44:	d9400017 	ldw	r5,0(sp)
   29a48:	003fec06 	br	299fc <fputwc+0x28>

00029a4c <_fstat_r>:
   29a4c:	2807883a 	mov	r3,r5
   29a50:	defffe04 	addi	sp,sp,-8
   29a54:	dc000015 	stw	r16,0(sp)
   29a58:	008000f4 	movhi	r2,3
   29a5c:	300b883a 	mov	r5,r6
   29a60:	2021883a 	mov	r16,r4
   29a64:	1809883a 	mov	r4,r3
   29a68:	dfc00115 	stw	ra,4(sp)
   29a6c:	10103715 	stw	zero,16604(r2)
   29a70:	002d9a00 	call	2d9a0 <fstat>
   29a74:	10ffffd8 	cmpnei	r3,r2,-1
   29a78:	18000426 	beq	r3,zero,29a8c <_fstat_r+0x40>
   29a7c:	dfc00117 	ldw	ra,4(sp)
   29a80:	dc000017 	ldw	r16,0(sp)
   29a84:	dec00204 	addi	sp,sp,8
   29a88:	f800283a 	ret
   29a8c:	00c000f4 	movhi	r3,3
   29a90:	18d03717 	ldw	r3,16604(r3)
   29a94:	183ff926 	beq	r3,zero,29a7c <_fstat_r+0x30>
   29a98:	80c00015 	stw	r3,0(r16)
   29a9c:	dfc00117 	ldw	ra,4(sp)
   29aa0:	dc000017 	ldw	r16,0(sp)
   29aa4:	dec00204 	addi	sp,sp,8
   29aa8:	f800283a 	ret

00029aac <_isatty_r>:
   29aac:	defffe04 	addi	sp,sp,-8
   29ab0:	dc000015 	stw	r16,0(sp)
   29ab4:	008000f4 	movhi	r2,3
   29ab8:	2021883a 	mov	r16,r4
   29abc:	2809883a 	mov	r4,r5
   29ac0:	dfc00115 	stw	ra,4(sp)
   29ac4:	10103715 	stw	zero,16604(r2)
   29ac8:	002dab80 	call	2dab8 <isatty>
   29acc:	10ffffd8 	cmpnei	r3,r2,-1
   29ad0:	18000426 	beq	r3,zero,29ae4 <_isatty_r+0x38>
   29ad4:	dfc00117 	ldw	ra,4(sp)
   29ad8:	dc000017 	ldw	r16,0(sp)
   29adc:	dec00204 	addi	sp,sp,8
   29ae0:	f800283a 	ret
   29ae4:	00c000f4 	movhi	r3,3
   29ae8:	18d03717 	ldw	r3,16604(r3)
   29aec:	183ff926 	beq	r3,zero,29ad4 <_isatty_r+0x28>
   29af0:	80c00015 	stw	r3,0(r16)
   29af4:	dfc00117 	ldw	ra,4(sp)
   29af8:	dc000017 	ldw	r16,0(sp)
   29afc:	dec00204 	addi	sp,sp,8
   29b00:	f800283a 	ret

00029b04 <_setlocale_r>:
   29b04:	30001626 	beq	r6,zero,29b60 <_setlocale_r+0x5c>
   29b08:	014000f4 	movhi	r5,3
   29b0c:	defffe04 	addi	sp,sp,-8
   29b10:	29412704 	addi	r5,r5,1180
   29b14:	3009883a 	mov	r4,r6
   29b18:	dc000015 	stw	r16,0(sp)
   29b1c:	dfc00115 	stw	ra,4(sp)
   29b20:	3021883a 	mov	r16,r6
   29b24:	0029cb40 	call	29cb4 <strcmp>
   29b28:	1000061e 	bne	r2,zero,29b44 <_setlocale_r+0x40>
   29b2c:	008000f4 	movhi	r2,3
   29b30:	10812604 	addi	r2,r2,1176
   29b34:	dfc00117 	ldw	ra,4(sp)
   29b38:	dc000017 	ldw	r16,0(sp)
   29b3c:	dec00204 	addi	sp,sp,8
   29b40:	f800283a 	ret
   29b44:	80800003 	ldbu	r2,0(r16)
   29b48:	10bfef44 	addi	r2,r2,-67
   29b4c:	10000726 	beq	r2,zero,29b6c <_setlocale_r+0x68>
   29b50:	80800003 	ldbu	r2,0(r16)
   29b54:	103ff526 	beq	r2,zero,29b2c <_setlocale_r+0x28>
   29b58:	0005883a 	mov	r2,zero
   29b5c:	003ff506 	br	29b34 <_setlocale_r+0x30>
   29b60:	008000f4 	movhi	r2,3
   29b64:	10812604 	addi	r2,r2,1176
   29b68:	f800283a 	ret
   29b6c:	80800043 	ldbu	r2,1(r16)
   29b70:	103fee26 	beq	r2,zero,29b2c <_setlocale_r+0x28>
   29b74:	003ff606 	br	29b50 <_setlocale_r+0x4c>

00029b78 <__locale_mb_cur_max>:
   29b78:	008000f4 	movhi	r2,3
   29b7c:	10847507 	ldb	r2,4564(r2)
   29b80:	f800283a 	ret

00029b84 <setlocale>:
   29b84:	00c000f4 	movhi	r3,3
   29b88:	2005883a 	mov	r2,r4
   29b8c:	19091917 	ldw	r4,9316(r3)
   29b90:	280d883a 	mov	r6,r5
   29b94:	100b883a 	mov	r5,r2
   29b98:	0029b041 	jmpi	29b04 <_setlocale_r>

00029b9c <_lseek_r>:
   29b9c:	2807883a 	mov	r3,r5
   29ba0:	defffe04 	addi	sp,sp,-8
   29ba4:	dc000015 	stw	r16,0(sp)
   29ba8:	300b883a 	mov	r5,r6
   29bac:	008000f4 	movhi	r2,3
   29bb0:	380d883a 	mov	r6,r7
   29bb4:	2021883a 	mov	r16,r4
   29bb8:	1809883a 	mov	r4,r3
   29bbc:	dfc00115 	stw	ra,4(sp)
   29bc0:	10103715 	stw	zero,16604(r2)
   29bc4:	002ddf80 	call	2ddf8 <lseek>
   29bc8:	10ffffd8 	cmpnei	r3,r2,-1
   29bcc:	18000426 	beq	r3,zero,29be0 <_lseek_r+0x44>
   29bd0:	dfc00117 	ldw	ra,4(sp)
   29bd4:	dc000017 	ldw	r16,0(sp)
   29bd8:	dec00204 	addi	sp,sp,8
   29bdc:	f800283a 	ret
   29be0:	00c000f4 	movhi	r3,3
   29be4:	18d03717 	ldw	r3,16604(r3)
   29be8:	183ff926 	beq	r3,zero,29bd0 <_lseek_r+0x34>
   29bec:	80c00015 	stw	r3,0(r16)
   29bf0:	dfc00117 	ldw	ra,4(sp)
   29bf4:	dc000017 	ldw	r16,0(sp)
   29bf8:	dec00204 	addi	sp,sp,8
   29bfc:	f800283a 	ret

00029c00 <_mbtowc_r>:
   29c00:	008000f4 	movhi	r2,3
   29c04:	10846417 	ldw	r2,4496(r2)
   29c08:	1000683a 	jmp	r2

00029c0c <__ascii_mbtowc>:
   29c0c:	deffff04 	addi	sp,sp,-4
   29c10:	28000826 	beq	r5,zero,29c34 <__ascii_mbtowc+0x28>
   29c14:	30000926 	beq	r6,zero,29c3c <__ascii_mbtowc+0x30>
   29c18:	38000b26 	beq	r7,zero,29c48 <__ascii_mbtowc+0x3c>
   29c1c:	30800003 	ldbu	r2,0(r6)
   29c20:	28800015 	stw	r2,0(r5)
   29c24:	30800003 	ldbu	r2,0(r6)
   29c28:	1004c03a 	cmpne	r2,r2,zero
   29c2c:	dec00104 	addi	sp,sp,4
   29c30:	f800283a 	ret
   29c34:	d80b883a 	mov	r5,sp
   29c38:	303ff71e 	bne	r6,zero,29c18 <__ascii_mbtowc+0xc>
   29c3c:	0005883a 	mov	r2,zero
   29c40:	dec00104 	addi	sp,sp,4
   29c44:	f800283a 	ret
   29c48:	00bfff84 	movi	r2,-2
   29c4c:	003ff706 	br	29c2c <__ascii_mbtowc+0x20>

00029c50 <_read_r>:
   29c50:	2807883a 	mov	r3,r5
   29c54:	defffe04 	addi	sp,sp,-8
   29c58:	dc000015 	stw	r16,0(sp)
   29c5c:	300b883a 	mov	r5,r6
   29c60:	008000f4 	movhi	r2,3
   29c64:	380d883a 	mov	r6,r7
   29c68:	2021883a 	mov	r16,r4
   29c6c:	1809883a 	mov	r4,r3
   29c70:	dfc00115 	stw	ra,4(sp)
   29c74:	10103715 	stw	zero,16604(r2)
   29c78:	002dfd80 	call	2dfd8 <read>
   29c7c:	10ffffd8 	cmpnei	r3,r2,-1
   29c80:	18000426 	beq	r3,zero,29c94 <_read_r+0x44>
   29c84:	dfc00117 	ldw	ra,4(sp)
   29c88:	dc000017 	ldw	r16,0(sp)
   29c8c:	dec00204 	addi	sp,sp,8
   29c90:	f800283a 	ret
   29c94:	00c000f4 	movhi	r3,3
   29c98:	18d03717 	ldw	r3,16604(r3)
   29c9c:	183ff926 	beq	r3,zero,29c84 <_read_r+0x34>
   29ca0:	80c00015 	stw	r3,0(r16)
   29ca4:	dfc00117 	ldw	ra,4(sp)
   29ca8:	dc000017 	ldw	r16,0(sp)
   29cac:	dec00204 	addi	sp,sp,8
   29cb0:	f800283a 	ret

00029cb4 <strcmp>:
   29cb4:	2144b03a 	or	r2,r4,r5
   29cb8:	108000cc 	andi	r2,r2,3
   29cbc:	1000141e 	bne	r2,zero,29d10 <strcmp+0x5c>
   29cc0:	20800017 	ldw	r2,0(r4)
   29cc4:	28c00017 	ldw	r3,0(r5)
   29cc8:	10c0111e 	bne	r2,r3,29d10 <strcmp+0x5c>
   29ccc:	01ffbff4 	movhi	r7,65279
   29cd0:	01a02074 	movhi	r6,32897
   29cd4:	39ffbfc4 	addi	r7,r7,-257
   29cd8:	31a02004 	addi	r6,r6,-32640
   29cdc:	00000306 	br	29cec <strcmp+0x38>
   29ce0:	20800017 	ldw	r2,0(r4)
   29ce4:	28c00017 	ldw	r3,0(r5)
   29ce8:	10c0091e 	bne	r2,r3,29d10 <strcmp+0x5c>
   29cec:	11c7883a 	add	r3,r2,r7
   29cf0:	0084303a 	nor	r2,zero,r2
   29cf4:	1884703a 	and	r2,r3,r2
   29cf8:	1184703a 	and	r2,r2,r6
   29cfc:	21000104 	addi	r4,r4,4
   29d00:	29400104 	addi	r5,r5,4
   29d04:	103ff626 	beq	r2,zero,29ce0 <strcmp+0x2c>
   29d08:	0005883a 	mov	r2,zero
   29d0c:	f800283a 	ret
   29d10:	20c00003 	ldbu	r3,0(r4)
   29d14:	18803fcc 	andi	r2,r3,255
   29d18:	1080201c 	xori	r2,r2,128
   29d1c:	10bfe004 	addi	r2,r2,-128
   29d20:	1000071e 	bne	r2,zero,29d40 <strcmp+0x8c>
   29d24:	00000a06 	br	29d50 <strcmp+0x9c>
   29d28:	20c00003 	ldbu	r3,0(r4)
   29d2c:	29400044 	addi	r5,r5,1
   29d30:	18803fcc 	andi	r2,r3,255
   29d34:	1080201c 	xori	r2,r2,128
   29d38:	10bfe004 	addi	r2,r2,-128
   29d3c:	10000726 	beq	r2,zero,29d5c <strcmp+0xa8>
   29d40:	29800007 	ldb	r6,0(r5)
   29d44:	21000044 	addi	r4,r4,1
   29d48:	30bff726 	beq	r6,r2,29d28 <strcmp+0x74>
   29d4c:	18803fcc 	andi	r2,r3,255
   29d50:	28c00003 	ldbu	r3,0(r5)
   29d54:	10c5c83a 	sub	r2,r2,r3
   29d58:	f800283a 	ret
   29d5c:	28c00003 	ldbu	r3,0(r5)
   29d60:	0005883a 	mov	r2,zero
   29d64:	10c5c83a 	sub	r2,r2,r3
   29d68:	f800283a 	ret

00029d6c <_vfiprintf_r>:
   29d6c:	0027fa41 	jmpi	27fa4 <___vfiprintf_internal_r>

00029d70 <_wcrtomb_r>:
   29d70:	defffa04 	addi	sp,sp,-24
   29d74:	dc400415 	stw	r17,16(sp)
   29d78:	dc000315 	stw	r16,12(sp)
   29d7c:	008000f4 	movhi	r2,3
   29d80:	dfc00515 	stw	ra,20(sp)
   29d84:	10846317 	ldw	r2,4492(r2)
   29d88:	2023883a 	mov	r17,r4
   29d8c:	3821883a 	mov	r16,r7
   29d90:	28000826 	beq	r5,zero,29db4 <_wcrtomb_r+0x44>
   29d94:	103ee83a 	callr	r2
   29d98:	10ffffd8 	cmpnei	r3,r2,-1
   29d9c:	18000a26 	beq	r3,zero,29dc8 <_wcrtomb_r+0x58>
   29da0:	dfc00517 	ldw	ra,20(sp)
   29da4:	dc400417 	ldw	r17,16(sp)
   29da8:	dc000317 	ldw	r16,12(sp)
   29dac:	dec00604 	addi	sp,sp,24
   29db0:	f800283a 	ret
   29db4:	000d883a 	mov	r6,zero
   29db8:	d9400084 	addi	r5,sp,2
   29dbc:	103ee83a 	callr	r2
   29dc0:	10ffffd8 	cmpnei	r3,r2,-1
   29dc4:	183ff61e 	bne	r3,zero,29da0 <_wcrtomb_r+0x30>
   29dc8:	00802284 	movi	r2,138
   29dcc:	80000015 	stw	zero,0(r16)
   29dd0:	88800015 	stw	r2,0(r17)
   29dd4:	00bfffc4 	movi	r2,-1
   29dd8:	003ff106 	br	29da0 <_wcrtomb_r+0x30>

00029ddc <wcrtomb>:
   29ddc:	defffa04 	addi	sp,sp,-24
   29de0:	00c000f4 	movhi	r3,3
   29de4:	dc400415 	stw	r17,16(sp)
   29de8:	dc000315 	stw	r16,12(sp)
   29dec:	1c491917 	ldw	r17,9316(r3)
   29df0:	dfc00515 	stw	ra,20(sp)
   29df4:	00c000f4 	movhi	r3,3
   29df8:	18c46317 	ldw	r3,4492(r3)
   29dfc:	3021883a 	mov	r16,r6
   29e00:	20000c26 	beq	r4,zero,29e34 <wcrtomb+0x58>
   29e04:	280d883a 	mov	r6,r5
   29e08:	800f883a 	mov	r7,r16
   29e0c:	200b883a 	mov	r5,r4
   29e10:	8809883a 	mov	r4,r17
   29e14:	183ee83a 	callr	r3
   29e18:	10ffffd8 	cmpnei	r3,r2,-1
   29e1c:	18000c26 	beq	r3,zero,29e50 <wcrtomb+0x74>
   29e20:	dfc00517 	ldw	ra,20(sp)
   29e24:	dc400417 	ldw	r17,16(sp)
   29e28:	dc000317 	ldw	r16,12(sp)
   29e2c:	dec00604 	addi	sp,sp,24
   29e30:	f800283a 	ret
   29e34:	300f883a 	mov	r7,r6
   29e38:	d9400084 	addi	r5,sp,2
   29e3c:	000d883a 	mov	r6,zero
   29e40:	8809883a 	mov	r4,r17
   29e44:	183ee83a 	callr	r3
   29e48:	10ffffd8 	cmpnei	r3,r2,-1
   29e4c:	183ff41e 	bne	r3,zero,29e20 <wcrtomb+0x44>
   29e50:	00802284 	movi	r2,138
   29e54:	80000015 	stw	zero,0(r16)
   29e58:	88800015 	stw	r2,0(r17)
   29e5c:	00bfffc4 	movi	r2,-1
   29e60:	003fef06 	br	29e20 <wcrtomb+0x44>

00029e64 <_wctomb_r>:
   29e64:	008000f4 	movhi	r2,3
   29e68:	10846317 	ldw	r2,4492(r2)
   29e6c:	1000683a 	jmp	r2

00029e70 <__ascii_wctomb>:
   29e70:	28000926 	beq	r5,zero,29e98 <__ascii_wctomb+0x28>
   29e74:	30804030 	cmpltui	r2,r6,256
   29e78:	10000326 	beq	r2,zero,29e88 <__ascii_wctomb+0x18>
   29e7c:	29800005 	stb	r6,0(r5)
   29e80:	00800044 	movi	r2,1
   29e84:	f800283a 	ret
   29e88:	00802284 	movi	r2,138
   29e8c:	20800015 	stw	r2,0(r4)
   29e90:	00bfffc4 	movi	r2,-1
   29e94:	f800283a 	ret
   29e98:	0005883a 	mov	r2,zero
   29e9c:	f800283a 	ret

00029ea0 <abort>:
   29ea0:	deffff04 	addi	sp,sp,-4
   29ea4:	01000184 	movi	r4,6
   29ea8:	dfc00015 	stw	ra,0(sp)
   29eac:	002a1180 	call	2a118 <raise>
   29eb0:	01000044 	movi	r4,1
   29eb4:	002d92c0 	call	2d92c <_exit>

00029eb8 <_init_signal_r.part.0>:
   29eb8:	defffe04 	addi	sp,sp,-8
   29ebc:	01402004 	movi	r5,128
   29ec0:	dc000015 	stw	r16,0(sp)
   29ec4:	dfc00115 	stw	ra,4(sp)
   29ec8:	2021883a 	mov	r16,r4
   29ecc:	00258e80 	call	258e8 <_malloc_r>
   29ed0:	8080b715 	stw	r2,732(r16)
   29ed4:	10000926 	beq	r2,zero,29efc <_init_signal_r.part.0+0x44>
   29ed8:	10c02004 	addi	r3,r2,128
   29edc:	10000015 	stw	zero,0(r2)
   29ee0:	10800104 	addi	r2,r2,4
   29ee4:	10fffd1e 	bne	r2,r3,29edc <_init_signal_r.part.0+0x24>
   29ee8:	0005883a 	mov	r2,zero
   29eec:	dfc00117 	ldw	ra,4(sp)
   29ef0:	dc000017 	ldw	r16,0(sp)
   29ef4:	dec00204 	addi	sp,sp,8
   29ef8:	f800283a 	ret
   29efc:	00bfffc4 	movi	r2,-1
   29f00:	003ffa06 	br	29eec <_init_signal_r.part.0+0x34>

00029f04 <_init_signal_r>:
   29f04:	2080b717 	ldw	r2,732(r4)
   29f08:	10000226 	beq	r2,zero,29f14 <_init_signal_r+0x10>
   29f0c:	0005883a 	mov	r2,zero
   29f10:	f800283a 	ret
   29f14:	0029eb81 	jmpi	29eb8 <_init_signal_r.part.0>

00029f18 <_signal_r>:
   29f18:	defffc04 	addi	sp,sp,-16
   29f1c:	dc000215 	stw	r16,8(sp)
   29f20:	dfc00315 	stw	ra,12(sp)
   29f24:	28800830 	cmpltui	r2,r5,32
   29f28:	2021883a 	mov	r16,r4
   29f2c:	10000a26 	beq	r2,zero,29f58 <_signal_r+0x40>
   29f30:	2080b717 	ldw	r2,732(r4)
   29f34:	10000f26 	beq	r2,zero,29f74 <_signal_r+0x5c>
   29f38:	280a90ba 	slli	r5,r5,2
   29f3c:	114b883a 	add	r5,r2,r5
   29f40:	28800017 	ldw	r2,0(r5)
   29f44:	29800015 	stw	r6,0(r5)
   29f48:	dfc00317 	ldw	ra,12(sp)
   29f4c:	dc000217 	ldw	r16,8(sp)
   29f50:	dec00404 	addi	sp,sp,16
   29f54:	f800283a 	ret
   29f58:	00800584 	movi	r2,22
   29f5c:	20800015 	stw	r2,0(r4)
   29f60:	00bfffc4 	movi	r2,-1
   29f64:	dfc00317 	ldw	ra,12(sp)
   29f68:	dc000217 	ldw	r16,8(sp)
   29f6c:	dec00404 	addi	sp,sp,16
   29f70:	f800283a 	ret
   29f74:	d9800115 	stw	r6,4(sp)
   29f78:	d9400015 	stw	r5,0(sp)
   29f7c:	0029eb80 	call	29eb8 <_init_signal_r.part.0>
   29f80:	1000041e 	bne	r2,zero,29f94 <_signal_r+0x7c>
   29f84:	8080b717 	ldw	r2,732(r16)
   29f88:	d9800117 	ldw	r6,4(sp)
   29f8c:	d9400017 	ldw	r5,0(sp)
   29f90:	003fe906 	br	29f38 <_signal_r+0x20>
   29f94:	00bfffc4 	movi	r2,-1
   29f98:	003feb06 	br	29f48 <_signal_r+0x30>

00029f9c <_raise_r>:
   29f9c:	28800830 	cmpltui	r2,r5,32
   29fa0:	10002b26 	beq	r2,zero,2a050 <_raise_r+0xb4>
   29fa4:	2080b717 	ldw	r2,732(r4)
   29fa8:	defffd04 	addi	sp,sp,-12
   29fac:	dc000115 	stw	r16,4(sp)
   29fb0:	dfc00215 	stw	ra,8(sp)
   29fb4:	2821883a 	mov	r16,r5
   29fb8:	10001026 	beq	r2,zero,29ffc <_raise_r+0x60>
   29fbc:	280690ba 	slli	r3,r5,2
   29fc0:	10c5883a 	add	r2,r2,r3
   29fc4:	10c00017 	ldw	r3,0(r2)
   29fc8:	18000c26 	beq	r3,zero,29ffc <_raise_r+0x60>
   29fcc:	19400060 	cmpeqi	r5,r3,1
   29fd0:	28001a1e 	bne	r5,zero,2a03c <_raise_r+0xa0>
   29fd4:	197fffd8 	cmpnei	r5,r3,-1
   29fd8:	28001126 	beq	r5,zero,2a020 <_raise_r+0x84>
   29fdc:	10000015 	stw	zero,0(r2)
   29fe0:	8009883a 	mov	r4,r16
   29fe4:	183ee83a 	callr	r3
   29fe8:	0005883a 	mov	r2,zero
   29fec:	dfc00217 	ldw	ra,8(sp)
   29ff0:	dc000117 	ldw	r16,4(sp)
   29ff4:	dec00304 	addi	sp,sp,12
   29ff8:	f800283a 	ret
   29ffc:	d9000015 	stw	r4,0(sp)
   2a000:	002a1cc0 	call	2a1cc <_getpid_r>
   2a004:	d9000017 	ldw	r4,0(sp)
   2a008:	800d883a 	mov	r6,r16
   2a00c:	100b883a 	mov	r5,r2
   2a010:	dfc00217 	ldw	ra,8(sp)
   2a014:	dc000117 	ldw	r16,4(sp)
   2a018:	dec00304 	addi	sp,sp,12
   2a01c:	002a16c1 	jmpi	2a16c <_kill_r>
   2a020:	00800584 	movi	r2,22
   2a024:	20800015 	stw	r2,0(r4)
   2a028:	00800044 	movi	r2,1
   2a02c:	dfc00217 	ldw	ra,8(sp)
   2a030:	dc000117 	ldw	r16,4(sp)
   2a034:	dec00304 	addi	sp,sp,12
   2a038:	f800283a 	ret
   2a03c:	0005883a 	mov	r2,zero
   2a040:	dfc00217 	ldw	ra,8(sp)
   2a044:	dc000117 	ldw	r16,4(sp)
   2a048:	dec00304 	addi	sp,sp,12
   2a04c:	f800283a 	ret
   2a050:	00800584 	movi	r2,22
   2a054:	20800015 	stw	r2,0(r4)
   2a058:	00bfffc4 	movi	r2,-1
   2a05c:	f800283a 	ret

0002a060 <__sigtramp_r>:
   2a060:	28800830 	cmpltui	r2,r5,32
   2a064:	10002a26 	beq	r2,zero,2a110 <__sigtramp_r+0xb0>
   2a068:	2080b717 	ldw	r2,732(r4)
   2a06c:	defffd04 	addi	sp,sp,-12
   2a070:	dc400115 	stw	r17,4(sp)
   2a074:	dfc00215 	stw	ra,8(sp)
   2a078:	2023883a 	mov	r17,r4
   2a07c:	10001526 	beq	r2,zero,2a0d4 <__sigtramp_r+0x74>
   2a080:	280690ba 	slli	r3,r5,2
   2a084:	10c5883a 	add	r2,r2,r3
   2a088:	10c00017 	ldw	r3,0(r2)
   2a08c:	18000c26 	beq	r3,zero,2a0c0 <__sigtramp_r+0x60>
   2a090:	193fffe0 	cmpeqi	r4,r3,-1
   2a094:	20001a1e 	bne	r4,zero,2a100 <__sigtramp_r+0xa0>
   2a098:	19000060 	cmpeqi	r4,r3,1
   2a09c:	2000131e 	bne	r4,zero,2a0ec <__sigtramp_r+0x8c>
   2a0a0:	10000015 	stw	zero,0(r2)
   2a0a4:	2809883a 	mov	r4,r5
   2a0a8:	183ee83a 	callr	r3
   2a0ac:	0005883a 	mov	r2,zero
   2a0b0:	dfc00217 	ldw	ra,8(sp)
   2a0b4:	dc400117 	ldw	r17,4(sp)
   2a0b8:	dec00304 	addi	sp,sp,12
   2a0bc:	f800283a 	ret
   2a0c0:	00800044 	movi	r2,1
   2a0c4:	dfc00217 	ldw	ra,8(sp)
   2a0c8:	dc400117 	ldw	r17,4(sp)
   2a0cc:	dec00304 	addi	sp,sp,12
   2a0d0:	f800283a 	ret
   2a0d4:	d9400015 	stw	r5,0(sp)
   2a0d8:	0029eb80 	call	29eb8 <_init_signal_r.part.0>
   2a0dc:	10000a1e 	bne	r2,zero,2a108 <__sigtramp_r+0xa8>
   2a0e0:	8880b717 	ldw	r2,732(r17)
   2a0e4:	d9400017 	ldw	r5,0(sp)
   2a0e8:	003fe506 	br	2a080 <__sigtramp_r+0x20>
   2a0ec:	008000c4 	movi	r2,3
   2a0f0:	dfc00217 	ldw	ra,8(sp)
   2a0f4:	dc400117 	ldw	r17,4(sp)
   2a0f8:	dec00304 	addi	sp,sp,12
   2a0fc:	f800283a 	ret
   2a100:	00800084 	movi	r2,2
   2a104:	003fea06 	br	2a0b0 <__sigtramp_r+0x50>
   2a108:	00bfffc4 	movi	r2,-1
   2a10c:	003fe806 	br	2a0b0 <__sigtramp_r+0x50>
   2a110:	00bfffc4 	movi	r2,-1
   2a114:	f800283a 	ret

0002a118 <raise>:
   2a118:	008000f4 	movhi	r2,3
   2a11c:	200b883a 	mov	r5,r4
   2a120:	11091917 	ldw	r4,9316(r2)
   2a124:	0029f9c1 	jmpi	29f9c <_raise_r>

0002a128 <signal>:
   2a128:	00c000f4 	movhi	r3,3
   2a12c:	2005883a 	mov	r2,r4
   2a130:	19091917 	ldw	r4,9316(r3)
   2a134:	280d883a 	mov	r6,r5
   2a138:	100b883a 	mov	r5,r2
   2a13c:	0029f181 	jmpi	29f18 <_signal_r>

0002a140 <_init_signal>:
   2a140:	008000f4 	movhi	r2,3
   2a144:	11091917 	ldw	r4,9316(r2)
   2a148:	2080b717 	ldw	r2,732(r4)
   2a14c:	10000226 	beq	r2,zero,2a158 <_init_signal+0x18>
   2a150:	0005883a 	mov	r2,zero
   2a154:	f800283a 	ret
   2a158:	0029eb81 	jmpi	29eb8 <_init_signal_r.part.0>

0002a15c <__sigtramp>:
   2a15c:	008000f4 	movhi	r2,3
   2a160:	200b883a 	mov	r5,r4
   2a164:	11091917 	ldw	r4,9316(r2)
   2a168:	002a0601 	jmpi	2a060 <__sigtramp_r>

0002a16c <_kill_r>:
   2a16c:	2807883a 	mov	r3,r5
   2a170:	defffe04 	addi	sp,sp,-8
   2a174:	dc000015 	stw	r16,0(sp)
   2a178:	008000f4 	movhi	r2,3
   2a17c:	300b883a 	mov	r5,r6
   2a180:	2021883a 	mov	r16,r4
   2a184:	1809883a 	mov	r4,r3
   2a188:	dfc00115 	stw	ra,4(sp)
   2a18c:	10103715 	stw	zero,16604(r2)
   2a190:	002dba40 	call	2dba4 <kill>
   2a194:	10ffffd8 	cmpnei	r3,r2,-1
   2a198:	18000426 	beq	r3,zero,2a1ac <_kill_r+0x40>
   2a19c:	dfc00117 	ldw	ra,4(sp)
   2a1a0:	dc000017 	ldw	r16,0(sp)
   2a1a4:	dec00204 	addi	sp,sp,8
   2a1a8:	f800283a 	ret
   2a1ac:	00c000f4 	movhi	r3,3
   2a1b0:	18d03717 	ldw	r3,16604(r3)
   2a1b4:	183ff926 	beq	r3,zero,2a19c <_kill_r+0x30>
   2a1b8:	80c00015 	stw	r3,0(r16)
   2a1bc:	dfc00117 	ldw	ra,4(sp)
   2a1c0:	dc000017 	ldw	r16,0(sp)
   2a1c4:	dec00204 	addi	sp,sp,8
   2a1c8:	f800283a 	ret

0002a1cc <_getpid_r>:
   2a1cc:	002da5c1 	jmpi	2da5c <getpid>

0002a1d0 <__udivdi3>:
   2a1d0:	defff504 	addi	sp,sp,-44
   2a1d4:	dd000515 	stw	r20,20(sp)
   2a1d8:	dc800315 	stw	r18,12(sp)
   2a1dc:	dfc00a15 	stw	ra,40(sp)
   2a1e0:	df000915 	stw	fp,36(sp)
   2a1e4:	ddc00815 	stw	r23,32(sp)
   2a1e8:	dd800715 	stw	r22,28(sp)
   2a1ec:	dd400615 	stw	r21,24(sp)
   2a1f0:	dcc00415 	stw	r19,16(sp)
   2a1f4:	dc400215 	stw	r17,8(sp)
   2a1f8:	dc000115 	stw	r16,4(sp)
   2a1fc:	2029883a 	mov	r20,r4
   2a200:	2825883a 	mov	r18,r5
   2a204:	3800461e 	bne	r7,zero,2a320 <__udivdi3+0x150>
   2a208:	3823883a 	mov	r17,r7
   2a20c:	3021883a 	mov	r16,r6
   2a210:	2027883a 	mov	r19,r4
   2a214:	2980622e 	bgeu	r5,r6,2a3a0 <__udivdi3+0x1d0>
   2a218:	00bfffd4 	movui	r2,65535
   2a21c:	282b883a 	mov	r21,r5
   2a220:	1180aa2e 	bgeu	r2,r6,2a4cc <__udivdi3+0x2fc>
   2a224:	00804034 	movhi	r2,256
   2a228:	30815936 	bltu	r6,r2,2a790 <__udivdi3+0x5c0>
   2a22c:	3006d63a 	srli	r3,r6,24
   2a230:	04400604 	movi	r17,24
   2a234:	008000f4 	movhi	r2,3
   2a238:	1885883a 	add	r2,r3,r2
   2a23c:	1101cb03 	ldbu	r4,1836(r2)
   2a240:	00800804 	movi	r2,32
   2a244:	2463883a 	add	r17,r4,r17
   2a248:	1449c83a 	sub	r4,r2,r17
   2a24c:	14400526 	beq	r2,r17,2a264 <__udivdi3+0x94>
   2a250:	9106983a 	sll	r3,r18,r4
   2a254:	a462d83a 	srl	r17,r20,r17
   2a258:	3120983a 	sll	r16,r6,r4
   2a25c:	a126983a 	sll	r19,r20,r4
   2a260:	88eab03a 	or	r21,r17,r3
   2a264:	802cd43a 	srli	r22,r16,16
   2a268:	a809883a 	mov	r4,r21
   2a26c:	853fffcc 	andi	r20,r16,65535
   2a270:	b00b883a 	mov	r5,r22
   2a274:	002af080 	call	2af08 <__umodsi3>
   2a278:	a809883a 	mov	r4,r21
   2a27c:	b00b883a 	mov	r5,r22
   2a280:	1025883a 	mov	r18,r2
   2a284:	002aea40 	call	2aea4 <__udivsi3>
   2a288:	a009883a 	mov	r4,r20
   2a28c:	100b883a 	mov	r5,r2
   2a290:	102b883a 	mov	r21,r2
   2a294:	002af640 	call	2af64 <__mulsi3>
   2a298:	9024943a 	slli	r18,r18,16
   2a29c:	9808d43a 	srli	r4,r19,16
   2a2a0:	9108b03a 	or	r4,r18,r4
   2a2a4:	2080052e 	bgeu	r4,r2,2a2bc <__udivdi3+0xec>
   2a2a8:	2409883a 	add	r4,r4,r16
   2a2ac:	a8ffffc4 	addi	r3,r21,-1
   2a2b0:	24000136 	bltu	r4,r16,2a2b8 <__udivdi3+0xe8>
   2a2b4:	20814736 	bltu	r4,r2,2a7d4 <__udivdi3+0x604>
   2a2b8:	182b883a 	mov	r21,r3
   2a2bc:	20a3c83a 	sub	r17,r4,r2
   2a2c0:	8809883a 	mov	r4,r17
   2a2c4:	b00b883a 	mov	r5,r22
   2a2c8:	002af080 	call	2af08 <__umodsi3>
   2a2cc:	8809883a 	mov	r4,r17
   2a2d0:	1023883a 	mov	r17,r2
   2a2d4:	b00b883a 	mov	r5,r22
   2a2d8:	8822943a 	slli	r17,r17,16
   2a2dc:	002aea40 	call	2aea4 <__udivsi3>
   2a2e0:	100b883a 	mov	r5,r2
   2a2e4:	a009883a 	mov	r4,r20
   2a2e8:	9cffffcc 	andi	r19,r19,65535
   2a2ec:	1025883a 	mov	r18,r2
   2a2f0:	8ce6b03a 	or	r19,r17,r19
   2a2f4:	002af640 	call	2af64 <__mulsi3>
   2a2f8:	9880052e 	bgeu	r19,r2,2a310 <__udivdi3+0x140>
   2a2fc:	84e7883a 	add	r19,r16,r19
   2a300:	90ffffc4 	addi	r3,r18,-1
   2a304:	9c000136 	bltu	r19,r16,2a30c <__udivdi3+0x13c>
   2a308:	98813036 	bltu	r19,r2,2a7cc <__udivdi3+0x5fc>
   2a30c:	1825883a 	mov	r18,r3
   2a310:	a80c943a 	slli	r6,r21,16
   2a314:	0007883a 	mov	r3,zero
   2a318:	3484b03a 	or	r2,r6,r18
   2a31c:	00000306 	br	2a32c <__udivdi3+0x15c>
   2a320:	29c00e2e 	bgeu	r5,r7,2a35c <__udivdi3+0x18c>
   2a324:	0007883a 	mov	r3,zero
   2a328:	0005883a 	mov	r2,zero
   2a32c:	dfc00a17 	ldw	ra,40(sp)
   2a330:	df000917 	ldw	fp,36(sp)
   2a334:	ddc00817 	ldw	r23,32(sp)
   2a338:	dd800717 	ldw	r22,28(sp)
   2a33c:	dd400617 	ldw	r21,24(sp)
   2a340:	dd000517 	ldw	r20,20(sp)
   2a344:	dcc00417 	ldw	r19,16(sp)
   2a348:	dc800317 	ldw	r18,12(sp)
   2a34c:	dc400217 	ldw	r17,8(sp)
   2a350:	dc000117 	ldw	r16,4(sp)
   2a354:	dec00b04 	addi	sp,sp,44
   2a358:	f800283a 	ret
   2a35c:	00bfffd4 	movui	r2,65535
   2a360:	11c05f2e 	bgeu	r2,r7,2a4e0 <__udivdi3+0x310>
   2a364:	00804034 	movhi	r2,256
   2a368:	3880fb36 	bltu	r7,r2,2a758 <__udivdi3+0x588>
   2a36c:	3806d63a 	srli	r3,r7,24
   2a370:	01000604 	movi	r4,24
   2a374:	008000f4 	movhi	r2,3
   2a378:	1885883a 	add	r2,r3,r2
   2a37c:	10c1cb03 	ldbu	r3,1836(r2)
   2a380:	00800804 	movi	r2,32
   2a384:	1907883a 	add	r3,r3,r4
   2a388:	10e3c83a 	sub	r17,r2,r3
   2a38c:	10c0901e 	bne	r2,r3,2a5d0 <__udivdi3+0x400>
   2a390:	3c80f636 	bltu	r7,r18,2a76c <__udivdi3+0x59c>
   2a394:	a185403a 	cmpgeu	r2,r20,r6
   2a398:	0007883a 	mov	r3,zero
   2a39c:	003fe306 	br	2a32c <__udivdi3+0x15c>
   2a3a0:	3000041e 	bne	r6,zero,2a3b4 <__udivdi3+0x1e4>
   2a3a4:	000b883a 	mov	r5,zero
   2a3a8:	01000044 	movi	r4,1
   2a3ac:	002aea40 	call	2aea4 <__udivsi3>
   2a3b0:	1021883a 	mov	r16,r2
   2a3b4:	00bfffd4 	movui	r2,65535
   2a3b8:	14003f2e 	bgeu	r2,r16,2a4b8 <__udivdi3+0x2e8>
   2a3bc:	00804034 	movhi	r2,256
   2a3c0:	8080f036 	bltu	r16,r2,2a784 <__udivdi3+0x5b4>
   2a3c4:	8006d63a 	srli	r3,r16,24
   2a3c8:	04400604 	movi	r17,24
   2a3cc:	008000f4 	movhi	r2,3
   2a3d0:	1885883a 	add	r2,r3,r2
   2a3d4:	1081cb03 	ldbu	r2,1836(r2)
   2a3d8:	00c00804 	movi	r3,32
   2a3dc:	1463883a 	add	r17,r2,r17
   2a3e0:	1c45c83a 	sub	r2,r3,r17
   2a3e4:	1c40431e 	bne	r3,r17,2a4f4 <__udivdi3+0x324>
   2a3e8:	802cd43a 	srli	r22,r16,16
   2a3ec:	9423c83a 	sub	r17,r18,r16
   2a3f0:	853fffcc 	andi	r20,r16,65535
   2a3f4:	00c00044 	movi	r3,1
   2a3f8:	b00b883a 	mov	r5,r22
   2a3fc:	8809883a 	mov	r4,r17
   2a400:	d8c00015 	stw	r3,0(sp)
   2a404:	002af080 	call	2af08 <__umodsi3>
   2a408:	b00b883a 	mov	r5,r22
   2a40c:	8809883a 	mov	r4,r17
   2a410:	1025883a 	mov	r18,r2
   2a414:	002aea40 	call	2aea4 <__udivsi3>
   2a418:	1009883a 	mov	r4,r2
   2a41c:	a00b883a 	mov	r5,r20
   2a420:	102b883a 	mov	r21,r2
   2a424:	002af640 	call	2af64 <__mulsi3>
   2a428:	9024943a 	slli	r18,r18,16
   2a42c:	9808d43a 	srli	r4,r19,16
   2a430:	d8c00017 	ldw	r3,0(sp)
   2a434:	9108b03a 	or	r4,r18,r4
   2a438:	2080052e 	bgeu	r4,r2,2a450 <__udivdi3+0x280>
   2a43c:	2409883a 	add	r4,r4,r16
   2a440:	a97fffc4 	addi	r5,r21,-1
   2a444:	24000136 	bltu	r4,r16,2a44c <__udivdi3+0x27c>
   2a448:	2080e536 	bltu	r4,r2,2a7e0 <__udivdi3+0x610>
   2a44c:	282b883a 	mov	r21,r5
   2a450:	20a3c83a 	sub	r17,r4,r2
   2a454:	8809883a 	mov	r4,r17
   2a458:	b00b883a 	mov	r5,r22
   2a45c:	d8c00015 	stw	r3,0(sp)
   2a460:	002af080 	call	2af08 <__umodsi3>
   2a464:	8809883a 	mov	r4,r17
   2a468:	1023883a 	mov	r17,r2
   2a46c:	b00b883a 	mov	r5,r22
   2a470:	8822943a 	slli	r17,r17,16
   2a474:	002aea40 	call	2aea4 <__udivsi3>
   2a478:	a00b883a 	mov	r5,r20
   2a47c:	1009883a 	mov	r4,r2
   2a480:	9cffffcc 	andi	r19,r19,65535
   2a484:	1025883a 	mov	r18,r2
   2a488:	8ce6b03a 	or	r19,r17,r19
   2a48c:	002af640 	call	2af64 <__mulsi3>
   2a490:	d8c00017 	ldw	r3,0(sp)
   2a494:	9880052e 	bgeu	r19,r2,2a4ac <__udivdi3+0x2dc>
   2a498:	84e7883a 	add	r19,r16,r19
   2a49c:	913fffc4 	addi	r4,r18,-1
   2a4a0:	9c000136 	bltu	r19,r16,2a4a8 <__udivdi3+0x2d8>
   2a4a4:	9880c736 	bltu	r19,r2,2a7c4 <__udivdi3+0x5f4>
   2a4a8:	2025883a 	mov	r18,r4
   2a4ac:	a80c943a 	slli	r6,r21,16
   2a4b0:	3484b03a 	or	r2,r6,r18
   2a4b4:	003f9d06 	br	2a32c <__udivdi3+0x15c>
   2a4b8:	80804030 	cmpltui	r2,r16,256
   2a4bc:	1000b71e 	bne	r2,zero,2a79c <__udivdi3+0x5cc>
   2a4c0:	8006d23a 	srli	r3,r16,8
   2a4c4:	04400204 	movi	r17,8
   2a4c8:	003fc006 	br	2a3cc <__udivdi3+0x1fc>
   2a4cc:	30804030 	cmpltui	r2,r6,256
   2a4d0:	1000a41e 	bne	r2,zero,2a764 <__udivdi3+0x594>
   2a4d4:	3006d23a 	srli	r3,r6,8
   2a4d8:	04400204 	movi	r17,8
   2a4dc:	003f5506 	br	2a234 <__udivdi3+0x64>
   2a4e0:	38804030 	cmpltui	r2,r7,256
   2a4e4:	1000a41e 	bne	r2,zero,2a778 <__udivdi3+0x5a8>
   2a4e8:	3806d23a 	srli	r3,r7,8
   2a4ec:	01000204 	movi	r4,8
   2a4f0:	003fa006 	br	2a374 <__udivdi3+0x1a4>
   2a4f4:	80a0983a 	sll	r16,r16,r2
   2a4f8:	946ed83a 	srl	r23,r18,r17
   2a4fc:	9086983a 	sll	r3,r18,r2
   2a500:	802cd43a 	srli	r22,r16,16
   2a504:	a462d83a 	srl	r17,r20,r17
   2a508:	b809883a 	mov	r4,r23
   2a50c:	b00b883a 	mov	r5,r22
   2a510:	88eab03a 	or	r21,r17,r3
   2a514:	a0a6983a 	sll	r19,r20,r2
   2a518:	002af080 	call	2af08 <__umodsi3>
   2a51c:	b809883a 	mov	r4,r23
   2a520:	b00b883a 	mov	r5,r22
   2a524:	1025883a 	mov	r18,r2
   2a528:	853fffcc 	andi	r20,r16,65535
   2a52c:	002aea40 	call	2aea4 <__udivsi3>
   2a530:	a009883a 	mov	r4,r20
   2a534:	100b883a 	mov	r5,r2
   2a538:	102f883a 	mov	r23,r2
   2a53c:	002af640 	call	2af64 <__mulsi3>
   2a540:	9024943a 	slli	r18,r18,16
   2a544:	a808d43a 	srli	r4,r21,16
   2a548:	9108b03a 	or	r4,r18,r4
   2a54c:	2080062e 	bgeu	r4,r2,2a568 <__udivdi3+0x398>
   2a550:	2409883a 	add	r4,r4,r16
   2a554:	b8ffffc4 	addi	r3,r23,-1
   2a558:	24009836 	bltu	r4,r16,2a7bc <__udivdi3+0x5ec>
   2a55c:	2080972e 	bgeu	r4,r2,2a7bc <__udivdi3+0x5ec>
   2a560:	bdffff84 	addi	r23,r23,-2
   2a564:	2409883a 	add	r4,r4,r16
   2a568:	20a3c83a 	sub	r17,r4,r2
   2a56c:	8809883a 	mov	r4,r17
   2a570:	b00b883a 	mov	r5,r22
   2a574:	002af080 	call	2af08 <__umodsi3>
   2a578:	1025883a 	mov	r18,r2
   2a57c:	8809883a 	mov	r4,r17
   2a580:	b00b883a 	mov	r5,r22
   2a584:	9024943a 	slli	r18,r18,16
   2a588:	002aea40 	call	2aea4 <__udivsi3>
   2a58c:	100b883a 	mov	r5,r2
   2a590:	a009883a 	mov	r4,r20
   2a594:	ac7fffcc 	andi	r17,r21,65535
   2a598:	1039883a 	mov	fp,r2
   2a59c:	9462b03a 	or	r17,r18,r17
   2a5a0:	002af640 	call	2af64 <__mulsi3>
   2a5a4:	8880062e 	bgeu	r17,r2,2a5c0 <__udivdi3+0x3f0>
   2a5a8:	8c23883a 	add	r17,r17,r16
   2a5ac:	e0ffffc4 	addi	r3,fp,-1
   2a5b0:	8c007e36 	bltu	r17,r16,2a7ac <__udivdi3+0x5dc>
   2a5b4:	88807d2e 	bgeu	r17,r2,2a7ac <__udivdi3+0x5dc>
   2a5b8:	e73fff84 	addi	fp,fp,-2
   2a5bc:	8c23883a 	add	r17,r17,r16
   2a5c0:	b806943a 	slli	r3,r23,16
   2a5c4:	88a3c83a 	sub	r17,r17,r2
   2a5c8:	1f06b03a 	or	r3,r3,fp
   2a5cc:	003f8a06 	br	2a3f8 <__udivdi3+0x228>
   2a5d0:	30e6d83a 	srl	r19,r6,r3
   2a5d4:	3c4e983a 	sll	r7,r7,r17
   2a5d8:	90e0d83a 	srl	r16,r18,r3
   2a5dc:	a0c4d83a 	srl	r2,r20,r3
   2a5e0:	99e6b03a 	or	r19,r19,r7
   2a5e4:	9446983a 	sll	r3,r18,r17
   2a5e8:	9838d43a 	srli	fp,r19,16
   2a5ec:	8009883a 	mov	r4,r16
   2a5f0:	10eab03a 	or	r21,r2,r3
   2a5f4:	e00b883a 	mov	r5,fp
   2a5f8:	346c983a 	sll	r22,r6,r17
   2a5fc:	dd400015 	stw	r21,0(sp)
   2a600:	002af080 	call	2af08 <__umodsi3>
   2a604:	8009883a 	mov	r4,r16
   2a608:	e00b883a 	mov	r5,fp
   2a60c:	102f883a 	mov	r23,r2
   2a610:	9cbfffcc 	andi	r18,r19,65535
   2a614:	002aea40 	call	2aea4 <__udivsi3>
   2a618:	9009883a 	mov	r4,r18
   2a61c:	100b883a 	mov	r5,r2
   2a620:	1021883a 	mov	r16,r2
   2a624:	002af640 	call	2af64 <__mulsi3>
   2a628:	b82e943a 	slli	r23,r23,16
   2a62c:	a808d43a 	srli	r4,r21,16
   2a630:	b908b03a 	or	r4,r23,r4
   2a634:	2080062e 	bgeu	r4,r2,2a650 <__udivdi3+0x480>
   2a638:	24c9883a 	add	r4,r4,r19
   2a63c:	817fffc4 	addi	r5,r16,-1
   2a640:	24c05c36 	bltu	r4,r19,2a7b4 <__udivdi3+0x5e4>
   2a644:	20805b2e 	bgeu	r4,r2,2a7b4 <__udivdi3+0x5e4>
   2a648:	843fff84 	addi	r16,r16,-2
   2a64c:	24c9883a 	add	r4,r4,r19
   2a650:	20abc83a 	sub	r21,r4,r2
   2a654:	a809883a 	mov	r4,r21
   2a658:	e00b883a 	mov	r5,fp
   2a65c:	002af080 	call	2af08 <__umodsi3>
   2a660:	a809883a 	mov	r4,r21
   2a664:	e00b883a 	mov	r5,fp
   2a668:	102b883a 	mov	r21,r2
   2a66c:	002aea40 	call	2aea4 <__udivsi3>
   2a670:	9009883a 	mov	r4,r18
   2a674:	100b883a 	mov	r5,r2
   2a678:	102f883a 	mov	r23,r2
   2a67c:	002af640 	call	2af64 <__mulsi3>
   2a680:	d8c00017 	ldw	r3,0(sp)
   2a684:	a82a943a 	slli	r21,r21,16
   2a688:	1cbfffcc 	andi	r18,r3,65535
   2a68c:	aca4b03a 	or	r18,r21,r18
   2a690:	9080062e 	bgeu	r18,r2,2a6ac <__udivdi3+0x4dc>
   2a694:	94e5883a 	add	r18,r18,r19
   2a698:	b8ffffc4 	addi	r3,r23,-1
   2a69c:	94c04136 	bltu	r18,r19,2a7a4 <__udivdi3+0x5d4>
   2a6a0:	9080402e 	bgeu	r18,r2,2a7a4 <__udivdi3+0x5d4>
   2a6a4:	bdffff84 	addi	r23,r23,-2
   2a6a8:	94e5883a 	add	r18,r18,r19
   2a6ac:	8020943a 	slli	r16,r16,16
   2a6b0:	bd7fffcc 	andi	r21,r23,65535
   2a6b4:	b73fffcc 	andi	fp,r22,65535
   2a6b8:	85e0b03a 	or	r16,r16,r23
   2a6bc:	8026d43a 	srli	r19,r16,16
   2a6c0:	a809883a 	mov	r4,r21
   2a6c4:	e00b883a 	mov	r5,fp
   2a6c8:	b02cd43a 	srli	r22,r22,16
   2a6cc:	90a5c83a 	sub	r18,r18,r2
   2a6d0:	002af640 	call	2af64 <__mulsi3>
   2a6d4:	9809883a 	mov	r4,r19
   2a6d8:	e00b883a 	mov	r5,fp
   2a6dc:	102f883a 	mov	r23,r2
   2a6e0:	002af640 	call	2af64 <__mulsi3>
   2a6e4:	9809883a 	mov	r4,r19
   2a6e8:	b00b883a 	mov	r5,r22
   2a6ec:	1027883a 	mov	r19,r2
   2a6f0:	002af640 	call	2af64 <__mulsi3>
   2a6f4:	a809883a 	mov	r4,r21
   2a6f8:	b00b883a 	mov	r5,r22
   2a6fc:	102b883a 	mov	r21,r2
   2a700:	002af640 	call	2af64 <__mulsi3>
   2a704:	b806d43a 	srli	r3,r23,16
   2a708:	14c5883a 	add	r2,r2,r19
   2a70c:	1887883a 	add	r3,r3,r2
   2a710:	1cc0022e 	bgeu	r3,r19,2a71c <__udivdi3+0x54c>
   2a714:	00800074 	movhi	r2,1
   2a718:	a8ab883a 	add	r21,r21,r2
   2a71c:	1804d43a 	srli	r2,r3,16
   2a720:	156b883a 	add	r21,r2,r21
   2a724:	95400936 	bltu	r18,r21,2a74c <__udivdi3+0x57c>
   2a728:	95400326 	beq	r18,r21,2a738 <__udivdi3+0x568>
   2a72c:	8005883a 	mov	r2,r16
   2a730:	0007883a 	mov	r3,zero
   2a734:	003efd06 	br	2a32c <__udivdi3+0x15c>
   2a738:	1806943a 	slli	r3,r3,16
   2a73c:	a44c983a 	sll	r6,r20,r17
   2a740:	bdffffcc 	andi	r23,r23,65535
   2a744:	1dc7883a 	add	r3,r3,r23
   2a748:	30fff82e 	bgeu	r6,r3,2a72c <__udivdi3+0x55c>
   2a74c:	80bfffc4 	addi	r2,r16,-1
   2a750:	0007883a 	mov	r3,zero
   2a754:	003ef506 	br	2a32c <__udivdi3+0x15c>
   2a758:	3806d43a 	srli	r3,r7,16
   2a75c:	01000404 	movi	r4,16
   2a760:	003f0406 	br	2a374 <__udivdi3+0x1a4>
   2a764:	3007883a 	mov	r3,r6
   2a768:	003eb206 	br	2a234 <__udivdi3+0x64>
   2a76c:	0007883a 	mov	r3,zero
   2a770:	00800044 	movi	r2,1
   2a774:	003eed06 	br	2a32c <__udivdi3+0x15c>
   2a778:	3807883a 	mov	r3,r7
   2a77c:	0009883a 	mov	r4,zero
   2a780:	003efc06 	br	2a374 <__udivdi3+0x1a4>
   2a784:	8006d43a 	srli	r3,r16,16
   2a788:	04400404 	movi	r17,16
   2a78c:	003f0f06 	br	2a3cc <__udivdi3+0x1fc>
   2a790:	3006d43a 	srli	r3,r6,16
   2a794:	04400404 	movi	r17,16
   2a798:	003ea606 	br	2a234 <__udivdi3+0x64>
   2a79c:	8007883a 	mov	r3,r16
   2a7a0:	003f0a06 	br	2a3cc <__udivdi3+0x1fc>
   2a7a4:	182f883a 	mov	r23,r3
   2a7a8:	003fc006 	br	2a6ac <__udivdi3+0x4dc>
   2a7ac:	1839883a 	mov	fp,r3
   2a7b0:	003f8306 	br	2a5c0 <__udivdi3+0x3f0>
   2a7b4:	2821883a 	mov	r16,r5
   2a7b8:	003fa506 	br	2a650 <__udivdi3+0x480>
   2a7bc:	182f883a 	mov	r23,r3
   2a7c0:	003f6906 	br	2a568 <__udivdi3+0x398>
   2a7c4:	94bfff84 	addi	r18,r18,-2
   2a7c8:	003f3806 	br	2a4ac <__udivdi3+0x2dc>
   2a7cc:	94bfff84 	addi	r18,r18,-2
   2a7d0:	003ecf06 	br	2a310 <__udivdi3+0x140>
   2a7d4:	ad7fff84 	addi	r21,r21,-2
   2a7d8:	2409883a 	add	r4,r4,r16
   2a7dc:	003eb706 	br	2a2bc <__udivdi3+0xec>
   2a7e0:	ad7fff84 	addi	r21,r21,-2
   2a7e4:	2409883a 	add	r4,r4,r16
   2a7e8:	003f1906 	br	2a450 <__udivdi3+0x280>

0002a7ec <__umoddi3>:
   2a7ec:	defff304 	addi	sp,sp,-52
   2a7f0:	dc400415 	stw	r17,16(sp)
   2a7f4:	dc000315 	stw	r16,12(sp)
   2a7f8:	dfc00c15 	stw	ra,48(sp)
   2a7fc:	df000b15 	stw	fp,44(sp)
   2a800:	ddc00a15 	stw	r23,40(sp)
   2a804:	dd800915 	stw	r22,36(sp)
   2a808:	dd400815 	stw	r21,32(sp)
   2a80c:	dd000715 	stw	r20,28(sp)
   2a810:	dcc00615 	stw	r19,24(sp)
   2a814:	dc800515 	stw	r18,20(sp)
   2a818:	2823883a 	mov	r17,r5
   2a81c:	2021883a 	mov	r16,r4
   2a820:	38003b1e 	bne	r7,zero,2a910 <__umoddi3+0x124>
   2a824:	3825883a 	mov	r18,r7
   2a828:	3029883a 	mov	r20,r6
   2a82c:	2027883a 	mov	r19,r4
   2a830:	29805b2e 	bgeu	r5,r6,2a9a0 <__umoddi3+0x1b4>
   2a834:	00bfffd4 	movui	r2,65535
   2a838:	282d883a 	mov	r22,r5
   2a83c:	11809a2e 	bgeu	r2,r6,2aaa8 <__umoddi3+0x2bc>
   2a840:	00804034 	movhi	r2,256
   2a844:	30814436 	bltu	r6,r2,2ad58 <__umoddi3+0x56c>
   2a848:	3006d63a 	srli	r3,r6,24
   2a84c:	04800604 	movi	r18,24
   2a850:	008000f4 	movhi	r2,3
   2a854:	1885883a 	add	r2,r3,r2
   2a858:	1101cb03 	ldbu	r4,1836(r2)
   2a85c:	00800804 	movi	r2,32
   2a860:	2489883a 	add	r4,r4,r18
   2a864:	1125c83a 	sub	r18,r2,r4
   2a868:	11000526 	beq	r2,r4,2a880 <__umoddi3+0x94>
   2a86c:	8ca2983a 	sll	r17,r17,r18
   2a870:	8108d83a 	srl	r4,r16,r4
   2a874:	34a8983a 	sll	r20,r6,r18
   2a878:	84a6983a 	sll	r19,r16,r18
   2a87c:	246cb03a 	or	r22,r4,r17
   2a880:	a02ed43a 	srli	r23,r20,16
   2a884:	b009883a 	mov	r4,r22
   2a888:	a57fffcc 	andi	r21,r20,65535
   2a88c:	b80b883a 	mov	r5,r23
   2a890:	002af080 	call	2af08 <__umodsi3>
   2a894:	b80b883a 	mov	r5,r23
   2a898:	b009883a 	mov	r4,r22
   2a89c:	1023883a 	mov	r17,r2
   2a8a0:	002aea40 	call	2aea4 <__udivsi3>
   2a8a4:	a809883a 	mov	r4,r21
   2a8a8:	100b883a 	mov	r5,r2
   2a8ac:	002af640 	call	2af64 <__mulsi3>
   2a8b0:	8822943a 	slli	r17,r17,16
   2a8b4:	9808d43a 	srli	r4,r19,16
   2a8b8:	8908b03a 	or	r4,r17,r4
   2a8bc:	2080042e 	bgeu	r4,r2,2a8d0 <__umoddi3+0xe4>
   2a8c0:	2509883a 	add	r4,r4,r20
   2a8c4:	25000236 	bltu	r4,r20,2a8d0 <__umoddi3+0xe4>
   2a8c8:	2080012e 	bgeu	r4,r2,2a8d0 <__umoddi3+0xe4>
   2a8cc:	2509883a 	add	r4,r4,r20
   2a8d0:	20a1c83a 	sub	r16,r4,r2
   2a8d4:	b80b883a 	mov	r5,r23
   2a8d8:	8009883a 	mov	r4,r16
   2a8dc:	002af080 	call	2af08 <__umodsi3>
   2a8e0:	b80b883a 	mov	r5,r23
   2a8e4:	8009883a 	mov	r4,r16
   2a8e8:	1023883a 	mov	r17,r2
   2a8ec:	002aea40 	call	2aea4 <__udivsi3>
   2a8f0:	8822943a 	slli	r17,r17,16
   2a8f4:	100b883a 	mov	r5,r2
   2a8f8:	a809883a 	mov	r4,r21
   2a8fc:	002af640 	call	2af64 <__mulsi3>
   2a900:	98ffffcc 	andi	r3,r19,65535
   2a904:	88c6b03a 	or	r3,r17,r3
   2a908:	18805e2e 	bgeu	r3,r2,2aa84 <__umoddi3+0x298>
   2a90c:	00005906 	br	2aa74 <__umoddi3+0x288>
   2a910:	2005883a 	mov	r2,r4
   2a914:	29c00d2e 	bgeu	r5,r7,2a94c <__umoddi3+0x160>
   2a918:	2807883a 	mov	r3,r5
   2a91c:	dfc00c17 	ldw	ra,48(sp)
   2a920:	df000b17 	ldw	fp,44(sp)
   2a924:	ddc00a17 	ldw	r23,40(sp)
   2a928:	dd800917 	ldw	r22,36(sp)
   2a92c:	dd400817 	ldw	r21,32(sp)
   2a930:	dd000717 	ldw	r20,28(sp)
   2a934:	dcc00617 	ldw	r19,24(sp)
   2a938:	dc800517 	ldw	r18,20(sp)
   2a93c:	dc400417 	ldw	r17,16(sp)
   2a940:	dc000317 	ldw	r16,12(sp)
   2a944:	dec00d04 	addi	sp,sp,52
   2a948:	f800283a 	ret
   2a94c:	013fffd4 	movui	r4,65535
   2a950:	2807883a 	mov	r3,r5
   2a954:	21c0592e 	bgeu	r4,r7,2aabc <__umoddi3+0x2d0>
   2a958:	01004034 	movhi	r4,256
   2a95c:	39010336 	bltu	r7,r4,2ad6c <__umoddi3+0x580>
   2a960:	3808d63a 	srli	r4,r7,24
   2a964:	02000604 	movi	r8,24
   2a968:	014000f4 	movhi	r5,3
   2a96c:	214b883a 	add	r5,r4,r5
   2a970:	2d01cb03 	ldbu	r20,1836(r5)
   2a974:	01000804 	movi	r4,32
   2a978:	a229883a 	add	r20,r20,r8
   2a97c:	252bc83a 	sub	r21,r4,r20
   2a980:	2500531e 	bne	r4,r20,2aad0 <__umoddi3+0x2e4>
   2a984:	3c400136 	bltu	r7,r17,2a98c <__umoddi3+0x1a0>
   2a988:	81bfe436 	bltu	r16,r6,2a91c <__umoddi3+0x130>
   2a98c:	8185c83a 	sub	r2,r16,r6
   2a990:	89cfc83a 	sub	r7,r17,r7
   2a994:	8087803a 	cmpltu	r3,r16,r2
   2a998:	38c7c83a 	sub	r3,r7,r3
   2a99c:	003fdf06 	br	2a91c <__umoddi3+0x130>
   2a9a0:	3000041e 	bne	r6,zero,2a9b4 <__umoddi3+0x1c8>
   2a9a4:	000b883a 	mov	r5,zero
   2a9a8:	01000044 	movi	r4,1
   2a9ac:	002aea40 	call	2aea4 <__udivsi3>
   2a9b0:	1029883a 	mov	r20,r2
   2a9b4:	00bfffd4 	movui	r2,65535
   2a9b8:	1500362e 	bgeu	r2,r20,2aa94 <__umoddi3+0x2a8>
   2a9bc:	00804034 	movhi	r2,256
   2a9c0:	a080ed36 	bltu	r20,r2,2ad78 <__umoddi3+0x58c>
   2a9c4:	a006d63a 	srli	r3,r20,24
   2a9c8:	04800604 	movi	r18,24
   2a9cc:	008000f4 	movhi	r2,3
   2a9d0:	1885883a 	add	r2,r3,r2
   2a9d4:	1581cb03 	ldbu	r22,1836(r2)
   2a9d8:	00800804 	movi	r2,32
   2a9dc:	b4ad883a 	add	r22,r22,r18
   2a9e0:	15a5c83a 	sub	r18,r2,r22
   2a9e4:	1580a51e 	bne	r2,r22,2ac7c <__umoddi3+0x490>
   2a9e8:	a02ed43a 	srli	r23,r20,16
   2a9ec:	8d23c83a 	sub	r17,r17,r20
   2a9f0:	a57fffcc 	andi	r21,r20,65535
   2a9f4:	8809883a 	mov	r4,r17
   2a9f8:	b80b883a 	mov	r5,r23
   2a9fc:	002af080 	call	2af08 <__umodsi3>
   2aa00:	8809883a 	mov	r4,r17
   2aa04:	b80b883a 	mov	r5,r23
   2aa08:	1023883a 	mov	r17,r2
   2aa0c:	002aea40 	call	2aea4 <__udivsi3>
   2aa10:	1009883a 	mov	r4,r2
   2aa14:	a80b883a 	mov	r5,r21
   2aa18:	002af640 	call	2af64 <__mulsi3>
   2aa1c:	8822943a 	slli	r17,r17,16
   2aa20:	9808d43a 	srli	r4,r19,16
   2aa24:	8908b03a 	or	r4,r17,r4
   2aa28:	2080032e 	bgeu	r4,r2,2aa38 <__umoddi3+0x24c>
   2aa2c:	2509883a 	add	r4,r4,r20
   2aa30:	25000136 	bltu	r4,r20,2aa38 <__umoddi3+0x24c>
   2aa34:	2080dc36 	bltu	r4,r2,2ada8 <__umoddi3+0x5bc>
   2aa38:	20a1c83a 	sub	r16,r4,r2
   2aa3c:	b80b883a 	mov	r5,r23
   2aa40:	8009883a 	mov	r4,r16
   2aa44:	002af080 	call	2af08 <__umodsi3>
   2aa48:	b80b883a 	mov	r5,r23
   2aa4c:	8009883a 	mov	r4,r16
   2aa50:	1023883a 	mov	r17,r2
   2aa54:	8822943a 	slli	r17,r17,16
   2aa58:	002aea40 	call	2aea4 <__udivsi3>
   2aa5c:	a80b883a 	mov	r5,r21
   2aa60:	1009883a 	mov	r4,r2
   2aa64:	002af640 	call	2af64 <__mulsi3>
   2aa68:	9cffffcc 	andi	r19,r19,65535
   2aa6c:	8cc6b03a 	or	r3,r17,r19
   2aa70:	1880042e 	bgeu	r3,r2,2aa84 <__umoddi3+0x298>
   2aa74:	1d07883a 	add	r3,r3,r20
   2aa78:	1d000236 	bltu	r3,r20,2aa84 <__umoddi3+0x298>
   2aa7c:	1880012e 	bgeu	r3,r2,2aa84 <__umoddi3+0x298>
   2aa80:	1d07883a 	add	r3,r3,r20
   2aa84:	1885c83a 	sub	r2,r3,r2
   2aa88:	1484d83a 	srl	r2,r2,r18
   2aa8c:	0007883a 	mov	r3,zero
   2aa90:	003fa206 	br	2a91c <__umoddi3+0x130>
   2aa94:	a0804030 	cmpltui	r2,r20,256
   2aa98:	1000ba1e 	bne	r2,zero,2ad84 <__umoddi3+0x598>
   2aa9c:	a006d23a 	srli	r3,r20,8
   2aaa0:	04800204 	movi	r18,8
   2aaa4:	003fc906 	br	2a9cc <__umoddi3+0x1e0>
   2aaa8:	30804030 	cmpltui	r2,r6,256
   2aaac:	1000ad1e 	bne	r2,zero,2ad64 <__umoddi3+0x578>
   2aab0:	3006d23a 	srli	r3,r6,8
   2aab4:	04800204 	movi	r18,8
   2aab8:	003f6506 	br	2a850 <__umoddi3+0x64>
   2aabc:	39004030 	cmpltui	r4,r7,256
   2aac0:	2000b21e 	bne	r4,zero,2ad8c <__umoddi3+0x5a0>
   2aac4:	3808d23a 	srli	r4,r7,8
   2aac8:	02000204 	movi	r8,8
   2aacc:	003fa606 	br	2a968 <__umoddi3+0x17c>
   2aad0:	3d4e983a 	sll	r7,r7,r21
   2aad4:	3508d83a 	srl	r4,r6,r20
   2aad8:	8d2cd83a 	srl	r22,r17,r20
   2aadc:	8504d83a 	srl	r2,r16,r20
   2aae0:	21e4b03a 	or	r18,r4,r7
   2aae4:	8d62983a 	sll	r17,r17,r21
   2aae8:	9026d43a 	srli	r19,r18,16
   2aaec:	354c983a 	sll	r6,r6,r21
   2aaf0:	1444b03a 	or	r2,r2,r17
   2aaf4:	b009883a 	mov	r4,r22
   2aaf8:	980b883a 	mov	r5,r19
   2aafc:	d9800115 	stw	r6,4(sp)
   2ab00:	d8800015 	stw	r2,0(sp)
   2ab04:	002af080 	call	2af08 <__umodsi3>
   2ab08:	980b883a 	mov	r5,r19
   2ab0c:	b009883a 	mov	r4,r22
   2ab10:	102f883a 	mov	r23,r2
   2ab14:	947fffcc 	andi	r17,r18,65535
   2ab18:	002aea40 	call	2aea4 <__udivsi3>
   2ab1c:	8809883a 	mov	r4,r17
   2ab20:	100b883a 	mov	r5,r2
   2ab24:	1039883a 	mov	fp,r2
   2ab28:	002af640 	call	2af64 <__mulsi3>
   2ab2c:	d8c00017 	ldw	r3,0(sp)
   2ab30:	b82e943a 	slli	r23,r23,16
   2ab34:	8560983a 	sll	r16,r16,r21
   2ab38:	1808d43a 	srli	r4,r3,16
   2ab3c:	b908b03a 	or	r4,r23,r4
   2ab40:	2080062e 	bgeu	r4,r2,2ab5c <__umoddi3+0x370>
   2ab44:	2489883a 	add	r4,r4,r18
   2ab48:	e17fffc4 	addi	r5,fp,-1
   2ab4c:	24809436 	bltu	r4,r18,2ada0 <__umoddi3+0x5b4>
   2ab50:	2080932e 	bgeu	r4,r2,2ada0 <__umoddi3+0x5b4>
   2ab54:	e73fff84 	addi	fp,fp,-2
   2ab58:	2489883a 	add	r4,r4,r18
   2ab5c:	20adc83a 	sub	r22,r4,r2
   2ab60:	980b883a 	mov	r5,r19
   2ab64:	b009883a 	mov	r4,r22
   2ab68:	002af080 	call	2af08 <__umodsi3>
   2ab6c:	980b883a 	mov	r5,r19
   2ab70:	b009883a 	mov	r4,r22
   2ab74:	102f883a 	mov	r23,r2
   2ab78:	002aea40 	call	2aea4 <__udivsi3>
   2ab7c:	100b883a 	mov	r5,r2
   2ab80:	8809883a 	mov	r4,r17
   2ab84:	d8800215 	stw	r2,8(sp)
   2ab88:	002af640 	call	2af64 <__mulsi3>
   2ab8c:	d8c00017 	ldw	r3,0(sp)
   2ab90:	b82e943a 	slli	r23,r23,16
   2ab94:	d9400217 	ldw	r5,8(sp)
   2ab98:	1c7fffcc 	andi	r17,r3,65535
   2ab9c:	bc62b03a 	or	r17,r23,r17
   2aba0:	8880062e 	bgeu	r17,r2,2abbc <__umoddi3+0x3d0>
   2aba4:	8ca3883a 	add	r17,r17,r18
   2aba8:	28ffffc4 	addi	r3,r5,-1
   2abac:	8c807a36 	bltu	r17,r18,2ad98 <__umoddi3+0x5ac>
   2abb0:	8880792e 	bgeu	r17,r2,2ad98 <__umoddi3+0x5ac>
   2abb4:	297fff84 	addi	r5,r5,-2
   2abb8:	8ca3883a 	add	r17,r17,r18
   2abbc:	e02c943a 	slli	r22,fp,16
   2abc0:	d9c00117 	ldw	r7,4(sp)
   2abc4:	29bfffcc 	andi	r6,r5,65535
   2abc8:	b16cb03a 	or	r22,r22,r5
   2abcc:	38ffffcc 	andi	r3,r7,65535
   2abd0:	b02cd43a 	srli	r22,r22,16
   2abd4:	180b883a 	mov	r5,r3
   2abd8:	3009883a 	mov	r4,r6
   2abdc:	3838d43a 	srli	fp,r7,16
   2abe0:	182f883a 	mov	r23,r3
   2abe4:	d9800015 	stw	r6,0(sp)
   2abe8:	88a3c83a 	sub	r17,r17,r2
   2abec:	002af640 	call	2af64 <__mulsi3>
   2abf0:	b80b883a 	mov	r5,r23
   2abf4:	b009883a 	mov	r4,r22
   2abf8:	102f883a 	mov	r23,r2
   2abfc:	002af640 	call	2af64 <__mulsi3>
   2ac00:	e00b883a 	mov	r5,fp
   2ac04:	b009883a 	mov	r4,r22
   2ac08:	102d883a 	mov	r22,r2
   2ac0c:	002af640 	call	2af64 <__mulsi3>
   2ac10:	d9800017 	ldw	r6,0(sp)
   2ac14:	e00b883a 	mov	r5,fp
   2ac18:	1039883a 	mov	fp,r2
   2ac1c:	3009883a 	mov	r4,r6
   2ac20:	002af640 	call	2af64 <__mulsi3>
   2ac24:	b808d43a 	srli	r4,r23,16
   2ac28:	1585883a 	add	r2,r2,r22
   2ac2c:	2089883a 	add	r4,r4,r2
   2ac30:	2580022e 	bgeu	r4,r22,2ac3c <__umoddi3+0x450>
   2ac34:	00800074 	movhi	r2,1
   2ac38:	e0b9883a 	add	fp,fp,r2
   2ac3c:	2006d43a 	srli	r3,r4,16
   2ac40:	2008943a 	slli	r4,r4,16
   2ac44:	bdffffcc 	andi	r23,r23,65535
   2ac48:	1f07883a 	add	r3,r3,fp
   2ac4c:	25c9883a 	add	r4,r4,r23
   2ac50:	88c03a36 	bltu	r17,r3,2ad3c <__umoddi3+0x550>
   2ac54:	88c03826 	beq	r17,r3,2ad38 <__umoddi3+0x54c>
   2ac58:	8109c83a 	sub	r4,r16,r4
   2ac5c:	8121803a 	cmpltu	r16,r16,r4
   2ac60:	88c7c83a 	sub	r3,r17,r3
   2ac64:	1c07c83a 	sub	r3,r3,r16
   2ac68:	1d04983a 	sll	r2,r3,r20
   2ac6c:	2548d83a 	srl	r4,r4,r21
   2ac70:	1d46d83a 	srl	r3,r3,r21
   2ac74:	1104b03a 	or	r2,r2,r4
   2ac78:	003f2806 	br	2a91c <__umoddi3+0x130>
   2ac7c:	a4a8983a 	sll	r20,r20,r18
   2ac80:	8da6d83a 	srl	r19,r17,r22
   2ac84:	8ca2983a 	sll	r17,r17,r18
   2ac88:	a02ed43a 	srli	r23,r20,16
   2ac8c:	9809883a 	mov	r4,r19
   2ac90:	85acd83a 	srl	r22,r16,r22
   2ac94:	b80b883a 	mov	r5,r23
   2ac98:	002af080 	call	2af08 <__umodsi3>
   2ac9c:	9809883a 	mov	r4,r19
   2aca0:	b80b883a 	mov	r5,r23
   2aca4:	b46cb03a 	or	r22,r22,r17
   2aca8:	a57fffcc 	andi	r21,r20,65535
   2acac:	1023883a 	mov	r17,r2
   2acb0:	002aea40 	call	2aea4 <__udivsi3>
   2acb4:	a809883a 	mov	r4,r21
   2acb8:	100b883a 	mov	r5,r2
   2acbc:	002af640 	call	2af64 <__mulsi3>
   2acc0:	8822943a 	slli	r17,r17,16
   2acc4:	b008d43a 	srli	r4,r22,16
   2acc8:	84a6983a 	sll	r19,r16,r18
   2accc:	8908b03a 	or	r4,r17,r4
   2acd0:	2080042e 	bgeu	r4,r2,2ace4 <__umoddi3+0x4f8>
   2acd4:	2509883a 	add	r4,r4,r20
   2acd8:	25000236 	bltu	r4,r20,2ace4 <__umoddi3+0x4f8>
   2acdc:	2080012e 	bgeu	r4,r2,2ace4 <__umoddi3+0x4f8>
   2ace0:	2509883a 	add	r4,r4,r20
   2ace4:	20a1c83a 	sub	r16,r4,r2
   2ace8:	8009883a 	mov	r4,r16
   2acec:	b80b883a 	mov	r5,r23
   2acf0:	002af080 	call	2af08 <__umodsi3>
   2acf4:	8009883a 	mov	r4,r16
   2acf8:	1021883a 	mov	r16,r2
   2acfc:	b80b883a 	mov	r5,r23
   2ad00:	8020943a 	slli	r16,r16,16
   2ad04:	002aea40 	call	2aea4 <__udivsi3>
   2ad08:	100b883a 	mov	r5,r2
   2ad0c:	a809883a 	mov	r4,r21
   2ad10:	b47fffcc 	andi	r17,r22,65535
   2ad14:	002af640 	call	2af64 <__mulsi3>
   2ad18:	8462b03a 	or	r17,r16,r17
   2ad1c:	8880042e 	bgeu	r17,r2,2ad30 <__umoddi3+0x544>
   2ad20:	8d23883a 	add	r17,r17,r20
   2ad24:	8d000236 	bltu	r17,r20,2ad30 <__umoddi3+0x544>
   2ad28:	8880012e 	bgeu	r17,r2,2ad30 <__umoddi3+0x544>
   2ad2c:	8d23883a 	add	r17,r17,r20
   2ad30:	88a3c83a 	sub	r17,r17,r2
   2ad34:	003f2f06 	br	2a9f4 <__umoddi3+0x208>
   2ad38:	813fc72e 	bgeu	r16,r4,2ac58 <__umoddi3+0x46c>
   2ad3c:	d8800117 	ldw	r2,4(sp)
   2ad40:	20a7c83a 	sub	r19,r4,r2
   2ad44:	24c9803a 	cmpltu	r4,r4,r19
   2ad48:	2489883a 	add	r4,r4,r18
   2ad4c:	1907c83a 	sub	r3,r3,r4
   2ad50:	9809883a 	mov	r4,r19
   2ad54:	003fc006 	br	2ac58 <__umoddi3+0x46c>
   2ad58:	3006d43a 	srli	r3,r6,16
   2ad5c:	04800404 	movi	r18,16
   2ad60:	003ebb06 	br	2a850 <__umoddi3+0x64>
   2ad64:	3007883a 	mov	r3,r6
   2ad68:	003eb906 	br	2a850 <__umoddi3+0x64>
   2ad6c:	3808d43a 	srli	r4,r7,16
   2ad70:	02000404 	movi	r8,16
   2ad74:	003efc06 	br	2a968 <__umoddi3+0x17c>
   2ad78:	a006d43a 	srli	r3,r20,16
   2ad7c:	04800404 	movi	r18,16
   2ad80:	003f1206 	br	2a9cc <__umoddi3+0x1e0>
   2ad84:	a007883a 	mov	r3,r20
   2ad88:	003f1006 	br	2a9cc <__umoddi3+0x1e0>
   2ad8c:	3809883a 	mov	r4,r7
   2ad90:	0011883a 	mov	r8,zero
   2ad94:	003ef406 	br	2a968 <__umoddi3+0x17c>
   2ad98:	180b883a 	mov	r5,r3
   2ad9c:	003f8706 	br	2abbc <__umoddi3+0x3d0>
   2ada0:	2839883a 	mov	fp,r5
   2ada4:	003f6d06 	br	2ab5c <__umoddi3+0x370>
   2ada8:	2509883a 	add	r4,r4,r20
   2adac:	003f2206 	br	2aa38 <__umoddi3+0x24c>

0002adb0 <__divsi3>:
   2adb0:	20001a16 	blt	r4,zero,2ae1c <__divsi3+0x6c>
   2adb4:	000f883a 	mov	r7,zero
   2adb8:	2800020e 	bge	r5,zero,2adc4 <__divsi3+0x14>
   2adbc:	014bc83a 	sub	r5,zero,r5
   2adc0:	39c0005c 	xori	r7,r7,1
   2adc4:	200d883a 	mov	r6,r4
   2adc8:	00c00044 	movi	r3,1
   2adcc:	2900092e 	bgeu	r5,r4,2adf4 <__divsi3+0x44>
   2add0:	00800804 	movi	r2,32
   2add4:	00c00044 	movi	r3,1
   2add8:	00000106 	br	2ade0 <__divsi3+0x30>
   2addc:	10001226 	beq	r2,zero,2ae28 <__divsi3+0x78>
   2ade0:	294b883a 	add	r5,r5,r5
   2ade4:	10bfffc4 	addi	r2,r2,-1
   2ade8:	18c7883a 	add	r3,r3,r3
   2adec:	293ffb36 	bltu	r5,r4,2addc <__divsi3+0x2c>
   2adf0:	18000d26 	beq	r3,zero,2ae28 <__divsi3+0x78>
   2adf4:	0005883a 	mov	r2,zero
   2adf8:	31400236 	bltu	r6,r5,2ae04 <__divsi3+0x54>
   2adfc:	314dc83a 	sub	r6,r6,r5
   2ae00:	10c4b03a 	or	r2,r2,r3
   2ae04:	1806d07a 	srli	r3,r3,1
   2ae08:	280ad07a 	srli	r5,r5,1
   2ae0c:	183ffa1e 	bne	r3,zero,2adf8 <__divsi3+0x48>
   2ae10:	38000126 	beq	r7,zero,2ae18 <__divsi3+0x68>
   2ae14:	0085c83a 	sub	r2,zero,r2
   2ae18:	f800283a 	ret
   2ae1c:	0109c83a 	sub	r4,zero,r4
   2ae20:	01c00044 	movi	r7,1
   2ae24:	003fe406 	br	2adb8 <__divsi3+0x8>
   2ae28:	0005883a 	mov	r2,zero
   2ae2c:	003ff806 	br	2ae10 <__divsi3+0x60>

0002ae30 <__modsi3>:
   2ae30:	20001916 	blt	r4,zero,2ae98 <__modsi3+0x68>
   2ae34:	000f883a 	mov	r7,zero
   2ae38:	2005883a 	mov	r2,r4
   2ae3c:	2800010e 	bge	r5,zero,2ae44 <__modsi3+0x14>
   2ae40:	014bc83a 	sub	r5,zero,r5
   2ae44:	00c00044 	movi	r3,1
   2ae48:	2900092e 	bgeu	r5,r4,2ae70 <__modsi3+0x40>
   2ae4c:	01800804 	movi	r6,32
   2ae50:	00c00044 	movi	r3,1
   2ae54:	00000106 	br	2ae5c <__modsi3+0x2c>
   2ae58:	30000d26 	beq	r6,zero,2ae90 <__modsi3+0x60>
   2ae5c:	294b883a 	add	r5,r5,r5
   2ae60:	31bfffc4 	addi	r6,r6,-1
   2ae64:	18c7883a 	add	r3,r3,r3
   2ae68:	293ffb36 	bltu	r5,r4,2ae58 <__modsi3+0x28>
   2ae6c:	18000826 	beq	r3,zero,2ae90 <__modsi3+0x60>
   2ae70:	1806d07a 	srli	r3,r3,1
   2ae74:	11400136 	bltu	r2,r5,2ae7c <__modsi3+0x4c>
   2ae78:	1145c83a 	sub	r2,r2,r5
   2ae7c:	280ad07a 	srli	r5,r5,1
   2ae80:	183ffb1e 	bne	r3,zero,2ae70 <__modsi3+0x40>
   2ae84:	38000126 	beq	r7,zero,2ae8c <__modsi3+0x5c>
   2ae88:	0085c83a 	sub	r2,zero,r2
   2ae8c:	f800283a 	ret
   2ae90:	2005883a 	mov	r2,r4
   2ae94:	003ffb06 	br	2ae84 <__modsi3+0x54>
   2ae98:	0109c83a 	sub	r4,zero,r4
   2ae9c:	01c00044 	movi	r7,1
   2aea0:	003fe506 	br	2ae38 <__modsi3+0x8>

0002aea4 <__udivsi3>:
   2aea4:	200d883a 	mov	r6,r4
   2aea8:	2900152e 	bgeu	r5,r4,2af00 <__udivsi3+0x5c>
   2aeac:	28001416 	blt	r5,zero,2af00 <__udivsi3+0x5c>
   2aeb0:	00800804 	movi	r2,32
   2aeb4:	00c00044 	movi	r3,1
   2aeb8:	00000206 	br	2aec4 <__udivsi3+0x20>
   2aebc:	10000e26 	beq	r2,zero,2aef8 <__udivsi3+0x54>
   2aec0:	28000516 	blt	r5,zero,2aed8 <__udivsi3+0x34>
   2aec4:	294b883a 	add	r5,r5,r5
   2aec8:	10bfffc4 	addi	r2,r2,-1
   2aecc:	18c7883a 	add	r3,r3,r3
   2aed0:	293ffa36 	bltu	r5,r4,2aebc <__udivsi3+0x18>
   2aed4:	18000826 	beq	r3,zero,2aef8 <__udivsi3+0x54>
   2aed8:	0005883a 	mov	r2,zero
   2aedc:	31400236 	bltu	r6,r5,2aee8 <__udivsi3+0x44>
   2aee0:	314dc83a 	sub	r6,r6,r5
   2aee4:	10c4b03a 	or	r2,r2,r3
   2aee8:	1806d07a 	srli	r3,r3,1
   2aeec:	280ad07a 	srli	r5,r5,1
   2aef0:	183ffa1e 	bne	r3,zero,2aedc <__udivsi3+0x38>
   2aef4:	f800283a 	ret
   2aef8:	0005883a 	mov	r2,zero
   2aefc:	f800283a 	ret
   2af00:	00c00044 	movi	r3,1
   2af04:	003ff406 	br	2aed8 <__udivsi3+0x34>

0002af08 <__umodsi3>:
   2af08:	2005883a 	mov	r2,r4
   2af0c:	2900132e 	bgeu	r5,r4,2af5c <__umodsi3+0x54>
   2af10:	28001216 	blt	r5,zero,2af5c <__umodsi3+0x54>
   2af14:	01800804 	movi	r6,32
   2af18:	00c00044 	movi	r3,1
   2af1c:	00000206 	br	2af28 <__umodsi3+0x20>
   2af20:	30000c26 	beq	r6,zero,2af54 <__umodsi3+0x4c>
   2af24:	28000516 	blt	r5,zero,2af3c <__umodsi3+0x34>
   2af28:	294b883a 	add	r5,r5,r5
   2af2c:	31bfffc4 	addi	r6,r6,-1
   2af30:	18c7883a 	add	r3,r3,r3
   2af34:	293ffa36 	bltu	r5,r4,2af20 <__umodsi3+0x18>
   2af38:	18000626 	beq	r3,zero,2af54 <__umodsi3+0x4c>
   2af3c:	1806d07a 	srli	r3,r3,1
   2af40:	11400136 	bltu	r2,r5,2af48 <__umodsi3+0x40>
   2af44:	1145c83a 	sub	r2,r2,r5
   2af48:	280ad07a 	srli	r5,r5,1
   2af4c:	183ffb1e 	bne	r3,zero,2af3c <__umodsi3+0x34>
   2af50:	f800283a 	ret
   2af54:	2005883a 	mov	r2,r4
   2af58:	f800283a 	ret
   2af5c:	00c00044 	movi	r3,1
   2af60:	003ff606 	br	2af3c <__umodsi3+0x34>

0002af64 <__mulsi3>:
   2af64:	0005883a 	mov	r2,zero
   2af68:	20000726 	beq	r4,zero,2af88 <__mulsi3+0x24>
   2af6c:	20c0004c 	andi	r3,r4,1
   2af70:	2008d07a 	srli	r4,r4,1
   2af74:	18000126 	beq	r3,zero,2af7c <__mulsi3+0x18>
   2af78:	1145883a 	add	r2,r2,r5
   2af7c:	294b883a 	add	r5,r5,r5
   2af80:	203ffa1e 	bne	r4,zero,2af6c <__mulsi3+0x8>
   2af84:	f800283a 	ret
   2af88:	f800283a 	ret

0002af8c <__adddf3>:
   2af8c:	02000434 	movhi	r8,16
   2af90:	423fffc4 	addi	r8,r8,-1
   2af94:	3a12703a 	and	r9,r7,r8
   2af98:	2a06703a 	and	r3,r5,r8
   2af9c:	2818d53a 	srli	r12,r5,20
   2afa0:	3804d53a 	srli	r2,r7,20
   2afa4:	481490fa 	slli	r10,r9,3
   2afa8:	280ad7fa 	srli	r5,r5,31
   2afac:	180690fa 	slli	r3,r3,3
   2afb0:	2016d77a 	srli	r11,r4,29
   2afb4:	3012d77a 	srli	r9,r6,29
   2afb8:	380ed7fa 	srli	r7,r7,31
   2afbc:	defffb04 	addi	sp,sp,-20
   2afc0:	dc400115 	stw	r17,4(sp)
   2afc4:	dc000015 	stw	r16,0(sp)
   2afc8:	dfc00415 	stw	ra,16(sp)
   2afcc:	dcc00315 	stw	r19,12(sp)
   2afd0:	dc800215 	stw	r18,8(sp)
   2afd4:	201c90fa 	slli	r14,r4,3
   2afd8:	301a90fa 	slli	r13,r6,3
   2afdc:	6441ffcc 	andi	r17,r12,2047
   2afe0:	2821883a 	mov	r16,r5
   2afe4:	58c6b03a 	or	r3,r11,r3
   2afe8:	1081ffcc 	andi	r2,r2,2047
   2afec:	4a92b03a 	or	r9,r9,r10
   2aff0:	29c06326 	beq	r5,r7,2b180 <__adddf3+0x1f4>
   2aff4:	888bc83a 	sub	r5,r17,r2
   2aff8:	0140560e 	bge	zero,r5,2b154 <__adddf3+0x1c8>
   2affc:	10007526 	beq	r2,zero,2b1d4 <__adddf3+0x248>
   2b000:	8881ffd8 	cmpnei	r2,r17,2047
   2b004:	10012d26 	beq	r2,zero,2b4bc <__adddf3+0x530>
   2b008:	4a402034 	orhi	r9,r9,128
   2b00c:	28800e48 	cmpgei	r2,r5,57
   2b010:	1000f41e 	bne	r2,zero,2b3e4 <__adddf3+0x458>
   2b014:	28800808 	cmpgei	r2,r5,32
   2b018:	1001471e 	bne	r2,zero,2b538 <__adddf3+0x5ac>
   2b01c:	00800804 	movi	r2,32
   2b020:	1145c83a 	sub	r2,r2,r5
   2b024:	6948d83a 	srl	r4,r13,r5
   2b028:	48a4983a 	sll	r18,r9,r2
   2b02c:	6884983a 	sll	r2,r13,r2
   2b030:	494ad83a 	srl	r5,r9,r5
   2b034:	9124b03a 	or	r18,r18,r4
   2b038:	101ac03a 	cmpne	r13,r2,zero
   2b03c:	9364b03a 	or	r18,r18,r13
   2b040:	1947c83a 	sub	r3,r3,r5
   2b044:	74a5c83a 	sub	r18,r14,r18
   2b048:	7489803a 	cmpltu	r4,r14,r18
   2b04c:	1909c83a 	sub	r4,r3,r4
   2b050:	2080202c 	andhi	r2,r4,128
   2b054:	10008626 	beq	r2,zero,2b270 <__adddf3+0x2e4>
   2b058:	00802034 	movhi	r2,128
   2b05c:	10bfffc4 	addi	r2,r2,-1
   2b060:	20a6703a 	and	r19,r4,r2
   2b064:	9800d626 	beq	r19,zero,2b3c0 <__adddf3+0x434>
   2b068:	9809883a 	mov	r4,r19
   2b06c:	002d7940 	call	2d794 <__clzsi2>
   2b070:	133ffe04 	addi	r12,r2,-8
   2b074:	01000804 	movi	r4,32
   2b078:	2309c83a 	sub	r4,r4,r12
   2b07c:	9108d83a 	srl	r4,r18,r4
   2b080:	9b04983a 	sll	r2,r19,r12
   2b084:	9324983a 	sll	r18,r18,r12
   2b088:	2088b03a 	or	r4,r4,r2
   2b08c:	6440c716 	blt	r12,r17,2b3ac <__adddf3+0x420>
   2b090:	6459c83a 	sub	r12,r12,r17
   2b094:	62000044 	addi	r8,r12,1
   2b098:	40800808 	cmpgei	r2,r8,32
   2b09c:	1001191e 	bne	r2,zero,2b504 <__adddf3+0x578>
   2b0a0:	00800804 	movi	r2,32
   2b0a4:	1205c83a 	sub	r2,r2,r8
   2b0a8:	9206d83a 	srl	r3,r18,r8
   2b0ac:	90a4983a 	sll	r18,r18,r2
   2b0b0:	2084983a 	sll	r2,r4,r2
   2b0b4:	2208d83a 	srl	r4,r4,r8
   2b0b8:	9024c03a 	cmpne	r18,r18,zero
   2b0bc:	10c4b03a 	or	r2,r2,r3
   2b0c0:	14a4b03a 	or	r18,r2,r18
   2b0c4:	0023883a 	mov	r17,zero
   2b0c8:	908001cc 	andi	r2,r18,7
   2b0cc:	10000726 	beq	r2,zero,2b0ec <__adddf3+0x160>
   2b0d0:	908003cc 	andi	r2,r18,15
   2b0d4:	10800120 	cmpeqi	r2,r2,4
   2b0d8:	1000041e 	bne	r2,zero,2b0ec <__adddf3+0x160>
   2b0dc:	90c00104 	addi	r3,r18,4
   2b0e0:	1ca5803a 	cmpltu	r18,r3,r18
   2b0e4:	2489883a 	add	r4,r4,r18
   2b0e8:	1825883a 	mov	r18,r3
   2b0ec:	2080202c 	andhi	r2,r4,128
   2b0f0:	10006126 	beq	r2,zero,2b278 <__adddf3+0x2ec>
   2b0f4:	89400044 	addi	r5,r17,1
   2b0f8:	2881ffe0 	cmpeqi	r2,r5,2047
   2b0fc:	2941ffcc 	andi	r5,r5,2047
   2b100:	1000731e 	bne	r2,zero,2b2d0 <__adddf3+0x344>
   2b104:	023fe034 	movhi	r8,65408
   2b108:	423fffc4 	addi	r8,r8,-1
   2b10c:	2210703a 	and	r8,r4,r8
   2b110:	4006927a 	slli	r3,r8,9
   2b114:	9024d0fa 	srli	r18,r18,3
   2b118:	4004977a 	slli	r2,r8,29
   2b11c:	1806d33a 	srli	r3,r3,12
   2b120:	1484b03a 	or	r2,r2,r18
   2b124:	280a953a 	slli	r5,r5,20
   2b128:	84003fcc 	andi	r16,r16,255
   2b12c:	802097fa 	slli	r16,r16,31
   2b130:	28c6b03a 	or	r3,r5,r3
   2b134:	1c06b03a 	or	r3,r3,r16
   2b138:	dfc00417 	ldw	ra,16(sp)
   2b13c:	dcc00317 	ldw	r19,12(sp)
   2b140:	dc800217 	ldw	r18,8(sp)
   2b144:	dc400117 	ldw	r17,4(sp)
   2b148:	dc000017 	ldw	r16,0(sp)
   2b14c:	dec00504 	addi	sp,sp,20
   2b150:	f800283a 	ret
   2b154:	28002726 	beq	r5,zero,2b1f4 <__adddf3+0x268>
   2b158:	144bc83a 	sub	r5,r2,r17
   2b15c:	8800be1e 	bne	r17,zero,2b458 <__adddf3+0x4cc>
   2b160:	1b88b03a 	or	r4,r3,r14
   2b164:	20013126 	beq	r4,zero,2b62c <__adddf3+0x6a0>
   2b168:	293fffc4 	addi	r4,r5,-1
   2b16c:	20017226 	beq	r4,zero,2b738 <__adddf3+0x7ac>
   2b170:	2941ffd8 	cmpnei	r5,r5,2047
   2b174:	2801c226 	beq	r5,zero,2b880 <__adddf3+0x8f4>
   2b178:	200b883a 	mov	r5,r4
   2b17c:	0000b906 	br	2b464 <__adddf3+0x4d8>
   2b180:	888bc83a 	sub	r5,r17,r2
   2b184:	0140700e 	bge	zero,r5,2b348 <__adddf3+0x3bc>
   2b188:	10002a26 	beq	r2,zero,2b234 <__adddf3+0x2a8>
   2b18c:	8881ffd8 	cmpnei	r2,r17,2047
   2b190:	1000ca26 	beq	r2,zero,2b4bc <__adddf3+0x530>
   2b194:	4a402034 	orhi	r9,r9,128
   2b198:	28800e48 	cmpgei	r2,r5,57
   2b19c:	1000421e 	bne	r2,zero,2b2a8 <__adddf3+0x31c>
   2b1a0:	28800808 	cmpgei	r2,r5,32
   2b1a4:	1000ff26 	beq	r2,zero,2b5a4 <__adddf3+0x618>
   2b1a8:	2cbff804 	addi	r18,r5,-32
   2b1ac:	29000820 	cmpeqi	r4,r5,32
   2b1b0:	4c84d83a 	srl	r2,r9,r18
   2b1b4:	2000041e 	bne	r4,zero,2b1c8 <__adddf3+0x23c>
   2b1b8:	01001004 	movi	r4,64
   2b1bc:	214bc83a 	sub	r5,r4,r5
   2b1c0:	4952983a 	sll	r9,r9,r5
   2b1c4:	6a5ab03a 	or	r13,r13,r9
   2b1c8:	6824c03a 	cmpne	r18,r13,zero
   2b1cc:	90a4b03a 	or	r18,r18,r2
   2b1d0:	00003706 	br	2b2b0 <__adddf3+0x324>
   2b1d4:	4b44b03a 	or	r2,r9,r13
   2b1d8:	1000b126 	beq	r2,zero,2b4a0 <__adddf3+0x514>
   2b1dc:	28bfffc4 	addi	r2,r5,-1
   2b1e0:	10011a26 	beq	r2,zero,2b64c <__adddf3+0x6c0>
   2b1e4:	2941ffd8 	cmpnei	r5,r5,2047
   2b1e8:	28012526 	beq	r5,zero,2b680 <__adddf3+0x6f4>
   2b1ec:	100b883a 	mov	r5,r2
   2b1f0:	003f8606 	br	2b00c <__adddf3+0x80>
   2b1f4:	8a800044 	addi	r10,r17,1
   2b1f8:	5281ff8c 	andi	r10,r10,2046
   2b1fc:	50008b1e 	bne	r10,zero,2b42c <__adddf3+0x4a0>
   2b200:	1b96b03a 	or	r11,r3,r14
   2b204:	4b44b03a 	or	r2,r9,r13
   2b208:	8801031e 	bne	r17,zero,2b618 <__adddf3+0x68c>
   2b20c:	58014126 	beq	r11,zero,2b714 <__adddf3+0x788>
   2b210:	1001571e 	bne	r2,zero,2b770 <__adddf3+0x7e4>
   2b214:	1804977a 	slli	r2,r3,29
   2b218:	01480034 	movhi	r5,8192
   2b21c:	297fffc4 	addi	r5,r5,-1
   2b220:	2148703a 	and	r4,r4,r5
   2b224:	1810d0fa 	srli	r8,r3,3
   2b228:	1104b03a 	or	r2,r2,r4
   2b22c:	500b883a 	mov	r5,r10
   2b230:	00001806 	br	2b294 <__adddf3+0x308>
   2b234:	4b44b03a 	or	r2,r9,r13
   2b238:	10010a26 	beq	r2,zero,2b664 <__adddf3+0x6d8>
   2b23c:	28bfffc4 	addi	r2,r5,-1
   2b240:	10000426 	beq	r2,zero,2b254 <__adddf3+0x2c8>
   2b244:	2941ffd8 	cmpnei	r5,r5,2047
   2b248:	28014226 	beq	r5,zero,2b754 <__adddf3+0x7c8>
   2b24c:	100b883a 	mov	r5,r2
   2b250:	003fd106 	br	2b198 <__adddf3+0x20c>
   2b254:	7365883a 	add	r18,r14,r13
   2b258:	1a47883a 	add	r3,r3,r9
   2b25c:	9389803a 	cmpltu	r4,r18,r14
   2b260:	1909883a 	add	r4,r3,r4
   2b264:	2080202c 	andhi	r2,r4,128
   2b268:	10009b1e 	bne	r2,zero,2b4d8 <__adddf3+0x54c>
   2b26c:	04400044 	movi	r17,1
   2b270:	908001cc 	andi	r2,r18,7
   2b274:	103f961e 	bne	r2,zero,2b0d0 <__adddf3+0x144>
   2b278:	9024d0fa 	srli	r18,r18,3
   2b27c:	2004977a 	slli	r2,r4,29
   2b280:	2010d0fa 	srli	r8,r4,3
   2b284:	880b883a 	mov	r5,r17
   2b288:	9084b03a 	or	r2,r18,r2
   2b28c:	28c1ffe0 	cmpeqi	r3,r5,2047
   2b290:	1800251e 	bne	r3,zero,2b328 <__adddf3+0x39c>
   2b294:	00c00434 	movhi	r3,16
   2b298:	18ffffc4 	addi	r3,r3,-1
   2b29c:	40c6703a 	and	r3,r8,r3
   2b2a0:	2941ffcc 	andi	r5,r5,2047
   2b2a4:	003f9f06 	br	2b124 <__adddf3+0x198>
   2b2a8:	4b64b03a 	or	r18,r9,r13
   2b2ac:	9024c03a 	cmpne	r18,r18,zero
   2b2b0:	93a5883a 	add	r18,r18,r14
   2b2b4:	9389803a 	cmpltu	r4,r18,r14
   2b2b8:	20c9883a 	add	r4,r4,r3
   2b2bc:	2080202c 	andhi	r2,r4,128
   2b2c0:	103feb26 	beq	r2,zero,2b270 <__adddf3+0x2e4>
   2b2c4:	8c400044 	addi	r17,r17,1
   2b2c8:	8881ffe0 	cmpeqi	r2,r17,2047
   2b2cc:	10008326 	beq	r2,zero,2b4dc <__adddf3+0x550>
   2b2d0:	0141ffc4 	movi	r5,2047
   2b2d4:	0007883a 	mov	r3,zero
   2b2d8:	0005883a 	mov	r2,zero
   2b2dc:	003f9106 	br	2b124 <__adddf3+0x198>
   2b2e0:	4b44b03a 	or	r2,r9,r13
   2b2e4:	180a977a 	slli	r5,r3,29
   2b2e8:	1810d0fa 	srli	r8,r3,3
   2b2ec:	10016c26 	beq	r2,zero,2b8a0 <__adddf3+0x914>
   2b2f0:	00c80034 	movhi	r3,8192
   2b2f4:	18ffffc4 	addi	r3,r3,-1
   2b2f8:	20c4703a 	and	r2,r4,r3
   2b2fc:	4100022c 	andhi	r4,r8,8
   2b300:	1144b03a 	or	r2,r2,r5
   2b304:	20000826 	beq	r4,zero,2b328 <__adddf3+0x39c>
   2b308:	4808d0fa 	srli	r4,r9,3
   2b30c:	2140022c 	andhi	r5,r4,8
   2b310:	2800051e 	bne	r5,zero,2b328 <__adddf3+0x39c>
   2b314:	4804977a 	slli	r2,r9,29
   2b318:	30cc703a 	and	r6,r6,r3
   2b31c:	3821883a 	mov	r16,r7
   2b320:	3084b03a 	or	r2,r6,r2
   2b324:	2011883a 	mov	r8,r4
   2b328:	4086b03a 	or	r3,r8,r2
   2b32c:	18017126 	beq	r3,zero,2b8f4 <__adddf3+0x968>
   2b330:	01000434 	movhi	r4,16
   2b334:	40c00234 	orhi	r3,r8,8
   2b338:	213fffc4 	addi	r4,r4,-1
   2b33c:	1906703a 	and	r3,r3,r4
   2b340:	0141ffc4 	movi	r5,2047
   2b344:	003f7706 	br	2b124 <__adddf3+0x198>
   2b348:	28002926 	beq	r5,zero,2b3f0 <__adddf3+0x464>
   2b34c:	144bc83a 	sub	r5,r2,r17
   2b350:	88008c26 	beq	r17,zero,2b584 <__adddf3+0x5f8>
   2b354:	1101ffd8 	cmpnei	r4,r2,2047
   2b358:	20011126 	beq	r4,zero,2b7a0 <__adddf3+0x814>
   2b35c:	18c02034 	orhi	r3,r3,128
   2b360:	29000e48 	cmpgei	r4,r5,57
   2b364:	2000d51e 	bne	r4,zero,2b6bc <__adddf3+0x730>
   2b368:	29000808 	cmpgei	r4,r5,32
   2b36c:	2001511e 	bne	r4,zero,2b8b4 <__adddf3+0x928>
   2b370:	01000804 	movi	r4,32
   2b374:	2149c83a 	sub	r4,r4,r5
   2b378:	1924983a 	sll	r18,r3,r4
   2b37c:	714cd83a 	srl	r6,r14,r5
   2b380:	7108983a 	sll	r4,r14,r4
   2b384:	194ad83a 	srl	r5,r3,r5
   2b388:	91a4b03a 	or	r18,r18,r6
   2b38c:	2006c03a 	cmpne	r3,r4,zero
   2b390:	90e4b03a 	or	r18,r18,r3
   2b394:	4953883a 	add	r9,r9,r5
   2b398:	9365883a 	add	r18,r18,r13
   2b39c:	9349803a 	cmpltu	r4,r18,r13
   2b3a0:	2249883a 	add	r4,r4,r9
   2b3a4:	1023883a 	mov	r17,r2
   2b3a8:	003fc406 	br	2b2bc <__adddf3+0x330>
   2b3ac:	023fe034 	movhi	r8,65408
   2b3b0:	423fffc4 	addi	r8,r8,-1
   2b3b4:	8b23c83a 	sub	r17,r17,r12
   2b3b8:	2208703a 	and	r4,r4,r8
   2b3bc:	003f4206 	br	2b0c8 <__adddf3+0x13c>
   2b3c0:	9009883a 	mov	r4,r18
   2b3c4:	002d7940 	call	2d794 <__clzsi2>
   2b3c8:	13000604 	addi	r12,r2,24
   2b3cc:	60c00808 	cmpgei	r3,r12,32
   2b3d0:	183f2826 	beq	r3,zero,2b074 <__adddf3+0xe8>
   2b3d4:	113ffe04 	addi	r4,r2,-8
   2b3d8:	9108983a 	sll	r4,r18,r4
   2b3dc:	0025883a 	mov	r18,zero
   2b3e0:	003f2a06 	br	2b08c <__adddf3+0x100>
   2b3e4:	4b64b03a 	or	r18,r9,r13
   2b3e8:	9024c03a 	cmpne	r18,r18,zero
   2b3ec:	003f1506 	br	2b044 <__adddf3+0xb8>
   2b3f0:	8a000044 	addi	r8,r17,1
   2b3f4:	4081ff8c 	andi	r2,r8,2046
   2b3f8:	1000751e 	bne	r2,zero,2b5d0 <__adddf3+0x644>
   2b3fc:	1b84b03a 	or	r2,r3,r14
   2b400:	8800bc1e 	bne	r17,zero,2b6f4 <__adddf3+0x768>
   2b404:	10010c26 	beq	r2,zero,2b838 <__adddf3+0x8ac>
   2b408:	4b44b03a 	or	r2,r9,r13
   2b40c:	1001111e 	bne	r2,zero,2b854 <__adddf3+0x8c8>
   2b410:	180c977a 	slli	r6,r3,29
   2b414:	00880034 	movhi	r2,8192
   2b418:	10bfffc4 	addi	r2,r2,-1
   2b41c:	2084703a 	and	r2,r4,r2
   2b420:	1810d0fa 	srli	r8,r3,3
   2b424:	1184b03a 	or	r2,r2,r6
   2b428:	003f9a06 	br	2b294 <__adddf3+0x308>
   2b42c:	7365c83a 	sub	r18,r14,r13
   2b430:	1a67c83a 	sub	r19,r3,r9
   2b434:	7489803a 	cmpltu	r4,r14,r18
   2b438:	9927c83a 	sub	r19,r19,r4
   2b43c:	9880202c 	andhi	r2,r19,128
   2b440:	10006f1e 	bne	r2,zero,2b600 <__adddf3+0x674>
   2b444:	94c4b03a 	or	r2,r18,r19
   2b448:	103f061e 	bne	r2,zero,2b064 <__adddf3+0xd8>
   2b44c:	0011883a 	mov	r8,zero
   2b450:	0021883a 	mov	r16,zero
   2b454:	003f8f06 	br	2b294 <__adddf3+0x308>
   2b458:	1101ffd8 	cmpnei	r4,r2,2047
   2b45c:	20008f26 	beq	r4,zero,2b69c <__adddf3+0x710>
   2b460:	18c02034 	orhi	r3,r3,128
   2b464:	29000e48 	cmpgei	r4,r5,57
   2b468:	20003e1e 	bne	r4,zero,2b564 <__adddf3+0x5d8>
   2b46c:	29000808 	cmpgei	r4,r5,32
   2b470:	2000951e 	bne	r4,zero,2b6c8 <__adddf3+0x73c>
   2b474:	01000804 	movi	r4,32
   2b478:	2149c83a 	sub	r4,r4,r5
   2b47c:	1924983a 	sll	r18,r3,r4
   2b480:	714cd83a 	srl	r6,r14,r5
   2b484:	711c983a 	sll	r14,r14,r4
   2b488:	1946d83a 	srl	r3,r3,r5
   2b48c:	91a4b03a 	or	r18,r18,r6
   2b490:	701cc03a 	cmpne	r14,r14,zero
   2b494:	93a4b03a 	or	r18,r18,r14
   2b498:	48d3c83a 	sub	r9,r9,r3
   2b49c:	00003306 	br	2b56c <__adddf3+0x5e0>
   2b4a0:	1824977a 	slli	r18,r3,29
   2b4a4:	01880034 	movhi	r6,8192
   2b4a8:	31bfffc4 	addi	r6,r6,-1
   2b4ac:	2184703a 	and	r2,r4,r6
   2b4b0:	1810d0fa 	srli	r8,r3,3
   2b4b4:	1484b03a 	or	r2,r2,r18
   2b4b8:	003f7406 	br	2b28c <__adddf3+0x300>
   2b4bc:	1804977a 	slli	r2,r3,29
   2b4c0:	01480034 	movhi	r5,8192
   2b4c4:	297fffc4 	addi	r5,r5,-1
   2b4c8:	2148703a 	and	r4,r4,r5
   2b4cc:	1810d0fa 	srli	r8,r3,3
   2b4d0:	1104b03a 	or	r2,r2,r4
   2b4d4:	003f9406 	br	2b328 <__adddf3+0x39c>
   2b4d8:	04400084 	movi	r17,2
   2b4dc:	00bfe034 	movhi	r2,65408
   2b4e0:	10bfffc4 	addi	r2,r2,-1
   2b4e4:	9006d07a 	srli	r3,r18,1
   2b4e8:	2088703a 	and	r4,r4,r2
   2b4ec:	200497fa 	slli	r2,r4,31
   2b4f0:	9480004c 	andi	r18,r18,1
   2b4f4:	1ca4b03a 	or	r18,r3,r18
   2b4f8:	2008d07a 	srli	r4,r4,1
   2b4fc:	14a4b03a 	or	r18,r2,r18
   2b500:	003ef106 	br	2b0c8 <__adddf3+0x13c>
   2b504:	633ff844 	addi	r12,r12,-31
   2b508:	40800820 	cmpeqi	r2,r8,32
   2b50c:	2318d83a 	srl	r12,r4,r12
   2b510:	1000041e 	bne	r2,zero,2b524 <__adddf3+0x598>
   2b514:	00801004 	movi	r2,64
   2b518:	1211c83a 	sub	r8,r2,r8
   2b51c:	2208983a 	sll	r4,r4,r8
   2b520:	9124b03a 	or	r18,r18,r4
   2b524:	9024c03a 	cmpne	r18,r18,zero
   2b528:	9324b03a 	or	r18,r18,r12
   2b52c:	0009883a 	mov	r4,zero
   2b530:	0023883a 	mov	r17,zero
   2b534:	003f4e06 	br	2b270 <__adddf3+0x2e4>
   2b538:	2cbff804 	addi	r18,r5,-32
   2b53c:	29000820 	cmpeqi	r4,r5,32
   2b540:	4c84d83a 	srl	r2,r9,r18
   2b544:	2000041e 	bne	r4,zero,2b558 <__adddf3+0x5cc>
   2b548:	01001004 	movi	r4,64
   2b54c:	214bc83a 	sub	r5,r4,r5
   2b550:	4952983a 	sll	r9,r9,r5
   2b554:	6a5ab03a 	or	r13,r13,r9
   2b558:	6824c03a 	cmpne	r18,r13,zero
   2b55c:	90a4b03a 	or	r18,r18,r2
   2b560:	003eb806 	br	2b044 <__adddf3+0xb8>
   2b564:	1b88b03a 	or	r4,r3,r14
   2b568:	2024c03a 	cmpne	r18,r4,zero
   2b56c:	6ca5c83a 	sub	r18,r13,r18
   2b570:	6c89803a 	cmpltu	r4,r13,r18
   2b574:	4909c83a 	sub	r4,r9,r4
   2b578:	3821883a 	mov	r16,r7
   2b57c:	1023883a 	mov	r17,r2
   2b580:	003eb306 	br	2b050 <__adddf3+0xc4>
   2b584:	1b88b03a 	or	r4,r3,r14
   2b588:	20008c26 	beq	r4,zero,2b7bc <__adddf3+0x830>
   2b58c:	293fffc4 	addi	r4,r5,-1
   2b590:	2000d326 	beq	r4,zero,2b8e0 <__adddf3+0x954>
   2b594:	2941ffd8 	cmpnei	r5,r5,2047
   2b598:	28008126 	beq	r5,zero,2b7a0 <__adddf3+0x814>
   2b59c:	200b883a 	mov	r5,r4
   2b5a0:	003f6f06 	br	2b360 <__adddf3+0x3d4>
   2b5a4:	00800804 	movi	r2,32
   2b5a8:	1145c83a 	sub	r2,r2,r5
   2b5ac:	6948d83a 	srl	r4,r13,r5
   2b5b0:	48a4983a 	sll	r18,r9,r2
   2b5b4:	6884983a 	sll	r2,r13,r2
   2b5b8:	494ad83a 	srl	r5,r9,r5
   2b5bc:	9124b03a 	or	r18,r18,r4
   2b5c0:	101ac03a 	cmpne	r13,r2,zero
   2b5c4:	9364b03a 	or	r18,r18,r13
   2b5c8:	1947883a 	add	r3,r3,r5
   2b5cc:	003f3806 	br	2b2b0 <__adddf3+0x324>
   2b5d0:	4081ffe0 	cmpeqi	r2,r8,2047
   2b5d4:	103f3e1e 	bne	r2,zero,2b2d0 <__adddf3+0x344>
   2b5d8:	7345883a 	add	r2,r14,r13
   2b5dc:	139d803a 	cmpltu	r14,r2,r14
   2b5e0:	1a49883a 	add	r4,r3,r9
   2b5e4:	2389883a 	add	r4,r4,r14
   2b5e8:	202497fa 	slli	r18,r4,31
   2b5ec:	1004d07a 	srli	r2,r2,1
   2b5f0:	2008d07a 	srli	r4,r4,1
   2b5f4:	4023883a 	mov	r17,r8
   2b5f8:	90a4b03a 	or	r18,r18,r2
   2b5fc:	003f1c06 	br	2b270 <__adddf3+0x2e4>
   2b600:	6ba5c83a 	sub	r18,r13,r14
   2b604:	48c9c83a 	sub	r4,r9,r3
   2b608:	6c85803a 	cmpltu	r2,r13,r18
   2b60c:	20a7c83a 	sub	r19,r4,r2
   2b610:	3821883a 	mov	r16,r7
   2b614:	003e9306 	br	2b064 <__adddf3+0xd8>
   2b618:	58006f1e 	bne	r11,zero,2b7d8 <__adddf3+0x84c>
   2b61c:	10001f1e 	bne	r2,zero,2b69c <__adddf3+0x710>
   2b620:	00bfffc4 	movi	r2,-1
   2b624:	0021883a 	mov	r16,zero
   2b628:	003f4106 	br	2b330 <__adddf3+0x3a4>
   2b62c:	4808977a 	slli	r4,r9,29
   2b630:	00c80034 	movhi	r3,8192
   2b634:	18ffffc4 	addi	r3,r3,-1
   2b638:	30c4703a 	and	r2,r6,r3
   2b63c:	4810d0fa 	srli	r8,r9,3
   2b640:	1104b03a 	or	r2,r2,r4
   2b644:	3821883a 	mov	r16,r7
   2b648:	003f1006 	br	2b28c <__adddf3+0x300>
   2b64c:	7365c83a 	sub	r18,r14,r13
   2b650:	1a47c83a 	sub	r3,r3,r9
   2b654:	7489803a 	cmpltu	r4,r14,r18
   2b658:	1909c83a 	sub	r4,r3,r4
   2b65c:	04400044 	movi	r17,1
   2b660:	003e7b06 	br	2b050 <__adddf3+0xc4>
   2b664:	1824977a 	slli	r18,r3,29
   2b668:	01c80034 	movhi	r7,8192
   2b66c:	39ffffc4 	addi	r7,r7,-1
   2b670:	21c4703a 	and	r2,r4,r7
   2b674:	1810d0fa 	srli	r8,r3,3
   2b678:	1484b03a 	or	r2,r2,r18
   2b67c:	003f0306 	br	2b28c <__adddf3+0x300>
   2b680:	1824977a 	slli	r18,r3,29
   2b684:	01480034 	movhi	r5,8192
   2b688:	297fffc4 	addi	r5,r5,-1
   2b68c:	2144703a 	and	r2,r4,r5
   2b690:	1810d0fa 	srli	r8,r3,3
   2b694:	1484b03a 	or	r2,r2,r18
   2b698:	003f2306 	br	2b328 <__adddf3+0x39c>
   2b69c:	4806977a 	slli	r3,r9,29
   2b6a0:	00880034 	movhi	r2,8192
   2b6a4:	10bfffc4 	addi	r2,r2,-1
   2b6a8:	3084703a 	and	r2,r6,r2
   2b6ac:	4810d0fa 	srli	r8,r9,3
   2b6b0:	10c4b03a 	or	r2,r2,r3
   2b6b4:	3821883a 	mov	r16,r7
   2b6b8:	003f1b06 	br	2b328 <__adddf3+0x39c>
   2b6bc:	1b88b03a 	or	r4,r3,r14
   2b6c0:	2024c03a 	cmpne	r18,r4,zero
   2b6c4:	003f3406 	br	2b398 <__adddf3+0x40c>
   2b6c8:	2cbff804 	addi	r18,r5,-32
   2b6cc:	29800820 	cmpeqi	r6,r5,32
   2b6d0:	1c88d83a 	srl	r4,r3,r18
   2b6d4:	3000041e 	bne	r6,zero,2b6e8 <__adddf3+0x75c>
   2b6d8:	01801004 	movi	r6,64
   2b6dc:	314bc83a 	sub	r5,r6,r5
   2b6e0:	1946983a 	sll	r3,r3,r5
   2b6e4:	70dcb03a 	or	r14,r14,r3
   2b6e8:	7024c03a 	cmpne	r18,r14,zero
   2b6ec:	9124b03a 	or	r18,r18,r4
   2b6f0:	003f9e06 	br	2b56c <__adddf3+0x5e0>
   2b6f4:	103efa1e 	bne	r2,zero,2b2e0 <__adddf3+0x354>
   2b6f8:	4804977a 	slli	r2,r9,29
   2b6fc:	00c80034 	movhi	r3,8192
   2b700:	18ffffc4 	addi	r3,r3,-1
   2b704:	30cc703a 	and	r6,r6,r3
   2b708:	4810d0fa 	srli	r8,r9,3
   2b70c:	1184b03a 	or	r2,r2,r6
   2b710:	003f0506 	br	2b328 <__adddf3+0x39c>
   2b714:	10004426 	beq	r2,zero,2b828 <__adddf3+0x89c>
   2b718:	4806977a 	slli	r3,r9,29
   2b71c:	00880034 	movhi	r2,8192
   2b720:	10bfffc4 	addi	r2,r2,-1
   2b724:	3084703a 	and	r2,r6,r2
   2b728:	4810d0fa 	srli	r8,r9,3
   2b72c:	10c4b03a 	or	r2,r2,r3
   2b730:	3821883a 	mov	r16,r7
   2b734:	003ed706 	br	2b294 <__adddf3+0x308>
   2b738:	6ba5c83a 	sub	r18,r13,r14
   2b73c:	48c7c83a 	sub	r3,r9,r3
   2b740:	6c85803a 	cmpltu	r2,r13,r18
   2b744:	1889c83a 	sub	r4,r3,r2
   2b748:	3821883a 	mov	r16,r7
   2b74c:	04400044 	movi	r17,1
   2b750:	003e3f06 	br	2b050 <__adddf3+0xc4>
   2b754:	180a977a 	slli	r5,r3,29
   2b758:	00880034 	movhi	r2,8192
   2b75c:	10bfffc4 	addi	r2,r2,-1
   2b760:	2084703a 	and	r2,r4,r2
   2b764:	1810d0fa 	srli	r8,r3,3
   2b768:	1144b03a 	or	r2,r2,r5
   2b76c:	003eee06 	br	2b328 <__adddf3+0x39c>
   2b770:	7365c83a 	sub	r18,r14,r13
   2b774:	7485803a 	cmpltu	r2,r14,r18
   2b778:	1a49c83a 	sub	r4,r3,r9
   2b77c:	2089c83a 	sub	r4,r4,r2
   2b780:	2080202c 	andhi	r2,r4,128
   2b784:	10002626 	beq	r2,zero,2b820 <__adddf3+0x894>
   2b788:	6ba5c83a 	sub	r18,r13,r14
   2b78c:	48c7c83a 	sub	r3,r9,r3
   2b790:	6c85803a 	cmpltu	r2,r13,r18
   2b794:	1889c83a 	sub	r4,r3,r2
   2b798:	3821883a 	mov	r16,r7
   2b79c:	003e4a06 	br	2b0c8 <__adddf3+0x13c>
   2b7a0:	4806977a 	slli	r3,r9,29
   2b7a4:	00880034 	movhi	r2,8192
   2b7a8:	10bfffc4 	addi	r2,r2,-1
   2b7ac:	3084703a 	and	r2,r6,r2
   2b7b0:	4810d0fa 	srli	r8,r9,3
   2b7b4:	10c4b03a 	or	r2,r2,r3
   2b7b8:	003edb06 	br	2b328 <__adddf3+0x39c>
   2b7bc:	4806977a 	slli	r3,r9,29
   2b7c0:	00880034 	movhi	r2,8192
   2b7c4:	10bfffc4 	addi	r2,r2,-1
   2b7c8:	3084703a 	and	r2,r6,r2
   2b7cc:	4810d0fa 	srli	r8,r9,3
   2b7d0:	10c4b03a 	or	r2,r2,r3
   2b7d4:	003ead06 	br	2b28c <__adddf3+0x300>
   2b7d8:	180a977a 	slli	r5,r3,29
   2b7dc:	1810d0fa 	srli	r8,r3,3
   2b7e0:	10002f26 	beq	r2,zero,2b8a0 <__adddf3+0x914>
   2b7e4:	00c80034 	movhi	r3,8192
   2b7e8:	18ffffc4 	addi	r3,r3,-1
   2b7ec:	20c4703a 	and	r2,r4,r3
   2b7f0:	4100022c 	andhi	r4,r8,8
   2b7f4:	1144b03a 	or	r2,r2,r5
   2b7f8:	203ecb26 	beq	r4,zero,2b328 <__adddf3+0x39c>
   2b7fc:	4808d0fa 	srli	r4,r9,3
   2b800:	2140022c 	andhi	r5,r4,8
   2b804:	283ec81e 	bne	r5,zero,2b328 <__adddf3+0x39c>
   2b808:	4812977a 	slli	r9,r9,29
   2b80c:	30c4703a 	and	r2,r6,r3
   2b810:	3821883a 	mov	r16,r7
   2b814:	1244b03a 	or	r2,r2,r9
   2b818:	2011883a 	mov	r8,r4
   2b81c:	003ec206 	br	2b328 <__adddf3+0x39c>
   2b820:	9104b03a 	or	r2,r18,r4
   2b824:	103e921e 	bne	r2,zero,2b270 <__adddf3+0x2e4>
   2b828:	0011883a 	mov	r8,zero
   2b82c:	100b883a 	mov	r5,r2
   2b830:	0021883a 	mov	r16,zero
   2b834:	003e9706 	br	2b294 <__adddf3+0x308>
   2b838:	4804977a 	slli	r2,r9,29
   2b83c:	00c80034 	movhi	r3,8192
   2b840:	18ffffc4 	addi	r3,r3,-1
   2b844:	30cc703a 	and	r6,r6,r3
   2b848:	4810d0fa 	srli	r8,r9,3
   2b84c:	1184b03a 	or	r2,r2,r6
   2b850:	003e9006 	br	2b294 <__adddf3+0x308>
   2b854:	7365883a 	add	r18,r14,r13
   2b858:	1a47883a 	add	r3,r3,r9
   2b85c:	9389803a 	cmpltu	r4,r18,r14
   2b860:	1909883a 	add	r4,r3,r4
   2b864:	2080202c 	andhi	r2,r4,128
   2b868:	103e8126 	beq	r2,zero,2b270 <__adddf3+0x2e4>
   2b86c:	00bfe034 	movhi	r2,65408
   2b870:	10bfffc4 	addi	r2,r2,-1
   2b874:	2088703a 	and	r4,r4,r2
   2b878:	04400044 	movi	r17,1
   2b87c:	003e7c06 	br	2b270 <__adddf3+0x2e4>
   2b880:	4804977a 	slli	r2,r9,29
   2b884:	00c80034 	movhi	r3,8192
   2b888:	18ffffc4 	addi	r3,r3,-1
   2b88c:	30cc703a 	and	r6,r6,r3
   2b890:	4810d0fa 	srli	r8,r9,3
   2b894:	1184b03a 	or	r2,r2,r6
   2b898:	3821883a 	mov	r16,r7
   2b89c:	003ea206 	br	2b328 <__adddf3+0x39c>
   2b8a0:	00880034 	movhi	r2,8192
   2b8a4:	10bfffc4 	addi	r2,r2,-1
   2b8a8:	2084703a 	and	r2,r4,r2
   2b8ac:	1144b03a 	or	r2,r2,r5
   2b8b0:	003e9d06 	br	2b328 <__adddf3+0x39c>
   2b8b4:	293ff804 	addi	r4,r5,-32
   2b8b8:	29800820 	cmpeqi	r6,r5,32
   2b8bc:	1908d83a 	srl	r4,r3,r4
   2b8c0:	3000041e 	bne	r6,zero,2b8d4 <__adddf3+0x948>
   2b8c4:	01801004 	movi	r6,64
   2b8c8:	314bc83a 	sub	r5,r6,r5
   2b8cc:	1946983a 	sll	r3,r3,r5
   2b8d0:	70dcb03a 	or	r14,r14,r3
   2b8d4:	7024c03a 	cmpne	r18,r14,zero
   2b8d8:	9124b03a 	or	r18,r18,r4
   2b8dc:	003eae06 	br	2b398 <__adddf3+0x40c>
   2b8e0:	7365883a 	add	r18,r14,r13
   2b8e4:	1a47883a 	add	r3,r3,r9
   2b8e8:	9345803a 	cmpltu	r2,r18,r13
   2b8ec:	1889883a 	add	r4,r3,r2
   2b8f0:	003e5c06 	br	2b264 <__adddf3+0x2d8>
   2b8f4:	0005883a 	mov	r2,zero
   2b8f8:	0141ffc4 	movi	r5,2047
   2b8fc:	0007883a 	mov	r3,zero
   2b900:	003e0806 	br	2b124 <__adddf3+0x198>

0002b904 <__divdf3>:
   2b904:	2810d53a 	srli	r8,r5,20
   2b908:	defff004 	addi	sp,sp,-64
   2b90c:	dc000615 	stw	r16,24(sp)
   2b910:	04000434 	movhi	r16,16
   2b914:	df000e15 	stw	fp,56(sp)
   2b918:	ddc00d15 	stw	r23,52(sp)
   2b91c:	dd800c15 	stw	r22,48(sp)
   2b920:	dd000a15 	stw	r20,40(sp)
   2b924:	843fffc4 	addi	r16,r16,-1
   2b928:	dfc00f15 	stw	ra,60(sp)
   2b92c:	dd400b15 	stw	r21,44(sp)
   2b930:	dcc00915 	stw	r19,36(sp)
   2b934:	dc800815 	stw	r18,32(sp)
   2b938:	dc400715 	stw	r17,28(sp)
   2b93c:	4201ffcc 	andi	r8,r8,2047
   2b940:	282ed7fa 	srli	r23,r5,31
   2b944:	3039883a 	mov	fp,r6
   2b948:	382d883a 	mov	r22,r7
   2b94c:	2029883a 	mov	r20,r4
   2b950:	2c20703a 	and	r16,r5,r16
   2b954:	40005326 	beq	r8,zero,2baa4 <__divdf3+0x1a0>
   2b958:	4081ffe0 	cmpeqi	r2,r8,2047
   2b95c:	1000641e 	bne	r2,zero,2baf0 <__divdf3+0x1ec>
   2b960:	2026d77a 	srli	r19,r4,29
   2b964:	800a90fa 	slli	r5,r16,3
   2b968:	202890fa 	slli	r20,r4,3
   2b96c:	44bf0044 	addi	r18,r8,-1023
   2b970:	994ab03a 	or	r5,r19,r5
   2b974:	2cc02034 	orhi	r19,r5,128
   2b978:	0021883a 	mov	r16,zero
   2b97c:	0023883a 	mov	r17,zero
   2b980:	b010d53a 	srli	r8,r22,20
   2b984:	00c00434 	movhi	r3,16
   2b988:	18ffffc4 	addi	r3,r3,-1
   2b98c:	4201ffcc 	andi	r8,r8,2047
   2b990:	b02ad7fa 	srli	r21,r22,31
   2b994:	b0ec703a 	and	r22,r22,r3
   2b998:	40005c26 	beq	r8,zero,2bb0c <__divdf3+0x208>
   2b99c:	4081ffe0 	cmpeqi	r2,r8,2047
   2b9a0:	1000201e 	bne	r2,zero,2ba24 <__divdf3+0x120>
   2b9a4:	b00690fa 	slli	r3,r22,3
   2b9a8:	e004d77a 	srli	r2,fp,29
   2b9ac:	e01490fa 	slli	r10,fp,3
   2b9b0:	423f0044 	addi	r8,r8,-1023
   2b9b4:	10c6b03a 	or	r3,r2,r3
   2b9b8:	1d802034 	orhi	r22,r3,128
   2b9bc:	9225c83a 	sub	r18,r18,r8
   2b9c0:	0007883a 	mov	r3,zero
   2b9c4:	80800428 	cmpgeui	r2,r16,16
   2b9c8:	bd52f03a 	xor	r9,r23,r21
   2b9cc:	1000a81e 	bne	r2,zero,2bc70 <__divdf3+0x36c>
   2b9d0:	800c90ba 	slli	r6,r16,2
   2b9d4:	008000f4 	movhi	r2,3
   2b9d8:	3085883a 	add	r2,r6,r2
   2b9dc:	10ae7917 	ldw	r2,-17948(r2)
   2b9e0:	1000683a 	jmp	r2
   2b9e4:	0002bc70 	cmpltui	zero,zero,2801
   2b9e8:	0002ba94 	movui	zero,2794
   2b9ec:	0002ba40 	call	2ba4 <__alt_mem_onchip_memory-0x1d45c>
   2b9f0:	0002bbb8 	rdprs	zero,zero,2798
   2b9f4:	0002ba40 	call	2ba4 <__alt_mem_onchip_memory-0x1d45c>
   2b9f8:	0002bc14 	movui	zero,2800
   2b9fc:	0002ba40 	call	2ba4 <__alt_mem_onchip_memory-0x1d45c>
   2ba00:	0002bbb8 	rdprs	zero,zero,2798
   2ba04:	0002ba94 	movui	zero,2794
   2ba08:	0002ba94 	movui	zero,2794
   2ba0c:	0002bc14 	movui	zero,2800
   2ba10:	0002bbb8 	rdprs	zero,zero,2798
   2ba14:	0002bb50 	cmplti	zero,zero,2797
   2ba18:	0002bb50 	cmplti	zero,zero,2797
   2ba1c:	0002bb50 	cmplti	zero,zero,2797
   2ba20:	0002bc2c 	andhi	zero,zero,2800
   2ba24:	b714b03a 	or	r10,r22,fp
   2ba28:	94be0044 	addi	r18,r18,-2047
   2ba2c:	5000671e 	bne	r10,zero,2bbcc <__divdf3+0x2c8>
   2ba30:	84000094 	ori	r16,r16,2
   2ba34:	002d883a 	mov	r22,zero
   2ba38:	00c00084 	movi	r3,2
   2ba3c:	003fe106 	br	2b9c4 <__divdf3+0xc0>
   2ba40:	0007883a 	mov	r3,zero
   2ba44:	000b883a 	mov	r5,zero
   2ba48:	0029883a 	mov	r20,zero
   2ba4c:	1806953a 	slli	r3,r3,20
   2ba50:	4a403fcc 	andi	r9,r9,255
   2ba54:	481297fa 	slli	r9,r9,31
   2ba58:	1946b03a 	or	r3,r3,r5
   2ba5c:	a005883a 	mov	r2,r20
   2ba60:	1a46b03a 	or	r3,r3,r9
   2ba64:	dfc00f17 	ldw	ra,60(sp)
   2ba68:	df000e17 	ldw	fp,56(sp)
   2ba6c:	ddc00d17 	ldw	r23,52(sp)
   2ba70:	dd800c17 	ldw	r22,48(sp)
   2ba74:	dd400b17 	ldw	r21,44(sp)
   2ba78:	dd000a17 	ldw	r20,40(sp)
   2ba7c:	dcc00917 	ldw	r19,36(sp)
   2ba80:	dc800817 	ldw	r18,32(sp)
   2ba84:	dc400717 	ldw	r17,28(sp)
   2ba88:	dc000617 	ldw	r16,24(sp)
   2ba8c:	dec01004 	addi	sp,sp,64
   2ba90:	f800283a 	ret
   2ba94:	00c1ffc4 	movi	r3,2047
   2ba98:	000b883a 	mov	r5,zero
   2ba9c:	0029883a 	mov	r20,zero
   2baa0:	003fea06 	br	2ba4c <__divdf3+0x148>
   2baa4:	2426b03a 	or	r19,r4,r16
   2baa8:	2023883a 	mov	r17,r4
   2baac:	98004f26 	beq	r19,zero,2bbec <__divdf3+0x2e8>
   2bab0:	80017b26 	beq	r16,zero,2c0a0 <__divdf3+0x79c>
   2bab4:	8009883a 	mov	r4,r16
   2bab8:	002d7940 	call	2d794 <__clzsi2>
   2babc:	113ffd44 	addi	r4,r2,-11
   2bac0:	00c00744 	movi	r3,29
   2bac4:	14fffe04 	addi	r19,r2,-8
   2bac8:	1907c83a 	sub	r3,r3,r4
   2bacc:	84ca983a 	sll	r5,r16,r19
   2bad0:	88c6d83a 	srl	r3,r17,r3
   2bad4:	8ce8983a 	sll	r20,r17,r19
   2bad8:	1966b03a 	or	r19,r3,r5
   2badc:	023f0344 	movi	r8,-1011
   2bae0:	40a5c83a 	sub	r18,r8,r2
   2bae4:	0021883a 	mov	r16,zero
   2bae8:	0023883a 	mov	r17,zero
   2baec:	003fa406 	br	2b980 <__divdf3+0x7c>
   2baf0:	2426b03a 	or	r19,r4,r16
   2baf4:	9800421e 	bne	r19,zero,2bc00 <__divdf3+0x2fc>
   2baf8:	0029883a 	mov	r20,zero
   2bafc:	04000204 	movi	r16,8
   2bb00:	0481ffc4 	movi	r18,2047
   2bb04:	04400084 	movi	r17,2
   2bb08:	003f9d06 	br	2b980 <__divdf3+0x7c>
   2bb0c:	b714b03a 	or	r10,r22,fp
   2bb10:	50003226 	beq	r10,zero,2bbdc <__divdf3+0x2d8>
   2bb14:	b0016c26 	beq	r22,zero,2c0c8 <__divdf3+0x7c4>
   2bb18:	b009883a 	mov	r4,r22
   2bb1c:	002d7940 	call	2d794 <__clzsi2>
   2bb20:	117ffd44 	addi	r5,r2,-11
   2bb24:	01000744 	movi	r4,29
   2bb28:	12bffe04 	addi	r10,r2,-8
   2bb2c:	2149c83a 	sub	r4,r4,r5
   2bb30:	b286983a 	sll	r3,r22,r10
   2bb34:	e108d83a 	srl	r4,fp,r4
   2bb38:	e294983a 	sll	r10,fp,r10
   2bb3c:	20ecb03a 	or	r22,r4,r3
   2bb40:	1491883a 	add	r8,r2,r18
   2bb44:	4480fcc4 	addi	r18,r8,1011
   2bb48:	0007883a 	mov	r3,zero
   2bb4c:	003f9d06 	br	2b9c4 <__divdf3+0xc0>
   2bb50:	b813883a 	mov	r9,r23
   2bb54:	888000a0 	cmpeqi	r2,r17,2
   2bb58:	103fce1e 	bne	r2,zero,2ba94 <__divdf3+0x190>
   2bb5c:	888000e0 	cmpeqi	r2,r17,3
   2bb60:	1001ac1e 	bne	r2,zero,2c214 <__divdf3+0x910>
   2bb64:	88800060 	cmpeqi	r2,r17,1
   2bb68:	103fb51e 	bne	r2,zero,2ba40 <__divdf3+0x13c>
   2bb6c:	9440ffc4 	addi	r17,r18,1023
   2bb70:	04411c0e 	bge	zero,r17,2bfe4 <__divdf3+0x6e0>
   2bb74:	a08001cc 	andi	r2,r20,7
   2bb78:	1001831e 	bne	r2,zero,2c188 <__divdf3+0x884>
   2bb7c:	a008d0fa 	srli	r4,r20,3
   2bb80:	9880402c 	andhi	r2,r19,256
   2bb84:	10000426 	beq	r2,zero,2bb98 <__divdf3+0x294>
   2bb88:	00bfc034 	movhi	r2,65280
   2bb8c:	10bfffc4 	addi	r2,r2,-1
   2bb90:	98a6703a 	and	r19,r19,r2
   2bb94:	94410004 	addi	r17,r18,1024
   2bb98:	8881ffc8 	cmpgei	r2,r17,2047
   2bb9c:	103fbd1e 	bne	r2,zero,2ba94 <__divdf3+0x190>
   2bba0:	9828977a 	slli	r20,r19,29
   2bba4:	980a927a 	slli	r5,r19,9
   2bba8:	88c1ffcc 	andi	r3,r17,2047
   2bbac:	a128b03a 	or	r20,r20,r4
   2bbb0:	280ad33a 	srli	r5,r5,12
   2bbb4:	003fa506 	br	2ba4c <__divdf3+0x148>
   2bbb8:	a813883a 	mov	r9,r21
   2bbbc:	b027883a 	mov	r19,r22
   2bbc0:	5029883a 	mov	r20,r10
   2bbc4:	1823883a 	mov	r17,r3
   2bbc8:	003fe206 	br	2bb54 <__divdf3+0x250>
   2bbcc:	840000d4 	ori	r16,r16,3
   2bbd0:	e015883a 	mov	r10,fp
   2bbd4:	00c000c4 	movi	r3,3
   2bbd8:	003f7a06 	br	2b9c4 <__divdf3+0xc0>
   2bbdc:	84000054 	ori	r16,r16,1
   2bbe0:	002d883a 	mov	r22,zero
   2bbe4:	00c00044 	movi	r3,1
   2bbe8:	003f7606 	br	2b9c4 <__divdf3+0xc0>
   2bbec:	0029883a 	mov	r20,zero
   2bbf0:	04000104 	movi	r16,4
   2bbf4:	0025883a 	mov	r18,zero
   2bbf8:	04400044 	movi	r17,1
   2bbfc:	003f6006 	br	2b980 <__divdf3+0x7c>
   2bc00:	8027883a 	mov	r19,r16
   2bc04:	0481ffc4 	movi	r18,2047
   2bc08:	04000304 	movi	r16,12
   2bc0c:	044000c4 	movi	r17,3
   2bc10:	003f5b06 	br	2b980 <__divdf3+0x7c>
   2bc14:	01400434 	movhi	r5,16
   2bc18:	0013883a 	mov	r9,zero
   2bc1c:	297fffc4 	addi	r5,r5,-1
   2bc20:	053fffc4 	movi	r20,-1
   2bc24:	00c1ffc4 	movi	r3,2047
   2bc28:	003f8806 	br	2ba4c <__divdf3+0x148>
   2bc2c:	9880022c 	andhi	r2,r19,8
   2bc30:	10000926 	beq	r2,zero,2bc58 <__divdf3+0x354>
   2bc34:	b080022c 	andhi	r2,r22,8
   2bc38:	1000071e 	bne	r2,zero,2bc58 <__divdf3+0x354>
   2bc3c:	00800434 	movhi	r2,16
   2bc40:	b1400234 	orhi	r5,r22,8
   2bc44:	10bfffc4 	addi	r2,r2,-1
   2bc48:	288a703a 	and	r5,r5,r2
   2bc4c:	a813883a 	mov	r9,r21
   2bc50:	5029883a 	mov	r20,r10
   2bc54:	003ff306 	br	2bc24 <__divdf3+0x320>
   2bc58:	00800434 	movhi	r2,16
   2bc5c:	99400234 	orhi	r5,r19,8
   2bc60:	10bfffc4 	addi	r2,r2,-1
   2bc64:	288a703a 	and	r5,r5,r2
   2bc68:	b813883a 	mov	r9,r23
   2bc6c:	003fed06 	br	2bc24 <__divdf3+0x320>
   2bc70:	b4c10536 	bltu	r22,r19,2c088 <__divdf3+0x784>
   2bc74:	b4c10326 	beq	r22,r19,2c084 <__divdf3+0x780>
   2bc78:	94bfffc4 	addi	r18,r18,-1
   2bc7c:	a039883a 	mov	fp,r20
   2bc80:	9821883a 	mov	r16,r19
   2bc84:	0023883a 	mov	r17,zero
   2bc88:	b006923a 	slli	r3,r22,8
   2bc8c:	502cd63a 	srli	r22,r10,24
   2bc90:	8009883a 	mov	r4,r16
   2bc94:	182ed43a 	srli	r23,r3,16
   2bc98:	b0ecb03a 	or	r22,r22,r3
   2bc9c:	da400015 	stw	r9,0(sp)
   2bca0:	b80b883a 	mov	r5,r23
   2bca4:	502a923a 	slli	r21,r10,8
   2bca8:	b53fffcc 	andi	r20,r22,65535
   2bcac:	002aea40 	call	2aea4 <__udivsi3>
   2bcb0:	100b883a 	mov	r5,r2
   2bcb4:	a009883a 	mov	r4,r20
   2bcb8:	1027883a 	mov	r19,r2
   2bcbc:	002af640 	call	2af64 <__mulsi3>
   2bcc0:	8009883a 	mov	r4,r16
   2bcc4:	b80b883a 	mov	r5,r23
   2bcc8:	1021883a 	mov	r16,r2
   2bccc:	002af080 	call	2af08 <__umodsi3>
   2bcd0:	1004943a 	slli	r2,r2,16
   2bcd4:	e008d43a 	srli	r4,fp,16
   2bcd8:	da400017 	ldw	r9,0(sp)
   2bcdc:	2088b03a 	or	r4,r4,r2
   2bce0:	2400042e 	bgeu	r4,r16,2bcf4 <__divdf3+0x3f0>
   2bce4:	2589883a 	add	r4,r4,r22
   2bce8:	98bfffc4 	addi	r2,r19,-1
   2bcec:	2581082e 	bgeu	r4,r22,2c110 <__divdf3+0x80c>
   2bcf0:	1027883a 	mov	r19,r2
   2bcf4:	2421c83a 	sub	r16,r4,r16
   2bcf8:	b80b883a 	mov	r5,r23
   2bcfc:	8009883a 	mov	r4,r16
   2bd00:	da400215 	stw	r9,8(sp)
   2bd04:	002aea40 	call	2aea4 <__udivsi3>
   2bd08:	100b883a 	mov	r5,r2
   2bd0c:	a009883a 	mov	r4,r20
   2bd10:	d8800115 	stw	r2,4(sp)
   2bd14:	002af640 	call	2af64 <__mulsi3>
   2bd18:	b80b883a 	mov	r5,r23
   2bd1c:	8009883a 	mov	r4,r16
   2bd20:	d8800015 	stw	r2,0(sp)
   2bd24:	002af080 	call	2af08 <__umodsi3>
   2bd28:	100c943a 	slli	r6,r2,16
   2bd2c:	d8c00017 	ldw	r3,0(sp)
   2bd30:	e73fffcc 	andi	fp,fp,65535
   2bd34:	e18cb03a 	or	r6,fp,r6
   2bd38:	d9c00117 	ldw	r7,4(sp)
   2bd3c:	da400217 	ldw	r9,8(sp)
   2bd40:	30c0042e 	bgeu	r6,r3,2bd54 <__divdf3+0x450>
   2bd44:	358d883a 	add	r6,r6,r22
   2bd48:	38bfffc4 	addi	r2,r7,-1
   2bd4c:	3580ec2e 	bgeu	r6,r22,2c100 <__divdf3+0x7fc>
   2bd50:	100f883a 	mov	r7,r2
   2bd54:	9826943a 	slli	r19,r19,16
   2bd58:	af3fffcc 	andi	fp,r21,65535
   2bd5c:	30c7c83a 	sub	r3,r6,r3
   2bd60:	99e6b03a 	or	r19,r19,r7
   2bd64:	980ed43a 	srli	r7,r19,16
   2bd68:	9abfffcc 	andi	r10,r19,65535
   2bd6c:	5009883a 	mov	r4,r10
   2bd70:	e00b883a 	mov	r5,fp
   2bd74:	da400515 	stw	r9,20(sp)
   2bd78:	d8c00315 	stw	r3,12(sp)
   2bd7c:	da800415 	stw	r10,16(sp)
   2bd80:	d9c00015 	stw	r7,0(sp)
   2bd84:	002af640 	call	2af64 <__mulsi3>
   2bd88:	d9c00017 	ldw	r7,0(sp)
   2bd8c:	e00b883a 	mov	r5,fp
   2bd90:	d8800215 	stw	r2,8(sp)
   2bd94:	3809883a 	mov	r4,r7
   2bd98:	002af640 	call	2af64 <__mulsi3>
   2bd9c:	d9c00017 	ldw	r7,0(sp)
   2bda0:	a820d43a 	srli	r16,r21,16
   2bda4:	d8800115 	stw	r2,4(sp)
   2bda8:	3809883a 	mov	r4,r7
   2bdac:	800b883a 	mov	r5,r16
   2bdb0:	002af640 	call	2af64 <__mulsi3>
   2bdb4:	da800417 	ldw	r10,16(sp)
   2bdb8:	8009883a 	mov	r4,r16
   2bdbc:	d8800015 	stw	r2,0(sp)
   2bdc0:	500b883a 	mov	r5,r10
   2bdc4:	002af640 	call	2af64 <__mulsi3>
   2bdc8:	d9800217 	ldw	r6,8(sp)
   2bdcc:	d9c00117 	ldw	r7,4(sp)
   2bdd0:	da000017 	ldw	r8,0(sp)
   2bdd4:	3008d43a 	srli	r4,r6,16
   2bdd8:	11c5883a 	add	r2,r2,r7
   2bddc:	d8c00317 	ldw	r3,12(sp)
   2bde0:	2089883a 	add	r4,r4,r2
   2bde4:	da400517 	ldw	r9,20(sp)
   2bde8:	21c0022e 	bgeu	r4,r7,2bdf4 <__divdf3+0x4f0>
   2bdec:	00800074 	movhi	r2,1
   2bdf0:	4091883a 	add	r8,r8,r2
   2bdf4:	200ad43a 	srli	r5,r4,16
   2bdf8:	2008943a 	slli	r4,r4,16
   2bdfc:	31bfffcc 	andi	r6,r6,65535
   2be00:	2a0b883a 	add	r5,r5,r8
   2be04:	218d883a 	add	r6,r4,r6
   2be08:	19409436 	bltu	r3,r5,2c05c <__divdf3+0x758>
   2be0c:	19409226 	beq	r3,r5,2c058 <__divdf3+0x754>
   2be10:	898dc83a 	sub	r6,r17,r6
   2be14:	89a3803a 	cmpltu	r17,r17,r6
   2be18:	1947c83a 	sub	r3,r3,r5
   2be1c:	1c47c83a 	sub	r3,r3,r17
   2be20:	9440ffc4 	addi	r17,r18,1023
   2be24:	b0c0d326 	beq	r22,r3,2c174 <__divdf3+0x870>
   2be28:	1809883a 	mov	r4,r3
   2be2c:	b80b883a 	mov	r5,r23
   2be30:	d9800315 	stw	r6,12(sp)
   2be34:	da400215 	stw	r9,8(sp)
   2be38:	d8c00015 	stw	r3,0(sp)
   2be3c:	002aea40 	call	2aea4 <__udivsi3>
   2be40:	100b883a 	mov	r5,r2
   2be44:	a009883a 	mov	r4,r20
   2be48:	d8800115 	stw	r2,4(sp)
   2be4c:	002af640 	call	2af64 <__mulsi3>
   2be50:	d8c00017 	ldw	r3,0(sp)
   2be54:	b80b883a 	mov	r5,r23
   2be58:	d8800015 	stw	r2,0(sp)
   2be5c:	1809883a 	mov	r4,r3
   2be60:	002af080 	call	2af08 <__umodsi3>
   2be64:	d9800317 	ldw	r6,12(sp)
   2be68:	1006943a 	slli	r3,r2,16
   2be6c:	da000017 	ldw	r8,0(sp)
   2be70:	3008d43a 	srli	r4,r6,16
   2be74:	d9c00117 	ldw	r7,4(sp)
   2be78:	da400217 	ldw	r9,8(sp)
   2be7c:	20c6b03a 	or	r3,r4,r3
   2be80:	1a00062e 	bgeu	r3,r8,2be9c <__divdf3+0x598>
   2be84:	1d87883a 	add	r3,r3,r22
   2be88:	38bfffc4 	addi	r2,r7,-1
   2be8c:	1d80c836 	bltu	r3,r22,2c1b0 <__divdf3+0x8ac>
   2be90:	1a00c72e 	bgeu	r3,r8,2c1b0 <__divdf3+0x8ac>
   2be94:	39ffff84 	addi	r7,r7,-2
   2be98:	1d87883a 	add	r3,r3,r22
   2be9c:	1a07c83a 	sub	r3,r3,r8
   2bea0:	1809883a 	mov	r4,r3
   2bea4:	b80b883a 	mov	r5,r23
   2bea8:	d9800415 	stw	r6,16(sp)
   2beac:	da400315 	stw	r9,12(sp)
   2beb0:	d9c00215 	stw	r7,8(sp)
   2beb4:	d8c00115 	stw	r3,4(sp)
   2beb8:	002aea40 	call	2aea4 <__udivsi3>
   2bebc:	100b883a 	mov	r5,r2
   2bec0:	a009883a 	mov	r4,r20
   2bec4:	d8800015 	stw	r2,0(sp)
   2bec8:	002af640 	call	2af64 <__mulsi3>
   2becc:	d8c00117 	ldw	r3,4(sp)
   2bed0:	b80b883a 	mov	r5,r23
   2bed4:	102f883a 	mov	r23,r2
   2bed8:	1809883a 	mov	r4,r3
   2bedc:	002af080 	call	2af08 <__umodsi3>
   2bee0:	d9800417 	ldw	r6,16(sp)
   2bee4:	1004943a 	slli	r2,r2,16
   2bee8:	da000017 	ldw	r8,0(sp)
   2beec:	31bfffcc 	andi	r6,r6,65535
   2bef0:	308cb03a 	or	r6,r6,r2
   2bef4:	d9c00217 	ldw	r7,8(sp)
   2bef8:	da400317 	ldw	r9,12(sp)
   2befc:	35c0062e 	bgeu	r6,r23,2bf18 <__divdf3+0x614>
   2bf00:	358d883a 	add	r6,r6,r22
   2bf04:	40bfffc4 	addi	r2,r8,-1
   2bf08:	3580a736 	bltu	r6,r22,2c1a8 <__divdf3+0x8a4>
   2bf0c:	35c0a62e 	bgeu	r6,r23,2c1a8 <__divdf3+0x8a4>
   2bf10:	423fff84 	addi	r8,r8,-2
   2bf14:	358d883a 	add	r6,r6,r22
   2bf18:	3828943a 	slli	r20,r7,16
   2bf1c:	35d5c83a 	sub	r10,r6,r23
   2bf20:	e009883a 	mov	r4,fp
   2bf24:	a228b03a 	or	r20,r20,r8
   2bf28:	a1ffffcc 	andi	r7,r20,65535
   2bf2c:	a02ed43a 	srli	r23,r20,16
   2bf30:	380b883a 	mov	r5,r7
   2bf34:	da400315 	stw	r9,12(sp)
   2bf38:	da800215 	stw	r10,8(sp)
   2bf3c:	d9c00115 	stw	r7,4(sp)
   2bf40:	002af640 	call	2af64 <__mulsi3>
   2bf44:	e00b883a 	mov	r5,fp
   2bf48:	b809883a 	mov	r4,r23
   2bf4c:	1039883a 	mov	fp,r2
   2bf50:	002af640 	call	2af64 <__mulsi3>
   2bf54:	8009883a 	mov	r4,r16
   2bf58:	b80b883a 	mov	r5,r23
   2bf5c:	d8800015 	stw	r2,0(sp)
   2bf60:	002af640 	call	2af64 <__mulsi3>
   2bf64:	d9c00117 	ldw	r7,4(sp)
   2bf68:	8009883a 	mov	r4,r16
   2bf6c:	1021883a 	mov	r16,r2
   2bf70:	380b883a 	mov	r5,r7
   2bf74:	002af640 	call	2af64 <__mulsi3>
   2bf78:	d9800017 	ldw	r6,0(sp)
   2bf7c:	e006d43a 	srli	r3,fp,16
   2bf80:	da800217 	ldw	r10,8(sp)
   2bf84:	1185883a 	add	r2,r2,r6
   2bf88:	1887883a 	add	r3,r3,r2
   2bf8c:	da400317 	ldw	r9,12(sp)
   2bf90:	1980022e 	bgeu	r3,r6,2bf9c <__divdf3+0x698>
   2bf94:	00800074 	movhi	r2,1
   2bf98:	80a1883a 	add	r16,r16,r2
   2bf9c:	1808d43a 	srli	r4,r3,16
   2bfa0:	1806943a 	slli	r3,r3,16
   2bfa4:	e73fffcc 	andi	fp,fp,65535
   2bfa8:	2409883a 	add	r4,r4,r16
   2bfac:	1f07883a 	add	r3,r3,fp
   2bfb0:	51000436 	bltu	r10,r4,2bfc4 <__divdf3+0x6c0>
   2bfb4:	51000226 	beq	r10,r4,2bfc0 <__divdf3+0x6bc>
   2bfb8:	a5000054 	ori	r20,r20,1
   2bfbc:	003eec06 	br	2bb70 <__divdf3+0x26c>
   2bfc0:	183eeb26 	beq	r3,zero,2bb70 <__divdf3+0x26c>
   2bfc4:	b28d883a 	add	r6,r22,r10
   2bfc8:	a0bfffc4 	addi	r2,r20,-1
   2bfcc:	35806536 	bltu	r6,r22,2c164 <__divdf3+0x860>
   2bfd0:	31008036 	bltu	r6,r4,2c1d4 <__divdf3+0x8d0>
   2bfd4:	31009426 	beq	r6,r4,2c228 <__divdf3+0x924>
   2bfd8:	1029883a 	mov	r20,r2
   2bfdc:	003ff606 	br	2bfb8 <__divdf3+0x6b4>
   2bfe0:	053fffc4 	movi	r20,-1
   2bfe4:	01400044 	movi	r5,1
   2bfe8:	2c4bc83a 	sub	r5,r5,r17
   2bfec:	28800e48 	cmpgei	r2,r5,57
   2bff0:	103e931e 	bne	r2,zero,2ba40 <__divdf3+0x13c>
   2bff4:	28800808 	cmpgei	r2,r5,32
   2bff8:	1000491e 	bne	r2,zero,2c120 <__divdf3+0x81c>
   2bffc:	92010784 	addi	r8,r18,1054
   2c000:	9a04983a 	sll	r2,r19,r8
   2c004:	a146d83a 	srl	r3,r20,r5
   2c008:	a210983a 	sll	r8,r20,r8
   2c00c:	994ad83a 	srl	r5,r19,r5
   2c010:	10e8b03a 	or	r20,r2,r3
   2c014:	4010c03a 	cmpne	r8,r8,zero
   2c018:	a228b03a 	or	r20,r20,r8
   2c01c:	a08001cc 	andi	r2,r20,7
   2c020:	10000726 	beq	r2,zero,2c040 <__divdf3+0x73c>
   2c024:	a08003cc 	andi	r2,r20,15
   2c028:	10800120 	cmpeqi	r2,r2,4
   2c02c:	1000041e 	bne	r2,zero,2c040 <__divdf3+0x73c>
   2c030:	a0800104 	addi	r2,r20,4
   2c034:	1529803a 	cmpltu	r20,r2,r20
   2c038:	2d0b883a 	add	r5,r5,r20
   2c03c:	1029883a 	mov	r20,r2
   2c040:	2880202c 	andhi	r2,r5,128
   2c044:	10006f26 	beq	r2,zero,2c204 <__divdf3+0x900>
   2c048:	00c00044 	movi	r3,1
   2c04c:	000b883a 	mov	r5,zero
   2c050:	0029883a 	mov	r20,zero
   2c054:	003e7d06 	br	2ba4c <__divdf3+0x148>
   2c058:	89bf6d2e 	bgeu	r17,r6,2be10 <__divdf3+0x50c>
   2c05c:	8d63883a 	add	r17,r17,r21
   2c060:	8d45803a 	cmpltu	r2,r17,r21
   2c064:	1585883a 	add	r2,r2,r22
   2c068:	1887883a 	add	r3,r3,r2
   2c06c:	98bfffc4 	addi	r2,r19,-1
   2c070:	b0c0202e 	bgeu	r22,r3,2c0f4 <__divdf3+0x7f0>
   2c074:	19405136 	bltu	r3,r5,2c1bc <__divdf3+0x8b8>
   2c078:	28c04f26 	beq	r5,r3,2c1b8 <__divdf3+0x8b4>
   2c07c:	1027883a 	mov	r19,r2
   2c080:	003f6306 	br	2be10 <__divdf3+0x50c>
   2c084:	a2befc36 	bltu	r20,r10,2bc78 <__divdf3+0x374>
   2c088:	983897fa 	slli	fp,r19,31
   2c08c:	a004d07a 	srli	r2,r20,1
   2c090:	9820d07a 	srli	r16,r19,1
   2c094:	a02297fa 	slli	r17,r20,31
   2c098:	e0b8b03a 	or	fp,fp,r2
   2c09c:	003efa06 	br	2bc88 <__divdf3+0x384>
   2c0a0:	002d7940 	call	2d794 <__clzsi2>
   2c0a4:	11000544 	addi	r4,r2,21
   2c0a8:	20c00748 	cmpgei	r3,r4,29
   2c0ac:	100b883a 	mov	r5,r2
   2c0b0:	10800804 	addi	r2,r2,32
   2c0b4:	183e8226 	beq	r3,zero,2bac0 <__divdf3+0x1bc>
   2c0b8:	297ffe04 	addi	r5,r5,-8
   2c0bc:	a166983a 	sll	r19,r20,r5
   2c0c0:	0029883a 	mov	r20,zero
   2c0c4:	003e8506 	br	2badc <__divdf3+0x1d8>
   2c0c8:	e009883a 	mov	r4,fp
   2c0cc:	002d7940 	call	2d794 <__clzsi2>
   2c0d0:	11400544 	addi	r5,r2,21
   2c0d4:	29000748 	cmpgei	r4,r5,29
   2c0d8:	1007883a 	mov	r3,r2
   2c0dc:	10800804 	addi	r2,r2,32
   2c0e0:	203e9026 	beq	r4,zero,2bb24 <__divdf3+0x220>
   2c0e4:	18fffe04 	addi	r3,r3,-8
   2c0e8:	e0ec983a 	sll	r22,fp,r3
   2c0ec:	0015883a 	mov	r10,zero
   2c0f0:	003e9306 	br	2bb40 <__divdf3+0x23c>
   2c0f4:	b0ffe11e 	bne	r22,r3,2c07c <__divdf3+0x778>
   2c0f8:	8d7fe036 	bltu	r17,r21,2c07c <__divdf3+0x778>
   2c0fc:	003fdd06 	br	2c074 <__divdf3+0x770>
   2c100:	30ff132e 	bgeu	r6,r3,2bd50 <__divdf3+0x44c>
   2c104:	39ffff84 	addi	r7,r7,-2
   2c108:	358d883a 	add	r6,r6,r22
   2c10c:	003f1106 	br	2bd54 <__divdf3+0x450>
   2c110:	243ef72e 	bgeu	r4,r16,2bcf0 <__divdf3+0x3ec>
   2c114:	9cffff84 	addi	r19,r19,-2
   2c118:	2589883a 	add	r4,r4,r22
   2c11c:	003ef506 	br	2bcf4 <__divdf3+0x3f0>
   2c120:	00fff844 	movi	r3,-31
   2c124:	1c47c83a 	sub	r3,r3,r17
   2c128:	29400820 	cmpeqi	r5,r5,32
   2c12c:	98c6d83a 	srl	r3,r19,r3
   2c130:	2800031e 	bne	r5,zero,2c140 <__divdf3+0x83c>
   2c134:	91410f84 	addi	r5,r18,1086
   2c138:	994a983a 	sll	r5,r19,r5
   2c13c:	a168b03a 	or	r20,r20,r5
   2c140:	a028c03a 	cmpne	r20,r20,zero
   2c144:	a0e8b03a 	or	r20,r20,r3
   2c148:	a4c001cc 	andi	r19,r20,7
   2c14c:	9800291e 	bne	r19,zero,2c1f4 <__divdf3+0x8f0>
   2c150:	000b883a 	mov	r5,zero
   2c154:	a028d0fa 	srli	r20,r20,3
   2c158:	0007883a 	mov	r3,zero
   2c15c:	a4e8b03a 	or	r20,r20,r19
   2c160:	003e3a06 	br	2ba4c <__divdf3+0x148>
   2c164:	1029883a 	mov	r20,r2
   2c168:	313f931e 	bne	r6,r4,2bfb8 <__divdf3+0x6b4>
   2c16c:	1d7f921e 	bne	r3,r21,2bfb8 <__divdf3+0x6b4>
   2c170:	003e7f06 	br	2bb70 <__divdf3+0x26c>
   2c174:	047f9a0e 	bge	zero,r17,2bfe0 <__divdf3+0x6dc>
   2c178:	0009883a 	mov	r4,zero
   2c17c:	05000044 	movi	r20,1
   2c180:	9d27883a 	add	r19,r19,r20
   2c184:	003e7e06 	br	2bb80 <__divdf3+0x27c>
   2c188:	a08003cc 	andi	r2,r20,15
   2c18c:	10800118 	cmpnei	r2,r2,4
   2c190:	103e7a26 	beq	r2,zero,2bb7c <__divdf3+0x278>
   2c194:	a1000104 	addi	r4,r20,4
   2c198:	00bffec4 	movi	r2,-5
   2c19c:	2008d0fa 	srli	r4,r4,3
   2c1a0:	1529803a 	cmpltu	r20,r2,r20
   2c1a4:	003ff606 	br	2c180 <__divdf3+0x87c>
   2c1a8:	1011883a 	mov	r8,r2
   2c1ac:	003f5a06 	br	2bf18 <__divdf3+0x614>
   2c1b0:	100f883a 	mov	r7,r2
   2c1b4:	003f3906 	br	2be9c <__divdf3+0x598>
   2c1b8:	89bfb02e 	bgeu	r17,r6,2c07c <__divdf3+0x778>
   2c1bc:	8d63883a 	add	r17,r17,r21
   2c1c0:	8d45803a 	cmpltu	r2,r17,r21
   2c1c4:	1585883a 	add	r2,r2,r22
   2c1c8:	9cffff84 	addi	r19,r19,-2
   2c1cc:	1887883a 	add	r3,r3,r2
   2c1d0:	003f0f06 	br	2be10 <__divdf3+0x50c>
   2c1d4:	ad45883a 	add	r2,r21,r21
   2c1d8:	156b803a 	cmpltu	r21,r2,r21
   2c1dc:	adad883a 	add	r22,r21,r22
   2c1e0:	358d883a 	add	r6,r6,r22
   2c1e4:	a53fff84 	addi	r20,r20,-2
   2c1e8:	102b883a 	mov	r21,r2
   2c1ec:	313fdf26 	beq	r6,r4,2c16c <__divdf3+0x868>
   2c1f0:	003f7106 	br	2bfb8 <__divdf3+0x6b4>
   2c1f4:	a08003cc 	andi	r2,r20,15
   2c1f8:	10800118 	cmpnei	r2,r2,4
   2c1fc:	000b883a 	mov	r5,zero
   2c200:	103f8b1e 	bne	r2,zero,2c030 <__divdf3+0x72c>
   2c204:	2804927a 	slli	r2,r5,9
   2c208:	2826977a 	slli	r19,r5,29
   2c20c:	100ad33a 	srli	r5,r2,12
   2c210:	003fd006 	br	2c154 <__divdf3+0x850>
   2c214:	00800434 	movhi	r2,16
   2c218:	99400234 	orhi	r5,r19,8
   2c21c:	10bfffc4 	addi	r2,r2,-1
   2c220:	288a703a 	and	r5,r5,r2
   2c224:	003e7f06 	br	2bc24 <__divdf3+0x320>
   2c228:	a8ffea36 	bltu	r21,r3,2c1d4 <__divdf3+0x8d0>
   2c22c:	1029883a 	mov	r20,r2
   2c230:	1d7f611e 	bne	r3,r21,2bfb8 <__divdf3+0x6b4>
   2c234:	003e4e06 	br	2bb70 <__divdf3+0x26c>

0002c238 <__eqdf2>:
   2c238:	2810d53a 	srli	r8,r5,20
   2c23c:	3806d53a 	srli	r3,r7,20
   2c240:	00800434 	movhi	r2,16
   2c244:	4201ffcc 	andi	r8,r8,2047
   2c248:	10bfffc4 	addi	r2,r2,-1
   2c24c:	4241ffd8 	cmpnei	r9,r8,2047
   2c250:	2814d7fa 	srli	r10,r5,31
   2c254:	3816d7fa 	srli	r11,r7,31
   2c258:	288a703a 	and	r5,r5,r2
   2c25c:	388e703a 	and	r7,r7,r2
   2c260:	1881ffcc 	andi	r2,r3,2047
   2c264:	48000626 	beq	r9,zero,2c280 <__eqdf2+0x48>
   2c268:	10c1ffe0 	cmpeqi	r3,r2,2047
   2c26c:	1800021e 	bne	r3,zero,2c278 <__eqdf2+0x40>
   2c270:	4080011e 	bne	r8,r2,2c278 <__eqdf2+0x40>
   2c274:	29c00826 	beq	r5,r7,2c298 <__eqdf2+0x60>
   2c278:	00800044 	movi	r2,1
   2c27c:	f800283a 	ret
   2c280:	2906b03a 	or	r3,r5,r4
   2c284:	183ffc1e 	bne	r3,zero,2c278 <__eqdf2+0x40>
   2c288:	1081ffd8 	cmpnei	r2,r2,2047
   2c28c:	103ffa1e 	bne	r2,zero,2c278 <__eqdf2+0x40>
   2c290:	398eb03a 	or	r7,r7,r6
   2c294:	383ff81e 	bne	r7,zero,2c278 <__eqdf2+0x40>
   2c298:	21bff71e 	bne	r4,r6,2c278 <__eqdf2+0x40>
   2c29c:	52c00426 	beq	r10,r11,2c2b0 <__eqdf2+0x78>
   2c2a0:	403ff51e 	bne	r8,zero,2c278 <__eqdf2+0x40>
   2c2a4:	290ab03a 	or	r5,r5,r4
   2c2a8:	2804c03a 	cmpne	r2,r5,zero
   2c2ac:	f800283a 	ret
   2c2b0:	0005883a 	mov	r2,zero
   2c2b4:	f800283a 	ret

0002c2b8 <__gedf2>:
   2c2b8:	2810d53a 	srli	r8,r5,20
   2c2bc:	3812d53a 	srli	r9,r7,20
   2c2c0:	00c00434 	movhi	r3,16
   2c2c4:	4201ffcc 	andi	r8,r8,2047
   2c2c8:	18ffffc4 	addi	r3,r3,-1
   2c2cc:	4281ffd8 	cmpnei	r10,r8,2047
   2c2d0:	2816d7fa 	srli	r11,r5,31
   2c2d4:	3804d7fa 	srli	r2,r7,31
   2c2d8:	28ca703a 	and	r5,r5,r3
   2c2dc:	38ce703a 	and	r7,r7,r3
   2c2e0:	48c1ffcc 	andi	r3,r9,2047
   2c2e4:	50000b26 	beq	r10,zero,2c314 <__gedf2+0x5c>
   2c2e8:	1a41ffd8 	cmpnei	r9,r3,2047
   2c2ec:	48000d26 	beq	r9,zero,2c324 <__gedf2+0x6c>
   2c2f0:	4000191e 	bne	r8,zero,2c358 <__gedf2+0xa0>
   2c2f4:	2914b03a 	or	r10,r5,r4
   2c2f8:	5013003a 	cmpeq	r9,r10,zero
   2c2fc:	1800131e 	bne	r3,zero,2c34c <__gedf2+0x94>
   2c300:	3998b03a 	or	r12,r7,r6
   2c304:	6000111e 	bne	r12,zero,2c34c <__gedf2+0x94>
   2c308:	50000a1e 	bne	r10,zero,2c334 <__gedf2+0x7c>
   2c30c:	0005883a 	mov	r2,zero
   2c310:	f800283a 	ret
   2c314:	2912b03a 	or	r9,r5,r4
   2c318:	48001e1e 	bne	r9,zero,2c394 <__gedf2+0xdc>
   2c31c:	1a41ffe0 	cmpeqi	r9,r3,2047
   2c320:	48000d26 	beq	r9,zero,2c358 <__gedf2+0xa0>
   2c324:	3992b03a 	or	r9,r7,r6
   2c328:	48001a1e 	bne	r9,zero,2c394 <__gedf2+0xdc>
   2c32c:	40000526 	beq	r8,zero,2c344 <__gedf2+0x8c>
   2c330:	58800d26 	beq	r11,r2,2c368 <__gedf2+0xb0>
   2c334:	00800044 	movi	r2,1
   2c338:	58000626 	beq	r11,zero,2c354 <__gedf2+0x9c>
   2c33c:	00bfffc4 	movi	r2,-1
   2c340:	f800283a 	ret
   2c344:	2912b03a 	or	r9,r5,r4
   2c348:	4813003a 	cmpeq	r9,r9,zero
   2c34c:	483ff826 	beq	r9,zero,2c330 <__gedf2+0x78>
   2c350:	103ffa26 	beq	r2,zero,2c33c <__gedf2+0x84>
   2c354:	f800283a 	ret
   2c358:	183ff51e 	bne	r3,zero,2c330 <__gedf2+0x78>
   2c35c:	3992b03a 	or	r9,r7,r6
   2c360:	483ff31e 	bne	r9,zero,2c330 <__gedf2+0x78>
   2c364:	003ff306 	br	2c334 <__gedf2+0x7c>
   2c368:	1a000716 	blt	r3,r8,2c388 <__gedf2+0xd0>
   2c36c:	40fff816 	blt	r8,r3,2c350 <__gedf2+0x98>
   2c370:	397ff036 	bltu	r7,r5,2c334 <__gedf2+0x7c>
   2c374:	29c00926 	beq	r5,r7,2c39c <__gedf2+0xe4>
   2c378:	29ffe42e 	bgeu	r5,r7,2c30c <__gedf2+0x54>
   2c37c:	583fef26 	beq	r11,zero,2c33c <__gedf2+0x84>
   2c380:	5805883a 	mov	r2,r11
   2c384:	f800283a 	ret
   2c388:	103fec1e 	bne	r2,zero,2c33c <__gedf2+0x84>
   2c38c:	00800044 	movi	r2,1
   2c390:	f800283a 	ret
   2c394:	00bfff84 	movi	r2,-2
   2c398:	f800283a 	ret
   2c39c:	313fe536 	bltu	r6,r4,2c334 <__gedf2+0x7c>
   2c3a0:	21bfda2e 	bgeu	r4,r6,2c30c <__gedf2+0x54>
   2c3a4:	003ff506 	br	2c37c <__gedf2+0xc4>

0002c3a8 <__ledf2>:
   2c3a8:	2810d53a 	srli	r8,r5,20
   2c3ac:	3812d53a 	srli	r9,r7,20
   2c3b0:	00c00434 	movhi	r3,16
   2c3b4:	4201ffcc 	andi	r8,r8,2047
   2c3b8:	18ffffc4 	addi	r3,r3,-1
   2c3bc:	4281ffd8 	cmpnei	r10,r8,2047
   2c3c0:	2816d7fa 	srli	r11,r5,31
   2c3c4:	3804d7fa 	srli	r2,r7,31
   2c3c8:	28ca703a 	and	r5,r5,r3
   2c3cc:	38ce703a 	and	r7,r7,r3
   2c3d0:	48c1ffcc 	andi	r3,r9,2047
   2c3d4:	50000b26 	beq	r10,zero,2c404 <__ledf2+0x5c>
   2c3d8:	1a41ffd8 	cmpnei	r9,r3,2047
   2c3dc:	48000d26 	beq	r9,zero,2c414 <__ledf2+0x6c>
   2c3e0:	40001b1e 	bne	r8,zero,2c450 <__ledf2+0xa8>
   2c3e4:	2914b03a 	or	r10,r5,r4
   2c3e8:	5013003a 	cmpeq	r9,r10,zero
   2c3ec:	18000e1e 	bne	r3,zero,2c428 <__ledf2+0x80>
   2c3f0:	3998b03a 	or	r12,r7,r6
   2c3f4:	60000c1e 	bne	r12,zero,2c428 <__ledf2+0x80>
   2c3f8:	50000d1e 	bne	r10,zero,2c430 <__ledf2+0x88>
   2c3fc:	0005883a 	mov	r2,zero
   2c400:	f800283a 	ret
   2c404:	2912b03a 	or	r9,r5,r4
   2c408:	48000d1e 	bne	r9,zero,2c440 <__ledf2+0x98>
   2c40c:	1a41ffe0 	cmpeqi	r9,r3,2047
   2c410:	48000f26 	beq	r9,zero,2c450 <__ledf2+0xa8>
   2c414:	3992b03a 	or	r9,r7,r6
   2c418:	4800091e 	bne	r9,zero,2c440 <__ledf2+0x98>
   2c41c:	4000031e 	bne	r8,zero,2c42c <__ledf2+0x84>
   2c420:	2912b03a 	or	r9,r5,r4
   2c424:	4813003a 	cmpeq	r9,r9,zero
   2c428:	4800071e 	bne	r9,zero,2c448 <__ledf2+0xa0>
   2c42c:	58800c26 	beq	r11,r2,2c460 <__ledf2+0xb8>
   2c430:	00800044 	movi	r2,1
   2c434:	58000526 	beq	r11,zero,2c44c <__ledf2+0xa4>
   2c438:	00bfffc4 	movi	r2,-1
   2c43c:	f800283a 	ret
   2c440:	00800084 	movi	r2,2
   2c444:	f800283a 	ret
   2c448:	103ffb26 	beq	r2,zero,2c438 <__ledf2+0x90>
   2c44c:	f800283a 	ret
   2c450:	183ff61e 	bne	r3,zero,2c42c <__ledf2+0x84>
   2c454:	3992b03a 	or	r9,r7,r6
   2c458:	483ff41e 	bne	r9,zero,2c42c <__ledf2+0x84>
   2c45c:	003ff406 	br	2c430 <__ledf2+0x88>
   2c460:	1a00030e 	bge	r3,r8,2c470 <__ledf2+0xc8>
   2c464:	103ff41e 	bne	r2,zero,2c438 <__ledf2+0x90>
   2c468:	00800044 	movi	r2,1
   2c46c:	f800283a 	ret
   2c470:	40fff516 	blt	r8,r3,2c448 <__ledf2+0xa0>
   2c474:	397fee36 	bltu	r7,r5,2c430 <__ledf2+0x88>
   2c478:	29c00426 	beq	r5,r7,2c48c <__ledf2+0xe4>
   2c47c:	29ffdf2e 	bgeu	r5,r7,2c3fc <__ledf2+0x54>
   2c480:	583fed26 	beq	r11,zero,2c438 <__ledf2+0x90>
   2c484:	5805883a 	mov	r2,r11
   2c488:	f800283a 	ret
   2c48c:	313fe836 	bltu	r6,r4,2c430 <__ledf2+0x88>
   2c490:	21bfda2e 	bgeu	r4,r6,2c3fc <__ledf2+0x54>
   2c494:	003ffa06 	br	2c480 <__ledf2+0xd8>

0002c498 <__muldf3>:
   2c498:	2810d53a 	srli	r8,r5,20
   2c49c:	defff004 	addi	sp,sp,-64
   2c4a0:	00800434 	movhi	r2,16
   2c4a4:	df000e15 	stw	fp,56(sp)
   2c4a8:	dd000a15 	stw	r20,40(sp)
   2c4ac:	dcc00915 	stw	r19,36(sp)
   2c4b0:	dc400715 	stw	r17,28(sp)
   2c4b4:	10bfffc4 	addi	r2,r2,-1
   2c4b8:	dfc00f15 	stw	ra,60(sp)
   2c4bc:	ddc00d15 	stw	r23,52(sp)
   2c4c0:	dd800c15 	stw	r22,48(sp)
   2c4c4:	dd400b15 	stw	r21,44(sp)
   2c4c8:	dc800815 	stw	r18,32(sp)
   2c4cc:	dc000615 	stw	r16,24(sp)
   2c4d0:	4201ffcc 	andi	r8,r8,2047
   2c4d4:	2828d7fa 	srli	r20,r5,31
   2c4d8:	2023883a 	mov	r17,r4
   2c4dc:	3039883a 	mov	fp,r6
   2c4e0:	28a6703a 	and	r19,r5,r2
   2c4e4:	40005a26 	beq	r8,zero,2c650 <__muldf3+0x1b8>
   2c4e8:	4081ffe0 	cmpeqi	r2,r8,2047
   2c4ec:	10006c1e 	bne	r2,zero,2c6a0 <__muldf3+0x208>
   2c4f0:	980a90fa 	slli	r5,r19,3
   2c4f4:	2026d77a 	srli	r19,r4,29
   2c4f8:	202490fa 	slli	r18,r4,3
   2c4fc:	423f0044 	addi	r8,r8,-1023
   2c500:	9966b03a 	or	r19,r19,r5
   2c504:	9cc02034 	orhi	r19,r19,128
   2c508:	002b883a 	mov	r21,zero
   2c50c:	002d883a 	mov	r22,zero
   2c510:	3804d53a 	srli	r2,r7,20
   2c514:	00c00434 	movhi	r3,16
   2c518:	18ffffc4 	addi	r3,r3,-1
   2c51c:	1081ffcc 	andi	r2,r2,2047
   2c520:	382ed7fa 	srli	r23,r7,31
   2c524:	38e0703a 	and	r16,r7,r3
   2c528:	10006426 	beq	r2,zero,2c6bc <__muldf3+0x224>
   2c52c:	10c1ffe0 	cmpeqi	r3,r2,2047
   2c530:	1800211e 	bne	r3,zero,2c5b8 <__muldf3+0x120>
   2c534:	e008d77a 	srli	r4,fp,29
   2c538:	802090fa 	slli	r16,r16,3
   2c53c:	e02290fa 	slli	r17,fp,3
   2c540:	10bf0044 	addi	r2,r2,-1023
   2c544:	2420b03a 	or	r16,r4,r16
   2c548:	84002034 	orhi	r16,r16,128
   2c54c:	4091883a 	add	r8,r8,r2
   2c550:	0009883a 	mov	r4,zero
   2c554:	a8800428 	cmpgeui	r2,r21,16
   2c558:	a5ccf03a 	xor	r6,r20,r23
   2c55c:	41c00044 	addi	r7,r8,1
   2c560:	10006d1e 	bne	r2,zero,2c718 <__muldf3+0x280>
   2c564:	a80490ba 	slli	r2,r21,2
   2c568:	00c000f4 	movhi	r3,3
   2c56c:	10c7883a 	add	r3,r2,r3
   2c570:	18b15e17 	ldw	r2,-14984(r3)
   2c574:	1000683a 	jmp	r2
   2c578:	0002c718 	cmpnei	zero,zero,2844
   2c57c:	0002c5d8 	cmpnei	zero,zero,2839
   2c580:	0002c5d8 	cmpnei	zero,zero,2839
   2c584:	0002c5d4 	movui	zero,2839
   2c588:	0002c5e4 	muli	zero,zero,2839
   2c58c:	0002c5e4 	muli	zero,zero,2839
   2c590:	0002ca94 	movui	zero,2858
   2c594:	0002c5d4 	movui	zero,2839
   2c598:	0002c5e4 	muli	zero,zero,2839
   2c59c:	0002ca94 	movui	zero,2858
   2c5a0:	0002c5e4 	muli	zero,zero,2839
   2c5a4:	0002c5d4 	movui	zero,2839
   2c5a8:	0002ca44 	movi	zero,2857
   2c5ac:	0002ca44 	movi	zero,2857
   2c5b0:	0002ca44 	movi	zero,2857
   2c5b4:	0002cb20 	cmpeqi	zero,zero,2860
   2c5b8:	e422b03a 	or	r17,fp,r16
   2c5bc:	4201ffc4 	addi	r8,r8,2047
   2c5c0:	8801221e 	bne	r17,zero,2ca4c <__muldf3+0x5b4>
   2c5c4:	ad400094 	ori	r21,r21,2
   2c5c8:	0021883a 	mov	r16,zero
   2c5cc:	01000084 	movi	r4,2
   2c5d0:	003fe006 	br	2c554 <__muldf3+0xbc>
   2c5d4:	b80d883a 	mov	r6,r23
   2c5d8:	8027883a 	mov	r19,r16
   2c5dc:	8825883a 	mov	r18,r17
   2c5e0:	202d883a 	mov	r22,r4
   2c5e4:	b08000a0 	cmpeqi	r2,r22,2
   2c5e8:	1000471e 	bne	r2,zero,2c708 <__muldf3+0x270>
   2c5ec:	b08000e0 	cmpeqi	r2,r22,3
   2c5f0:	10018e1e 	bne	r2,zero,2cc2c <__muldf3+0x794>
   2c5f4:	b0800060 	cmpeqi	r2,r22,1
   2c5f8:	1000f826 	beq	r2,zero,2c9dc <__muldf3+0x544>
   2c5fc:	0007883a 	mov	r3,zero
   2c600:	0027883a 	mov	r19,zero
   2c604:	0025883a 	mov	r18,zero
   2c608:	1806953a 	slli	r3,r3,20
   2c60c:	31803fcc 	andi	r6,r6,255
   2c610:	300c97fa 	slli	r6,r6,31
   2c614:	1cc6b03a 	or	r3,r3,r19
   2c618:	9005883a 	mov	r2,r18
   2c61c:	1986b03a 	or	r3,r3,r6
   2c620:	dfc00f17 	ldw	ra,60(sp)
   2c624:	df000e17 	ldw	fp,56(sp)
   2c628:	ddc00d17 	ldw	r23,52(sp)
   2c62c:	dd800c17 	ldw	r22,48(sp)
   2c630:	dd400b17 	ldw	r21,44(sp)
   2c634:	dd000a17 	ldw	r20,40(sp)
   2c638:	dcc00917 	ldw	r19,36(sp)
   2c63c:	dc800817 	ldw	r18,32(sp)
   2c640:	dc400717 	ldw	r17,28(sp)
   2c644:	dc000617 	ldw	r16,24(sp)
   2c648:	dec01004 	addi	sp,sp,64
   2c64c:	f800283a 	ret
   2c650:	9924b03a 	or	r18,r19,r4
   2c654:	90010a26 	beq	r18,zero,2ca80 <__muldf3+0x5e8>
   2c658:	d9c00015 	stw	r7,0(sp)
   2c65c:	98014d26 	beq	r19,zero,2cb94 <__muldf3+0x6fc>
   2c660:	9809883a 	mov	r4,r19
   2c664:	002d7940 	call	2d794 <__clzsi2>
   2c668:	d9c00017 	ldw	r7,0(sp)
   2c66c:	113ffd44 	addi	r4,r2,-11
   2c670:	00c00744 	movi	r3,29
   2c674:	14bffe04 	addi	r18,r2,-8
   2c678:	1907c83a 	sub	r3,r3,r4
   2c67c:	9ca6983a 	sll	r19,r19,r18
   2c680:	88c6d83a 	srl	r3,r17,r3
   2c684:	8ca4983a 	sll	r18,r17,r18
   2c688:	1ce6b03a 	or	r19,r3,r19
   2c68c:	023f0344 	movi	r8,-1011
   2c690:	4091c83a 	sub	r8,r8,r2
   2c694:	002b883a 	mov	r21,zero
   2c698:	002d883a 	mov	r22,zero
   2c69c:	003f9c06 	br	2c510 <__muldf3+0x78>
   2c6a0:	9924b03a 	or	r18,r19,r4
   2c6a4:	9000f11e 	bne	r18,zero,2ca6c <__muldf3+0x5d4>
   2c6a8:	0027883a 	mov	r19,zero
   2c6ac:	05400204 	movi	r21,8
   2c6b0:	0201ffc4 	movi	r8,2047
   2c6b4:	05800084 	movi	r22,2
   2c6b8:	003f9506 	br	2c510 <__muldf3+0x78>
   2c6bc:	e422b03a 	or	r17,fp,r16
   2c6c0:	8800e626 	beq	r17,zero,2ca5c <__muldf3+0x5c4>
   2c6c4:	da000015 	stw	r8,0(sp)
   2c6c8:	80012626 	beq	r16,zero,2cb64 <__muldf3+0x6cc>
   2c6cc:	8009883a 	mov	r4,r16
   2c6d0:	002d7940 	call	2d794 <__clzsi2>
   2c6d4:	da000017 	ldw	r8,0(sp)
   2c6d8:	117ffd44 	addi	r5,r2,-11
   2c6dc:	01000744 	movi	r4,29
   2c6e0:	147ffe04 	addi	r17,r2,-8
   2c6e4:	2149c83a 	sub	r4,r4,r5
   2c6e8:	8460983a 	sll	r16,r16,r17
   2c6ec:	e108d83a 	srl	r4,fp,r4
   2c6f0:	e462983a 	sll	r17,fp,r17
   2c6f4:	2420b03a 	or	r16,r4,r16
   2c6f8:	4091c83a 	sub	r8,r8,r2
   2c6fc:	423f0344 	addi	r8,r8,-1011
   2c700:	0009883a 	mov	r4,zero
   2c704:	003f9306 	br	2c554 <__muldf3+0xbc>
   2c708:	00c1ffc4 	movi	r3,2047
   2c70c:	0027883a 	mov	r19,zero
   2c710:	0025883a 	mov	r18,zero
   2c714:	003fbc06 	br	2c608 <__muldf3+0x170>
   2c718:	9028d43a 	srli	r20,r18,16
   2c71c:	8f3fffcc 	andi	fp,r17,65535
   2c720:	957fffcc 	andi	r21,r18,65535
   2c724:	a80b883a 	mov	r5,r21
   2c728:	e009883a 	mov	r4,fp
   2c72c:	d9800315 	stw	r6,12(sp)
   2c730:	da000215 	stw	r8,8(sp)
   2c734:	d9c00115 	stw	r7,4(sp)
   2c738:	8822d43a 	srli	r17,r17,16
   2c73c:	002af640 	call	2af64 <__mulsi3>
   2c740:	e00b883a 	mov	r5,fp
   2c744:	a009883a 	mov	r4,r20
   2c748:	102d883a 	mov	r22,r2
   2c74c:	002af640 	call	2af64 <__mulsi3>
   2c750:	880b883a 	mov	r5,r17
   2c754:	a009883a 	mov	r4,r20
   2c758:	102f883a 	mov	r23,r2
   2c75c:	002af640 	call	2af64 <__mulsi3>
   2c760:	a80b883a 	mov	r5,r21
   2c764:	8809883a 	mov	r4,r17
   2c768:	d8800015 	stw	r2,0(sp)
   2c76c:	002af640 	call	2af64 <__mulsi3>
   2c770:	b006d43a 	srli	r3,r22,16
   2c774:	15e5883a 	add	r18,r2,r23
   2c778:	d9c00117 	ldw	r7,4(sp)
   2c77c:	1c87883a 	add	r3,r3,r18
   2c780:	da000217 	ldw	r8,8(sp)
   2c784:	d9800317 	ldw	r6,12(sp)
   2c788:	1dc0042e 	bgeu	r3,r23,2c79c <__muldf3+0x304>
   2c78c:	d9000017 	ldw	r4,0(sp)
   2c790:	00800074 	movhi	r2,1
   2c794:	2085883a 	add	r2,r4,r2
   2c798:	d8800015 	stw	r2,0(sp)
   2c79c:	1804943a 	slli	r2,r3,16
   2c7a0:	85ffffcc 	andi	r23,r16,65535
   2c7a4:	b5bfffcc 	andi	r22,r22,65535
   2c7a8:	1585883a 	add	r2,r2,r22
   2c7ac:	a80b883a 	mov	r5,r21
   2c7b0:	b809883a 	mov	r4,r23
   2c7b4:	1824d43a 	srli	r18,r3,16
   2c7b8:	d9800515 	stw	r6,20(sp)
   2c7bc:	da000415 	stw	r8,16(sp)
   2c7c0:	d9c00315 	stw	r7,12(sp)
   2c7c4:	8020d43a 	srli	r16,r16,16
   2c7c8:	d8800115 	stw	r2,4(sp)
   2c7cc:	002af640 	call	2af64 <__mulsi3>
   2c7d0:	a009883a 	mov	r4,r20
   2c7d4:	b80b883a 	mov	r5,r23
   2c7d8:	d8800215 	stw	r2,8(sp)
   2c7dc:	002af640 	call	2af64 <__mulsi3>
   2c7e0:	a009883a 	mov	r4,r20
   2c7e4:	800b883a 	mov	r5,r16
   2c7e8:	102d883a 	mov	r22,r2
   2c7ec:	002af640 	call	2af64 <__mulsi3>
   2c7f0:	a80b883a 	mov	r5,r21
   2c7f4:	8009883a 	mov	r4,r16
   2c7f8:	1029883a 	mov	r20,r2
   2c7fc:	002af640 	call	2af64 <__mulsi3>
   2c800:	da800217 	ldw	r10,8(sp)
   2c804:	1585883a 	add	r2,r2,r22
   2c808:	d9c00317 	ldw	r7,12(sp)
   2c80c:	5006d43a 	srli	r3,r10,16
   2c810:	da000417 	ldw	r8,16(sp)
   2c814:	d9800517 	ldw	r6,20(sp)
   2c818:	1887883a 	add	r3,r3,r2
   2c81c:	1d80022e 	bgeu	r3,r22,2c828 <__muldf3+0x390>
   2c820:	00800074 	movhi	r2,1
   2c824:	a0a9883a 	add	r20,r20,r2
   2c828:	1804d43a 	srli	r2,r3,16
   2c82c:	1806943a 	slli	r3,r3,16
   2c830:	982cd43a 	srli	r22,r19,16
   2c834:	9d7fffcc 	andi	r21,r19,65535
   2c838:	e009883a 	mov	r4,fp
   2c83c:	54ffffcc 	andi	r19,r10,65535
   2c840:	a80b883a 	mov	r5,r21
   2c844:	1ce7883a 	add	r19,r3,r19
   2c848:	d9800515 	stw	r6,20(sp)
   2c84c:	da000415 	stw	r8,16(sp)
   2c850:	d9c00315 	stw	r7,12(sp)
   2c854:	1529883a 	add	r20,r2,r20
   2c858:	002af640 	call	2af64 <__mulsi3>
   2c85c:	e00b883a 	mov	r5,fp
   2c860:	b009883a 	mov	r4,r22
   2c864:	d8800215 	stw	r2,8(sp)
   2c868:	002af640 	call	2af64 <__mulsi3>
   2c86c:	8809883a 	mov	r4,r17
   2c870:	b00b883a 	mov	r5,r22
   2c874:	1039883a 	mov	fp,r2
   2c878:	002af640 	call	2af64 <__mulsi3>
   2c87c:	8809883a 	mov	r4,r17
   2c880:	a80b883a 	mov	r5,r21
   2c884:	1023883a 	mov	r17,r2
   2c888:	002af640 	call	2af64 <__mulsi3>
   2c88c:	d8c00217 	ldw	r3,8(sp)
   2c890:	1705883a 	add	r2,r2,fp
   2c894:	d9c00317 	ldw	r7,12(sp)
   2c898:	1808d43a 	srli	r4,r3,16
   2c89c:	da000417 	ldw	r8,16(sp)
   2c8a0:	d9800517 	ldw	r6,20(sp)
   2c8a4:	2089883a 	add	r4,r4,r2
   2c8a8:	94e5883a 	add	r18,r18,r19
   2c8ac:	2700022e 	bgeu	r4,fp,2c8b8 <__muldf3+0x420>
   2c8b0:	00800074 	movhi	r2,1
   2c8b4:	88a3883a 	add	r17,r17,r2
   2c8b8:	2004d43a 	srli	r2,r4,16
   2c8bc:	2038943a 	slli	fp,r4,16
   2c8c0:	18ffffcc 	andi	r3,r3,65535
   2c8c4:	b809883a 	mov	r4,r23
   2c8c8:	a80b883a 	mov	r5,r21
   2c8cc:	d9800415 	stw	r6,16(sp)
   2c8d0:	da000315 	stw	r8,12(sp)
   2c8d4:	d9c00215 	stw	r7,8(sp)
   2c8d8:	e0f9883a 	add	fp,fp,r3
   2c8dc:	1463883a 	add	r17,r2,r17
   2c8e0:	002af640 	call	2af64 <__mulsi3>
   2c8e4:	b80b883a 	mov	r5,r23
   2c8e8:	b009883a 	mov	r4,r22
   2c8ec:	102f883a 	mov	r23,r2
   2c8f0:	002af640 	call	2af64 <__mulsi3>
   2c8f4:	b00b883a 	mov	r5,r22
   2c8f8:	8009883a 	mov	r4,r16
   2c8fc:	102d883a 	mov	r22,r2
   2c900:	002af640 	call	2af64 <__mulsi3>
   2c904:	a80b883a 	mov	r5,r21
   2c908:	8009883a 	mov	r4,r16
   2c90c:	1021883a 	mov	r16,r2
   2c910:	002af640 	call	2af64 <__mulsi3>
   2c914:	b80ad43a 	srli	r5,r23,16
   2c918:	1585883a 	add	r2,r2,r22
   2c91c:	d9c00217 	ldw	r7,8(sp)
   2c920:	288b883a 	add	r5,r5,r2
   2c924:	da000317 	ldw	r8,12(sp)
   2c928:	d9800417 	ldw	r6,16(sp)
   2c92c:	2d80022e 	bgeu	r5,r22,2c938 <__muldf3+0x4a0>
   2c930:	00800074 	movhi	r2,1
   2c934:	80a1883a 	add	r16,r16,r2
   2c938:	2806943a 	slli	r3,r5,16
   2c93c:	d8800017 	ldw	r2,0(sp)
   2c940:	bdffffcc 	andi	r23,r23,65535
   2c944:	1dc7883a 	add	r3,r3,r23
   2c948:	90ab883a 	add	r21,r18,r2
   2c94c:	acd5803a 	cmpltu	r10,r21,r19
   2c950:	1d07883a 	add	r3,r3,r20
   2c954:	af2b883a 	add	r21,r21,fp
   2c958:	1a97883a 	add	r11,r3,r10
   2c95c:	af09803a 	cmpltu	r4,r21,fp
   2c960:	2826d43a 	srli	r19,r5,16
   2c964:	5c53883a 	add	r9,r11,r17
   2c968:	4905883a 	add	r2,r9,r4
   2c96c:	1d29803a 	cmpltu	r20,r3,r20
   2c970:	5a95803a 	cmpltu	r10,r11,r10
   2c974:	1109803a 	cmpltu	r4,r2,r4
   2c978:	a2a8b03a 	or	r20,r20,r10
   2c97c:	4c63803a 	cmpltu	r17,r9,r17
   2c980:	a4e7883a 	add	r19,r20,r19
   2c984:	8908b03a 	or	r4,r17,r4
   2c988:	a824927a 	slli	r18,r21,9
   2c98c:	d8c00117 	ldw	r3,4(sp)
   2c990:	9927883a 	add	r19,r19,r4
   2c994:	9c27883a 	add	r19,r19,r16
   2c998:	9826927a 	slli	r19,r19,9
   2c99c:	a82ad5fa 	srli	r21,r21,23
   2c9a0:	100ad5fa 	srli	r5,r2,23
   2c9a4:	90e4b03a 	or	r18,r18,r3
   2c9a8:	1004927a 	slli	r2,r2,9
   2c9ac:	9024c03a 	cmpne	r18,r18,zero
   2c9b0:	9564b03a 	or	r18,r18,r21
   2c9b4:	98c0402c 	andhi	r3,r19,256
   2c9b8:	90a4b03a 	or	r18,r18,r2
   2c9bc:	9966b03a 	or	r19,r19,r5
   2c9c0:	18007f26 	beq	r3,zero,2cbc0 <__muldf3+0x728>
   2c9c4:	9006d07a 	srli	r3,r18,1
   2c9c8:	980497fa 	slli	r2,r19,31
   2c9cc:	9480004c 	andi	r18,r18,1
   2c9d0:	9826d07a 	srli	r19,r19,1
   2c9d4:	1c86b03a 	or	r3,r3,r18
   2c9d8:	18a4b03a 	or	r18,r3,r2
   2c9dc:	3900ffc4 	addi	r4,r7,1023
   2c9e0:	0100320e 	bge	zero,r4,2caac <__muldf3+0x614>
   2c9e4:	908001cc 	andi	r2,r18,7
   2c9e8:	10000726 	beq	r2,zero,2ca08 <__muldf3+0x570>
   2c9ec:	908003cc 	andi	r2,r18,15
   2c9f0:	10800120 	cmpeqi	r2,r2,4
   2c9f4:	1000041e 	bne	r2,zero,2ca08 <__muldf3+0x570>
   2c9f8:	90800104 	addi	r2,r18,4
   2c9fc:	14a5803a 	cmpltu	r18,r2,r18
   2ca00:	9ca7883a 	add	r19,r19,r18
   2ca04:	1025883a 	mov	r18,r2
   2ca08:	9880402c 	andhi	r2,r19,256
   2ca0c:	10000426 	beq	r2,zero,2ca20 <__muldf3+0x588>
   2ca10:	00bfc034 	movhi	r2,65280
   2ca14:	10bfffc4 	addi	r2,r2,-1
   2ca18:	98a6703a 	and	r19,r19,r2
   2ca1c:	39010004 	addi	r4,r7,1024
   2ca20:	2081ffc8 	cmpgei	r2,r4,2047
   2ca24:	103f381e 	bne	r2,zero,2c708 <__muldf3+0x270>
   2ca28:	9804977a 	slli	r2,r19,29
   2ca2c:	9024d0fa 	srli	r18,r18,3
   2ca30:	9826927a 	slli	r19,r19,9
   2ca34:	20c1ffcc 	andi	r3,r4,2047
   2ca38:	14a4b03a 	or	r18,r2,r18
   2ca3c:	9826d33a 	srli	r19,r19,12
   2ca40:	003ef106 	br	2c608 <__muldf3+0x170>
   2ca44:	a00d883a 	mov	r6,r20
   2ca48:	003ee606 	br	2c5e4 <__muldf3+0x14c>
   2ca4c:	ad4000d4 	ori	r21,r21,3
   2ca50:	e023883a 	mov	r17,fp
   2ca54:	010000c4 	movi	r4,3
   2ca58:	003ebe06 	br	2c554 <__muldf3+0xbc>
   2ca5c:	ad400054 	ori	r21,r21,1
   2ca60:	0021883a 	mov	r16,zero
   2ca64:	01000044 	movi	r4,1
   2ca68:	003eba06 	br	2c554 <__muldf3+0xbc>
   2ca6c:	2025883a 	mov	r18,r4
   2ca70:	05400304 	movi	r21,12
   2ca74:	0201ffc4 	movi	r8,2047
   2ca78:	058000c4 	movi	r22,3
   2ca7c:	003ea406 	br	2c510 <__muldf3+0x78>
   2ca80:	0027883a 	mov	r19,zero
   2ca84:	05400104 	movi	r21,4
   2ca88:	0011883a 	mov	r8,zero
   2ca8c:	05800044 	movi	r22,1
   2ca90:	003e9f06 	br	2c510 <__muldf3+0x78>
   2ca94:	04c00434 	movhi	r19,16
   2ca98:	000d883a 	mov	r6,zero
   2ca9c:	9cffffc4 	addi	r19,r19,-1
   2caa0:	04bfffc4 	movi	r18,-1
   2caa4:	00c1ffc4 	movi	r3,2047
   2caa8:	003ed706 	br	2c608 <__muldf3+0x170>
   2caac:	00800044 	movi	r2,1
   2cab0:	1105c83a 	sub	r2,r2,r4
   2cab4:	10c00e48 	cmpgei	r3,r2,57
   2cab8:	183ed01e 	bne	r3,zero,2c5fc <__muldf3+0x164>
   2cabc:	10c00808 	cmpgei	r3,r2,32
   2cac0:	1800411e 	bne	r3,zero,2cbc8 <__muldf3+0x730>
   2cac4:	39c10784 	addi	r7,r7,1054
   2cac8:	99c6983a 	sll	r3,r19,r7
   2cacc:	9088d83a 	srl	r4,r18,r2
   2cad0:	91ce983a 	sll	r7,r18,r7
   2cad4:	98a6d83a 	srl	r19,r19,r2
   2cad8:	1904b03a 	or	r2,r3,r4
   2cadc:	3824c03a 	cmpne	r18,r7,zero
   2cae0:	1484b03a 	or	r2,r2,r18
   2cae4:	10c001cc 	andi	r3,r2,7
   2cae8:	18000726 	beq	r3,zero,2cb08 <__muldf3+0x670>
   2caec:	10c003cc 	andi	r3,r2,15
   2caf0:	18c00120 	cmpeqi	r3,r3,4
   2caf4:	1800041e 	bne	r3,zero,2cb08 <__muldf3+0x670>
   2caf8:	10c00104 	addi	r3,r2,4
   2cafc:	1885803a 	cmpltu	r2,r3,r2
   2cb00:	98a7883a 	add	r19,r19,r2
   2cb04:	1805883a 	mov	r2,r3
   2cb08:	98c0202c 	andhi	r3,r19,128
   2cb0c:	18004326 	beq	r3,zero,2cc1c <__muldf3+0x784>
   2cb10:	00c00044 	movi	r3,1
   2cb14:	0027883a 	mov	r19,zero
   2cb18:	0025883a 	mov	r18,zero
   2cb1c:	003eba06 	br	2c608 <__muldf3+0x170>
   2cb20:	9880022c 	andhi	r2,r19,8
   2cb24:	10000926 	beq	r2,zero,2cb4c <__muldf3+0x6b4>
   2cb28:	8080022c 	andhi	r2,r16,8
   2cb2c:	1000071e 	bne	r2,zero,2cb4c <__muldf3+0x6b4>
   2cb30:	00800434 	movhi	r2,16
   2cb34:	84c00234 	orhi	r19,r16,8
   2cb38:	10bfffc4 	addi	r2,r2,-1
   2cb3c:	98a6703a 	and	r19,r19,r2
   2cb40:	b80d883a 	mov	r6,r23
   2cb44:	8825883a 	mov	r18,r17
   2cb48:	003fd606 	br	2caa4 <__muldf3+0x60c>
   2cb4c:	00800434 	movhi	r2,16
   2cb50:	9cc00234 	orhi	r19,r19,8
   2cb54:	10bfffc4 	addi	r2,r2,-1
   2cb58:	98a6703a 	and	r19,r19,r2
   2cb5c:	a00d883a 	mov	r6,r20
   2cb60:	003fd006 	br	2caa4 <__muldf3+0x60c>
   2cb64:	e009883a 	mov	r4,fp
   2cb68:	002d7940 	call	2d794 <__clzsi2>
   2cb6c:	11400544 	addi	r5,r2,21
   2cb70:	29000748 	cmpgei	r4,r5,29
   2cb74:	1007883a 	mov	r3,r2
   2cb78:	da000017 	ldw	r8,0(sp)
   2cb7c:	10800804 	addi	r2,r2,32
   2cb80:	203ed626 	beq	r4,zero,2c6dc <__muldf3+0x244>
   2cb84:	1c3ffe04 	addi	r16,r3,-8
   2cb88:	e420983a 	sll	r16,fp,r16
   2cb8c:	0023883a 	mov	r17,zero
   2cb90:	003ed906 	br	2c6f8 <__muldf3+0x260>
   2cb94:	002d7940 	call	2d794 <__clzsi2>
   2cb98:	11000544 	addi	r4,r2,21
   2cb9c:	21400748 	cmpgei	r5,r4,29
   2cba0:	1007883a 	mov	r3,r2
   2cba4:	d9c00017 	ldw	r7,0(sp)
   2cba8:	10800804 	addi	r2,r2,32
   2cbac:	283eb026 	beq	r5,zero,2c670 <__muldf3+0x1d8>
   2cbb0:	1cfffe04 	addi	r19,r3,-8
   2cbb4:	8ce6983a 	sll	r19,r17,r19
   2cbb8:	0025883a 	mov	r18,zero
   2cbbc:	003eb306 	br	2c68c <__muldf3+0x1f4>
   2cbc0:	400f883a 	mov	r7,r8
   2cbc4:	003f8506 	br	2c9dc <__muldf3+0x544>
   2cbc8:	00fff844 	movi	r3,-31
   2cbcc:	1907c83a 	sub	r3,r3,r4
   2cbd0:	10800820 	cmpeqi	r2,r2,32
   2cbd4:	98c6d83a 	srl	r3,r19,r3
   2cbd8:	1000031e 	bne	r2,zero,2cbe8 <__muldf3+0x750>
   2cbdc:	39c10f84 	addi	r7,r7,1086
   2cbe0:	99e6983a 	sll	r19,r19,r7
   2cbe4:	94e4b03a 	or	r18,r18,r19
   2cbe8:	9024c03a 	cmpne	r18,r18,zero
   2cbec:	90c4b03a 	or	r2,r18,r3
   2cbf0:	148001cc 	andi	r18,r2,7
   2cbf4:	9000051e 	bne	r18,zero,2cc0c <__muldf3+0x774>
   2cbf8:	0027883a 	mov	r19,zero
   2cbfc:	1004d0fa 	srli	r2,r2,3
   2cc00:	0007883a 	mov	r3,zero
   2cc04:	14a4b03a 	or	r18,r2,r18
   2cc08:	003e7f06 	br	2c608 <__muldf3+0x170>
   2cc0c:	10c003cc 	andi	r3,r2,15
   2cc10:	18c00118 	cmpnei	r3,r3,4
   2cc14:	0027883a 	mov	r19,zero
   2cc18:	183fb71e 	bne	r3,zero,2caf8 <__muldf3+0x660>
   2cc1c:	9806927a 	slli	r3,r19,9
   2cc20:	9824977a 	slli	r18,r19,29
   2cc24:	1826d33a 	srli	r19,r3,12
   2cc28:	003ff406 	br	2cbfc <__muldf3+0x764>
   2cc2c:	00800434 	movhi	r2,16
   2cc30:	9cc00234 	orhi	r19,r19,8
   2cc34:	10bfffc4 	addi	r2,r2,-1
   2cc38:	98a6703a 	and	r19,r19,r2
   2cc3c:	003f9906 	br	2caa4 <__muldf3+0x60c>

0002cc40 <__subdf3>:
   2cc40:	00c00434 	movhi	r3,16
   2cc44:	3812d53a 	srli	r9,r7,20
   2cc48:	18ffffc4 	addi	r3,r3,-1
   2cc4c:	defffb04 	addi	sp,sp,-20
   2cc50:	28d0703a 	and	r8,r5,r3
   2cc54:	38c6703a 	and	r3,r7,r3
   2cc58:	2804d7fa 	srli	r2,r5,31
   2cc5c:	401090fa 	slli	r8,r8,3
   2cc60:	280ad53a 	srli	r5,r5,20
   2cc64:	180690fa 	slli	r3,r3,3
   2cc68:	dcc00315 	stw	r19,12(sp)
   2cc6c:	dc400115 	stw	r17,4(sp)
   2cc70:	2026d77a 	srli	r19,r4,29
   2cc74:	3022d77a 	srli	r17,r6,29
   2cc78:	4b41ffcc 	andi	r13,r9,2047
   2cc7c:	dc800215 	stw	r18,8(sp)
   2cc80:	dc000015 	stw	r16,0(sp)
   2cc84:	dfc00415 	stw	ra,16(sp)
   2cc88:	6a41ffe0 	cmpeqi	r9,r13,2047
   2cc8c:	1025883a 	mov	r18,r2
   2cc90:	201690fa 	slli	r11,r4,3
   2cc94:	380ed7fa 	srli	r7,r7,31
   2cc98:	301490fa 	slli	r10,r6,3
   2cc9c:	2c01ffcc 	andi	r16,r5,2047
   2cca0:	10803fcc 	andi	r2,r2,255
   2cca4:	9a10b03a 	or	r8,r19,r8
   2cca8:	88c6b03a 	or	r3,r17,r3
   2ccac:	48006e1e 	bne	r9,zero,2ce68 <__subdf3+0x228>
   2ccb0:	3a40005c 	xori	r9,r7,1
   2ccb4:	834bc83a 	sub	r5,r16,r13
   2ccb8:	12405726 	beq	r2,r9,2ce18 <__subdf3+0x1d8>
   2ccbc:	01406f0e 	bge	zero,r5,2ce7c <__subdf3+0x23c>
   2ccc0:	68007a26 	beq	r13,zero,2ceac <__subdf3+0x26c>
   2ccc4:	8081ffd8 	cmpnei	r2,r16,2047
   2ccc8:	10019f26 	beq	r2,zero,2d348 <__subdf3+0x708>
   2cccc:	18c02034 	orhi	r3,r3,128
   2ccd0:	28800e48 	cmpgei	r2,r5,57
   2ccd4:	1000f91e 	bne	r2,zero,2d0bc <__subdf3+0x47c>
   2ccd8:	28800808 	cmpgei	r2,r5,32
   2ccdc:	1001451e 	bne	r2,zero,2d1f4 <__subdf3+0x5b4>
   2cce0:	00800804 	movi	r2,32
   2cce4:	1145c83a 	sub	r2,r2,r5
   2cce8:	18a2983a 	sll	r17,r3,r2
   2ccec:	5148d83a 	srl	r4,r10,r5
   2ccf0:	5084983a 	sll	r2,r10,r2
   2ccf4:	1946d83a 	srl	r3,r3,r5
   2ccf8:	8922b03a 	or	r17,r17,r4
   2ccfc:	1004c03a 	cmpne	r2,r2,zero
   2cd00:	88a2b03a 	or	r17,r17,r2
   2cd04:	40d1c83a 	sub	r8,r8,r3
   2cd08:	5c63c83a 	sub	r17,r11,r17
   2cd0c:	5c49803a 	cmpltu	r4,r11,r17
   2cd10:	4109c83a 	sub	r4,r8,r4
   2cd14:	2080202c 	andhi	r2,r4,128
   2cd18:	1000a526 	beq	r2,zero,2cfb0 <__subdf3+0x370>
   2cd1c:	04c02034 	movhi	r19,128
   2cd20:	9cffffc4 	addi	r19,r19,-1
   2cd24:	24e6703a 	and	r19,r4,r19
   2cd28:	9800db26 	beq	r19,zero,2d098 <__subdf3+0x458>
   2cd2c:	9809883a 	mov	r4,r19
   2cd30:	002d7940 	call	2d794 <__clzsi2>
   2cd34:	117ffe04 	addi	r5,r2,-8
   2cd38:	01000804 	movi	r4,32
   2cd3c:	2149c83a 	sub	r4,r4,r5
   2cd40:	8906d83a 	srl	r3,r17,r4
   2cd44:	9948983a 	sll	r4,r19,r5
   2cd48:	8962983a 	sll	r17,r17,r5
   2cd4c:	1908b03a 	or	r4,r3,r4
   2cd50:	2c00cc16 	blt	r5,r16,2d084 <__subdf3+0x444>
   2cd54:	2c0bc83a 	sub	r5,r5,r16
   2cd58:	28c00044 	addi	r3,r5,1
   2cd5c:	18800808 	cmpgei	r2,r3,32
   2cd60:	1001171e 	bne	r2,zero,2d1c0 <__subdf3+0x580>
   2cd64:	00800804 	movi	r2,32
   2cd68:	10c5c83a 	sub	r2,r2,r3
   2cd6c:	88cad83a 	srl	r5,r17,r3
   2cd70:	88a2983a 	sll	r17,r17,r2
   2cd74:	2084983a 	sll	r2,r4,r2
   2cd78:	20c8d83a 	srl	r4,r4,r3
   2cd7c:	8822c03a 	cmpne	r17,r17,zero
   2cd80:	1144b03a 	or	r2,r2,r5
   2cd84:	1462b03a 	or	r17,r2,r17
   2cd88:	0021883a 	mov	r16,zero
   2cd8c:	888001cc 	andi	r2,r17,7
   2cd90:	10000726 	beq	r2,zero,2cdb0 <__subdf3+0x170>
   2cd94:	888003cc 	andi	r2,r17,15
   2cd98:	10800120 	cmpeqi	r2,r2,4
   2cd9c:	1000041e 	bne	r2,zero,2cdb0 <__subdf3+0x170>
   2cda0:	88c00104 	addi	r3,r17,4
   2cda4:	1c63803a 	cmpltu	r17,r3,r17
   2cda8:	2449883a 	add	r4,r4,r17
   2cdac:	1823883a 	mov	r17,r3
   2cdb0:	2080202c 	andhi	r2,r4,128
   2cdb4:	10008026 	beq	r2,zero,2cfb8 <__subdf3+0x378>
   2cdb8:	81400044 	addi	r5,r16,1
   2cdbc:	2881ffe0 	cmpeqi	r2,r5,2047
   2cdc0:	2941ffcc 	andi	r5,r5,2047
   2cdc4:	1000921e 	bne	r2,zero,2d010 <__subdf3+0x3d0>
   2cdc8:	00bfe034 	movhi	r2,65408
   2cdcc:	10bfffc4 	addi	r2,r2,-1
   2cdd0:	2088703a 	and	r4,r4,r2
   2cdd4:	2006927a 	slli	r3,r4,9
   2cdd8:	8822d0fa 	srli	r17,r17,3
   2cddc:	2004977a 	slli	r2,r4,29
   2cde0:	1806d33a 	srli	r3,r3,12
   2cde4:	1444b03a 	or	r2,r2,r17
   2cde8:	280a953a 	slli	r5,r5,20
   2cdec:	94803fcc 	andi	r18,r18,255
   2cdf0:	902497fa 	slli	r18,r18,31
   2cdf4:	28c6b03a 	or	r3,r5,r3
   2cdf8:	1c86b03a 	or	r3,r3,r18
   2cdfc:	dfc00417 	ldw	ra,16(sp)
   2ce00:	dcc00317 	ldw	r19,12(sp)
   2ce04:	dc800217 	ldw	r18,8(sp)
   2ce08:	dc400117 	ldw	r17,4(sp)
   2ce0c:	dc000017 	ldw	r16,0(sp)
   2ce10:	dec00504 	addi	sp,sp,20
   2ce14:	f800283a 	ret
   2ce18:	01402e0e 	bge	zero,r5,2ced4 <__subdf3+0x294>
   2ce1c:	68005526 	beq	r13,zero,2cf74 <__subdf3+0x334>
   2ce20:	8081ffd8 	cmpnei	r2,r16,2047
   2ce24:	10013b26 	beq	r2,zero,2d314 <__subdf3+0x6d4>
   2ce28:	18c02034 	orhi	r3,r3,128
   2ce2c:	28800e48 	cmpgei	r2,r5,57
   2ce30:	10006d1e 	bne	r2,zero,2cfe8 <__subdf3+0x3a8>
   2ce34:	28800808 	cmpgei	r2,r5,32
   2ce38:	10010826 	beq	r2,zero,2d25c <__subdf3+0x61c>
   2ce3c:	2c7ff804 	addi	r17,r5,-32
   2ce40:	29000820 	cmpeqi	r4,r5,32
   2ce44:	1c44d83a 	srl	r2,r3,r17
   2ce48:	2000041e 	bne	r4,zero,2ce5c <__subdf3+0x21c>
   2ce4c:	01001004 	movi	r4,64
   2ce50:	214bc83a 	sub	r5,r4,r5
   2ce54:	1946983a 	sll	r3,r3,r5
   2ce58:	50d4b03a 	or	r10,r10,r3
   2ce5c:	5022c03a 	cmpne	r17,r10,zero
   2ce60:	88a2b03a 	or	r17,r17,r2
   2ce64:	00006206 	br	2cff0 <__subdf3+0x3b0>
   2ce68:	1a98b03a 	or	r12,r3,r10
   2ce6c:	817e0044 	addi	r5,r16,-2047
   2ce70:	6000161e 	bne	r12,zero,2cecc <__subdf3+0x28c>
   2ce74:	3a40005c 	xori	r9,r7,1
   2ce78:	12401626 	beq	r2,r9,2ced4 <__subdf3+0x294>
   2ce7c:	28002e26 	beq	r5,zero,2cf38 <__subdf3+0x2f8>
   2ce80:	6c0bc83a 	sub	r5,r13,r16
   2ce84:	4825883a 	mov	r18,r9
   2ce88:	80009e1e 	bne	r16,zero,2d104 <__subdf3+0x4c4>
   2ce8c:	42c4b03a 	or	r2,r8,r11
   2ce90:	10010926 	beq	r2,zero,2d2b8 <__subdf3+0x678>
   2ce94:	28bfffc4 	addi	r2,r5,-1
   2ce98:	10016826 	beq	r2,zero,2d43c <__subdf3+0x7fc>
   2ce9c:	2941ffd8 	cmpnei	r5,r5,2047
   2cea0:	28015f26 	beq	r5,zero,2d420 <__subdf3+0x7e0>
   2cea4:	100b883a 	mov	r5,r2
   2cea8:	00009906 	br	2d110 <__subdf3+0x4d0>
   2ceac:	1a84b03a 	or	r2,r3,r10
   2ceb0:	1000b126 	beq	r2,zero,2d178 <__subdf3+0x538>
   2ceb4:	28bfffc4 	addi	r2,r5,-1
   2ceb8:	10011d26 	beq	r2,zero,2d330 <__subdf3+0x6f0>
   2cebc:	2941ffd8 	cmpnei	r5,r5,2047
   2cec0:	28011426 	beq	r5,zero,2d314 <__subdf3+0x6d4>
   2cec4:	100b883a 	mov	r5,r2
   2cec8:	003f8106 	br	2ccd0 <__subdf3+0x90>
   2cecc:	3a403fcc 	andi	r9,r7,255
   2ced0:	11ffea1e 	bne	r2,r7,2ce7c <__subdf3+0x23c>
   2ced4:	28007c26 	beq	r5,zero,2d0c8 <__subdf3+0x488>
   2ced8:	6c0bc83a 	sub	r5,r13,r16
   2cedc:	8000d726 	beq	r16,zero,2d23c <__subdf3+0x5fc>
   2cee0:	6881ffd8 	cmpnei	r2,r13,2047
   2cee4:	10012626 	beq	r2,zero,2d380 <__subdf3+0x740>
   2cee8:	42002034 	orhi	r8,r8,128
   2ceec:	28800e48 	cmpgei	r2,r5,57
   2cef0:	10012a1e 	bne	r2,zero,2d39c <__subdf3+0x75c>
   2cef4:	28800808 	cmpgei	r2,r5,32
   2cef8:	1001821e 	bne	r2,zero,2d504 <__subdf3+0x8c4>
   2cefc:	00800804 	movi	r2,32
   2cf00:	1145c83a 	sub	r2,r2,r5
   2cf04:	40a2983a 	sll	r17,r8,r2
   2cf08:	5948d83a 	srl	r4,r11,r5
   2cf0c:	5884983a 	sll	r2,r11,r2
   2cf10:	4150d83a 	srl	r8,r8,r5
   2cf14:	8922b03a 	or	r17,r17,r4
   2cf18:	1004c03a 	cmpne	r2,r2,zero
   2cf1c:	88a2b03a 	or	r17,r17,r2
   2cf20:	1a07883a 	add	r3,r3,r8
   2cf24:	8aa3883a 	add	r17,r17,r10
   2cf28:	8a89803a 	cmpltu	r4,r17,r10
   2cf2c:	20c9883a 	add	r4,r4,r3
   2cf30:	6821883a 	mov	r16,r13
   2cf34:	00003106 	br	2cffc <__subdf3+0x3bc>
   2cf38:	80800044 	addi	r2,r16,1
   2cf3c:	1081ff8c 	andi	r2,r2,2046
   2cf40:	1000821e 	bne	r2,zero,2d14c <__subdf3+0x50c>
   2cf44:	42ceb03a 	or	r7,r8,r11
   2cf48:	1a84b03a 	or	r2,r3,r10
   2cf4c:	8000e11e 	bne	r16,zero,2d2d4 <__subdf3+0x694>
   2cf50:	38012a26 	beq	r7,zero,2d3fc <__subdf3+0x7bc>
   2cf54:	1001461e 	bne	r2,zero,2d470 <__subdf3+0x830>
   2cf58:	4004977a 	slli	r2,r8,29
   2cf5c:	00c80034 	movhi	r3,8192
   2cf60:	18ffffc4 	addi	r3,r3,-1
   2cf64:	20c8703a 	and	r4,r4,r3
   2cf68:	4010d0fa 	srli	r8,r8,3
   2cf6c:	1104b03a 	or	r2,r2,r4
   2cf70:	00001806 	br	2cfd4 <__subdf3+0x394>
   2cf74:	1a84b03a 	or	r2,r3,r10
   2cf78:	1000fa26 	beq	r2,zero,2d364 <__subdf3+0x724>
   2cf7c:	28bfffc4 	addi	r2,r5,-1
   2cf80:	10000426 	beq	r2,zero,2cf94 <__subdf3+0x354>
   2cf84:	2941ffd8 	cmpnei	r5,r5,2047
   2cf88:	28013226 	beq	r5,zero,2d454 <__subdf3+0x814>
   2cf8c:	100b883a 	mov	r5,r2
   2cf90:	003fa606 	br	2ce2c <__subdf3+0x1ec>
   2cf94:	5aa3883a 	add	r17,r11,r10
   2cf98:	40c9883a 	add	r4,r8,r3
   2cf9c:	8ad7803a 	cmpltu	r11,r17,r11
   2cfa0:	22c9883a 	add	r4,r4,r11
   2cfa4:	2080202c 	andhi	r2,r4,128
   2cfa8:	10007a1e 	bne	r2,zero,2d194 <__subdf3+0x554>
   2cfac:	04000044 	movi	r16,1
   2cfb0:	888001cc 	andi	r2,r17,7
   2cfb4:	103f771e 	bne	r2,zero,2cd94 <__subdf3+0x154>
   2cfb8:	8822d0fa 	srli	r17,r17,3
   2cfbc:	2004977a 	slli	r2,r4,29
   2cfc0:	2010d0fa 	srli	r8,r4,3
   2cfc4:	800b883a 	mov	r5,r16
   2cfc8:	8884b03a 	or	r2,r17,r2
   2cfcc:	28c1ffe0 	cmpeqi	r3,r5,2047
   2cfd0:	1800241e 	bne	r3,zero,2d064 <__subdf3+0x424>
   2cfd4:	00c00434 	movhi	r3,16
   2cfd8:	18ffffc4 	addi	r3,r3,-1
   2cfdc:	40c6703a 	and	r3,r8,r3
   2cfe0:	2941ffcc 	andi	r5,r5,2047
   2cfe4:	003f8006 	br	2cde8 <__subdf3+0x1a8>
   2cfe8:	1aa2b03a 	or	r17,r3,r10
   2cfec:	8822c03a 	cmpne	r17,r17,zero
   2cff0:	8ae3883a 	add	r17,r17,r11
   2cff4:	8ac9803a 	cmpltu	r4,r17,r11
   2cff8:	2209883a 	add	r4,r4,r8
   2cffc:	2080202c 	andhi	r2,r4,128
   2d000:	103feb26 	beq	r2,zero,2cfb0 <__subdf3+0x370>
   2d004:	84000044 	addi	r16,r16,1
   2d008:	8081ffe0 	cmpeqi	r2,r16,2047
   2d00c:	10006226 	beq	r2,zero,2d198 <__subdf3+0x558>
   2d010:	0141ffc4 	movi	r5,2047
   2d014:	0007883a 	mov	r3,zero
   2d018:	0005883a 	mov	r2,zero
   2d01c:	003f7206 	br	2cde8 <__subdf3+0x1a8>
   2d020:	400e977a 	slli	r7,r8,29
   2d024:	4010d0fa 	srli	r8,r8,3
   2d028:	1000ef26 	beq	r2,zero,2d3e8 <__subdf3+0x7a8>
   2d02c:	01480034 	movhi	r5,8192
   2d030:	297fffc4 	addi	r5,r5,-1
   2d034:	2144703a 	and	r2,r4,r5
   2d038:	4100022c 	andhi	r4,r8,8
   2d03c:	11c4b03a 	or	r2,r2,r7
   2d040:	20000826 	beq	r4,zero,2d064 <__subdf3+0x424>
   2d044:	1808d0fa 	srli	r4,r3,3
   2d048:	21c0022c 	andhi	r7,r4,8
   2d04c:	3800051e 	bne	r7,zero,2d064 <__subdf3+0x424>
   2d050:	1804977a 	slli	r2,r3,29
   2d054:	314c703a 	and	r6,r6,r5
   2d058:	4825883a 	mov	r18,r9
   2d05c:	3084b03a 	or	r2,r6,r2
   2d060:	2011883a 	mov	r8,r4
   2d064:	1206b03a 	or	r3,r2,r8
   2d068:	18013e26 	beq	r3,zero,2d564 <__subdf3+0x924>
   2d06c:	01000434 	movhi	r4,16
   2d070:	40c00234 	orhi	r3,r8,8
   2d074:	213fffc4 	addi	r4,r4,-1
   2d078:	1906703a 	and	r3,r3,r4
   2d07c:	0141ffc4 	movi	r5,2047
   2d080:	003f5906 	br	2cde8 <__subdf3+0x1a8>
   2d084:	00ffe034 	movhi	r3,65408
   2d088:	18ffffc4 	addi	r3,r3,-1
   2d08c:	8161c83a 	sub	r16,r16,r5
   2d090:	20c8703a 	and	r4,r4,r3
   2d094:	003f3d06 	br	2cd8c <__subdf3+0x14c>
   2d098:	8809883a 	mov	r4,r17
   2d09c:	002d7940 	call	2d794 <__clzsi2>
   2d0a0:	11400604 	addi	r5,r2,24
   2d0a4:	28c00808 	cmpgei	r3,r5,32
   2d0a8:	183f2326 	beq	r3,zero,2cd38 <__subdf3+0xf8>
   2d0ac:	113ffe04 	addi	r4,r2,-8
   2d0b0:	8908983a 	sll	r4,r17,r4
   2d0b4:	0023883a 	mov	r17,zero
   2d0b8:	003f2506 	br	2cd50 <__subdf3+0x110>
   2d0bc:	1aa2b03a 	or	r17,r3,r10
   2d0c0:	8822c03a 	cmpne	r17,r17,zero
   2d0c4:	003f1006 	br	2cd08 <__subdf3+0xc8>
   2d0c8:	80800044 	addi	r2,r16,1
   2d0cc:	11c1ff8c 	andi	r7,r2,2046
   2d0d0:	38006d1e 	bne	r7,zero,2d288 <__subdf3+0x648>
   2d0d4:	42c4b03a 	or	r2,r8,r11
   2d0d8:	8000be1e 	bne	r16,zero,2d3d4 <__subdf3+0x794>
   2d0dc:	1000f726 	beq	r2,zero,2d4bc <__subdf3+0x87c>
   2d0e0:	1a84b03a 	or	r2,r3,r10
   2d0e4:	1000fc1e 	bne	r2,zero,2d4d8 <__subdf3+0x898>
   2d0e8:	4006977a 	slli	r3,r8,29
   2d0ec:	00880034 	movhi	r2,8192
   2d0f0:	10bfffc4 	addi	r2,r2,-1
   2d0f4:	2084703a 	and	r2,r4,r2
   2d0f8:	4010d0fa 	srli	r8,r8,3
   2d0fc:	10c4b03a 	or	r2,r2,r3
   2d100:	003fb406 	br	2cfd4 <__subdf3+0x394>
   2d104:	6881ffd8 	cmpnei	r2,r13,2047
   2d108:	10009d26 	beq	r2,zero,2d380 <__subdf3+0x740>
   2d10c:	42002034 	orhi	r8,r8,128
   2d110:	28800e48 	cmpgei	r2,r5,57
   2d114:	1000421e 	bne	r2,zero,2d220 <__subdf3+0x5e0>
   2d118:	28800808 	cmpgei	r2,r5,32
   2d11c:	1000a21e 	bne	r2,zero,2d3a8 <__subdf3+0x768>
   2d120:	00800804 	movi	r2,32
   2d124:	1145c83a 	sub	r2,r2,r5
   2d128:	40a2983a 	sll	r17,r8,r2
   2d12c:	5948d83a 	srl	r4,r11,r5
   2d130:	5896983a 	sll	r11,r11,r2
   2d134:	4150d83a 	srl	r8,r8,r5
   2d138:	8922b03a 	or	r17,r17,r4
   2d13c:	5816c03a 	cmpne	r11,r11,zero
   2d140:	8ae2b03a 	or	r17,r17,r11
   2d144:	1a07c83a 	sub	r3,r3,r8
   2d148:	00003706 	br	2d228 <__subdf3+0x5e8>
   2d14c:	5aa3c83a 	sub	r17,r11,r10
   2d150:	40e7c83a 	sub	r19,r8,r3
   2d154:	5c49803a 	cmpltu	r4,r11,r17
   2d158:	9927c83a 	sub	r19,r19,r4
   2d15c:	9880202c 	andhi	r2,r19,128
   2d160:	1000661e 	bne	r2,zero,2d2fc <__subdf3+0x6bc>
   2d164:	8cc4b03a 	or	r2,r17,r19
   2d168:	103eef1e 	bne	r2,zero,2cd28 <__subdf3+0xe8>
   2d16c:	0011883a 	mov	r8,zero
   2d170:	0025883a 	mov	r18,zero
   2d174:	003f9706 	br	2cfd4 <__subdf3+0x394>
   2d178:	4022977a 	slli	r17,r8,29
   2d17c:	00880034 	movhi	r2,8192
   2d180:	10bfffc4 	addi	r2,r2,-1
   2d184:	2088703a 	and	r4,r4,r2
   2d188:	4010d0fa 	srli	r8,r8,3
   2d18c:	2444b03a 	or	r2,r4,r17
   2d190:	003f8e06 	br	2cfcc <__subdf3+0x38c>
   2d194:	04000084 	movi	r16,2
   2d198:	00bfe034 	movhi	r2,65408
   2d19c:	10bfffc4 	addi	r2,r2,-1
   2d1a0:	8806d07a 	srli	r3,r17,1
   2d1a4:	2088703a 	and	r4,r4,r2
   2d1a8:	200497fa 	slli	r2,r4,31
   2d1ac:	8c40004c 	andi	r17,r17,1
   2d1b0:	1c62b03a 	or	r17,r3,r17
   2d1b4:	2008d07a 	srli	r4,r4,1
   2d1b8:	1462b03a 	or	r17,r2,r17
   2d1bc:	003ef306 	br	2cd8c <__subdf3+0x14c>
   2d1c0:	297ff844 	addi	r5,r5,-31
   2d1c4:	18800820 	cmpeqi	r2,r3,32
   2d1c8:	214ad83a 	srl	r5,r4,r5
   2d1cc:	1000041e 	bne	r2,zero,2d1e0 <__subdf3+0x5a0>
   2d1d0:	00801004 	movi	r2,64
   2d1d4:	10c7c83a 	sub	r3,r2,r3
   2d1d8:	20c8983a 	sll	r4,r4,r3
   2d1dc:	8922b03a 	or	r17,r17,r4
   2d1e0:	8822c03a 	cmpne	r17,r17,zero
   2d1e4:	8962b03a 	or	r17,r17,r5
   2d1e8:	0009883a 	mov	r4,zero
   2d1ec:	0021883a 	mov	r16,zero
   2d1f0:	003f6f06 	br	2cfb0 <__subdf3+0x370>
   2d1f4:	2c7ff804 	addi	r17,r5,-32
   2d1f8:	29000820 	cmpeqi	r4,r5,32
   2d1fc:	1c44d83a 	srl	r2,r3,r17
   2d200:	2000041e 	bne	r4,zero,2d214 <__subdf3+0x5d4>
   2d204:	01001004 	movi	r4,64
   2d208:	214bc83a 	sub	r5,r4,r5
   2d20c:	1946983a 	sll	r3,r3,r5
   2d210:	50d4b03a 	or	r10,r10,r3
   2d214:	5022c03a 	cmpne	r17,r10,zero
   2d218:	88a2b03a 	or	r17,r17,r2
   2d21c:	003eba06 	br	2cd08 <__subdf3+0xc8>
   2d220:	42d0b03a 	or	r8,r8,r11
   2d224:	4022c03a 	cmpne	r17,r8,zero
   2d228:	5463c83a 	sub	r17,r10,r17
   2d22c:	5449803a 	cmpltu	r4,r10,r17
   2d230:	1909c83a 	sub	r4,r3,r4
   2d234:	6821883a 	mov	r16,r13
   2d238:	003eb606 	br	2cd14 <__subdf3+0xd4>
   2d23c:	42c4b03a 	or	r2,r8,r11
   2d240:	10009726 	beq	r2,zero,2d4a0 <__subdf3+0x860>
   2d244:	28bfffc4 	addi	r2,r5,-1
   2d248:	1000b926 	beq	r2,zero,2d530 <__subdf3+0x8f0>
   2d24c:	2941ffd8 	cmpnei	r5,r5,2047
   2d250:	28007326 	beq	r5,zero,2d420 <__subdf3+0x7e0>
   2d254:	100b883a 	mov	r5,r2
   2d258:	003f2406 	br	2ceec <__subdf3+0x2ac>
   2d25c:	00800804 	movi	r2,32
   2d260:	1145c83a 	sub	r2,r2,r5
   2d264:	18a2983a 	sll	r17,r3,r2
   2d268:	5148d83a 	srl	r4,r10,r5
   2d26c:	5084983a 	sll	r2,r10,r2
   2d270:	1946d83a 	srl	r3,r3,r5
   2d274:	8922b03a 	or	r17,r17,r4
   2d278:	1004c03a 	cmpne	r2,r2,zero
   2d27c:	88a2b03a 	or	r17,r17,r2
   2d280:	40d1883a 	add	r8,r8,r3
   2d284:	003f5a06 	br	2cff0 <__subdf3+0x3b0>
   2d288:	1101ffe0 	cmpeqi	r4,r2,2047
   2d28c:	203f601e 	bne	r4,zero,2d010 <__subdf3+0x3d0>
   2d290:	5a95883a 	add	r10,r11,r10
   2d294:	52d7803a 	cmpltu	r11,r10,r11
   2d298:	40c9883a 	add	r4,r8,r3
   2d29c:	22c9883a 	add	r4,r4,r11
   2d2a0:	202297fa 	slli	r17,r4,31
   2d2a4:	5014d07a 	srli	r10,r10,1
   2d2a8:	2008d07a 	srli	r4,r4,1
   2d2ac:	1021883a 	mov	r16,r2
   2d2b0:	8aa2b03a 	or	r17,r17,r10
   2d2b4:	003f3e06 	br	2cfb0 <__subdf3+0x370>
   2d2b8:	1808977a 	slli	r4,r3,29
   2d2bc:	00880034 	movhi	r2,8192
   2d2c0:	10bfffc4 	addi	r2,r2,-1
   2d2c4:	308c703a 	and	r6,r6,r2
   2d2c8:	1810d0fa 	srli	r8,r3,3
   2d2cc:	3104b03a 	or	r2,r6,r4
   2d2d0:	003f3e06 	br	2cfcc <__subdf3+0x38c>
   2d2d4:	383f521e 	bne	r7,zero,2d020 <__subdf3+0x3e0>
   2d2d8:	10009d26 	beq	r2,zero,2d550 <__subdf3+0x910>
   2d2dc:	1808977a 	slli	r4,r3,29
   2d2e0:	00880034 	movhi	r2,8192
   2d2e4:	10bfffc4 	addi	r2,r2,-1
   2d2e8:	3084703a 	and	r2,r6,r2
   2d2ec:	1810d0fa 	srli	r8,r3,3
   2d2f0:	1104b03a 	or	r2,r2,r4
   2d2f4:	4825883a 	mov	r18,r9
   2d2f8:	003f5a06 	br	2d064 <__subdf3+0x424>
   2d2fc:	52e3c83a 	sub	r17,r10,r11
   2d300:	1a09c83a 	sub	r4,r3,r8
   2d304:	5467803a 	cmpltu	r19,r10,r17
   2d308:	24e7c83a 	sub	r19,r4,r19
   2d30c:	4825883a 	mov	r18,r9
   2d310:	003e8506 	br	2cd28 <__subdf3+0xe8>
   2d314:	4022977a 	slli	r17,r8,29
   2d318:	00880034 	movhi	r2,8192
   2d31c:	10bfffc4 	addi	r2,r2,-1
   2d320:	2088703a 	and	r4,r4,r2
   2d324:	4010d0fa 	srli	r8,r8,3
   2d328:	2444b03a 	or	r2,r4,r17
   2d32c:	003f4d06 	br	2d064 <__subdf3+0x424>
   2d330:	5aa3c83a 	sub	r17,r11,r10
   2d334:	40c9c83a 	sub	r4,r8,r3
   2d338:	5c57803a 	cmpltu	r11,r11,r17
   2d33c:	22c9c83a 	sub	r4,r4,r11
   2d340:	04000044 	movi	r16,1
   2d344:	003e7306 	br	2cd14 <__subdf3+0xd4>
   2d348:	4004977a 	slli	r2,r8,29
   2d34c:	00c80034 	movhi	r3,8192
   2d350:	18ffffc4 	addi	r3,r3,-1
   2d354:	20c8703a 	and	r4,r4,r3
   2d358:	4010d0fa 	srli	r8,r8,3
   2d35c:	1104b03a 	or	r2,r2,r4
   2d360:	003f4006 	br	2d064 <__subdf3+0x424>
   2d364:	4004977a 	slli	r2,r8,29
   2d368:	00c80034 	movhi	r3,8192
   2d36c:	18ffffc4 	addi	r3,r3,-1
   2d370:	20c8703a 	and	r4,r4,r3
   2d374:	4010d0fa 	srli	r8,r8,3
   2d378:	1104b03a 	or	r2,r2,r4
   2d37c:	003f1306 	br	2cfcc <__subdf3+0x38c>
   2d380:	1804977a 	slli	r2,r3,29
   2d384:	01080034 	movhi	r4,8192
   2d388:	213fffc4 	addi	r4,r4,-1
   2d38c:	310c703a 	and	r6,r6,r4
   2d390:	1810d0fa 	srli	r8,r3,3
   2d394:	1184b03a 	or	r2,r2,r6
   2d398:	003f3206 	br	2d064 <__subdf3+0x424>
   2d39c:	42d0b03a 	or	r8,r8,r11
   2d3a0:	4022c03a 	cmpne	r17,r8,zero
   2d3a4:	003edf06 	br	2cf24 <__subdf3+0x2e4>
   2d3a8:	2c7ff804 	addi	r17,r5,-32
   2d3ac:	29000820 	cmpeqi	r4,r5,32
   2d3b0:	4444d83a 	srl	r2,r8,r17
   2d3b4:	2000041e 	bne	r4,zero,2d3c8 <__subdf3+0x788>
   2d3b8:	01001004 	movi	r4,64
   2d3bc:	214bc83a 	sub	r5,r4,r5
   2d3c0:	4150983a 	sll	r8,r8,r5
   2d3c4:	5a16b03a 	or	r11,r11,r8
   2d3c8:	5822c03a 	cmpne	r17,r11,zero
   2d3cc:	88a2b03a 	or	r17,r17,r2
   2d3d0:	003f9506 	br	2d228 <__subdf3+0x5e8>
   2d3d4:	103fea26 	beq	r2,zero,2d380 <__subdf3+0x740>
   2d3d8:	1a94b03a 	or	r10,r3,r10
   2d3dc:	400e977a 	slli	r7,r8,29
   2d3e0:	4010d0fa 	srli	r8,r8,3
   2d3e4:	503f111e 	bne	r10,zero,2d02c <__subdf3+0x3ec>
   2d3e8:	00880034 	movhi	r2,8192
   2d3ec:	10bfffc4 	addi	r2,r2,-1
   2d3f0:	2084703a 	and	r2,r4,r2
   2d3f4:	11c4b03a 	or	r2,r2,r7
   2d3f8:	003f1a06 	br	2d064 <__subdf3+0x424>
   2d3fc:	103f5b26 	beq	r2,zero,2d16c <__subdf3+0x52c>
   2d400:	1804977a 	slli	r2,r3,29
   2d404:	01080034 	movhi	r4,8192
   2d408:	213fffc4 	addi	r4,r4,-1
   2d40c:	310c703a 	and	r6,r6,r4
   2d410:	1810d0fa 	srli	r8,r3,3
   2d414:	1184b03a 	or	r2,r2,r6
   2d418:	4825883a 	mov	r18,r9
   2d41c:	003eed06 	br	2cfd4 <__subdf3+0x394>
   2d420:	1808977a 	slli	r4,r3,29
   2d424:	00880034 	movhi	r2,8192
   2d428:	10bfffc4 	addi	r2,r2,-1
   2d42c:	3084703a 	and	r2,r6,r2
   2d430:	1810d0fa 	srli	r8,r3,3
   2d434:	1104b03a 	or	r2,r2,r4
   2d438:	003f0a06 	br	2d064 <__subdf3+0x424>
   2d43c:	52e3c83a 	sub	r17,r10,r11
   2d440:	1a09c83a 	sub	r4,r3,r8
   2d444:	5455803a 	cmpltu	r10,r10,r17
   2d448:	2289c83a 	sub	r4,r4,r10
   2d44c:	04000044 	movi	r16,1
   2d450:	003e3006 	br	2cd14 <__subdf3+0xd4>
   2d454:	4006977a 	slli	r3,r8,29
   2d458:	00880034 	movhi	r2,8192
   2d45c:	10bfffc4 	addi	r2,r2,-1
   2d460:	2084703a 	and	r2,r4,r2
   2d464:	4010d0fa 	srli	r8,r8,3
   2d468:	10c4b03a 	or	r2,r2,r3
   2d46c:	003efd06 	br	2d064 <__subdf3+0x424>
   2d470:	5aa3c83a 	sub	r17,r11,r10
   2d474:	5c45803a 	cmpltu	r2,r11,r17
   2d478:	40c9c83a 	sub	r4,r8,r3
   2d47c:	2089c83a 	sub	r4,r4,r2
   2d480:	2080202c 	andhi	r2,r4,128
   2d484:	10002f26 	beq	r2,zero,2d544 <__subdf3+0x904>
   2d488:	52e3c83a 	sub	r17,r10,r11
   2d48c:	1a09c83a 	sub	r4,r3,r8
   2d490:	5455803a 	cmpltu	r10,r10,r17
   2d494:	2289c83a 	sub	r4,r4,r10
   2d498:	4825883a 	mov	r18,r9
   2d49c:	003e3b06 	br	2cd8c <__subdf3+0x14c>
   2d4a0:	1808977a 	slli	r4,r3,29
   2d4a4:	00880034 	movhi	r2,8192
   2d4a8:	10bfffc4 	addi	r2,r2,-1
   2d4ac:	3084703a 	and	r2,r6,r2
   2d4b0:	1810d0fa 	srli	r8,r3,3
   2d4b4:	1104b03a 	or	r2,r2,r4
   2d4b8:	003ec406 	br	2cfcc <__subdf3+0x38c>
   2d4bc:	1808977a 	slli	r4,r3,29
   2d4c0:	00880034 	movhi	r2,8192
   2d4c4:	10bfffc4 	addi	r2,r2,-1
   2d4c8:	3084703a 	and	r2,r6,r2
   2d4cc:	1810d0fa 	srli	r8,r3,3
   2d4d0:	1104b03a 	or	r2,r2,r4
   2d4d4:	003ebf06 	br	2cfd4 <__subdf3+0x394>
   2d4d8:	5aa3883a 	add	r17,r11,r10
   2d4dc:	40c9883a 	add	r4,r8,r3
   2d4e0:	8ad7803a 	cmpltu	r11,r17,r11
   2d4e4:	22c9883a 	add	r4,r4,r11
   2d4e8:	2080202c 	andhi	r2,r4,128
   2d4ec:	103eb026 	beq	r2,zero,2cfb0 <__subdf3+0x370>
   2d4f0:	00bfe034 	movhi	r2,65408
   2d4f4:	10bfffc4 	addi	r2,r2,-1
   2d4f8:	2088703a 	and	r4,r4,r2
   2d4fc:	04000044 	movi	r16,1
   2d500:	003eab06 	br	2cfb0 <__subdf3+0x370>
   2d504:	28bff804 	addi	r2,r5,-32
   2d508:	29000820 	cmpeqi	r4,r5,32
   2d50c:	4084d83a 	srl	r2,r8,r2
   2d510:	2000041e 	bne	r4,zero,2d524 <__subdf3+0x8e4>
   2d514:	01001004 	movi	r4,64
   2d518:	214bc83a 	sub	r5,r4,r5
   2d51c:	4150983a 	sll	r8,r8,r5
   2d520:	5a16b03a 	or	r11,r11,r8
   2d524:	5822c03a 	cmpne	r17,r11,zero
   2d528:	88a2b03a 	or	r17,r17,r2
   2d52c:	003e7d06 	br	2cf24 <__subdf3+0x2e4>
   2d530:	5aa3883a 	add	r17,r11,r10
   2d534:	40c9883a 	add	r4,r8,r3
   2d538:	8a95803a 	cmpltu	r10,r17,r10
   2d53c:	2289883a 	add	r4,r4,r10
   2d540:	003e9806 	br	2cfa4 <__subdf3+0x364>
   2d544:	8904b03a 	or	r2,r17,r4
   2d548:	103f0826 	beq	r2,zero,2d16c <__subdf3+0x52c>
   2d54c:	003e9806 	br	2cfb0 <__subdf3+0x370>
   2d550:	02000434 	movhi	r8,16
   2d554:	423fffc4 	addi	r8,r8,-1
   2d558:	0025883a 	mov	r18,zero
   2d55c:	00bfffc4 	movi	r2,-1
   2d560:	003ec206 	br	2d06c <__subdf3+0x42c>
   2d564:	0005883a 	mov	r2,zero
   2d568:	0141ffc4 	movi	r5,2047
   2d56c:	0007883a 	mov	r3,zero
   2d570:	003e1d06 	br	2cde8 <__subdf3+0x1a8>

0002d574 <__unorddf2>:
   2d574:	2806d53a 	srli	r3,r5,20
   2d578:	3810d53a 	srli	r8,r7,20
   2d57c:	02400434 	movhi	r9,16
   2d580:	18c1ffcc 	andi	r3,r3,2047
   2d584:	4a7fffc4 	addi	r9,r9,-1
   2d588:	18c1ffd8 	cmpnei	r3,r3,2047
   2d58c:	2a4a703a 	and	r5,r5,r9
   2d590:	3a4e703a 	and	r7,r7,r9
   2d594:	4201ffcc 	andi	r8,r8,2047
   2d598:	18000426 	beq	r3,zero,2d5ac <__unorddf2+0x38>
   2d59c:	4201ffd8 	cmpnei	r8,r8,2047
   2d5a0:	40000626 	beq	r8,zero,2d5bc <__unorddf2+0x48>
   2d5a4:	0005883a 	mov	r2,zero
   2d5a8:	f800283a 	ret
   2d5ac:	214ab03a 	or	r5,r4,r5
   2d5b0:	283ffa26 	beq	r5,zero,2d59c <__unorddf2+0x28>
   2d5b4:	00800044 	movi	r2,1
   2d5b8:	f800283a 	ret
   2d5bc:	398eb03a 	or	r7,r7,r6
   2d5c0:	3804c03a 	cmpne	r2,r7,zero
   2d5c4:	f800283a 	ret

0002d5c8 <__fixdfsi>:
   2d5c8:	2806d53a 	srli	r3,r5,20
   2d5cc:	01800434 	movhi	r6,16
   2d5d0:	31bfffc4 	addi	r6,r6,-1
   2d5d4:	18c1ffcc 	andi	r3,r3,2047
   2d5d8:	19c0ffd0 	cmplti	r7,r3,1023
   2d5dc:	2810d7fa 	srli	r8,r5,31
   2d5e0:	298a703a 	and	r5,r5,r6
   2d5e4:	3800061e 	bne	r7,zero,2d600 <__fixdfsi+0x38>
   2d5e8:	18810790 	cmplti	r2,r3,1054
   2d5ec:	1000061e 	bne	r2,zero,2d608 <__fixdfsi+0x40>
   2d5f0:	00a00034 	movhi	r2,32768
   2d5f4:	10bfffc4 	addi	r2,r2,-1
   2d5f8:	4085883a 	add	r2,r8,r2
   2d5fc:	f800283a 	ret
   2d600:	0005883a 	mov	r2,zero
   2d604:	f800283a 	ret
   2d608:	01810cc4 	movi	r6,1075
   2d60c:	30cdc83a 	sub	r6,r6,r3
   2d610:	30800808 	cmpgei	r2,r6,32
   2d614:	29400434 	orhi	r5,r5,16
   2d618:	1000071e 	bne	r2,zero,2d638 <__fixdfsi+0x70>
   2d61c:	18befb44 	addi	r2,r3,-1043
   2d620:	2884983a 	sll	r2,r5,r2
   2d624:	2188d83a 	srl	r4,r4,r6
   2d628:	1104b03a 	or	r2,r2,r4
   2d62c:	403ff526 	beq	r8,zero,2d604 <__fixdfsi+0x3c>
   2d630:	0085c83a 	sub	r2,zero,r2
   2d634:	f800283a 	ret
   2d638:	008104c4 	movi	r2,1043
   2d63c:	10c5c83a 	sub	r2,r2,r3
   2d640:	2884d83a 	srl	r2,r5,r2
   2d644:	003ff906 	br	2d62c <__fixdfsi+0x64>

0002d648 <__floatsidf>:
   2d648:	defffd04 	addi	sp,sp,-12
   2d64c:	dfc00215 	stw	ra,8(sp)
   2d650:	dc400115 	stw	r17,4(sp)
   2d654:	dc000015 	stw	r16,0(sp)
   2d658:	20001326 	beq	r4,zero,2d6a8 <__floatsidf+0x60>
   2d65c:	2022d7fa 	srli	r17,r4,31
   2d660:	2021883a 	mov	r16,r4
   2d664:	20002516 	blt	r4,zero,2d6fc <__floatsidf+0xb4>
   2d668:	8009883a 	mov	r4,r16
   2d66c:	002d7940 	call	2d794 <__clzsi2>
   2d670:	01410784 	movi	r5,1054
   2d674:	288bc83a 	sub	r5,r5,r2
   2d678:	10c002c8 	cmpgei	r3,r2,11
   2d67c:	2941ffcc 	andi	r5,r5,2047
   2d680:	1800171e 	bne	r3,zero,2d6e0 <__floatsidf+0x98>
   2d684:	00c002c4 	movi	r3,11
   2d688:	1887c83a 	sub	r3,r3,r2
   2d68c:	80c6d83a 	srl	r3,r16,r3
   2d690:	01000434 	movhi	r4,16
   2d694:	10800544 	addi	r2,r2,21
   2d698:	213fffc4 	addi	r4,r4,-1
   2d69c:	8084983a 	sll	r2,r16,r2
   2d6a0:	1906703a 	and	r3,r3,r4
   2d6a4:	00000406 	br	2d6b8 <__floatsidf+0x70>
   2d6a8:	0023883a 	mov	r17,zero
   2d6ac:	000b883a 	mov	r5,zero
   2d6b0:	0007883a 	mov	r3,zero
   2d6b4:	0005883a 	mov	r2,zero
   2d6b8:	280a953a 	slli	r5,r5,20
   2d6bc:	8c403fcc 	andi	r17,r17,255
   2d6c0:	882297fa 	slli	r17,r17,31
   2d6c4:	28c6b03a 	or	r3,r5,r3
   2d6c8:	1c46b03a 	or	r3,r3,r17
   2d6cc:	dfc00217 	ldw	ra,8(sp)
   2d6d0:	dc400117 	ldw	r17,4(sp)
   2d6d4:	dc000017 	ldw	r16,0(sp)
   2d6d8:	dec00304 	addi	sp,sp,12
   2d6dc:	f800283a 	ret
   2d6e0:	10bffd44 	addi	r2,r2,-11
   2d6e4:	8086983a 	sll	r3,r16,r2
   2d6e8:	00800434 	movhi	r2,16
   2d6ec:	10bfffc4 	addi	r2,r2,-1
   2d6f0:	1886703a 	and	r3,r3,r2
   2d6f4:	0005883a 	mov	r2,zero
   2d6f8:	003fef06 	br	2d6b8 <__floatsidf+0x70>
   2d6fc:	0121c83a 	sub	r16,zero,r4
   2d700:	003fd906 	br	2d668 <__floatsidf+0x20>

0002d704 <__floatunsidf>:
   2d704:	defffe04 	addi	sp,sp,-8
   2d708:	dc000015 	stw	r16,0(sp)
   2d70c:	dfc00115 	stw	ra,4(sp)
   2d710:	2021883a 	mov	r16,r4
   2d714:	20000f26 	beq	r4,zero,2d754 <__floatunsidf+0x50>
   2d718:	002d7940 	call	2d794 <__clzsi2>
   2d71c:	00c10784 	movi	r3,1054
   2d720:	1887c83a 	sub	r3,r3,r2
   2d724:	110002c8 	cmpgei	r4,r2,11
   2d728:	18c1ffcc 	andi	r3,r3,2047
   2d72c:	2000121e 	bne	r4,zero,2d778 <__floatunsidf+0x74>
   2d730:	014002c4 	movi	r5,11
   2d734:	288bc83a 	sub	r5,r5,r2
   2d738:	814ad83a 	srl	r5,r16,r5
   2d73c:	01000434 	movhi	r4,16
   2d740:	10800544 	addi	r2,r2,21
   2d744:	213fffc4 	addi	r4,r4,-1
   2d748:	80a0983a 	sll	r16,r16,r2
   2d74c:	290a703a 	and	r5,r5,r4
   2d750:	00000206 	br	2d75c <__floatunsidf+0x58>
   2d754:	0007883a 	mov	r3,zero
   2d758:	000b883a 	mov	r5,zero
   2d75c:	1806953a 	slli	r3,r3,20
   2d760:	8005883a 	mov	r2,r16
   2d764:	1946b03a 	or	r3,r3,r5
   2d768:	dfc00117 	ldw	ra,4(sp)
   2d76c:	dc000017 	ldw	r16,0(sp)
   2d770:	dec00204 	addi	sp,sp,8
   2d774:	f800283a 	ret
   2d778:	10bffd44 	addi	r2,r2,-11
   2d77c:	808a983a 	sll	r5,r16,r2
   2d780:	00800434 	movhi	r2,16
   2d784:	10bfffc4 	addi	r2,r2,-1
   2d788:	288a703a 	and	r5,r5,r2
   2d78c:	0021883a 	mov	r16,zero
   2d790:	003ff206 	br	2d75c <__floatunsidf+0x58>

0002d794 <__clzsi2>:
   2d794:	00bfffd4 	movui	r2,65535
   2d798:	11000436 	bltu	r2,r4,2d7ac <__clzsi2+0x18>
   2d79c:	20804030 	cmpltui	r2,r4,256
   2d7a0:	10000e26 	beq	r2,zero,2d7dc <__clzsi2+0x48>
   2d7a4:	01400804 	movi	r5,32
   2d7a8:	00000406 	br	2d7bc <__clzsi2+0x28>
   2d7ac:	00804034 	movhi	r2,256
   2d7b0:	20800736 	bltu	r4,r2,2d7d0 <__clzsi2+0x3c>
   2d7b4:	2008d63a 	srli	r4,r4,24
   2d7b8:	01400204 	movi	r5,8
   2d7bc:	00c000f4 	movhi	r3,3
   2d7c0:	20c7883a 	add	r3,r4,r3
   2d7c4:	1881cb03 	ldbu	r2,1836(r3)
   2d7c8:	2885c83a 	sub	r2,r5,r2
   2d7cc:	f800283a 	ret
   2d7d0:	2008d43a 	srli	r4,r4,16
   2d7d4:	01400404 	movi	r5,16
   2d7d8:	003ff806 	br	2d7bc <__clzsi2+0x28>
   2d7dc:	2008d23a 	srli	r4,r4,8
   2d7e0:	01400604 	movi	r5,24
   2d7e4:	003ff506 	br	2d7bc <__clzsi2+0x28>

0002d7e8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d7e8:	defffe04 	addi	sp,sp,-8
   2d7ec:	dfc00115 	stw	ra,4(sp)
   2d7f0:	df000015 	stw	fp,0(sp)
   2d7f4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d7f8:	d0a00e17 	ldw	r2,-32712(gp)
   2d7fc:	10000326 	beq	r2,zero,2d80c <alt_get_errno+0x24>
   2d800:	d0a00e17 	ldw	r2,-32712(gp)
   2d804:	103ee83a 	callr	r2
   2d808:	00000106 	br	2d810 <alt_get_errno+0x28>
   2d80c:	d0a72404 	addi	r2,gp,-25456
}
   2d810:	e037883a 	mov	sp,fp
   2d814:	dfc00117 	ldw	ra,4(sp)
   2d818:	df000017 	ldw	fp,0(sp)
   2d81c:	dec00204 	addi	sp,sp,8
   2d820:	f800283a 	ret

0002d824 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   2d824:	defffb04 	addi	sp,sp,-20
   2d828:	dfc00415 	stw	ra,16(sp)
   2d82c:	df000315 	stw	fp,12(sp)
   2d830:	df000304 	addi	fp,sp,12
   2d834:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   2d838:	e0bffd17 	ldw	r2,-12(fp)
   2d83c:	10000916 	blt	r2,zero,2d864 <close+0x40>
   2d840:	e0fffd17 	ldw	r3,-12(fp)
   2d844:	1805883a 	mov	r2,r3
   2d848:	1085883a 	add	r2,r2,r2
   2d84c:	10c5883a 	add	r2,r2,r3
   2d850:	100490ba 	slli	r2,r2,2
   2d854:	00c000f4 	movhi	r3,3
   2d858:	18c49004 	addi	r3,r3,4672
   2d85c:	10c5883a 	add	r2,r2,r3
   2d860:	00000106 	br	2d868 <close+0x44>
   2d864:	0005883a 	mov	r2,zero
   2d868:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
   2d86c:	e0bfff17 	ldw	r2,-4(fp)
   2d870:	10001926 	beq	r2,zero,2d8d8 <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   2d874:	e0bfff17 	ldw	r2,-4(fp)
   2d878:	10800017 	ldw	r2,0(r2)
   2d87c:	10800417 	ldw	r2,16(r2)
   2d880:	10000626 	beq	r2,zero,2d89c <close+0x78>
   2d884:	e0bfff17 	ldw	r2,-4(fp)
   2d888:	10800017 	ldw	r2,0(r2)
   2d88c:	10800417 	ldw	r2,16(r2)
   2d890:	e13fff17 	ldw	r4,-4(fp)
   2d894:	103ee83a 	callr	r2
   2d898:	00000106 	br	2d8a0 <close+0x7c>
   2d89c:	0005883a 	mov	r2,zero
   2d8a0:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   2d8a4:	e13ffd17 	ldw	r4,-12(fp)
   2d8a8:	002e0e00 	call	2e0e0 <alt_release_fd>
    if (rval < 0)
   2d8ac:	e0bffe17 	ldw	r2,-8(fp)
   2d8b0:	1000070e 	bge	r2,zero,2d8d0 <close+0xac>
    {
      ALT_ERRNO = -rval;
   2d8b4:	002d7e80 	call	2d7e8 <alt_get_errno>
   2d8b8:	1007883a 	mov	r3,r2
   2d8bc:	e0bffe17 	ldw	r2,-8(fp)
   2d8c0:	0085c83a 	sub	r2,zero,r2
   2d8c4:	18800015 	stw	r2,0(r3)
      return -1;
   2d8c8:	00bfffc4 	movi	r2,-1
   2d8cc:	00000706 	br	2d8ec <close+0xc8>
    }
    return 0;
   2d8d0:	0005883a 	mov	r2,zero
   2d8d4:	00000506 	br	2d8ec <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d8d8:	002d7e80 	call	2d7e8 <alt_get_errno>
   2d8dc:	1007883a 	mov	r3,r2
   2d8e0:	00801444 	movi	r2,81
   2d8e4:	18800015 	stw	r2,0(r3)
    return -1;
   2d8e8:	00bfffc4 	movi	r2,-1
  }
}
   2d8ec:	e037883a 	mov	sp,fp
   2d8f0:	dfc00117 	ldw	ra,4(sp)
   2d8f4:	df000017 	ldw	fp,0(sp)
   2d8f8:	dec00204 	addi	sp,sp,8
   2d8fc:	f800283a 	ret

0002d900 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   2d900:	defffc04 	addi	sp,sp,-16
   2d904:	df000315 	stw	fp,12(sp)
   2d908:	df000304 	addi	fp,sp,12
   2d90c:	e13fff15 	stw	r4,-4(fp)
   2d910:	e17ffe15 	stw	r5,-8(fp)
   2d914:	e1bffd15 	stw	r6,-12(fp)
  return len;
   2d918:	e0bffd17 	ldw	r2,-12(fp)
}
   2d91c:	e037883a 	mov	sp,fp
   2d920:	df000017 	ldw	fp,0(sp)
   2d924:	dec00104 	addi	sp,sp,4
   2d928:	f800283a 	ret

0002d92c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   2d92c:	defffd04 	addi	sp,sp,-12
   2d930:	df000215 	stw	fp,8(sp)
   2d934:	df000204 	addi	fp,sp,8
   2d938:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   2d93c:	0001883a 	nop
   2d940:	e0bffe17 	ldw	r2,-8(fp)
   2d944:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   2d948:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   2d94c:	10000226 	beq	r2,zero,2d958 <_exit+0x2c>
    ALT_SIM_FAIL();
   2d950:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
   2d954:	00000106 	br	2d95c <_exit+0x30>
    ALT_SIM_PASS();
   2d958:	002af0b0 	cmpltui	zero,zero,43970
}
   2d95c:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   2d960:	003fff06 	br	2d960 <_exit+0x34>

0002d964 <alt_get_errno>:
{
   2d964:	defffe04 	addi	sp,sp,-8
   2d968:	dfc00115 	stw	ra,4(sp)
   2d96c:	df000015 	stw	fp,0(sp)
   2d970:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d974:	d0a00e17 	ldw	r2,-32712(gp)
   2d978:	10000326 	beq	r2,zero,2d988 <alt_get_errno+0x24>
   2d97c:	d0a00e17 	ldw	r2,-32712(gp)
   2d980:	103ee83a 	callr	r2
   2d984:	00000106 	br	2d98c <alt_get_errno+0x28>
   2d988:	d0a72404 	addi	r2,gp,-25456
}
   2d98c:	e037883a 	mov	sp,fp
   2d990:	dfc00117 	ldw	ra,4(sp)
   2d994:	df000017 	ldw	fp,0(sp)
   2d998:	dec00204 	addi	sp,sp,8
   2d99c:	f800283a 	ret

0002d9a0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   2d9a0:	defffb04 	addi	sp,sp,-20
   2d9a4:	dfc00415 	stw	ra,16(sp)
   2d9a8:	df000315 	stw	fp,12(sp)
   2d9ac:	df000304 	addi	fp,sp,12
   2d9b0:	e13ffe15 	stw	r4,-8(fp)
   2d9b4:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d9b8:	e0bffe17 	ldw	r2,-8(fp)
   2d9bc:	10000916 	blt	r2,zero,2d9e4 <fstat+0x44>
   2d9c0:	e0fffe17 	ldw	r3,-8(fp)
   2d9c4:	1805883a 	mov	r2,r3
   2d9c8:	1085883a 	add	r2,r2,r2
   2d9cc:	10c5883a 	add	r2,r2,r3
   2d9d0:	100490ba 	slli	r2,r2,2
   2d9d4:	00c000f4 	movhi	r3,3
   2d9d8:	18c49004 	addi	r3,r3,4672
   2d9dc:	10c5883a 	add	r2,r2,r3
   2d9e0:	00000106 	br	2d9e8 <fstat+0x48>
   2d9e4:	0005883a 	mov	r2,zero
   2d9e8:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2d9ec:	e0bfff17 	ldw	r2,-4(fp)
   2d9f0:	10001026 	beq	r2,zero,2da34 <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   2d9f4:	e0bfff17 	ldw	r2,-4(fp)
   2d9f8:	10800017 	ldw	r2,0(r2)
   2d9fc:	10800817 	ldw	r2,32(r2)
   2da00:	10000726 	beq	r2,zero,2da20 <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
   2da04:	e0bfff17 	ldw	r2,-4(fp)
   2da08:	10800017 	ldw	r2,0(r2)
   2da0c:	10800817 	ldw	r2,32(r2)
   2da10:	e17ffd17 	ldw	r5,-12(fp)
   2da14:	e13fff17 	ldw	r4,-4(fp)
   2da18:	103ee83a 	callr	r2
   2da1c:	00000a06 	br	2da48 <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   2da20:	e0bffd17 	ldw	r2,-12(fp)
   2da24:	00c80004 	movi	r3,8192
   2da28:	10c00115 	stw	r3,4(r2)
      return 0;
   2da2c:	0005883a 	mov	r2,zero
   2da30:	00000506 	br	2da48 <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2da34:	002d9640 	call	2d964 <alt_get_errno>
   2da38:	1007883a 	mov	r3,r2
   2da3c:	00801444 	movi	r2,81
   2da40:	18800015 	stw	r2,0(r3)
    return -1;
   2da44:	00bfffc4 	movi	r2,-1
  }
}
   2da48:	e037883a 	mov	sp,fp
   2da4c:	dfc00117 	ldw	ra,4(sp)
   2da50:	df000017 	ldw	fp,0(sp)
   2da54:	dec00204 	addi	sp,sp,8
   2da58:	f800283a 	ret

0002da5c <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
   2da5c:	deffff04 	addi	sp,sp,-4
   2da60:	df000015 	stw	fp,0(sp)
   2da64:	d839883a 	mov	fp,sp
  return 0;
   2da68:	0005883a 	mov	r2,zero
}
   2da6c:	e037883a 	mov	sp,fp
   2da70:	df000017 	ldw	fp,0(sp)
   2da74:	dec00104 	addi	sp,sp,4
   2da78:	f800283a 	ret

0002da7c <alt_get_errno>:
{
   2da7c:	defffe04 	addi	sp,sp,-8
   2da80:	dfc00115 	stw	ra,4(sp)
   2da84:	df000015 	stw	fp,0(sp)
   2da88:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2da8c:	d0a00e17 	ldw	r2,-32712(gp)
   2da90:	10000326 	beq	r2,zero,2daa0 <alt_get_errno+0x24>
   2da94:	d0a00e17 	ldw	r2,-32712(gp)
   2da98:	103ee83a 	callr	r2
   2da9c:	00000106 	br	2daa4 <alt_get_errno+0x28>
   2daa0:	d0a72404 	addi	r2,gp,-25456
}
   2daa4:	e037883a 	mov	sp,fp
   2daa8:	dfc00117 	ldw	ra,4(sp)
   2daac:	df000017 	ldw	fp,0(sp)
   2dab0:	dec00204 	addi	sp,sp,8
   2dab4:	f800283a 	ret

0002dab8 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   2dab8:	deffea04 	addi	sp,sp,-88
   2dabc:	dfc01515 	stw	ra,84(sp)
   2dac0:	df001415 	stw	fp,80(sp)
   2dac4:	df001404 	addi	fp,sp,80
   2dac8:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2dacc:	e0bfec17 	ldw	r2,-80(fp)
   2dad0:	10000916 	blt	r2,zero,2daf8 <isatty+0x40>
   2dad4:	e0ffec17 	ldw	r3,-80(fp)
   2dad8:	1805883a 	mov	r2,r3
   2dadc:	1085883a 	add	r2,r2,r2
   2dae0:	10c5883a 	add	r2,r2,r3
   2dae4:	100490ba 	slli	r2,r2,2
   2dae8:	00c000f4 	movhi	r3,3
   2daec:	18c49004 	addi	r3,r3,4672
   2daf0:	10c5883a 	add	r2,r2,r3
   2daf4:	00000106 	br	2dafc <isatty+0x44>
   2daf8:	0005883a 	mov	r2,zero
   2dafc:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2db00:	e0bfff17 	ldw	r2,-4(fp)
   2db04:	10000e26 	beq	r2,zero,2db40 <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   2db08:	e0bfff17 	ldw	r2,-4(fp)
   2db0c:	10800017 	ldw	r2,0(r2)
   2db10:	10800817 	ldw	r2,32(r2)
   2db14:	1000021e 	bne	r2,zero,2db20 <isatty+0x68>
    {
      return 1;
   2db18:	00800044 	movi	r2,1
   2db1c:	00000d06 	br	2db54 <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   2db20:	e0bfed04 	addi	r2,fp,-76
   2db24:	100b883a 	mov	r5,r2
   2db28:	e13fec17 	ldw	r4,-80(fp)
   2db2c:	002d9a00 	call	2d9a0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   2db30:	e0bfee17 	ldw	r2,-72(fp)
   2db34:	10880020 	cmpeqi	r2,r2,8192
   2db38:	10803fcc 	andi	r2,r2,255
   2db3c:	00000506 	br	2db54 <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2db40:	002da7c0 	call	2da7c <alt_get_errno>
   2db44:	1007883a 	mov	r3,r2
   2db48:	00801444 	movi	r2,81
   2db4c:	18800015 	stw	r2,0(r3)
    return 0;
   2db50:	0005883a 	mov	r2,zero
  }
}
   2db54:	e037883a 	mov	sp,fp
   2db58:	dfc00117 	ldw	ra,4(sp)
   2db5c:	df000017 	ldw	fp,0(sp)
   2db60:	dec00204 	addi	sp,sp,8
   2db64:	f800283a 	ret

0002db68 <alt_get_errno>:
{
   2db68:	defffe04 	addi	sp,sp,-8
   2db6c:	dfc00115 	stw	ra,4(sp)
   2db70:	df000015 	stw	fp,0(sp)
   2db74:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2db78:	d0a00e17 	ldw	r2,-32712(gp)
   2db7c:	10000326 	beq	r2,zero,2db8c <alt_get_errno+0x24>
   2db80:	d0a00e17 	ldw	r2,-32712(gp)
   2db84:	103ee83a 	callr	r2
   2db88:	00000106 	br	2db90 <alt_get_errno+0x28>
   2db8c:	d0a72404 	addi	r2,gp,-25456
}
   2db90:	e037883a 	mov	sp,fp
   2db94:	dfc00117 	ldw	ra,4(sp)
   2db98:	df000017 	ldw	fp,0(sp)
   2db9c:	dec00204 	addi	sp,sp,8
   2dba0:	f800283a 	ret

0002dba4 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
   2dba4:	defffb04 	addi	sp,sp,-20
   2dba8:	dfc00415 	stw	ra,16(sp)
   2dbac:	df000315 	stw	fp,12(sp)
   2dbb0:	df000304 	addi	fp,sp,12
   2dbb4:	e13ffe15 	stw	r4,-8(fp)
   2dbb8:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
   2dbbc:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
   2dbc0:	e0bffe17 	ldw	r2,-8(fp)
   2dbc4:	00802e16 	blt	zero,r2,2dc80 <kill+0xdc>
   2dbc8:	e0bffd17 	ldw	r2,-12(fp)
   2dbcc:	10800828 	cmpgeui	r2,r2,32
   2dbd0:	1000281e 	bne	r2,zero,2dc74 <kill+0xd0>
   2dbd4:	e0bffd17 	ldw	r2,-12(fp)
   2dbd8:	100690ba 	slli	r3,r2,2
   2dbdc:	008000f4 	movhi	r2,3
   2dbe0:	1885883a 	add	r2,r3,r2
   2dbe4:	10b6fb17 	ldw	r2,-9236(r2)
   2dbe8:	1000683a 	jmp	r2
   2dbec:	0002dc94 	movui	zero,2930
   2dbf0:	0002dc74 	movhi	zero,2929
   2dbf4:	0002dc74 	movhi	zero,2929
   2dbf8:	0002dc6c 	andhi	zero,zero,2929
   2dbfc:	0002dc6c 	andhi	zero,zero,2929
   2dc00:	0002dc6c 	andhi	zero,zero,2929
   2dc04:	0002dc6c 	andhi	zero,zero,2929
   2dc08:	0002dc74 	movhi	zero,2929
   2dc0c:	0002dc6c 	andhi	zero,zero,2929
   2dc10:	0002dc6c 	andhi	zero,zero,2929
   2dc14:	0002dc6c 	andhi	zero,zero,2929
   2dc18:	0002dc6c 	andhi	zero,zero,2929
   2dc1c:	0002dc6c 	andhi	zero,zero,2929
   2dc20:	0002dc6c 	andhi	zero,zero,2929
   2dc24:	0002dc6c 	andhi	zero,zero,2929
   2dc28:	0002dc6c 	andhi	zero,zero,2929
   2dc2c:	0002dc94 	movui	zero,2930
   2dc30:	0002dc74 	movhi	zero,2929
   2dc34:	0002dc74 	movhi	zero,2929
   2dc38:	0002dc74 	movhi	zero,2929
   2dc3c:	0002dc94 	movui	zero,2930
   2dc40:	0002dc74 	movhi	zero,2929
   2dc44:	0002dc74 	movhi	zero,2929
   2dc48:	0002dc6c 	andhi	zero,zero,2929
   2dc4c:	0002dc6c 	andhi	zero,zero,2929
   2dc50:	0002dc6c 	andhi	zero,zero,2929
   2dc54:	0002dc6c 	andhi	zero,zero,2929
   2dc58:	0002dc6c 	andhi	zero,zero,2929
   2dc5c:	0002dc74 	movhi	zero,2929
   2dc60:	0002dc74 	movhi	zero,2929
   2dc64:	0002dc6c 	andhi	zero,zero,2929
   2dc68:	0002dc6c 	andhi	zero,zero,2929
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
   2dc6c:	0009883a 	mov	r4,zero
   2dc70:	002d92c0 	call	2d92c <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
   2dc74:	00800584 	movi	r2,22
   2dc78:	e0bfff15 	stw	r2,-4(fp)
   2dc7c:	00000606 	br	2dc98 <kill+0xf4>
    }
  }

  else if (pid > 0)
   2dc80:	e0bffe17 	ldw	r2,-8(fp)
   2dc84:	0080040e 	bge	zero,r2,2dc98 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
   2dc88:	008000c4 	movi	r2,3
   2dc8c:	e0bfff15 	stw	r2,-4(fp)
   2dc90:	00000106 	br	2dc98 <kill+0xf4>
      break;
   2dc94:	0001883a 	nop
  }

  if (status)
   2dc98:	e0bfff17 	ldw	r2,-4(fp)
   2dc9c:	10000626 	beq	r2,zero,2dcb8 <kill+0x114>
  {
    ALT_ERRNO = status;
   2dca0:	002db680 	call	2db68 <alt_get_errno>
   2dca4:	1007883a 	mov	r3,r2
   2dca8:	e0bfff17 	ldw	r2,-4(fp)
   2dcac:	18800015 	stw	r2,0(r3)
    return -1;
   2dcb0:	00bfffc4 	movi	r2,-1
   2dcb4:	00000106 	br	2dcbc <kill+0x118>
  }

  return 0;
   2dcb8:	0005883a 	mov	r2,zero
}
   2dcbc:	e037883a 	mov	sp,fp
   2dcc0:	dfc00117 	ldw	ra,4(sp)
   2dcc4:	df000017 	ldw	fp,0(sp)
   2dcc8:	dec00204 	addi	sp,sp,8
   2dccc:	f800283a 	ret

0002dcd0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   2dcd0:	defffc04 	addi	sp,sp,-16
   2dcd4:	df000315 	stw	fp,12(sp)
   2dcd8:	df000304 	addi	fp,sp,12
   2dcdc:	e13fff15 	stw	r4,-4(fp)
   2dce0:	e17ffe15 	stw	r5,-8(fp)
   2dce4:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
   2dce8:	e0fffe17 	ldw	r3,-8(fp)
   2dcec:	e0bfff17 	ldw	r2,-4(fp)
   2dcf0:	18800c26 	beq	r3,r2,2dd24 <alt_load_section+0x54>
  {
    while( to != end )
   2dcf4:	00000806 	br	2dd18 <alt_load_section+0x48>
    {
      *to++ = *from++;
   2dcf8:	e0ffff17 	ldw	r3,-4(fp)
   2dcfc:	18800104 	addi	r2,r3,4
   2dd00:	e0bfff15 	stw	r2,-4(fp)
   2dd04:	e0bffe17 	ldw	r2,-8(fp)
   2dd08:	11000104 	addi	r4,r2,4
   2dd0c:	e13ffe15 	stw	r4,-8(fp)
   2dd10:	18c00017 	ldw	r3,0(r3)
   2dd14:	10c00015 	stw	r3,0(r2)
    while( to != end )
   2dd18:	e0fffe17 	ldw	r3,-8(fp)
   2dd1c:	e0bffd17 	ldw	r2,-12(fp)
   2dd20:	18bff51e 	bne	r3,r2,2dcf8 <alt_load_section+0x28>
    }
  }
}
   2dd24:	0001883a 	nop
   2dd28:	e037883a 	mov	sp,fp
   2dd2c:	df000017 	ldw	fp,0(sp)
   2dd30:	dec00104 	addi	sp,sp,4
   2dd34:	f800283a 	ret

0002dd38 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   2dd38:	defffe04 	addi	sp,sp,-8
   2dd3c:	dfc00115 	stw	ra,4(sp)
   2dd40:	df000015 	stw	fp,0(sp)
   2dd44:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   2dd48:	018000f4 	movhi	r6,3
   2dd4c:	31892604 	addi	r6,r6,9368
   2dd50:	014000f4 	movhi	r5,3
   2dd54:	29421c04 	addi	r5,r5,2160
   2dd58:	010000f4 	movhi	r4,3
   2dd5c:	21092604 	addi	r4,r4,9368
   2dd60:	002dcd00 	call	2dcd0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   2dd64:	018000b4 	movhi	r6,2
   2dd68:	31808a04 	addi	r6,r6,552
   2dd6c:	014000b4 	movhi	r5,2
   2dd70:	29400804 	addi	r5,r5,32
   2dd74:	010000b4 	movhi	r4,2
   2dd78:	21000804 	addi	r4,r4,32
   2dd7c:	002dcd00 	call	2dcd0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   2dd80:	018000f4 	movhi	r6,3
   2dd84:	31821c04 	addi	r6,r6,2160
   2dd88:	014000f4 	movhi	r5,3
   2dd8c:	29407604 	addi	r5,r5,472
   2dd90:	010000f4 	movhi	r4,3
   2dd94:	21007604 	addi	r4,r4,472
   2dd98:	002dcd00 	call	2dcd0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   2dd9c:	002f37c0 	call	2f37c <alt_dcache_flush_all>
  alt_icache_flush_all();
   2dda0:	002f5d80 	call	2f5d8 <alt_icache_flush_all>
}
   2dda4:	0001883a 	nop
   2dda8:	e037883a 	mov	sp,fp
   2ddac:	dfc00117 	ldw	ra,4(sp)
   2ddb0:	df000017 	ldw	fp,0(sp)
   2ddb4:	dec00204 	addi	sp,sp,8
   2ddb8:	f800283a 	ret

0002ddbc <alt_get_errno>:
{
   2ddbc:	defffe04 	addi	sp,sp,-8
   2ddc0:	dfc00115 	stw	ra,4(sp)
   2ddc4:	df000015 	stw	fp,0(sp)
   2ddc8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2ddcc:	d0a00e17 	ldw	r2,-32712(gp)
   2ddd0:	10000326 	beq	r2,zero,2dde0 <alt_get_errno+0x24>
   2ddd4:	d0a00e17 	ldw	r2,-32712(gp)
   2ddd8:	103ee83a 	callr	r2
   2dddc:	00000106 	br	2dde4 <alt_get_errno+0x28>
   2dde0:	d0a72404 	addi	r2,gp,-25456
}
   2dde4:	e037883a 	mov	sp,fp
   2dde8:	dfc00117 	ldw	ra,4(sp)
   2ddec:	df000017 	ldw	fp,0(sp)
   2ddf0:	dec00204 	addi	sp,sp,8
   2ddf4:	f800283a 	ret

0002ddf8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   2ddf8:	defff904 	addi	sp,sp,-28
   2ddfc:	dfc00615 	stw	ra,24(sp)
   2de00:	df000515 	stw	fp,20(sp)
   2de04:	df000504 	addi	fp,sp,20
   2de08:	e13ffd15 	stw	r4,-12(fp)
   2de0c:	e17ffc15 	stw	r5,-16(fp)
   2de10:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   2de14:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2de18:	e0bffd17 	ldw	r2,-12(fp)
   2de1c:	10000916 	blt	r2,zero,2de44 <lseek+0x4c>
   2de20:	e0fffd17 	ldw	r3,-12(fp)
   2de24:	1805883a 	mov	r2,r3
   2de28:	1085883a 	add	r2,r2,r2
   2de2c:	10c5883a 	add	r2,r2,r3
   2de30:	100490ba 	slli	r2,r2,2
   2de34:	00c000f4 	movhi	r3,3
   2de38:	18c49004 	addi	r3,r3,4672
   2de3c:	10c5883a 	add	r2,r2,r3
   2de40:	00000106 	br	2de48 <lseek+0x50>
   2de44:	0005883a 	mov	r2,zero
   2de48:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
   2de4c:	e0bffe17 	ldw	r2,-8(fp)
   2de50:	10001026 	beq	r2,zero,2de94 <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   2de54:	e0bffe17 	ldw	r2,-8(fp)
   2de58:	10800017 	ldw	r2,0(r2)
   2de5c:	10800717 	ldw	r2,28(r2)
   2de60:	10000926 	beq	r2,zero,2de88 <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   2de64:	e0bffe17 	ldw	r2,-8(fp)
   2de68:	10800017 	ldw	r2,0(r2)
   2de6c:	10800717 	ldw	r2,28(r2)
   2de70:	e1bffb17 	ldw	r6,-20(fp)
   2de74:	e17ffc17 	ldw	r5,-16(fp)
   2de78:	e13ffe17 	ldw	r4,-8(fp)
   2de7c:	103ee83a 	callr	r2
   2de80:	e0bfff15 	stw	r2,-4(fp)
   2de84:	00000506 	br	2de9c <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   2de88:	00bfde84 	movi	r2,-134
   2de8c:	e0bfff15 	stw	r2,-4(fp)
   2de90:	00000206 	br	2de9c <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
   2de94:	00bfebc4 	movi	r2,-81
   2de98:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
   2de9c:	e0bfff17 	ldw	r2,-4(fp)
   2dea0:	1000070e 	bge	r2,zero,2dec0 <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
   2dea4:	002ddbc0 	call	2ddbc <alt_get_errno>
   2dea8:	1007883a 	mov	r3,r2
   2deac:	e0bfff17 	ldw	r2,-4(fp)
   2deb0:	0085c83a 	sub	r2,zero,r2
   2deb4:	18800015 	stw	r2,0(r3)
    rc = -1;
   2deb8:	00bfffc4 	movi	r2,-1
   2debc:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
   2dec0:	e0bfff17 	ldw	r2,-4(fp)
}
   2dec4:	e037883a 	mov	sp,fp
   2dec8:	dfc00117 	ldw	ra,4(sp)
   2decc:	df000017 	ldw	fp,0(sp)
   2ded0:	dec00204 	addi	sp,sp,8
   2ded4:	f800283a 	ret

0002ded8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   2ded8:	defffd04 	addi	sp,sp,-12
   2dedc:	dfc00215 	stw	ra,8(sp)
   2dee0:	df000115 	stw	fp,4(sp)
   2dee4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   2dee8:	0009883a 	mov	r4,zero
   2deec:	002e37c0 	call	2e37c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   2def0:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   2def4:	002e3b80 	call	2e3b8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   2def8:	018000f4 	movhi	r6,3
   2defc:	31820e04 	addi	r6,r6,2104
   2df00:	014000f4 	movhi	r5,3
   2df04:	29420e04 	addi	r5,r5,2104
   2df08:	010000f4 	movhi	r4,3
   2df0c:	21020e04 	addi	r4,r4,2104
   2df10:	002f6cc0 	call	2f6cc <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   2df14:	002f4800 	call	2f480 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   2df18:	010000f4 	movhi	r4,3
   2df1c:	213d3904 	addi	r4,r4,-2844
   2df20:	002ff680 	call	2ff68 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   2df24:	d0a72617 	ldw	r2,-25448(gp)
   2df28:	d0e72717 	ldw	r3,-25444(gp)
   2df2c:	d1272817 	ldw	r4,-25440(gp)
   2df30:	200d883a 	mov	r6,r4
   2df34:	180b883a 	mov	r5,r3
   2df38:	1009883a 	mov	r4,r2
   2df3c:	002072c0 	call	2072c <main>
   2df40:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   2df44:	01000044 	movi	r4,1
   2df48:	002d8240 	call	2d824 <close>
  exit (result);
   2df4c:	e13fff17 	ldw	r4,-4(fp)
   2df50:	002ff7c0 	call	2ff7c <exit>

0002df54 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   2df54:	defffe04 	addi	sp,sp,-8
   2df58:	df000115 	stw	fp,4(sp)
   2df5c:	df000104 	addi	fp,sp,4
   2df60:	e13fff15 	stw	r4,-4(fp)
}
   2df64:	0001883a 	nop
   2df68:	e037883a 	mov	sp,fp
   2df6c:	df000017 	ldw	fp,0(sp)
   2df70:	dec00104 	addi	sp,sp,4
   2df74:	f800283a 	ret

0002df78 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   2df78:	defffe04 	addi	sp,sp,-8
   2df7c:	df000115 	stw	fp,4(sp)
   2df80:	df000104 	addi	fp,sp,4
   2df84:	e13fff15 	stw	r4,-4(fp)
}
   2df88:	0001883a 	nop
   2df8c:	e037883a 	mov	sp,fp
   2df90:	df000017 	ldw	fp,0(sp)
   2df94:	dec00104 	addi	sp,sp,4
   2df98:	f800283a 	ret

0002df9c <alt_get_errno>:
{
   2df9c:	defffe04 	addi	sp,sp,-8
   2dfa0:	dfc00115 	stw	ra,4(sp)
   2dfa4:	df000015 	stw	fp,0(sp)
   2dfa8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2dfac:	d0a00e17 	ldw	r2,-32712(gp)
   2dfb0:	10000326 	beq	r2,zero,2dfc0 <alt_get_errno+0x24>
   2dfb4:	d0a00e17 	ldw	r2,-32712(gp)
   2dfb8:	103ee83a 	callr	r2
   2dfbc:	00000106 	br	2dfc4 <alt_get_errno+0x28>
   2dfc0:	d0a72404 	addi	r2,gp,-25456
}
   2dfc4:	e037883a 	mov	sp,fp
   2dfc8:	dfc00117 	ldw	ra,4(sp)
   2dfcc:	df000017 	ldw	fp,0(sp)
   2dfd0:	dec00204 	addi	sp,sp,8
   2dfd4:	f800283a 	ret

0002dfd8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   2dfd8:	defff904 	addi	sp,sp,-28
   2dfdc:	dfc00615 	stw	ra,24(sp)
   2dfe0:	df000515 	stw	fp,20(sp)
   2dfe4:	df000504 	addi	fp,sp,20
   2dfe8:	e13ffd15 	stw	r4,-12(fp)
   2dfec:	e17ffc15 	stw	r5,-16(fp)
   2dff0:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2dff4:	e0bffd17 	ldw	r2,-12(fp)
   2dff8:	10000916 	blt	r2,zero,2e020 <read+0x48>
   2dffc:	e0fffd17 	ldw	r3,-12(fp)
   2e000:	1805883a 	mov	r2,r3
   2e004:	1085883a 	add	r2,r2,r2
   2e008:	10c5883a 	add	r2,r2,r3
   2e00c:	100490ba 	slli	r2,r2,2
   2e010:	00c000f4 	movhi	r3,3
   2e014:	18c49004 	addi	r3,r3,4672
   2e018:	10c5883a 	add	r2,r2,r3
   2e01c:	00000106 	br	2e024 <read+0x4c>
   2e020:	0005883a 	mov	r2,zero
   2e024:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2e028:	e0bfff17 	ldw	r2,-4(fp)
   2e02c:	10002226 	beq	r2,zero,2e0b8 <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2e030:	e0bfff17 	ldw	r2,-4(fp)
   2e034:	10800217 	ldw	r2,8(r2)
   2e038:	108000cc 	andi	r2,r2,3
   2e03c:	10800060 	cmpeqi	r2,r2,1
   2e040:	1000181e 	bne	r2,zero,2e0a4 <read+0xcc>
        (fd->dev->read))
   2e044:	e0bfff17 	ldw	r2,-4(fp)
   2e048:	10800017 	ldw	r2,0(r2)
   2e04c:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2e050:	10001426 	beq	r2,zero,2e0a4 <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   2e054:	e0bfff17 	ldw	r2,-4(fp)
   2e058:	10800017 	ldw	r2,0(r2)
   2e05c:	10800517 	ldw	r2,20(r2)
   2e060:	e0fffb17 	ldw	r3,-20(fp)
   2e064:	180d883a 	mov	r6,r3
   2e068:	e17ffc17 	ldw	r5,-16(fp)
   2e06c:	e13fff17 	ldw	r4,-4(fp)
   2e070:	103ee83a 	callr	r2
   2e074:	e0bffe15 	stw	r2,-8(fp)
   2e078:	e0bffe17 	ldw	r2,-8(fp)
   2e07c:	1000070e 	bge	r2,zero,2e09c <read+0xc4>
        {
          ALT_ERRNO = -rval;
   2e080:	002df9c0 	call	2df9c <alt_get_errno>
   2e084:	1007883a 	mov	r3,r2
   2e088:	e0bffe17 	ldw	r2,-8(fp)
   2e08c:	0085c83a 	sub	r2,zero,r2
   2e090:	18800015 	stw	r2,0(r3)
          return -1;
   2e094:	00bfffc4 	movi	r2,-1
   2e098:	00000c06 	br	2e0cc <read+0xf4>
        }
        return rval;
   2e09c:	e0bffe17 	ldw	r2,-8(fp)
   2e0a0:	00000a06 	br	2e0cc <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
   2e0a4:	002df9c0 	call	2df9c <alt_get_errno>
   2e0a8:	1007883a 	mov	r3,r2
   2e0ac:	00800344 	movi	r2,13
   2e0b0:	18800015 	stw	r2,0(r3)
   2e0b4:	00000406 	br	2e0c8 <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   2e0b8:	002df9c0 	call	2df9c <alt_get_errno>
   2e0bc:	1007883a 	mov	r3,r2
   2e0c0:	00801444 	movi	r2,81
   2e0c4:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2e0c8:	00bfffc4 	movi	r2,-1
}
   2e0cc:	e037883a 	mov	sp,fp
   2e0d0:	dfc00117 	ldw	ra,4(sp)
   2e0d4:	df000017 	ldw	fp,0(sp)
   2e0d8:	dec00204 	addi	sp,sp,8
   2e0dc:	f800283a 	ret

0002e0e0 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   2e0e0:	defffe04 	addi	sp,sp,-8
   2e0e4:	df000115 	stw	fp,4(sp)
   2e0e8:	df000104 	addi	fp,sp,4
   2e0ec:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   2e0f0:	e0bfff17 	ldw	r2,-4(fp)
   2e0f4:	108000d0 	cmplti	r2,r2,3
   2e0f8:	1000101e 	bne	r2,zero,2e13c <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
   2e0fc:	e0ffff17 	ldw	r3,-4(fp)
   2e100:	1805883a 	mov	r2,r3
   2e104:	1085883a 	add	r2,r2,r2
   2e108:	10c5883a 	add	r2,r2,r3
   2e10c:	100490ba 	slli	r2,r2,2
   2e110:	00c000f4 	movhi	r3,3
   2e114:	10c7883a 	add	r3,r2,r3
   2e118:	18049215 	stw	zero,4680(r3)
    alt_fd_list[fd].dev      = 0;
   2e11c:	e0ffff17 	ldw	r3,-4(fp)
   2e120:	1805883a 	mov	r2,r3
   2e124:	1085883a 	add	r2,r2,r2
   2e128:	10c5883a 	add	r2,r2,r3
   2e12c:	100490ba 	slli	r2,r2,2
   2e130:	00c000f4 	movhi	r3,3
   2e134:	10c7883a 	add	r3,r2,r3
   2e138:	18049015 	stw	zero,4672(r3)
  }
}
   2e13c:	0001883a 	nop
   2e140:	e037883a 	mov	sp,fp
   2e144:	df000017 	ldw	fp,0(sp)
   2e148:	dec00104 	addi	sp,sp,4
   2e14c:	f800283a 	ret

0002e150 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   2e150:	defff904 	addi	sp,sp,-28
   2e154:	df000615 	stw	fp,24(sp)
   2e158:	df000604 	addi	fp,sp,24
   2e15c:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
   2e160:	0005303a 	rdctl	r2,status
   2e164:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e168:	e0fffd17 	ldw	r3,-12(fp)
   2e16c:	00bfff84 	movi	r2,-2
   2e170:	1884703a 	and	r2,r3,r2
   2e174:	1001703a 	wrctl	status,r2
  return context;
   2e178:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   2e17c:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   2e180:	d0a00f17 	ldw	r2,-32708(gp)
   2e184:	10c000c4 	addi	r3,r2,3
   2e188:	00bfff04 	movi	r2,-4
   2e18c:	1884703a 	and	r2,r3,r2
   2e190:	d0a00f15 	stw	r2,-32708(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   2e194:	d0e00f17 	ldw	r3,-32708(gp)
   2e198:	e0bffa17 	ldw	r2,-24(fp)
   2e19c:	1887883a 	add	r3,r3,r2
   2e1a0:	00800134 	movhi	r2,4
   2e1a4:	10800004 	addi	r2,r2,0
   2e1a8:	10c0072e 	bgeu	r2,r3,2e1c8 <sbrk+0x78>
   2e1ac:	e0bfff17 	ldw	r2,-4(fp)
   2e1b0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   2e1b4:	e0bffc17 	ldw	r2,-16(fp)
   2e1b8:	1001703a 	wrctl	status,r2
}
   2e1bc:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   2e1c0:	00bfffc4 	movi	r2,-1
   2e1c4:	00000c06 	br	2e1f8 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   2e1c8:	d0a00f17 	ldw	r2,-32708(gp)
   2e1cc:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
   2e1d0:	d0e00f17 	ldw	r3,-32708(gp)
   2e1d4:	e0bffa17 	ldw	r2,-24(fp)
   2e1d8:	1885883a 	add	r2,r3,r2
   2e1dc:	d0a00f15 	stw	r2,-32708(gp)
   2e1e0:	e0bfff17 	ldw	r2,-4(fp)
   2e1e4:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   2e1e8:	e0bffb17 	ldw	r2,-20(fp)
   2e1ec:	1001703a 	wrctl	status,r2
}
   2e1f0:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   2e1f4:	e0bffe17 	ldw	r2,-8(fp)
} 
   2e1f8:	e037883a 	mov	sp,fp
   2e1fc:	df000017 	ldw	fp,0(sp)
   2e200:	dec00104 	addi	sp,sp,4
   2e204:	f800283a 	ret

0002e208 <alt_get_errno>:
{
   2e208:	defffe04 	addi	sp,sp,-8
   2e20c:	dfc00115 	stw	ra,4(sp)
   2e210:	df000015 	stw	fp,0(sp)
   2e214:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e218:	d0a00e17 	ldw	r2,-32712(gp)
   2e21c:	10000326 	beq	r2,zero,2e22c <alt_get_errno+0x24>
   2e220:	d0a00e17 	ldw	r2,-32712(gp)
   2e224:	103ee83a 	callr	r2
   2e228:	00000106 	br	2e230 <alt_get_errno+0x28>
   2e22c:	d0a72404 	addi	r2,gp,-25456
}
   2e230:	e037883a 	mov	sp,fp
   2e234:	dfc00117 	ldw	ra,4(sp)
   2e238:	df000017 	ldw	fp,0(sp)
   2e23c:	dec00204 	addi	sp,sp,8
   2e240:	f800283a 	ret

0002e244 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   2e244:	defff904 	addi	sp,sp,-28
   2e248:	dfc00615 	stw	ra,24(sp)
   2e24c:	df000515 	stw	fp,20(sp)
   2e250:	df000504 	addi	fp,sp,20
   2e254:	e13ffd15 	stw	r4,-12(fp)
   2e258:	e17ffc15 	stw	r5,-16(fp)
   2e25c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2e260:	e0bffd17 	ldw	r2,-12(fp)
   2e264:	10000916 	blt	r2,zero,2e28c <write+0x48>
   2e268:	e0fffd17 	ldw	r3,-12(fp)
   2e26c:	1805883a 	mov	r2,r3
   2e270:	1085883a 	add	r2,r2,r2
   2e274:	10c5883a 	add	r2,r2,r3
   2e278:	100490ba 	slli	r2,r2,2
   2e27c:	00c000f4 	movhi	r3,3
   2e280:	18c49004 	addi	r3,r3,4672
   2e284:	10c5883a 	add	r2,r2,r3
   2e288:	00000106 	br	2e290 <write+0x4c>
   2e28c:	0005883a 	mov	r2,zero
   2e290:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2e294:	e0bfff17 	ldw	r2,-4(fp)
   2e298:	10002126 	beq	r2,zero,2e320 <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   2e29c:	e0bfff17 	ldw	r2,-4(fp)
   2e2a0:	10800217 	ldw	r2,8(r2)
   2e2a4:	108000cc 	andi	r2,r2,3
   2e2a8:	10001826 	beq	r2,zero,2e30c <write+0xc8>
   2e2ac:	e0bfff17 	ldw	r2,-4(fp)
   2e2b0:	10800017 	ldw	r2,0(r2)
   2e2b4:	10800617 	ldw	r2,24(r2)
   2e2b8:	10001426 	beq	r2,zero,2e30c <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   2e2bc:	e0bfff17 	ldw	r2,-4(fp)
   2e2c0:	10800017 	ldw	r2,0(r2)
   2e2c4:	10800617 	ldw	r2,24(r2)
   2e2c8:	e0fffb17 	ldw	r3,-20(fp)
   2e2cc:	180d883a 	mov	r6,r3
   2e2d0:	e17ffc17 	ldw	r5,-16(fp)
   2e2d4:	e13fff17 	ldw	r4,-4(fp)
   2e2d8:	103ee83a 	callr	r2
   2e2dc:	e0bffe15 	stw	r2,-8(fp)
   2e2e0:	e0bffe17 	ldw	r2,-8(fp)
   2e2e4:	1000070e 	bge	r2,zero,2e304 <write+0xc0>
      {
        ALT_ERRNO = -rval;
   2e2e8:	002e2080 	call	2e208 <alt_get_errno>
   2e2ec:	1007883a 	mov	r3,r2
   2e2f0:	e0bffe17 	ldw	r2,-8(fp)
   2e2f4:	0085c83a 	sub	r2,zero,r2
   2e2f8:	18800015 	stw	r2,0(r3)
        return -1;
   2e2fc:	00bfffc4 	movi	r2,-1
   2e300:	00000c06 	br	2e334 <write+0xf0>
      }
      return rval;
   2e304:	e0bffe17 	ldw	r2,-8(fp)
   2e308:	00000a06 	br	2e334 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
   2e30c:	002e2080 	call	2e208 <alt_get_errno>
   2e310:	1007883a 	mov	r3,r2
   2e314:	00800344 	movi	r2,13
   2e318:	18800015 	stw	r2,0(r3)
   2e31c:	00000406 	br	2e330 <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   2e320:	002e2080 	call	2e208 <alt_get_errno>
   2e324:	1007883a 	mov	r3,r2
   2e328:	00801444 	movi	r2,81
   2e32c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2e330:	00bfffc4 	movi	r2,-1
}
   2e334:	e037883a 	mov	sp,fp
   2e338:	dfc00117 	ldw	ra,4(sp)
   2e33c:	df000017 	ldw	fp,0(sp)
   2e340:	dec00204 	addi	sp,sp,8
   2e344:	f800283a 	ret

0002e348 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   2e348:	defffd04 	addi	sp,sp,-12
   2e34c:	dfc00215 	stw	ra,8(sp)
   2e350:	df000115 	stw	fp,4(sp)
   2e354:	df000104 	addi	fp,sp,4
   2e358:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   2e35c:	d1600b04 	addi	r5,gp,-32724
   2e360:	e13fff17 	ldw	r4,-4(fp)
   2e364:	002f3d80 	call	2f3d8 <alt_dev_llist_insert>
}
   2e368:	e037883a 	mov	sp,fp
   2e36c:	dfc00117 	ldw	ra,4(sp)
   2e370:	df000017 	ldw	fp,0(sp)
   2e374:	dec00204 	addi	sp,sp,8
   2e378:	f800283a 	ret

0002e37c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   2e37c:	defffd04 	addi	sp,sp,-12
   2e380:	dfc00215 	stw	ra,8(sp)
   2e384:	df000115 	stw	fp,4(sp)
   2e388:	df000104 	addi	fp,sp,4
   2e38c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
   2e390:	002fcec0 	call	2fcec <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   2e394:	00800044 	movi	r2,1
   2e398:	1001703a 	wrctl	status,r2
}
   2e39c:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
   2e3a0:	0001883a 	nop
   2e3a4:	e037883a 	mov	sp,fp
   2e3a8:	dfc00117 	ldw	ra,4(sp)
   2e3ac:	df000017 	ldw	fp,0(sp)
   2e3b0:	dec00204 	addi	sp,sp,8
   2e3b4:	f800283a 	ret

0002e3b8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   2e3b8:	defffe04 	addi	sp,sp,-8
   2e3bc:	dfc00115 	stw	ra,4(sp)
   2e3c0:	df000015 	stw	fp,0(sp)
   2e3c4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   2e3c8:	01800084 	movi	r6,2
   2e3cc:	000b883a 	mov	r5,zero
   2e3d0:	010000f4 	movhi	r4,3
   2e3d4:	2104fa04 	addi	r4,r4,5096
   2e3d8:	002e5740 	call	2e574 <altera_avalon_jtag_uart_init>
   2e3dc:	010000f4 	movhi	r4,3
   2e3e0:	2104f004 	addi	r4,r4,5056
   2e3e4:	002e3480 	call	2e348 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
   2e3e8:	0001883a 	nop
    ALTERA_UP_AVALON_ACCELEROMETER_SPI_INIT ( ACCELEROMETER_SPI, accelerometer_spi);
   2e3ec:	010000f4 	movhi	r4,3
   2e3f0:	21090804 	addi	r4,r4,9248
   2e3f4:	002e3480 	call	2e348 <alt_dev_reg>
}
   2e3f8:	0001883a 	nop
   2e3fc:	e037883a 	mov	sp,fp
   2e400:	dfc00117 	ldw	ra,4(sp)
   2e404:	df000017 	ldw	fp,0(sp)
   2e408:	dec00204 	addi	sp,sp,8
   2e40c:	f800283a 	ret

0002e410 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   2e410:	defffa04 	addi	sp,sp,-24
   2e414:	dfc00515 	stw	ra,20(sp)
   2e418:	df000415 	stw	fp,16(sp)
   2e41c:	df000404 	addi	fp,sp,16
   2e420:	e13ffe15 	stw	r4,-8(fp)
   2e424:	e17ffd15 	stw	r5,-12(fp)
   2e428:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e42c:	e0bffe17 	ldw	r2,-8(fp)
   2e430:	10800017 	ldw	r2,0(r2)
   2e434:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   2e438:	e0bfff17 	ldw	r2,-4(fp)
   2e43c:	10c00a04 	addi	r3,r2,40
   2e440:	e0bffe17 	ldw	r2,-8(fp)
   2e444:	10800217 	ldw	r2,8(r2)
   2e448:	100f883a 	mov	r7,r2
   2e44c:	e1bffc17 	ldw	r6,-16(fp)
   2e450:	e17ffd17 	ldw	r5,-12(fp)
   2e454:	1809883a 	mov	r4,r3
   2e458:	002ea340 	call	2ea34 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   2e45c:	e037883a 	mov	sp,fp
   2e460:	dfc00117 	ldw	ra,4(sp)
   2e464:	df000017 	ldw	fp,0(sp)
   2e468:	dec00204 	addi	sp,sp,8
   2e46c:	f800283a 	ret

0002e470 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   2e470:	defffa04 	addi	sp,sp,-24
   2e474:	dfc00515 	stw	ra,20(sp)
   2e478:	df000415 	stw	fp,16(sp)
   2e47c:	df000404 	addi	fp,sp,16
   2e480:	e13ffe15 	stw	r4,-8(fp)
   2e484:	e17ffd15 	stw	r5,-12(fp)
   2e488:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e48c:	e0bffe17 	ldw	r2,-8(fp)
   2e490:	10800017 	ldw	r2,0(r2)
   2e494:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   2e498:	e0bfff17 	ldw	r2,-4(fp)
   2e49c:	10c00a04 	addi	r3,r2,40
   2e4a0:	e0bffe17 	ldw	r2,-8(fp)
   2e4a4:	10800217 	ldw	r2,8(r2)
   2e4a8:	100f883a 	mov	r7,r2
   2e4ac:	e1bffc17 	ldw	r6,-16(fp)
   2e4b0:	e17ffd17 	ldw	r5,-12(fp)
   2e4b4:	1809883a 	mov	r4,r3
   2e4b8:	002ec540 	call	2ec54 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   2e4bc:	e037883a 	mov	sp,fp
   2e4c0:	dfc00117 	ldw	ra,4(sp)
   2e4c4:	df000017 	ldw	fp,0(sp)
   2e4c8:	dec00204 	addi	sp,sp,8
   2e4cc:	f800283a 	ret

0002e4d0 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   2e4d0:	defffc04 	addi	sp,sp,-16
   2e4d4:	dfc00315 	stw	ra,12(sp)
   2e4d8:	df000215 	stw	fp,8(sp)
   2e4dc:	df000204 	addi	fp,sp,8
   2e4e0:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e4e4:	e0bffe17 	ldw	r2,-8(fp)
   2e4e8:	10800017 	ldw	r2,0(r2)
   2e4ec:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   2e4f0:	e0bfff17 	ldw	r2,-4(fp)
   2e4f4:	10c00a04 	addi	r3,r2,40
   2e4f8:	e0bffe17 	ldw	r2,-8(fp)
   2e4fc:	10800217 	ldw	r2,8(r2)
   2e500:	100b883a 	mov	r5,r2
   2e504:	1809883a 	mov	r4,r3
   2e508:	002e8d80 	call	2e8d8 <altera_avalon_jtag_uart_close>
}
   2e50c:	e037883a 	mov	sp,fp
   2e510:	dfc00117 	ldw	ra,4(sp)
   2e514:	df000017 	ldw	fp,0(sp)
   2e518:	dec00204 	addi	sp,sp,8
   2e51c:	f800283a 	ret

0002e520 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   2e520:	defffa04 	addi	sp,sp,-24
   2e524:	dfc00515 	stw	ra,20(sp)
   2e528:	df000415 	stw	fp,16(sp)
   2e52c:	df000404 	addi	fp,sp,16
   2e530:	e13ffe15 	stw	r4,-8(fp)
   2e534:	e17ffd15 	stw	r5,-12(fp)
   2e538:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   2e53c:	e0bffe17 	ldw	r2,-8(fp)
   2e540:	10800017 	ldw	r2,0(r2)
   2e544:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   2e548:	e0bfff17 	ldw	r2,-4(fp)
   2e54c:	10800a04 	addi	r2,r2,40
   2e550:	e1bffc17 	ldw	r6,-16(fp)
   2e554:	e17ffd17 	ldw	r5,-12(fp)
   2e558:	1009883a 	mov	r4,r2
   2e55c:	002e9400 	call	2e940 <altera_avalon_jtag_uart_ioctl>
}
   2e560:	e037883a 	mov	sp,fp
   2e564:	dfc00117 	ldw	ra,4(sp)
   2e568:	df000017 	ldw	fp,0(sp)
   2e56c:	dec00204 	addi	sp,sp,8
   2e570:	f800283a 	ret

0002e574 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   2e574:	defffb04 	addi	sp,sp,-20
   2e578:	dfc00415 	stw	ra,16(sp)
   2e57c:	df000315 	stw	fp,12(sp)
   2e580:	df000304 	addi	fp,sp,12
   2e584:	e13fff15 	stw	r4,-4(fp)
   2e588:	e17ffe15 	stw	r5,-8(fp)
   2e58c:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e590:	e0bfff17 	ldw	r2,-4(fp)
   2e594:	00c00044 	movi	r3,1
   2e598:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   2e59c:	e0bfff17 	ldw	r2,-4(fp)
   2e5a0:	10800017 	ldw	r2,0(r2)
   2e5a4:	10800104 	addi	r2,r2,4
   2e5a8:	1007883a 	mov	r3,r2
   2e5ac:	e0bfff17 	ldw	r2,-4(fp)
   2e5b0:	10800817 	ldw	r2,32(r2)
   2e5b4:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
   2e5b8:	e0bffd17 	ldw	r2,-12(fp)
   2e5bc:	018000f4 	movhi	r6,3
   2e5c0:	31b98a04 	addi	r6,r6,-6616
   2e5c4:	e17fff17 	ldw	r5,-4(fp)
   2e5c8:	1009883a 	mov	r4,r2
   2e5cc:	002f7480 	call	2f748 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   2e5d0:	e0bfff17 	ldw	r2,-4(fp)
   2e5d4:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   2e5d8:	e0bfff17 	ldw	r2,-4(fp)
   2e5dc:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2e5e0:	d0e72a17 	ldw	r3,-25432(gp)
   2e5e4:	e1ffff17 	ldw	r7,-4(fp)
   2e5e8:	018000f4 	movhi	r6,3
   2e5ec:	31ba0e04 	addi	r6,r6,-6088
   2e5f0:	180b883a 	mov	r5,r3
   2e5f4:	1009883a 	mov	r4,r2
   2e5f8:	002f2480 	call	2f248 <alt_alarm_start>
   2e5fc:	1000040e 	bge	r2,zero,2e610 <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   2e600:	e0ffff17 	ldw	r3,-4(fp)
   2e604:	00a00034 	movhi	r2,32768
   2e608:	10bfffc4 	addi	r2,r2,-1
   2e60c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   2e610:	0001883a 	nop
   2e614:	e037883a 	mov	sp,fp
   2e618:	dfc00117 	ldw	ra,4(sp)
   2e61c:	df000017 	ldw	fp,0(sp)
   2e620:	dec00204 	addi	sp,sp,8
   2e624:	f800283a 	ret

0002e628 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   2e628:	defff704 	addi	sp,sp,-36
   2e62c:	df000815 	stw	fp,32(sp)
   2e630:	df000804 	addi	fp,sp,32
   2e634:	e13ff915 	stw	r4,-28(fp)
   2e638:	e17ff815 	stw	r5,-32(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   2e63c:	e0bff917 	ldw	r2,-28(fp)
   2e640:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
   2e644:	e0bffd17 	ldw	r2,-12(fp)
   2e648:	10800017 	ldw	r2,0(r2)
   2e64c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e650:	e0bffc17 	ldw	r2,-16(fp)
   2e654:	10800104 	addi	r2,r2,4
   2e658:	10800037 	ldwio	r2,0(r2)
   2e65c:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   2e660:	e0bffb17 	ldw	r2,-20(fp)
   2e664:	1080c00c 	andi	r2,r2,768
   2e668:	10006d26 	beq	r2,zero,2e820 <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   2e66c:	e0bffb17 	ldw	r2,-20(fp)
   2e670:	1080400c 	andi	r2,r2,256
   2e674:	10003526 	beq	r2,zero,2e74c <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   2e678:	00800074 	movhi	r2,1
   2e67c:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e680:	e0bffd17 	ldw	r2,-12(fp)
   2e684:	10800a17 	ldw	r2,40(r2)
   2e688:	10800044 	addi	r2,r2,1
   2e68c:	1081ffcc 	andi	r2,r2,2047
   2e690:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
   2e694:	e0bffd17 	ldw	r2,-12(fp)
   2e698:	10800b17 	ldw	r2,44(r2)
   2e69c:	e0fffa17 	ldw	r3,-24(fp)
   2e6a0:	18801526 	beq	r3,r2,2e6f8 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   2e6a4:	e0bffc17 	ldw	r2,-16(fp)
   2e6a8:	10800037 	ldwio	r2,0(r2)
   2e6ac:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   2e6b0:	e0bfff17 	ldw	r2,-4(fp)
   2e6b4:	10a0000c 	andi	r2,r2,32768
   2e6b8:	10001126 	beq	r2,zero,2e700 <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   2e6bc:	e0bffd17 	ldw	r2,-12(fp)
   2e6c0:	10800a17 	ldw	r2,40(r2)
   2e6c4:	e0ffff17 	ldw	r3,-4(fp)
   2e6c8:	1809883a 	mov	r4,r3
   2e6cc:	e0fffd17 	ldw	r3,-12(fp)
   2e6d0:	1885883a 	add	r2,r3,r2
   2e6d4:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e6d8:	e0bffd17 	ldw	r2,-12(fp)
   2e6dc:	10800a17 	ldw	r2,40(r2)
   2e6e0:	10800044 	addi	r2,r2,1
   2e6e4:	10c1ffcc 	andi	r3,r2,2047
   2e6e8:	e0bffd17 	ldw	r2,-12(fp)
   2e6ec:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
   2e6f0:	0001883a 	nop
      {
   2e6f4:	003fe206 	br	2e680 <altera_avalon_jtag_uart_irq+0x58>
          break;
   2e6f8:	0001883a 	nop
   2e6fc:	00000106 	br	2e704 <altera_avalon_jtag_uart_irq+0xdc>
          break;
   2e700:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   2e704:	e0bfff17 	ldw	r2,-4(fp)
   2e708:	10bfffec 	andhi	r2,r2,65535
   2e70c:	10000f26 	beq	r2,zero,2e74c <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e710:	e0bffd17 	ldw	r2,-12(fp)
   2e714:	10c00817 	ldw	r3,32(r2)
   2e718:	00bfff84 	movi	r2,-2
   2e71c:	1886703a 	and	r3,r3,r2
   2e720:	e0bffd17 	ldw	r2,-12(fp)
   2e724:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   2e728:	e0bffc17 	ldw	r2,-16(fp)
   2e72c:	10800104 	addi	r2,r2,4
   2e730:	1007883a 	mov	r3,r2
   2e734:	e0bffd17 	ldw	r2,-12(fp)
   2e738:	10800817 	ldw	r2,32(r2)
   2e73c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e740:	e0bffc17 	ldw	r2,-16(fp)
   2e744:	10800104 	addi	r2,r2,4
   2e748:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   2e74c:	e0bffb17 	ldw	r2,-20(fp)
   2e750:	1080800c 	andi	r2,r2,512
   2e754:	103fbe26 	beq	r2,zero,2e650 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   2e758:	e0bffb17 	ldw	r2,-20(fp)
   2e75c:	1004d43a 	srli	r2,r2,16
   2e760:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   2e764:	00001406 	br	2e7b8 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   2e768:	e0bffc17 	ldw	r2,-16(fp)
   2e76c:	e0fffd17 	ldw	r3,-12(fp)
   2e770:	18c00d17 	ldw	r3,52(r3)
   2e774:	e13ffd17 	ldw	r4,-12(fp)
   2e778:	20c7883a 	add	r3,r4,r3
   2e77c:	18c20e03 	ldbu	r3,2104(r3)
   2e780:	18c03fcc 	andi	r3,r3,255
   2e784:	18c0201c 	xori	r3,r3,128
   2e788:	18ffe004 	addi	r3,r3,-128
   2e78c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e790:	e0bffd17 	ldw	r2,-12(fp)
   2e794:	10800d17 	ldw	r2,52(r2)
   2e798:	10800044 	addi	r2,r2,1
   2e79c:	10c1ffcc 	andi	r3,r2,2047
   2e7a0:	e0bffd17 	ldw	r2,-12(fp)
   2e7a4:	10c00d15 	stw	r3,52(r2)
   2e7a8:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   2e7ac:	e0bffe17 	ldw	r2,-8(fp)
   2e7b0:	10bfffc4 	addi	r2,r2,-1
   2e7b4:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
   2e7b8:	e0bffe17 	ldw	r2,-8(fp)
   2e7bc:	10000526 	beq	r2,zero,2e7d4 <altera_avalon_jtag_uart_irq+0x1ac>
   2e7c0:	e0bffd17 	ldw	r2,-12(fp)
   2e7c4:	10c00d17 	ldw	r3,52(r2)
   2e7c8:	e0bffd17 	ldw	r2,-12(fp)
   2e7cc:	10800c17 	ldw	r2,48(r2)
   2e7d0:	18bfe51e 	bne	r3,r2,2e768 <altera_avalon_jtag_uart_irq+0x140>
      }

      if (space > 0)
   2e7d4:	e0bffe17 	ldw	r2,-8(fp)
   2e7d8:	103f9d26 	beq	r2,zero,2e650 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2e7dc:	e0bffd17 	ldw	r2,-12(fp)
   2e7e0:	10c00817 	ldw	r3,32(r2)
   2e7e4:	00bfff44 	movi	r2,-3
   2e7e8:	1886703a 	and	r3,r3,r2
   2e7ec:	e0bffd17 	ldw	r2,-12(fp)
   2e7f0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e7f4:	e0bffd17 	ldw	r2,-12(fp)
   2e7f8:	10800017 	ldw	r2,0(r2)
   2e7fc:	10800104 	addi	r2,r2,4
   2e800:	1007883a 	mov	r3,r2
   2e804:	e0bffd17 	ldw	r2,-12(fp)
   2e808:	10800817 	ldw	r2,32(r2)
   2e80c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e810:	e0bffc17 	ldw	r2,-16(fp)
   2e814:	10800104 	addi	r2,r2,4
   2e818:	10800037 	ldwio	r2,0(r2)
  {
   2e81c:	003f8c06 	br	2e650 <altera_avalon_jtag_uart_irq+0x28>
      break;
   2e820:	0001883a 	nop
      }
    }
  }
}
   2e824:	0001883a 	nop
   2e828:	e037883a 	mov	sp,fp
   2e82c:	df000017 	ldw	fp,0(sp)
   2e830:	dec00104 	addi	sp,sp,4
   2e834:	f800283a 	ret

0002e838 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   2e838:	defffc04 	addi	sp,sp,-16
   2e83c:	df000315 	stw	fp,12(sp)
   2e840:	df000304 	addi	fp,sp,12
   2e844:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   2e848:	e0bffd17 	ldw	r2,-12(fp)
   2e84c:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   2e850:	e0bfff17 	ldw	r2,-4(fp)
   2e854:	10800017 	ldw	r2,0(r2)
   2e858:	10800104 	addi	r2,r2,4
   2e85c:	10800037 	ldwio	r2,0(r2)
   2e860:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   2e864:	e0bffe17 	ldw	r2,-8(fp)
   2e868:	1081000c 	andi	r2,r2,1024
   2e86c:	10000b26 	beq	r2,zero,2e89c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   2e870:	e0bfff17 	ldw	r2,-4(fp)
   2e874:	10800017 	ldw	r2,0(r2)
   2e878:	10800104 	addi	r2,r2,4
   2e87c:	1007883a 	mov	r3,r2
   2e880:	e0bfff17 	ldw	r2,-4(fp)
   2e884:	10800817 	ldw	r2,32(r2)
   2e888:	10810014 	ori	r2,r2,1024
   2e88c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   2e890:	e0bfff17 	ldw	r2,-4(fp)
   2e894:	10000915 	stw	zero,36(r2)
   2e898:	00000a06 	br	2e8c4 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   2e89c:	e0bfff17 	ldw	r2,-4(fp)
   2e8a0:	10c00917 	ldw	r3,36(r2)
   2e8a4:	00a00034 	movhi	r2,32768
   2e8a8:	10bfff04 	addi	r2,r2,-4
   2e8ac:	10c00536 	bltu	r2,r3,2e8c4 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   2e8b0:	e0bfff17 	ldw	r2,-4(fp)
   2e8b4:	10800917 	ldw	r2,36(r2)
   2e8b8:	10c00044 	addi	r3,r2,1
   2e8bc:	e0bfff17 	ldw	r2,-4(fp)
   2e8c0:	10c00915 	stw	r3,36(r2)
   2e8c4:	d0a72a17 	ldw	r2,-25432(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   2e8c8:	e037883a 	mov	sp,fp
   2e8cc:	df000017 	ldw	fp,0(sp)
   2e8d0:	dec00104 	addi	sp,sp,4
   2e8d4:	f800283a 	ret

0002e8d8 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   2e8d8:	defffd04 	addi	sp,sp,-12
   2e8dc:	df000215 	stw	fp,8(sp)
   2e8e0:	df000204 	addi	fp,sp,8
   2e8e4:	e13fff15 	stw	r4,-4(fp)
   2e8e8:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2e8ec:	00000506 	br	2e904 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   2e8f0:	e0bffe17 	ldw	r2,-8(fp)
   2e8f4:	1090000c 	andi	r2,r2,16384
   2e8f8:	10000226 	beq	r2,zero,2e904 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   2e8fc:	00bffd44 	movi	r2,-11
   2e900:	00000b06 	br	2e930 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2e904:	e0bfff17 	ldw	r2,-4(fp)
   2e908:	10c00d17 	ldw	r3,52(r2)
   2e90c:	e0bfff17 	ldw	r2,-4(fp)
   2e910:	10800c17 	ldw	r2,48(r2)
   2e914:	18800526 	beq	r3,r2,2e92c <altera_avalon_jtag_uart_close+0x54>
   2e918:	e0bfff17 	ldw	r2,-4(fp)
   2e91c:	10c00917 	ldw	r3,36(r2)
   2e920:	e0bfff17 	ldw	r2,-4(fp)
   2e924:	10800117 	ldw	r2,4(r2)
   2e928:	18bff136 	bltu	r3,r2,2e8f0 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
   2e92c:	0005883a 	mov	r2,zero
}
   2e930:	e037883a 	mov	sp,fp
   2e934:	df000017 	ldw	fp,0(sp)
   2e938:	dec00104 	addi	sp,sp,4
   2e93c:	f800283a 	ret

0002e940 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   2e940:	defffa04 	addi	sp,sp,-24
   2e944:	df000515 	stw	fp,20(sp)
   2e948:	df000504 	addi	fp,sp,20
   2e94c:	e13ffd15 	stw	r4,-12(fp)
   2e950:	e17ffc15 	stw	r5,-16(fp)
   2e954:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
   2e958:	00bff9c4 	movi	r2,-25
   2e95c:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
   2e960:	e0bffc17 	ldw	r2,-16(fp)
   2e964:	109a8060 	cmpeqi	r2,r2,27137
   2e968:	1000041e 	bne	r2,zero,2e97c <altera_avalon_jtag_uart_ioctl+0x3c>
   2e96c:	e0bffc17 	ldw	r2,-16(fp)
   2e970:	109a80a0 	cmpeqi	r2,r2,27138
   2e974:	1000181e 	bne	r2,zero,2e9d8 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
   2e978:	00002906 	br	2ea20 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
   2e97c:	e0bffd17 	ldw	r2,-12(fp)
   2e980:	10c00117 	ldw	r3,4(r2)
   2e984:	00a00034 	movhi	r2,32768
   2e988:	10bfffc4 	addi	r2,r2,-1
   2e98c:	18802126 	beq	r3,r2,2ea14 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
   2e990:	e0bffb17 	ldw	r2,-20(fp)
   2e994:	10800017 	ldw	r2,0(r2)
   2e998:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   2e99c:	e0bffe17 	ldw	r2,-8(fp)
   2e9a0:	10800090 	cmplti	r2,r2,2
   2e9a4:	1000061e 	bne	r2,zero,2e9c0 <altera_avalon_jtag_uart_ioctl+0x80>
   2e9a8:	e0fffe17 	ldw	r3,-8(fp)
   2e9ac:	00a00034 	movhi	r2,32768
   2e9b0:	10bfffc4 	addi	r2,r2,-1
   2e9b4:	18800226 	beq	r3,r2,2e9c0 <altera_avalon_jtag_uart_ioctl+0x80>
   2e9b8:	e0bffe17 	ldw	r2,-8(fp)
   2e9bc:	00000206 	br	2e9c8 <altera_avalon_jtag_uart_ioctl+0x88>
   2e9c0:	00a00034 	movhi	r2,32768
   2e9c4:	10bfff84 	addi	r2,r2,-2
   2e9c8:	e0fffd17 	ldw	r3,-12(fp)
   2e9cc:	18800115 	stw	r2,4(r3)
      rc = 0;
   2e9d0:	e03fff15 	stw	zero,-4(fp)
    break;
   2e9d4:	00000f06 	br	2ea14 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
   2e9d8:	e0bffd17 	ldw	r2,-12(fp)
   2e9dc:	10c00117 	ldw	r3,4(r2)
   2e9e0:	00a00034 	movhi	r2,32768
   2e9e4:	10bfffc4 	addi	r2,r2,-1
   2e9e8:	18800c26 	beq	r3,r2,2ea1c <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   2e9ec:	e0bffd17 	ldw	r2,-12(fp)
   2e9f0:	10c00917 	ldw	r3,36(r2)
   2e9f4:	e0bffd17 	ldw	r2,-12(fp)
   2e9f8:	10800117 	ldw	r2,4(r2)
   2e9fc:	1885803a 	cmpltu	r2,r3,r2
   2ea00:	10c03fcc 	andi	r3,r2,255
   2ea04:	e0bffb17 	ldw	r2,-20(fp)
   2ea08:	10c00015 	stw	r3,0(r2)
      rc = 0;
   2ea0c:	e03fff15 	stw	zero,-4(fp)
    break;
   2ea10:	00000206 	br	2ea1c <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
   2ea14:	0001883a 	nop
   2ea18:	00000106 	br	2ea20 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
   2ea1c:	0001883a 	nop
  }

  return rc;
   2ea20:	e0bfff17 	ldw	r2,-4(fp)
}
   2ea24:	e037883a 	mov	sp,fp
   2ea28:	df000017 	ldw	fp,0(sp)
   2ea2c:	dec00104 	addi	sp,sp,4
   2ea30:	f800283a 	ret

0002ea34 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   2ea34:	defff304 	addi	sp,sp,-52
   2ea38:	dfc00c15 	stw	ra,48(sp)
   2ea3c:	df000b15 	stw	fp,44(sp)
   2ea40:	df000b04 	addi	fp,sp,44
   2ea44:	e13ff815 	stw	r4,-32(fp)
   2ea48:	e17ff715 	stw	r5,-36(fp)
   2ea4c:	e1bff615 	stw	r6,-40(fp)
   2ea50:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
   2ea54:	e0bff717 	ldw	r2,-36(fp)
   2ea58:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2ea5c:	00004706 	br	2eb7c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   2ea60:	e0bff817 	ldw	r2,-32(fp)
   2ea64:	10800a17 	ldw	r2,40(r2)
   2ea68:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
   2ea6c:	e0bff817 	ldw	r2,-32(fp)
   2ea70:	10800b17 	ldw	r2,44(r2)
   2ea74:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
   2ea78:	e0fffd17 	ldw	r3,-12(fp)
   2ea7c:	e0bffc17 	ldw	r2,-16(fp)
   2ea80:	18800536 	bltu	r3,r2,2ea98 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   2ea84:	e0fffd17 	ldw	r3,-12(fp)
   2ea88:	e0bffc17 	ldw	r2,-16(fp)
   2ea8c:	1885c83a 	sub	r2,r3,r2
   2ea90:	e0bffe15 	stw	r2,-8(fp)
   2ea94:	00000406 	br	2eaa8 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   2ea98:	00c20004 	movi	r3,2048
   2ea9c:	e0bffc17 	ldw	r2,-16(fp)
   2eaa0:	1885c83a 	sub	r2,r3,r2
   2eaa4:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   2eaa8:	e0bffe17 	ldw	r2,-8(fp)
   2eaac:	10001e26 	beq	r2,zero,2eb28 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   2eab0:	e0fff617 	ldw	r3,-40(fp)
   2eab4:	e0bffe17 	ldw	r2,-8(fp)
   2eab8:	1880022e 	bgeu	r3,r2,2eac4 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   2eabc:	e0bff617 	ldw	r2,-40(fp)
   2eac0:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   2eac4:	e0bff817 	ldw	r2,-32(fp)
   2eac8:	10c00e04 	addi	r3,r2,56
   2eacc:	e0bffc17 	ldw	r2,-16(fp)
   2ead0:	1885883a 	add	r2,r3,r2
   2ead4:	e1bffe17 	ldw	r6,-8(fp)
   2ead8:	100b883a 	mov	r5,r2
   2eadc:	e13fff17 	ldw	r4,-4(fp)
   2eae0:	002619c0 	call	2619c <memcpy>
      ptr   += n;
   2eae4:	e0ffff17 	ldw	r3,-4(fp)
   2eae8:	e0bffe17 	ldw	r2,-8(fp)
   2eaec:	1885883a 	add	r2,r3,r2
   2eaf0:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
   2eaf4:	e0fff617 	ldw	r3,-40(fp)
   2eaf8:	e0bffe17 	ldw	r2,-8(fp)
   2eafc:	1885c83a 	sub	r2,r3,r2
   2eb00:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2eb04:	e0fffc17 	ldw	r3,-16(fp)
   2eb08:	e0bffe17 	ldw	r2,-8(fp)
   2eb0c:	1885883a 	add	r2,r3,r2
   2eb10:	10c1ffcc 	andi	r3,r2,2047
   2eb14:	e0bff817 	ldw	r2,-32(fp)
   2eb18:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   2eb1c:	e0bff617 	ldw	r2,-40(fp)
   2eb20:	00bfcf16 	blt	zero,r2,2ea60 <altera_avalon_jtag_uart_read+0x2c>
   2eb24:	00000106 	br	2eb2c <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
   2eb28:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
   2eb2c:	e0ffff17 	ldw	r3,-4(fp)
   2eb30:	e0bff717 	ldw	r2,-36(fp)
   2eb34:	1880141e 	bne	r3,r2,2eb88 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   2eb38:	e0bff517 	ldw	r2,-44(fp)
   2eb3c:	1090000c 	andi	r2,r2,16384
   2eb40:	1000131e 	bne	r2,zero,2eb90 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   2eb44:	0001883a 	nop
   2eb48:	e0bff817 	ldw	r2,-32(fp)
   2eb4c:	10800a17 	ldw	r2,40(r2)
   2eb50:	e0fffd17 	ldw	r3,-12(fp)
   2eb54:	1880051e 	bne	r3,r2,2eb6c <altera_avalon_jtag_uart_read+0x138>
   2eb58:	e0bff817 	ldw	r2,-32(fp)
   2eb5c:	10c00917 	ldw	r3,36(r2)
   2eb60:	e0bff817 	ldw	r2,-32(fp)
   2eb64:	10800117 	ldw	r2,4(r2)
   2eb68:	18bff736 	bltu	r3,r2,2eb48 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   2eb6c:	e0bff817 	ldw	r2,-32(fp)
   2eb70:	10800a17 	ldw	r2,40(r2)
   2eb74:	e0fffd17 	ldw	r3,-12(fp)
   2eb78:	18800726 	beq	r3,r2,2eb98 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
   2eb7c:	e0bff617 	ldw	r2,-40(fp)
   2eb80:	00bfb716 	blt	zero,r2,2ea60 <altera_avalon_jtag_uart_read+0x2c>
   2eb84:	00000506 	br	2eb9c <altera_avalon_jtag_uart_read+0x168>
      break;
   2eb88:	0001883a 	nop
   2eb8c:	00000306 	br	2eb9c <altera_avalon_jtag_uart_read+0x168>
      break;
   2eb90:	0001883a 	nop
   2eb94:	00000106 	br	2eb9c <altera_avalon_jtag_uart_read+0x168>
      break;
   2eb98:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   2eb9c:	e0ffff17 	ldw	r3,-4(fp)
   2eba0:	e0bff717 	ldw	r2,-36(fp)
   2eba4:	18801926 	beq	r3,r2,2ec0c <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
   2eba8:	0005303a 	rdctl	r2,status
   2ebac:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ebb0:	e0fff917 	ldw	r3,-28(fp)
   2ebb4:	00bfff84 	movi	r2,-2
   2ebb8:	1884703a 	and	r2,r3,r2
   2ebbc:	1001703a 	wrctl	status,r2
  return context;
   2ebc0:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   2ebc4:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2ebc8:	e0bff817 	ldw	r2,-32(fp)
   2ebcc:	10800817 	ldw	r2,32(r2)
   2ebd0:	10c00054 	ori	r3,r2,1
   2ebd4:	e0bff817 	ldw	r2,-32(fp)
   2ebd8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2ebdc:	e0bff817 	ldw	r2,-32(fp)
   2ebe0:	10800017 	ldw	r2,0(r2)
   2ebe4:	10800104 	addi	r2,r2,4
   2ebe8:	1007883a 	mov	r3,r2
   2ebec:	e0bff817 	ldw	r2,-32(fp)
   2ebf0:	10800817 	ldw	r2,32(r2)
   2ebf4:	18800035 	stwio	r2,0(r3)
   2ebf8:	e0bffb17 	ldw	r2,-20(fp)
   2ebfc:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   2ec00:	e0bffa17 	ldw	r2,-24(fp)
   2ec04:	1001703a 	wrctl	status,r2
}
   2ec08:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   2ec0c:	e0ffff17 	ldw	r3,-4(fp)
   2ec10:	e0bff717 	ldw	r2,-36(fp)
   2ec14:	18800426 	beq	r3,r2,2ec28 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
   2ec18:	e0ffff17 	ldw	r3,-4(fp)
   2ec1c:	e0bff717 	ldw	r2,-36(fp)
   2ec20:	1885c83a 	sub	r2,r3,r2
   2ec24:	00000606 	br	2ec40 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   2ec28:	e0bff517 	ldw	r2,-44(fp)
   2ec2c:	1090000c 	andi	r2,r2,16384
   2ec30:	10000226 	beq	r2,zero,2ec3c <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
   2ec34:	00bffd44 	movi	r2,-11
   2ec38:	00000106 	br	2ec40 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   2ec3c:	00bffec4 	movi	r2,-5
}
   2ec40:	e037883a 	mov	sp,fp
   2ec44:	dfc00117 	ldw	ra,4(sp)
   2ec48:	df000017 	ldw	fp,0(sp)
   2ec4c:	dec00204 	addi	sp,sp,8
   2ec50:	f800283a 	ret

0002ec54 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   2ec54:	defff304 	addi	sp,sp,-52
   2ec58:	dfc00c15 	stw	ra,48(sp)
   2ec5c:	df000b15 	stw	fp,44(sp)
   2ec60:	df000b04 	addi	fp,sp,44
   2ec64:	e13ff815 	stw	r4,-32(fp)
   2ec68:	e17ff715 	stw	r5,-36(fp)
   2ec6c:	e1bff615 	stw	r6,-40(fp)
   2ec70:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   2ec74:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   2ec78:	e0bff717 	ldw	r2,-36(fp)
   2ec7c:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2ec80:	00003706 	br	2ed60 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   2ec84:	e0bff817 	ldw	r2,-32(fp)
   2ec88:	10800c17 	ldw	r2,48(r2)
   2ec8c:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
   2ec90:	e0bff817 	ldw	r2,-32(fp)
   2ec94:	10800d17 	ldw	r2,52(r2)
   2ec98:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
   2ec9c:	e0fffc17 	ldw	r3,-16(fp)
   2eca0:	e0bfff17 	ldw	r2,-4(fp)
   2eca4:	1880062e 	bgeu	r3,r2,2ecc0 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   2eca8:	e0ffff17 	ldw	r3,-4(fp)
   2ecac:	e0bffc17 	ldw	r2,-16(fp)
   2ecb0:	1885c83a 	sub	r2,r3,r2
   2ecb4:	10bfffc4 	addi	r2,r2,-1
   2ecb8:	e0bffe15 	stw	r2,-8(fp)
   2ecbc:	00000b06 	br	2ecec <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   2ecc0:	e0bfff17 	ldw	r2,-4(fp)
   2ecc4:	10000526 	beq	r2,zero,2ecdc <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   2ecc8:	00c20004 	movi	r3,2048
   2eccc:	e0bffc17 	ldw	r2,-16(fp)
   2ecd0:	1885c83a 	sub	r2,r3,r2
   2ecd4:	e0bffe15 	stw	r2,-8(fp)
   2ecd8:	00000406 	br	2ecec <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   2ecdc:	00c1ffc4 	movi	r3,2047
   2ece0:	e0bffc17 	ldw	r2,-16(fp)
   2ece4:	1885c83a 	sub	r2,r3,r2
   2ece8:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   2ecec:	e0bffe17 	ldw	r2,-8(fp)
   2ecf0:	10001e26 	beq	r2,zero,2ed6c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   2ecf4:	e0fff617 	ldw	r3,-40(fp)
   2ecf8:	e0bffe17 	ldw	r2,-8(fp)
   2ecfc:	1880022e 	bgeu	r3,r2,2ed08 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   2ed00:	e0bff617 	ldw	r2,-40(fp)
   2ed04:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   2ed08:	e0bff817 	ldw	r2,-32(fp)
   2ed0c:	10c20e04 	addi	r3,r2,2104
   2ed10:	e0bffc17 	ldw	r2,-16(fp)
   2ed14:	1885883a 	add	r2,r3,r2
   2ed18:	e1bffe17 	ldw	r6,-8(fp)
   2ed1c:	e17ff717 	ldw	r5,-36(fp)
   2ed20:	1009883a 	mov	r4,r2
   2ed24:	002619c0 	call	2619c <memcpy>
      ptr   += n;
   2ed28:	e0fff717 	ldw	r3,-36(fp)
   2ed2c:	e0bffe17 	ldw	r2,-8(fp)
   2ed30:	1885883a 	add	r2,r3,r2
   2ed34:	e0bff715 	stw	r2,-36(fp)
      count -= n;
   2ed38:	e0fff617 	ldw	r3,-40(fp)
   2ed3c:	e0bffe17 	ldw	r2,-8(fp)
   2ed40:	1885c83a 	sub	r2,r3,r2
   2ed44:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2ed48:	e0fffc17 	ldw	r3,-16(fp)
   2ed4c:	e0bffe17 	ldw	r2,-8(fp)
   2ed50:	1885883a 	add	r2,r3,r2
   2ed54:	10c1ffcc 	andi	r3,r2,2047
   2ed58:	e0bff817 	ldw	r2,-32(fp)
   2ed5c:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
   2ed60:	e0bff617 	ldw	r2,-40(fp)
   2ed64:	00bfc716 	blt	zero,r2,2ec84 <altera_avalon_jtag_uart_write+0x30>
   2ed68:	00000106 	br	2ed70 <altera_avalon_jtag_uart_write+0x11c>
        break;
   2ed6c:	0001883a 	nop
  NIOS2_READ_STATUS (context);
   2ed70:	0005303a 	rdctl	r2,status
   2ed74:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ed78:	e0fff917 	ldw	r3,-28(fp)
   2ed7c:	00bfff84 	movi	r2,-2
   2ed80:	1884703a 	and	r2,r3,r2
   2ed84:	1001703a 	wrctl	status,r2
  return context;
   2ed88:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   2ed8c:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2ed90:	e0bff817 	ldw	r2,-32(fp)
   2ed94:	10800817 	ldw	r2,32(r2)
   2ed98:	10c00094 	ori	r3,r2,2
   2ed9c:	e0bff817 	ldw	r2,-32(fp)
   2eda0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2eda4:	e0bff817 	ldw	r2,-32(fp)
   2eda8:	10800017 	ldw	r2,0(r2)
   2edac:	10800104 	addi	r2,r2,4
   2edb0:	1007883a 	mov	r3,r2
   2edb4:	e0bff817 	ldw	r2,-32(fp)
   2edb8:	10800817 	ldw	r2,32(r2)
   2edbc:	18800035 	stwio	r2,0(r3)
   2edc0:	e0bffb17 	ldw	r2,-20(fp)
   2edc4:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   2edc8:	e0bffa17 	ldw	r2,-24(fp)
   2edcc:	1001703a 	wrctl	status,r2
}
   2edd0:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   2edd4:	e0bff617 	ldw	r2,-40(fp)
   2edd8:	0080100e 	bge	zero,r2,2ee1c <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
   2eddc:	e0bff517 	ldw	r2,-44(fp)
   2ede0:	1090000c 	andi	r2,r2,16384
   2ede4:	1000101e 	bne	r2,zero,2ee28 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   2ede8:	0001883a 	nop
   2edec:	e0bff817 	ldw	r2,-32(fp)
   2edf0:	10800d17 	ldw	r2,52(r2)
   2edf4:	e0ffff17 	ldw	r3,-4(fp)
   2edf8:	1880051e 	bne	r3,r2,2ee10 <altera_avalon_jtag_uart_write+0x1bc>
   2edfc:	e0bff817 	ldw	r2,-32(fp)
   2ee00:	10c00917 	ldw	r3,36(r2)
   2ee04:	e0bff817 	ldw	r2,-32(fp)
   2ee08:	10800117 	ldw	r2,4(r2)
   2ee0c:	18bff736 	bltu	r3,r2,2edec <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   2ee10:	e0bff817 	ldw	r2,-32(fp)
   2ee14:	10800917 	ldw	r2,36(r2)
   2ee18:	1000051e 	bne	r2,zero,2ee30 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
   2ee1c:	e0bff617 	ldw	r2,-40(fp)
   2ee20:	00bfcf16 	blt	zero,r2,2ed60 <altera_avalon_jtag_uart_write+0x10c>
   2ee24:	00000306 	br	2ee34 <altera_avalon_jtag_uart_write+0x1e0>
        break;
   2ee28:	0001883a 	nop
   2ee2c:	00000106 	br	2ee34 <altera_avalon_jtag_uart_write+0x1e0>
         break;
   2ee30:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   2ee34:	e0fff717 	ldw	r3,-36(fp)
   2ee38:	e0bffd17 	ldw	r2,-12(fp)
   2ee3c:	18800426 	beq	r3,r2,2ee50 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
   2ee40:	e0fff717 	ldw	r3,-36(fp)
   2ee44:	e0bffd17 	ldw	r2,-12(fp)
   2ee48:	1885c83a 	sub	r2,r3,r2
   2ee4c:	00000606 	br	2ee68 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
   2ee50:	e0bff517 	ldw	r2,-44(fp)
   2ee54:	1090000c 	andi	r2,r2,16384
   2ee58:	10000226 	beq	r2,zero,2ee64 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
   2ee5c:	00bffd44 	movi	r2,-11
   2ee60:	00000106 	br	2ee68 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   2ee64:	00bffec4 	movi	r2,-5
}
   2ee68:	e037883a 	mov	sp,fp
   2ee6c:	dfc00117 	ldw	ra,4(sp)
   2ee70:	df000017 	ldw	fp,0(sp)
   2ee74:	dec00204 	addi	sp,sp,8
   2ee78:	f800283a 	ret

0002ee7c <alt_up_accelerometer_spi_open_dev>:

#include "altera_up_avalon_accelerometer_spi.h"
#include "altera_up_avalon_accelerometer_spi_regs.h"

alt_up_accelerometer_spi_dev* alt_up_accelerometer_spi_open_dev(const char* name)
{
   2ee7c:	defffc04 	addi	sp,sp,-16
   2ee80:	dfc00315 	stw	ra,12(sp)
   2ee84:	df000215 	stw	fp,8(sp)
   2ee88:	df000204 	addi	fp,sp,8
   2ee8c:	e13ffe15 	stw	r4,-8(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_accelerometer_spi_dev *dev = (alt_up_accelerometer_spi_dev*)alt_find_dev(name, &alt_dev_list);
   2ee90:	d1600b04 	addi	r5,gp,-32724
   2ee94:	e13ffe17 	ldw	r4,-8(fp)
   2ee98:	002f5480 	call	2f548 <alt_find_dev>
   2ee9c:	e0bfff15 	stw	r2,-4(fp)

  return dev;
   2eea0:	e0bfff17 	ldw	r2,-4(fp)
}
   2eea4:	e037883a 	mov	sp,fp
   2eea8:	dfc00117 	ldw	ra,4(sp)
   2eeac:	df000017 	ldw	fp,0(sp)
   2eeb0:	dec00204 	addi	sp,sp,8
   2eeb4:	f800283a 	ret

0002eeb8 <alt_up_accelerometer_spi_read_address_register>:
 * @param addr -- a pointer to the location where the read address should be stored
 *
 * @return 0 for success 
 **/
int alt_up_accelerometer_spi_read_address_register(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 *addr)
{
   2eeb8:	defffd04 	addi	sp,sp,-12
   2eebc:	df000215 	stw	fp,8(sp)
   2eec0:	df000204 	addi	fp,sp,8
   2eec4:	e13fff15 	stw	r4,-4(fp)
   2eec8:	e17ffe15 	stw	r5,-8(fp)
	// reads data from the device Address register
	*(addr) = IORD_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base); 
   2eecc:	e0bfff17 	ldw	r2,-4(fp)
   2eed0:	10800a17 	ldw	r2,40(r2)
   2eed4:	10800023 	ldbuio	r2,0(r2)
   2eed8:	10803fcc 	andi	r2,r2,255
   2eedc:	1007883a 	mov	r3,r2
   2eee0:	e0bffe17 	ldw	r2,-8(fp)
   2eee4:	10c00005 	stb	r3,0(r2)

	return 0;
   2eee8:	0005883a 	mov	r2,zero
}
   2eeec:	e037883a 	mov	sp,fp
   2eef0:	df000017 	ldw	fp,0(sp)
   2eef4:	dec00104 	addi	sp,sp,4
   2eef8:	f800283a 	ret

0002eefc <alt_up_accelerometer_spi_read>:
 * @param data -- a pointer to the location where the read data should be stored
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_read(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 *data)
{
   2eefc:	defffc04 	addi	sp,sp,-16
   2ef00:	df000315 	stw	fp,12(sp)
   2ef04:	df000304 	addi	fp,sp,12
   2ef08:	e13fff15 	stw	r4,-4(fp)
   2ef0c:	2805883a 	mov	r2,r5
   2ef10:	e1bffd15 	stw	r6,-12(fp)
   2ef14:	e0bffe05 	stb	r2,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2ef18:	e0bfff17 	ldw	r2,-4(fp)
   2ef1c:	10800a17 	ldw	r2,40(r2)
   2ef20:	1007883a 	mov	r3,r2
   2ef24:	e0bffe03 	ldbu	r2,-8(fp)
   2ef28:	10800fcc 	andi	r2,r2,63
   2ef2c:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(data) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2ef30:	e0bfff17 	ldw	r2,-4(fp)
   2ef34:	10800a17 	ldw	r2,40(r2)
   2ef38:	10800044 	addi	r2,r2,1
   2ef3c:	10800023 	ldbuio	r2,0(r2)
   2ef40:	10803fcc 	andi	r2,r2,255
   2ef44:	1007883a 	mov	r3,r2
   2ef48:	e0bffd17 	ldw	r2,-12(fp)
   2ef4c:	10c00005 	stb	r3,0(r2)

	return 0;
   2ef50:	0005883a 	mov	r2,zero
}
   2ef54:	e037883a 	mov	sp,fp
   2ef58:	df000017 	ldw	fp,0(sp)
   2ef5c:	dec00104 	addi	sp,sp,4
   2ef60:	f800283a 	ret

0002ef64 <alt_up_accelerometer_spi_write>:
 * @param data -- the data to be written
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_write(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 data)
{
   2ef64:	defffc04 	addi	sp,sp,-16
   2ef68:	df000315 	stw	fp,12(sp)
   2ef6c:	df000304 	addi	fp,sp,12
   2ef70:	e13fff15 	stw	r4,-4(fp)
   2ef74:	2805883a 	mov	r2,r5
   2ef78:	3007883a 	mov	r3,r6
   2ef7c:	e0bffe05 	stb	r2,-8(fp)
   2ef80:	1805883a 	mov	r2,r3
   2ef84:	e0bffd05 	stb	r2,-12(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2ef88:	e0bfff17 	ldw	r2,-4(fp)
   2ef8c:	10800a17 	ldw	r2,40(r2)
   2ef90:	1007883a 	mov	r3,r2
   2ef94:	e0bffe03 	ldbu	r2,-8(fp)
   2ef98:	10800fcc 	andi	r2,r2,63
   2ef9c:	18800025 	stbio	r2,0(r3)

	// write data to the device Data register
	IOWR_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base, data & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK); 
   2efa0:	e0bfff17 	ldw	r2,-4(fp)
   2efa4:	10800a17 	ldw	r2,40(r2)
   2efa8:	10800044 	addi	r2,r2,1
   2efac:	1007883a 	mov	r3,r2
   2efb0:	e0bffd03 	ldbu	r2,-12(fp)
   2efb4:	18800025 	stbio	r2,0(r3)

	return 0;
   2efb8:	0005883a 	mov	r2,zero
}
   2efbc:	e037883a 	mov	sp,fp
   2efc0:	df000017 	ldw	fp,0(sp)
   2efc4:	dec00104 	addi	sp,sp,4
   2efc8:	f800283a 	ret

0002efcc <alt_up_accelerometer_spi_read_x_axis>:
 * @param x_axis -- a pointer to the location where the x axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_x_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *x_axis)
{
   2efcc:	defffd04 	addi	sp,sp,-12
   2efd0:	df000215 	stw	fp,8(sp)
   2efd4:	df000204 	addi	fp,sp,8
   2efd8:	e13fff15 	stw	r4,-4(fp)
   2efdc:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2efe0:	e0bfff17 	ldw	r2,-4(fp)
   2efe4:	10800a17 	ldw	r2,40(r2)
   2efe8:	1007883a 	mov	r3,r2
   2efec:	00800c84 	movi	r2,50
   2eff0:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2eff4:	e0bfff17 	ldw	r2,-4(fp)
   2eff8:	10800a17 	ldw	r2,40(r2)
   2effc:	10800044 	addi	r2,r2,1
   2f000:	10800023 	ldbuio	r2,0(r2)
   2f004:	10803fcc 	andi	r2,r2,255
   2f008:	10ffffcc 	andi	r3,r2,65535
   2f00c:	e0bffe17 	ldw	r2,-8(fp)
   2f010:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f014:	e0bfff17 	ldw	r2,-4(fp)
   2f018:	10800a17 	ldw	r2,40(r2)
   2f01c:	1007883a 	mov	r3,r2
   2f020:	00800cc4 	movi	r2,51
   2f024:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   2f028:	e0bfff17 	ldw	r2,-4(fp)
   2f02c:	10800a17 	ldw	r2,40(r2)
   2f030:	10800044 	addi	r2,r2,1
   2f034:	10800023 	ldbuio	r2,0(r2)
   2f038:	10803fcc 	andi	r2,r2,255
   2f03c:	1006923a 	slli	r3,r2,8
   2f040:	00804034 	movhi	r2,256
   2f044:	10bfc004 	addi	r2,r2,-256
   2f048:	1884703a 	and	r2,r3,r2
   2f04c:	e0fffe17 	ldw	r3,-8(fp)
   2f050:	18c00017 	ldw	r3,0(r3)
   2f054:	10c5883a 	add	r2,r2,r3
   2f058:	1007883a 	mov	r3,r2
   2f05c:	e0bffe17 	ldw	r2,-8(fp)
   2f060:	10c00015 	stw	r3,0(r2)

	if (*(x_axis) & 0x00008000)
   2f064:	e0bffe17 	ldw	r2,-8(fp)
   2f068:	10800017 	ldw	r2,0(r2)
   2f06c:	10a0000c 	andi	r2,r2,32768
   2f070:	10000626 	beq	r2,zero,2f08c <alt_up_accelerometer_spi_read_x_axis+0xc0>
	{
		*(x_axis) |= 0xFFFF0000;
   2f074:	e0bffe17 	ldw	r2,-8(fp)
   2f078:	10800017 	ldw	r2,0(r2)
   2f07c:	10bffff4 	orhi	r2,r2,65535
   2f080:	1007883a 	mov	r3,r2
   2f084:	e0bffe17 	ldw	r2,-8(fp)
   2f088:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   2f08c:	0005883a 	mov	r2,zero
}
   2f090:	e037883a 	mov	sp,fp
   2f094:	df000017 	ldw	fp,0(sp)
   2f098:	dec00104 	addi	sp,sp,4
   2f09c:	f800283a 	ret

0002f0a0 <alt_up_accelerometer_spi_read_y_axis>:
 * @param y_axis -- a pointer to the location where the y axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_y_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *y_axis)
{
   2f0a0:	defffd04 	addi	sp,sp,-12
   2f0a4:	df000215 	stw	fp,8(sp)
   2f0a8:	df000204 	addi	fp,sp,8
   2f0ac:	e13fff15 	stw	r4,-4(fp)
   2f0b0:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f0b4:	e0bfff17 	ldw	r2,-4(fp)
   2f0b8:	10800a17 	ldw	r2,40(r2)
   2f0bc:	1007883a 	mov	r3,r2
   2f0c0:	00800d04 	movi	r2,52
   2f0c4:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2f0c8:	e0bfff17 	ldw	r2,-4(fp)
   2f0cc:	10800a17 	ldw	r2,40(r2)
   2f0d0:	10800044 	addi	r2,r2,1
   2f0d4:	10800023 	ldbuio	r2,0(r2)
   2f0d8:	10803fcc 	andi	r2,r2,255
   2f0dc:	10ffffcc 	andi	r3,r2,65535
   2f0e0:	e0bffe17 	ldw	r2,-8(fp)
   2f0e4:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f0e8:	e0bfff17 	ldw	r2,-4(fp)
   2f0ec:	10800a17 	ldw	r2,40(r2)
   2f0f0:	1007883a 	mov	r3,r2
   2f0f4:	00800d44 	movi	r2,53
   2f0f8:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   2f0fc:	e0bfff17 	ldw	r2,-4(fp)
   2f100:	10800a17 	ldw	r2,40(r2)
   2f104:	10800044 	addi	r2,r2,1
   2f108:	10800023 	ldbuio	r2,0(r2)
   2f10c:	10803fcc 	andi	r2,r2,255
   2f110:	1006923a 	slli	r3,r2,8
   2f114:	00804034 	movhi	r2,256
   2f118:	10bfc004 	addi	r2,r2,-256
   2f11c:	1884703a 	and	r2,r3,r2
   2f120:	e0fffe17 	ldw	r3,-8(fp)
   2f124:	18c00017 	ldw	r3,0(r3)
   2f128:	10c5883a 	add	r2,r2,r3
   2f12c:	1007883a 	mov	r3,r2
   2f130:	e0bffe17 	ldw	r2,-8(fp)
   2f134:	10c00015 	stw	r3,0(r2)

	if (*(y_axis) & 0x00008000)
   2f138:	e0bffe17 	ldw	r2,-8(fp)
   2f13c:	10800017 	ldw	r2,0(r2)
   2f140:	10a0000c 	andi	r2,r2,32768
   2f144:	10000626 	beq	r2,zero,2f160 <alt_up_accelerometer_spi_read_y_axis+0xc0>
	{
		*(y_axis) |= 0xFFFF0000;
   2f148:	e0bffe17 	ldw	r2,-8(fp)
   2f14c:	10800017 	ldw	r2,0(r2)
   2f150:	10bffff4 	orhi	r2,r2,65535
   2f154:	1007883a 	mov	r3,r2
   2f158:	e0bffe17 	ldw	r2,-8(fp)
   2f15c:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   2f160:	0005883a 	mov	r2,zero
}
   2f164:	e037883a 	mov	sp,fp
   2f168:	df000017 	ldw	fp,0(sp)
   2f16c:	dec00104 	addi	sp,sp,4
   2f170:	f800283a 	ret

0002f174 <alt_up_accelerometer_spi_read_z_axis>:
 * @param z_axis -- a pointer to the location where the z axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_z_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *z_axis)
{
   2f174:	defffd04 	addi	sp,sp,-12
   2f178:	df000215 	stw	fp,8(sp)
   2f17c:	df000204 	addi	fp,sp,8
   2f180:	e13fff15 	stw	r4,-4(fp)
   2f184:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f188:	e0bfff17 	ldw	r2,-4(fp)
   2f18c:	10800a17 	ldw	r2,40(r2)
   2f190:	1007883a 	mov	r3,r2
   2f194:	00800d84 	movi	r2,54
   2f198:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2f19c:	e0bfff17 	ldw	r2,-4(fp)
   2f1a0:	10800a17 	ldw	r2,40(r2)
   2f1a4:	10800044 	addi	r2,r2,1
   2f1a8:	10800023 	ldbuio	r2,0(r2)
   2f1ac:	10803fcc 	andi	r2,r2,255
   2f1b0:	10ffffcc 	andi	r3,r2,65535
   2f1b4:	e0bffe17 	ldw	r2,-8(fp)
   2f1b8:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f1bc:	e0bfff17 	ldw	r2,-4(fp)
   2f1c0:	10800a17 	ldw	r2,40(r2)
   2f1c4:	1007883a 	mov	r3,r2
   2f1c8:	00800dc4 	movi	r2,55
   2f1cc:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   2f1d0:	e0bfff17 	ldw	r2,-4(fp)
   2f1d4:	10800a17 	ldw	r2,40(r2)
   2f1d8:	10800044 	addi	r2,r2,1
   2f1dc:	10800023 	ldbuio	r2,0(r2)
   2f1e0:	10803fcc 	andi	r2,r2,255
   2f1e4:	1006923a 	slli	r3,r2,8
   2f1e8:	00804034 	movhi	r2,256
   2f1ec:	10bfc004 	addi	r2,r2,-256
   2f1f0:	1884703a 	and	r2,r3,r2
   2f1f4:	e0fffe17 	ldw	r3,-8(fp)
   2f1f8:	18c00017 	ldw	r3,0(r3)
   2f1fc:	10c5883a 	add	r2,r2,r3
   2f200:	1007883a 	mov	r3,r2
   2f204:	e0bffe17 	ldw	r2,-8(fp)
   2f208:	10c00015 	stw	r3,0(r2)

	if (*(z_axis) & 0x00008000)
   2f20c:	e0bffe17 	ldw	r2,-8(fp)
   2f210:	10800017 	ldw	r2,0(r2)
   2f214:	10a0000c 	andi	r2,r2,32768
   2f218:	10000626 	beq	r2,zero,2f234 <alt_up_accelerometer_spi_read_z_axis+0xc0>
	{
		*(z_axis) |= 0xFFFF0000;
   2f21c:	e0bffe17 	ldw	r2,-8(fp)
   2f220:	10800017 	ldw	r2,0(r2)
   2f224:	10bffff4 	orhi	r2,r2,65535
   2f228:	1007883a 	mov	r3,r2
   2f22c:	e0bffe17 	ldw	r2,-8(fp)
   2f230:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   2f234:	0005883a 	mov	r2,zero
}
   2f238:	e037883a 	mov	sp,fp
   2f23c:	df000017 	ldw	fp,0(sp)
   2f240:	dec00104 	addi	sp,sp,4
   2f244:	f800283a 	ret

0002f248 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   2f248:	defff504 	addi	sp,sp,-44
   2f24c:	df000a15 	stw	fp,40(sp)
   2f250:	df000a04 	addi	fp,sp,40
   2f254:	e13ff915 	stw	r4,-28(fp)
   2f258:	e17ff815 	stw	r5,-32(fp)
   2f25c:	e1bff715 	stw	r6,-36(fp)
   2f260:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   2f264:	e03fff15 	stw	zero,-4(fp)
   2f268:	d0a72a17 	ldw	r2,-25432(gp)
  
  if (alt_ticks_per_second ())
   2f26c:	10003e26 	beq	r2,zero,2f368 <alt_alarm_start+0x120>
  {
    if (alarm)
   2f270:	e0bff917 	ldw	r2,-28(fp)
   2f274:	10003a26 	beq	r2,zero,2f360 <alt_alarm_start+0x118>
    {
      alarm->callback = callback;
   2f278:	e0bff917 	ldw	r2,-28(fp)
   2f27c:	e0fff717 	ldw	r3,-36(fp)
   2f280:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   2f284:	e0bff917 	ldw	r2,-28(fp)
   2f288:	e0fff617 	ldw	r3,-40(fp)
   2f28c:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
   2f290:	0005303a 	rdctl	r2,status
   2f294:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f298:	e0fffd17 	ldw	r3,-12(fp)
   2f29c:	00bfff84 	movi	r2,-2
   2f2a0:	1884703a 	and	r2,r3,r2
   2f2a4:	1001703a 	wrctl	status,r2
  return context;
   2f2a8:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
   2f2ac:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   2f2b0:	d0a72b17 	ldw	r2,-25428(gp)
      
      current_nticks = alt_nticks();
   2f2b4:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   2f2b8:	e0fff817 	ldw	r3,-32(fp)
   2f2bc:	e0bfff17 	ldw	r2,-4(fp)
   2f2c0:	1885883a 	add	r2,r3,r2
   2f2c4:	10c00044 	addi	r3,r2,1
   2f2c8:	e0bff917 	ldw	r2,-28(fp)
   2f2cc:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   2f2d0:	e0bff917 	ldw	r2,-28(fp)
   2f2d4:	10c00217 	ldw	r3,8(r2)
   2f2d8:	e0bfff17 	ldw	r2,-4(fp)
   2f2dc:	1880042e 	bgeu	r3,r2,2f2f0 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   2f2e0:	e0bff917 	ldw	r2,-28(fp)
   2f2e4:	00c00044 	movi	r3,1
   2f2e8:	10c00405 	stb	r3,16(r2)
   2f2ec:	00000206 	br	2f2f8 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   2f2f0:	e0bff917 	ldw	r2,-28(fp)
   2f2f4:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   2f2f8:	e0bff917 	ldw	r2,-28(fp)
   2f2fc:	d0e01104 	addi	r3,gp,-32700
   2f300:	e0fffb15 	stw	r3,-20(fp)
   2f304:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2f308:	e0bffa17 	ldw	r2,-24(fp)
   2f30c:	e0fffb17 	ldw	r3,-20(fp)
   2f310:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2f314:	e0bffb17 	ldw	r2,-20(fp)
   2f318:	10c00017 	ldw	r3,0(r2)
   2f31c:	e0bffa17 	ldw	r2,-24(fp)
   2f320:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2f324:	e0bffb17 	ldw	r2,-20(fp)
   2f328:	10800017 	ldw	r2,0(r2)
   2f32c:	e0fffa17 	ldw	r3,-24(fp)
   2f330:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2f334:	e0bffb17 	ldw	r2,-20(fp)
   2f338:	e0fffa17 	ldw	r3,-24(fp)
   2f33c:	10c00015 	stw	r3,0(r2)
}
   2f340:	0001883a 	nop
   2f344:	e0bffe17 	ldw	r2,-8(fp)
   2f348:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   2f34c:	e0bffc17 	ldw	r2,-16(fp)
   2f350:	1001703a 	wrctl	status,r2
}
   2f354:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
   2f358:	0005883a 	mov	r2,zero
   2f35c:	00000306 	br	2f36c <alt_alarm_start+0x124>
    }
    else
    {
      return -EINVAL;
   2f360:	00bffa84 	movi	r2,-22
   2f364:	00000106 	br	2f36c <alt_alarm_start+0x124>
    }
  }
  else
  {
    return -ENOTSUP;
   2f368:	00bfde84 	movi	r2,-134
  }
}
   2f36c:	e037883a 	mov	sp,fp
   2f370:	df000017 	ldw	fp,0(sp)
   2f374:	dec00104 	addi	sp,sp,4
   2f378:	f800283a 	ret

0002f37c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   2f37c:	deffff04 	addi	sp,sp,-4
   2f380:	df000015 	stw	fp,0(sp)
   2f384:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   2f388:	0001883a 	nop
   2f38c:	e037883a 	mov	sp,fp
   2f390:	df000017 	ldw	fp,0(sp)
   2f394:	dec00104 	addi	sp,sp,4
   2f398:	f800283a 	ret

0002f39c <alt_get_errno>:
{
   2f39c:	defffe04 	addi	sp,sp,-8
   2f3a0:	dfc00115 	stw	ra,4(sp)
   2f3a4:	df000015 	stw	fp,0(sp)
   2f3a8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2f3ac:	d0a00e17 	ldw	r2,-32712(gp)
   2f3b0:	10000326 	beq	r2,zero,2f3c0 <alt_get_errno+0x24>
   2f3b4:	d0a00e17 	ldw	r2,-32712(gp)
   2f3b8:	103ee83a 	callr	r2
   2f3bc:	00000106 	br	2f3c4 <alt_get_errno+0x28>
   2f3c0:	d0a72404 	addi	r2,gp,-25456
}
   2f3c4:	e037883a 	mov	sp,fp
   2f3c8:	dfc00117 	ldw	ra,4(sp)
   2f3cc:	df000017 	ldw	fp,0(sp)
   2f3d0:	dec00204 	addi	sp,sp,8
   2f3d4:	f800283a 	ret

0002f3d8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   2f3d8:	defffa04 	addi	sp,sp,-24
   2f3dc:	dfc00515 	stw	ra,20(sp)
   2f3e0:	df000415 	stw	fp,16(sp)
   2f3e4:	df000404 	addi	fp,sp,16
   2f3e8:	e13ffd15 	stw	r4,-12(fp)
   2f3ec:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   2f3f0:	e0bffd17 	ldw	r2,-12(fp)
   2f3f4:	10000326 	beq	r2,zero,2f404 <alt_dev_llist_insert+0x2c>
   2f3f8:	e0bffd17 	ldw	r2,-12(fp)
   2f3fc:	10800217 	ldw	r2,8(r2)
   2f400:	1000061e 	bne	r2,zero,2f41c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   2f404:	002f39c0 	call	2f39c <alt_get_errno>
   2f408:	1007883a 	mov	r3,r2
   2f40c:	00800584 	movi	r2,22
   2f410:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   2f414:	00bffa84 	movi	r2,-22
   2f418:	00001406 	br	2f46c <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   2f41c:	e0bffd17 	ldw	r2,-12(fp)
   2f420:	e0fffc17 	ldw	r3,-16(fp)
   2f424:	e0ffff15 	stw	r3,-4(fp)
   2f428:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
   2f42c:	e0bffe17 	ldw	r2,-8(fp)
   2f430:	e0ffff17 	ldw	r3,-4(fp)
   2f434:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2f438:	e0bfff17 	ldw	r2,-4(fp)
   2f43c:	10c00017 	ldw	r3,0(r2)
   2f440:	e0bffe17 	ldw	r2,-8(fp)
   2f444:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
   2f448:	e0bfff17 	ldw	r2,-4(fp)
   2f44c:	10800017 	ldw	r2,0(r2)
   2f450:	e0fffe17 	ldw	r3,-8(fp)
   2f454:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2f458:	e0bfff17 	ldw	r2,-4(fp)
   2f45c:	e0fffe17 	ldw	r3,-8(fp)
   2f460:	10c00015 	stw	r3,0(r2)
}
   2f464:	0001883a 	nop

  return 0;  
   2f468:	0005883a 	mov	r2,zero
}
   2f46c:	e037883a 	mov	sp,fp
   2f470:	dfc00117 	ldw	ra,4(sp)
   2f474:	df000017 	ldw	fp,0(sp)
   2f478:	dec00204 	addi	sp,sp,8
   2f47c:	f800283a 	ret

0002f480 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   2f480:	defffd04 	addi	sp,sp,-12
   2f484:	dfc00215 	stw	ra,8(sp)
   2f488:	df000115 	stw	fp,4(sp)
   2f48c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2f490:	008000f4 	movhi	r2,3
   2f494:	10807504 	addi	r2,r2,468
   2f498:	e0bfff15 	stw	r2,-4(fp)
   2f49c:	00000606 	br	2f4b8 <_do_ctors+0x38>
        (*ctor) (); 
   2f4a0:	e0bfff17 	ldw	r2,-4(fp)
   2f4a4:	10800017 	ldw	r2,0(r2)
   2f4a8:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2f4ac:	e0bfff17 	ldw	r2,-4(fp)
   2f4b0:	10bfff04 	addi	r2,r2,-4
   2f4b4:	e0bfff15 	stw	r2,-4(fp)
   2f4b8:	e0ffff17 	ldw	r3,-4(fp)
   2f4bc:	008000f4 	movhi	r2,3
   2f4c0:	10807604 	addi	r2,r2,472
   2f4c4:	18bff62e 	bgeu	r3,r2,2f4a0 <_do_ctors+0x20>
}
   2f4c8:	0001883a 	nop
   2f4cc:	0001883a 	nop
   2f4d0:	e037883a 	mov	sp,fp
   2f4d4:	dfc00117 	ldw	ra,4(sp)
   2f4d8:	df000017 	ldw	fp,0(sp)
   2f4dc:	dec00204 	addi	sp,sp,8
   2f4e0:	f800283a 	ret

0002f4e4 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   2f4e4:	defffd04 	addi	sp,sp,-12
   2f4e8:	dfc00215 	stw	ra,8(sp)
   2f4ec:	df000115 	stw	fp,4(sp)
   2f4f0:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2f4f4:	008000f4 	movhi	r2,3
   2f4f8:	10807504 	addi	r2,r2,468
   2f4fc:	e0bfff15 	stw	r2,-4(fp)
   2f500:	00000606 	br	2f51c <_do_dtors+0x38>
        (*dtor) (); 
   2f504:	e0bfff17 	ldw	r2,-4(fp)
   2f508:	10800017 	ldw	r2,0(r2)
   2f50c:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2f510:	e0bfff17 	ldw	r2,-4(fp)
   2f514:	10bfff04 	addi	r2,r2,-4
   2f518:	e0bfff15 	stw	r2,-4(fp)
   2f51c:	e0ffff17 	ldw	r3,-4(fp)
   2f520:	008000f4 	movhi	r2,3
   2f524:	10807604 	addi	r2,r2,472
   2f528:	18bff62e 	bgeu	r3,r2,2f504 <_do_dtors+0x20>
}
   2f52c:	0001883a 	nop
   2f530:	0001883a 	nop
   2f534:	e037883a 	mov	sp,fp
   2f538:	dfc00117 	ldw	ra,4(sp)
   2f53c:	df000017 	ldw	fp,0(sp)
   2f540:	dec00204 	addi	sp,sp,8
   2f544:	f800283a 	ret

0002f548 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   2f548:	defffa04 	addi	sp,sp,-24
   2f54c:	dfc00515 	stw	ra,20(sp)
   2f550:	df000415 	stw	fp,16(sp)
   2f554:	df000404 	addi	fp,sp,16
   2f558:	e13ffd15 	stw	r4,-12(fp)
   2f55c:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
   2f560:	e0bffc17 	ldw	r2,-16(fp)
   2f564:	10800017 	ldw	r2,0(r2)
   2f568:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   2f56c:	e13ffd17 	ldw	r4,-12(fp)
   2f570:	002099c0 	call	2099c <strlen>
   2f574:	10800044 	addi	r2,r2,1
   2f578:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2f57c:	00000d06 	br	2f5b4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   2f580:	e0bfff17 	ldw	r2,-4(fp)
   2f584:	10800217 	ldw	r2,8(r2)
   2f588:	e0fffe17 	ldw	r3,-8(fp)
   2f58c:	180d883a 	mov	r6,r3
   2f590:	e17ffd17 	ldw	r5,-12(fp)
   2f594:	1009883a 	mov	r4,r2
   2f598:	002ffb00 	call	2ffb0 <memcmp>
   2f59c:	1000021e 	bne	r2,zero,2f5a8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   2f5a0:	e0bfff17 	ldw	r2,-4(fp)
   2f5a4:	00000706 	br	2f5c4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   2f5a8:	e0bfff17 	ldw	r2,-4(fp)
   2f5ac:	10800017 	ldw	r2,0(r2)
   2f5b0:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
   2f5b4:	e0ffff17 	ldw	r3,-4(fp)
   2f5b8:	e0bffc17 	ldw	r2,-16(fp)
   2f5bc:	18bff01e 	bne	r3,r2,2f580 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
   2f5c0:	0005883a 	mov	r2,zero
}
   2f5c4:	e037883a 	mov	sp,fp
   2f5c8:	dfc00117 	ldw	ra,4(sp)
   2f5cc:	df000017 	ldw	fp,0(sp)
   2f5d0:	dec00204 	addi	sp,sp,8
   2f5d4:	f800283a 	ret

0002f5d8 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   2f5d8:	deffff04 	addi	sp,sp,-4
   2f5dc:	df000015 	stw	fp,0(sp)
   2f5e0:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   2f5e4:	0001883a 	nop
   2f5e8:	e037883a 	mov	sp,fp
   2f5ec:	df000017 	ldw	fp,0(sp)
   2f5f0:	dec00104 	addi	sp,sp,4
   2f5f4:	f800283a 	ret

0002f5f8 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   2f5f8:	defff904 	addi	sp,sp,-28
   2f5fc:	dfc00615 	stw	ra,24(sp)
   2f600:	df000515 	stw	fp,20(sp)
   2f604:	df000504 	addi	fp,sp,20
   2f608:	e13ffe15 	stw	r4,-8(fp)
   2f60c:	e17ffd15 	stw	r5,-12(fp)
   2f610:	e1bffc15 	stw	r6,-16(fp)
   2f614:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
   2f618:	e1bffb17 	ldw	r6,-20(fp)
   2f61c:	e17ffc17 	ldw	r5,-16(fp)
   2f620:	e13ffd17 	ldw	r4,-12(fp)
   2f624:	002f9e00 	call	2f9e0 <open>
   2f628:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
   2f62c:	e0bfff17 	ldw	r2,-4(fp)
   2f630:	10002016 	blt	r2,zero,2f6b4 <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
   2f634:	e0ffff17 	ldw	r3,-4(fp)
   2f638:	1805883a 	mov	r2,r3
   2f63c:	1085883a 	add	r2,r2,r2
   2f640:	10c5883a 	add	r2,r2,r3
   2f644:	100490ba 	slli	r2,r2,2
   2f648:	00c000f4 	movhi	r3,3
   2f64c:	10c7883a 	add	r3,r2,r3
   2f650:	18c49017 	ldw	r3,4672(r3)
   2f654:	e0bffe17 	ldw	r2,-8(fp)
   2f658:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   2f65c:	e0ffff17 	ldw	r3,-4(fp)
   2f660:	1805883a 	mov	r2,r3
   2f664:	1085883a 	add	r2,r2,r2
   2f668:	10c5883a 	add	r2,r2,r3
   2f66c:	100490ba 	slli	r2,r2,2
   2f670:	00c000f4 	movhi	r3,3
   2f674:	10c7883a 	add	r3,r2,r3
   2f678:	18c49117 	ldw	r3,4676(r3)
   2f67c:	e0bffe17 	ldw	r2,-8(fp)
   2f680:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   2f684:	e0ffff17 	ldw	r3,-4(fp)
   2f688:	1805883a 	mov	r2,r3
   2f68c:	1085883a 	add	r2,r2,r2
   2f690:	10c5883a 	add	r2,r2,r3
   2f694:	100490ba 	slli	r2,r2,2
   2f698:	00c000f4 	movhi	r3,3
   2f69c:	10c7883a 	add	r3,r2,r3
   2f6a0:	18c49217 	ldw	r3,4680(r3)
   2f6a4:	e0bffe17 	ldw	r2,-8(fp)
   2f6a8:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   2f6ac:	e13fff17 	ldw	r4,-4(fp)
   2f6b0:	002e0e00 	call	2e0e0 <alt_release_fd>
  }
} 
   2f6b4:	0001883a 	nop
   2f6b8:	e037883a 	mov	sp,fp
   2f6bc:	dfc00117 	ldw	ra,4(sp)
   2f6c0:	df000017 	ldw	fp,0(sp)
   2f6c4:	dec00204 	addi	sp,sp,8
   2f6c8:	f800283a 	ret

0002f6cc <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   2f6cc:	defffb04 	addi	sp,sp,-20
   2f6d0:	dfc00415 	stw	ra,16(sp)
   2f6d4:	df000315 	stw	fp,12(sp)
   2f6d8:	df000304 	addi	fp,sp,12
   2f6dc:	e13fff15 	stw	r4,-4(fp)
   2f6e0:	e17ffe15 	stw	r5,-8(fp)
   2f6e4:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   2f6e8:	01c07fc4 	movi	r7,511
   2f6ec:	01800044 	movi	r6,1
   2f6f0:	e17fff17 	ldw	r5,-4(fp)
   2f6f4:	010000f4 	movhi	r4,3
   2f6f8:	21049304 	addi	r4,r4,4684
   2f6fc:	002f5f80 	call	2f5f8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   2f700:	01c07fc4 	movi	r7,511
   2f704:	000d883a 	mov	r6,zero
   2f708:	e17ffe17 	ldw	r5,-8(fp)
   2f70c:	010000f4 	movhi	r4,3
   2f710:	21049004 	addi	r4,r4,4672
   2f714:	002f5f80 	call	2f5f8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   2f718:	01c07fc4 	movi	r7,511
   2f71c:	01800044 	movi	r6,1
   2f720:	e17ffd17 	ldw	r5,-12(fp)
   2f724:	010000f4 	movhi	r4,3
   2f728:	21049604 	addi	r4,r4,4696
   2f72c:	002f5f80 	call	2f5f8 <alt_open_fd>
}  
   2f730:	0001883a 	nop
   2f734:	e037883a 	mov	sp,fp
   2f738:	dfc00117 	ldw	ra,4(sp)
   2f73c:	df000017 	ldw	fp,0(sp)
   2f740:	dec00204 	addi	sp,sp,8
   2f744:	f800283a 	ret

0002f748 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
   2f748:	defff004 	addi	sp,sp,-64
   2f74c:	df000f15 	stw	fp,60(sp)
   2f750:	df000f04 	addi	fp,sp,60
   2f754:	e13ff315 	stw	r4,-52(fp)
   2f758:	e17ff215 	stw	r5,-56(fp)
   2f75c:	e1bff115 	stw	r6,-60(fp)
  int rc = -EINVAL;  
   2f760:	00bffa84 	movi	r2,-22
   2f764:	e0bfff15 	stw	r2,-4(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   2f768:	e0bff317 	ldw	r2,-52(fp)
   2f76c:	10800828 	cmpgeui	r2,r2,32
   2f770:	1000501e 	bne	r2,zero,2f8b4 <alt_irq_register+0x16c>
  NIOS2_READ_STATUS (context);
   2f774:	0005303a 	rdctl	r2,status
   2f778:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f77c:	e0fffd17 	ldw	r3,-12(fp)
   2f780:	00bfff84 	movi	r2,-2
   2f784:	1884703a 	and	r2,r3,r2
   2f788:	1001703a 	wrctl	status,r2
  return context;
   2f78c:	e0bffd17 	ldw	r2,-12(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
   2f790:	e0bffe15 	stw	r2,-8(fp)

    alt_irq[id].handler = handler;
   2f794:	e0bff317 	ldw	r2,-52(fp)
   2f798:	100890fa 	slli	r4,r2,3
   2f79c:	e0fff117 	ldw	r3,-60(fp)
   2f7a0:	008000f4 	movhi	r2,3
   2f7a4:	2085883a 	add	r2,r4,r2
   2f7a8:	10d04a15 	stw	r3,16680(r2)
    alt_irq[id].context = context;
   2f7ac:	e0bff317 	ldw	r2,-52(fp)
   2f7b0:	100890fa 	slli	r4,r2,3
   2f7b4:	e0fff217 	ldw	r3,-56(fp)
   2f7b8:	008000f4 	movhi	r2,3
   2f7bc:	2085883a 	add	r2,r4,r2
   2f7c0:	10d04b15 	stw	r3,16684(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   2f7c4:	e0bff117 	ldw	r2,-60(fp)
   2f7c8:	10001a26 	beq	r2,zero,2f834 <alt_irq_register+0xec>
   2f7cc:	e0bff317 	ldw	r2,-52(fp)
   2f7d0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_READ_STATUS (context);
   2f7d4:	0005303a 	rdctl	r2,status
   2f7d8:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f7dc:	e0fffb17 	ldw	r3,-20(fp)
   2f7e0:	00bfff84 	movi	r2,-2
   2f7e4:	1884703a 	and	r2,r3,r2
   2f7e8:	1001703a 	wrctl	status,r2
  return context;
   2f7ec:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2f7f0:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active |= (1 << id);
   2f7f4:	00c00044 	movi	r3,1
   2f7f8:	e0bffc17 	ldw	r2,-16(fp)
   2f7fc:	1884983a 	sll	r2,r3,r2
   2f800:	1007883a 	mov	r3,r2
   2f804:	d0a72917 	ldw	r2,-25436(gp)
   2f808:	1884b03a 	or	r2,r3,r2
   2f80c:	d0a72915 	stw	r2,-25436(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2f810:	d0a72917 	ldw	r2,-25436(gp)
   2f814:	100170fa 	wrctl	ienable,r2
   2f818:	e0bffa17 	ldw	r2,-24(fp)
   2f81c:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context);
   2f820:	e0bff917 	ldw	r2,-28(fp)
   2f824:	1001703a 	wrctl	status,r2
}
   2f828:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
   2f82c:	0005883a 	mov	r2,zero
   2f830:	00001a06 	br	2f89c <alt_irq_register+0x154>
   2f834:	e0bff317 	ldw	r2,-52(fp)
   2f838:	e0bff815 	stw	r2,-32(fp)
  NIOS2_READ_STATUS (context);
   2f83c:	0005303a 	rdctl	r2,status
   2f840:	e0bff715 	stw	r2,-36(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f844:	e0fff717 	ldw	r3,-36(fp)
   2f848:	00bfff84 	movi	r2,-2
   2f84c:	1884703a 	and	r2,r3,r2
   2f850:	1001703a 	wrctl	status,r2
  return context;
   2f854:	e0bff717 	ldw	r2,-36(fp)
  status = alt_irq_disable_all ();
   2f858:	e0bff615 	stw	r2,-40(fp)
  alt_irq_active &= ~(1 << id);
   2f85c:	00c00044 	movi	r3,1
   2f860:	e0bff817 	ldw	r2,-32(fp)
   2f864:	1884983a 	sll	r2,r3,r2
   2f868:	0084303a 	nor	r2,zero,r2
   2f86c:	1007883a 	mov	r3,r2
   2f870:	d0a72917 	ldw	r2,-25436(gp)
   2f874:	1884703a 	and	r2,r3,r2
   2f878:	d0a72915 	stw	r2,-25436(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2f87c:	d0a72917 	ldw	r2,-25436(gp)
   2f880:	100170fa 	wrctl	ienable,r2
   2f884:	e0bff617 	ldw	r2,-40(fp)
   2f888:	e0bff515 	stw	r2,-44(fp)
  NIOS2_WRITE_STATUS (context);
   2f88c:	e0bff517 	ldw	r2,-44(fp)
   2f890:	1001703a 	wrctl	status,r2
}
   2f894:	0001883a 	nop
  return 0;
   2f898:	0005883a 	mov	r2,zero
   2f89c:	e0bfff15 	stw	r2,-4(fp)
   2f8a0:	e0bffe17 	ldw	r2,-8(fp)
   2f8a4:	e0bff415 	stw	r2,-48(fp)
  NIOS2_WRITE_STATUS (context);
   2f8a8:	e0bff417 	ldw	r2,-48(fp)
   2f8ac:	1001703a 	wrctl	status,r2
}
   2f8b0:	0001883a 	nop

    alt_irq_enable_all(status);
  }
  return rc; 
   2f8b4:	e0bfff17 	ldw	r2,-4(fp)
}
   2f8b8:	e037883a 	mov	sp,fp
   2f8bc:	df000017 	ldw	fp,0(sp)
   2f8c0:	dec00104 	addi	sp,sp,4
   2f8c4:	f800283a 	ret

0002f8c8 <alt_get_errno>:
{
   2f8c8:	defffe04 	addi	sp,sp,-8
   2f8cc:	dfc00115 	stw	ra,4(sp)
   2f8d0:	df000015 	stw	fp,0(sp)
   2f8d4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2f8d8:	d0a00e17 	ldw	r2,-32712(gp)
   2f8dc:	10000326 	beq	r2,zero,2f8ec <alt_get_errno+0x24>
   2f8e0:	d0a00e17 	ldw	r2,-32712(gp)
   2f8e4:	103ee83a 	callr	r2
   2f8e8:	00000106 	br	2f8f0 <alt_get_errno+0x28>
   2f8ec:	d0a72404 	addi	r2,gp,-25456
}
   2f8f0:	e037883a 	mov	sp,fp
   2f8f4:	dfc00117 	ldw	ra,4(sp)
   2f8f8:	df000017 	ldw	fp,0(sp)
   2f8fc:	dec00204 	addi	sp,sp,8
   2f900:	f800283a 	ret

0002f904 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   2f904:	defffd04 	addi	sp,sp,-12
   2f908:	df000215 	stw	fp,8(sp)
   2f90c:	df000204 	addi	fp,sp,8
   2f910:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   2f914:	e0bffe17 	ldw	r2,-8(fp)
   2f918:	10800217 	ldw	r2,8(r2)
   2f91c:	10d00034 	orhi	r3,r2,16384
   2f920:	e0bffe17 	ldw	r2,-8(fp)
   2f924:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2f928:	e03fff15 	stw	zero,-4(fp)
   2f92c:	00002306 	br	2f9bc <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2f930:	e0ffff17 	ldw	r3,-4(fp)
   2f934:	1805883a 	mov	r2,r3
   2f938:	1085883a 	add	r2,r2,r2
   2f93c:	10c5883a 	add	r2,r2,r3
   2f940:	100490ba 	slli	r2,r2,2
   2f944:	00c000f4 	movhi	r3,3
   2f948:	10c7883a 	add	r3,r2,r3
   2f94c:	18c49017 	ldw	r3,4672(r3)
   2f950:	e0bffe17 	ldw	r2,-8(fp)
   2f954:	10800017 	ldw	r2,0(r2)
   2f958:	1880151e 	bne	r3,r2,2f9b0 <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2f95c:	e0ffff17 	ldw	r3,-4(fp)
   2f960:	1805883a 	mov	r2,r3
   2f964:	1085883a 	add	r2,r2,r2
   2f968:	10c5883a 	add	r2,r2,r3
   2f96c:	100490ba 	slli	r2,r2,2
   2f970:	00c000f4 	movhi	r3,3
   2f974:	10c7883a 	add	r3,r2,r3
   2f978:	18849217 	ldw	r2,4680(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
   2f97c:	10000c0e 	bge	r2,zero,2f9b0 <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
   2f980:	e0ffff17 	ldw	r3,-4(fp)
   2f984:	1805883a 	mov	r2,r3
   2f988:	1085883a 	add	r2,r2,r2
   2f98c:	10c5883a 	add	r2,r2,r3
   2f990:	100490ba 	slli	r2,r2,2
   2f994:	00c000f4 	movhi	r3,3
   2f998:	18c49004 	addi	r3,r3,4672
   2f99c:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2f9a0:	e0fffe17 	ldw	r3,-8(fp)
   2f9a4:	18800226 	beq	r3,r2,2f9b0 <alt_file_locked+0xac>
    {
      return -EACCES;
   2f9a8:	00bffcc4 	movi	r2,-13
   2f9ac:	00000806 	br	2f9d0 <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
   2f9b0:	e0bfff17 	ldw	r2,-4(fp)
   2f9b4:	10800044 	addi	r2,r2,1
   2f9b8:	e0bfff15 	stw	r2,-4(fp)
   2f9bc:	d0a00d17 	ldw	r2,-32716(gp)
   2f9c0:	1007883a 	mov	r3,r2
   2f9c4:	e0bfff17 	ldw	r2,-4(fp)
   2f9c8:	18bfd92e 	bgeu	r3,r2,2f930 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   2f9cc:	0005883a 	mov	r2,zero
}
   2f9d0:	e037883a 	mov	sp,fp
   2f9d4:	df000017 	ldw	fp,0(sp)
   2f9d8:	dec00104 	addi	sp,sp,4
   2f9dc:	f800283a 	ret

0002f9e0 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   2f9e0:	defff604 	addi	sp,sp,-40
   2f9e4:	dfc00915 	stw	ra,36(sp)
   2f9e8:	df000815 	stw	fp,32(sp)
   2f9ec:	df000804 	addi	fp,sp,32
   2f9f0:	e13ffa15 	stw	r4,-24(fp)
   2f9f4:	e17ff915 	stw	r5,-28(fp)
   2f9f8:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   2f9fc:	00bfffc4 	movi	r2,-1
   2fa00:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
   2fa04:	00bffb44 	movi	r2,-19
   2fa08:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
   2fa0c:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   2fa10:	d1600b04 	addi	r5,gp,-32724
   2fa14:	e13ffa17 	ldw	r4,-24(fp)
   2fa18:	002f5480 	call	2f548 <alt_find_dev>
   2fa1c:	e0bfff15 	stw	r2,-4(fp)
   2fa20:	e0bfff17 	ldw	r2,-4(fp)
   2fa24:	1000051e 	bne	r2,zero,2fa3c <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   2fa28:	e13ffa17 	ldw	r4,-24(fp)
   2fa2c:	002fd100 	call	2fd10 <alt_find_file>
   2fa30:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
   2fa34:	00800044 	movi	r2,1
   2fa38:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   2fa3c:	e0bfff17 	ldw	r2,-4(fp)
   2fa40:	10002c26 	beq	r2,zero,2faf4 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
   2fa44:	e13fff17 	ldw	r4,-4(fp)
   2fa48:	002fe180 	call	2fe18 <alt_get_fd>
   2fa4c:	e0bffe15 	stw	r2,-8(fp)
   2fa50:	e0bffe17 	ldw	r2,-8(fp)
   2fa54:	1000030e 	bge	r2,zero,2fa64 <open+0x84>
    {
      status = index;
   2fa58:	e0bffe17 	ldw	r2,-8(fp)
   2fa5c:	e0bffd15 	stw	r2,-12(fp)
   2fa60:	00002606 	br	2fafc <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
   2fa64:	e0fffe17 	ldw	r3,-8(fp)
   2fa68:	1805883a 	mov	r2,r3
   2fa6c:	1085883a 	add	r2,r2,r2
   2fa70:	10c5883a 	add	r2,r2,r3
   2fa74:	100490ba 	slli	r2,r2,2
   2fa78:	00c000f4 	movhi	r3,3
   2fa7c:	18c49004 	addi	r3,r3,4672
   2fa80:	10c5883a 	add	r2,r2,r3
   2fa84:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   2fa88:	e0fff917 	ldw	r3,-28(fp)
   2fa8c:	00900034 	movhi	r2,16384
   2fa90:	10bfffc4 	addi	r2,r2,-1
   2fa94:	1886703a 	and	r3,r3,r2
   2fa98:	e0bffb17 	ldw	r2,-20(fp)
   2fa9c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   2faa0:	e0bffc17 	ldw	r2,-16(fp)
   2faa4:	1000051e 	bne	r2,zero,2fabc <open+0xdc>
   2faa8:	e13ffb17 	ldw	r4,-20(fp)
   2faac:	002f9040 	call	2f904 <alt_file_locked>
   2fab0:	e0bffd15 	stw	r2,-12(fp)
   2fab4:	e0bffd17 	ldw	r2,-12(fp)
   2fab8:	10001016 	blt	r2,zero,2fafc <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   2fabc:	e0bfff17 	ldw	r2,-4(fp)
   2fac0:	10800317 	ldw	r2,12(r2)
   2fac4:	10000826 	beq	r2,zero,2fae8 <open+0x108>
   2fac8:	e0bfff17 	ldw	r2,-4(fp)
   2facc:	10800317 	ldw	r2,12(r2)
   2fad0:	e1fff817 	ldw	r7,-32(fp)
   2fad4:	e1bff917 	ldw	r6,-28(fp)
   2fad8:	e17ffa17 	ldw	r5,-24(fp)
   2fadc:	e13ffb17 	ldw	r4,-20(fp)
   2fae0:	103ee83a 	callr	r2
   2fae4:	00000106 	br	2faec <open+0x10c>
   2fae8:	0005883a 	mov	r2,zero
   2faec:	e0bffd15 	stw	r2,-12(fp)
   2faf0:	00000206 	br	2fafc <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
   2faf4:	00bffb44 	movi	r2,-19
   2faf8:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   2fafc:	e0bffd17 	ldw	r2,-12(fp)
   2fb00:	1000090e 	bge	r2,zero,2fb28 <open+0x148>
  {
    alt_release_fd (index);  
   2fb04:	e13ffe17 	ldw	r4,-8(fp)
   2fb08:	002e0e00 	call	2e0e0 <alt_release_fd>
    ALT_ERRNO = -status;
   2fb0c:	002f8c80 	call	2f8c8 <alt_get_errno>
   2fb10:	1007883a 	mov	r3,r2
   2fb14:	e0bffd17 	ldw	r2,-12(fp)
   2fb18:	0085c83a 	sub	r2,zero,r2
   2fb1c:	18800015 	stw	r2,0(r3)
    return -1;
   2fb20:	00bfffc4 	movi	r2,-1
   2fb24:	00000106 	br	2fb2c <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
   2fb28:	e0bffe17 	ldw	r2,-8(fp)
}
   2fb2c:	e037883a 	mov	sp,fp
   2fb30:	dfc00117 	ldw	ra,4(sp)
   2fb34:	df000017 	ldw	fp,0(sp)
   2fb38:	dec00204 	addi	sp,sp,8
   2fb3c:	f800283a 	ret

0002fb40 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   2fb40:	defffa04 	addi	sp,sp,-24
   2fb44:	df000515 	stw	fp,20(sp)
   2fb48:	df000504 	addi	fp,sp,20
   2fb4c:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
   2fb50:	0005303a 	rdctl	r2,status
   2fb54:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2fb58:	e0fffc17 	ldw	r3,-16(fp)
   2fb5c:	00bfff84 	movi	r2,-2
   2fb60:	1884703a 	and	r2,r3,r2
   2fb64:	1001703a 	wrctl	status,r2
  return context;
   2fb68:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   2fb6c:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
   2fb70:	e0bffb17 	ldw	r2,-20(fp)
   2fb74:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   2fb78:	e0bffd17 	ldw	r2,-12(fp)
   2fb7c:	10800017 	ldw	r2,0(r2)
   2fb80:	e0fffd17 	ldw	r3,-12(fp)
   2fb84:	18c00117 	ldw	r3,4(r3)
   2fb88:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   2fb8c:	e0bffd17 	ldw	r2,-12(fp)
   2fb90:	10800117 	ldw	r2,4(r2)
   2fb94:	e0fffd17 	ldw	r3,-12(fp)
   2fb98:	18c00017 	ldw	r3,0(r3)
   2fb9c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   2fba0:	e0bffd17 	ldw	r2,-12(fp)
   2fba4:	e0fffd17 	ldw	r3,-12(fp)
   2fba8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   2fbac:	e0bffd17 	ldw	r2,-12(fp)
   2fbb0:	e0fffd17 	ldw	r3,-12(fp)
   2fbb4:	10c00015 	stw	r3,0(r2)
} 
   2fbb8:	0001883a 	nop
   2fbbc:	e0bfff17 	ldw	r2,-4(fp)
   2fbc0:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   2fbc4:	e0bffe17 	ldw	r2,-8(fp)
   2fbc8:	1001703a 	wrctl	status,r2
}
   2fbcc:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
   2fbd0:	0001883a 	nop
   2fbd4:	e037883a 	mov	sp,fp
   2fbd8:	df000017 	ldw	fp,0(sp)
   2fbdc:	dec00104 	addi	sp,sp,4
   2fbe0:	f800283a 	ret

0002fbe4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   2fbe4:	defffb04 	addi	sp,sp,-20
   2fbe8:	dfc00415 	stw	ra,16(sp)
   2fbec:	df000315 	stw	fp,12(sp)
   2fbf0:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   2fbf4:	d0a01117 	ldw	r2,-32700(gp)
   2fbf8:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   2fbfc:	d0a72b17 	ldw	r2,-25428(gp)
   2fc00:	10800044 	addi	r2,r2,1
   2fc04:	d0a72b15 	stw	r2,-25428(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2fc08:	00002e06 	br	2fcc4 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   2fc0c:	e0bfff17 	ldw	r2,-4(fp)
   2fc10:	10800017 	ldw	r2,0(r2)
   2fc14:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   2fc18:	e0bfff17 	ldw	r2,-4(fp)
   2fc1c:	10800403 	ldbu	r2,16(r2)
   2fc20:	10803fcc 	andi	r2,r2,255
   2fc24:	10000426 	beq	r2,zero,2fc38 <alt_tick+0x54>
   2fc28:	d0a72b17 	ldw	r2,-25428(gp)
   2fc2c:	1000021e 	bne	r2,zero,2fc38 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   2fc30:	e0bfff17 	ldw	r2,-4(fp)
   2fc34:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   2fc38:	e0bfff17 	ldw	r2,-4(fp)
   2fc3c:	10800217 	ldw	r2,8(r2)
   2fc40:	d0e72b17 	ldw	r3,-25428(gp)
   2fc44:	18801d36 	bltu	r3,r2,2fcbc <alt_tick+0xd8>
   2fc48:	e0bfff17 	ldw	r2,-4(fp)
   2fc4c:	10800403 	ldbu	r2,16(r2)
   2fc50:	10803fcc 	andi	r2,r2,255
   2fc54:	1000191e 	bne	r2,zero,2fcbc <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   2fc58:	e0bfff17 	ldw	r2,-4(fp)
   2fc5c:	10800317 	ldw	r2,12(r2)
   2fc60:	e0ffff17 	ldw	r3,-4(fp)
   2fc64:	18c00517 	ldw	r3,20(r3)
   2fc68:	1809883a 	mov	r4,r3
   2fc6c:	103ee83a 	callr	r2
   2fc70:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   2fc74:	e0bffd17 	ldw	r2,-12(fp)
   2fc78:	1000031e 	bne	r2,zero,2fc88 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   2fc7c:	e13fff17 	ldw	r4,-4(fp)
   2fc80:	002fb400 	call	2fb40 <alt_alarm_stop>
   2fc84:	00000d06 	br	2fcbc <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   2fc88:	e0bfff17 	ldw	r2,-4(fp)
   2fc8c:	10c00217 	ldw	r3,8(r2)
   2fc90:	e0bffd17 	ldw	r2,-12(fp)
   2fc94:	1887883a 	add	r3,r3,r2
   2fc98:	e0bfff17 	ldw	r2,-4(fp)
   2fc9c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   2fca0:	e0bfff17 	ldw	r2,-4(fp)
   2fca4:	10c00217 	ldw	r3,8(r2)
   2fca8:	d0a72b17 	ldw	r2,-25428(gp)
   2fcac:	1880032e 	bgeu	r3,r2,2fcbc <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   2fcb0:	e0bfff17 	ldw	r2,-4(fp)
   2fcb4:	00c00044 	movi	r3,1
   2fcb8:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   2fcbc:	e0bffe17 	ldw	r2,-8(fp)
   2fcc0:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
   2fcc4:	e0ffff17 	ldw	r3,-4(fp)
   2fcc8:	d0a01104 	addi	r2,gp,-32700
   2fccc:	18bfcf1e 	bne	r3,r2,2fc0c <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   2fcd0:	0001883a 	nop
}
   2fcd4:	0001883a 	nop
   2fcd8:	e037883a 	mov	sp,fp
   2fcdc:	dfc00117 	ldw	ra,4(sp)
   2fce0:	df000017 	ldw	fp,0(sp)
   2fce4:	dec00204 	addi	sp,sp,8
   2fce8:	f800283a 	ret

0002fcec <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   2fcec:	deffff04 	addi	sp,sp,-4
   2fcf0:	df000015 	stw	fp,0(sp)
   2fcf4:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   2fcf8:	000170fa 	wrctl	ienable,zero
}
   2fcfc:	0001883a 	nop
   2fd00:	e037883a 	mov	sp,fp
   2fd04:	df000017 	ldw	fp,0(sp)
   2fd08:	dec00104 	addi	sp,sp,4
   2fd0c:	f800283a 	ret

0002fd10 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   2fd10:	defffb04 	addi	sp,sp,-20
   2fd14:	dfc00415 	stw	ra,16(sp)
   2fd18:	df000315 	stw	fp,12(sp)
   2fd1c:	df000304 	addi	fp,sp,12
   2fd20:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   2fd24:	d0a00917 	ldw	r2,-32732(gp)
   2fd28:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2fd2c:	00003106 	br	2fdf4 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   2fd30:	e0bfff17 	ldw	r2,-4(fp)
   2fd34:	10800217 	ldw	r2,8(r2)
   2fd38:	1009883a 	mov	r4,r2
   2fd3c:	002099c0 	call	2099c <strlen>
   2fd40:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   2fd44:	e0bfff17 	ldw	r2,-4(fp)
   2fd48:	10c00217 	ldw	r3,8(r2)
   2fd4c:	e0bffe17 	ldw	r2,-8(fp)
   2fd50:	10bfffc4 	addi	r2,r2,-1
   2fd54:	1885883a 	add	r2,r3,r2
   2fd58:	10800003 	ldbu	r2,0(r2)
   2fd5c:	10803fcc 	andi	r2,r2,255
   2fd60:	1080201c 	xori	r2,r2,128
   2fd64:	10bfe004 	addi	r2,r2,-128
   2fd68:	10800bd8 	cmpnei	r2,r2,47
   2fd6c:	1000031e 	bne	r2,zero,2fd7c <alt_find_file+0x6c>
    {
      len -= 1;
   2fd70:	e0bffe17 	ldw	r2,-8(fp)
   2fd74:	10bfffc4 	addi	r2,r2,-1
   2fd78:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2fd7c:	e0bffe17 	ldw	r2,-8(fp)
   2fd80:	e0fffd17 	ldw	r3,-12(fp)
   2fd84:	1885883a 	add	r2,r3,r2
   2fd88:	10800003 	ldbu	r2,0(r2)
   2fd8c:	10803fcc 	andi	r2,r2,255
   2fd90:	1080201c 	xori	r2,r2,128
   2fd94:	10bfe004 	addi	r2,r2,-128
   2fd98:	10800be0 	cmpeqi	r2,r2,47
   2fd9c:	1000081e 	bne	r2,zero,2fdc0 <alt_find_file+0xb0>
   2fda0:	e0bffe17 	ldw	r2,-8(fp)
   2fda4:	e0fffd17 	ldw	r3,-12(fp)
   2fda8:	1885883a 	add	r2,r3,r2
   2fdac:	10800003 	ldbu	r2,0(r2)
   2fdb0:	10803fcc 	andi	r2,r2,255
   2fdb4:	1080201c 	xori	r2,r2,128
   2fdb8:	10bfe004 	addi	r2,r2,-128
   2fdbc:	10000a1e 	bne	r2,zero,2fde8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   2fdc0:	e0bfff17 	ldw	r2,-4(fp)
   2fdc4:	10800217 	ldw	r2,8(r2)
   2fdc8:	e0fffe17 	ldw	r3,-8(fp)
   2fdcc:	180d883a 	mov	r6,r3
   2fdd0:	e17ffd17 	ldw	r5,-12(fp)
   2fdd4:	1009883a 	mov	r4,r2
   2fdd8:	002ffb00 	call	2ffb0 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
   2fddc:	1000021e 	bne	r2,zero,2fde8 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
   2fde0:	e0bfff17 	ldw	r2,-4(fp)
   2fde4:	00000706 	br	2fe04 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   2fde8:	e0bfff17 	ldw	r2,-4(fp)
   2fdec:	10800017 	ldw	r2,0(r2)
   2fdf0:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
   2fdf4:	e0ffff17 	ldw	r3,-4(fp)
   2fdf8:	d0a00904 	addi	r2,gp,-32732
   2fdfc:	18bfcc1e 	bne	r3,r2,2fd30 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
   2fe00:	0005883a 	mov	r2,zero
}
   2fe04:	e037883a 	mov	sp,fp
   2fe08:	dfc00117 	ldw	ra,4(sp)
   2fe0c:	df000017 	ldw	fp,0(sp)
   2fe10:	dec00204 	addi	sp,sp,8
   2fe14:	f800283a 	ret

0002fe18 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   2fe18:	defffc04 	addi	sp,sp,-16
   2fe1c:	df000315 	stw	fp,12(sp)
   2fe20:	df000304 	addi	fp,sp,12
   2fe24:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
   2fe28:	00bffa04 	movi	r2,-24
   2fe2c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2fe30:	e03fff15 	stw	zero,-4(fp)
   2fe34:	00001d06 	br	2feac <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
   2fe38:	e0ffff17 	ldw	r3,-4(fp)
   2fe3c:	1805883a 	mov	r2,r3
   2fe40:	1085883a 	add	r2,r2,r2
   2fe44:	10c5883a 	add	r2,r2,r3
   2fe48:	100490ba 	slli	r2,r2,2
   2fe4c:	00c000f4 	movhi	r3,3
   2fe50:	10c7883a 	add	r3,r2,r3
   2fe54:	18849017 	ldw	r2,4672(r3)
   2fe58:	1000111e 	bne	r2,zero,2fea0 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
   2fe5c:	e0ffff17 	ldw	r3,-4(fp)
   2fe60:	1805883a 	mov	r2,r3
   2fe64:	1085883a 	add	r2,r2,r2
   2fe68:	10c5883a 	add	r2,r2,r3
   2fe6c:	100490ba 	slli	r2,r2,2
   2fe70:	e13ffd17 	ldw	r4,-12(fp)
   2fe74:	00c000f4 	movhi	r3,3
   2fe78:	10c7883a 	add	r3,r2,r3
   2fe7c:	19049015 	stw	r4,4672(r3)
      if (i > alt_max_fd)
   2fe80:	d0e00d17 	ldw	r3,-32716(gp)
   2fe84:	e0bfff17 	ldw	r2,-4(fp)
   2fe88:	1880020e 	bge	r3,r2,2fe94 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
   2fe8c:	e0bfff17 	ldw	r2,-4(fp)
   2fe90:	d0a00d15 	stw	r2,-32716(gp)
      }
      rc = i;
   2fe94:	e0bfff17 	ldw	r2,-4(fp)
   2fe98:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   2fe9c:	00000706 	br	2febc <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
   2fea0:	e0bfff17 	ldw	r2,-4(fp)
   2fea4:	10800044 	addi	r2,r2,1
   2fea8:	e0bfff15 	stw	r2,-4(fp)
   2feac:	e0bfff17 	ldw	r2,-4(fp)
   2feb0:	10800810 	cmplti	r2,r2,32
   2feb4:	103fe01e 	bne	r2,zero,2fe38 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
   2feb8:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   2febc:	e0bffe17 	ldw	r2,-8(fp)
}
   2fec0:	e037883a 	mov	sp,fp
   2fec4:	df000017 	ldw	fp,0(sp)
   2fec8:	dec00104 	addi	sp,sp,4
   2fecc:	f800283a 	ret

0002fed0 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   2fed0:	defffe04 	addi	sp,sp,-8
   2fed4:	df000115 	stw	fp,4(sp)
   2fed8:	df000104 	addi	fp,sp,4
   2fedc:	e13fff15 	stw	r4,-4(fp)
   2fee0:	e0bfff17 	ldw	r2,-4(fp)
   2fee4:	10bffe84 	addi	r2,r2,-6
   2fee8:	10c00428 	cmpgeui	r3,r2,16
   2feec:	1800191e 	bne	r3,zero,2ff54 <alt_exception_cause_generated_bad_addr+0x84>
   2fef0:	100690ba 	slli	r3,r2,2
   2fef4:	008000f4 	movhi	r2,3
   2fef8:	1885883a 	add	r2,r3,r2
   2fefc:	10bfc117 	ldw	r2,-252(r2)
   2ff00:	1000683a 	jmp	r2
   2ff04:	0002ff44 	movi	zero,3069
   2ff08:	0002ff44 	movi	zero,3069
   2ff0c:	0002ff54 	movui	zero,3069
   2ff10:	0002ff54 	movui	zero,3069
   2ff14:	0002ff54 	movui	zero,3069
   2ff18:	0002ff44 	movi	zero,3069
   2ff1c:	0002ff4c 	andi	zero,zero,3069
   2ff20:	0002ff54 	movui	zero,3069
   2ff24:	0002ff44 	movi	zero,3069
   2ff28:	0002ff44 	movi	zero,3069
   2ff2c:	0002ff54 	movui	zero,3069
   2ff30:	0002ff44 	movi	zero,3069
   2ff34:	0002ff4c 	andi	zero,zero,3069
   2ff38:	0002ff54 	movui	zero,3069
   2ff3c:	0002ff54 	movui	zero,3069
   2ff40:	0002ff44 	movi	zero,3069
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   2ff44:	00800044 	movi	r2,1
   2ff48:	00000306 	br	2ff58 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   2ff4c:	0005883a 	mov	r2,zero
   2ff50:	00000106 	br	2ff58 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
   2ff54:	0005883a 	mov	r2,zero
  }
}
   2ff58:	e037883a 	mov	sp,fp
   2ff5c:	df000017 	ldw	fp,0(sp)
   2ff60:	dec00104 	addi	sp,sp,4
   2ff64:	f800283a 	ret

0002ff68 <atexit>:
   2ff68:	200b883a 	mov	r5,r4
   2ff6c:	000f883a 	mov	r7,zero
   2ff70:	000d883a 	mov	r6,zero
   2ff74:	0009883a 	mov	r4,zero
   2ff78:	00300281 	jmpi	30028 <__register_exitproc>

0002ff7c <exit>:
   2ff7c:	defffe04 	addi	sp,sp,-8
   2ff80:	000b883a 	mov	r5,zero
   2ff84:	dc000015 	stw	r16,0(sp)
   2ff88:	dfc00115 	stw	ra,4(sp)
   2ff8c:	2021883a 	mov	r16,r4
   2ff90:	00300b80 	call	300b8 <__call_exitprocs>
   2ff94:	008000f4 	movhi	r2,3
   2ff98:	11091817 	ldw	r4,9312(r2)
   2ff9c:	20800f17 	ldw	r2,60(r4)
   2ffa0:	10000126 	beq	r2,zero,2ffa8 <exit+0x2c>
   2ffa4:	103ee83a 	callr	r2
   2ffa8:	8009883a 	mov	r4,r16
   2ffac:	002d92c0 	call	2d92c <_exit>

0002ffb0 <memcmp>:
   2ffb0:	30800130 	cmpltui	r2,r6,4
   2ffb4:	10000b1e 	bne	r2,zero,2ffe4 <memcmp+0x34>
   2ffb8:	2144b03a 	or	r2,r4,r5
   2ffbc:	108000cc 	andi	r2,r2,3
   2ffc0:	1000171e 	bne	r2,zero,30020 <memcmp+0x70>
   2ffc4:	20c00017 	ldw	r3,0(r4)
   2ffc8:	28800017 	ldw	r2,0(r5)
   2ffcc:	1880141e 	bne	r3,r2,30020 <memcmp+0x70>
   2ffd0:	31bfff04 	addi	r6,r6,-4
   2ffd4:	30800128 	cmpgeui	r2,r6,4
   2ffd8:	21000104 	addi	r4,r4,4
   2ffdc:	29400104 	addi	r5,r5,4
   2ffe0:	103ff81e 	bne	r2,zero,2ffc4 <memcmp+0x14>
   2ffe4:	30bfffc4 	addi	r2,r6,-1
   2ffe8:	30000b26 	beq	r6,zero,30018 <memcmp+0x68>
   2ffec:	11800044 	addi	r6,r2,1
   2fff0:	298d883a 	add	r6,r5,r6
   2fff4:	00000106 	br	2fffc <memcmp+0x4c>
   2fff8:	29800726 	beq	r5,r6,30018 <memcmp+0x68>
   2fffc:	20800003 	ldbu	r2,0(r4)
   30000:	28c00003 	ldbu	r3,0(r5)
   30004:	21000044 	addi	r4,r4,1
   30008:	29400044 	addi	r5,r5,1
   3000c:	10fffa26 	beq	r2,r3,2fff8 <memcmp+0x48>
   30010:	10c5c83a 	sub	r2,r2,r3
   30014:	f800283a 	ret
   30018:	0005883a 	mov	r2,zero
   3001c:	f800283a 	ret
   30020:	30bfffc4 	addi	r2,r6,-1
   30024:	003ff106 	br	2ffec <memcmp+0x3c>

00030028 <__register_exitproc>:
   30028:	008000f4 	movhi	r2,3
   3002c:	10c91817 	ldw	r3,9312(r2)
   30030:	18805217 	ldw	r2,328(r3)
   30034:	10001726 	beq	r2,zero,30094 <__register_exitproc+0x6c>
   30038:	10c00117 	ldw	r3,4(r2)
   3003c:	1a000808 	cmpgei	r8,r3,32
   30040:	40001b1e 	bne	r8,zero,300b0 <__register_exitproc+0x88>
   30044:	20000b26 	beq	r4,zero,30074 <__register_exitproc+0x4c>
   30048:	181090ba 	slli	r8,r3,2
   3004c:	02400044 	movi	r9,1
   30050:	48d2983a 	sll	r9,r9,r3
   30054:	1211883a 	add	r8,r2,r8
   30058:	41802215 	stw	r6,136(r8)
   3005c:	11806217 	ldw	r6,392(r2)
   30060:	21000098 	cmpnei	r4,r4,2
   30064:	324cb03a 	or	r6,r6,r9
   30068:	11806215 	stw	r6,392(r2)
   3006c:	41c04215 	stw	r7,264(r8)
   30070:	20000b26 	beq	r4,zero,300a0 <__register_exitproc+0x78>
   30074:	19000084 	addi	r4,r3,2
   30078:	200890ba 	slli	r4,r4,2
   3007c:	18c00044 	addi	r3,r3,1
   30080:	10c00115 	stw	r3,4(r2)
   30084:	1105883a 	add	r2,r2,r4
   30088:	11400015 	stw	r5,0(r2)
   3008c:	0005883a 	mov	r2,zero
   30090:	f800283a 	ret
   30094:	18805304 	addi	r2,r3,332
   30098:	18805215 	stw	r2,328(r3)
   3009c:	003fe606 	br	30038 <__register_exitproc+0x10>
   300a0:	11006317 	ldw	r4,396(r2)
   300a4:	2252b03a 	or	r9,r4,r9
   300a8:	12406315 	stw	r9,396(r2)
   300ac:	003ff106 	br	30074 <__register_exitproc+0x4c>
   300b0:	00bfffc4 	movi	r2,-1
   300b4:	f800283a 	ret

000300b8 <__call_exitprocs>:
   300b8:	defff704 	addi	sp,sp,-36
   300bc:	008000f4 	movhi	r2,3
   300c0:	dcc00315 	stw	r19,12(sp)
   300c4:	14c91817 	ldw	r19,9312(r2)
   300c8:	dc800215 	stw	r18,8(sp)
   300cc:	dfc00815 	stw	ra,32(sp)
   300d0:	9c805217 	ldw	r18,328(r19)
   300d4:	ddc00715 	stw	r23,28(sp)
   300d8:	dd800615 	stw	r22,24(sp)
   300dc:	dd400515 	stw	r21,20(sp)
   300e0:	dd000415 	stw	r20,16(sp)
   300e4:	dc400115 	stw	r17,4(sp)
   300e8:	dc000015 	stw	r16,0(sp)
   300ec:	90001026 	beq	r18,zero,30130 <__call_exitprocs+0x78>
   300f0:	202b883a 	mov	r21,r4
   300f4:	282d883a 	mov	r22,r5
   300f8:	05000044 	movi	r20,1
   300fc:	94000117 	ldw	r16,4(r18)
   30100:	847fffc4 	addi	r17,r16,-1
   30104:	88000a16 	blt	r17,zero,30130 <__call_exitprocs+0x78>
   30108:	84000044 	addi	r16,r16,1
   3010c:	802090ba 	slli	r16,r16,2
   30110:	9421883a 	add	r16,r18,r16
   30114:	b0001126 	beq	r22,zero,3015c <__call_exitprocs+0xa4>
   30118:	80804017 	ldw	r2,256(r16)
   3011c:	15800f26 	beq	r2,r22,3015c <__call_exitprocs+0xa4>
   30120:	8c7fffc4 	addi	r17,r17,-1
   30124:	88bfffd8 	cmpnei	r2,r17,-1
   30128:	843fff04 	addi	r16,r16,-4
   3012c:	103ff91e 	bne	r2,zero,30114 <__call_exitprocs+0x5c>
   30130:	dfc00817 	ldw	ra,32(sp)
   30134:	ddc00717 	ldw	r23,28(sp)
   30138:	dd800617 	ldw	r22,24(sp)
   3013c:	dd400517 	ldw	r21,20(sp)
   30140:	dd000417 	ldw	r20,16(sp)
   30144:	dcc00317 	ldw	r19,12(sp)
   30148:	dc800217 	ldw	r18,8(sp)
   3014c:	dc400117 	ldw	r17,4(sp)
   30150:	dc000017 	ldw	r16,0(sp)
   30154:	dec00904 	addi	sp,sp,36
   30158:	f800283a 	ret
   3015c:	90800117 	ldw	r2,4(r18)
   30160:	81800017 	ldw	r6,0(r16)
   30164:	10bfffc4 	addi	r2,r2,-1
   30168:	14401726 	beq	r2,r17,301c8 <__call_exitprocs+0x110>
   3016c:	80000015 	stw	zero,0(r16)
   30170:	303feb26 	beq	r6,zero,30120 <__call_exitprocs+0x68>
   30174:	a446983a 	sll	r3,r20,r17
   30178:	90806217 	ldw	r2,392(r18)
   3017c:	95c00117 	ldw	r23,4(r18)
   30180:	1884703a 	and	r2,r3,r2
   30184:	1000081e 	bne	r2,zero,301a8 <__call_exitprocs+0xf0>
   30188:	303ee83a 	callr	r6
   3018c:	90c00117 	ldw	r3,4(r18)
   30190:	98805217 	ldw	r2,328(r19)
   30194:	1dc0011e 	bne	r3,r23,3019c <__call_exitprocs+0xe4>
   30198:	90bfe126 	beq	r18,r2,30120 <__call_exitprocs+0x68>
   3019c:	103fe426 	beq	r2,zero,30130 <__call_exitprocs+0x78>
   301a0:	1025883a 	mov	r18,r2
   301a4:	003fd506 	br	300fc <__call_exitprocs+0x44>
   301a8:	90806317 	ldw	r2,396(r18)
   301ac:	81002017 	ldw	r4,128(r16)
   301b0:	1886703a 	and	r3,r3,r2
   301b4:	1800061e 	bne	r3,zero,301d0 <__call_exitprocs+0x118>
   301b8:	200b883a 	mov	r5,r4
   301bc:	a809883a 	mov	r4,r21
   301c0:	303ee83a 	callr	r6
   301c4:	003ff106 	br	3018c <__call_exitprocs+0xd4>
   301c8:	94400115 	stw	r17,4(r18)
   301cc:	003fe806 	br	30170 <__call_exitprocs+0xb8>
   301d0:	303ee83a 	callr	r6
   301d4:	003fed06 	br	3018c <__call_exitprocs+0xd4>
